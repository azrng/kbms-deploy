const nt="ENTRIES",T="KEYS",V="VALUES",F="";class D{constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case V:return this.value();case T:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const a=o[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let l=0;l<c.length;++l,++a){const p=c[l],f=i*a,g=f-i;let d=o[f];const m=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<d&&(d=L)}if(d>s)continue t}W(e.get(c),t,s,n,o,a,i,r+c)}};class C{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=I(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=O(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=O(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,T)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,V)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},O=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return O(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=I(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=I(e);n.set(o+t,s),n.delete(o)},I=e=>e[e.length-1],it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",P="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},q=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,lt=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),q(n.terms,u)}}return e},[P]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);q(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},dt=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},ft={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},H={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:ft},mt={combineWith:P,prefix:(e,t,s)=>t===s.length-1},pt={batchSize:1e3,batchWait:10},J={minDirtFactor:.1,minDirtCount:20},Ft={...pt,...J};class _t{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ft:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...H,...t.searchOptions||{}},autoSuggestOptions:{...mt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=J,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const yt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},U=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},At=(e,t,s,n)=>{if(!e._index.has(n)){U(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?U(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(ht[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const a=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const d of p.keys()){if(!e._documentIds.has(d)){At(e,l,d,s),f-=1;continue}const m=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!m)continue;const y=p.get(d),_=e._fieldLength.get(d)[l],b=at(y,f,e._documentCount,_,g,r),z=n*a*m*b,A=h.get(d);if(A){A.score+=z,ct(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(d,{score:z,terms:[t],match:{[s]:[c]}})}}return h},Ct=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((d,m)=>({...d,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...H.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,m=d<1?Math.min(r,Math.round(t.term.length*d)):d;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[d,m]of f){const y=d.length-t.term.length;if(!y)continue;g==null||g.delete(d);const _=a*d.length/(d.length+.3*y);B(e,t.term,d,_,m,o,u,h,p)}if(g)for(const d of g.keys()){const[m,y]=g.get(d);if(!y)continue;const _=c*d.length/(d.length+y);B(e,t.term,d,_,m,o,u,h,p)}return p},K=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(p=>K(e,p,a));return Y(l,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(dt(i)).map(a=>Ct(e,a,i));return Y(c,i.combineWith)},X=(e,t,s={})=>{const n=K(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Et=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of X(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o},zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new _t(a);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const d of Object.keys(f)){let m=f[d];c===1&&(m=m.ds),g.set(parseInt(d,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:a?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return X(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[a,l]=u.split(/[#@]/),{contents:p}=n[a]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:a,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:a,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const d=i.map(m=>j(g,m)).filter(m=>m!==null);d.length&&p.push([{type:"text",key:a,...c&&{anchor:l},display:d},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=yt(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Et(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":1191,\"nextId\":1191,\"documentIds\":{\"0\":\"v-30a48e77\",\"1\":\"v-087b43a3\",\"2\":\"v-087b43a3#提问的智慧\",\"3\":\"v-7be5a03e\",\"4\":\"v-7be5a03e#安装gitlab-runner\",\"5\":\"v-7be5a03e#注册到gitlab\",\"6\":\"v-7be5a03e#注册群组runner\",\"7\":\"v-7be5a03e#为仓库设置单独的runner\",\"8\":\"v-7be5a03e#配置帐号\",\"9\":\"v-674f8a11\",\"10\":\"v-674f8a11#快速入门github\",\"11\":\"v-674f8a11#版本管理\",\"12\":\"v-674f8a11#svn\",\"13\":\"v-674f8a11#git\",\"14\":\"v-674f8a11#什么github\",\"15\":\"v-674f8a11#安装与配置git\",\"16\":\"v-674f8a11#安装\",\"17\":\"v-674f8a11#配置\",\"18\":\"v-674f8a11#创建账户\",\"19\":\"v-674f8a11#配置ssh\",\"20\":\"v-674f8a11#建立仓库\",\"21\":\"v-674f8a11#远程仓库\",\"22\":\"v-674f8a11#本地仓库\",\"23\":\"v-674f8a11#重要命令\",\"24\":\"v-674f8a11#分支\",\"25\":\"v-674f8a11#master分支\",\"26\":\"v-674f8a11#分支相关命令\",\"27\":\"v-674f8a11#版本回溯\",\"28\":\"v-674f8a11#git-reset详解\",\"29\":\"v-674f8a11#命令\",\"30\":\"v-674f8a11#soft\",\"31\":\"v-674f8a11#hard⚠️\",\"32\":\"v-674f8a11#head\",\"33\":\"v-674f8a11#总结\",\"34\":\"v-50ad3a2c\",\"35\":\"v-50ad3a2c#生成容器\",\"36\":\"v-50ad3a2c#docker-compose\",\"37\":\"v-50ad3a2c#docker\",\"38\":\"v-50ad3a2c#配置\",\"39\":\"v-50ad3a2c#查找密码\",\"40\":\"v-50ad3a2c#容器内修改密码\",\"41\":\"v-6009bc0c\",\"42\":\"v-6009bc0c#attributeusage\",\"43\":\"v-6009bc0c#flags\",\"44\":\"v-6009bc0c#dllimport\",\"45\":\"v-6009bc0c#serializable\",\"46\":\"v-6009bc0c#conditional\",\"47\":\"v-6009bc0c#使用\",\"48\":\"v-0c292630\",\"49\":\"v-0c292630#访问修饰符\",\"50\":\"v-0c292630#类成员\",\"51\":\"v-0c292630#方法\",\"52\":\"v-0c292630#虚方法\",\"53\":\"v-0c292630#表达式体方法\",\"54\":\"v-0c292630#重载方法\",\"55\":\"v-0c292630#按值传递和按引用传递\",\"56\":\"v-0c292630#字段\",\"57\":\"v-0c292630#字段初始化\",\"58\":\"v-0c292630#声明多个字段\",\"59\":\"v-0c292630#属性\",\"60\":\"v-0c292630#只读属性\",\"61\":\"v-0c292630#表达式属性\",\"62\":\"v-0c292630#自动属性\",\"63\":\"v-0c292630#属性初始化器\",\"64\":\"v-0c292630#属性自定义值\",\"65\":\"v-0c292630#索引器\",\"66\":\"v-0c292630#索引器的实现\",\"67\":\"v-0c292630#常量\",\"68\":\"v-0c292630#事件\",\"69\":\"v-0c292630#构造器\",\"70\":\"v-0c292630#构造器重载\",\"71\":\"v-0c292630#隐式无参数构造器\",\"72\":\"v-0c292630#对象初始化器\",\"73\":\"v-0c292630#继承\",\"74\":\"v-3d20e3e7\",\"75\":\"v-3d20e3e7#整型\",\"76\":\"v-3d20e3e7#实数\",\"77\":\"v-3d20e3e7#逻辑值-bool\",\"78\":\"v-3d20e3e7#字符-char\",\"79\":\"v-3d20e3e7#字符串-string\",\"80\":\"v-3d20e3e7#类\",\"81\":\"v-3d20e3e7#数组\",\"82\":\"v-3d20e3e7#接口\",\"83\":\"v-3d20e3e7#委托\",\"84\":\"v-1527c44b\",\"85\":\"v-1527c44b#_1-基本了解\",\"86\":\"v-1527c44b#_1-1-反射概述\",\"87\":\"v-1527c44b#_1-2-反射用途\",\"88\":\"v-1527c44b#_1-3-反射常用类\",\"89\":\"v-1527c44b#_2-assembly-程序集对象\",\"90\":\"v-1527c44b#_2-1-对象简介\",\"91\":\"v-1527c44b#_2-2-应用程序结构\",\"92\":\"v-1527c44b#_2-3-静态方法\",\"93\":\"v-1527c44b#_2-4-实例方法-属性\",\"94\":\"v-1527c44b#_2-5-示例-加载程序集\",\"95\":\"v-1527c44b#_2-6-获取类型\",\"96\":\"v-1527c44b#_3-type-类型\",\"97\":\"v-1527c44b#_3-1-实例属性-方法\",\"98\":\"v-1527c44b#_3-2-操作示例一\",\"99\":\"v-1527c44b#_3-3-示例二-获取公共方法\",\"100\":\"v-1527c44b#_3-4-示例三-获取静态方法\",\"101\":\"v-1527c44b#_3-5-示例四-获取泛型方法\",\"102\":\"v-1527c44b#_3-6-示例五-获取特性\",\"103\":\"v-1527c44b#_4-methodinfo-方法\",\"104\":\"v-1527c44b#_4-1-实例属性-方法\",\"105\":\"v-1527c44b#_4-2-操作示例一\",\"106\":\"v-1527c44b#_4-3-操作示例二\",\"107\":\"v-1527c44b#_5-constructorinfo-构造函数\",\"108\":\"v-1527c44b#_5-1-实例属性-方法\",\"109\":\"v-1527c44b#_5-2-操作实例一\",\"110\":\"v-1527c44b#_6-propertyinfo-属性\",\"111\":\"v-1527c44b#_6-1-实例属性-方法\",\"112\":\"v-1527c44b#_6-2-操作实例一\",\"113\":\"v-1527c44b#_7-fieldinfo-字段\",\"114\":\"v-1527c44b#_7-1-实例属性-方法\",\"115\":\"v-1527c44b#_7-2-操作实例一\",\"116\":\"v-1527c44b#_8-扩展补充\",\"117\":\"v-1527c44b#_8-1-加载程序集\",\"118\":\"v-1527c44b#_8-2-module-程序集模块\",\"119\":\"v-1527c44b#_8-3-bindingflags说明\",\"120\":\"v-1527c44b#_8-4-属性应用-orm\",\"121\":\"v-1527c44b#转载说明\",\"122\":\"v-5030844c\",\"123\":\"v-5030844c#英文排序\",\"124\":\"v-5030844c#汉字排序\",\"125\":\"v-5030844c#自定义排序\",\"126\":\"v-9a2037ec\",\"127\":\"v-9a2037ec#隐式转换\",\"128\":\"v-9a2037ec#显示转换\",\"129\":\"v-9a2037ec#parse-tryparse-convert\",\"130\":\"v-9a2037ec#as\",\"131\":\"v-9a2037ec#is\",\"132\":\"v-e19c3460\",\"133\":\"v-e19c3460#工具网站\",\"134\":\"v-9a42fce6\",\"135\":\"v-68d01936\",\"136\":\"v-68d01936#博客\",\"137\":\"v-68d01936#视频\",\"138\":\"v-68d01936#实验\",\"139\":\"v-68d01936#net-framework-是什么\",\"140\":\"v-68d01936#net-core-是什么\",\"141\":\"v-68d01936#net-standard-是什么\",\"142\":\"v-0d9d67fb\",\"143\":\"v-0d9d67fb#注入容器\",\"144\":\"v-0d9d67fb#启用配置\",\"145\":\"v-0d9d67fb#语言配置文件\",\"146\":\"v-0d9d67fb#http报文\",\"147\":\"v-0d9d67fb#cookie\",\"148\":\"v-0d9d67fb#url参数\",\"149\":\"v-a34b7a60\",\"150\":\"v-a34b7a60#_2-1-基本使用\",\"151\":\"v-a34b7a60#_2-2-目的性检查\",\"152\":\"v-a34b7a60#_3-1-介绍\",\"153\":\"v-a34b7a60#_3-2-基本使用\",\"154\":\"v-1d6d0009\",\"155\":\"v-1d6d0009#操作\",\"156\":\"v-96fb1014\",\"157\":\"v-96fb1014#获取终结点\",\"158\":\"v-96fb1014#配置终结点委托\",\"159\":\"v-96fb1014#路由模板\",\"160\":\"v-96fb1014#catch-all参数\",\"161\":\"v-96fb1014#复杂段\",\"162\":\"v-96fb1014#路由约束\",\"163\":\"v-96fb1014#正则表达式路由约束\",\"164\":\"v-96fb1014#自定义路由约束\",\"165\":\"v-96fb1014#路由模板优先级\",\"166\":\"v-96fb1014#userouting\",\"167\":\"v-96fb1014#endpointroutingmiddleware\",\"168\":\"v-96fb1014#endpointmiddleware\",\"169\":\"v-359d20c1\",\"170\":\"v-359d20c1#dotpeek\",\"171\":\"v-359d20c1#ilspy\",\"172\":\"v-359d20c1#dnspy\",\"173\":\"v-359d20c1#dnspy-1\",\"174\":\"v-359d20c1#dottrace\",\"175\":\"v-359d20c1#fiddler\",\"176\":\"v-83a9c24e\",\"177\":\"v-83a9c24e#_1-1-个人照片\",\"178\":\"v-83a9c24e#_1-2-基本信息\",\"179\":\"v-83a9c24e#_1-3-自我评价\",\"180\":\"v-83a9c24e#_1-4-技能水平\",\"181\":\"v-83a9c24e#_1-5-项目经历\",\"182\":\"v-83a9c24e#_1-6-简历模板\",\"183\":\"v-83a9c24e#_1-7-其他\",\"184\":\"v-83a9c24e#_2-1-最基本的\",\"185\":\"v-83a9c24e#_2-2-自我介绍\",\"186\":\"v-83a9c24e#_2-3-别不懂装懂\",\"187\":\"v-83a9c24e#_2-4-为什么从-xx-公司离职\",\"188\":\"v-83a9c24e#_2-5-能接受加班吗\",\"189\":\"v-83a9c24e#_2-6-你的缺点是什么\",\"190\":\"v-83a9c24e#_2-7-你有职业规划吗\",\"191\":\"v-83a9c24e#_2-8-你有什么想问的吗\",\"192\":\"v-83a9c24e#_2-9-面试是骗你帮他们解决问题\",\"193\":\"v-83a9c24e#_2-10-面试是为了从你口中套取机密\",\"194\":\"v-83a9c24e#_2-11-培训机构以招聘的名义变相招生\",\"195\":\"v-83a9c24e#_3-1-最基本的\",\"196\":\"v-83a9c24e#_3-2-提前了解行情\",\"197\":\"v-83a9c24e#_3-3-我要多少合适\",\"198\":\"v-83a9c24e#_3-4-该坚持就坚持\",\"199\":\"v-83a9c24e#_3-5-月薪是不是分基本工资和绩效\",\"200\":\"v-83a9c24e#_3-6-写到合同里\",\"201\":\"v-83a9c24e#_3-7-谈好之后-不要再涨价\",\"202\":\"v-78450748\",\"203\":\"v-2817f684\",\"204\":\"v-3c5f8503\",\"205\":\"v-262113ae\",\"206\":\"v-0b13f184\",\"207\":\"v-2e294174\",\"208\":\"v-57a6b598\",\"209\":\"v-791b0205\",\"210\":\"v-9842d37a\",\"211\":\"v-606defc6\",\"212\":\"v-606defc6#_3-1-访问\",\"213\":\"v-606defc6#_3-2-推送\",\"214\":\"v-606defc6#_3-3-引用包\",\"215\":\"v-48574f84\",\"216\":\"v-2bc96a98\",\"217\":\"v-2bc96a98#自己搭建mongo\",\"218\":\"v-2bc96a98#开箱即用版本\",\"219\":\"v-2bc96a98#登录\",\"220\":\"v-2bc96a98#用户管理\",\"221\":\"v-2bc96a98#查看用户\",\"222\":\"v-2bc96a98#添加用户\",\"223\":\"v-2bc96a98#个人项目\",\"224\":\"v-2bc96a98#创建\",\"225\":\"v-2bc96a98#展示个人项目\",\"226\":\"v-2bc96a98#分组\",\"227\":\"v-2bc96a98#创建分组\",\"228\":\"v-2bc96a98#分组成员\",\"229\":\"v-2bc96a98#分组动态\",\"230\":\"v-2bc96a98#添加接口\",\"231\":\"v-2bc96a98#修改接口\",\"232\":\"v-2bc96a98#创建项目\",\"233\":\"v-2bc96a98#yapi配置\",\"234\":\"v-2bc96a98#查看同步数据\",\"235\":\"v-2bc96a98#数据管理\",\"236\":\"v-2bc96a98#数据导出导入\",\"237\":\"v-2bc96a98#导出预览\",\"238\":\"v-7c001cbc\",\"239\":\"v-7c001cbc#介绍-1\",\"240\":\"v-7c001cbc#使用场景\",\"241\":\"v-7c001cbc#资料\",\"242\":\"v-7c001cbc#参考文档\",\"243\":\"v-965f188a\",\"244\":\"v-a927cb9e\",\"245\":\"v-a927cb9e#部署软件\",\"246\":\"v-a927cb9e#插件\",\"247\":\"v-b0dd52f4\",\"248\":\"v-b0dd52f4#gpl\",\"249\":\"v-b0dd52f4#lgpl\",\"250\":\"v-b0dd52f4#mpl\",\"251\":\"v-b0dd52f4#apache-licence-2-0\",\"252\":\"v-b0dd52f4#bsd\",\"253\":\"v-b0dd52f4#mit\",\"254\":\"v-abf5ad6c\",\"255\":\"v-abf5ad6c#颜色模式常用\",\"256\":\"v-abf5ad6c#暂存盘设置\",\"257\":\"v-5d2f3276\",\"258\":\"v-5d2f3276#必应\",\"259\":\"v-5d2f3276#百度搜索\",\"260\":\"v-82ac6d78\",\"261\":\"v-82ac6d78#_1-1-系统激活\",\"262\":\"v-82ac6d78#_1-1-1-神龙激活器\",\"263\":\"v-82ac6d78#_1-2-火绒弹框拦截\",\"264\":\"v-82ac6d78#_1-3-spacesniffer\",\"265\":\"v-82ac6d78#_1-4-文件夹隐藏助手\",\"266\":\"v-82ac6d78#_1-5-装机工具\",\"267\":\"v-82ac6d78#_1-5-1-微pe\",\"268\":\"v-82ac6d78#_1-5-2-优启通\",\"269\":\"v-82ac6d78#_1-6-系统下载\",\"270\":\"v-82ac6d78#_1-6-1-fido\",\"271\":\"v-82ac6d78#_1-7-硬件工具箱\",\"272\":\"v-82ac6d78#_1-7-1-图吧工具箱\",\"273\":\"v-82ac6d78#_2-1-腾讯桌面整理\",\"274\":\"v-82ac6d78#_2-2-maya\",\"275\":\"v-82ac6d78#_2-3-translucenttb\",\"276\":\"v-82ac6d78#_2-4-火雨桌面壁纸\",\"277\":\"v-82ac6d78#_3-1-命令行\",\"278\":\"v-82ac6d78#_3-1-1-cmder\",\"279\":\"v-82ac6d78#_3-2-操作linux\",\"280\":\"v-82ac6d78#_3-2-1-xshell\",\"281\":\"v-82ac6d78#_3-2-2-mobaxterm\",\"282\":\"v-82ac6d78#_3-3-数据库\",\"283\":\"v-82ac6d78#_3-3-1-数据库转换工具\",\"284\":\"v-82ac6d78#_4-1-convertio\",\"285\":\"v-82ac6d78#_4-2-smallpdf\",\"286\":\"v-82ac6d78#_4-3-pdfdo\",\"287\":\"v-82ac6d78#todesk\",\"288\":\"v-82ac6d78#rustdesk\",\"289\":\"v-82ac6d78#_6-1-quickerlook\",\"290\":\"v-82ac6d78#_6-2-utools\",\"291\":\"v-82ac6d78#_6-3-录屏\",\"292\":\"v-82ac6d78#_6-3-1-超级录屏\",\"293\":\"v-82ac6d78#_6-3-2-游戏录像专家\",\"294\":\"v-82ac6d78#_6-4-思维导图\",\"295\":\"v-82ac6d78#_6-4-1-draw-io\",\"296\":\"v-82ac6d78#_6-4-2-processon\",\"297\":\"v-82ac6d78#_6-5-文件同步\",\"298\":\"v-82ac6d78#_6-5-1-goodsync\",\"299\":\"v-82ac6d78#ppt插件\",\"300\":\"v-82ac6d78#islide\",\"301\":\"v-82ac6d78#视频编辑\",\"302\":\"v-82ac6d78#雀大师\",\"303\":\"v-82ac6d78#markdown\",\"304\":\"v-82ac6d78#writage\",\"305\":\"v-82ac6d78#_7-1-idm\",\"306\":\"v-82ac6d78#_7-2-qbittorrent\",\"307\":\"v-82ac6d78#_7-3-youtube-dl\",\"308\":\"v-82ac6d78#_7-4-neat-download-manager\",\"309\":\"v-82ac6d78#_8-1-todesk\",\"310\":\"v-82ac6d78#_10-1-搜狗输入法\",\"311\":\"v-82ac6d78#_10-2-卡饭输入法\",\"312\":\"v-3cf4a94c\",\"313\":\"v-3cf4a94c#系统主界面\",\"314\":\"v-3cf4a94c#计算机\",\"315\":\"v-3cf4a94c#视频播放\",\"316\":\"v-3cf4a94c#浏览器\",\"317\":\"v-3cf4a94c#日历\",\"318\":\"v-3cf4a94c#应用商店\",\"319\":\"v-3cf4a94c#设置\",\"320\":\"v-3cf4a94c#关机界面\",\"321\":\"v-0cc7b783\",\"322\":\"v-892697fa\",\"323\":\"v-1d6e2dfd\",\"324\":\"v-1d6e2dfd#tcp和http的关系\",\"325\":\"v-1d6e2dfd#https\",\"326\":\"v-1d6e2dfd#http2\",\"327\":\"v-1d6e2dfd#三次握手四次挥手\",\"328\":\"v-08f33dee\",\"329\":\"v-08f33dee#博客\",\"330\":\"v-08f33dee#基础视频\",\"331\":\"v-d3d979b2\",\"332\":\"v-d3d979b2#安装fastgithub\",\"333\":\"v-d3d979b2#修改host文件访问github\",\"334\":\"v-d3d979b2#dev-sidecar\",\"335\":\"v-d3d979b2#镜像访问\",\"336\":\"v-d3d979b2#文件加速\",\"337\":\"v-d3d979b2#加速下载\",\"338\":\"v-d3d979b2#_1-一键生成-github-简历\",\"339\":\"v-d3d979b2#_2-个性化-github-首页\",\"340\":\"v-d3d979b2#_3-自定义项目徽章\",\"341\":\"v-d3d979b2#_4-github-表情\",\"342\":\"v-85fa0194\",\"343\":\"v-85fa0194#jsonb-path-query\",\"344\":\"v-28cb1d02\",\"345\":\"v-28cb1d02#singleton-单例\",\"346\":\"v-28cb1d02#scoped-作用域\",\"347\":\"v-28cb1d02#transient-瞬时\",\"348\":\"v-28cb1d02#构造函数注入\",\"349\":\"v-28cb1d02#fromservices注入\",\"350\":\"v-28cb1d02#构造函数获取服务\",\"351\":\"v-28cb1d02#iserviceprovider获取\",\"352\":\"v-28cb1d02#configureservices中获取服务\",\"353\":\"v-28cb1d02#configure中获取服务\",\"354\":\"v-28cb1d02#构建子容器\",\"355\":\"v-28cb1d02#异步获取\",\"356\":\"v-52e455b1\",\"357\":\"v-52e455b1#登录信息保存\",\"358\":\"v-52e455b1#_1-1-信息保存\",\"359\":\"v-52e455b1#_1-2-configureservices引用中间件\",\"360\":\"v-52e455b1#_1-3-configure里面启用认证\",\"361\":\"v-52e455b1#_1-4-获取信息\",\"362\":\"v-52e455b1#_1-5-注销用户\",\"363\":\"v-52e455b1#全局获取\",\"364\":\"v-78395abf\",\"365\":\"v-bbce7a72\",\"366\":\"v-bbce7a72#_1-简单使用\",\"367\":\"v-bbce7a72#_2-封装的session公共类\",\"368\":\"v-bbce7a72#_3-通过session存储用户信息\",\"369\":\"v-bbce7a72#_4-session设置\",\"370\":\"v-7ea565a8\",\"371\":\"v-7ea565a8#_1-1-简单入门\",\"372\":\"v-7ea565a8#_1-2-过期时间\",\"373\":\"v-7ea565a8#_1-2-常用配置\",\"374\":\"v-7ea565a8#_1-3-ichangetoken\",\"375\":\"v-7ea565a8#_1-3-1-监控文件\",\"376\":\"v-7ea565a8#_1-3-2-通过代码控制缓存过期\",\"377\":\"v-7ea565a8#_1-4-引用nuget包\",\"378\":\"v-7ea565a8#_2-1-描述\",\"379\":\"v-7ea565a8#_2-1-redis分布式缓存\",\"380\":\"v-7ea565a8#_2-1-1-安装redis\",\"381\":\"v-7ea565a8#_2-1-2-控制台程序\",\"382\":\"v-7ea565a8#_2-1-3-web-api\",\"383\":\"v-75cce0e4\",\"384\":\"v-75cce0e4#分布式缓存\",\"385\":\"v-75cce0e4#_1-安装redis\",\"386\":\"v-75cce0e4#_2-控制台程序\",\"387\":\"v-75cce0e4#_2-1-web-api\",\"388\":\"v-1a147397\",\"389\":\"v-1a147397#_1-说明\",\"390\":\"v-1a147397#_2-获取配置\",\"391\":\"v-1a147397#_2-1-获取单个项\",\"392\":\"v-1a147397#_2-1-1-getvalue\",\"393\":\"v-1a147397#_2-1-2-getsection\",\"394\":\"v-1a147397#_2-1-3-getchildren-和-exists\",\"395\":\"v-1a147397#_2-2-映射项到强类型对象\",\"396\":\"v-1a147397#_2-2-1-映射项到模型类\",\"397\":\"v-1a147397#_2-2-2-注入模型类\",\"398\":\"v-1a147397#_2-2-3-使用\",\"399\":\"v-64e6b174\",\"400\":\"v-64e6b174#作用范围\",\"401\":\"v-64e6b174#authorization-filter\",\"402\":\"v-64e6b174#resource-filter\",\"403\":\"v-64e6b174#action-filter\",\"404\":\"v-64e6b174#exception-filter\",\"405\":\"v-64e6b174#result-filter\",\"406\":\"v-64e6b174#action注册方式\",\"407\":\"v-64e6b174#controller注册方式\",\"408\":\"v-64e6b174#全局注册方式\",\"409\":\"v-64e6b174#servicefilterattribute\",\"410\":\"v-64e6b174#typefilterattribute\",\"411\":\"v-356b9757\",\"412\":\"v-356b9757#目的\",\"413\":\"v-356b9757#操作\",\"414\":\"v-356b9757#总结\",\"415\":\"v-356b9757#目的-1\",\"416\":\"v-356b9757#操作-1\",\"417\":\"v-356b9757#目的-2\",\"418\":\"v-356b9757#操作-2\",\"419\":\"v-356b9757#总结-1\",\"420\":\"v-356b9757#目的-3\",\"421\":\"v-356b9757#操作-3\",\"422\":\"v-356b9757#总结-2\",\"423\":\"v-356b9757#目的-4\",\"424\":\"v-356b9757#操作-4\",\"425\":\"v-356b9757#总结-3\",\"426\":\"v-356b9757#目的-5\",\"427\":\"v-356b9757#操作-5\",\"428\":\"v-356b9757#总结-4\",\"429\":\"v-ab1cdd5a\",\"430\":\"v-ab1cdd5a#导航\",\"431\":\"v-ab1cdd5a#共享充电宝\",\"432\":\"v-ab1cdd5a#尴尬往事\",\"433\":\"v-ab1cdd5a#共享充电宝-1\",\"434\":\"v-ab1cdd5a#ioc思想\",\"435\":\"v-ab1cdd5a#对象之间复杂的依赖关系\",\"436\":\"v-ab1cdd5a#ioc的定义\",\"437\":\"v-ab1cdd5a#spring中的ioc\",\"438\":\"v-ab1cdd5a#ioc与工厂模式\",\"439\":\"v-ab1cdd5a#步骤1\",\"440\":\"v-ab1cdd5a#步骤2\",\"441\":\"v-ab1cdd5a#步骤3\",\"442\":\"v-ab1cdd5a#步骤4\",\"443\":\"v-ab1cdd5a#spring-ioc-技术剖析\",\"444\":\"v-ab1cdd5a#结语\",\"445\":\"v-ab1cdd5a#参考\",\"446\":\"v-4f00100f\",\"447\":\"v-593144ca\",\"448\":\"v-da873ccc\",\"449\":\"v-da873ccc#程序\",\"450\":\"v-da873ccc#安装组件\",\"451\":\"v-2d44ce14\",\"452\":\"v-2d44ce14#_2-1-引用nuget包\",\"453\":\"v-2d44ce14#_2-2-创建nlog配置文件\",\"454\":\"v-2d44ce14#_2-3-program中修改\",\"455\":\"v-2d44ce14#_2-4-配置日志级别\",\"456\":\"v-2d44ce14#_2-5-控制器使用\",\"457\":\"v-d6989426\",\"458\":\"v-d6989426#_3-1-控制台输出\",\"459\":\"v-d6989426#_3-2-文件输出\",\"460\":\"v-d6989426#_3-3-控制台输出并且输出到文件\",\"461\":\"v-d6989426#_3-3-1-安装nuget包\",\"462\":\"v-d6989426#_3-3-2-方案一\",\"463\":\"v-d6989426#_3-3-2-方案二\",\"464\":\"v-d6989426#_3-3-3-控制器中使用\",\"465\":\"v-d6989426#_3-3-3-1-注入\",\"466\":\"v-d6989426#_3-3-3-2-输出\",\"467\":\"v-41645de4\",\"468\":\"v-b5545b82\",\"469\":\"v-b5545b82#简单模型绑定\",\"470\":\"v-b5545b82#复杂类型\",\"471\":\"v-b5545b82#内置自定义模型绑定\",\"472\":\"v-b5545b82#自定义模型绑定\",\"473\":\"v-b5545b82#验证特性\",\"474\":\"v-b5545b82#内置验证特性\",\"475\":\"v-b5545b82#自定义特性\",\"476\":\"v-b5545b82#modelstate-isvalid\",\"477\":\"v-b5545b82#禁用验证\",\"478\":\"v-fbe88950\",\"479\":\"v-b3e43ac0\",\"480\":\"v-b3e43ac0#_1-1-安装组件\",\"481\":\"v-b3e43ac0#_1-2-注册swagger服务\",\"482\":\"v-b3e43ac0#_1-3-使用swagger\",\"483\":\"v-b3e43ac0#_1-4-启动\",\"484\":\"v-b3e43ac0#_1-5-不显示某些接口\",\"485\":\"v-6e2c6843\",\"486\":\"v-6e2c6843#_1-安装组件\",\"487\":\"v-6e2c6843#_2-设置版本\",\"488\":\"v-6e2c6843#_2-1-控制器设置版本\",\"489\":\"v-6e2c6843#_2-2-特定方法设置版本\",\"490\":\"v-6e2c6843#_2-3-设置不受版本控制\",\"491\":\"v-6e2c6843#_3-配置startup类\",\"492\":\"v-6e2c6843#_3-1-方案一\",\"493\":\"v-6e2c6843#_3-1-1-添加新成员\",\"494\":\"v-6e2c6843#_3-1-2-在-configureservices-中\",\"495\":\"v-6e2c6843#_3-2-3-configure使用服务\",\"496\":\"v-6e2c6843#_3-2-方案二\",\"497\":\"v-6e2c6843#_3-2-1-添加扩展类\",\"498\":\"v-6e2c6843#_3-2-2-在-configureservices-中\",\"499\":\"v-6e2c6843#_3-2-3-configure使用服务-1\",\"500\":\"v-6e2c6843#_4-访问接口\",\"501\":\"v-7f6e41f7\",\"502\":\"v-3298513a\",\"503\":\"v-3298513a#_3-1-基础查询\",\"504\":\"v-3298513a#_3-2-跟踪和非跟踪查询\",\"505\":\"v-3298513a#_3-3-条件查询\",\"506\":\"v-3298513a#_3-3-1-不支持异步方案\",\"507\":\"v-3298513a#_3-3-2-支持异步方案\",\"508\":\"v-3298513a#_3-4-原生sql查询\",\"509\":\"v-3298513a#_3-4-1-基本原生sql查询\",\"510\":\"v-3298513a#_3-4-2-参数化查询\",\"511\":\"v-3298513a#_3-4-2-1-sql注入\",\"512\":\"v-3298513a#_3-4-2-2-fromsqlraw参数化\",\"513\":\"v-3298513a#_3-4-2-3-fromsqlinterpolated参数化\",\"514\":\"v-3298513a#_3-4-3-限制\",\"515\":\"v-3298513a#_3-5-复杂查询\",\"516\":\"v-3298513a#_3-5-1-内连接\",\"517\":\"v-3298513a#_3-5-1-1-linq查询表达式\",\"518\":\"v-3298513a#显式内连接-join-in-on拼接\",\"519\":\"v-3298513a#隐式内连接-多个from并联拼接\",\"520\":\"v-3298513a#_3-5-1-2-linq标准查询运算符\",\"521\":\"v-3298513a#_3-5-2-外连接\",\"522\":\"v-3298513a#_3-5-2-1-linq实现\",\"523\":\"v-3298513a#_3-5-3-groupjoin\",\"524\":\"v-3298513a#_3-5-4-grouby\",\"525\":\"v-3298513a#_3-6-查询是否存在\",\"526\":\"v-3298513a#_4-1-基础添加\",\"527\":\"v-3298513a#_4-2-已经设置自增键的插入\",\"528\":\"v-3298513a#_4-3-通过sql添加\",\"529\":\"v-26033a58\",\"530\":\"v-0fdf4a72\",\"531\":\"v-0fdf4a72#定期轮询\",\"532\":\"v-0fdf4a72#长轮询\",\"533\":\"v-0fdf4a72#服务端发送事件-sse\",\"534\":\"v-0fdf4a72#websockets\",\"535\":\"v-0fdf4a72#signalr是-net技术栈成熟的实时通信框架。\",\"536\":\"v-0fdf4a72#grpc\",\"537\":\"v-41519810\",\"538\":\"v-41519810#_3-1-安装环境\",\"539\":\"v-41519810#_3-2-拷贝项目\",\"540\":\"v-41519810#_3-3-部署项目\",\"541\":\"v-41519810#_3-4-配置nginx托管\",\"542\":\"v-41519810#_3-5-配置防火墙\",\"543\":\"v-41519810#_3-6-配置nginx对程序的转发\",\"544\":\"v-41519810#_3-7-配置supervisor守护服务\",\"545\":\"v-41519810#_3-7-1-安装supervisor\",\"546\":\"v-41519810#_3-7-2-配置supervisor\",\"547\":\"v-41519810#_3-7-3-为我们部署的-net-core添加进程配置文件\",\"548\":\"v-41519810#_3-7-4-启动-supervisor-服务\",\"549\":\"v-41519810#_3-8-配置supervisor开机启动\",\"550\":\"v-75efef2e\",\"551\":\"v-75efef2e#默认配置\",\"552\":\"v-75efef2e#修改配置\",\"553\":\"v-75efef2e#添加dockerfile\",\"554\":\"v-75efef2e#运行命令\",\"555\":\"v-75efef2e#通过postman访问\",\"556\":\"v-75efef2e#添加用户\",\"557\":\"v-75efef2e#查询用户\",\"558\":\"v-75efef2e#删除用户\",\"559\":\"v-508ad911\",\"560\":\"v-508ad911#支持平台\",\"561\":\"v-508ad911#安装asp-net-core托管捆绑包\",\"562\":\"v-508ad911#进程内托管-iis-http-服务器\",\"563\":\"v-508ad911#进程外托管-kestrel服务器\",\"564\":\"v-e30c5734\",\"565\":\"v-a8eb8c32\",\"566\":\"v-a8eb8c32#post请求\",\"567\":\"v-a8eb8c32#application-x-www-form-urlencoded\",\"568\":\"v-a8eb8c32#multipart-form-data-最常见的一种post请求\",\"569\":\"v-a8eb8c32#application-json\",\"570\":\"v-8796eeb0\",\"571\":\"v-8796eeb0#版本控制\",\"572\":\"v-8796eeb0#准备\",\"573\":\"v-8796eeb0#创建插件基础类库\",\"574\":\"v-8796eeb0#创建宿主程序\",\"575\":\"v-8796eeb0#动态替换服务\",\"576\":\"v-8796eeb0#动态增加接口\",\"577\":\"v-8796eeb0#创建带依赖项的插件\",\"578\":\"v-661112e6\",\"579\":\"v-661112e6#简单配置\",\"580\":\"v-661112e6#修改默认的静态文件目录\",\"581\":\"v-d7b5ee12\",\"582\":\"v-d7b5ee12#_1-1-构建独立的iconfiguration\",\"583\":\"v-d7b5ee12#_1-2-在progrom全局自定义配置\",\"584\":\"v-ee9f5ec4\",\"585\":\"v-ee9f5ec4#创建单元测试项目\",\"586\":\"v-ee9f5ec4#测试api\",\"587\":\"v-ee9f5ec4#测试方法\",\"588\":\"v-ee9f5ec4#并行运行测试\",\"589\":\"v-13939f57\",\"590\":\"v-13939f57#创建单元测试项目\",\"591\":\"v-13939f57#测试方法\",\"592\":\"v-21618151\",\"593\":\"v-21618151#单元测试的定义\",\"594\":\"v-21618151#单元测试的好处\",\"595\":\"v-21618151#单元测试的原则\",\"596\":\"v-21618151#ms-test\",\"597\":\"v-21618151#nunit\",\"598\":\"v-21618151#xunit\",\"599\":\"v-21618151#xunit-的基本使用\",\"600\":\"v-48b702f2\",\"601\":\"v-48b702f2#get\",\"602\":\"v-48b702f2#query格式\",\"603\":\"v-48b702f2#前端请求\",\"604\":\"v-48b702f2#后端请求\",\"605\":\"v-48b702f2#接口工具请求\",\"606\":\"v-48b702f2#post\",\"607\":\"v-48b702f2#json格式\",\"608\":\"v-48b702f2#前端请求-1\",\"609\":\"v-48b702f2#后端请求-1\",\"610\":\"v-48b702f2#接口工具请求-1\",\"611\":\"v-48b702f2#x-www-form-unlencoded格式\",\"612\":\"v-48b702f2#前端请求-2\",\"613\":\"v-48b702f2#后端请求-2\",\"614\":\"v-48b702f2#接口工具请求-2\",\"615\":\"v-48b702f2#form-data格式\",\"616\":\"v-48b702f2#前端请求-3\",\"617\":\"v-48b702f2#后端请求-3\",\"618\":\"v-48b702f2#接口工具请求-3\",\"619\":\"v-48b702f2#put\",\"620\":\"v-48b702f2#json格式-1\",\"621\":\"v-48b702f2#前端请求-4\",\"622\":\"v-48b702f2#后端请求-4\",\"623\":\"v-48b702f2#接口工具请求-4\",\"624\":\"v-48b702f2#delete\",\"625\":\"v-48b702f2#query格式-1\",\"626\":\"v-48b702f2#前端请求-5\",\"627\":\"v-48b702f2#后端请求-5\",\"628\":\"v-48b702f2#接口工具请求-5\",\"629\":\"v-48b702f2#patch\",\"630\":\"v-48b702f2#json格式-2\",\"631\":\"v-48b702f2#前端请求-6\",\"632\":\"v-48b702f2#后端请求-6\",\"633\":\"v-48b702f2#接口工具请求-6\",\"634\":\"v-7bdff126\",\"635\":\"v-7bdff126#_2-1-安装组件\",\"636\":\"v-7bdff126#_2-1-1-常用配置\",\"637\":\"v-7bdff126#_2-2-querystring来实现版本控制\",\"638\":\"v-7bdff126#_2-2-1-configureservices中配置\",\"639\":\"v-7bdff126#_2-2-2-控制器设置版本\",\"640\":\"v-7bdff126#_2-2-3-特定方法设置版本\",\"641\":\"v-7bdff126#_2-2-4-设置不受版本控制\",\"642\":\"v-7bdff126#_2-3-5-访问地址\",\"643\":\"v-7bdff126#_2-3-url-path-segment来实现版本控制\",\"644\":\"v-7bdff126#_2-3-1-configureservices中配置\",\"645\":\"v-7bdff126#_2-3-2-控制器设置版本\",\"646\":\"v-7bdff126#_2-3-3-特定方法设置版本\",\"647\":\"v-7bdff126#_2-3-4-设置不受版本控制\",\"648\":\"v-7bdff126#_2-3-5-访问地址-1\",\"649\":\"v-7bdff126#_2-4-http-headers来实现版本控制\",\"650\":\"v-7bdff126#_2-4-1-configureservices中配置\",\"651\":\"v-7bdff126#_2-4-2-控制器设置版本\",\"652\":\"v-7bdff126#_2-4-3-特定方法设置版本\",\"653\":\"v-7bdff126#_2-4-4-设置不受版本控制\",\"654\":\"v-7bdff126#_2-4-5-访问地址\",\"655\":\"v-7bdff126#_2-5-同时支持多种模式\",\"656\":\"v-7bdff126#_2-6-不借助包-封装文件\",\"657\":\"v-45b9c24a\",\"658\":\"v-45b9c24a#准备\",\"659\":\"v-45b9c24a#场景\",\"660\":\"v-45b9c24a#开始\",\"661\":\"v-d51e2df0\",\"662\":\"v-2b95ba67\",\"663\":\"v-2b95ba67#描述\",\"664\":\"v-2b95ba67#推荐场景\",\"665\":\"v-2b95ba67#不建议场景\",\"666\":\"v-2b95ba67#net支持情况\",\"667\":\"v-0066a5c6\",\"668\":\"v-0066a5c6#组件包介绍\",\"669\":\"v-0066a5c6#服务端基本配置\",\"670\":\"v-0066a5c6#客户端基本配置\",\"671\":\"v-0066a5c6#简单rpc\",\"672\":\"v-0066a5c6#服务端\",\"673\":\"v-0066a5c6#客户端\",\"674\":\"v-0066a5c6#服务端流式rpc\",\"675\":\"v-0066a5c6#服务端-1\",\"676\":\"v-0066a5c6#客户端-1\",\"677\":\"v-0066a5c6#服务端-2\",\"678\":\"v-0066a5c6#客户端-2\",\"679\":\"v-0066a5c6#双向流式rpc\",\"680\":\"v-0066a5c6#服务端-3\",\"681\":\"v-0066a5c6#客户端-3\",\"682\":\"v-326e21e2\",\"683\":\"v-326e21e2#pdf转word\",\"684\":\"v-326e21e2#pdf转图片\",\"685\":\"v-694e1731\",\"686\":\"v-86b5cb78\",\"687\":\"v-86b5cb78#pdf转图片\",\"688\":\"v-86b5cb78#创建pdf\",\"689\":\"v-cb2d2dba\",\"690\":\"v-cb2d2dba#fastreport浏览器直接打印无须预览\",\"691\":\"v-cb2d2dba#编写客户端打印程序\",\"692\":\"v-cb2d2dba#编写安装程序类\",\"693\":\"v-cb2d2dba#fastreport-web打印页面代码\",\"694\":\"v-6ffc41e6\",\"695\":\"v-8d4280a8\",\"696\":\"v-8d4280a8#介绍\",\"697\":\"v-8d4280a8#推送渠道\",\"698\":\"v-8d4280a8#使用方法\",\"699\":\"v-8d4280a8#介绍-1\",\"700\":\"v-8d4280a8#系统相关数据限制\",\"701\":\"v-8d4280a8#推送渠道-1\",\"702\":\"v-8d4280a8#使用方法-1\",\"703\":\"v-8d4280a8#介绍-2\",\"704\":\"v-8d4280a8#成本\",\"705\":\"v-8d4280a8#推送渠道-2\",\"706\":\"v-8d4280a8#使用方法-2\",\"707\":\"v-8d4280a8#扩展应用\",\"708\":\"v-8d4280a8#介绍-3\",\"709\":\"v-8d4280a8#使用方法-3\",\"710\":\"v-b87f5704\",\"711\":\"v-b87f5704#自定义消息回复\",\"712\":\"v-b87f5704#自定义菜单\",\"713\":\"v-5388a496\",\"714\":\"v-5388a496#apifox\",\"715\":\"v-5388a496#apipost\",\"716\":\"v-5388a496#hoppscotch\",\"717\":\"v-2db7db0a\",\"718\":\"v-2db7db0a#基础功能\",\"719\":\"v-2db7db0a#便捷功能块\",\"720\":\"v-2db7db0a#高级功能\",\"721\":\"v-2db7db0a#一-postman安装说明\",\"722\":\"v-2db7db0a#_1-下载与安装\",\"723\":\"v-2db7db0a#_2-界面导航说明\",\"724\":\"v-2db7db0a#_3-发送第一个请求\",\"725\":\"v-2db7db0a#二-postman基础功能\",\"726\":\"v-2db7db0a#_1-常见类型的接口请求\",\"727\":\"v-2db7db0a#_1-1-查询参数的接口请求\",\"728\":\"v-2db7db0a#什么是查询参数\",\"729\":\"v-2db7db0a#postman如何请求\",\"730\":\"v-2db7db0a#具体实现步骤\",\"731\":\"v-2db7db0a#_1-2-表单类型的接口请求\",\"732\":\"v-2db7db0a#什么是表单\",\"733\":\"v-2db7db0a#postman中如何请求\",\"734\":\"v-2db7db0a#_1-3-上传文件的表单请求\",\"735\":\"v-2db7db0a#_2-接口响应数据解析\",\"736\":\"v-2db7db0a#_3-接口管理-collection\",\"737\":\"v-2db7db0a#_4-批量执行接口请求\",\"738\":\"v-2db7db0a#_5-日志调试\",\"739\":\"v-2db7db0a#_6-断言\",\"740\":\"v-2db7db0a#_7-变量-全局-集合-环境\",\"741\":\"v-2db7db0a#定义变量\",\"742\":\"v-2db7db0a#定义集合变量\",\"743\":\"v-2db7db0a#获取变量\",\"744\":\"v-2db7db0a#_8-请求前置脚本\",\"745\":\"v-2db7db0a#_9-接口关联\",\"746\":\"v-2db7db0a#_10-常见返回值获取\",\"747\":\"v-5ab20155\",\"748\":\"v-5ab20155#git安装\",\"749\":\"v-5ab20155#流程\",\"750\":\"v-5ab20155#创建仓库\",\"751\":\"v-5ab20155#拉取仓库\",\"752\":\"v-5ab20155#git创建版本库\",\"753\":\"v-5ab20155#git添加文件\",\"754\":\"v-5ab20155#git提交\",\"755\":\"v-5ab20155#分支操作\",\"756\":\"v-5ab20155#创建分支\",\"757\":\"v-5ab20155#git切换分支\",\"758\":\"v-5ab20155#git查看当前分支\",\"759\":\"v-5ab20155#合并分支\",\"760\":\"v-5ab20155#删除分支\",\"761\":\"v-5ab20155#推送分支\",\"762\":\"v-5ab20155#标签\",\"763\":\"v-5ab20155#创建标签\",\"764\":\"v-5ab20155#删除标签\",\"765\":\"v-5ab20155#推送标签到远程仓库\",\"766\":\"v-5ab20155#切换标签\",\"767\":\"v-5ab20155#仓库信息\",\"768\":\"v-5ab20155#查看仓库当前状态\",\"769\":\"v-5ab20155#查看上次的修改\",\"770\":\"v-5ab20155#查看提交的历史记录\",\"771\":\"v-5ab20155#git版本回退\",\"772\":\"v-5ab20155#清除已删除的远程分支\",\"773\":\"v-5ab20155#删除本地分支\",\"774\":\"v-5ab20155#更改仓库对应地址\",\"775\":\"v-5ab20155#记住密码\",\"776\":\"v-611f9471\",\"777\":\"v-611f9471#git-初始化代码仓库\",\"778\":\"v-611f9471#add-之后发生了什么\",\"779\":\"v-611f9471#理解-blob-对象和-sha1\",\"780\":\"v-611f9471#聊聊工作区和暂存区\",\"781\":\"v-611f9471#理解-commit-提交原理\",\"782\":\"v-611f9471#加深理解-commit-提交\",\"783\":\"v-611f9471#文件的生命周期状态\",\"784\":\"v-611f9471#branch-和-head-的意义\",\"785\":\"v-611f9471#分支操作的背后逻辑\",\"786\":\"v-611f9471#checkout-和-commit-操作\",\"787\":\"v-611f9471#聊聊-diff-的执行逻辑\",\"788\":\"v-611f9471#git-如何添加远程仓库\",\"789\":\"v-611f9471#远程仓库存储代码\",\"790\":\"v-611f9471#文档地址\",\"791\":\"v-7904afb6\",\"792\":\"v-7904afb6#管理后台\",\"793\":\"v-7904afb6#创建仓库\",\"794\":\"v-7904afb6#注册用户\",\"795\":\"v-6fae03cc\",\"796\":\"v-6fae03cc#docker方式\",\"797\":\"v-5d47eed8\",\"798\":\"v-0c43fd15\",\"799\":\"v-0c43fd15#忽略文件\",\"800\":\"v-0c43fd15#忽略文件夹\",\"801\":\"v-0c43fd15#中途修改忽略文件\",\"802\":\"v-3ba360a5\",\"803\":\"v-de93cd36\",\"804\":\"v-de93cd36#_1-1-docker简介\",\"805\":\"v-de93cd36#_1-2-docker架构\",\"806\":\"v-de93cd36#_1-3-docker带来的好处\",\"807\":\"v-de93cd36#_4-1-预览\",\"808\":\"v-de93cd36#_4-2-常用命令实操\",\"809\":\"v-de93cd36#_4-2-1-全局命令\",\"810\":\"v-de93cd36#_4-2-2-镜像常用命令\",\"811\":\"v-de93cd36#_4-2-3-容器常用命令\",\"812\":\"v-de93cd36#_5-1-手动保存数据\",\"813\":\"v-de93cd36#_5-2-容器数据卷解放双手\",\"814\":\"v-de93cd36#_5-2-1-简单理解容器数据卷\",\"815\":\"v-de93cd36#_5-2-2-实操演示\",\"816\":\"v-de93cd36#_5-2-3-容器间传递数据\",\"817\":\"v-de93cd36#_5-2-4-redis安装实战\",\"818\":\"v-de93cd36#_6-1-dockerfile简介\",\"819\":\"v-de93cd36#_6-2-dockerfile关键字\",\"820\":\"v-de93cd36#_6-2-1-from-关键字\",\"821\":\"v-de93cd36#_6-2-2-maintainer-label-关键字\",\"822\":\"v-de93cd36#_6-2-3-run-关键字\",\"823\":\"v-de93cd36#_6-2-4-workdir-关键字\",\"824\":\"v-de93cd36#_6-2-5-env-关键字\",\"825\":\"v-de93cd36#_6-2-6-add-关键字\",\"826\":\"v-de93cd36#_6-2-7-copy-关键字\",\"827\":\"v-de93cd36#_6-2-8-volume-关键字\",\"828\":\"v-de93cd36#_6-2-9-expose-关键字\",\"829\":\"v-de93cd36#_6-2-10-cmd-关键字\",\"830\":\"v-de93cd36#_6-2-11-entrypoint-关键字\",\"831\":\"v-de93cd36#_6-2-12-arg-关键字\",\"832\":\"v-de93cd36#_6-2-13-onbuild-关键字\",\"833\":\"v-de93cd36#_6-3-实战演示\",\"834\":\"v-de93cd36#_6-3-1-准备项目和dockerfile文件\",\"835\":\"v-de93cd36#_6-3-2-发布\",\"836\":\"v-de93cd36#_6-3-3-启动容器\",\"837\":\"v-de93cd36#_6-3-4-设置dockerfile\",\"838\":\"v-de93cd36#_6-3-5-cmd和entrypoint的区别\",\"839\":\"v-de93cd36#_7-1-docker网络模式简介\",\"840\":\"v-de93cd36#_7-2-bridge默认模式了解一下\",\"841\":\"v-de93cd36#_7-3-如何能通过容器名进行访问\",\"842\":\"v-de93cd36#_7-3-1-通过-link方式\",\"843\":\"v-de93cd36#_7-3-2-通过自定义网络方式\",\"844\":\"v-de93cd36#_8-1-概述\",\"845\":\"v-de93cd36#_8-2-安装\",\"846\":\"v-de93cd36#_8-2-1-下载文件\",\"847\":\"v-de93cd36#_8-2-2-授予执行权限\",\"848\":\"v-de93cd36#_8-2-3-卸载\",\"849\":\"v-de93cd36#_8-3-使用\",\"850\":\"v-de93cd36#_8-3-1-简单说说语法\",\"851\":\"v-de93cd36#_8-3-2-实操撸文件\",\"852\":\"v-de93cd36#_8-3-3-体验一键启动\",\"853\":\"v-1f1cf7c6\",\"854\":\"v-1f1cf7c6#gitlab\",\"855\":\"v-1f1cf7c6#gitea\",\"856\":\"v-1f1cf7c6#redis\",\"857\":\"v-1f1cf7c6#mysql\",\"858\":\"v-1f1cf7c6#mongodb\",\"859\":\"v-1f1cf7c6#mssql\",\"860\":\"v-1f1cf7c6#postgresql\",\"861\":\"v-1f1cf7c6#grafana\",\"862\":\"v-acd1b78c\",\"863\":\"v-55fd4dbe\",\"864\":\"v-55fd4dbe#制作步骤\",\"865\":\"v-55fd4dbe#lab-1-初始化构建-redis-镜像\",\"866\":\"v-55fd4dbe#lab-2-优化基础镜像\",\"867\":\"v-55fd4dbe#lab-3-串联-dockerfile-指令\",\"868\":\"v-55fd4dbe#lab-4-压缩你的镜像\",\"869\":\"v-55fd4dbe#lab-5-使用最精简的-base-image\",\"870\":\"v-55fd4dbe#lab-6-提取动态链接的-so-文件\",\"871\":\"v-55fd4dbe#lab-7-为-go-应用构建精简镜像\",\"872\":\"v-55fd4dbe#总结\",\"873\":\"v-55fd4dbe#参考\",\"874\":\"v-55fd4dbe#参考资料\",\"875\":\"v-55fd4dbe#转载信息\",\"876\":\"v-2e6cb36a\",\"877\":\"v-79d10623\",\"878\":\"v-79d10623#构建任务\",\"879\":\"v-79d10623#流水线pipeline\",\"880\":\"v-79d10623#部署服务\",\"881\":\"v-57d83b34\",\"882\":\"v-57d83b34#_1-1-创建jenkins的工作目录\",\"883\":\"v-57d83b34#_1-2-通过docker部署\",\"884\":\"v-57d83b34#_1-2-1-拉取镜像\",\"885\":\"v-57d83b34#_1-2-2-生成容器\",\"886\":\"v-57d83b34#_1-3-通过docker-compose部署\",\"887\":\"v-57d83b34#_1-3-1-执行命令生成容器\",\"888\":\"v-57d83b34#_2-1-寻找超级管理员密码\",\"889\":\"v-57d83b34#_2-2-进入jenkins\",\"890\":\"v-57d83b34#_2-3-设置管理员用户密码\",\"891\":\"v-57d83b34#_2-4-系统界面\",\"892\":\"v-57d83b34#_2-5-修改镜像源\",\"893\":\"v-57d83b34#_3-1-ipv4-forwarding-is-disabled\",\"894\":\"v-e45f65f8\",\"895\":\"v-e45f65f8#_2-1-常规\",\"896\":\"v-e45f65f8#_2-2-源码管理\",\"897\":\"v-e45f65f8#_2-3-构建触发器\",\"898\":\"v-e45f65f8#_2-4-构建环境\",\"899\":\"v-e45f65f8#_2-5-构建\",\"900\":\"v-e45f65f8#_2-6-构建后操作\",\"901\":\"v-e45f65f8#_2-3-查看输出\",\"902\":\"v-e45f65f8#_2-4-默认工作目录\",\"903\":\"v-6087ad3c\",\"904\":\"v-6087ad3c#_1-需要先安装java环境\",\"905\":\"v-6087ad3c#_2-安装jenkins\",\"906\":\"v-6087ad3c#_3-配置jenkins\",\"907\":\"v-6087ad3c#_3-1-加入开启启动项\",\"908\":\"v-6087ad3c#_3-2-修改目录权限\",\"909\":\"v-6087ad3c#_3-3-重启jenkins服务\",\"910\":\"v-6087ad3c#_4-初始化jenkins\",\"911\":\"v-6087ad3c#_5-允许通过防火墙\",\"912\":\"v-6087ad3c#参考教程\",\"913\":\"v-39a9e90b\",\"914\":\"v-67e3c782\",\"915\":\"v-5a04ffb0\",\"916\":\"v-5a04ffb0#名词解释\",\"917\":\"v-5a04ffb0#令人头大的网络模型\",\"918\":\"v-5a04ffb0#一个-service\",\"919\":\"v-5a04ffb0#二个-ip\",\"920\":\"v-5a04ffb0#三个-port\",\"921\":\"v-5a04ffb0#port\",\"922\":\"v-5a04ffb0#nodeport\",\"923\":\"v-5a04ffb0#targetport\",\"924\":\"v-5a04ffb0#集群内部通信\",\"925\":\"v-5a04ffb0#单节点通信\",\"926\":\"v-5a04ffb0#pod-内通信\",\"927\":\"v-5a04ffb0#pod-间通信\",\"928\":\"v-5a04ffb0#跨节点通信\",\"929\":\"v-5a04ffb0#外部访问集群\",\"930\":\"v-5a04ffb0#nodeport-1\",\"931\":\"v-5a04ffb0#ingress\",\"932\":\"v-5a04ffb0#总结及展望\",\"933\":\"v-0c901720\",\"934\":\"v-0c901720#k8s-服务发现之旅\",\"935\":\"v-0c901720#k8s-网络基础\",\"936\":\"v-0c901720#动态网络\",\"937\":\"v-0c901720#service-带来稳定性\",\"938\":\"v-0c901720#k8s-service-解析\",\"939\":\"v-0c901720#小结\",\"940\":\"v-0c901720#深入-k8s-服务发现\",\"941\":\"v-0c901720#服务注册\",\"942\":\"v-0c901720#endpoint-对象\",\"943\":\"v-0c901720#服务发现\",\"944\":\"v-0c901720#网络\",\"945\":\"v-0c901720#总结\",\"946\":\"v-b6ec408e\",\"947\":\"v-208a9744\",\"948\":\"v-208a9744#关闭\",\"949\":\"v-208a9744#添加配置\",\"950\":\"v-c2bf6a66\",\"951\":\"v-103f7fca\",\"952\":\"v-103f7fca#gitee图床\",\"953\":\"v-103f7fca#github图床\",\"954\":\"v-103f7fca#阿里云oss\",\"955\":\"v-15529f5d\",\"956\":\"v-15529f5d#添加\",\"957\":\"v-75c60fea\",\"958\":\"v-75c60fea#工作负载\",\"959\":\"v-75c60fea#单个组件\",\"960\":\"v-75c60fea#语言包\",\"961\":\"v-75c60fea#安装位置\",\"962\":\"v-e7bc2b28\",\"963\":\"v-e7bc2b28#下载引导程序\",\"964\":\"v-e7bc2b28#创建本地布局\",\"965\":\"v-c1d47e9a\",\"966\":\"v-c1d47e9a#修改快捷键方法\",\"967\":\"v-c1d47e9a#介绍\",\"968\":\"v-c1d47e9a#插件目录\",\"969\":\"v-c1d47e9a#资料\",\"970\":\"v-c1d47e9a#参考文章\",\"971\":\"v-c1d47e9a#修改文件编码\",\"972\":\"v-c1d47e9a#字体和大小\",\"973\":\"v-c1d47e9a#设置命名规范\",\"974\":\"v-a4eb6c4a\",\"975\":\"v-a4eb6c4a#_1、运行到光标位置\",\"976\":\"v-a4eb6c4a#_2、通过点击鼠标-运行到当前位置\",\"977\":\"v-a4eb6c4a#_3、在此处作为下一条要执行的语句\",\"978\":\"v-a4eb6c4a#_4、数据断点-当值发生变化时-触发中断-值更改时中断\",\"979\":\"v-a4eb6c4a#_5、条件断点\",\"980\":\"v-a4eb6c4a#_6、跟踪断点\",\"981\":\"v-a4eb6c4a#_7、跟踪超出作用域的对象\",\"982\":\"v-a4eb6c4a#_8、查看函数返回的值\",\"983\":\"v-a4eb6c4a#_9、重新附加到进程\",\"984\":\"v-a4eb6c4a#_10、在即时窗口和在观察窗口的no-side-effect评估\",\"985\":\"v-a4eb6c4a#_11、在源码中显示线程\",\"986\":\"v-a4eb6c4a#_12、从反编译的il代码中调试源代码\",\"987\":\"v-a4eb6c4a#结尾\",\"988\":\"v-01c9d450\",\"989\":\"v-f225aa88\",\"990\":\"v-f225aa88#adblock-plus\",\"991\":\"v-f225aa88#onetab\",\"992\":\"v-f225aa88#扩展管理器\",\"993\":\"v-f225aa88#有道词典chrome划词插件\",\"994\":\"v-f225aa88#谷歌访问助手\",\"995\":\"v-f225aa88#完整网页截图\",\"996\":\"v-f225aa88#油猴\",\"997\":\"v-f225aa88#分屏浏览工具\",\"998\":\"v-f225aa88#fatkun图片批量下载\",\"999\":\"v-f225aa88#stylus\",\"1000\":\"v-f225aa88#idm\",\"1001\":\"v-f225aa88#夜间模式\",\"1002\":\"v-f225aa88#图片助手\",\"1003\":\"v-f225aa88#网页自动刷新plus\",\"1004\":\"v-f225aa88#sourcegraph\",\"1005\":\"v-f225aa88#octotree\",\"1006\":\"v-f225aa88#fehelper-前端开发助手\",\"1007\":\"v-42682d1a\",\"1008\":\"v-e0273378\",\"1009\":\"v-3cef95a7\",\"1010\":\"v-3cef95a7#连接数据库\",\"1011\":\"v-3cef95a7#导出文件\",\"1012\":\"v-3672109a\",\"1013\":\"v-5fb056c8\",\"1014\":\"v-3854331e\",\"1015\":\"v-16aa5862\",\"1016\":\"v-16aa5862#_1-安装\",\"1017\":\"v-16aa5862#_2-使用\",\"1018\":\"v-16aa5862#_2-1-执行命令\",\"1019\":\"v-16aa5862#_2-2-安装服务\",\"1020\":\"v-16aa5862#_2-3-启动-停止-重启-服务\",\"1021\":\"v-16aa5862#_2-3-卸载服务\",\"1022\":\"v-16aa5862#_3-效果\",\"1023\":\"v-16aa5862#nssm守护nginx\",\"1024\":\"v-45237608\",\"1025\":\"v-45237608#截图功能\",\"1026\":\"v-45237608#录屏\",\"1027\":\"v-45237608#放大镜\",\"1028\":\"v-45237608#虚拟键盘\",\"1029\":\"v-45237608#步骤记录器\",\"1030\":\"v-45237608#剪贴板\",\"1031\":\"v-45237608#白板工具\",\"1032\":\"v-45237608#商业版和消费者版镜像的区别\",\"1033\":\"v-45237608#系统镜像\",\"1034\":\"v-45237608#_20h2\",\"1035\":\"v-45237608#_1703版本\",\"1036\":\"v-62bb0a36\",\"1037\":\"v-45afde0a\",\"1038\":\"v-140ece14\",\"1039\":\"v-140ece14#_1-使用配置\",\"1040\":\"v-140ece14#_2-仓储的创建\",\"1041\":\"v-140ece14#_3-查询\",\"1042\":\"v-140ece14#_4-添加\",\"1043\":\"v-140ece14#_5-更新\",\"1044\":\"v-140ece14#_6-删除\",\"1045\":\"v-140ece14#_7-多线程处理\",\"1046\":\"v-140ece14#_8-实体类t4自动生成\",\"1047\":\"v-2974912a\",\"1048\":\"v-c91d97fa\",\"1049\":\"v-c91d97fa#查询\",\"1050\":\"v-c91d97fa#基础查询\",\"1051\":\"v-c91d97fa#参数化查询\",\"1052\":\"v-c91d97fa#like\",\"1053\":\"v-c91d97fa#postgresql\",\"1054\":\"v-c91d97fa#in\",\"1055\":\"v-c91d97fa#postgresql-1\",\"1056\":\"v-c91d97fa#其它\",\"1057\":\"v-c91d97fa#not-in\",\"1058\":\"v-c91d97fa#postgresql-2\",\"1059\":\"v-c91d97fa#-1\",\"1060\":\"v-c91d97fa#postgresql-3\",\"1061\":\"v-c91d97fa#查询映射\",\"1062\":\"v-c91d97fa#事务\",\"1063\":\"v-c91d97fa#简单的事务方法\",\"1064\":\"v-c91d97fa#transactionscope\",\"1065\":\"v-c91d97fa#dapper-transaction-方式\",\"1066\":\"v-c91d97fa#参考文档\",\"1067\":\"v-c91d97fa#dapper-extension-aspnetcore\",\"1068\":\"v-99784ec0\",\"1069\":\"v-99784ec0#创建镜像仓库\",\"1070\":\"v-99784ec0#准备项目文件\",\"1071\":\"v-fad0ac08\",\"1072\":\"v-fad0ac08#绝对路径和相对路径\",\"1073\":\"v-fad0ac08#切换工作目录-cd\",\"1074\":\"v-fad0ac08#显示当前工作目录-pwd\",\"1075\":\"v-fad0ac08#创建目录-mkdir\",\"1076\":\"v-fad0ac08#删除空目录-rmdir\",\"1077\":\"v-fad0ac08#创建文件或修改文件时间-touch\",\"1078\":\"v-fad0ac08#删除目录或文件-rm\",\"1079\":\"v-fad0ac08#复制文件-cp\",\"1080\":\"v-fad0ac08#移动文件-mv\",\"1081\":\"v-fad0ac08#文件权限\",\"1082\":\"v-fad0ac08#更改文件属组-chgrp\",\"1083\":\"v-fad0ac08#更改文件属主-chown\",\"1084\":\"v-fad0ac08#以数字形式修改文件权限-chmod\",\"1085\":\"v-fad0ac08#以字符形式修改文件权限-chmod\",\"1086\":\"v-3b9ada0a\",\"1087\":\"v-3b9ada0a#目录\",\"1088\":\"v-3b9ada0a#ls\",\"1089\":\"v-3b9ada0a#mkdir\",\"1090\":\"v-3b9ada0a#mv\",\"1091\":\"v-3b9ada0a#文件-1\",\"1092\":\"v-3b9ada0a#touch\",\"1093\":\"v-3b9ada0a#cp\",\"1094\":\"v-3b9ada0a#rm\",\"1095\":\"v-3b9ada0a#cat\",\"1096\":\"v-3b9ada0a#grep\",\"1097\":\"v-3b9ada0a#ip\",\"1098\":\"v-3b9ada0a#ping\",\"1099\":\"v-3b9ada0a#netstat\",\"1100\":\"v-3b9ada0a#进程\",\"1101\":\"v-3b9ada0a#ps\",\"1102\":\"v-6b544c64\",\"1103\":\"v-6b544c64#下载系统镜像\",\"1104\":\"v-6b544c64#启用hyper-v\",\"1105\":\"v-6b544c64#查看网络配置信息\",\"1106\":\"v-6b544c64#movaxterm基本使用\",\"1107\":\"v-6b544c64#设置静态ip\",\"1108\":\"v-6b544c64#防火墙设置\",\"1109\":\"v-eafb2e38\",\"1110\":\"v-1489498a\",\"1111\":\"v-1489498a#测试虚拟机访问外网\",\"1112\":\"v-1489498a#测试虚拟机访问主机\",\"1113\":\"v-1489498a#测试主机访问虚拟机\",\"1114\":\"v-02767aff\",\"1115\":\"v-02767aff#系统命令\",\"1116\":\"v-02767aff#目录操作\",\"1117\":\"v-69115fcf\",\"1118\":\"v-69115fcf#_3-1-访问\",\"1119\":\"v-69115fcf#_3-2-推送\",\"1120\":\"v-69115fcf#_3-3-引用包\",\"1121\":\"v-4ea061b8\",\"1122\":\"v-4ea061b8#版本号由每次编译打包时的当前时间去确定的\",\"1123\":\"v-4ea061b8#版本号通过传入的参数去确定的\",\"1124\":\"v-f759837a\",\"1125\":\"v-f759837a#包源\",\"1126\":\"v-f759837a#设置多个目标版本\",\"1127\":\"v-f759837a#针对目标框架编译\",\"1128\":\"v-f759837a#兼容老方法\",\"1129\":\"v-f759837a#预发行包\",\"1130\":\"v-f759837a#语义化版本控制\",\"1131\":\"v-f759837a#版本范围\",\"1132\":\"v-f759837a#参考文档\",\"1133\":\"v-b7987642\",\"1134\":\"v-b7987642#_1-下载jdk\",\"1135\":\"v-b7987642#_2-安装\",\"1136\":\"v-b7987642#_3-设置环境变量\",\"1137\":\"v-372ea4e3\",\"1138\":\"v-e52c881c\",\"1139\":\"v-78b2fcd3\",\"1140\":\"v-ad99eae2\",\"1141\":\"v-2d0a81d8\",\"1142\":\"v-77d82eba\",\"1143\":\"v-71b3ae87\",\"1144\":\"v-4d194044\",\"1145\":\"v-154b91ec\",\"1146\":\"v-744e6dd4\",\"1147\":\"v-0433e079\",\"1148\":\"v-28a7f670\",\"1149\":\"v-6e638e72\",\"1150\":\"v-605e4678\",\"1151\":\"v-2c92e350\",\"1152\":\"v-7e478f2a\",\"1153\":\"v-12a74db4\",\"1154\":\"v-510a46f5\",\"1155\":\"v-34a11562\",\"1156\":\"v-5f1e3978\",\"1157\":\"v-3e690c89\",\"1158\":\"v-4f305042\",\"1159\":\"v-510d0da8\",\"1160\":\"v-6074fef6\",\"1161\":\"v-4c626eab\",\"1162\":\"v-1f5579f4\",\"1163\":\"v-4888ae6b\",\"1164\":\"v-1b2e2402\",\"1165\":\"v-59f2c137\",\"1166\":\"v-e2ef16b4\",\"1167\":\"v-2adf5f32\",\"1168\":\"v-4f1e6b6d\",\"1169\":\"v-aacd7be6\",\"1170\":\"v-090177a2\",\"1171\":\"v-9030bf34\",\"1172\":\"v-7905f8ba\",\"1173\":\"v-be5cf5f6\",\"1174\":\"v-1da931aa\",\"1175\":\"v-aa14c86a\",\"1176\":\"v-2b5302a3\",\"1177\":\"v-9fc5afb6\",\"1178\":\"v-39143f86\",\"1179\":\"v-c9bf82b2\",\"1180\":\"v-b1770618\",\"1181\":\"v-25b84f6d\",\"1182\":\"v-6c74d810\",\"1183\":\"v-502f384c\",\"1184\":\"v-71988bc6\",\"1185\":\"v-121ab4b3\",\"1186\":\"v-bd95d44e\",\"1187\":\"v-15492b9c\",\"1188\":\"v-6e8a6cbe\",\"1189\":\"v-505e778d\",\"1190\":\"v-2afdb218\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,15],\"1\":[1],\"2\":[1,10],\"3\":[2,164],\"4\":[2,27],\"5\":[1],\"6\":[1,26],\"7\":[1,8],\"8\":[1,100],\"9\":[1,9],\"10\":[1,27],\"11\":[1,6],\"12\":[1,8],\"13\":[1,7],\"14\":[1,13],\"15\":[1],\"16\":[1,15],\"17\":[1,34],\"18\":[1,9],\"19\":[1,43],\"20\":[1,19],\"21\":[1,48],\"22\":[1,114],\"23\":[1,73],\"24\":[1],\"25\":[1,6],\"26\":[1,39],\"27\":[1,48],\"28\":[2],\"29\":[1,17],\"30\":[1,9],\"31\":[1,14],\"32\":[1,38],\"33\":[1,16],\"34\":[1],\"35\":[1,4],\"36\":[2,71],\"37\":[1,39],\"38\":[1,50],\"39\":[1,9],\"40\":[1,63],\"41\":[2,43],\"42\":[1,26],\"43\":[1,74],\"44\":[1,15],\"45\":[1,14],\"46\":[1,137],\"47\":[1,19],\"48\":[2,22],\"49\":[1,9],\"50\":[1],\"51\":[1,24],\"52\":[1,14],\"53\":[1,5],\"54\":[1,9],\"55\":[1,9],\"56\":[1,34],\"57\":[1,18],\"58\":[1,17],\"59\":[1,42],\"60\":[1,11],\"61\":[1,16],\"62\":[1,13],\"63\":[1,13],\"64\":[1,26],\"65\":[1,11],\"66\":[1,31],\"67\":[1,15],\"68\":[1,44],\"69\":[1,19],\"70\":[1,13],\"71\":[1,3],\"72\":[1,20],\"73\":[1,29],\"74\":[1,10],\"75\":[1,29],\"76\":[1,29],\"77\":[3,15],\"78\":[3,11],\"79\":[3,17],\"80\":[1,1],\"81\":[1,28],\"82\":[1,15],\"83\":[1,28],\"84\":[1],\"85\":[2],\"86\":[2,24],\"87\":[3,34],\"88\":[3,31],\"89\":[3],\"90\":[3,44],\"91\":[2,15],\"92\":[3,10],\"93\":[4,32],\"94\":[4,53],\"95\":[3,16],\"96\":[3,2],\"97\":[4,87],\"98\":[3,104],\"99\":[3,83],\"100\":[4],\"101\":[4,22],\"102\":[4,29],\"103\":[3,8],\"104\":[4,43],\"105\":[3,30],\"106\":[3,49],\"107\":[3],\"108\":[4,17],\"109\":[3,42],\"110\":[3],\"111\":[4,33],\"112\":[3,43],\"113\":[3],\"114\":[4,26],\"115\":[3,38],\"116\":[2],\"117\":[3,28],\"118\":[4,28],\"119\":[3,27],\"120\":[4,56],\"121\":[1,13],\"122\":[1,2],\"123\":[1,27],\"124\":[1,55],\"125\":[1,167],\"126\":[1,3],\"127\":[1,26],\"128\":[1,47],\"129\":[3,35],\"130\":[1,28],\"131\":[1,33],\"132\":[1,5],\"133\":[1,54],\"134\":[1,688],\"135\":[1,31],\"136\":[1,13],\"137\":[1,24],\"138\":[1,19],\"139\":[3,26],\"140\":[3,26],\"141\":[3,30],\"142\":[1,10],\"143\":[1,8],\"144\":[1,20],\"145\":[1,37],\"146\":[1,7],\"147\":[1,10],\"148\":[1,19],\"149\":[1,9],\"150\":[3,28],\"151\":[2,127],\"152\":[3,101],\"153\":[3,87],\"154\":[1,9],\"155\":[1,76],\"156\":[1,83],\"157\":[1,88],\"158\":[1,34],\"159\":[1,41],\"160\":[2,23],\"161\":[1,57],\"162\":[1,15],\"163\":[1,59],\"164\":[1,63],\"165\":[1,113],\"166\":[1,45],\"167\":[1,197],\"168\":[1,67],\"169\":[1],\"170\":[1,21],\"171\":[1,19],\"172\":[1,22],\"173\":[1,28],\"174\":[1,10],\"175\":[1,34],\"176\":[1,11],\"177\":[2,21],\"178\":[3,29],\"179\":[3,61],\"180\":[3,46],\"181\":[3,34],\"182\":[3,16],\"183\":[3,64],\"184\":[3,22],\"185\":[2,45],\"186\":[3,37],\"187\":[5,25],\"188\":[3,24],\"189\":[3,31],\"190\":[3,27],\"191\":[3,43],\"192\":[3,29],\"193\":[3,14],\"194\":[3,42],\"195\":[3,34],\"196\":[3,17],\"197\":[2,38],\"198\":[3,24],\"199\":[3,27],\"200\":[3,24],\"201\":[4,82],\"202\":[1,146],\"203\":[1,276],\"204\":[1,476],\"205\":[1,146],\"206\":[1,182],\"207\":[1,129],\"208\":[1,510],\"209\":[1,289],\"210\":[1,287],\"211\":[1,78],\"212\":[3,14],\"213\":[3,35],\"214\":[2,14],\"215\":[1,207],\"216\":[1,34],\"217\":[1,49],\"218\":[1,24],\"219\":[1,12],\"220\":[1],\"221\":[1,1],\"222\":[1,1],\"223\":[1],\"224\":[1,1],\"225\":[1,2],\"226\":[1],\"227\":[1,3],\"228\":[1,3],\"229\":[1,2],\"230\":[1,1],\"231\":[1,2],\"232\":[1,14],\"233\":[1,4],\"234\":[1,3],\"235\":[1],\"236\":[1,5],\"237\":[1,2],\"238\":[1,8],\"239\":[1,14],\"240\":[1,9],\"241\":[1,11],\"242\":[1,48],\"243\":[1,264],\"244\":[1],\"245\":[1,10],\"246\":[1,3],\"247\":[1,102],\"248\":[1,23],\"249\":[1,18],\"250\":[1,14],\"251\":[4,7],\"252\":[1,14],\"253\":[1,91],\"254\":[1,17],\"255\":[1,2],\"256\":[1,29],\"257\":[1],\"258\":[1,6],\"259\":[1,10],\"260\":[1],\"261\":[2],\"262\":[2,8],\"263\":[3,6],\"264\":[3,2],\"265\":[3,12],\"266\":[3],\"267\":[3,19],\"268\":[4,10],\"269\":[3],\"270\":[3,8],\"271\":[3],\"272\":[3,10],\"273\":[3,8],\"274\":[2,9],\"275\":[3,6],\"276\":[3,9],\"277\":[3],\"278\":[3,15],\"279\":[3],\"280\":[4],\"281\":[3,7],\"282\":[2],\"283\":[3,11],\"284\":[3,6],\"285\":[3,5],\"286\":[3,6],\"287\":[1,6],\"288\":[1,25],\"289\":[3,3],\"290\":[3,11],\"291\":[3],\"292\":[4,10],\"293\":[4,10],\"294\":[3],\"295\":[5,10],\"296\":[4,14],\"297\":[3],\"298\":[4,12],\"299\":[1],\"300\":[1,25],\"301\":[1],\"302\":[1,6],\"303\":[1],\"304\":[1,22],\"305\":[3,1],\"306\":[3,1],\"307\":[4,14],\"308\":[5,12],\"309\":[3,13],\"310\":[3,2],\"311\":[3,21],\"312\":[1,29],\"313\":[1,1],\"314\":[1,1],\"315\":[1,1],\"316\":[1,1],\"317\":[1,1],\"318\":[1,3],\"319\":[1,2],\"320\":[1,7],\"321\":[1,108],\"322\":[1,292],\"323\":[1,69],\"324\":[1,7],\"325\":[1,34],\"326\":[1,25],\"327\":[1,31],\"328\":[1,15],\"329\":[1,7],\"330\":[1,18],\"331\":[1,35],\"332\":[1,6],\"333\":[1,47],\"334\":[2,13],\"335\":[1,13],\"336\":[1,27],\"337\":[1,9],\"338\":[4,13],\"339\":[4,9],\"340\":[2,8],\"341\":[3,18],\"342\":[3,54],\"343\":[3,48],\"344\":[1,66],\"345\":[3,22],\"346\":[3,23],\"347\":[3,35],\"348\":[1,17],\"349\":[1,24],\"350\":[1,15],\"351\":[1,18],\"352\":[1,13],\"353\":[1,11],\"354\":[1,16],\"355\":[1,32],\"356\":[1],\"357\":[1],\"358\":[2,36],\"359\":[3,29],\"360\":[3,12],\"361\":[3,19],\"362\":[3,13],\"363\":[1,39],\"364\":[1,230],\"365\":[1,2],\"366\":[2,44],\"367\":[2,38],\"368\":[2,87],\"369\":[2,22],\"370\":[1,11],\"371\":[2,40],\"372\":[3,60],\"373\":[3,99],\"374\":[3,30],\"375\":[3,60],\"376\":[4,36],\"377\":[3,30],\"378\":[3,53],\"379\":[3,4],\"380\":[3,26],\"381\":[3,54],\"382\":[5,89],\"383\":[1],\"384\":[1,4],\"385\":[2,26],\"386\":[2,54],\"387\":[4,69],\"388\":[1],\"389\":[2,17],\"390\":[2],\"391\":[3,33],\"392\":[3,18],\"393\":[3,22],\"394\":[6,36],\"395\":[2,22],\"396\":[3,15],\"397\":[2,8],\"398\":[3,16],\"399\":[1,40],\"400\":[1,94],\"401\":[2,119],\"402\":[2,124],\"403\":[2,117],\"404\":[2,99],\"405\":[2,107],\"406\":[1,10],\"407\":[1,24],\"408\":[1,15],\"409\":[1,25],\"410\":[1,41],\"411\":[1],\"412\":[1,1],\"413\":[1,70],\"414\":[1,2],\"415\":[1,3],\"416\":[1,68],\"417\":[1,4],\"418\":[1,86],\"419\":[1,3],\"420\":[1,2],\"421\":[1,100],\"422\":[1,2],\"423\":[1,4],\"424\":[1,73],\"425\":[1,6],\"426\":[1,3],\"427\":[1,81],\"428\":[1,7],\"429\":[1],\"430\":[1,19],\"431\":[1,1],\"432\":[1,40],\"433\":[1,29],\"434\":[1,8],\"435\":[1,31],\"436\":[1,72],\"437\":[1],\"438\":[1,29],\"439\":[1,8],\"440\":[1,19],\"441\":[1,31],\"442\":[1,155],\"443\":[3,129],\"444\":[1,15],\"445\":[1,24],\"446\":[1,149],\"447\":[1,174],\"448\":[1,22],\"449\":[1,7],\"450\":[1],\"451\":[1,10],\"452\":[3,13],\"453\":[2,86],\"454\":[3,64],\"455\":[3,9],\"456\":[3,42],\"457\":[1,42],\"458\":[3,20],\"459\":[3,28],\"460\":[2],\"461\":[3,5],\"462\":[3,66],\"463\":[3,59],\"464\":[2],\"465\":[3,5],\"466\":[3,27],\"467\":[1,53],\"468\":[1,102],\"469\":[1,13],\"470\":[1,32],\"471\":[1,30],\"472\":[1,121],\"473\":[1,4],\"474\":[1,120],\"475\":[1,127],\"476\":[2,33],\"477\":[1,135],\"478\":[2,109],\"479\":[2,24],\"480\":[2,13],\"481\":[3,23],\"482\":[3,33],\"483\":[3,102],\"484\":[3,133],\"485\":[2],\"486\":[2,17],\"487\":[2],\"488\":[3,33],\"489\":[2,7],\"490\":[3,12],\"491\":[2],\"492\":[3],\"493\":[3,9],\"494\":[6,76],\"495\":[3,35],\"496\":[3],\"497\":[4,71],\"498\":[5,42],\"499\":[3,38],\"500\":[2,28],\"501\":[2,284],\"502\":[2,96],\"503\":[3,87],\"504\":[3,12],\"505\":[2],\"506\":[3,23],\"507\":[3,22],\"508\":[3,11],\"509\":[4,18],\"510\":[4],\"511\":[5,50],\"512\":[4,50],\"513\":[4,43],\"514\":[3,20],\"515\":[3,10],\"516\":[4,5],\"517\":[4],\"518\":[4,82],\"519\":[2,47],\"520\":[5,51],\"521\":[4,15],\"522\":[5,85],\"523\":[3,43],\"524\":[4,61],\"525\":[3,30],\"526\":[3,10],\"527\":[3,29],\"528\":[3,59],\"529\":[1,42],\"530\":[2,19],\"531\":[1,14],\"532\":[1,28],\"533\":[3,14],\"534\":[1,17],\"535\":[3,18],\"536\":[1,28],\"537\":[1,44],\"538\":[3,28],\"539\":[3,11],\"540\":[2,16],\"541\":[3,27],\"542\":[3,15],\"543\":[3,83],\"544\":[3,18],\"545\":[4,9],\"546\":[4,35],\"547\":[5,42],\"548\":[6,19],\"549\":[3,77],\"550\":[1,25],\"551\":[1,16],\"552\":[1,63],\"553\":[1,9],\"554\":[1,43],\"555\":[1],\"556\":[1,2],\"557\":[1,2],\"558\":[1,12],\"559\":[1,25],\"560\":[1,10],\"561\":[3,46],\"562\":[5,30],\"563\":[3,67],\"564\":[1,540],\"565\":[2],\"566\":[1],\"567\":[5,10],\"568\":[5,10],\"569\":[2,29],\"570\":[1,23],\"571\":[1,21],\"572\":[1],\"573\":[1,76],\"574\":[1,157],\"575\":[1,150],\"576\":[1,104],\"577\":[1,174],\"578\":[2,11],\"579\":[1,11],\"580\":[1,65],\"581\":[2,4],\"582\":[2,38],\"583\":[3,113],\"584\":[2,6],\"585\":[1,141],\"586\":[1,65],\"587\":[1,41],\"588\":[1,59],\"589\":[1,10],\"590\":[1,3],\"591\":[1,127],\"592\":[1,8],\"593\":[1,42],\"594\":[1,31],\"595\":[1,15],\"596\":[2,26],\"597\":[1,58],\"598\":[1,44],\"599\":[2,117],\"600\":[1,183],\"601\":[1,16],\"602\":[1,23],\"603\":[1,36],\"604\":[1,41],\"605\":[1,15],\"606\":[1,3],\"607\":[1,43],\"608\":[1,40],\"609\":[1,59],\"610\":[1,7],\"611\":[4,32],\"612\":[1,34],\"613\":[1,46],\"614\":[1,7],\"615\":[2,41],\"616\":[1,53],\"617\":[1,73],\"618\":[1,3],\"619\":[1,2],\"620\":[1,41],\"621\":[1,40],\"622\":[1,60],\"623\":[1,11],\"624\":[1,2],\"625\":[1,38],\"626\":[1,27],\"627\":[1,36],\"628\":[1,9],\"629\":[1,39],\"630\":[1,38],\"631\":[1,39],\"632\":[1,59],\"633\":[1,3],\"634\":[1,8],\"635\":[3,21],\"636\":[3,17],\"637\":[2],\"638\":[3,27],\"639\":[2,26],\"640\":[3,7],\"641\":[3,12],\"642\":[4,14],\"643\":[5],\"644\":[4,20],\"645\":[3,29],\"646\":[3,7],\"647\":[4,12],\"648\":[4,14],\"649\":[4],\"650\":[4,32],\"651\":[3,26],\"652\":[4,7],\"653\":[3,12],\"654\":[4,12],\"655\":[3,27],\"656\":[4,68],\"657\":[1,18],\"658\":[1,18],\"659\":[1,6],\"660\":[1,135],\"661\":[1,245],\"662\":[1,31],\"663\":[1,21],\"664\":[1,16],\"665\":[1,21],\"666\":[2,96],\"667\":[1,24],\"668\":[1,41],\"669\":[1,68],\"670\":[1,67],\"671\":[1,54],\"672\":[1,104],\"673\":[1,95],\"674\":[1,52],\"675\":[1,56],\"676\":[1,88],\"677\":[1,84],\"678\":[1,49],\"679\":[1,50],\"680\":[1,57],\"681\":[1,84],\"682\":[2,36],\"683\":[1,48],\"684\":[1,56],\"685\":[1,29],\"686\":[2],\"687\":[1,39],\"688\":[1,44],\"689\":[1,93],\"690\":[1,56],\"691\":[1,224],\"692\":[1,128],\"693\":[2,176],\"694\":[1,117],\"695\":[1,4],\"696\":[1,37],\"697\":[1,24],\"698\":[1,21],\"699\":[1,8],\"700\":[1,43],\"701\":[1,1],\"702\":[1,13],\"703\":[1,9],\"704\":[1,15],\"705\":[1,3],\"706\":[1,3],\"707\":[1,3],\"708\":[1,14],\"709\":[1,14],\"710\":[1,120],\"711\":[1,93],\"712\":[1,82],\"713\":[1],\"714\":[1,9],\"715\":[1,6],\"716\":[1,9],\"717\":[1,16],\"718\":[1,11],\"719\":[1,6],\"720\":[1,10],\"721\":[2,10],\"722\":[2,25],\"723\":[2,3],\"724\":[2,21],\"725\":[2],\"726\":[2,6],\"727\":[2],\"728\":[2,22],\"729\":[1,9],\"730\":[2,17],\"731\":[3],\"732\":[2,21],\"733\":[2,41],\"734\":[3,71],\"735\":[2,56],\"736\":[4,47],\"737\":[2,39],\"738\":[2,51],\"739\":[2,154],\"740\":[6,40],\"741\":[1,7],\"742\":[1,40],\"743\":[1,39],\"744\":[2,53],\"745\":[2,53],\"746\":[2,69],\"747\":[1],\"748\":[1,34],\"749\":[1],\"750\":[1,4],\"751\":[1,15],\"752\":[1,31],\"753\":[1,7],\"754\":[1,29],\"755\":[1],\"756\":[1,5],\"757\":[1,5],\"758\":[1,4],\"759\":[1,6],\"760\":[1,5],\"761\":[1,6],\"762\":[1],\"763\":[1,6],\"764\":[1,12],\"765\":[1,9],\"766\":[1,7],\"767\":[1],\"768\":[1,39],\"769\":[1,44],\"770\":[1,4],\"771\":[1,14],\"772\":[1,5],\"773\":[1,7],\"774\":[1,47],\"775\":[1,45],\"776\":[1,22],\"777\":[2,143],\"778\":[2,103],\"779\":[4,116],\"780\":[1,103],\"781\":[3,104],\"782\":[3,79],\"783\":[1,12],\"784\":[4,70],\"785\":[1,47],\"786\":[4,94],\"787\":[3,28],\"788\":[2,95],\"789\":[1,22],\"790\":[1,8],\"791\":[1,34],\"792\":[1,1],\"793\":[1,4],\"794\":[1,16],\"795\":[1,8],\"796\":[1,30],\"797\":[1,25],\"798\":[1,145],\"799\":[1,88],\"800\":[1,11],\"801\":[1,45],\"802\":[1,107],\"803\":[1],\"804\":[2,52],\"805\":[3,69],\"806\":[3,118],\"807\":[3,19],\"808\":[3],\"809\":[4,52],\"810\":[3,109],\"811\":[4,207],\"812\":[3,86],\"813\":[3],\"814\":[4,13],\"815\":[3,84],\"816\":[4,42],\"817\":[4,55],\"818\":[3,42],\"819\":[3],\"820\":[5,38],\"821\":[5,23],\"822\":[5,21],\"823\":[5,8],\"824\":[5,18],\"825\":[4,20],\"826\":[5,16],\"827\":[5,10],\"828\":[5,12],\"829\":[5,27],\"830\":[5,12],\"831\":[5,12],\"832\":[5,3],\"833\":[3,9],\"834\":[4,41],\"835\":[4,34],\"836\":[3,14],\"837\":[4,85],\"838\":[4,57],\"839\":[3,75],\"840\":[3,56],\"841\":[3,15],\"842\":[6,38],\"843\":[5,77],\"844\":[3,11],\"845\":[3,16],\"846\":[4,34],\"847\":[3,17],\"848\":[4,11],\"849\":[3,14],\"850\":[4,62],\"851\":[4,39],\"852\":[3,132],\"853\":[1,57],\"854\":[1,31],\"855\":[1,17],\"856\":[1,25],\"857\":[1,19],\"858\":[1,16],\"859\":[1,32],\"860\":[1,10],\"861\":[1,7],\"862\":[1,133],\"863\":[1,148],\"864\":[1,11],\"865\":[5,104],\"866\":[3,83],\"867\":[5,96],\"868\":[3,75],\"869\":[5,46],\"870\":[5,141],\"871\":[5,76],\"872\":[1,25],\"873\":[1,60],\"874\":[1,100],\"875\":[1,14],\"876\":[1,80],\"877\":[1,12],\"878\":[1],\"879\":[1,30],\"880\":[1,13],\"881\":[1,2],\"882\":[2,10],\"883\":[3],\"884\":[3,5],\"885\":[3,24],\"886\":[4,34],\"887\":[3,13],\"888\":[3,17],\"889\":[2,6],\"890\":[3,2],\"891\":[3,3],\"892\":[3,20],\"893\":[6,38],\"894\":[1,5],\"895\":[3,2],\"896\":[2,2],\"897\":[3,1],\"898\":[3,5],\"899\":[3,58],\"900\":[3,6],\"901\":[3,3],\"902\":[3,34],\"903\":[1],\"904\":[2,2],\"905\":[2,30],\"906\":[2],\"907\":[3,7],\"908\":[4,24],\"909\":[2,15],\"910\":[2,10],\"911\":[2,30],\"912\":[1,8],\"913\":[1,17],\"914\":[1,594],\"915\":[1,7],\"916\":[1,41],\"917\":[1,10],\"918\":[2,76],\"919\":[2,59],\"920\":[2,10],\"921\":[1,8],\"922\":[1,10],\"923\":[1,47],\"924\":[1],\"925\":[1,44],\"926\":[2,44],\"927\":[2,43],\"928\":[1,78],\"929\":[1,13],\"930\":[1,39],\"931\":[1,98],\"932\":[1,12],\"933\":[1,3],\"934\":[2,16],\"935\":[2,30],\"936\":[1,43],\"937\":[2,35],\"938\":[3,38],\"939\":[1,28],\"940\":[3,5],\"941\":[1,77],\"942\":[2,44],\"943\":[1,60],\"944\":[1,101],\"945\":[1,62],\"946\":[1,32],\"947\":[1,12],\"948\":[1,12],\"949\":[1,116],\"950\":[1,3],\"951\":[1,30],\"952\":[1,29],\"953\":[1,20],\"954\":[1,52],\"955\":[1,31],\"956\":[1,85],\"957\":[1,21],\"958\":[1,6],\"959\":[1,10],\"960\":[1,3],\"961\":[1,11],\"962\":[1,15],\"963\":[1,15],\"964\":[1,86],\"965\":[1,144],\"966\":[1,2],\"967\":[1,13],\"968\":[1,243],\"969\":[1,8],\"970\":[1,54],\"971\":[1,13],\"972\":[1,6],\"973\":[1,56],\"974\":[1,43],\"975\":[2,4],\"976\":[3,6],\"977\":[2,11],\"978\":[6,23],\"979\":[2,8],\"980\":[2,12],\"981\":[2,26],\"982\":[2,12],\"983\":[2,28],\"984\":[6,25],\"985\":[2,84],\"986\":[2,49],\"987\":[1,9],\"988\":[1,29],\"989\":[1],\"990\":[2,1],\"991\":[1,2],\"992\":[1,1],\"993\":[1,1],\"994\":[1,1],\"995\":[1,1],\"996\":[1,1],\"997\":[1,1],\"998\":[1,1],\"999\":[1,1],\"1000\":[1,1],\"1001\":[1,1],\"1002\":[1,4],\"1003\":[1,2],\"1004\":[1,3],\"1005\":[1,1],\"1006\":[3,1],\"1007\":[1,39],\"1008\":[1,68],\"1009\":[1,40],\"1010\":[1,3],\"1011\":[1,4],\"1012\":[1,123],\"1013\":[2,28],\"1014\":[1,28],\"1015\":[1],\"1016\":[2,5],\"1017\":[2],\"1018\":[3,6],\"1019\":[2,47],\"1020\":[6,23],\"1021\":[3,9],\"1022\":[2],\"1023\":[1,2],\"1024\":[1,30],\"1025\":[1,7],\"1026\":[1,3],\"1027\":[1,5],\"1028\":[1,6],\"1029\":[1,7],\"1030\":[1,5],\"1031\":[1,31],\"1032\":[1,11],\"1033\":[1],\"1034\":[1,62],\"1035\":[1,67],\"1036\":[1,213],\"1037\":[1,165],\"1038\":[1,19],\"1039\":[2,6],\"1040\":[2,14],\"1041\":[2,66],\"1042\":[2,29],\"1043\":[2,57],\"1044\":[2,56],\"1045\":[2,22],\"1046\":[2,25],\"1047\":[1,135],\"1048\":[1,35],\"1049\":[1],\"1050\":[1,25],\"1051\":[1,18],\"1052\":[1],\"1053\":[1,26],\"1054\":[1],\"1055\":[1,46],\"1056\":[1,17],\"1057\":[2],\"1058\":[1,30],\"1059\":[1],\"1060\":[1,33],\"1061\":[1,141],\"1062\":[1],\"1063\":[1,36],\"1064\":[1,34],\"1065\":[3,39],\"1066\":[1,14],\"1067\":[3,13],\"1068\":[2,7],\"1069\":[1,11],\"1070\":[1,275],\"1071\":[1,19],\"1072\":[1,16],\"1073\":[2,11],\"1074\":[2,82],\"1075\":[2,26],\"1076\":[2,25],\"1077\":[2,49],\"1078\":[2,31],\"1079\":[2,71],\"1080\":[2,39],\"1081\":[1,94],\"1082\":[2,27],\"1083\":[2,15],\"1084\":[2,37],\"1085\":[2,29],\"1086\":[1],\"1087\":[1],\"1088\":[1,7],\"1089\":[1,4],\"1090\":[1,10],\"1091\":[1],\"1092\":[1,5],\"1093\":[1,6],\"1094\":[1,9],\"1095\":[1,7],\"1096\":[1,45],\"1097\":[1],\"1098\":[1,13],\"1099\":[1,12],\"1100\":[1],\"1101\":[1,10],\"1102\":[2,15],\"1103\":[1,16],\"1104\":[2,54],\"1105\":[1,10],\"1106\":[1,17],\"1107\":[1,58],\"1108\":[1,36],\"1109\":[1,135],\"1110\":[1,521],\"1111\":[1,41],\"1112\":[1,20],\"1113\":[1,22],\"1114\":[1,18],\"1115\":[1,9],\"1116\":[1,14],\"1117\":[1,78],\"1118\":[3,14],\"1119\":[3,35],\"1120\":[2,14],\"1121\":[1,32],\"1122\":[1,74],\"1123\":[1,99],\"1124\":[1],\"1125\":[1,12],\"1126\":[1,47],\"1127\":[1,49],\"1128\":[1,2],\"1129\":[1,30],\"1130\":[1,39],\"1131\":[1,34],\"1132\":[1,10],\"1133\":[1],\"1134\":[2,33],\"1135\":[2,17],\"1136\":[2,33],\"1137\":[1],\"1138\":[1],\"1139\":[1],\"1140\":[1],\"1141\":[1],\"1142\":[1],\"1143\":[1],\"1144\":[1],\"1145\":[1],\"1146\":[1],\"1147\":[1],\"1148\":[1],\"1149\":[2],\"1150\":[1],\"1151\":[1],\"1152\":[1],\"1153\":[1],\"1154\":[1],\"1155\":[1],\"1156\":[1],\"1157\":[1],\"1158\":[1],\"1159\":[1],\"1160\":[2],\"1161\":[1],\"1162\":[2],\"1163\":[1],\"1164\":[1],\"1165\":[2],\"1166\":[1],\"1167\":[1],\"1168\":[2],\"1169\":[1],\"1170\":[1],\"1171\":[1],\"1172\":[2],\"1173\":[1],\"1174\":[2],\"1175\":[2],\"1176\":[1],\"1177\":[1],\"1178\":[1],\"1179\":[1],\"1180\":[1],\"1181\":[1],\"1182\":[1],\"1183\":[1],\"1184\":[1],\"1185\":[1],\"1186\":[2],\"1187\":[1],\"1188\":[1],\"1189\":[1],\"1190\":[1]},\"averageFieldLength\":[1.8119227539882452,40.5210656621887],\"storedFields\":{\"0\":{\"h\":\"关于我\",\"t\":[\"一个喜欢编程的小伙子，喜欢捣鼓各种开发技术、软件。\",\"这是一个知识库网站，是作为字典使用的网站。 也欢迎各位大佬去公众号联系我一起搭建，一起补充学习。\",\"目标：每天进步一点点 名言：人总是在正确的事情和容易做的事情之间做选择 。\",\"本站内容来源自公众号【鹏祥】、大佬文章。\"]},\"1\":{\"h\":\"如何提问\"},\"2\":{\"h\":\"提问的智慧\",\"t\":[\"提问前先搜一搜，问一问。\",\"提问前先试试自己解决。\",\"准确地描述问题。问题的描述应该包含以下内容：\",\"清晰的细节；\",\"问题发生的背景；\",\"提问前做过的调查研究及对其的理解；\",\"提问前为确定问题而采取的诊断步骤；\"]},\"3\":{\"h\":\"Gitlab简单使用CI/CD\",\"t\":[\"大概是去年就想做这个事情了，奈何当时卡到一个docker命令找不到的问题上，导致文章难产了，墨迹了这么久，终于又有空来捣鼓它了。\",\"我们要实现的目的是我本地不断提交代码(CI),然后服务器不断进行部署(CD)的一个简单流程。\",\"在进行简单的gtlab的ci/cd之前，我们需要安装gitlab软件，这个可以看之前的文章。\",\"本文环境：\",\"服务器A：使用docker部署了gitlab\",\"服务器B：已经安装了docker、注册了gitlab-runner用来部署服务\",\"在centos一键安装docker以及docker-compose的脚本\",\"#!/bin/bash echo -e \\\"\\\\033[33m install docker sh \\\\033[0m\\\" # 设置yum源 echo -e \\\"\\\\033[33m Set the yum source \\\\033[0m\\\" sudo yum -y install yum-utils sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo #yum包更新到最新 echo -e \\\"\\\\033[33m update version \\\\033[0m\\\" sudo yum update -y #安装Docker最新版 echo -e \\\"\\\\033[33m install docker-ce \\\\033[0m\\\" sudo yum install docker-ce -y #设置Docker自启动 echo -e \\\"\\\\033[33m setting self-turn-on \\\\033[0m\\\" sudo systemctl enable docker #启动Docker echo -e \\\"\\\\033[33m start docker \\\\033[0m\\\" sudo systemctl start docker #配置国内镜像 /etc/docker/daemon.json echo -e \\\"\\\\033[33m Set up aliyuncs mirror \\\\033[0m\\\" sudo tee /etc/docker/daemon.json <<-'EOF' { \\\"registry-mirrors\\\": [\\\"https://docker.mirrors.ustc.edu.cn\\\"] } EOF #加载配置文件,ReStart sudo systemctl daemon-reload sudo systemctl restart docker #安装docker-compose,最新版本需要手动查询一下 echo -e \\\"\\\\033[33m install docker-compose \\\\033[0m\\\" sudo curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose \",\"部署gitlab的yaml脚本\",\"version: '3' services: gitlab: #gitlab image: gitlab/gitlab-ce container_name: 'gitlab' restart: always environment: GITLAB_OMNIBUS_CONFIG: | external_url \\\"http://172.18.231.92:9006\\\" # web站点访问地址 gitlab_rails['gitlab_shell_ssh_port'] = 9022 # 设置shell 端口 gitlab_rails['time_zone'] = 'Asia/Shanghai' # 设置时区 # gitlab_rails['smtp_enable'] = true # gitlab_rails['smtp_address'] = \\\"smtp.exmail.qq.com\\\" # gitlab_rails['smtp_port'] = 465 # gitlab_rails['smtp_user_name'] = \\\"<your qq email>\\\" # gitlab_rails['smtp_password'] = \\\"xCcqh*L4jkqFCS\\\" # gitlab_rails['smtp_authentication'] = \\\"login\\\" # gitlab_rails['smtp_enable_starttls_auto'] = true # gitlab_rails['smtp_tls'] = true # gitlab_rails['gitlab_email_from'] = '<your qq email>' # gitlab_rails['smtp_domain'] = \\\"exmail.qq.com\\\" ports: - '9006:9006' - '443:443' - '9022:22' volumes: - '/gitlab/config:/etc/gitlab' \"]},\"4\":{\"h\":\"安装gitlab-runner\",\"t\":[\"在要部署服务的服务器上安装docker以及gitlab-runner，本次安装直接安装在服务器中，不使用docker安装gitlab-runner，避免产生Dind(docker in docker)问题。\",\"首先导入repository\",\"curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh | sudo bash \",\"img\",\"安装\",\"yum install gitlab-runner -y \",\"img\"]},\"5\":{\"h\":\"注册到gitlab\"},\"6\":{\"h\":\"注册群组Runner\",\"t\":[\"首先我们要获取注册时候需要的信息，获取地址在 http://172.18.231.92:9006/admin/runners\",\"输入命令进行注册\",\"gitlab-runner register \",\"img\",\"选择执行者，这里我使用shell\",\"执行者参考：https://docs.gitlab.com/runner/executors/index.html\",\"到这里已经注册成功了，就可以在gitlab中看到注册的runner了\",\"img\"]},\"7\":{\"h\":\"为仓库设置单独的Runner\",\"t\":[\"使用该方案应该先看下一步去创建项目\",\"在我们要部署的仓库里面找到Runner配置信息(设置=>CI/CD)\",\"img\",\"然后重复上面注册的过程，详细步骤如图\",\"img\",\"然后就可以在仓库的配置下可以看到我们注册的东西\",\"img\"]},\"8\":{\"h\":\"配置帐号\",\"t\":[\"添加gitlab-runner用户\",\"sudo adduser gitlab-runner \",\"将该用户添加到docker组中\",\"sudo gpasswd -a gitlab-runner docker \",\"查看docker组是否已经添加用户成功\",\"cat /etc/group |grep docker \",\"验证是否可以通过gitlab-runner访问docker\",\"sudo -u gitlab-runner -H docker info \",\"重启docker容器服务\",\"sudo systemctl restart docker \",\"给docker.sock设置权限\",\"sudo chmod a+rw /var/run/docker.sock \",\"img\",\"直接开始创建项目\",\"img\",\"拉取项目并填充内容\",\"img\",\"拷贝一个简单项目(https://gitee.com/AZRNG/my-example)提交到gitlab上\",\"img\",\"在项目的根目录下创建文件名为.gitlab-ci.yml的文件，用于进行打包部署。\",\"# .gitlab-ci.yml stages: - deploy deploy: stage: deploy script: - docker -v - pwd - cd NetByDocker - docker build -f Dockerfile -t gitlabnetsample ../ - docker rm -f gitlabnetsample && docker run --name gitlabnetsample -d -p 8060:80 gitlabnetsample # remove old,create new - docker ps -a tags: - net \",\"提交推送代码，然后在gitlab的CI/CD=>Pipeliners查看\",\"img\",\"查看详细信息\",\"img\",\"部署成功，进入该服务器查看容器信息\",\"img\",\"通过外部访问服务：http://172.18.229.206:8060/swagger/index.html 成功显示swagger界面，部署成功。\",\"https://mp.weixin.qq.com/s/h3W7ltj4xl1tzDEia_xCag\",\"https://blog.csdn.net/qq_42799562/article/details/118179856\"]},\"9\":{\"h\":\"快速入门GitHub\",\"t\":[\"作者：Peter 编辑：JackTian 来源：公众号「杰哥的IT之旅」\",\"本文已经经过授权转载！\"]},\"10\":{\"h\":\"快速入门GitHub\",\"t\":[\"GitHub在程序开发领域家喻户晓，现在几乎整个互联网的开发者都将版本管理工具GitHub作为版本控制的首选，甚至像笔者这样非开发者，一名和每天和数据打交道的人也在使用GitHub，目的主要有：\",\"查找资料：GitHub上有很多国内外大神开源的数据挖掘、机器学习的资料、代码，笔者直接fork或者clone下来学习\",\"技术交流：通过对开源项目提出issue，能够起到技术交流的效果\",\"个人展示：现在互联网领域中，如果一个程序员在GitHub上有一个很好的开源项目，必定是会备受关注。因此GitHub实际上是一个很好的展示个人实力的舞台，或许它能够让你受到招聘人员的青睐\",\"可以说，正式GitHub，让社会化全员编程成为了现实。\",\"既然好处颇多，作为互联网界的一员，没有理由不学好GitHub😄本文将详细介绍GitHub的相关基础操作，带你快速入门GitHub\",\"图片\"]},\"11\":{\"h\":\"版本管理\",\"t\":[\"版本管理就是管理更新的历史记录。Git出现之前，人们主要是使用Subversion（简称为SVN）作为版本控制的工具。\"]},\"12\":{\"h\":\"SVN\",\"t\":[\"SVN是属于集中型的版本管理系统，其特点是将仓库集中存放在服务器中，所以只存在一个仓库。集中型将所有特点是方便管理，但是如果开发者所处的环境无法联网，则无法获取到最新的源码，进而无法进行开发工作。\",\"图片\"]},\"13\":{\"h\":\"Git\",\"t\":[\"Git是分散型的版本管理系统。从下图中我们可以观察出来，GitHub将仓库fork给每个用户。fork的仓库和原始的仓库是两个不同的仓库，开发者是可以随意编辑的。\",\"Fork的过程其实就是将某个仓库复制到自己的账户下\",\"图片\"]},\"14\":{\"h\":\"什么GitHub\",\"t\":[\"GitHub是一个基于Git的代码托管平台。如果是付费用户可以建立自己的私人仓库，一般用户的话只能建立公用仓库，也就是说仓库的代码必须是公开的。到底Git和GitHub有什么区别呢？\",\"在Git中，开发者将源代码存入名叫“Git仓库”的资料库中，方便使用；而GitHub则是在网络上提供Git仓库的一项服务\",\"GitHub上公开的源代码都是通过Git进行管理的。\"]},\"15\":{\"h\":\"安装与配置Git\"},\"16\":{\"h\":\"安装\",\"t\":[\"现在笔者使用的MacOS系统，是自带Git的。关于Windows系统下安装，请参考如下文章，讲解的非常详细。\",\"Windows系统Git安装教程（详解Git安装过程）：\",\"https://www.cnblogs.com/xueweisuoyong/p/11914045.html\"]},\"17\":{\"h\":\"配置\",\"t\":[\"首先需要设置使用Git时候的名字和邮箱，名字需要使用英文\",\"git config --global user.name \\\"Firstname Lastname\\\" # 名称 git config --global user.email \\\"your_email@example.com\\\" # 邮箱 # ~/.gitconfig中以如下形式输出文件 [user] name = Firstname Lastname email = your_email@example.com \",\"需要注意的是：\",\"GitHub上公开仓库的时候，名字和邮箱会一同被公开，所以请不要使用不便公开的隐私信息\",\"程序员来自世界各地，请使用英文，不要使用汉字；如果不想使用真名，可以使用网站的昵称\",\"如何提高命令输出的可读性？\",\" git config --global color.ui auto # 将color.ui 设置成auto \"]},\"18\":{\"h\":\"创建账户\",\"t\":[\"进入创建用户的页面：http://github.com/join，填写如下的信息在点击`Create an accout`即可\",\"图片\"]},\"19\":{\"h\":\"配置SSH\",\"t\":[\"GitHub上连接现有仓库的认证，是通过使用了SSH的公开密钥认证方式进行的。现在我们需要创建公开密钥所需的SSH Key，并将其添加到GitHub。\",\"ssh-keygen -t rsa -C # 创建SSH Key \",\"接下来需要输入两次密码，最终会生成两个文件：\",\"id_rsa：私有密钥\",\"id_rsa.pub：公开密钥\",\"下面我们需要在GitHub中添加公开密钥，今后就可以使用私有密钥进行认证。点击右上角的账户设定按钮：\",\"图片\",\"进入settings之后，添加新的SSH Key\",\"图片\",\"接下来会出现Title和Key两个输入框，在Title中输入适当的密钥名称，Key部分复制上面id_rsa.pub文件中的内容\",\"cat ~/.ssh/id_rsa.pub # 查看内容 \",\"添加完成之后，会在我们的邮箱中收到一封提示“公开密钥添加完成”的邮件，确认即可。这样便完成了整个手中的私人密钥和GitHub的认证和通信问题，验证一下：\",\"ssh -T git@github.com \",\"在接下来的页面中输入密码和yes即可完成验证。\"]},\"20\":{\"h\":\"建立仓库\",\"t\":[\"首先我们必须明白一点：仓库有两种\",\"远程在GitHub上的仓库：远程仓库\",\"在自己本地的仓库：本地仓库\",\"本文是以MacOS系统为例，基于Linux；如果是想学习Windows下的仓库创建，请参考下文，讲解的很详细：\",\"Git使用（10分钟入门）：\",\"https://www.jianshu.com/p/09f243768cf6\"]},\"21\":{\"h\":\"远程仓库\",\"t\":[\"1、建立远程仓库需要我们先登陆自己的GitHub账号，再进行建仓。\",\"img\",\"2、我们创建一个git_start的仓库\",\"仓库的名字\",\"仓库的简单描述\",\"不要在远程仓库添加README.md文件。我们使用手动push的方式来添加\",\"img\",\"3、仓库解释\",\"打开上面我们创建好的仓库，会出现如下的内容（先写上注释，后面慢慢解释）\",\"echo \\\"# git_start\\\" >> README.md # 往README.md中写入内容 git init # 初始化 git add README.md # 添加文件 git commit -m \\\"first commit\\\" # 提交并注释 git branch -M main # 提交分支 git remote add origin git@github.com:pidada/git_start.git # 建立远程仓库与本地仓库的连接 git push -u origin main # 推送 \",\"图片\"]},\"22\":{\"h\":\"本地仓库\",\"t\":[\"1、建立本地仓库\",\"所谓的本地仓库，就是你自己电脑客户端的仓库。同样地，笔者在本地建立了同样名字的本地仓库git_start，其实就是个文件夹\",\"本地仓库要和远程仓库保持一致\",\"mkdir git_start # 创建文件夹，即仓库 cd git_start # 切换到仓库中 ls # 查看内容，目前是没有任何内容 \",\"图片\",\"2、初始化操作\",\"echo \\\"学习GitHub的使用，快速入门\\\" >> README.md # 往文件中写入内容，后面可以更改 git init # 初始化 \",\"img\",\"初始化之后会在当前目录下自动生成一个.git的文件。这个文件下存储着管理当前目录内容所需要的仓库数据\",\"3、查看待提交文档\",\"通过ls查看已经有了README.md文档\",\"git status # 查看待提交的文档 \",\"img\",\"4、提交文档\",\"我们将上面的README.md文档和生成的.git文档一并提交\",\"git add . # 提交全部文件 git add README.md # 单独提交一个文件 git commmit -m \\\"2021-1-1\\\" # commit提交，同时写上备注：2021-1-1 # add 和 commit的同步操作 git commit -am \\\"2021-1-1\\\" \",\"注意：执行了add操作，文件还没有被上传到Git远程仓库中，只是提交到了缓存区域\",\"git commit -m \\\"2021-1-1\\\"才是真正地提交内容，同时写上备注：将文件从缓存区提交到远程\",\"5、建立远程仓库连接并推送\",\"git remote add origin git@github.com:peter/git_start.git # 建立连接 git push -u origin master # 推送到master分支 \",\"图片\",\"6、检查\",\"此时我们刷新远程仓库的页面，会发现页面更新了，也有了内容：\",\"图片\",\"7、查看提交日志\",\"git log # 查看提交日志 git log --pretty=short # 只显示一行简述信息 git log README.md # 只显示指定目录、文件的日志 git log -p README.md # 只显示指定目录、文件的日志修改前后的改动 \",\"commit栏旁边显示的是指向这个提交的哈希值。Git的其他命令中，在指向提交时会用到这个哈希值\",\"Author栏旁边是Git设置的用户名和邮箱地址\",\"Date栏显示的是执行日期和时间\",\"最下面是提交信息，-m 参数后面的信息\",\"img\",\"8、修改README.md文件\",\"通过vim编辑器修改内容如下：\",\"img\",\"上面使用了Markdown语法，然后我们重新按照上面的命令执行一遍：\",\"git status # 状态是红色 git add . # 提交到缓存区 git commit -m \\\"修改README.md\\\" # 记录提交信息 # git remote add origin git@github.com:peter/git_start.git # 已经建立了连接，所以不必在执行此命令 git push -u origin master # 推到master分支 \",\"图片\",\"回顾下整个操作的过程：\",\"建立远程仓库\",\"建立本地仓库\",\"初始化本地仓库\",\"文档提交到缓存区\",\"缓存区推送到远程仓库\"]},\"23\":{\"h\":\"重要命令\",\"t\":[\"我们总结一下上面操作中几个重要的命令：\",\"1、git status\",\"查看仓库中文件的状态。如果有新的文件或者原来的文件有修改过，会出现红色\",\"2、git add\",\"向缓存区中添加内容，缓存区是提交之前的一个临时区域（Stage或者Index）\",\"3、git commit [-m]\",\"将暂存区中的文件保存仓库的历史记录中；-m参数后面跟上提交信息：git commit -m \\\"第一次提交\\\"\",\"4、git log\",\"查看以往提交日志信息：什么人在什么时候进行了提交或者合并等，以及操作前后有怎样的差别\",\"git log # 查看日志 git log --pretty=short # 只显示提交信息的第一行 git log README.md # 查看某个文件的提交信息 git log -p README.md # -p参数只查看提交的改动部分 \",\"5、git diff\",\"查看工作树、暂存区、最新提交之间的差别。\",\"git diff # 查看当前工作树和暂存区的差别 git diff HEAD # 查看本次提交和上次提交的差别；HEAD指向当前分支中的最新一次提交的指针 \",\"养成习惯：git commit之前先执行git diff HEAD命令来查看本次提交与上次提交之间的差别；HEAD指向当前分支中最新的一次提交的指针。\",\"6、仓库操作\",\"-u作用：将来运行git pull命令从远程仓库获取内容时，本地仓库就可以直接从origin的master分支中获取内容，不需要添加其他的参数\",\"git remote add origin git@github.com:github/peter/git_start.git # 添加远程仓库 git push # 推送到远程仓库 git push -u origin master # 推送到master分支下 git push -u origin feature_A # 推送到分支A git clone 仓库地址 # 将某个远程仓库的内容复制到本地 git push # 推送 git pull # 获取最新的远程分支内容 \"]},\"24\":{\"h\":\"分支\"},\"25\":{\"h\":\"master分支\",\"t\":[\"master分支是Git默认创建的分支，其他所有的分支都是在这个分支的基础上进行的。\",\"不同的分支单独进行各自的作业\",\"该分支的作业完成之后再和master分支合并\",\"图片\",\"进行完作业之后的合并操作：\",\"图片\"]},\"26\":{\"h\":\"分支相关命令\",\"t\":[\"1、git branch-显示分支\",\"显示分支一览表：将分支名列表显示出来，同时确认当前所在的分支；标有星号*表示当前分支\",\"git branch -a # 查看当前分支的相关信息 \",\"2、git branch feature-创建分支\",\"git branch feature \",\"3、git checkout feature-切换分支\",\"git checkout feature git checkout master # 切换到master分支 git checkout - # 切换到上一个分支 \",\"上面两个命令的合并，创建新的分支并切换到新的分支：\",\"git checkout -b feature # 切换到创建的新分支 \",\"4、git merge-合并分支\",\"假设某个分支已经完成了作业需要和主分支master合并，使用如下语句：\",\"git checkout master # 切到主分支 git merge --no-off feature-A # 合并分支 \",\"5、git log —graph-图的形式查看分支\",\"通过图表的形式查看提交的内容\",\"git log --graph \",\"图片\"]},\"27\":{\"h\":\"版本回溯\",\"t\":[\"既然是版本控制系统，那么对于不同版本的管理肯定是至关重要的。GitHub的另一个特征便是可以灵活地操作不同的历史版本。借助分散仓库的优势，可以在不影响其他仓库的前提下对历史版本进行操作。\",\"1、回溯到指定状态\",\"哈希值只要输入4位以上就可以执行了\",\"git reset --hard [哈希值] # 添加指定的哈希值，代表某个时间点的状态 \",\"2、查看当前仓库的全部执行过的操作日志\",\"记录我们操作的每次命令\",\"git reflog # 针对当前仓库 git log # 查看以当前状态为终点的历史日志 \",\"图片\",\"所以我们可以先通过git reflog来查看哈希值，再通过git reset —hard [哈希值]回到某个状态\",\"3、修改上一条提交信息\",\"使用git commit --amend命令\",\"git commit --amend \",\"4、压缩历史\",\"在合并特性分支之前，如果发现已经提交的内容中有拼写等错误，可以先提交一个修改，然后将这个修改包含到前一个提交之中，压缩成一个历史记录\",\"git rebase -i git rebase -i HEAD~2 # 当前分支下的两个最新历史记录进行压缩 \",\"5、添加提交一次完成\",\"git commit -am \\\"add和commit同时完成\\\" \"]},\"28\":{\"h\":\"git reset详解\"},\"29\":{\"h\":\"命令\",\"t\":[\"对版本回溯命令的详解。git reset 命令用于回退版本，可以指定回退到某个具体的历史版本。\",\"git reset 命令语法格式具体如下：\",\"git reset [--soft | --mixed | --hard] [HEAD] \",\"--mixed是默认参数，可以不带，用于重置暂存区的文件与上一次的提交（commit）保持一致，工作区文件内容保持不变\"]},\"30\":{\"h\":\"soft\",\"t\":[\"--soft参数用于回退到某个版本\",\"git reset --soft HEAD # 回退到上个版本 git reset --soft HEAD~3 # 回退到上上上个版本 \"]},\"31\":{\"h\":\"hard⚠️\",\"t\":[\"！！！⚠️谨慎使用--hard 参数，它会删除回退点之前的所有信息\",\"git reset --hard HEAD~3 # 回退到上上上个版本 git reset --hard 1de43 # 回退到指定版本 git reset --hard origin/master # 本地状态回退到和远程相同 \"]},\"32\":{\"h\":\"HEAD\",\"t\":[\"git reset HEAD^ # 回退到所有内容的上一个版本 git reset HEAD^ Git入门.md # 回退到Git入门.md文件的版本的上一个版本（指定版本的上个版本） git reset 01b42 # 回退到指定版本，需要至少哈希值的前4位；可以通过git reflog命令先查看我们要回退的版本号的哈希值 \",\"git reset HEAD还能取消已缓存的内容。当我们对某个文件的内容进行了修改并且已经执行git add之后，我们想取消缓存区的内容，使用如下命令：\",\"git reset HEAD [filename] \",\"图片\",\"关于HEAD 说明：\",\"HEAD 表示当前版本\",\"HEAD^ 上一个版本\",\"HEAD^^ 上上一个版本\",\"HEAD^^^ 上上上一个版本\",\"以此类推…\",\"可以使用 ～数字表示\",\"HEAD~0 表示当前版本\",\"HEAD~1 上一个版本\",\"HEAD^2 上上一个版本\",\"HEAD^3 上上上一个版本\",\"以此类推…\"]},\"33\":{\"h\":\"总结\",\"t\":[\"HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。\",\"穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。\",\"要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。\"]},\"34\":{\"h\":\"安装Gitlab\"},\"35\":{\"h\":\"生成容器\",\"t\":[\"下面的脚本只是测试使用，不建议生产使用(像一些挂载的需要自行处理)\"]},\"36\":{\"h\":\"docker-compose\",\"t\":[\"version: '3' services: gitlab: #gitlab容器 image: gitlab/gitlab-ce container_name: 'gitlab' restart: always environment: GITLAB_OMNIBUS_CONFIG: | external_url \\\"http://172.30.112.1:9006\\\" gitlab_rails['gitlab_shell_ssh_port'] = 9022 gitlab_rails['time_zone'] = 'Asia/Shanghai' # gitlab_rails['smtp_enable'] = true # gitlab_rails['smtp_address'] = \\\"smtp.exmail.qq.com\\\" # gitlab_rails['smtp_port'] = 465 # gitlab_rails['smtp_user_name'] = \\\"<your qq email>\\\" # gitlab_rails['smtp_password'] = \\\"xCcqh*L4jkqFCS\\\" # gitlab_rails['smtp_authentication'] = \\\"login\\\" # gitlab_rails['smtp_enable_starttls_auto'] = true # gitlab_rails['smtp_tls'] = true # gitlab_rails['gitlab_email_from'] = '<your qq email>' # gitlab_rails['smtp_domain'] = \\\"exmail.qq.com\\\" ports: - '9006:9006' - '443:443' - '9022:22' volumes: - 'D:/Soft/gitlab/etcconfig:/etc/gitlab' # '/gitlab/config:/etc/gitlab' # - '/gitlab/logs:/var/log/gitlab' # - '/gitlab/data:/var/opt/gitlab' \"]},\"37\":{\"h\":\"docker\",\"t\":[\"这里是9006:9006是因为external_url 配置了9006，请往下看\",\"# 挂载 docker run -d -p 9443:443 -p 9006:9006 -p 9022:22 --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/var/log/gitlab -v /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce # 不挂载 docker run -d -p 9443:443 -p 443:443 -p 9006:9006 -p 9022:22 --name gitlab gitlab/gitlab-ce # windows挂载 docker run -d -p 9443:443 -p 9006:9006 -p 9022:22 --name gitlab -v D:/Soft/gitlab/etcconfig:/etc/gitlab gitlab/gitlab-ce \",\"-d：后台运行\",\"-p：将容器内部端口向外映射\",\"--name：命名容器名称\",\"-v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录\"]},\"38\":{\"h\":\"配置\",\"t\":[\"img\",\"进入容器内去编辑配置或者编辑挂载目录的文件\",\"img\",\"docker exec -it gitlab bash vi /etc/gitlab/gitlab.rb \",\"该文件要修改的配置是注释状态，所以直接可以在文件头部增加配置\",\"external_url 'http://172.30.112.1:9006' #ssh主机ip gitlab_rails['gitlab_ssh_host'] = '172.30.112.1' # ssh连接端口 gitlab_rails['gitlab_shell_ssh_port'] = 9022 \",\"保存并退出，然后gitlab.yml该文件可以编辑也可以不编辑(因为gitlab.rb内配置会覆盖这个，为了防止没有成功覆盖所以我在这里进行配置)\",\"vi opt/gitlab/embedded/service/gitlab-rails/config/gitlab.yml 修改：gitlab setting=》host（172.30.112.1） 、port（9006）、ssh_host（172.30.112.1） gitlab shell setting =》ssh_port（9022） \",\"保存退出，在容器内执行更新配置\",\"gitlab-ctl reconfigure \",\"重启服务\",\"gitlab-ctl restart \"]},\"39\":{\"h\":\"查找密码\",\"t\":[\"gitlab默认用户是root，在容器内查找初始密码\",\"cat /etc/gitlab/initial_root_password \",\"img\"]},\"40\":{\"h\":\"容器内修改密码\",\"t\":[\"在容器内进入gitlab的bin目录\",\"cd /opt/gitlab/bin \",\"执行gitlab-rails console命令\",\"img\",\"找到root的用户，输入u=User.where(id:1).first，然后回车\",\"img\",\"修改password，输入u.password='123456789'然后回车\",\"u.password='123456789' \",\"img\",\"修改确认密码\",\"u.password_confirmation='123456789' \",\"img\",\"保存修改，输入u.save，然后回车，等到输出true，这时，密码修改成功。\",\"img\",\"这里密码已经修改成功，可以用123456789密码登录进去了\",\"因为我们想是实现将容器内的80端口往外映射，所以我们在docker run的时候设置了-p 9006:80，但是因为我们在代码里面配置了external_url http://172.30.112.1:9006后就应该使用-p 9006:9006否则一直访问不到。\",\"docker安装gitlab： https://blog.csdn.net/weixin_45649746/article/details/119816809\",\"netcore配置gitlab ci/cd：https://www.cnblogs.com/hellotim/p/13382565.html\"]},\"41\":{\"h\":\"C#特性\",\"t\":[\"本文开始之前，首先我想问下大家对于属性和特性知道多少？属性和特性又有何区别？\",\"img\",\"对于该单词，我更想把它称之为：特性。对于属性和特性就是名称上有纠葛(不知道你们迷不迷，反正我写本文之前我是迷了)，什么是属性？属性是面向对象编程的基本概念，提供了对私有字段的访问封装，在C#中以get和set访问器方法实现对可读可写属性的操作，提供了安全和灵活的数据访问封装。什么是特性？下面内容就说明下：\",\"使用特性，可以有效地将元数据或声明性信息与代码（程序集、类型、方法、属性等）相关联。 将特性与程序实体相关联后，可以在运行时使用 反射 这项技术查询特性。详情 用于添加元数据，如编译器指令和注释、描述、方法、类等其他信息。.Net 框架提供了两种类型的特性：预定义特性和自定义特性。\",\"简单总结：定制特性attribute，本质上是一个类，其为目标元素提供关联附加信息，并在运行期以反射的方式来获取附加信息。\"]},\"42\":{\"h\":\"AttributeUsage\",\"t\":[\"AttributeUsage特性用于控制如何应用自定义特性到目标元素，有三个数据属性可用以修饰我们的自定义的属性\",\"ValidOn\",\"规定特性可被放置的语言元素。它是枚举器 AttributeTargets 的值的组合。默认值是 AttributeTargets.All。\",\"AllowMultiple\",\"定义了是否可在同一个程序实体上同时使用多个属性进行修饰\",\"Inherited\",\"定义了自定义属性的修饰是否可由被修饰类的派生类继承\",\" [AttributeUsage(validOn: AttributeTargets.Class, AllowMultiple = false, Inherited = false)] public class HelpAttribute : Attribute { } \",\"表示该特定只能标识在类上，并且同一个类上只能用一个属性修饰，并且自定义属性的修饰不能由修饰类的派生类继承。\"]},\"43\":{\"h\":\"Flags\",\"t\":[\"以Flags特性来将枚举数值看作位标记，而非单独的数值，例如我有如下的一个需求，当我想要取得用户信息的时候，会先从本地缓存中查找，找不到然后从分布式缓存中查找，最后找不到再从数据库中查询。但是有些场景我又不需要查询数据库。\",\"所以会建立下面的这种模型\",\"public UserEntity GetUserInfo(List<DataSource> dataSources) { var xxxx = new UserEntity(); if(dataSources.Any(DataSource.Local) { //从本地缓存中获取 return xxxx; } if(dataSources.Any(DataSource.Distribution) { //从分布式缓存中获取 //更新本地缓存 return xxxx; } if(dataSources.Any(DataSource.DB) { //从DB中获取 //更新分布式缓存 //更新本地缓存 } return xxxx; } \",\"但是每次调用者都去构建一个List，比较麻烦，此时我们可以使用枚举中的Flags特性，修改程序如下：\",\"首先是枚举的定义上**，要加上 [Flags] 特性标签，并且定义 一般都是 2的n次方，主要是便于位移运算**\",\"/// <summary> ///数据取得地方 /// </summary> [Flags] public enum DataSource { /// <summary> ///本地缓存 /// </summary> [Description(\\\"本地缓存\\\")] LocalCache = 1, /// <summary> ///分布式缓存 /// </summary> [Description(\\\"分布式缓存\\\")] DistributeCache = 2, /// <summary> ///数据库 /// </summary> [Description(\\\"数据库\\\")] DB = 4, } \",\"修改代码\",\"public UserEntity GetUserInfo(DataSource dataSources) { var xxxx = new UserEntity(); if(dataSources.HasFlags(DataSource.Local) { //从本地缓存中获取 return xxxx; } if(dataSources.HasFlags(DataSource.Distribution) { //从分布式缓存中获取 //更新本地缓存 return xxxx; } if(dataSources.HasFlags(DataSource.DB) { //从DB中获取 //更新分布式缓存 //更新本地缓存 } return xxxx; } \",\"调用的地方，可以用过“|”来指定，例如我只想用分布式缓存和数据库，那么：\",\"var userInfo = GetUserInfo(DataSource.Distribution | DataSource.DB); \",\"该例子摘抄自：https://www.cnblogs.com/dcz2015/p/10943759.html\"]},\"44\":{\"h\":\"DllImport\",\"t\":[\"DllImport特性，可以让我们调用非托管代码，所以我们可以使用DllImport特性引入对Win32 API函数的调用\",\"[System.Runtime.InteropServices.DllImport(\\\"user32.dll\\\")] extern static void SampleMethod(); \"]},\"45\":{\"h\":\"Serializable\",\"t\":[\"Serializable特性表明了应用的元素可以被序列化(serializated)\",\"[Serializable] public class SampleClass { // Objects of this type can be serialized. } \"]},\"46\":{\"h\":\"Conditional\",\"t\":[\"Conditional特性，用于条件编译，在调试时使用。注意：Conditional不可应用于数据成员和属性。\",\"可通过定义特性类创建自己的自定义特性，特性类是直接或间接派生自 Attribute 的类，可快速轻松地识别元数据中的特性定义。假设我们希望使用编写类的程序员名字来标记该类，那么我们就需要自定义一个Author特性类\",\" [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = true)] public class AuthorAttribute : Attribute { public string AuthorName; public double version; public AuthorAttribute(string authorName) { this.AuthorName = authorName; version = 1.0; } } \",\"类名 AuthorAttribute 是该特性的名称，即 Author 加上 Attribute 后缀。 由于该类继承自 System.Attribute，因此它是一个自定义特性类。 构造函数的参数是自定义特性的位置参数。 在此示例中，name 是位置参数。 所有公共读写字段或属性都是命名参数。 在本例中，version 是唯一的命名参数。\",\"请注意，使用 AttributeUsage 特性可使 Author 特性仅对类和 struct 声明有效。\",\"可按照下面的方式使用特性\",\" [Author(\\\"张三\\\", version = 1.1)] [Author(\\\"李四\\\", version = 1.2)] public class SampleClass { // 业务逻辑代码 } \",\"获取自定义参数\",\"var attr = typeof(SampleClass).GetCustomAttributes(typeof(AuthorAttribute), true); \",\"GetCustomAttributes 会以数组形式返回 Author 对象和任何其他特性对象\",\"https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/concepts/attributes/\",\"https://www.cnblogs.com/long2006sky/archive/2007/10/19/930094.html\",\"https://www.cnblogs.com/dcz2015/p/10943759.html\",\" /// <summary> /// 自定义RabbitMQ队列注解 /// </summary> [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class CustomRabbitMqAttribute : Attribute { /// <summary> /// 交换机名称 /// </summary> public string Exchange { get; set; } /// <summary> /// 队列名称 /// </summary> public string Queue { get; set; } /// <summary> /// 路由键 /// </summary> public string RoutingKey { get; set; } /// <summary> /// 类名 /// </summary> public string Name { get; } = string.Empty; public CustomRabbitMqAttribute(string routingKey, string queue = \\\"\\\", string name = \\\"\\\", string exchange = \\\"\\\") { Exchange = exchange; Queue = !string.IsNullOrWhiteSpace(queue) ? queue : \\\"chat.queue.event\\\"; RoutingKey = !string.IsNullOrWhiteSpace(routingKey) ? routingKey : \\\"chat.routingkey.event\\\"; Name = name; } public CustomRabbitMqAttribute(Type eventType, string queue = \\\"\\\", string exchange = \\\"\\\") : this(eventType.Name, queue, eventType.Name, exchange: exchange) { } } /// <summary> /// CustomRabbitMqAttribute扩展方法 /// </summary> public static class CustomRabbitMqAttributeExtension { /// <summary> /// 获取CustomRabbitMqAttribute注解 /// </summary> /// <param name=\\\"type\\\"></param> /// <returns></returns> public static CustomRabbitMqAttribute ToGetCustomRabbitMqAttribute(this Type type) { var attributes = type.GetCustomAttributes(typeof(CustomRabbitMqAttribute), true); if (attributes.Length == default) { var assemblyName = type.Assembly.GetName().Name; return new CustomRabbitMqAttribute(type, assemblyName); } return (CustomRabbitMqAttribute)attributes[0]; } } \"]},\"47\":{\"h\":\"使用\",\"t\":[\" [CustomRabbitMq(\\\"aaaa\\\", \\\"bbbbb\\\")] public class user { public string id { get; set; } public string name { get; set; } public string consultationsId { get; set; } } //获取自定义属性注解 var bbb = typeof(user).ToGetCustomRabbitMqAttribute(); \"]},\"48\":{\"h\":\"C#类\",\"t\":[\"本文是读书笔记\",\"类是最常见的一种引用类型，最简单的声明如下\",\"class User { } \",\"通过下面该代码来讲解类中常用的概念\",\" public class User { /// <summary> /// Id /// </summary> public string ID { get; set; } /// <summary> /// 账号 /// </summary> public string Account { get; set; } /// <summary> /// 密码 /// </summary> public string PassWord { get; set; } public int Sex; } \"]},\"49\":{\"h\":\"访问修饰符\",\"t\":[\"常用的类修饰符有public、protected、internal、private、abstract、sealed、static、partial。\"]},\"50\":{\"h\":\"类成员\"},\"51\":{\"h\":\"方法\",\"t\":[\"方法是一组实现某个行为的语句，通过调用者的参数获取输入的数据，并通过指定的输出类型将输出数据返回给调用者。可以返回void类型，表名没有返回值，也可以通过ref/out参数返回输出数据。\",\"方法可以用以下修饰符修饰：\",\"静态修饰符：static\",\"访问修饰符：public internal private protected\",\"继承修饰符：new virtual abstract override\",\"部分方法修饰符：partial\",\"异步方法修饰符：async\"]},\"52\":{\"h\":\"虚方法\",\"t\":[\"父类定义虚方法，子类重写父类的方法\",\" public class UserBase { public virtual void Sum(int x, int y) { } } public class User : UserBase { public override void Sum(int x, int y) { } } \"]},\"53\":{\"h\":\"表达式体方法\",\"t\":[\"string GetName() => Name; \"]},\"54\":{\"h\":\"重载方法\",\"t\":[\"方法名字相同，参数类型不同或者参数个数不同。\",\" void Sum(int x) { } void Sum(double x) { } void Sum(int x, int y) { } void Sum(double x, int y) { } \",\"方法的返回值类型和params修饰符不属于判断是否重载的条件\"]},\"55\":{\"h\":\"按值传递和按引用传递\",\"t\":[\" void Sum(int x) { } void Sum(ref int x) { } // 或 void Sum(out int x) { } \",\"上述的ref和out代码不能同时出现一个类中\"]},\"56\":{\"h\":\"字段\",\"t\":[\"字段属于类的成员，在该示例类中Sex叫做字段。\",\" public class User { /// <summary> /// 性别 /// </summary> public int Sex = 1; } \",\"字段可用以下修饰符进行修饰：\",\"静态修饰符：static\",\"访问修饰符：public internal private protected\",\"继承修饰符：new\",\" public class UserBase { /// <summary> /// 性别/级别 /// </summary> public int Sex = 1; } public class User : UserBase { /// <summary> /// 性别 /// </summary> public new int Sex = 10; } var us = new User(); var sex = us.Sex; // 10 \",\"只读修饰符：readonly\",\"可以设置只读(只能在声明时候或者在类的构造函数中赋值)。\",\"线程访问修饰符：volatile\"]},\"57\":{\"h\":\"字段初始化\",\"t\":[\"字段不一定要初始化，没有初始化的字段会设置默认值。\",\" public class User { /// <summary> /// 性别 /// </summary> public int Sex; } var us = new User(); var sex = us.Sex; // 0 \"]},\"58\":{\"h\":\"声明多个字段\",\"t\":[\"可以同时声明多个字段,但是这些字段类型必须一致\",\" public class User { /// <summary> /// 性别/级别 /// </summary> public int Sex = 1, level = 5; } \"]},\"59\":{\"h\":\"属性\",\"t\":[\"一眼看过去，属性和字段很相似，但是属性内部可以像方法一样包含逻辑，在下面示例中Account和PassWord就是属性，比字段(sex)多了get/set访问器，属性get出来的值不一定是set进去的值，因为可能在set时候被修改。\",\" public class User { public string Account { get; set; } public string PassWord { get; set; } public int Sex; } \",\"Get和Set是属性的访问器，可以用来控制属性的访问级别。\",\" private string name; public string Name { get { return name; } set { name = value; } } \",\"尽管访问属性和字段的方式是相同的，但不同之处在于，属性在获取和设置值的时候给实现者提供了完全的控制能力。\",\"属性支持以下的修饰符：\",\"静态修饰符：static\",\"访问权限修饰符：public internal privateprotected\",\"继承修饰符：new virtual abstract overridesealed\"]},\"60\":{\"h\":\"只读属性\",\"t\":[\"如果只定义了get访问器，属性就是只读的。如果只定义了set访问器，那么就是只写的。\",\" public class User { public string Address { get; } } \"]},\"61\":{\"h\":\"表达式属性\",\"t\":[\" public class User { public string Address { get; } private decimal _price, _num; public decimal TotalPrice { get { return _price * _num; } } public decimal TotalPrice2 { get => _price * _num; } public decimal TotalPrice3 => _price * _num; } \"]},\"62\":{\"h\":\"自动属性\",\"t\":[\"属性最常见的实现方式是使用get和set访问器读写私有字段(字段和属性类型相同)。因此编译器会将自动属性声明自动转换为在这种实现方式。\",\" public class User { public string Address { get; set; } } \",\"编译器会自动生成一个后台私有字段，该字段的名称由编译器生成且无法引用。\"]},\"63\":{\"h\":\"属性初始化器\",\"t\":[\" public class User { public string Address { get; set; } = \\\"中国\\\"; public int Price { get;} = 1; } \"]},\"64\":{\"h\":\"属性自定义值\",\"t\":[\"获取指定类型的属性值\",\"public static string GetPropertyName(Type type, string property) { var displayName = type.GetProperty(property)?.GetCustomAttribute<DisplayNameAttribute>(); if (!string.IsNullOrEmpty(displayName?.DisplayName)) return displayName.DisplayName; var display = type.GetProperty(property)?.GetCustomAttribute<DisplayAttribute>(); return !string.IsNullOrEmpty(display?.Name) ? display.Name : string.Empty; } \",\"例如：\",\"var bb = GetPropertyName(typeof(Userinfo), \\\"Name\\\"); \"]},\"65\":{\"h\":\"索引器\",\"t\":[\"索引器为要访问的类或者结构体中封住的列表或者字典类型的数据提供访问接口。索引器通过索引值访问数据。例如string类具有索引器，可以通过int索引访问每一个char值。\",\"var str = \\\"max\\\"[1]; // 'a' \"]},\"66\":{\"h\":\"索引器的实现\",\"t\":[\"编写索引器需要定义一个名为this的属性，并将参数定义放在一对方括号中\",\" public class User { private string[] words = \\\"the quick brown fox\\\".Split(); public string this[int wordNum] { get { return words[wordNum]; } set { words[wordNum] = value; } } } var us = new User(); System.Console.WriteLine(us[3]); // fox \",\"一个类可以定义多个参数类型不同的索引器，一个索引器也可以包含多个参数。\"]},\"67\":{\"h\":\"常量\",\"t\":[\"是一种永远不会改变的静态字段。常量会在编译时候静态赋值，编译器会在常量使用的地方上直接替换值。常量用关键字const生命，并且必须用值初始化。\",\" public class User { public const string Name = \\\"张三\\\"; } \",\"未来可能发生变化的任何值都不应当表示为常量。\"]},\"68\":{\"h\":\"事件\",\"t\":[\"事件(event)基于委托，是类或者对象向其他类或对象通知发生的事情的一种委托，是一种特殊的受限制的委托(只能施加+=，-=操作符)。\",\"事件的定义\",\"public event 委托类型 事件名; \",\"简单示例\",\" internal class Program { //声明委托 public delegate void MyDelegate(); //声明事件，作为类的成员 public event MyDelegate mydelgate; private static void Main(string[] args) { var p = new Program(); p.mydelgate = Test; p.mydelgate(); Console.ReadKey(); } static void Test() { Console.WriteLine(\\\"test\\\"); } } \",\"参考资料：https://www.cnblogs.com/ezhar/p/12864342.html\"]},\"69\":{\"h\":\"构造器\",\"t\":[\"构造器执行类或者结构体的初始化代码，构造器的定义和方法很相似，不过构造器的名字和返回值只能和封装它的类型相同\",\" public class UserBase { public UserBase(string name) { Name = name; } public string Name { get; set; } } \",\"实例构造器支持以下修饰符：\",\"静态修饰符：static\",\"访问修饰符：public internal private protected\"]},\"70\":{\"h\":\"构造器重载\",\"t\":[\"为了避免重复代码，构造器可以使用this来调用另一个构造器\",\" public class UserBase { public UserBase() {} public UserBase(string name) : this() { Name = name; } public string Name { get; set; } } \"]},\"71\":{\"h\":\"隐式无参数构造器\",\"t\":[\"默认编译器会为我们的类生成一个无参数公有的构造器，不过如果你显式定义了构造器，编译器就不再自动生成无参数构造器\"]},\"72\":{\"h\":\"对象初始化器\",\"t\":[\"为了简化对象的初始化，可以在调用构造器后直接通过对象初始化器设置对象的可访问字段或属性\",\" public class User { public User() { } public User(string name) : this() { Name = name; } public string Name { get; set; } public int Sex; public string Address { get; set; } } new User() { Sex = 1, Name = \\\"张三\\\", Address = \\\"中国台湾省\\\" }; new User(\\\"张三\\\") { Sex = 1, Address = \\\"中国台湾省\\\" }; \"]},\"73\":{\"h\":\"继承\",\"t\":[\"类可以通过继承一个类来对自身进行扩展或者定制，继承了一个了类，那么就拥有父类所有的功能而无需重新构建。类只支持单继承，但是可以被多个类继承。\",\"public class Animal { public string Name { get; set; } public string Sex { get; set; } public void Cry() { Console.WriteLine($\\\"{Name} 在叫\\\"); } } public class Dog : Animal { } // dog继承了Animal，那么就拥有animal里面的属性和方法 var dog = new Dog { Name = \\\"二哈\\\", Sex = \\\"公\\\" }; dog.Cry(); // 二哈 在叫 \"]},\"74\":{\"h\":\"预定义类型\",\"t\":[\"本文是读书笔记\",\"占用空间：byte 1字节 short 2 int 4 long 8\"]},\"75\":{\"h\":\"整型\",\"t\":[\"C#支持8个预定义的整型类型，如下表所示：\",\"关键字\",\".NET struct\",\"描述\",\"sbyte\",\"System.SByte\",\"8位有符号整数\",\"short\",\"System.Int16\",\"16位有符号整数\",\"int\",\"System.Int32\",\"32位有符号整数\",\"long\",\"System.Int64\",\"64位有符号整数\",\"byte\",\"System.Byte\",\"8位无符号整数\",\"ushort\",\"System.Int16\",\"16位无符号整数\",\"uint\",\"System.Int32\",\"32位无符号整数\",\"ulong\",\"System.Int64\",\"64位无符号整数\"]},\"76\":{\"h\":\"实数\",\"t\":[\"类型\",\".NET struct\",\"描述\",\"小数位\",\"示例\",\"float\",\"System.Single\",\"32位，单精度浮点数\",\"7\",\"float f=1.0f;\",\"double\",\"System.Double\",\"64位，双精度浮点数\",\"15/16\",\"double d=1D;\",\"decimal\",\"System.Decimal\",\"128位，高精度浮点数\",\"28\",\"decimal d=1.0M;\"]},\"77\":{\"h\":\"逻辑值(bool)\",\"t\":[\"c#里面的bool类型，对应.net类型为struct system.boolean，仅包含两个值：false和true。\",\"对于引用类型，默认情况下相等是基于引用的，而不是底层对象的实际值。但是string是一个例外，它是引用类型，但是她的相等运算法却遵守值类型的语义。\"]},\"78\":{\"h\":\"字符(char)\",\"t\":[\"为了表示单个字符，c#提供了char类型，对应的是struct system.char,char的赋值通常是用单括号括起来，例如\",\"char c='A';\"]},\"79\":{\"h\":\"字符串(string)\",\"t\":[\"c#中字符串类型标识不可变的Unicode字符序列。字符串字面量应位于两个双引号(\\\"\\\")之间。\",\"string name = \\\"张三\\\"; \",\"string类型的相等运算法遵守值类型的语义\",\"string a = \\\"ceshi\\\"; string b = \\\"ceshi\\\"; Console.WriteLine(a == b); // True \"]},\"80\":{\"h\":\"类\",\"t\":[\"会有其他文章单独说明\"]},\"81\":{\"h\":\"数组\",\"t\":[\"数组是固定长度的特定类型的变量集合。为了实现高效访问，数组中的元素总是存储在连续的内存块中。\",\"int[] a = new int[1000]; Console.WriteLine(a[100]); // 0 默认值初始化 string[] names1 = new string[] { \\\"张三\\\", \\\"李四\\\" }; string[] names2 = new string[] { \\\"张三\\\", \\\"李四\\\" }; Console.WriteLine(names1 == names2); // False Console.WriteLine(names1.Equals(names2)); //False \",\"数组通过索引从0开始获取数组中的元素\",\"string[] names1 = new string[] { \\\"张三\\\", \\\"李四\\\" }; var name = names1[0]; // 张三 \",\"数组一旦创建完毕，长度将不能更改。如果使用到可变集合需要使用List或者字典。\"]},\"82\":{\"h\":\"接口\",\"t\":[\"接口和类相似，不过接口只能为成员提供定义而不能提供实现(除了C#8后的默认接口方法)，接口可以多继承而类只能单继承.\",\"public interface IUserService { void Sum(int x,int y); } \",\"继承接口必须实现接口的所有成员。\"]},\"83\":{\"h\":\"委托\",\"t\":[\"委托是一种知道如何调用方法的对象。\",\" internal class Program { public delegate string mydelegate(); private static void Main(string[] args) { mydelegate de = Test; var result = de.Invoke(); Console.WriteLine(result); } static string Test() { return \\\"测试\\\"; } } \",\"委托实例字面上就是调用者的代理：调用者调用委托，然后委托调用目标方法，这种间接调用方式可以将调用者和目标方法解耦。\"]},\"84\":{\"h\":\"反射\"},\"85\":{\"h\":\"1. 基本了解\"},\"86\":{\"h\":\"1.1 反射概述\",\"t\":[\"文字说明\",\"审查元数据并收集关于它的类型信息的能力称为反射，其中元数据（编译以后的最基本数据单元）就是一大堆的表，当编译程序集或者模块时，编译器会创建一个类定义表，一个字段定义表，和一个方法定义表等\",\"反射提供了封装程序集、模块和类型的对象（Type 类型），可以使用反射动态创建类型的实例，将类型绑定到现有对象，或从现有对象获取类型并调用其方法或访问其字段和属性。如果代码中使用了属性，可以利用反射对它们进行访问\",\"实际上\",\"反射是微软封装的一个帮助类库：using System.Reflection;\"]},\"87\":{\"h\":\"1.2 反射用途\",\"t\":[\"使用Assembly定义和加载程序集，加载在程序集清单中列出模块，以及从此程序集中查找类型并创建该类型的实例\",\"使用Module了解包含模块的程序集以及模块中的类等，还可以获取在模块上定义的所有全局方法或其他特定的非全局方法\",\"使用ConstructorInfo了解构造函数的名称、参数、访问修饰符（如pulic 或private）和实现详细信息（如abstract或virtual）等；使用Type的GetConstructors或GetConstructor方法来调用特定的构造函数\",\"使用MethodInfo了解方法的名称、返回类型、参数、访问修饰符（如pulic 或private）和实现详细信息（如abstract或virtual）等；使用Type的GetMethods或GetMethod方法来调用特定的方法\",\"使用FiedInfo了解字段的名称、访问修饰符（如public或private）和实现详细信息（如static）等，并获取或设置字段值。\",\"使用EventInfo了解事件的名称、事件处理程序数据类型、自定义属性、声明类型和反射类型等，添加或移除事件处理程序。\",\"使用PropertyInfo了解属性的名称、数据类型、声明类型、反射类型和只读或可写状态等，获取或设置属性值\",\"使用ParameterInfo了解参数的名称、数据类型、是输入参数还是输出参数，以及参数在方法签名中的位置等\"]},\"88\":{\"h\":\"1.3 反射常用类\",\"t\":[\"反射是一个程序集发现及执行的过程，通过反射能够得到 .exe 或.dll 等程序集内部的信息，使用反射能够看到一个程序集内部的接口、类、方法、字段、属性、特性等信息\",\"类型\",\"描述\",\"Assembly\",\"通过此类能够载入操纵一个程序集，并获取程序集内部信息\",\"FieldInfo\",\"该类保存给定的字段信息\",\"MethodInfo\",\"该类保存给定的方法信息\",\"MemberInfo\",\"该类是一个基类，定义了EventInfo,FieldInfo,MethodInfo,PropertyInfo的多个公用行为\",\"Module\",\"该类能够使你能訪问多个程序集中的给定模块\",\"ParameterInfo\",\"该类保存给定的參数信息\",\"PropertyInfo\",\"该类保存给定的属性信息\"]},\"89\":{\"h\":\"2. Assembly 程序集对象\"},\"90\":{\"h\":\"2.1 对象简介\",\"t\":[\"官方文档\",\"程序集包含模块、模块包含类型，而类型包含成员。 反射提供封装程序集、模块和类型的对象。 可以使用反射动态地创建类型的实例，将类型绑定到现有对象，或从现有对象中获取类型\",\"其它文档\",\"System.Reflection.Assembly：表示一个程序集\",\"程序集是代码进行编译的一个逻辑单元，把相关的代码和类型进行组合，然后生成PE文件（例如可执行文件.exe和类库文件.dll）\",\"由于程序集在编译后并不一定会生成单个文件，而可能会生成多个物理文件，甚至可能会生成分布在不同位置的多个物理文件，所以程序集是一个逻辑单元，而不是一个物理单元；即程序集在逻辑上是一个编译单元，但在物理储存上可以有多种存在形式\",\"对于静态程序集可以生成单个或多个文件，而动态程序集是存在于内存中的\",\"在C#中程序集处处可见，因为任何基于.NET的代码在编译时都至少存在一个程序集（所有.NET项目都会默认引用mscorlib程序集）\",\"程序集包含了两种文件：可执行文件（.exe文件）和 类库文件（.dll文件）\",\"在VS开发环境中，一个解决方案可以包含多个项目，而每个项目就是一个程序集\"]},\"91\":{\"h\":\"2.2 应用程序结构\",\"t\":[\"包含应用程序域（AppDomain），程序集（Assembly），模块（Module），类型（Type），成员（EventInfo、FieldInfo、MethodInfo、PropertyInfo） 几个层次\",\"img\"]},\"92\":{\"h\":\"2.3 静态方法\",\"t\":[\"常用静态方法\",\"方法\",\"返回值类型\",\"描述\",\"Assembly.Load\",\"Assembly\",\"加载相对路径下指定名称程序集\",\"Assembly.LoadFile\",\"Assembly\",\"根据全路径获取指定程序集\",\"Assembly.LoadFrom\",\"Assembly\",\"根据全路径获取指定程序集\"]},\"93\":{\"h\":\"2.4 实例方法,属性\",\"t\":[\"常用实例属性\",\"属性\",\"属性值类型\",\"描述\",\"assembly.FullName\",\"string\",\"获取程序集的显示名称\",\"assembly.Location\",\"string\",\"获取程序集的完整路径（全名称）\",\"assembly.DefinedTypes\",\"IEnumerable\",\"获取定义在程序集中类型集合\",\"assembly.Modules\",\"IEnumerable\",\"获取定义在程序集中模块集合\",\"常用实例方法\",\"方法\",\"返回值\",\"描述\",\"assembly.GetTypes()\",\"Type[]\",\"获取程序集中定义的类型数组\",\"assembly.GetType()\",\"Type\",\"获取程序集中定义的类型\",\"assembly.GetExportedTypes()\",\"Type[]\",\"获取程序集中定义的所有公共类型（类，接口，枚举等）\",\"assembly.CreateInstance()\",\"object\",\"根据传入类型创建类型实例\"]},\"94\":{\"h\":\"2.5 示例：加载程序集\",\"t\":[\"方式一：Load，c2 引用了 Helper，有引用关系\",\"using System; using System.Reflection; using Helper; namespace c2 { class Program { static void Main(string[] args) { // 相对路径下加载指定名称程序集文件 Assembly assembly = Assembly.Load(\\\"Helper\\\"); } } } \",\"示例二：LoadFile，c2与taskdao无引用关系\",\"using System; using System.Reflection; namespace c2 { class Program { static void Main(string[] args) { // 根据全名称（路径+文件名.后缀）下加载指定名称程序集文件 Assembly assembly = Assembly.LoadFile(@\\\"E:\\\\SolutionZX\\\\taskdao\\\\bin\\\\Debug\\\\taskdao.dll\\\"); } } } \",\"示例三：LoadFrom，c2与taskdao无引用关系\",\"using System; using System.Reflection; namespace c2 { class Program { static void Main(string[] args) { // 根据全名称（路径+文件名.后缀）下加载指定名称程序集文件 Assembly assembly = Assembly.LoadFrom(@\\\"E:\\\\SolutionZX\\\\taskdao\\\\bin\\\\Debug\\\\taskdao.dll\\\"); } } } \",\"示例四：根据类型创建类型实例，c2与taskdao无引用关系\",\"dynamic 类型为动态类型，使用时编译器不会检查（运行时检查）\",\"using System; using System.Reflection; namespace c2 { class Program { static void Main(string[] args) { // 根据全名称（路径+文件名.后缀）下加载指定名称程序集文件 Assembly assembly = Assembly.LoadFrom(@\\\"E:\\\\SolutionZX\\\\taskdao\\\\bin\\\\Debug\\\\taskdao.dll\\\"); // object _t = assembly.CreateInstance(\\\"task1dao.task1\\\"); // 报错，object类型识别不出Show方法，因为C#是强类型语言 // _t.Show(); dynamic _t = assembly.CreateInstance(\\\"task1dao.task1\\\"); _t.Show(); } } } \"]},\"95\":{\"h\":\"2.6 获取类型\",\"t\":[\"获取普通类型\",\"Assembly assembly = typeof(Program).Assembly; Type type = assembly.GetType(\\\"c2.UserInfo\\\"); \",\"获取泛型类型\",\"Assembly assembly = typeof(Program).Assembly; Type type = assembly.GetType(\\\"c2.UserInfo`1\\\"); // UserInfo`1 英文状态下数字1左边符号，参数个数 \"]},\"96\":{\"h\":\"3. Type 类型\",\"t\":[\"在C#中可以理解为一个类对应一个Type对象\"]},\"97\":{\"h\":\"3.1 实例属性,方法\",\"t\":[\"实例属性\",\"属性\",\"属性值类型\",\"描述\",\"type.Name\",\"string\",\"获取类型名称（类名）\",\"type.FullName\",\"string\",\"获取类全名（命名空间+类名称）\",\"type.Namespace\",\"string\",\"获取类所在的命名空间\",\"type.Assembly\",\"string\",\"获取类所在程序集名称\",\"type.BaseType\",\"Type\",\"获取基类（父类）\",\"type.IsSubclassOf(Type parent)\",\"bool\",\"type是否是parent的子类\",\"type.IsInstanceOfType(object o)\",\"bool\",\"o是否是type类的对象\",\"type.IsClass\",\"bool\",\"获取对象类型是否是类\",\"type.IsInterface\",\"bool\",\"获取对象类型是否是接口\",\"type.IsNotPublic\",\"bool\",\"获取对象类型是否公开\",\"type.IsAbstract\",\"bool\",\"获取对象类型是否是抽象的\",\"type.IsSealed\",\"bool\",\"获取对象类型是否是密封的\",\"type.IsArray\",\"bool\",\"获取对象类型是否是数组\",\"type.IsEnum\",\"bool\",\"获取对象类型是否是枚举\",\"实例方法\",\"方法\",\"返回值类型\",\"描述\",\"type.GetMembers()\",\"MemberInfo[]\",\"获取类型中所有公共成员\",\"type.GetMethods()\",\"MethodInfo[]\",\"获取所有公共方法(包含基类)\",\"type.GetConstructors()\",\"ConstructorInfo[]\",\"获取类型中所有公共构造函数\",\"type.GetFields()\",\"FieldInfo[]\",\"获取所有公共字段\",\"type.GetProperties()\",\"PropertyInfo[]\",\"获取所有公共属性\",\"type.GetInterfaces()\",\"Type[]\",\"获取所有公共接口\",\"type.GetCustomAttributes(...)\",\"object[]\",\"获取此类型指定特性数组\",\"type.MakeGenericType(...)\",\"Type\",\"设置泛型类，泛型参数类型\",\"type.GetMember(...)\",\"MemberInfo[]\",\"多个，获取公共成员(不常用)\",\"type.GetMethod(...)\",\"MethodInfo\",\"单个，获取公共方法\",\"type.GetConstructor(...)\",\"ConstructorInfo\",\"单个，获取公共方法\",\"type.GetField(...)\",\"FieldInfo\",\"单个，获取公共字段\",\"type.GetProperty(...)\",\"PropertyInfo\",\"单个，获取公共属性\",\"type.GetInterface(...)\",\"Type\",\"单个，获取公共接口\",\"type.IsDefined(...)\",\"bool\",\"获取此类型是否继承指定特性\",\"type.GetCustomAttribute(...)\",\"Attribute\",\"单个，获取此类型指定特性\"]},\"98\":{\"h\":\"3.2 操作示例一\",\"t\":[\"public class Base { } public interface Inta { } public interface Intb { } public class UserInfo<A> : Base, Inta, Intb { #region 公共构造函数 public UserInfo() { Console.WriteLine(\\\"无参构造方法...\\\"); } public UserInfo(int id) { Console.WriteLine(\\\"1个参数构造方法\\\"); } #endregion #region 私有构造函数 private UserInfo(string name) { } #endregion #region 公共字段 public string code; #endregion #region 私有字段 private string msg; #endregion #region 公共属性 public int id { get; set; } #endregion #region 公共方法 public void Print() { Console.WriteLine(\\\"无参数实例方法\\\"); } public void Show() { Console.WriteLine(\\\"无参数重载实例方法\\\"); } public void Show(int id) { Console.WriteLine(\\\"有参数重载实例方法-\\\" + id.ToString()); } #endregion #region 公共静态方法 public static void Statc() { } #endregion #region 私有方法 private void GetM() { Console.WriteLine(\\\"无参数私有方法\\\"); } private void GetM(int i) { Console.WriteLine(\\\"有参数私有方法-\\\" + id.ToString()); } #endregion #region 公共泛型方法 public void GenericC(A a) { Console.WriteLine(\\\"公共泛型无参方法:\\\" + a.ToString()); } public void GenericS<T>() { Console.WriteLine(\\\"公共泛型无参方法\\\"); } public void GenericsA<T>(A a, T t) { Console.WriteLine(\\\"公共泛型有参方法：\\\" + t.ToString() + \\\"\\\\t\\\" + a.ToString()); } #endregion } \",\"通过类获得对应的Type\",\"Type type = typeof(UserInfo); \",\"通过 Assembly 对象，通过类的fullname类获得Type对象\",\"Assembly assem = Assembly.LoadFrom(@\\\"E:\\\\SolutionRP\\\\DMO\\\\bin\\\\Debug\\\\DMO.dll\\\"); Type type = assem.GetType(\\\"DMO.UserInfo\\\"); \",\"综合示例\",\"Type type = typeof(UserInfo); Console.WriteLine(\\\"类型名:\\\" + type.Name); Console.WriteLine(\\\"类全名：\\\" + type.FullName); Console.WriteLine(\\\"命名空间名:\\\" + type.Namespace); Console.WriteLine(\\\"程序集名：\\\" + type.Assembly); Console.WriteLine(\\\"模块名:\\\" + type.Module); Console.WriteLine(\\\"基类名：\\\" + type.BaseType); Console.WriteLine(\\\"是否类：\\\" + type.IsClass); MethodInfo method = type.GetMethod(\\\"Show\\\");//获得实例的方法 Console.WriteLine(\\\"类的公共成员：\\\"); MemberInfo[] memberInfos = type.GetMembers();//得到所有公共成员 foreach (var item in memberInfos) { Console.WriteLine(\\\"成员类型：\\\" + item.MemberType + \\\"\\\\t成员：\\\" + item); } \"]},\"99\":{\"h\":\"3.3 示例二：获取公共方法\",\"t\":[\"一：获取所有公共成员\",\"static void Main(string[] args) { Type type = typeof(UserInfo); Console.Write(\\\"获取所有公共成员：\\\"); MemberInfo[] members = type.GetMembers(); Console.WriteLine(members.Length); Console.Write(\\\"获取所有公共方法(包含基类)：\\\"); MethodInfo[] methods = type.GetMethods(); Console.WriteLine(methods.Length); Console.Write(\\\"获取所有公共构造函数：\\\"); ConstructorInfo[] constructors = type.GetConstructors(); Console.WriteLine(constructors.Length); Console.Write(\\\"获取所有公共字段：\\\"); FieldInfo[] fields = type.GetFields(); Console.WriteLine(fields.Length); Console.Write(\\\"获取所有公共属性：\\\"); PropertyInfo[] properties = type.GetProperties(); Console.WriteLine(properties.Length); Console.Write(\\\"获取所有公共接口：\\\"); Type[] interfaces = type.GetInterfaces(); Console.WriteLine(interfaces.Length); } \",\"根据名称获取公共成员(不常用)\",\"MemberInfo[] memberInfo1 = type.GetMember(\\\"code\\\"); MemberInfo[] memberInfo2 = type.GetMember(\\\"Show\\\"); Console.WriteLine(memberInfo1.Length); Console.WriteLine(memberInfo2.Length); \",\"根据名称获取公共方法\",\"// 获取公共方法（非重载方法） MethodInfo methodInfo1 = type.GetMethod(\\\"Print\\\"); Console.WriteLine(methodInfo1.Name); // 获取公共重载方法，根据参数顺序，类型，个数获取 // 1.调用有一个int类型参数的重载方法 MethodInfo methodInfo2 = type.GetMethod(\\\"Show\\\", new Type[] { typeof(int) }); // 2.调用无参数重载方法(不可传null) MethodInfo methodInfo3 = type.GetMethod(\\\"Show\\\", new Type[0]); Console.WriteLine(methodInfo3.Name); \",\"根据参数的类型，数量，顺序返回指定构造方法\",\"// 返回无参公共构造方法 ConstructorInfo constructor1 = type.GetConstructor(new Type[0]); // 返回有一个int类型参数的公共构造方法 ConstructorInfo constructor2 = type.GetConstructor(new Type[] { typeof(int) }); \",\"获取类型公共字段\",\"FieldInfo fieldInfo1 = type.GetField(\\\"code\\\"); Console.WriteLine(fieldInfo1.Name); \",\"获取类型公共属性\",\"PropertyInfo propertyInfo1 = type.GetProperty(\\\"id\\\"); Console.WriteLine(propertyInfo1.Name); \"]},\"100\":{\"h\":\"3.4 示例三：获取静态方法\"},\"101\":{\"h\":\"3.5 示例四：获取泛型方法\",\"t\":[\"获取泛型方法\",\"Assembly assembly = typeof(Program).Assembly; // 获取有一个泛型参数的类 Type type = assembly.GetType(\\\"c2.UserInfo`1\\\"); // 指定泛型参数类型 Type generictype = type.MakeGenericType(new Type[] { typeof(int) }); object oType = Activator.CreateInstance(generictype); \"]},\"102\":{\"h\":\"3.6 示例五：获取特性\",\"t\":[\"[CustomAttribute] public class Studen { public void Show() { } } \",\"public class CustomAttribute : Attribute { } \",\"static void Main(string[] args) { Type type = typeof(Studen); if(type.IsDefined(typeof(CustomAttribute), true)) { // 如果有多个相同特性，默认取首个 Attribute attribute = type.GetCustomAttribute(typeof(CustomAttribute), true); object[] oAttrbute = type.GetCustomAttributes(typeof(CustomAttribute), true); Console.WriteLine(oAttrbute.Length); } } \"]},\"103\":{\"h\":\"4. MethodInfo 方法\",\"t\":[\"一个 MethodInfo 表示一个方法（公共，私有，静态，构造）\"]},\"104\":{\"h\":\"4.1 实例属性,方法\",\"t\":[\"实例属性\",\"属性\",\"属性值类型\",\"描述\",\"methodInfo.Name\",\"string\",\"方法名称\",\"methodInfo.ReturnType\",\"Type\",\"获取方法返回值类型\",\"methodInfo.IsConstructor\",\"bool\",\"是否是构造方法\",\"methodInfo.IsAbstract\",\"bool\",\"是否为抽象方法\",\"methodInfo.IsPrivate\",\"bool\",\"是否为私有方法\",\"methodInfo.IsPublic\",\"bool\",\"是否为公共方法\",\"methodInfo.IsStatic\",\"bool\",\"是否为静态方法\",\"methodInfo.IsVirtual\",\"bool\",\"是否为虚方法\",\"methodInfo.IsGenericMethod\",\"bool\",\"是否为泛型方法\",\"实例方法\",\"方法\",\"返回值\",\"描述\",\"methodInfo.Invoke(...)\",\"object\",\"调用非泛型方法\",\"methodInfo.GetParameters()\",\"ParameterInfo[]\",\"获取方法参数数组\",\"methodInfo.IsDefined(...)\",\"bool\",\"获取此方法是否继承指定特性\",\"methodInfo.GetCustomAttribute(...)\",\"Attribute\",\"单个，获取指定特性\",\"methodInfo.GetCustomAttributes(...)\",\"object[]\",\"获取此方法指定特性数组\"]},\"105\":{\"h\":\"4.2 操作示例一\",\"t\":[\"获取调用非泛型非重载无参数方法，无参数方法第二个参数可传null，但不推荐\",\"Type type = typeof(UserInfo); object oType = Activator.CreateInstance(type); MethodInfo methodInfo = null; methodInfo = type.GetMethod(\\\"Print\\\"); methodInfo.Invoke(oType,new object[0]); methodInfo.Invoke(oType, null); \",\"获取调用非泛型重载无参数方法，无参数方法第二个参数可传null，但不推荐\",\"Type type = typeof(UserInfo); object oType = Activator.CreateInstance(type); MethodInfo methodInfo = null; methodInfo = type.GetMethod(\\\"Show\\\",new Type[0]); methodInfo.Invoke(oType,new object[0]); methodInfo.Invoke(oType, null); \",\"获取调用非泛型重载有参数方法，多个参数用逗号隔开，参数类型，个数，顺序必须相同\",\"Type type = typeof(UserInfo); object oType = Activator.CreateInstance(type); MethodInfo methodInfo = null; methodInfo = type.GetMethod(\\\"Show\\\", new Type[] { typeof(int) }); methodInfo.Invoke(oType, new object[] { 1 }); \"]},\"106\":{\"h\":\"4.3 操作示例二\",\"t\":[\"获取泛型方法与获取普通方法一致，泛型参数按从左到右顺序传入，方法参数类型与泛型参数类型一致\",\"调用公共泛型无参方法\",\"// 获取泛型方法 MethodInfo methodInfo = type.GetMethod(\\\"GenericS\\\"); // 指定泛型方法参数 MethodInfo genericmethod = methodInfo.MakeGenericMethod(new Type[] { typeof(int) }); genericmethod.Invoke(oType, null); \",\"调用公共泛型有参方法\",\"MethodInfo methodInfo = type.GetMethod(\\\"GenericsA\\\"); MethodInfo genericsmethod = methodInfo.MakeGenericMethod(new Type[] { typeof(int), typeof(string) }); genericsmethod.Invoke(oType, new object[] { 1 }); \",\"调用公共泛型类的有参方法，泛型类中的泛型参数与泛型方法的泛型参数一致\",\"static void Main(string[] args) { Assembly assembly = typeof(Program).Assembly; Type type = assembly.GetType(\\\"c2.UserInfo`1\\\"); Type generictype = type.MakeGenericType(new Type[] { typeof(int) }); object oType = Activator.CreateInstance(generictype); MethodInfo methodInfo = generictype.GetMethod(\\\"GenericC\\\"); methodInfo.Invoke(oType, new object[] { 1 }); } \",\"调用公共泛型类的有参方法，泛型类中的泛型参数与泛型方法的泛型参数不一致\",\"static void Main(string[] args) { Assembly assembly = typeof(Program).Assembly; Type type = assembly.GetType(\\\"c2.UserInfo`1\\\"); Type generictype = type.MakeGenericType(new Type[] { typeof(int) }); object oType = Activator.CreateInstance(generictype); MethodInfo methodInfo = generictype.GetMethod(\\\"GenericsA\\\"); MethodInfo genericsmethodinfo = methodInfo.MakeGenericMethod(new Type[] { typeof(string) }); genericsmethodinfo.Invoke(oType, new object[] { 2, \\\"af\\\" }); } \"]},\"107\":{\"h\":\"5. ConstructorInfo 构造函数\"},\"108\":{\"h\":\"5.1 实例属性,方法\",\"t\":[\"实例方法\",\"方法\",\"返回值类型\",\"描述\",\"constructor.Invoke(...)\",\"object\",\"执行构造函数\",\"constructor.IsDefined(...)\",\"bool\",\"获取此构造函数是否继承指定特性\",\"constructor.GetCustomAttribute(...)\",\"Attribute\",\"单个，获取指定特性\",\"constructor.GetCustomAttributes(...)\",\"object[]\",\"获取此构造函数指定特性数组\"]},\"109\":{\"h\":\"5.2 操作实例一\",\"t\":[\"public class User { public User() { Console.WriteLine(\\\"无参构造函数\\\"); } public User(string n) { Console.WriteLine(\\\"有参构造函数：\\\" + n); } } \",\"调用构造函数\",\"static void Main(string[] args) { Assembly assembly = typeof(Program).Assembly; Type type = assembly.GetType(\\\"c2.User\\\"); object oType = Activator.CreateInstance(type); ConstructorInfo constructor = type.GetConstructor(new Type[0]); constructor.Invoke(oType, null); ConstructorInfo constructor1 = type.GetConstructor(new Type[] { typeof(string) }); constructor1.Invoke(oType, new object[] { \\\"liai\\\" }); ParameterInfo[] parameters = constructor1.GetParameters(); Console.WriteLine(parameters.Length); } \"]},\"110\":{\"h\":\"6. PropertyInfo 属性\"},\"111\":{\"h\":\"6.1 实例属性,方法\",\"t\":[\"实例属性\",\"属性\",\"属性值类型\",\"描述\",\"property.Name\",\"string\",\"获取属性名称\",\"property.CanRead\",\"bool\",\"获取属性是否可读\",\"property.CanWrite\",\"bool\",\"获取属性是否可写\",\"property.PropertyType\",\"Type\",\"获取属性类型\",\"实例方法\",\"方法\",\"返回值类型\",\"描述\",\"property.SetValue(...)\",\"void\",\"设置对象属性\",\"property.GetValue(...)\",\"object\",\"获取对象属性值\",\"property.IsDefined(...)\",\"bool\",\"获取此属性是否继承指定特性\",\"property.GetCustomAttribute(...)\",\"Attribute\",\"单个，获取指定特性\",\"property.GetCustomAttributes(...)\",\"object[]\",\"获取此属性指定特性数组\"]},\"112\":{\"h\":\"6.2 操作实例一\",\"t\":[\"获取公共属性\",\"// 获取所有 PropertyInfo[] propertys = type.GetProperty(); // 获取指定 PropertyInfo property = type.GetProperty(\\\"no\\\"); \",\"获取属性，设置属性值，获取属性值\",\"class Program { static void Main(string[] args) { Assembly assembly = typeof(Program).Assembly; Type type = assembly.GetType(\\\"c2.Order\\\"); object oType = Activator.CreateInstance(type); PropertyInfo property = type.GetProperty(\\\"no\\\"); property.SetValue(oType,1); var value = property.GetValue(oType); Console.WriteLine(value); } } public class Order { public int no { get; set; } } \"]},\"113\":{\"h\":\"7. FieldInfo 字段\"},\"114\":{\"h\":\"7.1 实例属性,方法\",\"t\":[\"实例属性\",\"属性名\",\"属性值类型\",\"描述\",\"field.Name\",\"string\",\"获取字段名称\",\"field.Is...\",\"bool\",\"获取字段是否为...\",\"field.FieldType\",\"Type\",\"获取字段类型\",\"实例方法\",\"方法\",\"返回值类型\",\"描述\",\"field.IsDefined(...)\",\"bool\",\"获取此字段是否继承指定特性\",\"field.GetCustomAttribute(...)\",\"Attribute\",\"单个，获取指定特性\",\"field.GetCustomAttributes(...)\",\"object[]\",\"获取此字段指定特性数组\"]},\"115\":{\"h\":\"7.2 操作实例一\",\"t\":[\"获取字段\",\"class Program { static void Main(string[] args) { Assembly assembly = typeof(Program).Assembly; Type type = assembly.GetType(\\\"c2.Order\\\"); object oType = Activator.CreateInstance(type); FieldInfo field = type.GetField(\\\"name\\\"); FieldInfo[] fields = type.GetFields(); } } public class Order { public string name; } \",\"获取值，设置值\",\"class Program { static void Main(string[] args) { Assembly assembly = typeof(Program).Assembly; Type type = assembly.GetType(\\\"c2.Order\\\"); object oType = Activator.CreateInstance(type); FieldInfo field = type.GetField(\\\"name\\\"); field.SetValue(oType, \\\"libai\\\"); var value = field.GetValue(oType); Console.WriteLine(value); } } public class Order { public string name; } \"]},\"116\":{\"h\":\"8. 扩展补充\"},\"117\":{\"h\":\"8.1 加载程序集\",\"t\":[\"获得当前【应用程序域】中的所有程序集\",\"Assembly[] ass = AppDomain.CurrentDomain.GetAssemblies(); \",\"获得当前对象所属的类所在的程序集\",\"Assembly assembly = this.GetType().Assembly; \",\"Assembly.LoadFile 与 Assembly.LoadFrom的差别\",\"LoadFile 方法用来载入和检查具有同样标识但位于不同路径中的程序集，但不会载入程序的依赖项\",\"LoadFrom 不能用于载入标识同样但路径不同的程序集\",\"创建实例对象\",\"此方法的作用与 new 一个实例对象相同\",\"Activator.CreateInstance(type) \"]},\"118\":{\"h\":\"8.2 Module 程序集模块\",\"t\":[\"Assembly assembly = Assembly.Load(\\\"mscorlib\\\");//加载程序集 Module module = assembly.GetModule(\\\"CommonLanguageRuntimeLibrary\\\");//得到指定模块 Console.WriteLine(\\\"模块名：\\\" + module.Name); Type[] types = module.FindTypes(Module.FilterTypeName, \\\"Assembly*\\\"); foreach (var item in types) { Console.WriteLine(\\\"类名：\\\" + item.Name);//输出类型名 } Console.Read(); \"]},\"119\":{\"h\":\"8.3 BindingFlags说明\",\"t\":[\"枚举值\",\"描述\",\"BindingFlags.Instance\",\"对象实例\",\"BindingFlags.Static\",\"静态成员\",\"BindingFlags.Public\",\"指可在搜索中包含公共成员\",\"BindingFlags.NonPublic\",\"指可在搜索中包含非公共成员（即私有成员和受保护的成员）\",\"BindingFlags.FlattenHierarchy\",\"指可包含层次结构上的静态成员\",\"BindingFlags.IgnoreCase\",\"表示忽略 name 的大小写\",\"BindingFlags.DeclaredOnly\",\"仅搜索 Type 上声明的成员，而不搜索被简单继承的成员\",\"BindingFlags.CreateInstance\",\"表示调用构造函数。忽略 name。对其他调用标志无效\"]},\"120\":{\"h\":\"8.4 属性应用：ORM\",\"t\":[\"简易实现\",\"public Order Find(int id) { string sql = \\\"select id,name,createTime from order where id = \\\" +id; Type type = typeof(Order); object oOrder = Activator.CreateInstance(type); using (SqlConnection connection = new SqlConnection(\\\"constr\\\")) { SqlCommand cmd = new SqlCommand(sql,connection); connection.Open(); SqlDataReader reader = cmd.ExecuteReader(); if (reader.Read()) { foreach (var prop in type.GetProperties()) { prop.SetValue(oOrder,prop.Name); } } } return (Order)oOrder; } // DTD public class Order { public int no { get; set; } public string name { get; set; } public DateTime createTime { get; set; } } \",\"泛型版本\",\"public T Find<T>(int id) where T : BaseEntity { string sql = \\\"select id,name,createTime from order where id = \\\" + id; Type type = typeof(T); object oOrder = Activator.CreateInstance(type); using (SqlConnection connection = new SqlConnection(\\\"constr\\\")) { SqlCommand cmd = new SqlCommand(sql, connection); connection.Open(); SqlDataReader reader = cmd.ExecuteReader(); if (reader.Read()) { foreach (var prop in type.GetProperties()) { prop.SetValue(oOrder, prop.Name); } } } return (T)oOrder; } public class BaseEntity { } public class Order:BaseEntity { public int no { get; set; } public string name { get; set; } public DateTime createTime { get; set; } } \"]},\"121\":{\"h\":\"转载说明\",\"t\":[\"本文作者： Mr.wei 本文链接： https://www.cnblogs.com/weiyongguang/p/15105287.html \"]},\"122\":{\"h\":\"排序\",\"t\":[\"学习C#中排序的简单用法\"]},\"123\":{\"h\":\"英文排序\",\"t\":[\"按照ASCII排序\",\"Console.WriteLine(\\\"没有排序\\\"); var chars = new[] {'a', 'A', '[', ']' }; foreach (var c in chars) { Console.Write($\\\"{c}：{(int)c} => \\\"); // a：97 => A：65 => [：91 => ]：93 => } Console.WriteLine(); Console.WriteLine(\\\"默认排序后 是按照ASCII排序\\\"); chars = chars.OrderBy(t => t).ToArray(); foreach (var c in chars) { Console.Write($\\\"{c}：{(int)c} => \\\"); // A：65 => [：91 => ]：93 => a：97 => } Console.WriteLine(); \"]},\"124\":{\"h\":\"汉字排序\",\"t\":[\"汉字可以有两种排序方案。发音排序(默认)和笔画数排序。\",\"当使用区域名称(\\\"zh-CN\\\")创建CultureInfo的时候，使用的是默认排序，也可以来指定特殊的排序顺序，详细步骤如下\",\"var strArr = new string[] { \\\"鄭\\\", \\\"我\\\", \\\"吧\\\", \\\"啊\\\", \\\"饿\\\", \\\"一\\\" }; // 输出当前区域以及排序规则 Console.WriteLine(CultureInfo.CurrentCulture.NativeName); // 中文（中国） //设置区域zh-cn （拼音：简中） //Thread.CurrentThread.CurrentCulture = new CultureInfo(\\\"zh-cn\\\"); // 使用默认的排序：发音排序 Array.Sort(strArr); foreach (var item in strArr) { Console.Write(item); // 啊吧饿我一鄭 } Console.WriteLine(); // 设置笔画数排序 LCID：0x00020804 Thread.CurrentThread.CurrentCulture = new CultureInfo(133124); // 输出当前区域以及排序 Console.WriteLine(CultureInfo.CurrentCulture.NativeName); // 中文（中国，排序=笔画排序） Array.Sort(strArr); foreach (var item in strArr) { Console.Write(item); // 一吧我饿啊鄭 } Console.WriteLine(); // 设置发音排序 LCID：0x00000804 Thread.CurrentThread.CurrentCulture = new CultureInfo(2052); Array.Sort(strArr); foreach (var item in strArr) { Console.Write(item); //啊吧饿我一鄭 } \"]},\"125\":{\"h\":\"自定义排序\",\"t\":[\"Compare方法的实现必须Int32返回具有以下三个值之一的，如下表所示。\",\"值\",\"含义\",\"小于零\",\"此对象在排序顺序中位于CompareTo方法所指定的对象之前。\",\"零\",\"此当前实例在排序顺序中与CompareTo方法参数指定的对象出现在同一位置。\",\"大于零\",\"此当前实例位于排序顺序中由CompareTo方法自变量指定的对象之后。\",\"当使用SortedList的时候，结果发现输出的排序结果不是我们想要的样子\",\"Console.WriteLine(\\\"使用SortList:没有按照ASCII排序\\\"); var list = new SortedList<string, int> { { \\\"a\\\", 97 }, { \\\"A\\\", 65 }, { \\\"[\\\", 91 }, { \\\"]\\\", 93 }, { \\\"长\\\", 100 } }; foreach (var item in list) { Console.Write($\\\"{item.Key}:{item.Value} => \\\"); // [：91 => ]：93 => 长：100 => a：97 => A：65 => } \",\"这个时候我们可以编写自定义排序规则来实现\",\"// 编写自定义比较器实现： 根据ASCII先数字、字母、特殊字符、汉字的排序方案 var list2 = new SortedList<string, int>(new CustomerComparer()) { { \\\"a\\\", 97 }, { \\\"A\\\", 65 }, { \\\"[\\\", 91 }, { \\\"长\\\", 100 }, { \\\"]\\\", 93 }, { \\\"8\\\", 56 }, { \\\"啊\\\", 100 }, { \\\"3\\\", 51 }, }; foreach (var item in list2) { Console.Write($\\\"{item.Key}:{item.Value} => \\\"); } /// <summary> /// 自定义长度排序比较器 /// </summary> public class CustomerComparer : IComparer<string> { /// <summary> /// 比较 /// </summary> /// <param name=\\\"x\\\"></param> /// <param name=\\\"y\\\"></param> /// <returns>小于零，往前排，0同一个位置，大于零：往后排</returns> public int Compare(string? x, string? y) { if (x == null || y == null) { throw new Exception(\\\"比较的值不能为null\\\"); } //长度不等 if (x.Length != y.Length) { for (var i = 0; i < Math.Min(x.Length, y.Length); i++) { if (x[i] > y[i]) { return 1; } if (x[i] < y[i]) { return -1; } } return x.Length < y.Length ? -1 : 1; } // 长度相等 for (var i = 0; i < x.Length; i++) { if (x[i] > y[i]) { return 1; } if (x[i] < y[i]) { return -1; } } return 0; } } \",\"这样子就可以实现ASCII排序排序了\",\"将上面的例子中一个代码写到控制台中发布成镜像运行(镜像用的vs默认的,其它镜像可能会缺少库)\",\"var strArr = new string[] { \\\"鄭\\\", \\\"我\\\", \\\"吧\\\", \\\"啊\\\", \\\"饿\\\", \\\"一\\\" }; // 输出当前区域以及排序规则 Console.WriteLine(CultureInfo.CurrentCulture.NativeName); // 使用默认的排序：发音排序 Array.Sort(strArr); foreach (var item in strArr) { Console.Write(item); // 本地输出结果：啊吧饿我一鄭 } Console.WriteLine(); \",\"容器输出结果为：\",\"Invariant Language (Invariant Country)\",\"一吧啊我鄭饿\",\"这不是我们想要的结果，所以就去修改dockerfile文件，尝试设置时区为上海，结果不行，经过查询资料(公众号【不才老黄】)，发现在运行镜像的时候加上以下命令就可以了\",\"docker run -e LC_ALL=zh_CN --rm sorttest # 或者 docker run -e LANG=zh_CN --rm sorttest \",\"或者如果你使用的是docker-compose，那么可以这么设置\",\"version: \\\"3\\\" services: consoleapp: container_name: consoleapp1 build: context: . dockerfile: Dockerfile environment: LC_ALL: zh_CN \",\"公众号【不才老黄】：https://mp.weixin.qq.com/s/dObFMxr4VHJzog8VDUFUjw\",\"https://learn.microsoft.com/zh-cn/previous-versions/bb688122(v=msdn.10)?redirectedfrom=MSDN\"]},\"126\":{\"h\":\"类型转换\",\"t\":[\"对象引用可以：\",\"隐式向上转换为基类的引用\",\"显式向下转换为子类的引用\"]},\"127\":{\"h\":\"隐式转换\",\"t\":[\"子类转换为父类，这个时候是隐式转换\",\"public class Animal { public string Name { get; set; } public string Sex { get; set; } } public class Dog : Animal {} // 向上类型转换创建一个基类指向子类的引用 var dog = new Dog { Name = \\\"二哈\\\", Sex = \\\"公\\\" }; Animal animal = dog; // 转换之后，被引用对象本身不会被替换或者改变 Console.WriteLine(dog==animal); // True \"]},\"128\":{\"h\":\"显示转换\",\"t\":[\"从基类引用创建一个子类引用\",\"public class Animal { public string Name { get; set; } public string Sex { get; set; } } public class Dog : Animal { } // 如果该基类是从dog子类转过来的，那么仍然可以从基类转回去dog类 var dog = new Dog { Name = \\\"dog\\\", Sex = \\\"公\\\" }; Animal animal = dog; var dog2 = (Dog)animal; Console.WriteLine(dog2.Name);// dog Console.WriteLine(dog == animal); //True Console.WriteLine(dog2 == animal); //True var animal3 = new Animal { Name = \\\"dog\\\", Sex = \\\"公\\\" }; Dog dog3 = (Dog)animal3;//错误 InvalidCastException \",\"向下转换必须是显式转换，因为有可能导致运行时错误。向下转换错误会抛出InvalidCastException错误。\",\"但是如果你还想将父类转为子类可以采用下面的方法（方法不论好坏）\",\"//直接赋值 var dog = new Dog { Name = animal3.Name, Sex = animal3.Sex }; //序列化饭序列化 var dog2 = JsonConvert.DeserializeObject<Dog>(JsonConvert.SerializeObject(animal3)); //反射赋值 var dog3 = new Dog(); //编译animal的公共属性 foreach (var item in typeof(Animal).GetProperties()) { item.SetValue(dog3, item.GetValue(animal3)); } \"]},\"129\":{\"h\":\"Parse/TryParse/Convert\",\"t\":[\"public static double Parse(string s) public static bool TryParse(string s，out double result) var str = \\\"123456\\\"; int num = int.Parse(str); // 123456 显示转换 int num2 = Convert.ToInt32(str);// 123456 显示转换 var str2 = num;// 隐式转换 \\\"123456\\\" string str3 = \\\"你好\\\"; bool issuccess = int.TryParse(str3, out int num3);//false num3=0 \",\"两者最大的区别是，如果字符串格式不满足转换的要求，Parse方法将会引发一个异常;TryParse方法则不会引发异常，它会返回false，同时将result置为0。\"]},\"130\":{\"h\":\"AS\",\"t\":[\"as操作符永远不会抛出异常，如果类型不匹配（被转换对象的运行时类型即不是所转换的目标类型，也不是其派生类型），或者类型转换的源对象为null，那么类型转换之后的值也为null。\",\"public class Animal { public string Name { get; set; } public string Sex { get; set; } } public class Dog : Animal { } var animal = new Animal(); var flag1 = animal as Dog;//null var dog = new Dog(); var flag2=dog as Animal;//Animal \",\"如果不用判断结果是否为null那么推荐使用类型转换，因为如果报错，会抛出更清晰的异常。\"]},\"131\":{\"h\":\"IS\",\"t\":[\"检查引用的转换是否能够成功，即对象是否从某个特定的类派生(或是实现某个接口)。\",\"public class Animal { public string Name { get; set; } public string Sex { get; set; } } public class Dog : Animal { } var animal = new Animal(); var flag1 = animal is Dog;//false var dog = new Dog() { Name = \\\"二哈\\\", Sex = \\\"公\\\" }; var flag2 = dog is Animal;//true //类型检查并创建实例 if (dog is Animal animal1) { Console.WriteLine(animal1.Name);//二哈 //属性比较 var flag3 = animal1 is { Sex: \\\"公\\\" };//true var flag = animal1 is { Name: \\\"二哈\\\", Sex: \\\"公\\\" };//true } \"]},\"132\":{\"h\":\"数据库介绍\",\"t\":[\"Oracle,MySQL,SQL Server,SQLlite几种常用的数据库\"]},\"133\":{\"h\":\"工具网站\",\"t\":[\"SQL格式化：https://zeroturnaround.github.io/sql-formatter/\",\"数据库连接字符串查询网站：https://conn.coderbusy.com/\",\"以商品为例\",\"商品基本信息：存储mysql\",\"商品描述详情评价(多文字类) 存储mongodb\",\"商品图片：分布式文件系统中\",\"商品关键字：搜索引擎和ISearch\",\"商品的波段性的热点高频信息：内存数据库redis\",\"商品的交易价格计算：支付系统\",\"单击数据库=》缓存加数据库加垂直拆分=》数据库读写分离=》分库分表+水平拆分+数据库集群\",\"逻辑备份方式\",\"物理备份方式\",\"冷备份\",\"热备份\",\"优点\",\"灵活，可以跨平台实施备份操作并迁移数据\",\"备份和恢复速度，容器达到低维护，高安全的效果，执行效率高\",\"可以根据日志回滚到上一秒的操作，备份恢复更为精确\",\"缺点\",\"时间长，对系统影响大，适用于数据量小的系统\",\"单独使用时候，只能提供到某一个时间点上的恢复，不能按照表、按照用户恢复，而且必须关闭数据库\",\"不灵活，操作不允许失误，否则恢复不能进行\"]},\"134\":{\"h\":\"缓存和数据库一致性\",\"t\":[\"转载地址：https://mp.weixin.qq.com/s/ACGEr8GPs9DYdsblPspAYA\",\"如何保证缓存和数据库一致性，这是一个老生常谈的话题了。\",\"但很多人对这个问题，依旧有很多疑惑：\",\"到底是更新缓存还是删缓存？\",\"到底选择先更新数据库，再删除缓存，还是先删除缓存，再更新数据库？\",\"为什么要引入消息队列保证一致性？\",\"延迟双删会有什么问题？到底要不要用？\",\"...\",\"这篇文章，我们就来把这些问题讲清楚。\",\"这篇文章干货很多，希望你可以耐心读完。\",\"图片\",\"我们从最简单的场景开始讲起。\",\"如果你的业务处于起步阶段，流量非常小，那无论是读请求还是写请求，直接操作数据库即可，这时你的架构模型是这样的：\",\"图片\",\"但随着业务量的增长，你的项目请求量越来越大，这时如果每次都从数据库中读数据，那肯定会有性能问题。\",\"这个阶段通常的做法是，引入「缓存」来提高读性能，架构模型就变成了这样：\",\"图片\",\"当下优秀的缓存中间件，当属 Redis 莫属，它不仅性能非常高，还提供了很多友好的数据类型，可以很好地满足我们的业务需求。\",\"但引入缓存之后，你就会面临一个问题：之前数据只存在数据库中，现在要放到缓存中读取，具体要怎么存呢？\",\"最简单直接的方案是「全量数据刷到缓存中」：\",\"数据库的数据，全量刷入缓存（不设置失效时间）\",\"写请求只更新数据库，不更新缓存\",\"启动一个定时任务，定时把数据库的数据，更新到缓存中\",\"图片\",\"这个方案的优点是，所有读请求都可以直接「命中」缓存，不需要再查数据库，性能非常高。\",\"但缺点也很明显，有 2 个问题：\",\"缓存利用率低：不经常访问的数据，还一直留在缓存中\",\"数据不一致：因为是「定时」刷新缓存，缓存和数据库存在不一致（取决于定时任务的执行频率）\",\"所以，这种方案一般更适合业务「体量小」，且对数据一致性要求不高的业务场景。\",\"那如果我们的业务体量很大，怎么解决这 2 个问题呢？\",\"先来看第一个问题，如何提高缓存利用率？\",\"想要缓存利用率「最大化」，我们很容易想到的方案是，缓存中只保留最近访问的「热数据」。但具体要怎么做呢？\",\"我们可以这样优化：\",\"写请求依旧只写数据库\",\"读请求先读缓存，如果缓存不存在，则从数据库读取，并重建缓存\",\"同时，写入缓存中的数据，都设置失效时间\",\"图片\",\"这样一来，缓存中不经常访问的数据，随着时间的推移，都会逐渐「过期」淘汰掉，最终缓存中保留的，都是经常被访问的「热数据」，缓存利用率得以最大化。\",\"再来看数据一致性问题。\",\"要想保证缓存和数据库「实时」一致，那就不能再用定时任务刷新缓存了。\",\"所以，当数据发生更新时，我们不仅要操作数据库，还要一并操作缓存。具体操作就是，修改一条数据时，不仅要更新数据库，也要连带缓存一起更新。\",\"但数据库和缓存都更新，又存在先后问题，那对应的方案就有 2 个：\",\"先更新缓存，后更新数据库\",\"先更新数据库，后更新缓存\",\"哪个方案更好呢？\",\"先不考虑并发问题，正常情况下，无论谁先谁后，都可以让两者保持一致，但现在我们需要重点考虑「异常」情况。\",\"因为操作分为两步，那么就很有可能存在「第一步成功、第二步失败」的情况发生。\",\"这 2 种方案我们一个个来分析。\",\"1) 先更新缓存，后更新数据库\",\"如果缓存更新成功了，但数据库更新失败，那么此时缓存中是最新值，但数据库中是「旧值」。\",\"虽然此时读请求可以命中缓存，拿到正确的值，但是，一旦缓存「失效」，就会从数据库中读取到「旧值」，重建缓存也是这个旧值。\",\"这时用户会发现自己之前修改的数据又「变回去」了，对业务造成影响。\",\"2) 先更新数据库，后更新缓存\",\"如果数据库更新成功了，但缓存更新失败，那么此时数据库中是最新值，缓存中是「旧值」。\",\"之后的读请求读到的都是旧数据，只有当缓存「失效」后，才能从数据库中得到正确的值。\",\"这时用户会发现，自己刚刚修改了数据，但却看不到变更，一段时间过后，数据才变更过来，对业务也会有影响。\",\"可见，无论谁先谁后，但凡后者发生异常，就会对业务造成影响。那怎么解决这个问题呢？\",\"别急，后面我会详细给出对应的解决方案。\",\"我们继续分析，除了操作失败问题，还有什么场景会影响数据一致性？\",\"这里我们还需要重点关注：并发问题。\",\"假设我们采用「先更新数据库，再更新缓存」的方案，并且两步都可以「成功执行」的前提下，如果存在并发，情况会是怎样的呢？\",\"有线程 A 和线程 B 两个线程，需要更新「同一条」数据，会发生这样的场景：\",\"线程 A 更新数据库（X = 1）\",\"线程 B 更新数据库（X = 2）\",\"线程 B 更新缓存（X = 2）\",\"线程 A 更新缓存（X = 1）\",\"最终 X 的值在缓存中是 1，在数据库中是 2，发生不一致。\",\"也就是说，A 虽然先于 B 发生，但 B 操作数据库和缓存的时间，却要比 A 的时间短，执行时序发生「错乱」，最终这条数据结果是不符合预期的。\",\"同样地，采用「先更新缓存，再更新数据库」的方案，也会有类似问题，这里不再详述。\",\"除此之外，我们从「缓存利用率」的角度来评估这个方案，也是不太推荐的。\",\"这是因为每次数据发生变更，都「无脑」更新缓存，但是缓存中的数据不一定会被「马上读取」，这就会导致缓存中可能存放了很多不常访问的数据，浪费缓存资源。\",\"而且很多情况下，写到缓存中的值，并不是与数据库中的值一一对应的，很有可能是先查询数据库，再经过一系列「计算」得出一个值，才把这个值才写到缓存中。\",\"由此可见，这种「更新数据库 + 更新缓存」的方案，不仅缓存利用率不高，还会造成机器性能的浪费。\",\"所以此时我们需要考虑另外一种方案：删除缓存。\",\"删除缓存对应的方案也有 2 种：\",\"先删除缓存，后更新数据库\",\"先更新数据库，后删除缓存\",\"经过前面的分析我们已经得知，但凡「第二步」操作失败，都会导致数据不一致。\",\"这里我不再详述具体场景，你可以按照前面的思路推演一下，就可以看到依旧存在数据不一致的情况。\",\"这里我们重点来看「并发」问题。\",\"1) 先删除缓存，后更新数据库\",\"如果有 2 个线程要并发「读写」数据，可能会发生以下场景：\",\"线程 A 要更新 X = 2（原值 X = 1）\",\"线程 A 先删除缓存\",\"线程 B 读缓存，发现不存在，从数据库中读取到旧值（X = 1）\",\"线程 A 将新值写入数据库（X = 2）\",\"线程 B 将旧值写入缓存（X = 1）\",\"最终 X 的值在缓存中是 1（旧值），在数据库中是 2（新值），发生不一致。\",\"可见，先删除缓存，后更新数据库，当发生「读+写」并发时，还是存在数据不一致的情况。\",\"2) 先更新数据库，后删除缓存\",\"依旧是 2 个线程并发「读写」数据：\",\"缓存中 X 不存在（数据库 X = 1）\",\"线程 A 读取数据库，得到旧值（X = 1）\",\"线程 B 更新数据库（X = 2)\",\"线程 B 删除缓存\",\"线程 A 将旧值写入缓存（X = 1）\",\"最终 X 的值在缓存中是 1（旧值），在数据库中是 2（新值），也发生不一致。\",\"这种情况「理论」来说是可能发生的，但实际真的有可能发生吗？\",\"其实概率「很低」，这是因为它必须满足 3 个条件：\",\"缓存刚好已失效\",\"读请求 + 写请求并发\",\"更新数据库 + 删除缓存的时间（步骤 3-4），要比读数据库 + 写缓存时间短（步骤 2 和 5）\",\"仔细想一下，条件 3 发生的概率其实是非常低的。\",\"因为写数据库一般会先「加锁」，所以写数据库，通常是要比读数据库的时间更长的。\",\"这么来看，「先更新数据库 + 再删除缓存」的方案，是可以保证数据一致性的。\",\"所以，我们应该采用这种方案，来操作数据库和缓存。\",\"好，解决了并发问题，我们继续来看前面遗留的，第二步执行「失败」导致数据不一致的问题。\",\"前面我们分析到，无论是更新缓存还是删除缓存，只要第二步发生失败，那么就会导致数据库和缓存不一致。\",\"保证第二步成功执行，就是解决问题的关键。\",\"想一下，程序在执行过程中发生异常，最简单的解决办法是什么？\",\"答案是：重试。\",\"是的，其实这里我们也可以这样做。\",\"无论是先操作缓存，还是先操作数据库，但凡后者执行失败了，我们就可以发起重试，尽可能地去做「补偿」。\",\"那这是不是意味着，只要执行失败，我们「无脑重试」就可以了呢？\",\"答案是否定的。现实情况往往没有想的这么简单，失败后立即重试的问题在于：\",\"立即重试很大概率「还会失败」\",\"「重试次数」设置多少才合理？\",\"重试会一直「占用」这个线程资源，无法服务其它客户端请求\",\"看到了么，虽然我们想通过重试的方式解决问题，但这种「同步」重试的方案依旧不严谨。\",\"那更好的方案应该怎么做？\",\"答案是：异步重试。什么是异步重试？\",\"其实就是把重试请求写到「消息队列」中，然后由专门的消费者来重试，直到成功。\",\"或者更直接的做法，为了避免第二步执行失败，我们可以把操作缓存这一步，直接放到消息队列中，由消费者来操作缓存。\",\"到这里你可能会问，写消息队列也有可能会失败啊？而且，引入消息队列，这又增加了更多的维护成本，这样做值得吗？\",\"这个问题很好，但我们思考这样一个问题：如果在执行失败的线程中一直重试，还没等执行成功，此时如果项目「重启」了，那这次重试请求也就「丢失」了，那这条数据就一直不一致了。\",\"所以，这里我们必须把重试或第二步操作放到另一个「服务」中，这个服务用「消息队列」最为合适。这是因为消息队列的特性，正好符合我们的需求：\",\"消息队列保证可靠性：写到队列中的消息，成功消费之前不会丢失（重启项目也不担心）\",\"消息队列保证消息成功投递：下游从队列拉取消息，成功消费后才会删除消息，否则还会继续投递消息给消费者（符合我们重试的场景）\",\"至于写队列失败和消息队列的维护成本问题：\",\"写队列失败：操作缓存和写消息队列，「同时失败」的概率其实是很小的\",\"维护成本：我们项目中一般都会用到消息队列，维护成本并没有新增很多\",\"所以，引入消息队列来解决这个问题，是比较合适的。这时架构模型就变成了这样：\",\"图片\",\"那如果你确实不想在应用中去写消息队列，是否有更简单的方案，同时又可以保证一致性呢？\",\"方案还是有的，这就是近几年比较流行的解决方案：订阅数据库变更日志，再操作缓存。\",\"具体来讲就是，我们的业务应用在修改数据时，「只需」修改数据库，无需操作缓存。\",\"那什么时候操作缓存呢？这就和数据库的「变更日志」有关了。\",\"拿 MySQL 举例，当一条数据发生修改时，MySQL 就会产生一条变更日志（Binlog），我们可以订阅这个日志，拿到具体操作的数据，然后再根据这条数据，去删除对应的缓存。\",\"图片\",\"订阅变更日志，目前也有了比较成熟的开源中间件，例如阿里的 canal，使用这种方案的优点在于：\",\"无需考虑写消息队列失败情况：只要写 MySQL 成功，Binlog 肯定会有\",\"自动投递到下游队列：canal 自动把数据库变更日志「投递」给下游的消息队列\",\"当然，与此同时，我们需要投入精力去维护 canal 的高可用和稳定性。\",\"如果你有留意观察很多数据库的特性，就会发现其实很多数据库都逐渐开始提供「订阅变更日志」的功能了，相信不远的将来，我们就不用通过中间件来拉取日志，自己写程序就可以订阅变更日志了，这样可以进一步简化流程。\",\"至此，我们可以得出结论，想要保证数据库和缓存一致性，推荐采用「先更新数据库，再删除缓存」方案，并配合「消息队列」或「订阅变更日志」的方式来做。\",\"到这里，还有 2 个问题，是我们没有重点分析过的。\",\"第一个问题，还记得前面讲到的「先删除缓存，再更新数据库」方案，导致不一致的场景么？\",\"这里我再把例子拿过来让你复习一下：\",\"2 个线程要并发「读写」数据，可能会发生以下场景：\",\"线程 A 要更新 X = 2（原值 X = 1）\",\"线程 A 先删除缓存\",\"线程 B 读缓存，发现不存在，从数据库中读取到旧值（X = 1）\",\"线程 A 将新值写入数据库（X = 2）\",\"线程 B 将旧值写入缓存（X = 1）\",\"最终 X 的值在缓存中是 1（旧值），在数据库中是 2（新值），发生不一致。\",\"第二个问题：是关于「读写分离 + 主从复制延迟」情况下，缓存和数据库一致性的问题。\",\"在「先更新数据库，再删除缓存」方案下，「读写分离 + 主从库延迟」其实也会导致不一致：\",\"线程 A 更新主库 X = 2（原值 X = 1）\",\"线程 A 删除缓存\",\"线程 B 查询缓存，没有命中，查询「从库」得到旧值（从库 X = 1）\",\"从库「同步」完成（主从库 X = 2）\",\"线程 B 将「旧值」写入缓存（X = 1）\",\"最终 X 的值在缓存中是 1（旧值），在主从库中是 2（新值），也发生不一致。\",\"看到了么？这 2 个问题的核心在于：缓存都被回种了「旧值」。\",\"那怎么解决这类问题呢？\",\"最有效的办法就是，把缓存删掉。\",\"但是，不能立即删，而是需要「延迟删」，这就是业界给出的方案：缓存延迟双删策略。\",\"按照延时双删策略，这 2 个问题的解决方案是这样的：\",\"解决第一个问题：在线程 A 删除缓存、更新完数据库之后，先「休眠一会」，再「删除」一次缓存。\",\"解决第二个问题：线程 A 可以生成一条「延时消息」，写到消息队列中，消费者延时「删除」缓存。\",\"这两个方案的目的，都是为了把缓存清掉，这样一来，下次就可以从数据库读取到最新值，写入缓存。\",\"但问题来了，这个「延迟删除」缓存，延迟时间到底设置要多久呢？\",\"问题1：延迟时间要大于「主从复制」的延迟时间\",\"问题2：延迟时间要大于线程 B 读取数据库 + 写入缓存的时间\",\"但是，这个时间在分布式和高并发场景下，其实是很难评估的**。**\",\"很多时候，我们都是凭借经验大致估算这个延迟时间，例如延迟 1-5s，只能尽可能地降低不一致的概率。\",\"所以你看，采用这种方案，也只是尽可能保证一致性而已，极端情况下，还是有可能发生不一致。\",\"所以实际使用中，我还是建议你采用「先更新数据库，再删除缓存」的方案，同时，要尽可能地保证「主从复制」不要有太大延迟，降低出问题的概率。\",\"看到这里你可能会想，这些方案还是不够完美，我就想让缓存和数据库「强一致」，到底能不能做到呢？\",\"其实很难。\",\"要想做到强一致，最常见的方案是 2PC、3PC、Paxos、Raft 这类一致性协议，但它们的性能往往比较差，而且这些方案也比较复杂，还要考虑各种容错问题。\",\"相反，这时我们换个角度思考一下，我们引入缓存的目的是什么？\",\"没错，性能。\",\"一旦我们决定使用缓存，那必然要面临一致性问题。性能和一致性就像天平的两端，无法做到都满足要求。\",\"而且，就拿我们前面讲到的方案来说，当操作数据库和缓存完成之前，只要有其它请求可以进来，都有可能查到「中间状态」的数据。\",\"所以如果非要追求强一致，那必须要求所有更新操作完成之前期间，不能有「任何请求」进来。\",\"虽然我们可以通过加「分布锁」的方式来实现，但我们要付出的代价，很可能会超过引入缓存带来的性能提升。\",\"所以，既然决定使用缓存，就必须容忍「一致性」问题，我们只能尽可能地去降低问题出现的概率。\",\"同时我们也要知道，缓存都是有「失效时间」的，就算在这期间存在短期不一致，我们依旧有失效时间来兜底，这样也能达到最终一致。\",\"好了，总结一下这篇文章的重点。\",\"1、想要提高应用的性能，可以引入「缓存」来解决\",\"2、引入缓存后，需要考虑缓存和数据库一致性问题，可选的方案有：「更新数据库 + 更新缓存」、「更新数据库 + 删除缓存」\",\"3、更新数据库 + 更新缓存方案，在「并发」场景下无法保证缓存和数据一致性，且存在「缓存资源浪费」和「机器性能浪费」的情况发生\",\"4、在更新数据库 + 删除缓存的方案中，「先删除缓存，再更新数据库」在「并发」场景下依旧有数据不一致问题，解决方案是「延迟双删」，但这个延迟时间很难评估，所以推荐用「先更新数据库，再删除缓存」的方案\",\"5、在「先更新数据库，再删除缓存」方案下，为了保证两步都成功执行，需配合「消息队列」或「订阅变更日志」的方案来做，本质是通过「重试」的方式保证数据一致性\",\"6、在「先更新数据库，再删除缓存」方案下，「读写分离 + 主从库延迟」也会导致缓存和数据库不一致，缓解此问题的方案是「延迟双删」，凭借经验发送「延迟消息」到队列中，延迟删除缓存，同时也要控制主从库延迟，尽可能降低不一致发生的概率\",\"本以为这个老生常谈的话题，写起来很好写，没想到在写的过程中，还是挖到了很多之前没有深度思考过的细节。\",\"在这里我也分享 4 点心得给你：\",\"1、性能和一致性不能同时满足，为了性能考虑，通常会采用「最终一致性」的方案\",\"2、掌握缓存和数据库一致性问题，核心问题有 3 点：缓存利用率、并发、缓存 + 数据库一起成功问题\",\"3、失败场景下要保证一致性，常见手段就是「重试」，同步重试会影响吞吐量，所以通常会采用异步重试的方案\",\"4、订阅变更日志的思想，本质是把权威数据源（例如 MySQL）当做 leader 副本，让其它异质系统（例如 Redis / Elasticsearch）成为它的 follower 副本，通过同步变更日志的方式，保证 leader 和 follower 之间保持一致\",\"很多一致性问题，都会采用这些方案来解决，希望我的这些心得对你有所启发。\"]},\"135\":{\"h\":\"介绍\",\"t\":[\".NET 是一个免费的、跨平台的、开源的开发者平台，用于构建多种不同类型的应用程序。\",\"SDK下载：https://dotnet.microsoft.com/zh-cn/download\",\"使用 .NET，您可以使用多种语言、编辑器和库来构建 Web、移动、桌面、游戏和 IoT。\",\"202212101835404\",\".Net文档：https://learn.microsoft.com/zh-cn/dotnet/fundamentals/\",\"全面的c#编码规范(勤快哥)：https://masuit.com/1755\"]},\"136\":{\"h\":\"博客\",\"t\":[\"官网: https://docs.microsoft.com/zh-cn/\",\"博客园: https://www.cnblogs.com/cate/dotnetcore/\"]},\"137\":{\"h\":\"视频\",\"t\":[\"杨中科: https://space.bilibili.com/27948784\",\"角落的白板报: https://space.bilibili.com/2954671\",\"老张的哲学8: https://space.bilibili.com/387802716\",\"dotNet源计划: https://space.bilibili.com/12074309\",\"Donet易生君: https://space.bilibili.com/486478189\",\"DotNET大王: https://space.bilibili.com/486134845\",\"杨旭: https://space.bilibili.com/361469957\",\"ArgoZhang: https://space.bilibili.com/660853738\",\"全栈ACE: https://space.bilibili.com/525836469\",\"注：排名不分先后\"]},\"138\":{\"h\":\"实验\",\"t\":[\"微软Learn: https://docs.microsoft.com/zh-cn/learn/browse/\",\"腾讯云实验室: https://cloud.tencent.com/developer/labs/gallery\",\"阿里云实验室: https://developer.aliyun.com/adc/labs -->\"]},\"139\":{\"h\":\"Net Framework 是什么\",\"t\":[\"Net Framework 是Net的一种实现，在此类库上我们可以使用C#，VB，F#进行程序编写，主要用于构建Windows 下的应用程序\",\"有两部分组成部分：\",\"公共语言运行时（CLR）处理应用程序\",\"基础类库（BCL）这是可重用的代码库，使用其编写进行应用程序编写\",\"在执行的过程中.Net编写的代码将会编译成一种称为中间语音（IL）存储形式以DLL和EXE后缀名结尾的文件为主，当程序运行时CLR会编译转换为机器代码。\",\"Net Framework 本身不是跨平台的也就是话说仅限于运行在Windows 平台，想要跨平台需要借助第三方。\"]},\"140\":{\"h\":\"Net Core 是什么\",\"t\":[\"Net Core 的出现就是为了适应软件开发的趋势，因为各种不同的设备还有云计算的出现，其他的操作系统使用量也有所增加，如果Net 不发生改变也就意味着市场将会越来越小。Net Core的出现用于满足当前以及未来软件开发的需求\",\"NetCore是一个全新的框架，是.Net的跨平台的实现，它和Net Framework有很多共同的特性，这也就意味着Net Framework从业者转到Net Core 将会变的很简单。\",\"Net Core的所有方面都是开源的，无论是类库，运行时，编译器。NET Core3.0之后支持了C#，VB，F#。\"]},\"141\":{\"h\":\"Net Standard 是什么\",\"t\":[\"Net Standard 是一个规范，它定义了Net Framewoek和Net Core必须实现的Api,它的出现为各种平台上开发的.Net人员解决了代码共享问题，但是仅用于开发类库，意思就是说如果你的类库是Net Standard规范的，那么此类库既可以是Net Framewoek也可以是Net Core类库。\",\"https://dotnet.microsoft.com/learn/dotnet/what-is-dotnet\\nNetF、NetCore、Net Standard区别：https://www.cnblogs.com/szlblog/p/11803623.html\"]},\"142\":{\"h\":\"多语言配置\",\"t\":[\"支持多语言使网站可以覆盖更广泛的受众。 ASP.NET Core 提供的服务和中间件可将网站本地化为不同的语言。\",\"本次示例环境：vs2019、net5\",\"无需引用Nuget包即可实现以下功能。\"]},\"143\":{\"h\":\"注入容器\",\"t\":[\"services.AddLocalization(t => { t.ResourcesPath = \\\"Language\\\"; }); \"]},\"144\":{\"h\":\"启用配置\",\"t\":[\"var supportedCultures = new List<CultureInfo>() { new CultureInfo(\\\"zh-CN\\\"), new CultureInfo(\\\"en-US\\\") }; app.UseRequestLocalization(new RequestLocalizationOptions { //这里指定默认语言包 DefaultRequestCulture = new RequestCulture(\\\"en-US\\\"),//为了测试配置默认语言英文 SupportedCultures = supportedCultures, SupportedUICultures = supportedCultures }); \"]},\"145\":{\"h\":\"语言配置文件\",\"t\":[\"需要在根目录新建一个文件夹，文件夹名字就是ResourcesPath的名字。资源文件(resx结尾)存放路径需要和使用的地方目录结构一致。(右键文件夹>添加>新建项)\",\"img\",\"语言包下的目录结构和MVC对应，控制器对应控制器，视图对应视图。资源文件命名方式为使用文件的文件名称加上语言代码。\",\"img\",\"在控制器中使用，依赖注入资源文件\",\"[ApiController] [Route(\\\"[controller]\\\")] public class HomeController : ControllerBase { private readonly IStringLocalizer<HomeController> _localizer; public HomeController(IStringLocalizer<HomeController> localizer) { _localizer = localizer; } [HttpGet] public string Get() { return _localizer[\\\"succeed\\\"].Value;//如果找不到succeed的本地化值，那么就返回字符串“succeed” } } \",\"有多种方法可以告诉程序需要使用哪一个语言文件，下面只说常见的使用，还支持自定义 。\",\"默认输出\",\"img\"]},\"146\":{\"h\":\"HTTP报文\",\"t\":[\"和常见的请求一样添加Accept-Language请求头即可\",\"Accept-Language:zh-CN \",\"img\"]},\"147\":{\"h\":\"Cookie\",\"t\":[\"默认使用cookie名称.AspNetCore.Culture，值是\",\"c=zh-CN|uic=zh-CN c=zh-CN uic=zh-CN \",\"c是Culture，uic是UICulture\"]},\"148\":{\"h\":\"URL参数\",\"t\":[\"三种写法，效果一样\",\"?culture=zh-CN&ui-culture=zh-CN ?culture=zh-CN ?ui-culture=zh-CN \",\"img\",\"https://docs.microsoft.com/zh-cn/aspnet/core/fundamentals/localization?view=aspnetcore-5.0\"]},\"149\":{\"h\":\"健康检查\",\"t\":[\"在开发AspNet Core应用的时候，我们经常会为该应用公布一个特殊的检测接口出来。该接口的目的很简单，告诉外界程序当前程序现在是可以访问或者不能访问的，便于外界做出相应的操作，比如监控报警，页面通知用户稍作等待等。\"]},\"150\":{\"h\":\"2.1 基本使用\",\"t\":[\"注入\",\"public void ConfigureServices(IServiceCollection services) { services.AddControllers(); services.AddHealthChecks(); } \",\"启用中间件\",\" public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); } app.UseRouting(); app.UseAuthorization(); app.UseEndpoints(endpoints => { endpoints.MapControllers(); # 通过访问地址加/health 进行访问 endpoints.MapHealthChecks(\\\"/health\\\"); }); } \"]},\"151\":{\"h\":\"2.2 目的性检查\",\"t\":[\" /// <summary> /// mysql健康检查 /// </summary> public class MySQLHealthCheck : IHealthCheck { public async Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) { try { return await Task.FromResult(HealthCheckResult.Healthy()).ConfigureAwait(false); } catch { return await Task.FromResult(HealthCheckResult.Unhealthy(\\\"From Sql Serve\\\")).ConfigureAwait(false); } } } /// <summary> /// redis健康检查 /// </summary> public class RedisHealthCheck : IHealthCheck { public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) { return Task.FromResult(HealthCheckResult.Healthy()); } } \",\"注入\",\" public void ConfigureServices(IServiceCollection services) { services.AddControllers(); //只有当所有的检查器都返回为Healthy的时候，才会认为是健康。 services.AddHealthChecks() .AddCheck<MySQLHealthCheck>(\\\"mysql_check\\\") .AddCheck<RedisHealthCheck>(\\\"redis_check\\\"); } \",\"Configure方法不需要操作，默认配置是当检查器都返回健康时候才认为是健康。\",\"单个检查，有时候我们又想进行单个检查，那就需要在 endpoints 的配置中新增另外的路由映射规则:\",\" public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); app.UseSwagger(); app.UseSwaggerUI(c => c.SwaggerEndpoint(\\\"/swagger/v1/swagger.json\\\", \\\"WebApplication7 v1\\\")); } app.UseRouting(); app.UseAuthorization(); app.UseEndpoints(endpoints => { endpoints.MapControllers(); endpoints.MapHealthChecks(\\\"/mysqlhealth\\\", new HealthCheckOptions() {//mysql Predicate = s => s.Name.Equals(\\\"mysql_check\\\"), ResponseWriter = WriteResponse }); endpoints.MapHealthChecks(\\\"/redishealth\\\", new HealthCheckOptions() //redis { Predicate = s => s.Name.Equals(\\\"redis_check\\\"), ResponseWriter = WriteResponse }); }); } /// <summary> /// 返回指定格式 /// </summary> /// <param name=\\\"context\\\"></param> /// <param name=\\\"result\\\"></param> /// <returns></returns> private static Task WriteResponse(HttpContext context, HealthReport result) { context.Response.ContentType = \\\"application/json\\\"; var json = new JObject( new JProperty(\\\"status\\\", result.Status.ToString()), new JProperty(\\\"results\\\", new JObject(result.Entries.Select(pair => new JProperty(pair.Key, new JObject(new JProperty(\\\"status\\\", pair.Value.Status.ToString()), new JProperty(\\\"description\\\", pair.Value.Description), new JProperty(\\\"data\\\", new JObject(pair.Value.Data.Select( p => new JProperty(p.Key, p.Value)))))))))); return context.Response.WriteAsync(json.ToString()); } \",\"通过访问地址：http://localhost:5000/mysqlhealth 查看mysql连接状态\",\"通过访问地址：http://localhost:5000/redishealth 查看redis连接状态\",\"img\"]},\"152\":{\"h\":\"3.1 介绍\",\"t\":[\"是一个用于.NetCore健康检查的包，支持的版本有：5.0，3.1，3.0，2.2\",\"GitHub：https://github.com/xabaril/AspNetCore.Diagnostics.HealthChecks\",\"支持一一些封装的检查\",\"Sql Server\",\"MySql\",\"Oracle\",\"Sqlite\",\"RavenDB\",\"Postgres\",\"EventStore\",\"RabbitMQ\",\"IbmMQ\",\"Elasticsearch\",\"CosmosDb\",\"Solr\",\"Redis\",\"SendGrid\",\"System: Disk Storage, Private Memory, Virtual Memory, Process, Windows Service\",\"Azure Service Bus: EventHub, Queue and Topics\",\"Azure Storage: Blob, Queue and Table\",\"Azure Key Vault\",\"Azure DocumentDb\",\"Azure IoT Hub\",\"Amazon DynamoDb\",\"Amazon S3\",\"Google Cloud Firestore\",\"Network: Ftp, SFtp, Dns, Tcp port, Smtp, Imap, Ssl\",\"MongoDB\",\"Kafka\",\"Identity Server\",\"Uri: single uri and uri groups\",\"Consul\",\"Hangfire\",\"SignalR\",\"Kubernetes\",\"ArangoDB\",\"Gremlin\",\"对应的Nuget包为\",\"Install-Package AspNetCore.HealthChecks.System Install-Package AspNetCore.HealthChecks.Network Install-Package AspNetCore.HealthChecks.SqlServer Install-Package AspNetCore.HealthChecks.MongoDb Install-Package AspNetCore.HealthChecks.Npgsql Install-Package AspNetCore.HealthChecks.Elasticsearch Install-Package AspNetCore.HealthChecks.CosmosDb Install-Package AspNetCore.HealthChecks.Solr Install-Package AspNetCore.HealthChecks.Redis Install-Package AspNetCore.HealthChecks.EventStore Install-Package AspNetCore.HealthChecks.AzureStorage Install-Package AspNetCore.HealthChecks.AzureServiceBus Install-Package AspNetCore.HealthChecks.AzureKeyVault Install-Package AspNetCore.HealthChecks.Azure.IoTHub Install-Package AspNetCore.HealthChecks.MySql Install-Package AspNetCore.HealthChecks.DocumentDb Install-Package AspNetCore.HealthChecks.SqLite Install-Package AspNetCore.HealthChecks.RavenDB Install-Package AspNetCore.HealthChecks.Kafka Install-Package AspNetCore.HealthChecks.RabbitMQ Install-Package AspNetCore.HealthChecks.IbmMQ Install-Package AspNetCore.HealthChecks.OpenIdConnectServer Install-Package AspNetCore.HealthChecks.DynamoDB Install-Package AspNetCore.HealthChecks.Oracle Install-Package AspNetCore.HealthChecks.Uris Install-Package AspNetCore.HealthChecks.Aws.S3 Install-Package AspNetCore.HealthChecks.Consul Install-Package AspNetCore.HealthChecks.Hangfire Install-Package AspNetCore.HealthChecks.SignalR Install-Package AspNetCore.HealthChecks.Kubernetes Install-Package AspNetCore.HealthChecks.Gcp.CloudFirestore Install-Package AspNetCore.HealthChecks.SendGrid Install-Package AspNetCore.HealthChecks.ArangoDb Install-Package AspNetCore.HealthChecks.Gremlin \"]},\"153\":{\"h\":\"3.2 基本使用\",\"t\":[\"本次事例来演示一个带UI界面的健康监控的基本使用，需要以下nuget包\",\" <PackageReference Include=\\\"AspNetCore.HealthChecks.UI\\\" Version=\\\"5.0.1\\\" /> <PackageReference Include=\\\"AspNetCore.HealthChecks.UI.Client\\\" Version=\\\"5.0.1\\\" /> <PackageReference Include=\\\"AspNetCore.HealthChecks.UI.InMemory.Storage\\\" Version=\\\"5.0.1\\\" /> \",\"部分代码使用上述的例子\",\"注入\",\" public void ConfigureServices(IServiceCollection services) { services.AddControllers(); services.AddHealthChecks() .AddCheck<MySQLHealthCheck>(\\\"mysql_check\\\") .AddCheck<RedisHealthCheck>(\\\"redis_check\\\"); services.AddHealthChecksUI().AddInMemoryStorage(); } \",\"使用\",\" public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); } app.UseRouting(); app.UseAuthorization(); app.UseEndpoints(endpoints => { endpoints.MapControllers(); endpoints.MapHealthChecks(\\\"/mysqlhealth\\\", new HealthCheckOptions() { Predicate = s => s.Name.Equals(\\\"mysql_check\\\"), ResponseWriter = UIResponseWriter.WriteHealthCheckUIResponse }); endpoints.MapHealthChecks(\\\"/redishealth\\\", new HealthCheckOptions() { Predicate = s => s.Name.Equals(\\\"redis_check\\\"), ResponseWriter = UIResponseWriter.WriteHealthCheckUIResponse }); endpoints.MapHealthChecksUI(); }); } \",\"配置文件\",\"{ \\\"Logging\\\": { \\\"LogLevel\\\": { \\\"Default\\\": \\\"Information\\\", \\\"Microsoft\\\": \\\"Warning\\\", \\\"Microsoft.Hosting.Lifetime\\\": \\\"Information\\\" } }, \\\"HealthChecksUI\\\": { \\\"HealthChecks\\\": [ { \\\"Name\\\": \\\"HTTP-Api-mysqlhealth\\\", \\\"Uri\\\": \\\"/mysqlhealth\\\"//新版本可以使用相对路径 }, { \\\"Name\\\": \\\"HTTP-Api-redishealth\\\", \\\"Uri\\\": \\\"/redishealth\\\" } ], \\\"Webhooks\\\": [ { \\\"Name\\\": \\\"\\\", \\\"Uri\\\": \\\"\\\", \\\"Payload\\\": \\\"\\\", \\\"RestoredPayload\\\": \\\"\\\" } ], \\\"EvaluationTimeInSeconds\\\": 10,//轮询间隔 \\\"MinimumSecondsBetweenFailureNotifications\\\": 60 }, \\\"AllowedHosts\\\": \\\"*\\\" } \",\"启动程序访问：/healthchecks-ui 地址\"]},\"154\":{\"h\":\"跨域\",\"t\":[\"浏览器的安全策略上的限制可以有效组织Ajax向另外的一个服务发起请求，这就是著名的同源策略。跨域仅仅是浏览器的行为，通过代理服务器，或者其他工具可以绕过。\",\"不同的域名、不用的端口、不用的协议之间请求都会出现跨域问题。\"]},\"155\":{\"h\":\"操作\",\"t\":[\"如何突破这种限制，可以使用CORS。\",\"public static void AddCommon(this IServiceCollection services) { services.AddCors(options => { options.AddPolicy(\\\"AllowAll\\\", p => { p.AllowAnyOrigin()//允许任务来源的主机访问 .AllowAnyMethod()//允许任何请求方式 .AllowAnyHeader();//允许任何头部 //.AllowCredentials();//允许任何证书 }); }); } \",\"Core3.0之后不允许Origin和Credentials都不做限制\",\"SetIsOriginAllowed((_) => true) 这样子就可以和AllowCredentials进行搭配 ，有时候不可以调整下顺序\",\"AddCors来添加一个跨域处理方式，AddPolicy就是加个巡逻官，看看符合规则的放进来，不符合的直接赶出去。\",\"方法\",\"介绍\",\"AllowAnyOrigin\",\"允许所有的域名请求\",\"AllowAnyMethod\",\"允许所有的请求方式GET/POST/PUT/DELETE\",\"AllowAnyHeader\",\"允许所有的头部参数\",\"AllowCredentials\",\"允许携带Cookie\",\"这里我使用的是允许所有，可以根据自身业务需要来调整，比如只允许部分域名访问，部分请求方式，部分Header：\",\"services.AddCors(options => { options.AddPolicy(\\\"AllowSome\\\", p => { p.WithOrigins(\\\"https://www.baidu.com\\\") .WithMethods(\\\"GET\\\", \\\"POST\\\") .WithHeaders(HeaderNames.ContentType, \\\"x-custom-header\\\"); }); }); \",\"在Configure中声明全局跨域\",\"public void Configure(IApplicationBuilder app, IHostingEnvironment env) { app.UseCors(\\\"AllowAll\\\"); app.UseHttpsRedirection(); app.UseMvc(); } \",\"只对面某一些控制器进行跨域\",\"[EnableCors(\\\"AllowSome\\\")] \",\"只对某一些方法进行跨域\",\"[EnableCors(\\\"AllowSome\\\")] \",\"对某个Action限制跨域\",\"[DisableCors] \"]},\"156\":{\"h\":\"路由\",\"t\":[\"Routing（路由）：更准确的应该叫做Endpoint Routing，负责将HTTP请求按照匹配规则选择对应的终结点\",\"Endpoint（终结点）：负责当HTTP请求到达时，执行代码\",\"路由是通过UseRouting和UseEndpoints两个中间件配合在一起来完成注册的：\",\"public class Startup { public void ConfigureServices(IServiceCollection services) { // 添加Routing相关服务 // 注意，其已在 ConfigureWebDefaults 中添加，无需手动添加，此处仅为演示 services.AddRouting(); } public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { app.UseRouting(); app.UseEndpoints(endpoints => { endpoints.MapGet(\\\"/\\\", async context => { await context.Response.WriteAsync(\\\"Hello World!\\\"); }); }); } } \",\"UseRouting：用于向中间件管道添加路由匹配中间件（EndpointRoutingMiddleware）。该中间件会检查应用中定义的终结点列表，然后通过匹配 URL 和 HTTP 方法来选择最佳的终结点。简单说，该中间件的作用是根据一定规则来选择出终结点\",\"UseEndpoints：用于向中间件管道添加终结点中间件（EndpointMiddleware）。可以向该中间件的终结点列表中添加终结点，并配置这些终结点要执行的委托，该中间件会负责运行由EndpointRoutingMiddleware中间件选择的终结点所关联的委托。简单说，该中间件用来执行所选择的终结点委托\",\"UseRouting与UseEndpoints必须同时使用，而且必须先调用UseRouting，再调用UseEndpoints\",\"先了解一下终结点的类结构：\",\"public class Endpoint { public Endpoint(RequestDelegate requestDelegate, EndpointMetadataCollection? metadata, string? displayName); public string? DisplayName { get; } public EndpointMetadataCollection Metadata { get; } public RequestDelegate RequestDelegate { get; } public override string? ToString(); } \",\"终结点有以下特点：\",\"可执行：含有RequestDelegate委托\",\"可扩展：含有Metadata元数据集合\",\"可选择：可选的包含路由信息\",\"可枚举：通过DI容器，查找EndpointDataSource来展示终结点集合。\"]},\"157\":{\"h\":\"获取终结点\",\"t\":[\"对于中间件还不熟悉的，可以先看一下中间件(Middleware)。\",\"在中间件管道中，我们可以通过HttpContext来检索终结点等信息。需要注意的是，终结点对象在创建完毕后，是不可变的，无法修改。\",\"在调用UseRouting之前，你可以注册一些用于修改路由操作的数据，比如UseRewriter、UseHttpMethodOverride、UsePathBase等。\",\"在调用UseRouting和UseEndpoints之间，可以注册一些用于提前处理路由结果的中间件，如UseAuthentication、UseAuthorization、UseCors等。\",\"我们一起看下面的代码：\",\"public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { app.Use(next => context => { // 在 UseRouting 调用前，始终为 null Console.WriteLine($\\\"1. Endpoint: {context.GetEndpoint()?.DisplayName ?? \\\"null\\\"}\\\"); return next(context); }); // EndpointRoutingMiddleware 调用 SetEndpoint 来设置终结点 app.UseRouting(); app.Use(next => context => { // 如果路由匹配到了终结点，那么此处就不为 null，否则，还是 null Console.WriteLine($\\\"2. Endpoint: {context.GetEndpoint()?.DisplayName ?? \\\"null\\\"}\\\"); return next(context); }); // EndpointMiddleware 通过 GetEndpoint 方法获取终结点， // 然后执行该终结点的 RequestDelegate 委托 app.UseEndpoints(endpoints => { endpoints.MapGet(\\\"/\\\", context => { // 匹配到了终结点，肯定不是 null Console.WriteLine($\\\"3. Endpoint: {context.GetEndpoint()?.DisplayName ?? \\\"null\\\"}\\\"); return Task.CompletedTask; }).WithDisplayName(\\\"Custom Display Name\\\"); // 自定义终结点名称 }); app.Use(next => context => { // 只有当路由没有匹配到终结点时，才会执行这里 Console.WriteLine($\\\"4. Endpoint: {context.GetEndpoint()?.DisplayName ?? \\\"null\\\"}\\\"); return next(context); }); } \",\"当访问/时，输出为：\",\"1. Endpoint: null 2. Endpoint: Custom Display Name 3. Endpoint: Custom Display Name \",\"当访问其他不匹配的URL时，输出为：\",\"1. Endpoint: null 2. Endpoint: null 4. Endpoint: null \",\"当路由匹配到了终结点时，EndpointMiddleware则是该路由的终端中间件；当未匹配到终结点时，会继续执行后面的中间件。\",\"终端中间件：与普通中间件不同的是，该中间件执行后即返回，不会调用后面的中间件。\"]},\"158\":{\"h\":\"配置终结点委托\",\"t\":[\"可以通过以下方法将委托关联到终结点\",\"MapGet\",\"MapPost\",\"MapPut\",\"MapDelete\",\"MapHealthChecks\",\"其他类似“MapXXX”的方法\",\"public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { app.UseRouting(); // 在执行终结点前进行授权 app.UseAuthorization(); app.UseEndpoints(endpoints => { endpoints.MapGet(\\\"/\\\", async context => await context.Response.WriteAsync(\\\"get\\\")); endpoints.MapPost(\\\"/\\\", async context => await context.Response.WriteAsync(\\\"post\\\")); endpoints.MapPut(\\\"/\\\", async context => await context.Response.WriteAsync(\\\"put\\\")); endpoints.MapDelete(\\\"/\\\", async context => await context.Response.WriteAsync(\\\"delete\\\")); endpoints.MapHealthChecks(\\\"/healthChecks\\\"); endpoints.MapControllers(); }); } \"]},\"159\":{\"h\":\"路由模板\",\"t\":[\"规则：\",\"通过{}来绑定路由参数，如:\",\"将?作为参数后缀，以指示该参数是可选的，如：\",\"通过=设置默认值，如：{name=jjj} 表示name的默认值是jjj\",\"通过:添加内联约束，如：{id:int}，后面追加:可以添加多个内联约束，如：\",\"多个路由参数间必须通过文本或分隔符分隔，例如 {a}{b} 就不符合规则，可以修改为类似 {a}+-{b} 或 {a}/{b} 的形式\",\"先举个例子，/book/{name}中的{name}为路由参数，book\",\"为非路由参数文本。非路由参数的文本和分隔符/：\",\"是不分区大小写的（官方中文文档翻译错了）\",\"要使用没有被Url编码的格式，如空格会被编码为 %20，不应使用 %20，而应使用空格\",\"如果要匹配{或}，则使用{{或}}进行转义\"]},\"160\":{\"h\":\"catch-all参数\",\"t\":[\"路由模板中的星号*和双星号**被称为catch-all参数，该参数可以作为路由参数的前缀，如/Book/{*id}、/Book/{**id}，可以匹配以/Book开头的任意Url，如/Book、/Book/、/Book/abc、/Book/abc/def等。\",\"*和**在一般使用上没有什么区别，它们仅仅在使用LinkGenerator时会有不同，如id = abc/def，当使用/Book/{*id}模板时，会生成/Book/abc%2Fdef，当使用/Book/{**id}模板时，会生成/Book/abc/def。\"]},\"161\":{\"h\":\"复杂段\",\"t\":[\"复杂段通过非贪婪的方式从右到左进行匹配，例如[Route(\\\"/a{b}c{d}\\\")]就是一个复杂段。实际上，它的确很复杂，只有了解它的工作方式，才能正确的使用它。\",\"贪婪匹配（也称为“懒惰匹配”）：匹配最大可能的字符串\",\"非贪婪匹配：匹配最小可能的字符串\",\"接下来，就拿模板[Route(\\\"/a{b}c{d}\\\")]来举两个例子：\",\"成功匹配的案例——当Url为/abcd时，匹配过程为（|用于辅助展示算法的解析方式）：\",\"从右到左读取模板，找到的第一个文本为c。接着，读取Url/abcd，可解析为/ab|c|d\",\"此时，Url中右侧的所有内容d均与路由参数{d}匹配\",\"然后，继续从右到左读取模板，找到的下一个文本为a。接着，从刚才停下的地方继续读取Url/ab|c|d，解析为/a|b|c|d\",\"此时，Url中右侧的值b与路由参数{b}匹配\",\"最后，没有剩余的路由模板段或参数，也没有剩余的Url文本，因此匹配成功。\",\"匹配失败的案例——当Url为/aabcd时，匹配过程为（|用于辅助展示算法的解析方式）：\",\"从右到左读取模板，找到的第一个文本为c。接着，读取Url/aabcd，可解析为/aab|c|d\",\"此时，Url中右侧的所有内容d均与路由参数{d}匹配\",\"然后，继续从右到左读取模板，找到的下一个文本为a。接着，从刚才停下的地方继续读取Url/aab|c|d，解析为/a|a|b|c|d\",\"此时，Url中右侧的值b与路由参数{b}匹配\",\"最后，没有剩余的路由模板段或参数，但还有剩余的Url文本，因此匹配不成功。\",\"使用复杂段，相比普通路由模板来说，会造成更加昂贵的性能影响\"]},\"162\":{\"h\":\"路由约束\",\"t\":[\"通过路由约束，可以在路由匹配过程中，检查URL是否是可接受的。另外，路由约束一般是用来消除路由歧义，而不是用来进行输入验证的。\",\"实现上，当Http请求到达时，路由参数和该参数的约束名会传递给IInlineConstraintResolver服务，IInlineConstraintResolver服务会负责创建IRouteConstraint实例，以针对Url进行处理。\",\"预定义的路****由约束\",\"摘自官方文档\",\"图片\"]},\"163\":{\"h\":\"正则表达式路由约束\",\"t\":[\"通过regex(expression)来设置正则表达式约束，并且该正则表达式是：\",\"RegexOptions.IgnoreCase：忽略大小写\",\"RegexOptions.Compiled：将该正则表达式编译为程序集。这会使得执行速度更快，但会拖慢启动时间。\",\"RegexOptions.CultureInvariant：忽略区域文化差异。\",\"另外，还需要注意对某些字符进行转义：\",\"\\\\替换为\\\\\\\\\",\"{替换为{{， }替换为}}\",\"[替换为[[，]替换为]]\",\"例如：\",\"图片\",\"指定 regex 约束的两种方式：\",\"// 内联方式 app.UseEndpoints(endpoints => { endpoints.MapGet(\\\"{message:regex(^\\\\\\\\d{{3}}-\\\\\\\\d{{2}}-\\\\\\\\d{{4}}$)}\\\", context => { return context.Response.WriteAsync(\\\"inline-constraint match\\\"); }); }); // 变量声明方式 app.UseEndpoints(endpoints => { endpoints.MapControllerRoute( name: \\\"people\\\", pattern: \\\"People/{ssn}\\\", constraints: new { ssn = \\\"^\\\\\\\\d{3}-\\\\\\\\d{2}-\\\\\\\\d{4}$\\\", }, defaults: new { controller = \\\"People\\\", action = \\\"List\\\", }); }); \",\"不要书写过于复杂的正则表达式，否则，相比普通路由模板来说，会造成更加昂贵的性能影响\"]},\"164\":{\"h\":\"自定义路由约束\",\"t\":[\"先说一句，自定义路由约束很少会用到，在你决定要自定义路由约束之前，先想想是否有其他更好的替代方案，如使用模型绑定。\",\"通过实现IRouteConstraint接口来创建自定义路由约束，该接口仅有一个Match方法，用于验证路由参数是否满足约束，返回true表示满足约束，false则表示不满足约束。\",\"以下示例要求路由参数中必须包含字符串“1”：\",\"public class MyRouteConstraint : IRouteConstraint { public bool Match(HttpContext httpContext, IRouter route, string routeKey, RouteValueDictionary values, RouteDirection routeDirection) { if (values.TryGetValue(routeKey, out object value)) { var valueStr = Convert.ToString(value, CultureInfo.InvariantCulture); return valueStr?.Contains(\\\"1\\\") ?? false; } return false; } } \",\"然后进行路由约束注册：\",\"public void ConfigureServices(IServiceCollection services) { services.AddRouting(options => { // 添加自定义路由约束，约束 Key 为 my options.ConstraintMap[\\\"my\\\"] = typeof(MyRouteConstraint); }); } \",\"最后你就可以类似如下进行使用了：\",\"[HttpGet(\\\"{id:my}\\\")] public string Get(string id) { return id; } \"]},\"165\":{\"h\":\"路由模板优先级\",\"t\":[\"考虑一下，有两个路由模板：/Book/List和/Book/{id}，当url为/Book/List时，会选择哪个呢？从结果我们可以得知，是模板/Book/List。它是根据以下规则来确定的：\",\"越具体的模板优先级越高\",\"包含更多匹配段的模板更具体\",\"含有文本的段比参数段更具体\",\"具有约束的参数段比没有约束的参数段更具体\",\"复杂段和具有约束的段同样具体\",\"catch-all参数段是最不具体的\",\"public static class RoutingServiceCollectionExtensions { public static IServiceCollection AddRouting(this IServiceCollection services) { // 内联约束解析器，负责创建 IRouteConstraint 实例 services.TryAddTransient<IInlineConstraintResolver, DefaultInlineConstraintResolver>(); // 对象池 services.TryAddTransient<ObjectPoolProvider, DefaultObjectPoolProvider>(); services.TryAddSingleton<ObjectPool<UriBuildingContext>>(s => { var provider = s.GetRequiredService<ObjectPoolProvider>(); return provider.Create<UriBuildingContext>(new UriBuilderContextPooledObjectPolicy()); }); services.TryAdd(ServiceDescriptor.Transient<TreeRouteBuilder>(s => { var loggerFactory = s.GetRequiredService<ILoggerFactory>(); var objectPool = s.GetRequiredService<ObjectPool<UriBuildingContext>>(); var constraintResolver = s.GetRequiredService<IInlineConstraintResolver>(); return new TreeRouteBuilder(loggerFactory, objectPool, constraintResolver); })); // 标记已将所有路由服务注册完毕 services.TryAddSingleton(typeof(RoutingMarkerService)); var dataSources = new ObservableCollection<EndpointDataSource>(); services.TryAddEnumerable(ServiceDescriptor.Transient<IConfigureOptions<RouteOptions>, ConfigureRouteOptions>( serviceProvider => new ConfigureRouteOptions(dataSources))); // EndpointDataSource，用于全局访问终结点列表 services.TryAddSingleton<EndpointDataSource>(s => { return new CompositeEndpointDataSource(dataSources); }); services.TryAddSingleton<ParameterPolicyFactory, DefaultParameterPolicyFactory>(); // MatcherFactory，用于根据 EndpointDataSource 创建 Matcher services.TryAddSingleton<MatcherFactory, DfaMatcherFactory>(); // DfaMatcherBuilder，用于创建 DfaMatcher 实例 services.TryAddTransient<DfaMatcherBuilder>(); services.TryAddSingleton<DfaGraphWriter>(); services.TryAddTransient<DataSourceDependentMatcher.Lifetime>(); services.TryAddSingleton<EndpointMetadataComparer>(services => { return new EndpointMetadataComparer(services); }); // LinkGenerator相关服务 services.TryAddSingleton<LinkGenerator, DefaultLinkGenerator>(); services.TryAddSingleton<IEndpointAddressScheme<string>, EndpointNameAddressScheme>(); services.TryAddSingleton<IEndpointAddressScheme<RouteValuesAddress>, RouteValuesAddressScheme>(); services.TryAddSingleton<LinkParser, DefaultLinkParser>(); // 终结点选择、匹配策略相关服务 services.TryAddSingleton<EndpointSelector, DefaultEndpointSelector>(); services.TryAddEnumerable(ServiceDescriptor.Singleton<MatcherPolicy, HttpMethodMatcherPolicy>()); services.TryAddEnumerable(ServiceDescriptor.Singleton<MatcherPolicy, HostMatcherPolicy>()); services.TryAddSingleton<TemplateBinderFactory, DefaultTemplateBinderFactory>(); services.TryAddSingleton<RoutePatternTransformer, DefaultRoutePatternTransformer>(); return services; } public static IServiceCollection AddRouting( this IServiceCollection services, Action<RouteOptions> configureOptions) { services.Configure(configureOptions); services.AddRouting(); return services; } } \"]},\"166\":{\"h\":\"UseRouting\",\"t\":[\"public static class EndpointRoutingApplicationBuilderExtensions { private const string EndpointRouteBuilder = \\\"__EndpointRouteBuilder\\\"; public static IApplicationBuilder UseRouting(this IApplicationBuilder builder) { VerifyRoutingServicesAreRegistered(builder); var endpointRouteBuilder = new DefaultEndpointRouteBuilder(builder); // 将 endpointRouteBuilder 放入共享字典中 builder.Properties[EndpointRouteBuilder] = endpointRouteBuilder; // 将 endpointRouteBuilder 作为构造函数参数传入 EndpointRoutingMiddleware return builder.UseMiddleware<EndpointRoutingMiddleware>(endpointRouteBuilder); } private static void VerifyRoutingServicesAreRegistered(IApplicationBuilder app) { // 必须先执行了 AddRouting if (app.ApplicationServices.GetService(typeof(RoutingMarkerService)) == null) { throw new InvalidOperationException(Resources.FormatUnableToFindServices( nameof(IServiceCollection), nameof(RoutingServiceCollectionExtensions.AddRouting), \\\"ConfigureServices(...)\\\")); } } } \"]},\"167\":{\"h\":\"EndpointRoutingMiddleware\",\"t\":[\"终于到了路由匹配的逻辑了，才是我们应该关注的，重点查看Invoke：\",\"internal sealed class EndpointRoutingMiddleware { private const string DiagnosticsEndpointMatchedKey = \\\"Microsoft.AspNetCore.Routing.EndpointMatched\\\"; private readonly MatcherFactory _matcherFactory; private readonly ILogger _logger; private readonly EndpointDataSource _endpointDataSource; private readonly DiagnosticListener _diagnosticListener; private readonly RequestDelegate _next; private Task<Matcher>? _initializationTask; public EndpointRoutingMiddleware( MatcherFactory matcherFactory, ILogger<EndpointRoutingMiddleware> logger, IEndpointRouteBuilder endpointRouteBuilder, DiagnosticListener diagnosticListener, RequestDelegate next) { _matcherFactory = matcherFactory ?? throw new ArgumentNullException(nameof(matcherFactory)); _logger = logger ?? throw new ArgumentNullException(nameof(logger)); _diagnosticListener = diagnosticListener ?? throw new ArgumentNullException(nameof(diagnosticListener)); _next = next ?? throw new ArgumentNullException(nameof(next)); _endpointDataSource = new CompositeEndpointDataSource(endpointRouteBuilder.DataSources); } public Task Invoke(HttpContext httpContext) { // 已经选择了终结点，则跳过匹配 var endpoint = httpContext.GetEndpoint(); if (endpoint != null) { Log.MatchSkipped(_logger, endpoint); return _next(httpContext); } // 等待 _initializationTask 初始化完成，进行匹配，并流转到下一个中间件 var matcherTask = InitializeAsync(); if (!matcherTask.IsCompletedSuccessfully) { return AwaitMatcher(this, httpContext, matcherTask); } // _initializationTask在之前就已经初始化完成了，直接进行匹配任务，并流转到下一个中间件 var matchTask = matcherTask.Result.MatchAsync(httpContext); if (!matchTask.IsCompletedSuccessfully) { return AwaitMatch(this, httpContext, matchTask); } // 流转到下一个中间件 return SetRoutingAndContinue(httpContext); static async Task AwaitMatcher(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task<Matcher> matcherTask) { var matcher = await matcherTask; // 路由匹配，选择终结点 await matcher.MatchAsync(httpContext); await middleware.SetRoutingAndContinue(httpContext); } static async Task AwaitMatch(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task matchTask) { await matchTask; await middleware.SetRoutingAndContinue(httpContext); } } [MethodImpl(MethodImplOptions.AggressiveInlining)] private Task SetRoutingAndContinue(HttpContext httpContext) { // 终结点仍然为空，则匹配失败 var endpoint = httpContext.GetEndpoint(); if (endpoint == null) { Log.MatchFailure(_logger); } else { // 匹配成功则触发事件 if (_diagnosticListener.IsEnabled() && _diagnosticListener.IsEnabled(DiagnosticsEndpointMatchedKey)) { // httpContext对象包含了相关信息 _diagnosticListener.Write(DiagnosticsEndpointMatchedKey, httpContext); } Log.MatchSuccess(_logger, endpoint); } // 流转到下一个中间件 return _next(httpContext); } private Task<Matcher> InitializeAsync() { var initializationTask = _initializationTask; if (initializationTask != null) { return initializationTask; } // 此处我删减了部分线程竞争代码，因为这不是我们讨论的重点 // 此处主要目的是在该Middleware中，确保只初始化_initializationTask一次 var matcher = _matcherFactory.CreateMatcher(_endpointDataSource); using (ExecutionContext.SuppressFlow()) { _initializationTask = Task.FromResult(matcher); } } } \",\"上述代码的核心就是将_endpointDataSource传递给_matcherFactory，创建matcher，然后进行匹配matcher.MatchAsync(httpContext)。ASP.NET Core默认使用的 matcher 类型是DfaMatcher，DFA（Deterministic Finite Automaton）是一种被称为“确定有限状态自动机”的算法，可以从候选终结点列表中查找到匹配度最高的那个终结点。\",\"UseEndpoints\",\"public static class EndpointRoutingApplicationBuilderExtensions { public static IApplicationBuilder UseEndpoints(this IApplicationBuilder builder, Action<IEndpointRouteBuilder> configure) { VerifyRoutingServicesAreRegistered(builder); VerifyEndpointRoutingMiddlewareIsRegistered(builder, out var endpointRouteBuilder); configure(endpointRouteBuilder); var routeOptions = builder.ApplicationServices.GetRequiredService<IOptions<RouteOptions>>(); foreach (var dataSource in endpointRouteBuilder.DataSources) { routeOptions.Value.EndpointDataSources.Add(dataSource); } return builder.UseMiddleware<EndpointMiddleware>(); } private static void VerifyEndpointRoutingMiddlewareIsRegistered(IApplicationBuilder app, out DefaultEndpointRouteBuilder endpointRouteBuilder) { // 将 endpointRouteBuilder 从共享字典中取出来，如果没有，则说明之前没有调用 UseRouting if (!app.Properties.TryGetValue(EndpointRouteBuilder, out var obj)) { var message = $\\\"{nameof(EndpointRoutingMiddleware)} matches endpoints setup by {nameof(EndpointMiddleware)} and so must be added to the request \\\" + $\\\"execution pipeline before {nameof(EndpointMiddleware)}. \\\" + $\\\"Please add {nameof(EndpointRoutingMiddleware)} by calling '{nameof(IApplicationBuilder)}.{nameof(UseRouting)}' inside the call \\\" + $\\\"to 'Configure(...)' in the application startup code.\\\"; throw new InvalidOperationException(message); } endpointRouteBuilder = (DefaultEndpointRouteBuilder)obj!; // UseRouting 和 UseEndpoints 必须添加到同一个 IApplicationBuilder 实例上 if (!object.ReferenceEquals(app, endpointRouteBuilder.ApplicationBuilder)) { var message = $\\\"The {nameof(EndpointRoutingMiddleware)} and {nameof(EndpointMiddleware)} must be added to the same {nameof(IApplicationBuilder)} instance. \\\" + $\\\"To use Endpoint Routing with 'Map(...)', make sure to call '{nameof(IApplicationBuilder)}.{nameof(UseRouting)}' before \\\" + $\\\"'{nameof(IApplicationBuilder)}.{nameof(UseEndpoints)}' for each branch of the middleware pipeline.\\\"; throw new InvalidOperationException(message); } } } \"]},\"168\":{\"h\":\"EndpointMiddleware\",\"t\":[\"EndpointMiddleware中间件中包含了很多异常处理和日志记录代码，为了方便查看核心逻辑，我都删除并进行了简化：\",\"internal sealed class EndpointMiddleware { internal const string AuthorizationMiddlewareInvokedKey = \\\"__AuthorizationMiddlewareWithEndpointInvoked\\\"; internal const string CorsMiddlewareInvokedKey = \\\"__CorsMiddlewareWithEndpointInvoked\\\"; private readonly ILogger _logger; private readonly RequestDelegate _next; private readonly RouteOptions _routeOptions; public EndpointMiddleware( ILogger<EndpointMiddleware> logger, RequestDelegate next, IOptions<RouteOptions> routeOptions) { _logger = logger ?? throw new ArgumentNullException(nameof(logger)); _next = next ?? throw new ArgumentNullException(nameof(next)); _routeOptions = routeOptions?.Value ?? throw new ArgumentNullException(nameof(routeOptions)); } public Task Invoke(HttpContext httpContext) { var endpoint = httpContext.GetEndpoint(); if (endpoint?.RequestDelegate != null) { // 执行该终结点的委托，并且视该中间件为终端中间件 var requestTask = endpoint.RequestDelegate(httpContext); if (!requestTask.IsCompletedSuccessfully) { return requestTask; } return Task.CompletedTask; } // 若没有终结点，则继续执行下一个中间件 return _next(httpContext); } } \",\"说了那么多，最后给大家总结了三张UML类图：\",\"RoutePattern\",\"EndPoint\",\"Matcher\",\"另外，本文仅仅提到了路由的基本使用方式和原理，如果你想要进行更加深入透彻的了解，推荐阅读蒋金楠老师的ASP.NET Core 3框架揭秘的路由部分。\",\"转自：xiaoxiaotank\\n链接：cnblogs.com/xiaoxiaotank/p/15468491.html\"]},\"169\":{\"h\":\"工具\"},\"170\":{\"h\":\"dotPeek\",\"t\":[\"官网地址：https://www.jetbrains.com/decompiler/ dotPeek 是 JetBrains 开发的一款.Net反编译工具，是.Net工具套件中的一个，而且免费使用。\",\"使用体验\",\"优点：\",\"查看源码操作快捷键更熟悉，界面更舒服\",\"可以直接搜索nuget包看源码，以及查看每个版本的\",\"缺点：\",\"不能选择语言版本\"]},\"171\":{\"h\":\"ILSpy\",\"t\":[\"官网地址：https://github.com/icsharpcode/ILSpy\",\"下载地址：https://github.com/icsharpcode/ILSpy/releases/tag/v7.2.1\",\"使用体验\",\"优点：\",\"可以选择语言版本\",\"缺点：\",\"快捷键不太习惯\",\"会把里面用到的所有程序集再你查看的时候显示到左侧，有点繁杂\"]},\"172\":{\"h\":\"dnSpy\",\"t\":[\"官网地址：https://github.com/dnSpy/dnSpy\",\"下载地址：\",\"dnSpy是一款开源的基于ILSpy发展而来的.net程序集的编辑，反编译，调试神器。 主要功能：1、程序集编辑;2、反编译器;3、调试工具;4、Tabs及tabs分组;5、提供多主题。\",\"使用体验\"]},\"173\":{\"h\":\"dnSpy\",\"t\":[\"dnSpy 是用于 .NET 调试的最有用的工具之一。它是一个很好的反编译器。但是它的主要用途是作为调试器。dnSpy允许你调试任何 .NET程序你，而无需考虑符号或者源代码。\",\"该工具的外观和感觉类似于Visual Studio。当你开始调试没有符号或者源代码的.NET进程时，dnSpy将向你显示反编译的代码。现在，这里有个魔术：你可以在反编译的代码本上中放置断点。遇到这些断点时，你将看到局部变量，线程，调用堆栈，并具有完整的调试经验。这使dnSpy成为调试第三方代码和调试生产环境的首选工具。\",\"它轻巧，无需安装。只需将文件夹复制到任何生产机器上，然后开始调试。\"]},\"174\":{\"h\":\"dotTrace\",\"t\":[\"dotTrace是JetBrains的另一个出色工具。这是我最喜欢的性能分析工具。dotTrance允许你“记录”应用程序的运行，然后分析记录的性能。你将能够看到每种调用方法花费了多长时间，数据库调用，HTTP请求以及垃圾回收期间花费的时间等等。\"]},\"175\":{\"h\":\"Fiddler\",\"t\":[\"Fiddler是Progress Telerik的免费工具。这是我最喜欢的网络请求调试工具之一。它被称为HTTP代理服务器，仅此而已。它捕获所有HTTP请求，记录数据，并按其方式发送请求\",\"对于每一个请求，你都可以查看流程，Headers，payload，response，status等所有的内容。\",\"对于调试，Fiddler具有两个有用功能：\",\"重新请求 - 你可以右键单击任何请求，然后单击“Replay”，这将再次发送完全相同的请求。在调试服务器端问题时非常有用。如果你要重现有问题的请求，Fiddler可以避免在客户端上重新运行方案以再次发送相同请求的麻烦。它还有助于处理难以重现的请求。\",\"编辑并重新请求 - 除了重新请求外，Fiddler允许我们修改请求。你可以更改标题，正文，甚至URL本身。你可以使用它来查看服务器端如何处理极端情况。或重现特定请求上发生的问题。\"]},\"176\":{\"h\":\"防坑指南\",\"t\":[\"如果把自己看成一个产品，那么简历就是说明书。\",\"写简历看似简单，想写好实则不容易。一份好的简历能帮你在一堆简历中脱颖而出。\",\"以前写过一篇写简历技巧的文章，为了方便新读者，这次是把那篇文章的精华浓缩了一下，又补充了点新内容。看过之前文章的老读者可以快速浏览这部分。\"]},\"177\":{\"h\":\"1.1 个人照片\",\"t\":[\"关于简历里放不放照片的争论，从来就没停过。虽然程序员不是靠脸吃饭，但我还倾向于放照片。\",\"通常我在看简历的时候，如果看到一个小伙子的照片很精神，我可能就会想：他写的代码八成会很整洁吧。\",\"没错，照片是别人对你的第一印象，正常人都喜欢美的东西，一张让人看着舒服、甚至是眼前一亮的照片，能增加别人对你的好感。\",\"所以我个人建议，只要你长得对得起观众，就可以在简历里放照片，可以适当美颜一下，但是别搞成了“照骗”。\"]},\"178\":{\"h\":\"1.2 基本信息\",\"t\":[\"个人基本信息，就是姓名、学历、邮箱、电话等，这部分正常写就好了，我只提醒大家别漏了以下几个面试官眼中的加分项。\",\"一般人只在个人信息里写学历，不写毕业院校。如果你的学校名气大，你可以在这部分写上毕业院校。\",\"如果你有一个和岗位相关的的博客、Github、公众号，别犹豫，也写在这里，能显得你爱学习、爱总结分享。\",\"再说一个技巧，拿公众号举个例子，如果你比较高产，在写了公众号名称之后，加一句说明，例如：50 篇原创技术文章。别小看这句说明，能锦上添花。\"]},\"179\":{\"h\":\"1.3 自我评价\",\"t\":[\"自我评价一定要花时间认真写！\",\"这是对你自己的一个全方位的说明，既是重新认识自己，又可以让对方知道你的长处、目标、价值观。而且你也不白写，以后面试过程中的自我介绍也能用得上。\",\"我看到大部分的自我评价基本是这样“为人吃苦耐劳，责任心强，工作踏实努力，学习能力强，有团队合作精神……balabalabala”。\",\"哎，我真怀疑这是在网上搜了搜，然后把这些词又组合了一遍。看这种文字真是提不起兴趣，没啥说服力，谁都会这么写。你就不能多来点例子、数字？\",\"看几个正面句子：\",\"7 年 Java 开发经验，5 年互联网行业经验，自认达到高级工程师的水平，希望以后能成长为架构师。（有目标、规划）\",\"敏建开发的忠实粉丝，单元测试驱动开发的实践者，会主动重构代码，有代码洁癖。（有良好的编码习惯）\",\"爱看技术书籍，一年看 10 本书左右，最近在看《领域驱动设计》、《企业应用架构模式》；爱学习，今年已经在极客时间上完成 5 门付费课程。(爱看书、学习)\",\"2 年团队管理经验，团队规模 15 人，团队气氛和谐，成员离职率远低于公司平均水平。曾被评选为公司优秀团队。（团队带的还不错）\"]},\"180\":{\"h\":\"1.4 技能水平\",\"t\":[\"曾经一次面试，对方简历写的“精通Spring、Redis……”，大概列了长长的十几项精通。结果面试一问，发现太水了，你这是重新定义了精通吧。\",\"熟悉、掌握、精通这类词，没有统一的标准，别乱写，别让人觉得你是吹牛。\",\"如果是新人，自己心里没底，建议可以这么写：\",\"掌握技能： 开发语言：xxx、xxx、xxx 后端框架：xxx、xxx、xxx 数据库：xxx、xxx、xxx\",\"老程序员，你觉得可以写精通就写，如果你会的技能有一大堆，别忘了要突出重点。啥是重点？一、岗位明确要求的、匹配度高的技能。二、有亮点的技能，例如：AAA 框架 3 年使用经验；读过 BBB 源码；发表 5 篇 CCC 相关文章。\"]},\"181\":{\"h\":\"1.5 项目经历\",\"t\":[\"项目经历是面试过程中重点问的，大家写的时候注意以下几点：\",\"项目经历在这里是两个词，项目和经历，一般人只写项目，忽略了经历。经历是你做了什么、你怎么做的、做完后的结果。例如：项目中的哪些部分是你做的？你是不是核心人员？自己干，还是带团队？做完你有什么成长？项目交付之后怎么样？\",\"如果你做过的项目很多，要控制项目数量，否则噼里啪啦写好几页项目，面试官会看不到重点。太早的、太小的项目就别写了，挑规模大的写，挑你参与多写，挑和岗位更匹配的写。\",\"项目名称不要写辨识度低的英文缩写，你写个 ERP 还都能看懂，如果你写个 SCF 看起来好像很洋气，但是鬼知道这是啥意思。\"]},\"182\":{\"h\":\"1.6 简历模板\",\"t\":[\"简历模板简约大方就行了。\",\"我看过那么多简历里，有些简历太花哨了，有的还配了夸张的封面，这种简历刚打开就想赶紧关上。\",\"求职者初衷是想让自己的简历更好看，和其他简历与众不同，但是有时候炫过了头，就变成 zuo 了。尤其是新人，容易在这方面发力过猛。\",\"如果想找不到工作，就用下图这种试试。\",\"img\"]},\"183\":{\"h\":\"1.7 其他\",\"t\":[\"以上几部分最重要，要多花心思，其他部分正常写就好了。简历别弄虚作假，一旦被揭穿，损失太大。\",\"简历的页数，我的观点：1 页略单薄，2 页刚刚好，尽量别超过 3 页。\",\"再额外说一下新人怎么写简历。新人，尤其是毕业生，觉得自己会的太少，没有内容可写。这种情况，需要你多收集一些目标岗位的任职要求，根据这些信息补强自己，再放到简历中去。例如，你发现岗位里要求 git、maven，如果你不会，就花时间赶紧突击一下。另外，可以在简历里多写写在校期间的获奖、实践活动，突出自己爱学习、上进这些优点，让面试官觉得你是一个潜力股也是可以加分的。\",\"总结一下，简历里要多摆事实，少说空话，展示自己的长处。想写好简历，要有点用户思维，HR 和 面试官就是用户，站在用户的角度考虑问题，想办法让你的简历打动用户。\",\"本来面试篇是打算写技术面试题的，后来琢磨了一下，不同水平、岗位的程序员对面试题的要求不一样，众口难调。于是，决定写一些面试过程的基本常识，常见的问题怎么回答，还有一些你可能不知道的坑。\",\"写到一半我就后悔了，越普适的越不好写。写太细了，大家看着啰嗦；写太粗了，又怕说不清楚，好难！\"]},\"184\":{\"h\":\"2.1 最基本的\",\"t\":[\"基本常识里最基本的就是守时，面试这么重要的事情你都迟到，面试官怎么相信你能管理好时间？\",\"另外就是注意基本礼貌，作为面试官我遇到过不少这种现象：我走进面试房间的时候，求职者坐在椅子上一动不动，连屁股都不抬一下。你是不是应该起身打个招呼？\",\"还有，求职者多带几份打印好的简历，有备无患。特别是有时候一轮面试里，你会面对多个面试官，万一人多简历少，你带的简历就派上用场了。\",\"以上这些是我面试中经常碰到的现象，所以提醒大家注意一下。至于衣着啥的，就不说了，绝大部分人都知道。\"]},\"185\":{\"h\":\"2.2 自我介绍\",\"t\":[\"一般面试都有这个环节，好好准备，提前练习，别回答的时候支支吾吾，或者啰嗦半天说不出重点。\",\"介绍的时候时间控制在 3 分钟以内，吐字清晰，至于内容可以参考简历里的自我评价，至少包括以下几部分：\",\"我是谁——我叫 xxx，目前就职于京西公司，岗位是 Java 高级工程师。\",\"我的技能——我从事 Java 开发已经 6 年了，有 3 年电商行业的开发经验，参与了京西公司海外电商项目，在项目中我主要负责 aa、bb 功能。\",\"我最合适——之前听 HR 介绍，贵公司也要做海外电商，我觉得我的经验能用得上。而且我也希望能完整经历海外电商从零到一的过程，这对我来说也是一个挑战、一个成长的机会。\",\"其他优点——我平时喜欢看技术书籍，最近在看《xxx》。\",\"面试前几分钟的好印象非常重要，好好准备你的自我介绍吧。\"]},\"186\":{\"h\":\"2.3 别不懂装懂\",\"t\":[\"面试中遇到没听过的名词、问题，别不懂装懂，你以为面试官傻吗，根本糊弄不过去，还不如诚实点说不懂。\",\"如果你不甘心说不懂怎么办？\",\"有一次我面试一个新人，我问你用过 git 吗，他想了想说没用过，然后让我给他介绍一下，介绍完之后，他说之前一直用 svn，说了说 svn 的操作。到此为止，我觉得他这个问题回答的还 ok。但是，这还没结束，他又问我 git 比 svn 好在哪。我简单说完之后，他说 git 听起来不错，之后会主动去尝试一下。\",\"你看，一个难题就这么被化解了。我对他的回答很满意，后面的面试过程也很顺利，最终录取了他。\",\"下面给大家说说经常被问到的问题。\"]},\"187\":{\"h\":\"2.4 为什么从 xx 公司离职\",\"t\":[\"离职原因这个问题，几乎 100% 会被问到。\",\"被问了之后，不要抱怨前公司、前领导，不管你经历了啥，不管你有多少委屈都不要吐槽，面试官没法给你评理，只会担心将来你是不是也会这么说他，惹不起惹不起。\",\"也不要说因为薪资低，对方会怀疑你的稳定性和对公司的忠诚度。\",\"被裁员这个原因，最好也别说，大面积裁员还好解释，否则为什么裁你不裁别人？\",\"合理的答案，例如：想去更大的公司发展；公司方向调整，和个人的发展方向不符；公司把研发部门迁到其他城市。\"]},\"188\":{\"h\":\"2.5 能接受加班吗\",\"t\":[\"遇到这个问题，有些人毫不犹豫说“能”，好像这么回答会证明自己能吃苦、不怕累。如果问“能以公司为家吗”，估计也会有人说“能”。我表示服气！\",\"你应该先问一下公司加班的时长和频率，如果工作需要的合理加班，当然可以接受。如果公司以加班为荣，为了加班而加班，你为啥要接受？\",\"当然，我承认，现在互联网公司普遍加班。如果这家公司你非常想去，这家也有加班文化，看在钱、或者镀金的份上，从就从了吧。\"]},\"189\":{\"h\":\"2.6 你的缺点是什么\",\"t\":[\"首先说明这是一个坑问题，这个问题我是不会问的。\",\"回答的时候，不用把优点包装成缺点，例如“我的缺点是追求极致，经常用业余时间把工作力争做到最好”，太假了，你这抖机灵以为面试官是白痴吗。\",\"更不要说不利面试通过的缺点，例如你说“我比较闷，不擅长和人沟通”，嗯，我看出来了，你确实不擅长沟通。\",\"我告诉你怎么回答：\",\"说对方知道的缺点——如果你是个工作 5 年的工程师，可以这么说“自己的开发经验还可以，但是产品思维还不够，有待加强”。这样回答不会被扣分。\",\"说正在克服的缺点——例如“我刚毕业一年，技术还比较弱，但是我正在网上学技术课程”。\"]},\"190\":{\"h\":\"2.7 你有职业规划吗\",\"t\":[\"这个问题我经常问，但是大部分人都回答不好。\",\"我问这个问题就俩目的：\",\"一、你想成长为什么样的人？是成为一个架构师，或者是一个技术管理者，又或者是一个行业专家……如果这个目标不清晰，你是在为了什么而努力呢。如果你觉得将来太久远，现在想不明白，好，没问题，三年之后的目标总可以吧。\",\"二、万一有缘我们成了同事，作为你的上级，我清楚你的目标之后，我乐意在工作上给你提供点机会帮你实现目标。你能成长，我也开心啊。\",\"不为了面试，为了自己，也建议大家认真想想这个问题，想的时候要结合自己的兴趣和特长。\"]},\"191\":{\"h\":\"2.8 你有什么想问的吗\",\"t\":[\"首先恭喜你，如果被问到这个问题，你这轮面试基本有戏了。\",\"“没有想问的了”，这种回答，差评！\",\"面试是双向选择，除了公司选择你，你也要选择公司。之前别人把你都了解透了，你还不借这个机会赶紧问问公司的情况，省的你将来入职之后再后悔。\",\"怎么问也是有讲究的：\",\"薪酬福利不要问太细——毕竟你还没得到这份工作，你说你打听饭补多少钱合适吗？“一年十几薪”这类可以问，大钱得关注一下。\",\"能在网上查到的不要问——兄弟，你来面试之前，不做准备工作吗？\",\"对方回答不了的不要问——曾经一个面试者，问我公司的战略是啥，我竟无言以对，都是我的错，我职位太低。\",\"可以问问工作内容、有没有培训等等这种是你看重的问题，同时也显得你对这份工作有兴趣。\",\"我目前听说过的一个 nb 的问题，是这么问的“你们为什么喜欢在这工作？”，真是个好问题，你细品一下。\",\"接着说说面试中的你要防备的坑，看起来是让你面试，实际上心怀鬼胎。\"]},\"192\":{\"h\":\"2.9 面试是骗你帮他们解决问题\",\"t\":[\"说一个网上的段子：\",\"某公司的数据库忽然坏了，公司没人能搞得定，老板很着急，把 HR 叫到办公室说：你赶紧发布一个 DBA 职位，年薪 100 万。面试的时候就问他们怎么恢复我们的数据库，另外，切记，不管他能不能答出来，都把他拒了！\",\"虽然是个段子，但是现实中真有类似的事。面试过程中就问一个问题，问的特别细，除了问你的解决思路，恨不得直接让你现场操作了。\",\"还有的面试直接让你做一个东西，你花了好几天做出来了，然后让你把代码也交出来，然后就没有然后了。\"]},\"193\":{\"h\":\"2.10 面试是为了从你口中套取机密\",\"t\":[\"这个和上面那个套路差不多。\",\"我当时做游戏的时候，经历过一次。面试刚开始还算正常，后面高潮就来了，问我日活用户数、收入流水、怎么买量的、买量成本、用户特征……\",\"这种关键信息肯定不能说啊，我感觉不对劲，后来找个借口就溜了。\"]},\"194\":{\"h\":\"2.11 培训机构以招聘的名义变相招生\",\"t\":[\"看一个网友的经历：\",\"img\",\"这种坑的普遍套路是： 1、发布大量招聘需求，且招聘的范围很广。 2、无论是本科、专科还是高中文凭，只要投递简历，均会通知参加面试。 3、面试时，会有一些人伪装成部门经理对你的技术进行打压，并指出你的众多不足。 4、洗脑让你参加“岗前培训”，并保证培训完立即上岗，培训花费从工资里扣。 5、签订“岗位培训合同”（实际上是报名协议，往往带有贷款协议！)。 6、在你一脸懵逼的情况下，报上了名，背上了债。\",\"毕业生、想转行当程序员的，一定要小心这个。\",\"如果把自己看成一个产品，那么薪酬就是价格。\",\"实话实说，我非常不擅于谈薪酬，之前很多谈薪酬的经历都是血泪史。为了写这部分内容，我请教周围好几位做 HR 的朋友。\"]},\"195\":{\"h\":\"3.1 最基本的\",\"t\":[\"照例先说一些最基本的常识。\",\"首先别太早打听薪酬，面试结果还八字没一撇的时候，你就问薪酬，会引起对方反感。正确的时机，应该是在面试基本成功的时候。\",\"其次，不要虚报当前收入。你为了多要点薪水，结果脑子一热，多报了当前收入，后面让你提供银行流水、前公司薪资证明的时候，你就傻眼了。谎言圆不上，你可能就铤而走险，伪造银行流水、薪资证明。还是那句话，造假成本太高，一旦被识破。。。。。。出来混，迟早要还的。\",\"很早之前我特别不理解 HR 讨价还价的行为，为千八百块的至于么，都是公司的钱。后来明白了，减少人力成本是 HR 的重要职责，也是她们的绩效。\"]},\"196\":{\"h\":\"3.2 提前了解行情\",\"t\":[\"想薪酬谈的好，准备工作不能少。\",\"谈薪酬之前，要先了解一下行业中和你职位相似的薪资水平。前几天网上热传一张图：大厂新入职员工职级对照表。这张图来自于民间，虽然不是很准确，但是还算靠谱。\",\"谈薪酬之前，最好能了解一下公司的奖金、分红、福利等等，了解的越多，对之后的谈薪越有帮助。\",\"很多人薪酬谈不好，都是吃了信息不对等的亏。\"]},\"197\":{\"h\":\"3.3 我要多少合适\",\"t\":[\"HR 问期望收入的时候，大多数人都很纠结：要高了，怕对方觉得你狮子大开口；要少了，自己又不甘心。\",\"报期望收入的之前，你需要先知道：\",\"很多公司有规定，没有特殊情况，加薪幅度一般不超过 30%。\",\"不要根据月工资去谈薪酬，把奖金、分红啥的都算上，根据年收入去谈。\",\"把期望收入上浮一点，再报给 HR，给双方留一个谈判空间。\",\"综合以上几点：假如你现在年收入 20 万，结合之前了解的行情，你期望收入是 25 万，这样你可以报给 HR 最低期望 27 万。经过一番讨价还价，最终在 25 万双方达成一致，即达到了你的心里预期，也满足了 HR 压价的成就感。完美！\"]},\"198\":{\"h\":\"3.4 该坚持就坚持\",\"t\":[\"面对压价，很多人坚持不住。如果你感觉自己面试表现好，相信自己值这个价钱，就算错过这家公司也不后悔，那么该坚持就坚持。毕竟跳槽是最好的涨薪机会，错过了就错过了。\",\"如果你现在的工作是 965，新工作是 996，工作时长一下多了 80%，这么一算跳槽之后，时薪还低了。面对压价不坚持一下，你对得起自己吗？\",\"再一方面 HR 除了压价，也有招聘指标，招到一个理想的员工不容易。\"]},\"199\":{\"h\":\"3.5 月薪是不是分基本工资和绩效\",\"t\":[\"很多公司的月薪分为基本工资和绩效工资两部分，比如 8000 是基本工资，2000 是绩效，看起来月薪是 1 万。但是每个月每个人都有一个绩效系数，真正的月薪是 8000 + 2000 * 系数，如果系数是低于 1 ，月薪就到不了 1 万。\",\"你们在谈薪酬的时候，要问清楚月薪是怎么组成的，如果包括了绩效，你要注意了：\",\"基本工资谈多点，绩效谈少点。别等到入职才发现月薪里面，一半基本工资，一半绩效。\",\"是不是这家公司有压绩效的习惯，是不是很多人的绩效系数都低于 1。\"]},\"200\":{\"h\":\"3.6 写到合同里\",\"t\":[\"HR 压价时候有一个惯用手段，说“我们这里一年 18 薪”。这句话的意思就是：月薪虽然不能给你那么多，但是一年发 18 个月工资，年收入能满足你的预期。\",\"这时候你就问她，18 薪能不能写到合同里？如果不能写到合同里，这么说没意义，公司发多发少就看公司的良心和盈利情况了。\",\"股票、期权、奖金等等都是一样，不管对方怎么口头承诺，一定要求写到合同里。不要不好意思提这种要求，没有合同保证的承诺都是嘴上跑火车。\"]},\"201\":{\"h\":\"3.7 谈好之后，不要再涨价\",\"t\":[\"有一个求职者谈好薪酬之后过了一天，又说工资希望能再涨 2000，理由是打听了一下公司同事的工资，觉得自己的工资偏低。\",\"首先，私下打听工资，这就是职场大忌。再说了，打听的消息够多够准吗？工资偏低这个判断准确吗？\",\"其次，谈好之后又涨价，这不是得寸进尺吗。结果工资没涨成，这份工作也没了。\",\"这种因小失大、得不偿失的事千万别干。\",\"水平有限，薪酬部分暂时先写这么多了，祝你们以后薪酬越来越高。如果认为写的不好，你告诉我，我去找那些 HR 朋友算账。\",\"我是面试官，也是求职者，接下来我要站在求职者的立场，吐槽一下面试官和公司。\",\"面试官不守时。求职者按时到了，结果等面试官等好久，真是“等待一小时，面试一刻钟”。\",\"面试官过于强势。有的面试官问问题，穷追猛打，非要把对方问到答不出来，借机打压对方。碾压别人的快感那么爽吗？\",\"面试官不尊重人。面试是双向选择，互相尊重。面试官不要太傲慢，不要打听求职者隐私。别忘了，面试官也代表了公司的形象，你这么做合适吗？\",\"多轮面试，重复问答。恨不得 3 轮面试，问的问题都差不多，更惨的是 3 轮面试要去 3 趟公司，你试试啥感觉。能不能把面试时间集中一下，把面试官集中一下。\",\"面试造火箭，工作拧螺丝。招人按照架构师的标准来，入职后写增删改查、if else。\",\"如果过了，就早点通知。求职者面试完都想早点知道结果，不通过不通知也就算了，通过了还拖好久才通知。提高点效率，早通知早让别人踏实。另外，拖太久，等你通知人选的时候，没准人家已经入职其他公司了。\",\"微信公众号【四猿外】\"]},\"202\":{\"h\":\"设计模式面试题\",\"t\":[\"1、那些地方用到了单例模式\",\"答：\",\"网站的计数器，一般也是采用单例模式实现，否则难以同步。\",\"应用程序的日志应用，一般都是单例模式实现，只有一个实例去操作才好，否则内容不好追加显示。\",\"多线程的线程池的设计一般也是采用单例模式，因为线程池要方便对池中的线程进行控制\",\"Windows的（任务管理器）就是很典型的单例模式，他不能打开俩个\",\"windows的（回收站）也是典型的单例应用。在整个系统运行过程中，回收站只维护一个实例。\",\"2、举一个用 .Net5中实现的装饰模式(decorator design pattern)？它是作用于对象层次还是类层次？ 答：装饰模式增加强了单个对象的能力。.Net5 IO 到处都使用了装饰模式，典型例子就是 Buffered 系列类如 BufferedStream 它们增强了 Stream 对象， 以实现提升性能的 Buffer 层次的读取和写入。\",\"3、适配器模式是什么？什么时候使用？**\",\"答：适配器模式（Adapter Pattern）是作为两个不兼容的接口之间的桥梁。这种类型的设计模式属于结构型模式，它结合了两个独立接口的功能。适配器模式提供对接口的转换。如果你的客户端使用某些接口，但是你有另外一些接口，你就可以写一个适配去来连接这些接口。\",\"4、适配器模式与装饰器模式有什么区别？**\",\"答：虽然适配器模式和装饰器模式的结构类似，但是每种模式的出现意图不同。适配器模式被用于桥接两个接口，而装饰模式的目的是在不修改类的情况下给类增加新的功能。\",\"装饰者模式：动态地将责任附加到对象上，若要扩展功能，装饰者模提供了比继承更有弹性的替代方案。\",\"通俗的解释：装饰模式就是给一个对象增加一些新的功能，而且是动态的，要求装饰对象和被装饰对象实现同一个接口，装饰对象持有被装饰对象的实例。\",\"适配器模式：将一个类的接口，转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。\",\"适配器模式有三种：类的适配器模式、对象的适配器模式、接口的适配器模式。\",\"通俗的说法：适配器模式将某个类的接口转换成客户端期望的另一个接口表示，目的是消除由于接口不匹配所造成的类的兼容性问题。\",\"5、适配器模式和代理模式之间有什么不同？**\",\"答：这个问题与前面的类似，适配器模式和代理模式的区别在于他们的意图不同。由于适配器模式和代理模式都是封装真正执行动作的类，因此结构是一致的，但是适配器模式用于接口之间的转换，而代理模式则是增加一个额外的中间层，以便支持分配、控制或智能访问。\",\"6、使用工厂模式最主要的好处是什么？你在哪里使用？\",\"答：工厂模式的最大好处是增加了创建对象时的封装层次。如果 你使用工厂来创建对象，之后你可以使用更高级和更高性能的实现来替换原始的产品实现或类，这不需要在调用层做任何修改。可以看我的文章工厂模式得更详细的解释和和了解更多的好处。\",\"7、什么时候使用享元模式？\",\"答：享元模式通过共享对象来避免创建太多的对象。为了使用享元模式，你需要确保你的对象是不可变的，这样你才能安全的共享。Net5中 String 池、Integer 池以及 Long 池都是很好的使用了享元模式的例子。\",\"8、什么是责任链设计模式**\",\"答：责任链模式（Chain of Responsibility Pattern）为请求创建了一个接收者对象的链。这种模式给予请求的类型，对请求的发送者和接收者进行解耦。这种类型的设计模式属于行为型模式。在这种模式中，通常每个接收者都包含对另一个接收者的引用。如果一个对象不能处理该请求，那么它会把相同的请求传给下一个接收者，依此类推。\",\"9、你可以说出几个在.Net5中使用的设计模式吗？\",\"答：装饰器设计模式（Decorator design pattern）被用于多个.Net5 IO类中。单例模式（Singleton pattern）用于Runtime，Calendar和其他的一些类中。工厂模式（Factory pattern）被用于各种不可变的类如HttpClient，像HttpClientFactory，观察者模式（Observer pattern）被用于DiagnosticSource和很多的事件监听中。\"]},\"203\":{\"h\":\"dotNet面试题\",\"t\":[\"什么是dot net core的startup class?\",\"答：Startup class是dot net core应用的入口。所有的dot net core应用必须有这个class 这个类用来配置应用。\",\"这个类的调用是在program main函数里面进行配置的。类的名字可以自己定义。\",\"什么是中间件?\",\"答：中间件在这里是指注入到应用中处理请求和响应的组件。\",\"application builder的use和run方法有什么区别?\",\"答：这两个方法都在start up class的configure方法里面调用。都是用来向应用请求管道里面添加中间件的。Use方法可以调用下一个中间件的添加，而run不会。\",\"dot net core 管道里面的map拓展有什么作用?*\",\"答：可以针对不同的路径添加不同的中间件。\",\"dot net core里面的路径是如何处理的?\",\"答：路径处理是用来为进入的请求寻找处理函数的机制。所有的路径在函数运行开始时进行注册。\",\"主要有两种路径处理方式，常规路径处理和属性路径处理。常规路径处理就是用MapRoute的方式设定调用路径，属性路径处理是指在调用函数的上方设定一个路径属性。\",\"如何在dot net core中激活session功能?\",\"答：首先要添加session包. 其次要在config service方法里面添加session。然后又在configure方法里面调用usesession。\",\"描述一下依赖注入后的服务生命周期?\",\"答：asp.net core主要提供了三种依赖注入的方式\",\"其中AddTransient与AddSingleton比较好区别\",\"AddTransient瞬时模式：每次都获取一个新的实例\",\"AddSingleton单例模式：每次都获取同一个实例\",\"而AddTransient与AddScoped的区别更不容易区别一点\",\"首先这两种方式每次请求得到的都不是同一个对象，从这点看会发现这两个都一样。\",\"但是我们可以继续分细一点，虽然不同的请求得到的结果不同，但是我们可以在同一次请求中去获取多次实例测试。\",\"小总结:\",\"AddTransient瞬时模式：每次请求，都获取一个新的实例。即使同一个请求获取多次也会是不同的实例\",\"AddScoped：每次请求，都获取一个新的实例。同一个请求获取多次会得到相同的实例\",\"AddSingleton单例模式：每次都获取同一个实例\",\"dot net core跟dot net比较有哪些更好的地方?\",\"答：第一是跨平台，它可以运行在三大操作系统上面，windows， Linux和MAC。\",\"第二是对架构本身安装没有依赖，因为所有的依赖都跟程序本身在一起。\",\"第三是dot net core处理请求的效率更高，能够处理更多的请求。\",\"第四是dot net core有更多的安装配置方法。\",\"asp dot core有哪些好的功能？\",\"答：第一是依赖注入。\",\"第二是日志系统架构。\",\"第三是引入了一个跨平台的网络服务器，kestrel。可以没有iis, apache和nginx就可以单独运行。\",\"第四是可以使用命令行创建应用。\",\"第五是使用APP settings json file来配置工程。\",\"第六是使用start up来注册服务。\",\"第七是更好的支持异步编程。\",\"第八是支持web socket和signal IR。\",\"第九是对于跨网站的请求的预防和保护机制。\",\"1、JIT是如何工作的\",\"答：JIT 引擎在编译中间代码之前，会寻找方法的本机机器代码缓存并且判断其是否可用，如果可用则直接加载，如果不可用，JIT 引擎会查找类型中的方法存根，找到该中间代码并且进行编译。\",\"2、值类型和引用类型的区别\",\"答：所有继承自System.ValueType 的类型是值类型，而其他类型都是引用类型。值类型的赋值会产生一个新的数据副本，所以每个值类型都拥有一个数据副本，而引用类型的赋值则是赋值引用。值类型的对象分配在堆栈上，而引用类型的对象分配在堆上。当比较两个值类型时，进行的是内容比较，而比较两个引用类型时，进行的是引用比较。\",\"3、解释泛型的基本原理\",\"答：泛型类似C++中的模板，允许程序员定义更通用的类型和算法，并且在具体使用时再生成具体的封闭类型。所有带泛型参数的类型都是一个开放式类型，它不能被实例化，但具备所有封闭类型的其他特性，本质上，它和封闭类型没有区别。\",\"4、如何自定义序列化和反序列化的过程\",\"答：通过实现 ISerializable 接口中的 GetObjectData 方法可以实现自定义的序列化，而通过添加带有SerializationInfo 和StreamingContext的参数的构造方法可以自定义反序列化的过程。\",\"5、如何使用 IFormattable 接口实现格式化输出\",\"答：IFormattable接口帮助类型实现了多样式的格式化输出。IFormattable 的ToString方法接受一个代表格式的字符串参数，通过对这个参数的分析来进行格式化输出。另外，IFormattable.ToString方法接受一个IFormatProvider类型的参数，以允许类型的使用者提供格式化的方法。\",\"6、请解释委托的基本原理\",\"答：委托是一类继承自System.Delegate 的类型，每个委托对象至少包含了一个指向某个方法的指针，该方法可以是实例方法，也可以是静态方法。委托实现了回调方法的机制，能够帮助程序员设计更加简洁优美的面向对象程序。\",\"7、什么是链式委托\",\"答：链式委托是指一个由委托串成的链表，当链表上的一个委托被回调时，所有链表上该委托的后续委托将会被顺序执行。\",\"8、请解释反射的基本原理和其实现的基石\",\"答：反射是一种动态分析程序集、模块、类型、字段等目标对象的机制，它的实现依托于元数据。元数据是存储在PE 文件中的数据块，它详细记录了程序集或模块内部的结构、引用的类型和程序集和清单\",\"9、如何利用反射来实现工厂模式\",\"答：使用反射可以实现灵活性较高的工厂模式，其关键在于动态地查找产品所包含的所有零件，而不需要通过代码来逐一分析使用者的需求。反射工厂模式具有灵活性高，运行效率相对较低的特点。\",\"10、如何以较小的内存代价保存 Type、Field 和 Method 信息\",\"答：System.RuntimeTypeHandle、System.RuntimeMethodHandle 和 System.RuntimeFieldHandle 三个类型，分别包含了一个指向类型、方法和字段描述的指针，用保存指针的方式来代替保存整个类型、方法和字段的信息描述对象，可以有效地减少内存的消耗。而在实际需要用到这些信息时，又可以通过这三个句柄类型对象，分别得到System.Type、System.Reflection.MethodInfo 和System.Reflection.FieldInfo 类型对象。\",\"11、如何防止 SQL注入式攻击\",\"答：SQL 注入式攻击时常见的一种攻击方法，主要利用的是系统设计的弊端。程序员在设计时需要考虑到注入式攻击的问题，避免直接使用用户输入拼接 SQL 语句，适当使用加密数据进行存储，并且在合适的场合使用存储过程。\",\"12、请简要叙述数据库连接池的机制\",\"答：ADO.NET 对上层用户提供了数据库连接池的服务，使用完的数据库连接将被有选择的保持在数据库连接池中，以供下次使用。当用户以某个连接字符串申请数据库连接时，数据库连接池将尝试寻找在池中寻找具有相同的连接字符串的连接，并直接提供给用户。\",\"13、如何提高连接池内连接的重用率\",\"答：为了提高数据库连接池的重用率，唯一的方法就是尽量保证系统访问数据库所使用的连接字符串不变。例如建立跳板数据库，使所有连接都首先尝试访问跳板数据库。另外，统一使用超级用户帐号可以进一步统一连接字符串，但这为系统带来了安全上的隐患。\",\"14、哈希表和数组列表有什么区别？\",\"答：哈希表以值对和名称的形式存储数据, 而数组列表仅存储值。\",\"你需要将名称传递给哈希表中的值, 而在数组中, 则需要传递索引号来访问值。\",\"在数组中, 你只能存储类似类型的数据类型, 而在哈希表中, 你可以存储不同类型的数据类型。例如整数, 字符串等\",\"15、什么是内存映射文件？\",\"答：内存映射文件用于将文件内容映射到应用程序的逻辑地址。它使你能够在同一台计算机上运行多个进程以彼此共享数据。要获得一个内存映射文件对象, 可以使用MemoryMappedFile.CreateFromFiles()方法。它表示磁盘上文件中的持久性内存映射文件。\",\"16、使用哪种方法在.NET中实施垃圾收集？\",\"System.GC.Collect()方法。\",\"17、.Net中有哪些不同类型的索引？\",\"答：.Net中有两种类型的索引：\",\"聚集索引和非聚集索引\",\"18、.Net中有几种类型的内存？\",\"答：.Net中有两种类型的内存\",\"堆栈内存\",\"堆内存\",\"19、元组可以容纳多少个元素？\",\"答：一个元组可以容纳1到8个元素。如果元素多于8个, 则可以将第8个元素定义为另一个元组。元组可以指定为参数或方法的返回类型。\"]},\"204\":{\"h\":\"Elasticsearch面试题\",\"t\":[\"1、ES中的倒排索引是什么？\",\"答：传统的检索方式是通过文章，逐个遍历找到对应关键词的位置。 倒排索引，是通过分词策略，形成了词和文章的映射关系表，也称倒排表，这种词典 + 映射表即为倒排索引。\",\"其中词典中存储词元，倒排表中存储该词元在哪些文中出现的位置。 有了倒排索引，就能实现 O(1) 时间复杂度的效率检索文章了，极大的提高了检索效率。\",\"加分项： 倒排索引的底层实现是基于：FST（Finite State Transducer）数据结构。\",\"Lucene 从 4+ 版本后开始大量使用的数据结构是 FST。FST 有两个优点： 1）空间占用小。通过对词典中单词前缀和后缀的重复利用，压缩了存储空间； 2）查询速度快。O(len(str)) 的查询时间复杂度。\",\"2、ES是如何实现master选举的？\",\"答：\",\"前置条件： 1）只有是候选主节点（master：true）的节点才能成为主节点。 2）最小主节点数（min_master_nodes）的目的是防止脑裂。\",\"Elasticsearch 的选主是 ZenDiscovery 模块负责的，主要包含 Ping（节点之间通过这个RPC来发现彼此）和 Unicast（单播模块包含一个主机列表以控制哪些节点需要 ping 通）这两部分； 获取主节点的核心入口为 findMaster，选择主节点成功返回对应 Master，否则返回 null。\",\"选举流程大致描述如下： 第一步：确认候选主节点数达标，elasticsearch.yml 设置的值 discovery.zen.minimum_master_nodes; 第二步：对所有候选主节点根据nodeId字典排序，每次选举每个节点都把自己所知道节点排一次序，然后选出第一个（第0位）节点，暂且认为它是master节点。 第三步：如果对某个节点的投票数达到一定的值（候选主节点数n/2+1）并且该节点自己也选举自己，那这个节点就是master。否则重新选举一直到满足上述条件。\",\"补充： \",\"这里的 id 为 string 类型。\",\"master 节点的职责主要包括集群、节点和索引的管理，不负责文档级别的管理；data 节点可以关闭 http 功能。\",\"3、如何解决ES集群的脑裂问题\",\"答：所谓集群脑裂，是指 Elasticsearch 集群中的节点（比如共 20 个），其中的 10 个选了一个 master，另外 10 个选了另一个 master 的情况。\",\"当集群 master 候选数量不小于 3 个时，可以通过设置最少投票通过数量（discovery.zen.minimum_master_nodes）超过所有候选节点一半以上来解决脑裂问题； 当候选数量为两个时，只能修改为唯一的一个 master 候选，其他作为 data 节点，避免脑裂问题\",\"4、详细描述一下ES索引文档的过程？\",\"答：这里的索引文档应该理解为文档写入 ES，创建索引的过程。\",\"第一步：客户端向集群某节点写入数据，发送请求。（如果没有指定路由/协调节点，请求的节点扮演协调节点的角色。） ​ 第二步：协调节点接受到请求后，默认使用文档 ID 参与计算（也支持通过 routing），得到该文档属于哪个分片。随后请求会被转到另外的节点。\",\"第三步：当分片所在的节点接收到来自协调节点的请求后，会将请求写入到 Memory Buffer，然后定时（默认是每隔 1 秒）写入到F ilesystem Cache，这个从 Momery Buffer 到 Filesystem Cache 的过程就叫做 refresh； 第四步：当然在某些情况下，存在 Memery Buffer 和 Filesystem Cache 的数据可能会丢失，ES 是通过 translog 的机制来保证数据的可靠性的。其实现机制是接收到请求后，同时也会写入到 translog 中，当 Filesystem cache 中的数据写入到磁盘中时，才会清除掉，这个过程叫做 flush； 第五步：在 flush 过程中，内存中的缓冲将被清除，内容被写入一个新段，段的 fsync 将创建一个新的提交点，并将内容刷新到磁盘，旧的 translog 将被删除并开始一个新的 translog。 第六步：flush 触发的时机是定时触发（默认 30 分钟）或者 translog 变得太大（默认为 512 M）时。\",\"补充：关于 Lucene 的 Segement\",\"Lucene 索引是由多个段组成，段本身是一个功能齐全的倒排索引。\",\"段是不可变的，允许 Lucene 将新的文档增量地添加到索引中，而不用从头重建索引。\",\"对于每一个搜索请求而言，索引中的所有段都会被搜索，并且每个段会消耗 CPU 的时钟周、文件句柄和内存。这意味着段的数量越多，搜索性能会越低。\",\"为了解决这个问题，Elasticsearch 会合并小段到一个较大的段，提交新的合并段到磁盘，并删除那些旧的小段。（段合并）\",\"5、详细描述一下ES更新和删除文档的过程？\",\"答：删除和更新也都是写操作，但是 Elasticsearch 中的文档是不可变的，因此不能被删除或者改动以展示其变更。\",\"磁盘上的每个段都有一个相应的 .del 文件。当删除请求发送后，文档并没有真的被删除，而是在 .del 文件中被标记为删除。该文档依然能匹配查询，但是会在结果中被过滤掉。当段合并时，在 .del 文件中被标记为删除的文档将不会被写入新段。\",\"在新的文档被创建时，Elasticsearch 会为该文档指定一个版本号，当执行更新时，旧版本的文档在 .del 文件中被标记为删除，新版本的文档被索引到一个新段。旧版本的文档依然能匹配查询，但是会在结果中被过滤掉。\",\"6、详细描述一下ES搜索的过程？\",\"答：搜索被执行成一个两阶段过程，即 Query Then Fetch； Query阶段： 查询会广播到索引中每一个分片拷贝（主分片或者副本分片）。每个分片在本地执行搜索并构建一个匹配文档的大小为 from + size 的优先队列。PS：在搜索的时候是会查询Filesystem Cache的，但是有部分数据还在Memory Buffer，所以搜索是近实时的。 每个分片返回各自优先队列中 所有文档的 ID 和排序值 给协调节点，它合并这些值到自己的优先队列中来产生一个全局排序后的结果列表。 Fetch阶段： 协调节点辨别出哪些文档需要被取回并向相关的分片提交多个 GET 请求。每个分片加载并 丰富 文档，如果有需要的话，接着返回文档给协调节点。一旦所有的文档都被取回了，协调节点返回结果给客户端。\",\"7、在并发情况下，ES如果保证读写一致？\",\"答：可以通过版本号使用乐观并发控制，以确保新版本不会被旧版本覆盖，由应用层来处理具体的冲突； 另外对于写操作，一致性级别支持quorum/one/all，默认为quorum，即只有当大多数分片可用时才允许写操作。但即使大多数可用，也可能存在因为网络等原因导致写入副本失败，这样该副本被认为故障，分片将会在一个不同的节点上重建。 对于读操作，可以设置replication为sync(默认)，这使得操作在主分片和副本分片都完成后才会返回；如果设置replication为async时，也可以通过设置搜索请求参数_preference为primary来查询主分片，确保文档是最新版本。\",\"8、 ES对于大数据量（上亿量级）的聚合如何实现？\",\"答：Elasticsearch 提供的首个近似聚合是cardinality 度量。它提供一个字段的基数，即该字段的distinct或者unique值的数目。它是基于HLL算法的。HLL 会先对我们的输入作哈希运算，然后根据哈希运算的结果中的 bits 做概率估算从而得到基数。其特点是：可配置的精度，用来控制内存的使用（更精确 ＝ 更多内存）；小的数据集精度是非常高的；我们可以通过配置参数，来设置去重需要的固定内存使用量。无论数千还是数十亿的唯一值，内存使用量只与你配置的精确度相关\",\"9、对于GC方面，在使用ES时要注意什么？\",\"答：1）倒排词典的索引需要常驻内存，无法GC，需要监控data node上segment memory增长趋势。 2）各类缓存，field cache, filter cache, indexing cache, bulk queue等等，要设置合理的大小，并且要应该根据最坏的情况来看heap是否够用，也就是各类缓存全部占满的时候，还有heap空间可以分配给其他任务吗？避免采用clear cache等“自欺欺人”的方式来释放内存。 3）避免返回大量结果集的搜索与聚合。确实需要大量拉取数据的场景，可以采用scan & scroll api来实现。 4）cluster stats驻留内存并无法水平扩展，超大规模集群可以考虑分拆成多个集群通过tribe node连接。 5）想知道heap够不够，必须结合实际应用场景，并对集群的heap使用情况做持续的监控。\",\"10、说说你们公司ES的集群架构，索引数据大小，分片有多少，以及一些调优手段？\",\"答：根据实际情况回答即可，如果是我的话会这么回答：\\n我司有多个ES集群，下面列举其中一个。该集群有20个节点，根据数据类型和日期分库，每个索引根据数据量分片，比如日均1亿+数据的，控制单索引大小在200GB以内。　\\n下面重点列举一些调优策略，仅是我做过的，不一定全面，如有其它建议或者补充欢迎留言。\\n部署层面：\\n1）最好是64GB内存的物理机器，但实际上32GB和16GB机器用的比较多，但绝对不能少于8G，除非数据量特别少，这点需要和客户方面沟通并合理说服对方。\\n2）多个内核提供的额外并发远胜过稍微快一点点的时钟频率。\\n3）尽量使用SSD，因为查询和索引性能将会得到显著提升。\\n4）避免集群跨越大的地理距离，一般一个集群的所有节点位于一个数据中心中。\\n5）设置堆内存：节点内存/2，不要超过32GB。一般来说设置export ES_HEAP_SIZE=32g环境变量，比直接写-Xmx32g -Xms32g更好一点。\\n6）关闭缓存swap。内存交换到磁盘对服务器性能来说是致命的。如果内存交换到磁盘上，一个100微秒的操作可能变成10毫秒。 再想想那么多10微秒的操作时延累加起来。不难看出swapping对于性能是多么可怕。\\n7）增加文件描述符，设置一个很大的值，如65535。Lucene使用了大量的文件，同时，Elasticsearch在节点和HTTP客户端之间进行通信也使用了大量的套接字。所有这一切都需要足够的文件描述符。\\n8）不要随意修改垃圾回收器（CMS）和各个线程池的大小。\\n9）通过设置gateway.recover_after_nodes、gateway.expected_nodes、gateway.recover_after_time可以在集群重启的时候避免过多的分片交换，这可能会让数据恢复从数个小时缩短为几秒钟。\\n索引层面：\\n1）使用批量请求并调整其大小：每次批量数据 5–15 MB 大是个不错的起始点。\\n2）段合并：Elasticsearch默认值是20MB/s，对机械磁盘应该是个不错的设置。如果你用的是SSD，可以考虑提高到100-200MB/s。如果你在做批量导入，完全不在意搜索，你可以彻底关掉合并限流。另外还可以增加 index.translog.flush_threshold_size 设置，从默认的512MB到更大一些的值，比如1GB，这可以在一次清空触发的时候在事务日志里积累出更大的段。\\n3）如果你的搜索结果不需要近实时的准确度，考虑把每个索引的index.refresh_interval 改到30s。\\n4）如果你在做大批量导入，考虑通过设置index.number_of_replicas: 0 关闭副本。\\n5）需要大量拉取数据的场景，可以采用scan & scroll api来实现，而不是from/size一个大范围。\\n存储层面：\\n1）基于数据+时间滚动创建索引，每天递增数据。控制单个索引的量，一旦单个索引很大，存储等各种风险也随之而来，所以要提前考虑+及早避免。\\n2）冷热数据分离存储，热数据（比如最近3天或者一周的数据），其余为冷数据。对于冷数据不会再写入新数据，可以考虑定期force_merge加shrink压缩操作，节省存储空间和检索效率。\"]},\"205\":{\"h\":\"MongoDB面试题\",\"t\":[\"1、MySQL与MongoDB之间最基本的差别是什么?\",\"答：MySQL和MongoDB两者都是免费开源的数据库。MySQL和MongoDB有许多基本差别包括数据的表示(data representation)，查询，关系，事务，schema的设计和定义，标准化(normalization)，速度和性能。\",\"通过比较MySQL和MongoDB，实际上我们是在比较关系型和非关系型数据库，即数据存储结构不同。详细阅读\",\"2、MongoDB成为最好NoSQL数据库的原因是什么?\",\"答：以下特点使得MongoDB成为最好的NoSQL数据库：\",\"面向文件的\",\"高性能\",\"高可用性\",\"易扩展性\",\"丰富的查询语言\",\"3、分析器在MongoDB中的作用是什么?\",\"答：MongoDB中包括了一个可以显示数据库中每个操作性能特点的数据库分析器。通过这个分析器你可以找到比预期慢的查询(或写操作);利用这一信息，比如，可以确定是否需要添加索引。\",\"4、如果用户移除对象的属性，该属性是否从存储层中删除?\",\"答：是的，用户移除属性然后对象会重新保存(re-save())。\",\"5、更新操作立刻fsync到磁盘?\",\"答：不会，磁盘写操作默认是延迟执行的。写操作可能在两三秒(默认在60秒内)后到达磁盘。例如，如果一秒内数据库收到一千个对一个对象递增的操作，仅刷新磁盘一次。\",\"6、什么是master或primary?\",\"答：它是当前备份集群(replica set)中负责处理所有写入操作的主要节点/成员。在一个备份集群中，当失效备援(failover)事件发生时，一个另外的成员会变成primary。\",\"7、 数据在什么时候才会扩展到多个分片(shard)里?\",\"答：MongoDB 分片是基于区域(range)的。所以一个集合(collection)中的所有的对象都被存放到一个块(chunk)中。只有当存在多余一个块的时候，才会有多个分片获取数据的选项。现在，每个默认块的大小是 64Mb，所以你需要至少 64 Mb 空间才可以实施一个迁移。\",\"8、分片(sharding)和复制(replication)是怎样工作的?\",\"答：每一个分片(shard)是一个分区数据的逻辑集合。分片可能由单一服务器或者集群组成，我们推荐为每一个分片(shard)使用集群。\",\"9、如果块移动操作(moveChunk)失败了，我需要手动清除部分转移的文档吗?\",\"答：不需要，移动操作是一致(consistent)并且是确定性的(deterministic);一次失败后，移动操作会不断重试;当完成后，数据只会出现在新的分片里(shard)。\",\"10、如果一个分片（Shard）停止或很慢的时候，发起一个查询会怎样？\",\"答：如果一个分片停止了，除非查询设置了“Partial”选项，否则查询会返回一个错误。如果一个分片响应很慢，MongoDB会等待它的响应。\",\"11、如何理解MongoDB中的GridFS机制，MongoDB为何使用GridFS来存储文件？\",\"答：GridFS是一种将大型文件存储在MongoDB中的文件规范。使用GridFS可以将大文件分隔成多个小文档存放，这样我们能够有效的保存大文档，而且解决了BSON对象有限制的问题。\",\"12、MongoDB支持存储过程吗？如果支持的话，怎么用？\",\"答：MongoDB支持存储过程，它是javascript写的，保存在db.system.js表中。\",\"13、当更新一个正在被迁移的块（Chunk）上的文档时会发生什么？\",\"答：更新操作会立即发生在旧的块（Chunk）上，然后更改才会在所有权转移前复制到新的分片上。\"]},\"206\":{\"h\":\"MySql面试题\",\"t\":[\"1、Mysql 的存储引擎,myisam和innodb的区别。\",\"答：\",\"1.MyISAM 是非事务的存储引擎，适合用于频繁查询的应用。表锁，不会出现死锁，适合小数据，小并发。\",\"2.innodb是支持事务的存储引擎，合于插入和更新操作比较多的应用，设计合理的话是行锁（最大区别就在锁的级别上），适合大数据，大并发。\",\"2、MySQL数据库作发布系统的存储，一天五万条以上的增量，预计运维三年,怎么优化？\",\"答：a. 设计良好的数据库结构，允许部分数据冗余，尽量避免join查询，提高效率。 b. 选择合适的表字段数据类型和存储引擎，适当的添加索引。 c. mysql库主从读写分离。 d. 找规律分表，减少单表中的数据量提高查询速度。 e。添加缓存机制，比如memcached，apc等。 f. 不经常改动的页面，生成静态页面。 g. 书写高效率的SQL。比如 SELECT * FROM TABEL 改为 SELECT field_1, field_2, field_3 FROM TABLE.\",\"3、对于大流量的网站,您采用什么样的方法来解决各页面访问量统计问题？\",\"答：a. 确认服务器是否能支撑当前访问量。 b. 优化数据库访问。 c. 禁止外部访问链接（盗链）, 比如图片盗链。 d. 控制文件下载。 e. 使用不同主机分流。 f. 使用浏览统计软件，了解访问量，有针对性的进行优化。\",\"4、锁的优化策略\",\"答：① 读写分离\",\"② 分段加锁\",\"③ 减少锁持有的时间\",\"④ 多个线程尽量以相同的顺序去获取资源\",\"5、索引的底层实现原理和优化\",\"答：B+树，经过优化的B+树\",\"主要是在所有的叶子结点中增加了指向下一个叶子节点的指针，因此InnoDB建议为大部分表使用默认自增的主键作为主索引。\",\"6、 什么情况下设置了索引但无法使用\",\"答：① 以“%”开头的LIKE语句，模糊匹配\",\"② OR语句前后没有同时使用索引\",\"③ 数据类型出现隐式转化（如varchar不加单引号的话可能会自动转换为int型）\",\"7、实践中如何优化MySQL\",\"答：① SQL语句及索引的优化\",\"② 数据库表结构的优化\",\"③ 系统配置的优化\",\"④ 硬件的优化\",\"8、SQL注入漏洞产生的原因？如何防止？\",\"答：SQL注入产生的原因：程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤，导致客户端可以通过全局变量POST和GET提交一些sql语句正常执行。\",\"防止SQL注入的方式： 开启配置文件中的magic_quotes_gpc 和 magic_quotes_runtime设置\",\"执行sql语句时使用addslashes进行sql语句转换\",\"Sql语句书写尽量不要省略双引号和单引号。\",\"过滤掉sql语句中的一些关键词：update、insert、delete、select、 * 。\",\"提高数据库表和字段的命名技巧，对一些重要的字段根据程序的特点命名，取不易被猜到的。\",\"Php配置文件中设置register_globals为off,关闭全局变量注册\",\"控制错误信息，不要在浏览器上输出错误信息，将错误信息写到日志文件中。\",\"9、索引的目的是什么？\",\"答：快速访问数据表中的特定信息，提高检索速度\",\"创建唯一性索引，保证数据库表中每一行数据的唯一性。\",\"加速表和表之间的连接\",\"使用分组和排序子句进行数据检索时，可以显著减少查询中分组和排序的时间\",\"10、索引对数据库系统的负面影响是什么？\",\"答：负面影响： 创建索引和维护索引需要耗费时间，这个时间随着数据量的增加而增加；索引需要占用物理空间，不光是表需要占用数据空间，每个索引也需要占用物理空间；当对表进行增、删、改、的时候索引也要动态维护，这样就降低了数据的维护速度。\",\"11、为数据表建立索引的原则有哪些？\",\"答：在最频繁使用的、用以缩小查询范围的字段上建立索引。\",\"在频繁使用的、需要排序的字段上建立索引\",\"12、什么情况下不宜建立索引？\",\"答：对于查询中很少涉及的列或者重复值比较多的列，不宜建立索引。\",\"对于一些特殊的数据类型，不宜建立索引，比如文本字段（text）等\",\"13、主键、外键和索引的区别？\",\"答：主键、外键和索引的区别\",\"定义：\",\"主键–唯一标识一条记录，不能有重复的，不允许为空\",\"外键–表的外键是另一表的主键, 外键可以有重复的, 可以是空值\",\"索引–该字段没有重复值，但可以有一个空值\",\"作用：\",\"主键–用来保证数据完整性\",\"外键–用来和其他表建立联系用的\",\"索引–是提高查询排序的速度\",\"个数：\",\"主键–主键只能有一个\",\"外键–一个表可以有多个外键\",\"索引–一个表可以有多个唯一索引\"]},\"207\":{\"h\":\"Nginx面试题\",\"t\":[\"1、nginx是如何实现高并发的？\",\"答：一个主进程，多个工作进程，每个工作进程可以处理多个请求，每进来一个request，会有一个worker进程去处理。但不是全程的处理，处理到可能发生阻塞的地方，比如向上游（后端）服务器转发request，并等待请求返回。那么，这个处理的worker继续处理其他请求，而一旦上游服务器返回了，就会触发这个事件，worker才会来接手，这个request才会接着往下走。由于web server的工作性质决定了每个request的大部份生命都是在网络传输中，实际上花费在server机器上的时间片不多。这是几个进程就解决高并发的秘密所在。即@skoo所说的webserver刚好属于网络io密集型应用，不算是计算密集型。\",\"2、Nginx如何处理HTTP请求？\",\"答：Nginx使用反应器模式。主事件循环等待操作系统发出准备事件的信号，这样数据就可以从套接字读取，在该实例中读取到缓冲区并进行处理。单个线程可以提供数万个并发连接。\",\"3、使用“反向代理服务器”的优点是什么?\",\"答：反向代理服务器可以隐藏源服务器的存在和特征。它充当互联网云和web服务器之间的中间层。这对于安全方面来说是很好的，特别是当您使用web托管服务时。\",\"4、列举Nginx服务器的最佳用途。\",\"答：Nginx服务器的最佳用法是在网络上部署动态HTTP内容，使用SCGI、WSGI应用程序服务器、用于脚本的FastCGI处理程序。它还可以作为负载均衡器。\",\"5、Nginx服务器上的Master和Worker进程分别是什么?\",\"答：Master进程：读取及评估配置和维持 ；Worker进程：处理请求。\",\"6、什么是C10K问题?\",\"答：C10K问题是指无法同时处理大量客户端(10,000)的网络套接字。\",\"7、请陈述stub_status和sub_filter指令的作用是什么?\",\"答：（1）Stub_status指令：该指令用于了解Nginx当前状态的当前状态，如当前的活动连接，接受和处理当前读/写/等待连接的总数 ；（2）Sub_filter指令：它用于搜索和替换响应中的内容，并快速修复陈旧的数据\",\"8、为什么不使用多线程？\",\"答：Nginx:采用单线程来异步非阻塞处理请求（管理员可以配置Nginx主进程的工作进程的数量），不会为每个请求分配cpu和内存资源，节省了大量资源，同时也减少了大量的CPU的上下文切换，所以才使得Nginx支持更高的并发。\",\"9、为什么要做动、静分离？\",\"答：在我们的软件开发中，有些请求是需要后台处理的（如：.jsp,.do等等），有些请求是不需要经过后台处理的（如：css、html、jpg、js等等），这些不需要经过后台处理的文件称为静态文件，否则动态文件。因此我们后台处理忽略静态文件，但是如果直接忽略静态文件的话，后台的请求次数就明显增多了。在我们对资源的响应速度有要求的时候，应该使用这种动静分离的策略去解决动、静分离将网站静态资源（HTML，JavaScript，CSS等）与后台应用分开部署，提高用户访问静态代码的速度，降低对后台应用访问。这里将静态资源放到nginx中，动态资源转发到tomcat服务器中,毕竟Tomcat的优势是处理动态请求。\",\"10、ngx_http_upstream_module的作用是什么?\",\"答：要在URL中保留双斜线，就必须使用merge_slashes_off；语法:merge_slashes [on/off] ； 默认值: merge_slashes on ；环境: http，server\"]},\"208\":{\"h\":\"RabbitMQ面试题\",\"t\":[\"1、如何保证RabbitMQ消息的顺序性？\",\"答：\",\"拆分多个 queue(消息队列)，每个 queue(消息队列) 一个 consumer(消费者)，就是多一些 queue (消息队列)而已，确实是麻烦点；\",\"或者就一个 queue (消息队列)但是对应一个 consumer(消费者)，然后这个 consumer(消费者)内部用内存队列做排队，然后分发给底层不同的 worker 来处理。\",\"2、消息如何分发？\",\"答：\",\"若该队列至少有一个消费者订阅，消息将以循环（round-robin）的方式发送给消费者。每条消息只会分发给一个订阅的消费者（前提是消费者能够正常处理消息并进行确认）。通过路由可实现多消费的功能\",\"3、消息基于什么传输？\",\"答：\",\"由于 TCP 连接的创建和销毁开销较大，且并发数受系统资源限制，会造成性能瓶颈。RabbitMQ 使用信道的方式来传输数据。信道是建立在真实的 TCP 连接内的虚拟连接，且每条 TCP 连接上的信道数量没有限制。\",\"4、如何保证消息不被重复消费？或者说，如何保证消息消费时的幂等性？\",\"答：\",\"先说为什么会重复消费：正常情况下，消费者在消费消息的时候，消费完毕后，会发送一个确认消息给消息队列，消息队列就知道该消息被消费了，就会将该消息从消息队列中删除；\",\"但是因为网络传输等等故障，确认信息没有传送到消息队列，导致消息队列不知道自己已经消费过该消息了，再次将消息分发给其他的消费者。\",\"针对以上问题，一个解决思路是：保证消息的唯一性，就算是多次传输，不要让消息的多次消费带来影响；保证消息等幂性； \",\"比如：在写入消息队列的数据做唯一标示，消费消息时，根据唯一标识判断是否消费过；\",\"假设你有个系统，消费一条消息就往数据库里插入一条数据，要是你一个消息重复两次，你不就插入了两条，这数据不就错了？但是你要是消费到第二次的时候，自己判断一下是否已经消费过了，若是就直接扔了，这样不就保留了一条数据，从而保证了数据的正确性。\",\"5、如何确保消息正确地发送至 RabbitMQ？ 如何确保消息接收方消费了消息？\",\"答：发送方确认模式\",\"将信道设置成 confirm 模式（发送方确认模式），则所有在信道上发布的消息都会被指派一个唯一的 ID。\",\"一旦消息被投递到目的队列后，或者消息被写入磁盘后（可持久化的消息），信道会发送一个确认给生产者（包含消息唯一 ID）。\",\"如果 RabbitMQ 发生内部错误从而导致消息丢失，会发送一条 nack（notacknowledged，未确认）消息。\",\"发送方确认模式是异步的，生产者应用程序在等待确认的同时，可以继续发送消息。当确认消息到达生产者应用程序，生产者应用程序的回调方法就会被触发来处理确认消息。\",\"接收方确认机制\",\"消费者接收每一条消息后都必须进行确认（消息接收和消息确认是两个不同操作）。只有消费者确认了消息，RabbitMQ 才能安全地把消息从队列中删除。\",\"这里并没有用到超时机制，RabbitMQ 仅通过 Consumer 的连接中断来确认是否需要重新发送消息。也就是说，只要连接不中断，RabbitMQ 给了 Consumer 足够长的时间来处理消息。保证数据的最终一致性；\",\"下面罗列几种特殊情况\",\"如果消费者接收到消息，在确认之前断开了连接或取消订阅，RabbitMQ 会认为消息没有被分发，然后重新分发给下一个订阅的消费者。（可能存在消息重复消费的隐患，需要去重）\",\"如果消费者接收到消息却没有确认消息，连接也未断开，则 RabbitMQ 认为该消费者繁忙，将不会给该消费者分发更多的消息。\",\"6、如何保证RabbitMQ消息的可靠传输？\",\"答：\",\"消息不可靠的情况可能是消息丢失，劫持等原因；\",\"丢失又分为：生产者丢失消息、消息列表丢失消息、消费者丢失消息；\",\"产者丢失消息\",\"生产者丢失消息：从生产者弄丢数据这个角度来看，RabbitMQ提供transaction和confirm模式来确保生产者不丢消息；\",\"transaction机制就是说：发送消息前，开启事务（channel.txSelect()）,然后发送消息，如果发送过程中出现什么异常，事务就会回滚（channel.txRollback()）,如果发送成功则提交事务（channel.txCommit()）。然而，这种方式有个缺点：吞吐量下降；\",\"confirm模式用的居多：一旦channel进入confirm模式，所有在该信道上发布的消息都将会被指派一个唯一的ID（从1开始），一旦消息被投递到所有匹配的队列之后；\",\"rabbitMQ就会发送一个ACK给生产者（包含消息的唯一ID），这就使得生产者知道消息已经正确到达目的队列了；\",\"如果rabbitMQ没能处理该消息，则会发送一个Nack消息给你，你可以进行重试操作。\",\"消息队列丢数据\",\"消息队列丢数据：消息持久化。\",\"处理消息队列丢数据的情况，一般是开启持久化磁盘的配置。\",\"这个持久化配置可以和confirm机制配合使用，你可以在消息持久化磁盘后，再给生产者发送一个Ack信号。\",\"这样，如果消息持久化磁盘之前，rabbitMQ阵亡了，那么生产者收不到Ack信号，生产者会自动重发。\",\"那么如何持久化呢？\",\"这里顺便说一下吧，其实也很容易，就下面两步\",\"将queue的持久化标识durable设置为true,则代表是一个持久的队列\",\"发送消息的时候将deliveryMode=2\",\"这样设置以后，即使rabbitMQ挂了，重启后也能恢复数据\",\"消费者丢失消息\",\"消费者丢失消息：消费者丢数据一般是因为采用了自动确认消息模式，改为手动确认消息即可！\",\"消费者在收到消息之后，处理消息之前，会自动回复RabbitMQ已收到消息；\",\"如果这时处理消息失败，就会丢失该消息；\",\"解决方案：处理消息成功后，手动回复确认消息。\",\"7、为什么不应该对所有的 message 都使用持久化机制？\",\"答：\",\"首先，必然导致性能的下降，因为写磁盘比写 RAM 慢的多，message 的吞吐量可能有 10 倍的差距。\",\"其次，message 的持久化机制用在 RabbitMQ 的内置 cluster 方案时会出现“坑爹”问题。矛盾点在于，若 message 设置了 persistent 属性，但 queue 未设置 durable 属性，那么当该 queue 的 owner node 出现异常后，在未重建该 queue 前，发往该 queue 的 message 将被 blackholed ；若 message 设置了 persistent 属性，同时 queue 也设置了 durable 属性，那么当 queue 的 owner node 异常且无法重启的情况下，则该 queue 无法在其他 node 上重建，只能等待其 owner node 重启后，才能恢复该 queue 的使用，而在这段时间内发送给该 queue 的 message 将被 blackholed 。\",\"所以，是否要对 message 进行持久化，需要综合考虑性能需要，以及可能遇到的问题。若想达到 100,000 条/秒以上的消息吞吐量（单 RabbitMQ 服务器），则要么使用其他的方式来确保 message 的可靠 delivery ，要么使用非常快速的存储系统以支持全持久化（例如使用 SSD）。另外一种处理原则是：仅对关键消息作持久化处理（根据业务重要程度），且应该保证关键消息的量不会导致性能瓶颈。\",\"8、如何保证高可用的？RabbitMQ 的集群\",\"答：\",\"RabbitMQ 是比较有代表性的，因为是基于主从（非分布式）做高可用性的，我们就以 RabbitMQ 为例子讲解第一种 MQ 的高可用性怎么实现。RabbitMQ 有三种模式：单机模式、普通集群模式、镜像集群模式。\",\"单机模式\",\"单机模式，就是 Demo 级别的，一般就是你本地启动了玩玩儿的?，没人生产用单机模式\",\"普通集群模式\",\"普通集群模式\",\"：\",\"意思就是在多台机器上启动多个 RabbitMQ 实例，每个机器启动一个。\",\"你创建的 queue，只会放在一个 RabbitMQ 实例上，但是每个实例都同步 queue 的元数据（元数据可以认为是 queue 的一些配置信息，通过元数据，可以找到 queue 所在实例）。你消费的时候，实际上如果连接到了另外一个实例，那么那个实例会从 queue 所在实例上拉取数据过来。这方案主要是提高吞吐量的，就是说让集群中多个节点来服务某个 queue 的读写操作。\",\"像集群模式\",\"镜像集群模式： \",\"这种模式，才是所谓的 RabbitMQ 的高可用模式。跟普通集群模式不一样的是，在镜像集群模式下，你创建的 queue，无论元数据还是 queue 里的消息都会存在于多个实例上，就是说，每个 RabbitMQ 节点都有这个 queue 的一个完整镜像，包含 queue 的全部数据的意思。然后每次你写消息到 queue 的时候，都会自动把消息同步到多个实例的 queue 上。RabbitMQ 有很好的管理控制台，就是在后台新增一个策略，这个策略是镜像集群模式的策略，指定的时候是可以要求数据同步到所有节点的，也可以要求同步到指定数量的节点，再次创建 queue 的时候，应用这个策略，就会自动将数据同步到其他的节点上去了。\",\"这样的好处在于，你任何一个机器宕机了，没事儿，其它机器（节点）还包含了这个 queue 的完整数据，别的 consumer 都可以到其它节点上去消费数据。坏处在于，第一，这个性能开销也太大了吧，消息需要同步到所有机器上，导致网络带宽压力和消耗很重！RabbitMQ 一个 queue 的数据都是放在一个节点里的，镜像集群下，也是每个节点都放这个 queue 的完整数据。\",\"8、如何解决消息队列的延时以及过期失效问题？消息队列满了以后该怎么处理？有几百万消息持续积压几小时，说说怎么解决？\",\"答：\",\"消息积压处理办法：临时紧急扩容：\",\"先修复 consumer 的问题，确保其恢复消费速度，然后将现有 cnosumer 都停掉。 新建一个 topic，partition 是原来的 10 倍，临时建立好原先 10 倍的 queue 数量。 然后写一个临时的分发数据的 consumer 程序，这个程序部署上去消费积压的数据，消费之后不做耗时的处理，直接均匀轮询写入临时建立好的 10 倍数量的 queue。 接着临时征用 10 倍的机器来部署 consumer，每一批 consumer 消费一个临时 queue 的数据。这种做法相当于是临时将 queue 资源和 consumer 资源扩大 10 倍，以正常的 10 倍速度来消费数据。 等快速消费完积压数据之后，得恢复原先部署的架构，重新用原先的 consumer 机器来消费消息。 MQ中消息失效：假设你用的是 RabbitMQ，RabbtiMQ 是可以设置过期时间的，也就是 TTL。如果消息在 queue 中积压超过一定的时间就会被 RabbitMQ 给清理掉，这个数据就没了。那这就是第二个坑了。这就不是说数据会大量积压在 mq 里，而是大量的数据会直接搞丢。我们可以采取一个方案，就是批量重导，这个我们之前线上也有类似的场景干过。就是大量积压的时候，我们当时就直接丢弃数据了，然后等过了高峰期以后，比如大家一起喝咖啡熬夜到晚上12点以后，用户都睡觉了。这个时候我们就开始写程序，将丢失的那批数据，写个临时程序，一点一点的查出来，然后重新灌入 mq 里面去，把白天丢的数据给他补回来。也只能是这样了。假设 1 万个订单积压在 mq 里面，没有处理，其中 1000 个订单都丢了，你只能手动写程序把那 1000 个订单给查出来，手动发到 mq 里去再补一次。\",\"mq消息队列块满了：如果消息积压在 mq 里，你很长时间都没有处理掉，此时导致 mq 都快写满了，咋办？这个还有别的办法吗？没有，谁让你第一个方案执行的太慢了，你临时写程序，接入数据来消费，消费一个丢弃一个，都不要了，快速消费掉所有的消息。然后走第二个方案，到了晚上再补数据吧。\",\"9、消息的重复问题\",\"答：\",\"造成消息重复的根本原因是：网络不可达。\",\"所以解决这个问题的办法就是绕过这个问题。那么问题就变成了：如果消费端收到两条一样的消息，应该怎样处理？\",\"消费端处理消息的业务逻辑保持幂等性。只要保持幂等性，不管来多少条重复消息，最后处理的结果都一样。保证每条消息都有唯一编号且保证消息处理成功与去重表的日志同时出现。利用一张日志表来记录已经处理成功的消息的 ID，如果新到的消息 ID 已经在日志表中，那么就不再处理这条消息。\",\"10、rabbitmq 的使用场景\",\"答：\",\"（1）服务间异步通信\",\"（2）顺序消费\",\"（3）定时任务\",\"（4）请求削峰\",\"11、消息队列有什么优缺点？RabbitMQ有什么优缺点？\",\"答：\",\"优点上面已经说了，就是在特殊场景下有其对应的好处，解耦、异步、削峰。\",\"缺点有以下几个：\",\"系统可用性降低 本来系统运行好好的，现在你非要加入个消息队列进去，那消息队列挂了，你的系统不是呵呵了。因此，系统可用性会降低；\",\"系统复杂度提高 加入了消息队列，要多考虑很多方面的问题，比如：一致性问题、如何保证消息不被重复消费、如何保证消息可靠性传输等。因此，需要考虑的东西更多，复杂性增大。\",\"一致性问题\\nA 系统处理完了直接返回成功了，人都以为你这个请求就成功了；但是问题是，要是 BCD 三个系统那里，BD 两个系统写库成功了，结果 C 系统写库失败了，咋整？你这数据就不一致了。\"]},\"209\":{\"h\":\"Redis面试题\",\"t\":[\"1、Redis 有哪几种数据淘汰策略？\",\"答：\",\"noeviction:返回错误当内存限制达到，并且客户端尝试执行会让更多内存被使用的命令。\",\"allkeys-lru: 尝试回收最少使用的键（LRU），使得新添加的数据有空间存放。\",\"volatile-lru: 尝试回收最少使用的键（LRU），但仅限于在过期集合的键,使得新添加的数据有空间存放。\",\"allkeys-random: 回收随机的键使得新添加的数据有空间存放。\",\"volatile-random: 回收随机的键使得新添加的数据有空间存放，但仅限于在过期集合的键。\",\"volatile-ttl: 回收在过期集合的键，并且优先回收存活时间（TTL）较短的键,使得新添加的数据有空间存放。\",\"2、Redis 一个字符串类型的值能存储最大容量是多少？\",\"512M\",\"3、为什么 Redis 需要把所有数据放到内存中？\",\"答：Redis 为了达到最快的读写速度将数据都读到内存中，并通过异步的方式将数据写入磁盘。\",\"所以 redis 具有快速和数据持久化的特征，如果不将数据放在内存中，磁盘 I/O 速度为严重影响 redis 的性能。\",\"在内存越来越便宜的今天，redis 将会越来越受欢迎， 如果设置了最大使用的内存，则数据已有记录数达到内存限值后不能继续插入新值。\",\"4、Redis 集群方案应该怎么做？都有哪些方案？\",\"codis\",\"目前用的最多的集群方案，基本和 twemproxy 一致的效果，但它支持在节点数量改变情况下，旧节点数据可恢复到新 hash 节点。\",\"redis cluster3.0 自带的集群，特点在于他的分布式算法不是一致性 hash，而是 hash 槽的概念，以及自身支持节点设置从节点。\",\"在业务代码层实现，起几个毫无关联的 redis 实例，在代码层，对 key 进行 hash 计算，然后去对应的redis 实例操作数据。这种方式对 hash 层代码要求比较高，考虑部分包括，节点失效后的替代算法方案，数据震荡后的自动脚本恢复，实例的监控，等等。\",\"5、Redis 集群方案什么情况下会导致整个集群不可用？\",\"答：有 A，B，C 三个节点的集群,在没有复制模型的情况下,如果节点 B 失败了，那么整个集群就会以为缺少5501-11000 这个范围的槽而不可用。\",\"6、MySQL 里有 2000w 数据，redis 中只存 20w 的数据，如何保证 redis 中的数据都是热点数据？\",\"答：redis 内存数据集大小上升到一定大小的时候，就会施行数据淘汰策略。\",\"7、Redis 有哪些适合的场景？\",\"会话缓存（Session Cache）\",\"全页缓存（FPC）\",\"队列\",\"排行榜/计数器\",\"发布/订阅\",\"8、说说 Redis 哈希槽的概念？\",\"答：Redis 集群没有使用一致性 hash,而是引入了哈希槽的概念，Redis 集群有 16384 个哈希槽，每个 key 通过 CRC16 校验后对 16384 取模来决定放置哪个槽，集群的每个节点负责一部分 hash 槽。\",\"9、Redis 集群的主从复制模型是怎样的？\",\"答：为了使在部分节点失败或者大部分节点无法通信的情况下集群仍然可用，所以集群使用了主从复制模型,每个节点都会有 N-1 个复制品.\",\"10、Redis 集群会有写操作丢失吗？为什么？\",\"答：Redis 并不能保证数据的强一致性，这意味着在实际中集群在特定的条件下可能会丢失写操作。\",\"11、Redis 集群之间是如何复制的？\",\"答：异步复制\",\"12、Redis 集群最大节点个数是多少？\",\"答：16384 个\",\"13、Redis 集群如何选择数据库？\",\"答：Redis 集群目前无法做数据库选择，默认在 0 数据库。\",\"14、Redis 如何做内存优化？\",\"答：尽可能使用散列表（hashes），散列表（是说散列表里面存储的数少）使用的内存非常小，所以你应该尽可能的将你的数据模型抽象到一个散列表里面。\",\"比如你的 web 系统中有一个用户对象，不要为这个用户的名称，姓氏，邮箱，密码设置单独的 key,而是应该把这个用户的所有信息存储到一张散列表里面。\",\"15、什么是缓存穿透？如何避免？什么是缓存雪崩？何如避免？\",\"缓存穿透\",\"一般的缓存系统，都是按照 key 去缓存查询，如果不存在对应的 value，就应该去后端系统查找（比如DB）。一些恶意的请求会故意查询不存在的 key,请求量很大，就会对后端系统造成很大的压力。这就叫做缓存穿透。\",\"如何避免？\",\"1：对查询结果为空的情况也进行缓存，缓存时间设置短一点，或者该 key 对应的数据 insert 了之后清理缓存。\",\"2：对一定不存在的 key 进行过滤。可以把所有的可能存在的 key 放到一个大的 Bitmap 中，查询时通过该 bitmap 过滤。\",\"缓存雪崩\",\"当缓存服务器重启或者大量缓存集中在某一个时间段失效，这样在失效的时候，会给后端系统带来很大压力。导致系统崩溃。\",\"如何避免？\",\"1：在缓存失效后，通过加锁或者队列来控制读数据库写缓存的线程数量。比如对某个 key 只允许一个线程查询数据和写缓存，其他线程等待。\",\"2：做二级缓存，A1 为原始缓存，A2 为拷贝缓存，A1 失效时，可以访问 A2，A1 缓存失效时间设置为短期，A2 设置为长期\",\"3：不同的 key，设置不同的过期时间，让缓存失效的时间点尽量均匀\",\"16、Redis 回收进程如何工作的？\",\"答：一个客户端运行了新的命令，添加了新的数据。Redi 检查内存使用情况，如果大于 maxmemory 的限制, 则根据设定好的策略进行回收。一个新的命令被执行，等等。\",\"所以我们不断地穿越内存限制的边界，通过不断达到边界然后不断地回收回到边界以下。\",\"如果一个命令的结果导致大量内存被使用（例如很大的集合的交集保存到一个新的键），不用多久内存限制就会被这个内存使用量超越。\",\"17、使用过 Redis 分布式锁么，它是怎么实现的？\",\"答：先拿 setnx 来争抢锁，抢到之后，再用 expire 给锁加一个过期时间防止锁忘记了释放。\",\"如果在 setnx 之后执行 expire 之前进程意外 crash 或者要重启维护了，那会怎么样？\",\"set 指令有非常复杂的参数，这个应该是可以同时把 setnx 和 expire 合成一条指令来用的！\",\"18、使用过 Redis 做异步队列么，你是怎么用的？有什么缺点？\",\"答：般使用 list 结构作为队列，rpush 生产消息，lpop 消费消息。当 lpop 没有消息的时候，要适当 sleep一会再重试。\",\"缺点：\",\"在消费者下线的情况下，生产的消息会丢失，得使用专业的消息队列如 rabbitmq 等。\",\"能不能生产一次消费多次呢？\",\"使用 pub/sub 主题订阅者模式，可以实现 1:N 的消息队列。\"]},\"210\":{\"h\":\"微服务面试题\",\"t\":[\"1、什么是微服务？\",\"答：单个轻量级服务一般为一个单独微服务，微服务讲究的是 专注某个功能的实现，比如登录系统只专注于用户登录方面功能的实现，讲究的是职责单一，开箱即用，可以独立运行。微服务架构系统是一个分布式的系统，按照业务进行划分服务单元模块，解决单个系统的不足，满足越来越复杂的业务需求。\",\"​ 马丁福勒（Martin Fowler）：就目前而言，对于微服务业界并没有一个统一的、标准的定义。但通常而言，微服务架构是一种架构模式或者说是架构风格，它提倡将单一应用程序划分成一组小的服务。每个服务运行在其独立的自己的进程中服务之间相互配合、相互协调，为用户提供最终价值。服务之间采用轻量级通信。每个服务都围绕具体业务进行构建，并能够独立部署到生产环境等。另外应尽量避免统一的、集中的服务管理机制。\",\"通俗的来讲：\",\"微服务就是一个独立的职责单一的服务应用程序。在 intellij idea 工具里面就是用maven开发的一个个独立的module，具体就是使用springboot 开发的一个小的模块，处理单一专业的业务逻辑，一个模块只做一个事情。\",\"微服务强调的是服务大小，关注的是某一个点，具体解决某一个问题/落地对应的一个服务应用，可以看做是idea 里面一个 module。\",\"比如你去医院：你的牙齿不舒服，那么你就去牙科。你的头疼，那么你就去脑科。一个个的科室，就是一个微服务，一个功能就是一个服务。\",\"2、微服务之间如何独立通讯的?\",\"答： 同步通信：.Net5通过 RPC GRPC 远程过程调用或者通过 REST 接口json调用 等。\",\"异步：消息队列，如：RabbitMq、ActiveM、Kafka 等。\",\"3、什么是熔断？什么是服务降级？\",\"答：服务熔断的作用类似于我们家用的保险丝，当某服务出现不可用或响应超时的情况时，为了防止整个系统出现雪崩，暂时停止对该服务的调用。\",\"服务降级是从整个系统的负荷情况出发和考虑的，对某些负荷会比较高的情况，为了预防某些功能（业务场景）出现负荷过载或者响应慢的情况，在其内部暂时舍弃对一些非核心的接口和数据的请求，而直接返回一个提前准备好的fallback（退路）错误处理信息。这样，虽然提供的是一个有损的服务，但却保证了整个系统的稳定性和可用性。\",\"4、微服务的优缺点是什么？说下你在项目中碰到的坑。\",\"答：优点：松耦合，聚焦单一业务功能，无关开发语言，团队规模降低。在开发中，不需要了解多有业务，只专注于当前功能，便利集中，功能小而精。微服务一个功能受损，对其他功能影响并不是太大，可以快速定位问题。微服务只专注于当前业务逻辑代码，不会和 html、css 或其他界面进行混合。可以灵活搭配技术，独立性比较舒服。\",\"​ 缺点：随着服务数量增加，管理复杂，部署复杂，服务器需要增多，服务通信和调用压力增大，运维工程师压力增大，人力资源增多，系统依赖增强，数据一致性，性能监控。\",\"5、你所知道微服务的技术栈有哪些？列举一二。\",\"答：微服务条目 落地技术 服务开发 AspnetCore、.Net5、.Net6 服务配置与管理 携程公司的Apollo、社区的的Consul等 服务注册与发现 Eurka、Consul、Zookeeper等 服务调用 Rest（服务通信）、RPC、GRpc 服务熔断器 Polly、Envoy等 负载均衡 Nginx等 服务接口调用（客户端简化工具） WebAPI等 消息队列 Kafka、RabbitMQ、ActiveMQ等 服务配置中心管理 Apollo、Chef等 服务路由（API网关） Ocelot等 服务监控 Zabbix，Nagios，Skywalking等 全链路追踪 Zipkin，Brave，Skywalking等 服务部署 Docker，OpenStack，Kubernetes等 数据流操作开发包 SpringCloud Stream（封装与Redis，Rabbit，kafka等发送接收消息） 事件消息总线CAP\",\"6、什么是微服务架构？\",\"答：微服务架构 就是 对微服务进行管理整合应用的。微服务架构 依赖于 微服务，是在微服务基础之上的。\",\"例如：上面已经列举了什么是微服务。在医院里，每一个科室都是一个独立的微服务，那么 这个医院 就是 一个大型的微服务架构，就类似 院长 可以 对下面的 科室进行管理。微服务架构主要就是这种功能。\",\"7、设计微服务的最佳实践是什么？\",\"答：\",\"为每个微服务分开数据存储\",\"将代码保持在类似的成熟度等级上\",\"为每个微服务进行单独的构建\",\"部署到容器中\",\"将服务器视为无状态的\",\"8、单体应用、SOA 和微服务架构有什么区别？**\",\"答：\",\"单体应用类似于一个大容器，其中程序的所有组件都被组装在一起并紧密包装。\",\"SOA是一组相互通信的服务。通信可以涉及简单的数据传送，也可以涉及两个或多个协调某些活动的服务。\",\"微服务架构是一种架构风格，它将应用程序构建为以业务域为模型的小型自治服务集合。\",\"9、在使用微服务架构时，你面临的挑战是什么？**\",\"答：\",\"开发较小的微服务听起来很容易，但在开发时会经常遇到一些挑战。\",\"自动化组件：难以自动化，因为有许多较小的组件。对于每个组件，都必须采取构建、发布和监控的步骤。\",\"可感知性：将大量组件维持在一起会带来难以部署、维护、监控和识别的问题。它需要在所有组件周围具有很好的感知能力。\",\"配置管理：有时在各种环境中维护组件的配置会很困难。\",\"调试：很难找到与产生的错误相关的每一项服务。维护一个集中式的日志和控制面板对调试问题至关重要。\",\"10、为什么需要域驱动设计（DDD）？\",\"答：\",\"映射领域\",\"降低复杂性\",\"可测试性\",\"可维护性\",\"知识丰富的设计\",\"将业务和服务结合在一起\",\"上下文集中\",\"通用语言\",\"11、你对分布式事务的理解？\",\"答：\",\"分布式事务是单个事件导致两个或多个不能以原子方式提交的单独数据源的突变的情况。在微服务的世界中，它变得更加复杂，因为每个服务都是一个工作单元，并且在大多数情况下，多个服务必须协同工作才能使业务成功。\",\"12、什么是幂等性（Idempotence）及用在那里？\",\"幂等性是能够以同样的方式做两次，而最终结果将保持不变，就好像它只做了一次的特性。\",\"用法：在远程服务或数据源中使用幂等性，以便当它多次接收指令时，只处理一次。\",\"13、什么是有界上下文？\",\"答：有界上下文是领域驱动设计的核心模式。 DDD 战略设计部门的重点是处理大型模型和团队。 DDD 通过将大型模型划分为不同的有界上下文并明确其相互关系来处理大型模型。\",\"14、容器在微服务中的用途是什么？\",\"答：容器是管理基于微服务的程序以便单独开发和部署它们的好方法*。*你可以将微服务封装在容器镜像及其依赖项中，然后可以用它来滚动开发按需实例的微服务而无需任何额外的工作。\",\"15、什么是金丝雀发布（Canary Releasing）？\",\"答：金丝雀发布是一种降低在生产中引入新版本软件风险的技术。通过在将更改传递给整个基础架构之前将更改缓慢地推广到一小部分用户来完成的。\"]},\"211\":{\"h\":\"包管理服务BaGet\",\"t\":[\"BaGet是一个轻量级的包管理服务。有些时候公司或者个人不希望某一些包进行公开，那么就需要使用私有的包管理服务程序，该服务是用.netcore进行编写的(感谢开发者为社区做出的共享)\",\"Github：https://github.com/loic-sharma/BaGet\",\"官网：https://loic-sharma.github.io/BaGet/\",\"创建配置文件baget.env\",\"# The following config is the API Key used to publish packages. # You should change this to a secret value to secure your server. ApiKey=63edf12c-b70c-45c7-b3ed-f53c9f791e26 # 随机生成，上传包时候使用 Storage__Type=FileSystem Storage__Path=E:\\\\nuget # windows下的写法 Database__Type=Sqlite Database__ConnectionString=Data Source=/var/baget/baget.db Search__Type=Database \",\"在当前目录下执行\",\"# linux docker run -d --name BaGet-nuget -p 9002:80 --env-file baget.env -v \\\"$(pwd)/baget-data:/var/baget\\\" loicsharma/baget:latest # windows docker run -d --name BaGet-nuget -p 9002:80 --env-file baget.env -v \\\"E://nuget//baget-data:/var/baget\\\" loicsharma/baget:latest \"]},\"212\":{\"h\":\"3.1 访问\",\"t\":[\"通过访问地址： localhost:9002 进入主界面\",\"img\",\"界面和 https://www.nuget.org/ 很相似。下面我们就开始随便创建一个类库然后打包推送\",\"img\",\"右键进行打包，可以通过右键属性进行修改包的参数\"]},\"213\":{\"h\":\"3.2 推送\",\"t\":[\"官方提供了四种方式\",\"img\",\"下面只对其中我个人习惯的方法做示例\",\"# .net cli dotnet nuget push -s http://localhost:9002/v3/index.json UserLib.1.0.1.nupkg --api-key 63edf12c-b70c-45c7-b3ed-f53c9f791e26 \",\"使用cmd\",\"img\",\"注：\",\"1.包版本要写对\",\"2.命令需要在包的目录下执行\",\"3.需要填写baget.env文件里面的api-key\",\"打开网页端查看\",\"img\"]},\"214\":{\"h\":\"3.3 引用包\",\"t\":[\"在我们想引用包的项目里面打开包管理器\",\"添加程序包源\",\"img\",\"然后搜索我们的nuget包\",\"img\",\"安装后就可以使用了\",\"轻量NuGet服务—GaGet：https://mp.weixin.qq.com/s/xF5K2U3OhF7I9moGMeOibw\"]},\"215\":{\"h\":\"敏感词组件\",\"t\":[\"现如今大部分服务都会有用户输入，为了服务的正常运行，很多时候不得不针对输入进行敏感词的检测、替换。如果人工做这样的工作，不仅效率低，成本也高。所以，先让代码去处理输入，成为了经济方便的途径。\",\"首先我们要使用的开源组件是 ToolGood.Words\",\"img\",\"通过简单的了解，我们可以知道它可以针对敏感词及其拼音、跳词等变形进行检测，在实际的应用场景中能满足大部分的需求。\",\"具体的用法在这里不做过多的介绍，接下来我们需要做的事情是如何在现有代码中快速且方便的情况下接入敏感词组件。很显然，如果我们按照组件写的示例去操作，会发现需要在现有的代码中进行大量重构的操作，这显然会累垮 VS 。熟悉我的朋友首先就会想到使用 AOP 的方式去优化处理。（这里不过多介绍AOP，如果想了解更多，请移步 C# 中使用面向切面编程（AOP）中实践代码整洁 )\",\"我们先定义两个简单的模型来绑定输入参数，一个是只要输入含有敏感词就会报错，一个是只要输入含有敏感词就会把相关的字符串替换为 * ，代码如下：\",\"public class MinganCheckInput { [MinGanCheck] public string Text { get; set; } } public class MinganReplaceInput { [MinGanReplace] public string Text { get; set; } } \",\"其中 [MinGanCheck] 和 [MinGanReplace] 是我们定义的特性标记，将其继承 ValidationAttribute，就和我们常用的 [Required] 一样方便，哪里敏感点哪里。\",\"/// <summary> /// 敏感词检查的特性，一匹配就抛异常 /// </summary> [AttributeUsage(AttributeTargets.Property)] public class MinGanCheck : ValidationAttribute { protected override ValidationResult IsValid(object value, ValidationContext validationContext) { throw new NotImplementedException(); } } /// <summary> /// 敏感词替换 /// </summary> [AttributeUsage(AttributeTargets.Property)] public class MinGanReplace : ValidationAttribute { protected override ValidationResult IsValid(object value, ValidationContext validationContext) { return ValidationResult.Success; } } \",\"接下来就是实现 ValidationAttribute 的功能，如果看过我写过的 aop 文章，这时候就不会直接在校验的方法中直接引入 ToolGood.Words ，这样会带来很大的耦合，也不便于我们替换为其他的敏感词组件或服务。所以我们只要再多一层抽象就可以了。\",\"// 检查 protected override ValidationResult IsValid(object value, ValidationContext validationContext) { return validationContext.GetService<IMinGanCheckValidator>().IsValid(value, validationContext); } // 替换 protected override ValidationResult IsValid(object value, ValidationContext validationContext) { validationContext.GetService<IMinGanReplaceValidator>().IsValid(value, validationContext); return ValidationResult.Success; } \",\"接着我们分别实现 IMinGanCheckValidator 和 IMinGanReplaceValidator 的功能，也即检查和替换功能。\",\"// 检查 public class MinGanCheckValidator : IMinGanCheckValidator { public ValidationResult IsValid(object value, ValidationContext validationContext) { if (value is string v) { if (!String.IsNullOrEmpty(v)) { // 文字检查 if (MinGanProvider.Instance.IllegalWordsSearch.ContainsAny(v)) { return new ValidationResult(\\\"存在敏感词\\\", new[] { validationContext.MemberName }); } // 检查拼音 if (MinGanProvider.Instance.IllegalWordsSearch.ContainsAny(WordsHelper.GetPinyin(v))) { return new ValidationResult(\\\"存在敏感词\\\",new []{ validationContext.MemberName }); } // todo:其他变种 } } return ValidationResult.Success; } } //替换 public class MinGanReplaceValidator : IMinGanReplaceValidator { public void Replace(object value, ValidationContext validationContext) { if (value is string v) { if (!String.IsNullOrEmpty(v)) { v = MinGanProvider.Instance.IllegalWordsSearch.Replace(v); SetPropertyByName(validationContext.ObjectInstance,validationContext.MemberName, v); } } } static bool SetPropertyByName(Object obj, string name, Object value) { var type = obj.GetType(); var prop = type.GetProperty(name, BindingFlags.Public | BindingFlags.Instance); if (null == prop || !prop.CanWrite) return false; prop.SetValue(obj, value, null); return true; } } \",\"其中 MinGanProvider.Instance.IllegalWordsSearch 是 ToolGood.Words 中的检测类单例，这里不详细展开。这样我们就有一个大概能用的敏感词检测组件了，然而在实际过程中，我们还需要对敏感词进行管理，特别是需要实时更新敏感词。\",\"以 json 配置文件存放敏感词为例，只需要配置热重载就行了。\",\"首先是 Program.cs 文件中让 json 配置文件热重载。\",\"public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .ConfigureAppConfiguration((builderContext, config) => { config.AddJsonFile(\\\"IllegalKeywords.json\\\", optional: false, reloadOnChange: true);// 配置可热重载 }) .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }); \",\"最后是在 Startup.cs 中文件处理重载事件。\",\"ChangeToken.OnChange(() => Configuration.GetReloadToken(), () => { // 敏感词重载 var keys= Configuration.GetSection(\\\"IllegalKeywords\\\").Get<List<string>>(); if (keys!=null&&keys.Any()) { var allKeys = new List<string>(); foreach (var k in keys) { allKeys.Add(k); // 增加词汇 allKeys.Add(WordsHelper.ToTraditionalChinese(k)); // 增加繁体 allKeys.Add(WordsHelper.GetPinyin(k)); // 增加拼音 } IllegalWordsSearch.SetKeywords(allKeys); } }); \",\"img\",\"img\",\"作者：张蘅水\",\"https://www.cnblogs.com/chenug/p/ToolGood_Words_Sample.html\"]},\"216\":{\"h\":\"YAPI\",\"t\":[\"YApi 是高效、易用、功能强大的 api 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API，YApi 还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。\",\"当下稍微正式一点的公司都会要求前后端联调要求编写接口文档，比如说要求word或者excel等了，这个时候你要说那么我们可以使用swagger，但是领导又会说swagger不能留档，并且显得不太正式，结果就强制要求使用word，奈何太浪费时间，通过yapi，它可以直接导出文件进行存档，并且接口内容也可以通过swagger定时同步。\",\"GitHub：https://github.com/YMFE/yapi\",\"Docker部署：https://github.com/fjc0k/docker-YApi\"]},\"217\":{\"h\":\"自己搭建mongo\",\"t\":[\"前提是需要安装mongdb用于存储数据，当前我已经安装了MongoDB，配置如下\",\"docker run -p 27017:27017 --name mongo -e TZ=Asia/Shanghai -d mongo 服务地址：192.168.1.12 端口：27017 数据库：yapi \",\"因为设置带密码的mongodb一直没成功，所以采用了无密码的\",\"通过docker生成yapi服务\",\"docker run -p 8009:3000 --name yapiweb -e YAPI_ADMIN_ACCOUNT=itzhangyunpeng@163.com -e YAPI_ADMIN_PASSWORD=123456 -e YAPI_CLOSE_REGISTER=true -e YAPI_DB_SERVERNAME=192.168.1.6 -e YAPI_DB_PORT=27017 -e YAPI_DB_DATABASE=yapi -e YAPI_MAIL_ENABLE=false -e YAPI_LDAP_LOGIN_ENABLE=false -d jayfong/yapi:latest \",\"使用了大佬提供的镜像：jayfong/yapi\",\"详细配置还得看GitHub文档介绍，注意数据库的地址信息\"]},\"218\":{\"h\":\"开箱即用版本\",\"t\":[\"# 纯粹的 docker run --rm -p 8009:3000 -d jayfong/yapi:play # 带插件的 docker run --rm -p 8009:3000 -e YAPI_PLUGINS='[{\\\"name\\\":\\\"interface-oauth2-token\\\"}]' -d jayfong/yapi:play \",\"默认的管理员账号：admin@docker.yapi，管理员密码：adm1n。\"]},\"219\":{\"h\":\"登录\",\"t\":[\"通过浏览器访问地址：http://localhost:8009/\",\"img\",\"帐号密码就是上面配置的管理员密码：YAPI_ADMIN_ACCOUNT=itzhangyunpeng@163.com YAPI_ADMIN_PASSWORD=123456\"]},\"220\":{\"h\":\"用户管理\"},\"221\":{\"h\":\"查看用户\",\"t\":[\"img\"]},\"222\":{\"h\":\"添加用户\",\"t\":[\"img\"]},\"223\":{\"h\":\"个人项目\"},\"224\":{\"h\":\"创建\",\"t\":[\"img\"]},\"225\":{\"h\":\"展示个人项目\",\"t\":[\"img\",\"该个人项目只能自己才看看到\"]},\"226\":{\"h\":\"分组\"},\"227\":{\"h\":\"创建分组\",\"t\":[\"img\",\"一个项目组一般为一个分组，然后其他的人都在该分组中编辑本分组的项目\"]},\"228\":{\"h\":\"分组成员\",\"t\":[\"img\",\"管理本分组人员操作和简单操作权限。\"]},\"229\":{\"h\":\"分组动态\",\"t\":[\"img\",\"展示分组内每个用户的操作记录\"]},\"230\":{\"h\":\"添加接口\",\"t\":[\"img\"]},\"231\":{\"h\":\"修改接口\",\"t\":[\"img\",\"关于swagger基础配置可以查看目录\"]},\"232\":{\"h\":\"创建项目\",\"t\":[\"使用前文的.net程序，并显示swagger信息，swagger地址为：http://azrng.cn1.utools.club/swagger/index.html\",\"img\",\"获取swagger的json地址\",\"img\"]},\"233\":{\"h\":\"Yapi配置\",\"t\":[\"img\",\"本次使用的是完全覆盖，通过cron表达式配置自动同步时间。\"]},\"234\":{\"h\":\"查看同步数据\",\"t\":[\"然后我们查看接口列表，这个时候我们已经看到项目的接口已经都被同步过来了\",\"img\"]},\"235\":{\"h\":\"数据管理\"},\"236\":{\"h\":\"数据导出导入\",\"t\":[\"在数据管理我们可以导入数据，或者导出数据\",\"img\",\"对于我来说我常用的就是数据导出为html给留档使用。\"]},\"237\":{\"h\":\"导出预览\",\"t\":[\"img\",\"更多配置还需要查看官方文档\"]},\"238\":{\"h\":\"内网穿透\",\"t\":[\"别人可以通过域名访问到你本机的服务。\",\"知乎推荐：https://zhuanlan.zhihu.com/p/404714235\"]},\"239\":{\"h\":\"介绍\",\"t\":[\"FastTunnel是用.net core开发的一款跨平台内网穿透工具，它可以实现将内网服务暴露到公网供自己或任何人访问。\",\"github: https://github.com/SpringHgui/FastTunnel\",\"gitee: https://gitee.com/Hgui/FastTunnel\",\"官网：https://suidao.io\"]},\"240\":{\"h\":\"使用场景\",\"t\":[\"家中建站\",\"微信开发\",\"远程桌面\",\"erp互通\",\"svn代码仓库\",\"端口转发\",\"iot物联网\",\"等等场景，不局限以上\"]},\"241\":{\"h\":\"资料\",\"t\":[\"VisualStudio 使用 FastTunnel 辅助搭建远程调试环境：https://mp.weixin.qq.com/s/_bkkf87GGidOWIHzDoyA4g\"]},\"242\":{\"h\":\"参考文档\",\"t\":[\"https://mp.weixin.qq.com/s/XotcyJ3Shs13ju9nKlxaVg\",\"https://www.tryzth.com/\",\"免费不限制流量，但是端口会不定时更新。\",\"https://natapp.cn/\",\"文档：https://open.dingtalk.com/document/resourcedownload/http-intranet-penetration\",\"停止服务\",\"文档：https://ngrok.com/\",\"如果你有公网服务器，可以使用类似于 FRP 这样的内网穿透工具，借助公网服务器暴露局域网服务。\",\"仓库地址：https://github.com/fatedier/frp\",\"文档地址：https://gofrp.org/docs/examples/vhost-http/\",\"免费版本二级域名，支持http/https/tcp协议\",\"官网：https://www.cpolar.com/\",\"免费版本2个端口，最大带宽1M，月流量1G\",\"官网：http://www.luyouxia.com/\"]},\"243\":{\"h\":\"开源游戏\",\"t\":[\"一个简单的 JavaScript 俄罗斯方块游戏，这个开源项目是通过 HTML5 实现的，功能简陋齐全。\",\"地址：\",\"https://codeincomplete.com/articles/javascript-tetris/\",\"GitHub 地址：\",\"https://github.com/jakesgordon/javascript-tetris\",\"游戏在线地址：\",\"https://codeincomplete.com/games/tetris/\",\"俄罗斯方块游戏，这个项目是通过 React 实现的，游戏框架使用的是 React + Redux，其中再加入了 Immutable，用它的实例来做 Redux 的 state，跟上述实现的方式还是有所不同。\",\"GitHub 地址：\",\"https://github.com/chvin/react-tetris\",\"游戏在线地址：\",\"https://chvin.github.io/react-tetris/\",\"SSHTron 是一款通过 SSH 运行的多人 Lightcycle 游戏，只需运行如下命令即可开始游戏：\",\"# ssh sshtron.zachlatta.com \",\"功能介绍\",\"W A S D 或 vim 键绑定移动（不要使用箭头键）；\",\"退出或按 Ctrl + C 退出；\",\"GitHub 地址：\",\"https://github.com/zachlatta/sshtron\",\"基于 React 的经典坦克大战，这个 GitHub 仓库的版本是经典坦克大战的复刻版本，基于原版素材，使用 React 将各类素材封装为对应的组件。素材使用 SVG 进行渲染以展现游戏的像素风，可以先调整浏览器缩放再进行游戏，1080P 屏幕下使用 200% 缩放为最佳。\",\"此游戏使用网页前端技术进行开发，主要通过 React 进行页面展现，使用 Immutable.js 作为数据结构工具库，使用 redux 管理游戏状态，以及使用 redux-saga/little-saga 处理复杂的游戏逻辑。\",\"GitHub 地址： https://github.com/shinima/battle-city 游戏在线地址： http://shinima.pw/battle-city/ \",\"Pacman 是基于 HTML5 的吃豆人游戏。该项目在 GitHub 上的核心代码就两个文件，代码有注释、整洁。对于新手来说是个很好的实践项目。\",\"GitHub 地址：\",\"https://github.com/mumuy/pacman\",\"游戏在线地址：\",\"http://passer-by.com/pacman/\",\"star-battle 是一个使用 JavaScript ES6、Canvas 开发的飞船射击类游戏。\",\"功能介绍\",\"使用 W、A、S、D 键控制飞船，按下 Space 发射；\",\"燃料初始值为 15，每秒递减 1 点，当燃料值为 0 时，游戏结束；\",\"触碰掉下的燃料瓶可增加 15 点，最大值为 30 点；\",\"击中敌方飞船增加 5 分；行星需击中两次，增加 10 分；击中友方减 10 分；\",\"撞击敌方损失 15 点燃料，撞击友方扣除 10 分；\",\"游戏允许负分；\",\"按下 P 暂停游戏，按下 M 静音；\",\"GitHub 地址： https://github.com/gd4Ark/star-battle 游戏在线地址： https://4ark.me/star-battle/ \",\"PythonPlantsVsZombies 是用 Python 语言编写的植物大战僵尸。\",\"功能介绍\",\"PlantsVsZombies 所支持的植物类型：向日葵、豌豆射手、寒冰射手、坚果、樱桃炸弹等；\",\"PlantsVsZombies 所支持的僵尸类型：普通僵尸、鞭打僵尸、锥头僵尸、水桶头僵尸、报纸僵尸等；\",\"该项目可使用 json 文件来存储关卡数据信息（例如僵尸的位置和时间，背景信息）；\",\"支持在关卡开始前选择植物卡；\",\"支持白天/夜间模式，移动卡选择水平和 Wallnut 保龄球水平；\",\"运行 main.py 文件即可运行游戏：\",\"# python main.py import pygame as pg from source.main import main if __name__=='__main__': main() pg.quit() \",\"GitHub 地址：\",\"https://github.com/marblexu/PythonPlantsVsZombies\",\"这个项目是用 JS 实现 2KB 大小的 3D 赛车游戏。\",\"控制项\",\"鼠标 = 转向\",\"点击 = 刹车\",\"双击 = 跳转\",\"R = 重新启动\",\"1 = 屏幕图\",\"GitHub 地址：\",\"https://github.com/KilledByAPixel/HueJumper2k\",\"游戏在线地址：\",\"https://killedbyapixel.itch.io/hue-jumper\",\"免费的入门级 Python 游戏集合库，都是一些简单的小游戏：贪吃蛇、迷宫、Pong、猜字等，运行方便、代码简单易懂。以游戏的方式开启你的 Python 学习之旅，玩完再学源码，真是其乐无穷。\",\"GitHub 地址：\",\"https://github.com/grantjenks/free-python-games\",\"一个只用 HTML 和 CSS 实现的扫雷游戏。\",\"GitHub 地址：\",\"https://github.com/propjockey/css-sweeper\",\"游戏在线地址：\",\"https://propjockey.github.io/css-sweeper/\",\"使用 Node.js 和 Socket.io 实现的在线迷宫游戏，通过 [a][w][s][d] 按键移动位置，支持多人和单人两种模式。\",\"GitHub 地址：\",\"https://github.com/HenryDavidZhu/MazeBattles.com\",\"游戏在线地址：\",\"http://www.mazebattles.com/\",\"一款 Java 编写的免费沙盒塔防游戏。支持多平台：Windows、Linux、macOS、Android。\",\"GitHub 地址：\",\"https://github.com/Anuken/Mindustry\",\"OpenEmu 是一个可以玩各种复古游戏的游戏机，支持任天堂、索尼 PSP、世嘉 32X 等 30 多种游戏引擎，以及支持外接游戏手柄、投屏等操作。\",\"GitHub 地址：\",\"https://github.com/OpenEmu/OpenEmu\"]},\"244\":{\"h\":\"office\"},\"245\":{\"h\":\"部署软件\",\"t\":[\"Offile Tool Plus\",\"https://otp.landian.vip/zh-cn/\"]},\"246\":{\"h\":\"插件\",\"t\":[\"MoreExcel\",\"MoreExcel是一个支持多人同时编辑同一个文件的Excel多功能插件。\"]},\"247\":{\"h\":\"常见开源协议\",\"t\":[\"文章来源自微信公众号【全球技术精选】\",\"2003 年 Linksys 公司（同年 3 月被思科收购）推出 WRT-54G，这款路由器采用了基于 Linux 的固件，而 Linux 使用的是 GPL 开源协议，所以思科迫于压力，开放了 WRT-54G 的源码，这使得爱好者们知道了路由器固件的实现方式，进而促成了各种相关开源项目的繁荣，其中就包括 OpenWRT\",\"Android 使用了 Linux 内核，而 Linux 内核采用的是 GPL 的开源协议，所以 Google 修改了 Linux 内核，使得驱动程序可以在 Linux 内核的上层运行，这样上层的代码可以绕过GPL协议。这也使得所有 Android 上的开源驱动，不经过修改无法直接用在 Linux 内核上，造成了Linux 内核的分裂，所以 Linux 内核开发小组撤下了 Android 所贡献的代码\",\"而非内核部分，Android 开源项目 (AOSP) 许可提到了：\",\"对于用户空间（非内核）软件，相比其他许可（例如宽通用公共许可证 (LGPL)），我们更倾向于 Apache 2.0（以及 BSD 和 MIT 等类似许可） 我们为自己的代码首选 Apache 2.0\",\"因为 AOSP 采用了 Apache 2.0 协议，所以任何人都可以基于 AOSP 开发自己的 Android 系统，而且不需要开源，国内的一些定制 Android 系统都是基于 AOSP，具体可以参考定制Android固件列表。虽然 AOSP 是开源的，但是 Google 移动服务 GMS（Google Mobile Service）是闭源的，GMS 中包括，如果手机厂商想要使用 GMS，就必须向 Google 支付授权费。GMS 包含了 Google 自家的App 和服务，除此之外海外 Android 平台发布的 App 严重依赖 GMS，没有 GMS 可能导致软件无法使用等问题，Google\",\"可以参考这张很经典的图，来自 如何选择开源许可证？- 阮一峰\",\"图片\",\"下面由紧到松介绍一下几种常见的开源许可\"]},\"248\":{\"h\":\"GPL\",\"t\":[\"GNU GPL (GNU General Public License) 是很常见一个开源协议，允许使用者自由复制、自由分发、自由修改，也可以用来盈利，但是需要保证修改后的项目以及派生作品也使用 GPL 协议，这是因为 GPL 是属于Copyleft 授权方式\",\"Copyleft 条款源自自由软件运动，在自由软件许可证中增加 Copyleft 条款之后，该自由软件除了允许用户自由使用、散布、改作以外，Copyleft 条款更要求作者所许可的人对改作后的派生作品要使用相同许可证授予作者\"]},\"249\":{\"h\":\"LGPL\",\"t\":[\"由于 GPL 遵循 Copyleft，所以导致商业软件无法将 GPL 授权的软件集成在自己的软件里，所以就有了GNU LGPL (GNU Lesser General Public License) ，LGPL 允许商业软件通过类库引用的方式使用 LGPL 类库而不需要开源项目的代码，如果是修改或者衍生，则修改的代码或衍生的代码都必须采用 LGPL 协议\"]},\"250\":{\"h\":\"MPL\",\"t\":[\"MPL (Mozilla Public License) 由 Mozilla 基金会开发并维护，可以自由使用，出售，并可自由的重新发布，MPL 允许在其授权下的源代码与其他授权的文件进行混合，但 MPL 授权下的代码文件必须保持 MPL 授权，并且保持开源\"]},\"251\":{\"h\":\"Apache Licence 2.0\",\"t\":[\"非盈利开源组织 Apache 采用的协议，允许代码修改、再发布，但 每修改一个文件都必须放置版权声明\"]},\"252\":{\"h\":\"BSD\",\"t\":[\"BSD (Berkeley Software Distribution license) 允许使用者修改和重新发布代码，也允许使用或在 BSD 代码上开发商业软件发布和销售，所以商业公司比较喜欢选择 BSD 相关的项目，但是 不允许使用开源代码的作者、机构名字、原来产品名做市场推广\"]},\"253\":{\"h\":\"MIT\",\"t\":[\"MIT 是最宽松的开源协议之一，除了软件中必须包含许可声明外没有任何限制\",\"GitHub 推出了一个“如何选择许可证”的网站 choosealicense.com\",\"通过 GitHub 的 Advanced Search，可以根据开源协议进行搜索，这里例举一些使用对应开源许可的项目：\",\"GPL : Linux、Ansible (自动化运维工具)、Clash、Telegram for Android\",\"LGPL: Go Ethereum(以太坊的官方 Go 实现)\",\"MPL: Consul\",\"Apache Licence 2.0: TensorFlow、Kubernetes、TypeScript、Spring Framework、Spring Boot、OkHttp、MyBatis、Dubbo、TiDB\",\"BSD: Homebrew、Flutter、Flask、Redis、Jupyter\",\"MIT: .NET、Vue、React、Angular、Electron、jQuery、axios、Gin\",\"从“中国 GPL 诉讼第一案”聊聊开源软件的 license 许可证\\n开源路由器固件历史\\nLinksys\\n开源固件的前世今生\\nopenwrt，ddwrt，tomato这些路由器固件是怎么开发出来的？- denglj的回答 - 知乎\\n最流行的开源协议什么，如何选择合适的开源协议？\\n五种开源协议(GPL,LGPL,BSD,MIT,Apache)\\n“十四五”软件业开源生态加快构建\\n再谈Android的许可证\\nAndroid - 维基百科\\nAndroid 通用内核\\n可以把Android理解成是Linux的一个发行版本吗？像ubuntu那样？\\nlinux和Android的关系\\nAndroid 正在毁掉开源，受影响的不只是华为\\nMozilla公共许可证\\nGNU通用公共许可证 - 维基百科\\nGNU宽通用公共许可证\\nCopyleft\\n【开源协议】BSD、Apache2、GPL、LGPL、MIT\"]},\"254\":{\"h\":\"快捷键\",\"t\":[\"界面操作\",\"放大缩小\",\"命令：alt+滚轮\",\"快速恢复界面原状\",\"命令：ctrl+0\",\"切换剪裁\",\"编辑=》首选项=》单位与标尺=》改为像素\",\"工作区附件加颜色\",\"命令：shift+喷漆桶\",\"分辨率\",\"单位一般是：像素/英寸\"]},\"255\":{\"h\":\"颜色模式常用\",\"t\":[\"RGB颜色的8位\",\"CMYK颜色的8位\"]},\"256\":{\"h\":\"暂存盘设置\",\"t\":[\"ps正常使用时候会创建一个临时文件，该文件会比较大，所以不能存储到内存中，默认情况下这个暂存盘是在c盘，我们需要把他换到其他盘符\",\"命令：编辑=》首选项=》性能=》暂存盘\",\"历史记录\",\"在编辑=》首选项=》性能=》暂存盘中可以设置历史记录保存多少步\",\"自动保存\",\"在编辑=》首选项=》文件处理=》自定存储恢复信息时间间隔\",\"洗印照片，300或者以上\",\"杂志、名片等印刷物 300\",\"海报高清写真96-200\",\"网络图片、网页界面 72\",\"大型喷绘 25-50\"]},\"257\":{\"h\":\"搜索\"},\"258\":{\"h\":\"必应\",\"t\":[\"https://cn.bing.com/?ensearch=1&FORM=BEHPTB\"]},\"259\":{\"h\":\"百度搜索\",\"t\":[\"百度开发者搜索\",\"https://kaifa.baidu.com/home\",\"干净的搜索界面\",\"https://www.baidu.com/baidu.html?from=noscript\"]},\"260\":{\"h\":\"软件合集\"},\"261\":{\"h\":\"1.1 系统激活\"},\"262\":{\"h\":\"1.1.1 神龙激活器\",\"t\":[\"官网：http://www.yishimei.cn/network/319.html\"]},\"263\":{\"h\":\"1.2 火绒弹框拦截\",\"t\":[\"下载地址：https://azrng.lanzoui.com/ilv4jj6u7sf\"]},\"264\":{\"h\":\"1.3 spacesniffer\",\"t\":[\"可以将你的盘分析大小，可以找找哪些无用文件即大又没有什么用\"]},\"265\":{\"h\":\"1.4 文件夹隐藏助手\",\"t\":[\"首次使用文件夹隐藏助手需要设置初始密码，初始密码的作用是防止软件被他人滥用。\",\"文件夹隐藏助手可以对文件夹进行隐藏和伪装，这样在没有密码的情况下，任何人也无法发现这些文件夹。\",\"下载地址：http://www.17rd.com/index2.htm\"]},\"266\":{\"h\":\"1.5 装机工具\"},\"267\":{\"h\":\"1.5.1 微PE\",\"t\":[\"微PE前身叫做通用PE工具箱，大约在2012年，作者把通用PE工具箱（4.0）卖掉了，所以4.0以后的通用PE工具箱不是原作者的作品。2015年，原作者重新开发一款PE，叫做微PE。微PE无明显捆绑和流氓行为，而且使用简单，也广受好评。\",\"官网：www.wepe.com.cn\"]},\"268\":{\"h\":\"1.5.2 优启通\",\"t\":[\"优启通是由IT天空论坛出品的PE，IT天空论坛是一个专门研究系统封装技术的论坛，刚开始它叫做”U盘装机助理“，后来改为”优启通“。\",\"官网：www.upe.net\"]},\"269\":{\"h\":\"1.6 系统下载\"},\"270\":{\"h\":\"1.6.1 Fido\",\"t\":[\"一款开源脚本Fido，通过Fido可以非常简单方便的获取原汁原味的原版镜像。\",\"GitHub：https://github.com/pbatard/Fido\"]},\"271\":{\"h\":\"1.7 硬件工具箱\"},\"272\":{\"h\":\"1.7.1 图吧工具箱\",\"t\":[\"最纯净的硬件工具箱\",\"官网：http://www.tbtool.cn/\",\"网盘地址：http://pan.g4560.cn/\"]},\"273\":{\"h\":\"2.1 腾讯桌面整理\",\"t\":[\"下载地址：https://guanjia.qq.com/product/zmzl/\"]},\"274\":{\"h\":\"2.2 Maya\",\"t\":[\"Maya是一款体积小巧、简单易用的快速启动工具。\",\"下载地址：https://github.com/25H/Maya/releases\"]},\"275\":{\"h\":\"2.3 TranslucentTB\",\"t\":[\"Win10商店里可以直接下载TranslucentTB汉化版，直接可以设置状态栏透明或者是亚力克之类，还可以分别设置桌面状态和软件界面状态，我一般桌面设置为透明，软件界面为亚力克，同时在系统设置里将状态栏设置为自动隐藏\"]},\"276\":{\"h\":\"2.4 火雨桌面壁纸\",\"t\":[\"卡饭论坛出品，视频壁纸支持静态+动态壁纸、屏保设置，并且支持导入本地图片和视频文件。\",\"下载地址：https://huoyu.kfsafe.cn\"]},\"277\":{\"h\":\"3.1 命令行\"},\"278\":{\"h\":\"3.1.1 Cmder\",\"t\":[\"配置右键快捷启动：\",\"用管理员身份打开cmd，执行以下命令：\",\"// 设置任意地方鼠标右键启动Cmder\",\"Cmder.exe /REGISTER ALL\",\"下载地址：https://github.com/cmderdev/cmder/releases\"]},\"279\":{\"h\":\"3.2 操作linux\"},\"280\":{\"h\":\"3.2.1 Xshell\"},\"281\":{\"h\":\"3.2.2 MobaXterm\",\"t\":[\"下载地址：https://moba.en.softonic.com/\"]},\"282\":{\"h\":\"3.3 数据库\"},\"283\":{\"h\":\"3.3.1 数据库转换工具\",\"t\":[\"ESF Database Migration Toolkit\",\"下载地址：https://www.dbsofts.com/download/\"]},\"284\":{\"h\":\"4.1 Convertio\",\"t\":[\"文档转换器：https://convertio.co/zh/\"]},\"285\":{\"h\":\"4.2 smallpdf\",\"t\":[\"文档转换器：https://smallpdf.com/\"]},\"286\":{\"h\":\"4.3 pdfdo\",\"t\":[\"文档操作：http://www.pdfdo.com/\"]},\"287\":{\"h\":\"Todesk\",\"t\":[\"官网：https://www.todesk.com/\"]},\"288\":{\"h\":\"rustdesk\",\"t\":[\"RustDesk是一款优秀的免费开源的远程控制软件，采用rust语言编写，无需任何配置开箱即用，采用TLS 1.3端到端加密协议保护用户的通信安全，用户可以完全掌控数据，不用担心安全问题，自定义画面质量且允许用户在客户端程序里调节bitrate和quantizer改变画面传输质量，RustDesk远程控制软件内置文件传输和TCP隧道功能，使用内置文件管理器可以方便地与远程电脑互传文件，设置TCP隧道也很容易，更是贴心提供了快捷RDP模式，一键就可以实现基于TCP隧道的RDP连接，威航软件园测试发现RustDesk和系统自带远程桌面相比拥有绝对的优势，安全快速稳定，还允许用户通过安装RustDesk提供的服务器程序建立自己的网络。\",\"官网：https://rustdesk.com/docs/en/manual/\"]},\"289\":{\"h\":\"6.1 Quickerlook\",\"t\":[\"可以在你看文件的时候给你提供预览，让你不用一个一个打开文件就可以直接看到文件里的内容。\"]},\"290\":{\"h\":\"6.2 uTools\",\"t\":[\"uTools 是一个极简、插件化、跨平台的现代桌面软件。通过自由选配丰富的插件，打造你得心应手的工具集合。\",\"官网：https://u.tools/\"]},\"291\":{\"h\":\"6.3 录屏\"},\"292\":{\"h\":\"6.3.1 超级录屏\",\"t\":[\"超级录屏支持全屏、窗口和区域三种录制方式，在录制的同时还可以将摄像头也录制到画面中。\",\"下载地址：http://www.17rd.com/index2.htm\"]},\"293\":{\"h\":\"6.3.2 游戏录像专家\",\"t\":[\"普通的录屏软件无法录取像LOL这样的大型游戏画面，如果需要录制游戏视频，则需要使用专业的游戏录屏软件。\",\"下载地址：http://www.17rd.com/index2.htm\"]},\"294\":{\"h\":\"6.4 思维导图\"},\"295\":{\"h\":\"6.4.1 Draw.io\",\"t\":[\"使用 Draw.io 在线绘图工具，免费、精简、即开即用、多风格，足够成为我选择它的理由。\"]},\"296\":{\"h\":\"6.4.2 processon\",\"t\":[\"免费在线作图、实时协作，支持流程图、思维导图、原型图、UML、网络拓扑图、组织机构图等\",\"官网：https://www.processon.com/\"]},\"297\":{\"h\":\"6.5 文件同步\"},\"298\":{\"h\":\"6.5.1 goodsync\",\"t\":[\"一种便、快捷、安全的方法，自动将您的全部数据备份到多个目标位置，在需要的时候恢复数据。\",\"官网：https://www.goodsync.com/cn/\"]},\"299\":{\"h\":\"PPT插件\"},\"300\":{\"h\":\"iSlide\",\"t\":[\"iSlide 是一款PPT 插件。\",\"使用它可以可以让你轻轻松松做出经验高大上的PPT。\",\"只需要三步，选主题，选配色，选图，PPT 就可以做出来了。\",\"它内置10W+ 素材供你选择，PPT 的同一色彩还可以一键修改，而且各种3D，免费图库供你挑选。\",\"它还支持一键优化（统一的文字，分割线，看起来专业十足），设计排版（让你的PPT 井然有序），安全导出，PPT 瘦身，PPT 拼图等等功能\"]},\"301\":{\"h\":\"视频编辑\"},\"302\":{\"h\":\"雀大师\",\"t\":[\"一个将视频加密的播放软件。\",\"https://www.quedashi.com/\"]},\"303\":{\"h\":\"Markdown\"},\"304\":{\"h\":\"writage\",\"t\":[\"Writage 使 Microsoft Word 能够创建和编辑 Markdown 文件（扩展名为 .md），以及将 .docx 文件保存为 Markdown 文件。它还能够将选定的富文本复制为 Markdown，并将 Markdown 粘贴为富文本。\",\"官网：https://www.writage.com/overview/\"]},\"305\":{\"h\":\"7.1 IDM\",\"t\":[\"搭配浏览器插件下载软件下载视频等东西\"]},\"306\":{\"h\":\"7.2 Qbittorrent\",\"t\":[\"BT下载工具\"]},\"307\":{\"h\":\"7.3 youtube-dl\",\"t\":[\"从国外的YouTube、BBC、CBS、Twitter、Facebook上的音视频下载，再到国内的爱奇艺、腾讯视频、芒果TV、优酷视频、B站、酷我音乐、网易音乐……几乎涵盖了全球各大音视频网站。\"]},\"308\":{\"h\":\"7.4 Neat Download Manager\",\"t\":[\"Neat Download Manager是一款非常好用的多线程下载管理器。它的功能跟IDM很像，支持HTTP、HTTPS、FTP协议、HTTP代理、SOCKS协议等，支持根据不同的下载状态、文件类型等进行管理下载。\"]},\"309\":{\"h\":\"8.1 Todesk\",\"t\":[\"可以免费使用的远程控制软件\",\"自由门：https://github.com/sglfree/freesky\",\"Baacloud：https://www.baacloud34.com/modules/login.php\"]},\"310\":{\"h\":\"10.1 搜狗输入法\",\"t\":[\"词库强大，但是需要找纯净不带广告的版本\"]},\"311\":{\"h\":\"10.2 卡饭输入法\",\"t\":[\"卡饭输入法是一款轻巧极致的PC输入法，目前仅提供Windows版，支持在Windows 7和Windows 10操作系统上安装使用。主打轻巧静默、非常纯净、无打扰，致力于解决目前PC输入法产品功能繁琐、弹窗广告等糟糕的用户体验问题。\",\"下载地址：https://input.kfsafe.cn\",\"词库转换工具\",\"深蓝词库转换：https://www.lanzoux.com/b03yv7rra\"]},\"312\":{\"h\":\"虚拟机玩UOS\",\"t\":[\"使用Hyper-v创建虚拟机安装uos系统，关于Hyper-V的基本用法可以看另一个文章\",\"img\",\"选择语言然后同意协议点击下一步进入硬盘分区，这里需要满足一定的磁盘大小才能下一步\",\"img\",\"选择盘符然后直接下一步，就开始漫长的安装步骤\",\"img\",\"安装完成\",\"img\",\"上面提示安装成功点击立即重启并立即拔出安装介质，可是我不是用U盘装的咋拔出介质，然后我就陷入了重启=>安装=>重启的死循环中，后来终于反应过来，打开Htper-V管理器，选择指定虚拟机然后点击右下角设置\",\"img\",\"将这里修改为无\",\"img\",\"然后点击立即重启\",\"img\",\"点击回车进入系统，然后这次就可以选择时区并创建账户\",\"img\",\"点击下一步\",\"img\",\"等待几分钟后\",\"img\",\"输入刚才设置的密码下一步，然后这里我们选择普通模式\",\"img\",\"这种终于可以进入系统了\",\"下面会贴一些常见功能的界面，因为这个没连上网，所以也不能装个应用玩\"]},\"313\":{\"h\":\"系统主界面\",\"t\":[\"img\",\"img\"]},\"314\":{\"h\":\"计算机\",\"t\":[\"img\"]},\"315\":{\"h\":\"视频播放\",\"t\":[\"img\"]},\"316\":{\"h\":\"浏览器\",\"t\":[\"img\"]},\"317\":{\"h\":\"日历\",\"t\":[\"img\"]},\"318\":{\"h\":\"应用商店\",\"t\":[\"未联网状态，听说日常的软件都已经有的\",\"img\"]},\"319\":{\"h\":\"设置\",\"t\":[\"img\",\"系统信息\",\"img\"]},\"320\":{\"h\":\"关机界面\",\"t\":[\"img\",\"这次我是在虚拟机里面跑的，多少有点卡顿，不过还是感觉不错的，因为日常的功能都有，这次也是满足了我的好奇心。\"]},\"321\":{\"h\":\"VsCode\",\"t\":[\"常用插件推荐\",\"Chinese (Simplified) Language Pack for Visual Studio Code 设置中文\",\"c# 让支持c#开发使用\",\"C# Extensions c#扩展\",\"vscode-icon 让vscode资源目录加上图标\",\"VSCode-solution-explorer 出来解决方案\",\"NET Core Test Explorer 执行我们的单元测试并查看结果\",\"Visual Studio Keymap 将vs快捷键映射到vscode\",\"NuGet Package Manager nuget包管理\",\"FixFormat代码格式化 shift+alt+f,不是我们想要的格式，去设置里面的扩展启用c#默认格式化就行了\",\"open in browers 在浏览器中运行\",\"C# XML Documentation Comments 三斜线注释\",\"GitLens 查看每行代码是谁编写的\",\"One Dark Pro 主题包\",\"view in browers 右键浏览器中运行\",\"Path Intellisense 文件路径自动补全\",\"Bracket Pair Colorizer （让括号有独立的颜色）\",\"Auto Close Tag 自动出来结束标签\",\"Auto Rename Tag 修改html标签，自动帮你完成尾部闭合标签的同步修改\",\"HTMLHint HTML代码高亮显示\",\"C# XML Documentation Comments 头部注释\",\"Babel ES6/ES7 ES6，ES7语法加亮检查插件\",\"jQuery Code Snipperts jq提示\",\"HTML Snippets HTML5代码提示\",\"HTML CSS Support class 智能提示当前项目所支持的样式\",\"Debugger for Chrome 让vscode映射chrome的debug功能，静态页面都可以用vscode来打断点调试\",\"Path Intellisense 路径自动补全\",\"Project Manager 多项目切换工具\",\"One Dark Theme 代码颜色主题\",\"Document This 快速注释\",\"IntelliSense for CSS class names in HTML css名提示\",\"Code Spell Checker 代码检查\",\"LiveServer 搭配vscode实现markdown实时预览(制作文档网站时候使用)\"]},\"322\":{\"h\":\"HTTP代理\",\"t\":[\"文章来自微信公众号【架构师修行之路】\",\"\\\"如果你有任何疑问和不满，请和我的代理人去说\\\"，我们经常会听到某某明星又爆出什么猛料，结果都是当事人不解释，倒是由代理或者工作室来解释一大堆有的没的。\",\"他们好像是明星的另一张嘴，替代明星完成他们自己无法完成或者不愿意完成的工作。\",\"这里的代理是现实生活中的实体，是实实在在存在的人。\",\"而在互联网中，也存在着一种实体，来替代网络实体完成它所无法完成的工作，这种网络实体叫服务器，不过它还有一种特殊的叫法：Web 代理(proxy)。\",\"上面的网络实体，其实就指的是客户端和服务器。\",\"代理通常位于服务器和客户端之间，扮演一种中间人的角色，在各个点之间传递 HTTP 报文，如果没有代理，HTTP 客户端就要和 HTTP 服务器进行直接对话。\",\"那么，为什么 HTTP 客户端不直接和 HTTP 服务器进行对话，非要在中间加一层代理呢？它能起到什么作用呢？\",\"首先，我们大家知道，有一些国外的网站在国内是访问不了的，但是假如我们就想访问某同性交友网站改怎么办呢？这里就需要使用代理了，它能够突破自身 IP 限制，访问国外站点。还有一些涉密公司会禁止访问外网，那要是查资料该怎么办呢？使用代理。\",\"图片\",\"其次，代理还能够提升网络带宽，加快访问速度，代理服务器会存储一部分带宽，而且代理服务器内部会有一块大的缓冲区，当访问了某些页面后，代理服务器就会缓存这些页面，等下次访问相同页面时，代理服务器会直接返回缓冲区缓冲之后的页面，这样代理服务器就会把带宽省下来的同时提高访问速度。\",\"代理还会隐藏你主机的真实 IP，我们也可以通过这种方法免受网络攻击。\",\"总的来说，代理的功能主要有下面几点。\",\"img\",\"私有代理和公共代理\",\"代理服务器可以为许多客户端提供代理服务，同时代理也可以只是某个客户端专用的。就像教父中的汤姆军师只为柯里昂家族服务，而像是律师事务所的大部分律师是则面向公众服务的。所以，依据职责的不同，单个客户端专用的代理一般被称为私有代理，而为大多数客户端服务的代理被称为公共代理。\",\"我们见到的大部分代理服务器都是公共代理，公共代理最大的特点就是共享，但是共享也意味着风险，一般不推荐使用这种代理，不过公共代理却有他自己独有的优点：\",\"大部分公共代理都是免费的，这意味着你可以随意白嫖（果然免费的才香）。\",\"能够支持 HTTP 和 SOCKSv5 服务。\",\"这里我们熟悉 HTTP 协议，那么 SOCKSv5 是个什么协议呢？我们后面会说到。\",\"如果你想要从 Internet 上收集数据，那么公共代理对某些 SEO 很有用。\",\"专用的私有代理比较少见，但它们却是存在，尤其是直接运行在客户端计算机上的时候。私有代理是一个专用的 IP ，一次只能由一个客户端使用。私有代理相比公共代理，也有一些独特的优势。\",\"速度快，因为只有单个客户端使用。\",\"足够安全，无需担心隐私被泄漏的风险。\",\"不过，不论是公共代理还是私有代理，它们都有一个共同的特性，那就是既能扮演客户端，接受响应报文，返回响应报文；也能扮演服务器，接受客户端请求，处理客户端请求。\",\"图片\",\"所以，代理服务器分别扮演不同的职责，完全是根据你选择的参照物来说明的。\",\"我们大家知道，网关是一种网络硬件设备或网络节点，它是网络的入口和出口点，因为所有数据在路由之前都必须通过网关或与网关通信。网关旨在将两个不同的网络连接在一起，允许用户跨多个网络进行通信。\",\"上面这段描述中的网关，圈重点，其实就扮演了一个代理的角色，它行使的功能就是帮助两个异构的网络进行通信。\",\"不过，虽然网关能起到代理的作用，但是网关和代理服务器确实完全不同的东西。\",\"代理和网关最大的区别就是网关不会进行数据的过滤，网关不能阻止访问某些网站，而代理服务器的功能却有很多。\",\"可以这么理解，网关就是没有过滤功能的代理服务器。\",\"⚠️这里不得不提另外一种网络设备，那就是防火墙，防火墙能够也能够过滤数据，进行安全性检查。\",\"严格来说，代理连接的是两个或者多个使用相同协议的应用程序，依据不同的协议，代理可以分为很多种，不过我们常用的一般就下面三种代理方式。\",\"HTTP 代理，是我们最常见到的一种代理方式，主要是代理浏览器进行访问页面。\",\"SOCKS 代理，SOCKS 代理的正是 Socket，它支持多种协议，支持 HTTP 、FTP 等多种类型请求。它分SOCKS 4 和SOCKS 5两种类型，SOCKS 4只支持 TCP 协议而 SOCKS 5支持 TCP/UDP 协议，还支持各种身份验证机制等协议。\",\"SSL 代理，SSL 代理也叫做 HTTPS 代理，为了保护敏感数据在互联网传送中的安全性，越来越多的网站都采用 SSL 加密形式发布。\",\"这时候可能有读者会说了，cxuan 你讲了这么多东西，那到底网关能干啥呢？能举几个示例吗？\",\"来了来了。\",\"下面我通过几个示例来给你解释一下代理服务器都有哪些用途和作用：\",\"网站过滤\",\"这是我们上面一直在讲的，代理服务器能够访问一些网站，同时它也有过滤功能，禁止一些网站的访问。\",\"文档访问控制\",\"可以使用代理服务器在大量的 web 服务器和 web 资源之间实现统一的访问控制，通常用在大型企业或者分布式机构中。比如下面是三种拥有不同访问控制权限的客户端。\",\"图片\",\"客户端 A 可以无限制的访问服务器 A 中的指定页面。\",\"客户端 B 可以无限制的直接访问互联网。\",\"客户端 C 在访问服务器 C 的加密数据之前需要输入密码或者凭证。\",\"安全防火墙\",\"代理服务器也可以充当防火墙的角色，用于限制/过滤数据的流入和流出，进行安全性检查等。\",\"Web 缓存\",\"代理缓存能够维护常用网站的本地副本，以便减少缓慢而且昂贵的因特网通信开销。\",\"反向代理\",\"代理除了能够假扮客户端之外，它还能够假扮服务器，这种方式被称为反向代理。但是对于客户端而言，反向代理服务器就相当于目标服务器，这也就是说客户端直接访问代理服务器就能够直接获得目标服务器的资源。\",\"可以使用反向代理来提高访问龟速 Web 服务器上公共内容时的性能。在这种配置中，通常将这些反向代理称为服务器加速。\",\"图片\",\"转码器\",\"代理服务器在将内容发送给客户端之前，修改内容的主体格式，这种对数据格式进行修改的方式就被称为转码。\",\"转码代理可以在传输 GIF 图片时，将其转换为 JPEG 图片，用于减小图片的传输大小，也可以对其进行压缩等。\",\"匿名者\",\"匿名者顾名思义就是代理服务器隐藏客户端特征，匿名者代理会从 HTTP 报文中删除身份特征，比如客户端的 IP 地址、From 首部、Referer 首部、cookie、URI 的会话 ID，提高私密性和安全性。\",\"代理其实也像 DNS 一样，具有层次结构，只不过 DNS 层次结构中上下级之间都是 DNS 服务器，而代理层次结构把上下级都换成了代理服务器。\",\"在代理的层次结构中，会将报文在代理之间传递，一直传递到最终的服务器，然后再将响应报文通过代理传回给客户端，例如下图是一个反向代理的层次结构。\",\"图片\",\"代理层次结构中的代理服务器被赋予了父和子的关系，靠近服务器的被称为父代理，靠近客户端的被称为子代理。\",\"这是一种静态的代理层次结构，静态意味着这个在这个层次结构中，代理 1 总是会将报文转发给代理 2 ，而代理 2 总是会将报文转发给代理 3。\",\"但是，代理的层次结构却不一定非得是静态的，这也就是说，在代理层次结构中，父代理和子代理都是可以改变的，下面是几个可以动态选择代理的方式：\",\"负载均衡：子代理可以根据当前父代理的工作负载级别来选择父代理。\",\"地理位置邻近选择：当然也可以根据地理位置的临近情况来选择父代理。\",\"根据协议和类型来选择：子代理会根据 URI 将报文转发到不同的父代理或者原始服务器上去。\",\"客户端的代理设置主要有下面四种：\",\"手动设置\",\"预先配置浏览器代理，浏览器厂商会在客户端获取浏览器之前预先对代理进行配置\",\"自动配置代理，通过提供一个 URI，指向一个用 JS 写的代理自动配置文件；客户端会取回这个 JS 文件，并运行它以决定是否应该使用代理\",\"WPAD 代理发现，有些浏览器支持 WPAD 代理自动发现协议，这个协议会自动检测出浏览器可以从哪个配置服务器下载到一个自动配置文件。\"]},\"323\":{\"h\":\"HTTP协议\",\"t\":[\"HTTP协议是用于从www服务器传输超文本到本地浏览器的传送协议，使浏览器更加高效，使网络传输减少，保证计算机正确的传输超文本文档，还确定传输文档中的那个部分，以及那部分内容首先显示等\",\"HTTP是一个应用层协议，由请求和响应构成，是一个标准的客户端服务器模型。\",\"HTTP协议通常承载于TCP协议之上，有时也承载与TLS/SSL(传输层安全协议)协议层之上，默认的http端口是80，HTTPS的端口号为443；\",\"HTTP协议永远都是客户端发起请求，服务器回送响应。限制无法在客户端未发送请求的情况下将消息推送给客户端。\",\"1， 支持客户/服务器模式。2简单快速，3灵活(允许传输任意类型的数据对象，用content-Type加以标记)，4无连接，5无状态；\",\"2， HTTP请求由三个部分组成，分别是请求行，消息报头，请求正文。\",\"3， 请求行以一个方法符号开头，以空格分开，后面跟着请求的URI和协议的版本号格式如下，MethodRequest-URI Http-Version CRLF\",\"关于Method 各个方法解释如下\",\"GET 请求获取Request-URI所标识的资源，在浏览器的地址栏中输入网址的方式访问网页时，浏览器采用GET方法向服务器获取资源\",\"POST 在Request-URI所标识的资源后附加新的数据，POST方法要求被请求服务器接受附在请求后面的数据，常用于提交表单。\",\"HEAD 请求获取由Request-URI所标识的资源的响应消息头\",\"PUT 请求服务器存储一个资源，并用Request-URI作为其标识\",\"使用明文进行通信，内容可能会被窃听；\",\"不验证通信方的身份，通信方的身份有可能遭遇伪装；\",\"无法证明报文的完整性，报文有可能遭篡改。\"]},\"324\":{\"h\":\"TCP和HTTP的关系\",\"t\":[\"HTTP协议基于TCP协议，HTTP协议需要依靠TCP协议来传输数据。TCP被称为面向连接的“传输层协议”，而HTTP层被称为“应用层协议”。\"]},\"325\":{\"h\":\"HTTPS\",\"t\":[\"HTTPS可以理解为 HTTP+SSL/TLS， 即 HTTP 下加入 SSL 层，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL，用于安全的 HTTP 数据传输。 HTTPS 并不是新协议，而是让 HTTP 先和 SSL（Secure Sockets Layer）通信，再由 SSL 和 TCP 通信。也就是说 HTTPS 使用了隧道进行通信。 通过使用 SSL，HTTPs 具有了加密（防窃听）、认证（防伪装）和完整性保护（防篡改）\"]},\"326\":{\"h\":\"HTTP2\",\"t\":[\"理解为是HTTP1.1的升级版\",\"解决了1.1的长连接会遇到阻塞的问题。它采用的是多路复用的形式去解决这个问题。什么是多路复用呢？就是一个通道可以让多条线路同时占用而不搞混。这里的作法是为每一个请求带一个编号，它样服务器方就能为请求的回应对上号了。如果一个请求时间过长，那么服务器就可以先暂停这个请求，先处理下一个请求，处理完再回来处理这个长请求，如果找回这个长请求呢，那就靠这个编号了。\",\"特点\",\"采用二进制的格式传输数据，1.1是文本格式\",\"对消息头进行压缩传输，节约消息头占用的网络流量。\",\"异步连接多路复用。\",\"保持1.1版本的兼容性。\"]},\"327\":{\"h\":\"三次握手四次挥手\",\"t\":[\"Tcp是一种面向连接的单播协议，在发送数据之前，通信双方必须建立一个连接(客户端和服务器的内存中要保存一份关于对方的信息，如IP地址、端口等)。\",\"TCP提供了一种可靠的、面向连接、字节流、传输层的服务，采用三次握手来建立一个连接，采用四次挥手来关闭一个连接。\",\"https://zhuanlan.zhihu.com/p/53374516\",\"1：互联网协议入门\",\"2：HTTP协议漫谈\",\"3：HTTP 状态码详解\",\"4：协议森林\",\"5：restful（网络即软件）\"]},\"328\":{\"h\":\"HTML介绍\",\"t\":[\"超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。 您可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。\"]},\"329\":{\"h\":\"博客\",\"t\":[\"菜鸟教程: https://www.runoob.com/html/html-tutorial.html\"]},\"330\":{\"h\":\"基础视频\",\"t\":[\"零基础必看的h5(html5)+css3+移动端前端视频教程] https://www.bilibili.com/video/BV14J4114768\\n[教程素材]：https://www.lanzoux.com/imSLkh63lcj\\nJavaScript基础语法-dom-bom-js-es6新语法 : https://www.bilibili.com/video/BV1Sy4y1C7ha\"]},\"331\":{\"h\":\"高级搜索\",\"t\":[\"通过in关键字搜索 语法：关键字 in: 示例：python in:name,description,readme 通过stars、fork数量搜索 语法：关键字 stars:>数量 forks:>数量 示例：python in:name stars:>9000 forks:>2400 按照范围查询 语法：关键字 stars:范围1..范围2 示例：python in:name stars:9000..9500 按创建、更新时间搜索 按照创建时间、更新时间搜索可以把版本老旧的资源筛选出去 语法 创建时间：关键字 created:>=YYYY-MM-DD 更新时间：关键字 pushed:>=YYYY-MM-DD 示例： python in:name created:>2020-01-01 pushed:>2020-01-01 \"]},\"332\":{\"h\":\"安装FastGithub\",\"t\":[\"地址：https://github.com/xljiulang/fastgithub\"]},\"333\":{\"h\":\"修改host文件访问github\",\"t\":[\"host文件所在位置：C:\\\\Windows\\\\System32\\\\drivers\\\\etc\\\\hosts\",\"# GitHub Start 192.30.253.112 github.com 69.171.239.11 github.global.ssl.fastly.net 192.30.253.118 gist.github.com 151.101.112.133 assets-cdn.github.com 151.101.184.133 raw.githubusercontent.com 151.101.112.133 gist.githubusercontent.com 151.101.184.133 cloud.githubusercontent.com 151.101.112.133 camo.githubusercontent.com 151.101.112.133 avatars0.githubusercontent.com 151.101.112.133 avatars1.githubusercontent.com 151.101.184.133 avatars2.githubusercontent.com 151.101.12.133 avatars3.githubusercontent.com 151.101.12.133 avatars4.githubusercontent.com 151.101.184.133 avatars5.githubusercontent.com 151.101.184.133 avatars6.githubusercontent.com 151.101.184.133 avatars7.githubusercontent.com 151.101.12.133 avatars8.githubusercontent.com # GitHub End \"]},\"334\":{\"h\":\"dev-sidecar\",\"t\":[\"开发者边车，github打不开，github加速，git clone加速，git release下载加速，stackoverflow加速\",\"https://github.com/docmirror/dev-sidecar\"]},\"335\":{\"h\":\"镜像访问\",\"t\":[\"https://github.com.cnpmjs.org https://hub.fastgit.org \",\"上面的镜像就是一个克隆版的 GitHub，你可以访问上面的镜像网站，网站的内容跟 GitHub 是完整同步的镜像，然后在这个网站里面进行下载克隆等操作\"]},\"336\":{\"h\":\"文件加速\",\"t\":[\"利用 Cloudflare Workers 对 github release 、archive 以及项目文件进行加速，部署无需服务器且自带CDN.\",\"https://gh.api.99988866.xyz https://g.ioiox.com \",\"以上网站为演示站点，如无法打开可以查看开源项目：gh-proxy-GitHub(https://hunsh.net/archives/23/) 文件加速自行部署。\"]},\"337\":{\"h\":\"加速下载\",\"t\":[\"只需要复制当前 GitHub 地址粘贴到输入框中就可以代理加速下载！\",\"地址：http://toolwa.com/github/\"]},\"338\":{\"h\":\"1. 一键生成 Github 简历\",\"t\":[\"通过 http://resume.github.io/ 这个网站你可以一键生成一个在线的 Github 简历。\",\"当时我参加的校招的时候，个人信息那里就放了一个在线的 Github 简历。我觉得这样会让面试官感觉你是一个内行，会提高一些印象分。\"]},\"339\":{\"h\":\"2. 个性化 Github 首页\",\"t\":[\"Github 目前支持在个人主页自定义展示一些内容。你只需要创建一个和你的 Github 账户同名的仓库，然后自定义README.md的内容即可。展示在你主页的自定义内容就是README.md的内容。\"]},\"340\":{\"h\":\"3. 自定义项目徽章\",\"t\":[\"你在 Github 上看到的项目徽章都是通过 https://shields.io/ 这个网站生成的。\"]},\"341\":{\"h\":\"4. Github 表情\",\"t\":[\"如果你想要在 Github 使用表情的话，可以在这里找找 ：www.webfx.com/tools/emoji-cheat-sheet/。\",\"博客：https://www.cnblogs.com/javaguide/p/13948501.html\"]},\"342\":{\"h\":\"PgSQL小知识之jsonb_path_query\",\"t\":[\"最近一个有个场景是这样子的，在表中有一个字段存储了一个json格式的文本，我需要取里面的一些列，按照我之前操作的习惯，那么就只能查询到内存中处理了，但是这是pgsql，我还这么处理，那不是白瞎这世界最先进的开源关系型数据库称号了。\",\"该字段保存的数据格式如下(模拟的假数据)\",\"[ { \\\"type\\\": 1, \\\"tableName\\\": \\\"emr.aaa\\\", \\\"remark\\\": \\\"xxx\\\" }, { \\\"type\\\": 1, \\\"tableName\\\": \\\"emr.bbb\\\", \\\"remark\\\": \\\"xxx\\\" }, { \\\"type\\\": 2, \\\"tableName\\\": \\\"emr.ccc\\\", \\\"remark\\\": \\\"xxx\\\" }, { \\\"type\\\": 2, \\\"tableName\\\": \\\"emr.ddd\\\", \\\"remark\\\": \\\"xxx\\\" }, { \\\"type\\\": 3, \\\"tableName\\\": \\\"emr.eee\\\", \\\"remark\\\": \\\"xxx\\\" } ] \",\"我需要查询type为2的里面的tableName字段，发现可以使用函数jsonb_path_query来处理。\",\"开始编写SQL，因为该字段的类型是text，所以首先要将类型转为jsonb形式然后筛选type为2的，编写SQL如下\",\"select jsonb_path_query(t.content::jsonb,'$[*]?(@.type==2)') from public.demo t -- 输出结果 {\\\"type\\\": 2, \\\"remark\\\": \\\"xxx\\\", \\\"tableName\\\": \\\"emr.ccc\\\"} {\\\"type\\\": 2, \\\"remark\\\": \\\"xxx\\\", \\\"tableName\\\": \\\"emr.ddd\\\"} \",\"我们还需要去获取里面的tableName字段，这个时候我们可以使用json操作符#>>来获取json对象\",\"select jsonb_path_query(t.content::jsonb,'$[*]?(@.type==2)') #>> '{tableName}' from public.demo t -- 输出结果 emr.ccc emr.ddd \",\"然后就这样子获取到我想要的数据了。\",\"上述操作有点类似xpath的用法省去了我查询到内存中再处理的复杂操作，直接一条SQL就可以获取到我想要的数据，我的使用场景就是一个几百条数据的配置表中，所以不会出现慢的情况，如果你的使用场景数据量大，先测试再使用。\"]},\"343\":{\"h\":\"jsonb_path_query\",\"t\":[\"jsonb_path_query(target jsonb, path jsonpath [, vars jsonb [, silent bool]])\",\"获取指定的json值的json路径返回的所有json项\",\"select * from jsonb_path_query('{\\\"a\\\":[1,2,3,4,5]}', '$.a[*] ? (@ >= $min && @ <= $max)', '{\\\"min\\\":2,\\\"max\\\":4}'); -- 2 -- 3 -- 4 select * from jsonb_path_query('{\\\"a\\\":{\\\"type\\\": 5,\\\"name\\\": \\\"zhangsan\\\"}}', '$.a[*] ? (@.type==5 ).name'); -- \\\"zhangsan\\\" select jsonb_path_query('{\\\"a\\\":{\\\"type\\\": 5,\\\"name\\\": \\\"zhangsan\\\"}}', '$.a[*] ? (@.type==5 )') #>>'{name}' -- zhangsan \",\"#>>\",\"以text形式获取指定路径上的json对象\",\"select '{\\\"a\\\":[1,2,3],\\\"b\\\":[4,5,6]}'::json#>'{a,2}'; -- 3 \",\"json和jsonb从用户操作角度来说是没有区别的，区别主要是存储和读取的系统处理和耗时方面有区别。json写入，读取慢，jsonb写入慢，读取快.\",\"中文教程地址：http://postgres.cn/docs/12/functions-json.html\"]},\"344\":{\"h\":\"默认依赖注入\",\"t\":[\"不应该依赖于具体的实现，应该依赖于抽象，高层模块不应该依赖于底层模块，二者应该依赖于抽象(否则业务变更，改动比较大)。简单的说就是为了更好的解耦。而控制反转(Ioc)就是这样的原则的其中一个实现思路, 这个思路的其中一种实现方式就是依赖注入(DI)。(官方原话：依赖注入(DI)这是一种在类和依赖项之间实现控制反转(Ioc)的技术)，\",\"dotNet内置有对依赖注入(DI)的支持，提供了一个内置的服务容器IServiceProvider，程序在启动时候我们预先将服务注册不同生命周期到ServiceCollection，然后利用ServiceCollection来创建ServiceProvider，利用后者提供服务实例，将服务注入到使用到它的类的构造函数中。\",\"只要是用new实例化的都是存在依赖的。\",\"内置的服务容器已经满足框架和大多数项目的需求，一般不需要替换，除非你用到了下面这些功能：\",\"属性注入\",\"基于名称的注入\",\"子容器\",\"自定义生命周期\",\"对延缓初始化的Func<T> 支持\",\"基于约定的注册\",\"解耦，使得代码更具有维护性。\",\"方便进行单元测试。\",\" //注册 services.AddTransient<IEmailValidCodeQuery, EmailValidCodeQuery>(); // 自动释放对象 services.AddSingleton<IMyDep>(sp => new MyDep()); // 自动释放对象 services.AddSingleton<MyDep>(); // 不自动释放对象 services.AddSingleton<IMyDep>(new MyDep()); //不自动释放对象 // 如果该IMessageWriter已经注册实现，该代码将没有作用 services.TryAddSingleton<IMessageWriter, LoggingMessageWriter>(); //移除和替换注册 //services.Replace(ServiceDescriptor.Transient<IEmailValidCodeQuery, EmailValidCodeQuery2>()); services.RemoveAll<IEmailValidCodeQuery>(); //注册泛型模板 services.AddSingleton(typeof(IAService<>), typeof(AService<>)); \",\"AddSingleton→AddTransient→AddScoped\",\"被注入的服务应该与注入的服务具有相同或者更长的生命周期\"]},\"345\":{\"h\":\"Singleton(单例)\",\"t\":[\"服务在第一次请求时被创建（或者当我们在ConfigureServices中指定创建某一实例并运行方法），其后的每次请求将沿用已创建服务。当应用程序关闭并释放SericeProvider时候，会释放单例服务。\",\"img\",\"图片来源自：https://blog.csdn.net/weixin_47498376/article/details/116177389\",\"services.AddSingleton<IApplicationService,ApplicationService> \",\"比如有状态的、静态类和成员。\"]},\"346\":{\"h\":\"Scoped(作用域)\",\"t\":[\"一次请求开始到请求结束 ，这次请求中获取的对象都是同一个，请求结束时候会释放有作用域的服务。\",\"img\",\"图片来源自：https://blog.csdn.net/weixin_47498376/article/details/116177389\",\"services.AddScoped<IApplicationService,ApplicationService> \",\"如果该service在一个请求过程中多次被用到，并且可能共享其中的字段或者属性，那么就使用scoped，例如httpcontext。 (感谢群里老哥的帮助)\"]},\"347\":{\"h\":\"Transient(瞬时)\",\"t\":[\"每一次获取的对象都不是同一个，适合于轻量级、无状态的服务，请求结束时候会释放服务。\",\"img\",\"图片来源自：https://blog.csdn.net/weixin_47498376/article/details/116177389\",\"services.AddTransient<IApplicationService,ApplicationService> \",\"如果该service在一次请求中只使用一次，那么就注册Transient就好了。\",\" /// <summary> /// 用户接口 /// </summary> public interface IUserService { string GetName(); } /// <summary> /// 用户实现 /// </summary> public class UserService : IUserService { public string GetName() { return \\\"AZRNG\\\"; } } \",\"需要在ConfigureServices方法进行注入\"]},\"348\":{\"h\":\"构造函数注入\",\"t\":[\"服务作为构造函数参数添加，并且运行时从服务容器中解析服务。\",\" private readonly IUserService _userService; public UserController(IUserService userService ,IEnumerable<IMessageWriter>)// 解析多个服务 { _userService = userService; } [HttpGet] public ActionResult GetName() { return Ok(_userService.GetName()); } \"]},\"349\":{\"h\":\"FromServices注入\",\"t\":[\" [HttpGet] public ActionResult GetName([FromServices] IUserService _userService) { return Ok(_userService.GetName()); } \",\"在.NET Core中DI的核心分为两个组件：IServiceCollection和 IServiceProvider。\",\"IServiceCollection负责注册\",\"IServiceProvider负责提供实例\",\"public void ConfigureServices(IServiceCollection services) { //将服务生命期的范围限定为单个请求的生命期 services.AddTransient<IUserService, UserService>(); } \"]},\"350\":{\"h\":\"构造函数获取服务\",\"t\":[\"private readonly IUserService _userService; public HomeController(IUserService userService) { _userService = userService; } public IActionResult Index() { var info = _userService.GetInfo(); return View(); } \"]},\"351\":{\"h\":\"IServiceProvider获取\",\"t\":[\"private readonly IServiceProvider _service; public UserController(IServiceProvider service) { _service = service; } [HttpGet] public ActionResult GetName() { var _userService = (IUserService)_service.GetService(typeof(IUserService)); return Ok(_userService.GetName()); } \"]},\"352\":{\"h\":\"ConfigureServices中获取服务\",\"t\":[\"var provider = services.BuildServiceProvider(); var userserivce = provider.GetService<IUserService>(); // 获取不到为null //或 var userservice2 = provider.GetRequiredService<IUserService>(); // 获取不到抛出异常 \"]},\"353\":{\"h\":\"Configure中获取服务\",\"t\":[\"var manualScope = app.ApplicationServices.CreateScope(); var service = manualScope.ServiceProvider.GetRequiredService<IUserService>(); service.SayHello(); \"]},\"354\":{\"h\":\"构建子容器\",\"t\":[\"using (var serviceProvider = new ServiceCollection() .AddSingleton<ISingletonService, SingletonService>() .BuildServiceProvider()) { var app = serviceProvider.GetService<ISingletonService>(); app.Execute(); } \",\"自己构建这种需要手动释放，防止内存泄露。避免在ConfigureService中调用BuildServiceProvider。\"]},\"355\":{\"h\":\"异步获取\",\"t\":[\"private readonly IServiceScopeFactory _serviceScopeFactory; public OrderHander(IServiceScopeFactory serviceScopeFactory) { _serviceScopeFactory = serviceScopeFactory; } public Task Hander() { using (var scope = _serviceScopeFactory.CreateScope()) { var userService = scope.ServiceProvider.GetRequiredService<IUserService>(); } return Task.CompletedTask; } \",\"在范围服务中不建议使用构造函数注入，推荐引入IServiceScopeFactory创建范围\",\"依赖关系注入：https://docs.microsoft.com/zh-cn/dotnet/core/extensions/dependency-injection\"]},\"356\":{\"h\":\"Cookie\"},\"357\":{\"h\":\"登录信息保存\"},\"358\":{\"h\":\"1.1 信息保存\",\"t\":[\"登录后用户的信息存入cookie中\",\"保存验证结果; 用户id可以存入NameIdentifier，账号存入GivenName，姓名存入Name\",\" var claims = new List<Claim> { new Claim(ClaimTypes.NameIdentifier, account), new Claim(ClaimTypes.Name, \\\"张三\\\"), new Claim(ClaimTypes.Role, \\\"校长\\\") }; var cliamsIdentity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme); var claimsPrincipal = new ClaimsPrincipal(cliamsIdentity); //可以理解为证件用户 await HttpContext.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme, claimsPrincipal, new AuthenticationProperties { ExpiresUtc = new DateTimeOffset(DateTime.Now.AddHours(6)) }); \"]},\"359\":{\"h\":\"1.2 ConfigureServices引用中间件\",\"t\":[\"引用验证中间件\",\"string CookieScheme = \\\"Cookies\\\";\",\"// 配置验证 services.AddAuthentication(CookieScheme) .AddCookie(CookieScheme, option => { //登录路径：这是当用户试图访问资源但未经过身份验证时，程序将会将请求重定向到这个相对路径。 option.LoginPath = new PathString(\\\"/account/login\\\"); //禁止访问路径：当用户试图访问资源时，但未通过该资源的任何授权策略，请求将被重定向到这个相对路径 option.AccessDeniedPath = new PathString(\\\"/account/denied\\\"); }); //注入上下文单例模式 services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>(); \"]},\"360\":{\"h\":\"1.3 Configure里面启用认证\",\"t\":[\"必须添加下面的两者\",\"app.UseAuthentication();//启用身份认证：识别当前请求的用户信息,一般是通过加密的Cookies实现。 app.UseAuthorization();//启用身份授权：识别当前请求是否有访问指定资源的权限，一般是根据当前请求识别的用户信息,结合角色权限相关配置来判断。 \"]},\"361\":{\"h\":\"1.4 获取信息\",\"t\":[\"在登录认证通过后访问时候可以通过\",\"var name = this.User.Identity.Name;//获取存入的名称信息 HttpContext.User.FindFirst(u => u.Type == ClaimTypes.NameIdentifier)?.Value; \"]},\"362\":{\"h\":\"1.5 注销用户\",\"t\":[\" await HttpContext.SignOutAsync(); \",\"cookie认证 https://www.cnblogs.com/OpenCoder/p/8341843.html\"]},\"363\":{\"h\":\"全局获取\",\"t\":[\"如果想在其他层获取当前用户信息，需要将IHttpContextAccessor注入进去，然后通过这个去获取，例如：\",\"public class UserEntityService : IUserEntityService { private IHttpContextAccessor _accessor; private readonly IMongoCollection<UserProfile> _users; public UserEntityService(IHttpContextAccessor accessor, IDefaultMongoDatabaseProvider databaseProvider) { _accessor = accessor; _users = databaseProvider.GetCollection<UserProfile>(CollectionNames.UserProfiles); } public Task<UserProfile> GetCurrentUserAsync() { var rawUser = this._accessor.HttpContext.User; if (rawUser == null) { return null; } var filter = Builders<UserProfile>.Filter.Eq(\\\"UserId\\\", rawUser.UserId); return _users.Find(filter).FirstOrDefaultAsync(); } } \"]},\"364\":{\"h\":\"Jwt使用\",\"t\":[\"示例环境：vs2022、.net5 框架：WebAPI\",\"img\",\"引用nuget包\",\" <ItemGroup> <PackageReference Include=\\\"Microsoft.AspNetCore.Authentication.JwtBearer\\\" Version=\\\"5.0.7\\\" /> <PackageReference Include=\\\"Microsoft.IdentityModel.Tokens\\\" Version=\\\"6.11.1\\\" /> <PackageReference Include=\\\"System.IdentityModel.Tokens.Jwt\\\" Version=\\\"6.11.1\\\" /> </ItemGroup> \",\"在appsettings中配置文章jwt信息\",\" \\\"JWTConfig\\\": { \\\"Secret\\\": \\\"sdfsdfsrty45634kkhllghtdgdfss345t678fs\\\",//密钥长度太短会报出异常，最低16位 \\\"Issuer\\\": \\\"BlogCore\\\", \\\"Audience\\\": \\\"laozhang\\\" } \",\"在登录成功的时候我们会颁发token给前端，前端存储token并且在后续的每次请求都携带token来访问。然后新建控制器并添加下面的代码\",\"[HttpGet] public ActionResult<string> Login() { //前面是登录逻辑 //登录成功 var user = new { UserId = \\\"112233445566\\\", UserName = \\\"张三\\\", RoleId = \\\"987654321\\\" }; var claims = new List<Claim> { new Claim(ClaimTypes.Name, user.UserName), new Claim(ClaimTypes.NameIdentifier, user.UserId), new Claim(ClaimTypes.Role,user.RoleId) }; var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration[\\\"JWTConfig:Secret\\\"])); var token = new JwtSecurityToken( issuer: _configuration[\\\"JWTConfig:Issuer\\\"], audience: _configuration[\\\"JWTConfig:Audience\\\"], claims: claims, notBefore: DateTime.Now, expires: DateTime.Now.AddHours(7), //过期时间7小时 signingCredentials: new SigningCredentials(key, SecurityAlgorithms.HmacSha256)); try { return new JwtSecurityTokenHandler().WriteToken(token); } catch (Exception ex) { _logger.LogError(ex, $\\\"生成token出错 {ex.Message}\\\"); return string.Empty; } } \",\"调用上面的接口会生成token，解析我们生成token如图\",\"img\",\"官方访问太慢，推荐该网站：https://www.lizhanglong.com/Tools/DeserializeJwtToken\",\"前端传递token然后后端解析token识别用户信息并处理逻辑\",\"[HttpGet] [Authorize]//标识该接口需要认证才可以访问 public ActionResult<string> GetUserName() { var userId = HttpContext.User.Claims.FirstOrDefault(t => t.Type == ClaimTypes.NameIdentifier)?.Value ?? string.Empty; var name = HttpContext.User.Claims.FirstOrDefault(t => t.Type == ClaimTypes.Name)?.Value ?? string.Empty; var roleId = HttpContext.User.Claims.FirstOrDefault(t => t.Type == ClaimTypes.Role)?.Value ?? string.Empty; return Ok($\\\"name:{name} userId:{userId} roleId:{roleId}\\\"); } \",\"请求接口，因为没有设置认证提示错误\",\"img\",\"在ConfigureServices中对于传输过来的jwt token进行判断认证\",\"services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme).AddJwtBearer(o =>//认证 { o.Challenge = JwtBearerDefaults.AuthenticationScheme; o.RequireHttpsMetadata = false; o.TokenValidationParameters = new TokenValidationParameters { //3+2 // 是否开启签名认证 ValidateIssuerSigningKey = true, IssuerSigningKey = new SymmetricSecurityKey(Encoding.ASCII.GetBytes(Configuration[\\\"JWTConfig:Secret\\\"])), // 发行人验证，这里要和token类中Claim类型的发行人保持一致 ValidateIssuer = true, ValidIssuer = Configuration[\\\"JWTConfig:Issuer\\\"],//发行人 // 接收人验证 ValidateAudience = true, ValidAudience = Configuration[\\\"JWTConfig:Audience\\\"],//验证人 RequireExpirationTime = true, ValidateLifetime = true, ClockSkew = TimeSpan.Zero,//校验时间是否过期时，设置的时钟偏移量 }; // 增加token验证过期的时候给返回头设置提示 o.Events = new JwtBearerEvents { //如果jwt过期 那么就先走这个失败的方法，再走OnChallenge OnAuthenticationFailed = content =>//过期时候的场景，会给返回头增加标识 { if (content.Exception.GetType() == typeof(SecurityTokenExpiredException)) { content.Response.Headers.Add(\\\"Token-Expired\\\", \\\"true\\\"); } return Task.CompletedTask; }, OnChallenge = async context =>//验证失败自定义返回类 { // 跳过默认的处理逻辑，返回下面的模型数据 context.HandleResponse(); context.Response.ContentType = \\\"application/json;charset=utf-8\\\"; context.Response.StatusCode = StatusCodes.Status401Unauthorized; //var result = new ServiceResult();//实例化返回类 //result.IsFailed(\\\"UnAuthorized\\\"); //await context.Response.WriteAsync(result.ToJson()); await context.Response.WriteAsync(\\\"验证失败\\\"); } }; }); \",\"注意：记得在Configure中开启身份认证 app.UseAuthentication();\",\"再次访问获取用户信息接口\",\"img\",\"在请求头添加【Authorization: Bearer token】进行请求。\",\"img\",\"项目启动测试的时候更推荐配置使用swagger传递token进行测试\",\"修改GetUserName的授权为\",\"[Authorize(Roles = \\\"超级管理员\\\")] \",\"再次访问为403资源不可用，那么我们就创建一个获取一个角色为超级管理员的token(在生成token的时候将用户的角色设置为超级管理员)，再次请求\",\"img\",\"当然这个只是基本的操作，还有策略授权、自定义授权封装等,不过本文内容已经够为下次文章铺垫。\",\"博客园老张的哲学\"]},\"365\":{\"h\":\"Session\",\"t\":[\"最后编辑时间：2021年1月24日\"]},\"366\":{\"h\":\"1. 简单使用\",\"t\":[\"ConfigureServices中使用\",\"services.AddDistributedMemoryCache(); services.AddSession(); \",\"因为session的服务端存储需要缓存，所以需要引入net.core的缓存DistributedMemoryCache；\",\"Configure中使用\",\"app.UseSession(); \",\"控制器中使用\",\" HttpContext.Session.SetString(\\\"user\\\", \\\"lisi\\\"); var user = HttpContext.Session.GetString(\\\"user\\\"); //存储 HttpContext.Session.Set(\\\"LoginId\\\", System.Text.Encoding.Default.GetBytes(\\\"666\\\")); //获取 bool flag = HttpContext.Session.TryGetValue(\\\"LoginId\\\", out byte[] byteLoginId); var loginId = System.Text.Encoding.Default.GetString(byteLoginId); // LoginId=\\\"666\\\"; //获取 var loginId2 = HttpContext.Session.GetString(\\\"LoginId\\\"); \",\"操作string类型需要安装组件\",\"Microsoft.AspNetCore.Http\",\"注：\",\"当前操作只能在控制器中使用session\"]},\"367\":{\"h\":\"2. 封装的Session公共类\",\"t\":[\"目的是可以让全局都可以获取到上下文\",\"/// <summary> /// 上下文 /// </summary> public class MyHttpContext { /// <summary> /// 服务提供者 /// </summary> public static IServiceProvider _serviceProvider; public static HttpContext Current { get { var factory = _serviceProvider.GetService<IHttpContextAccessor>(); return factory.HttpContext; } } } \",\"ConfigureServices中使用\",\" services.AddDistributedMemoryCache(); services.AddSession(); //注入IHttpContextAccessor services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>(); \",\"Configure中使用\",\" MyHttpContext._serviceProvider = app.ApplicationServices; app.UseSession(); \",\"存储session\",\"MyHttpContext.Current.Session.SetString(\\\"aa\\\", \\\"bb\\\"); var aa = MyHttpContext.Current.Session.GetString(\\\"aa\\\"); \"]},\"368\":{\"h\":\"3. 通过session存储用户信息\",\"t\":[\"ConfigureServices中使用\",\" services.AddDistributedMemoryCache(); services.AddSession(); //注入IHttpContextAccessor services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>(); \",\"Configure中使用\",\" MyHttpContext._serviceProvider = app.ApplicationServices; app.UseSession(); \",\"操作者模型\",\"/// <summary> /// 操作模型，保存登陆用户必要信息。 /// </summary> public class Operator { /// <summary> /// 用户ID /// </summary> public string UserId { get; set; } /// <summary> /// 账号 /// </summary> public string Account { get; set; } /// <summary> /// 真实姓名 /// </summary> public string RealName { get; set; } /// <summary> /// 昵称 /// </summary> public string NickName { get; set; } /// <summary> /// 是否可以查看所有数据 数据权限 /// </summary> public DataPermissionEnum DataPermission { get; set; } = DataPermissionEnum.My; /// <summary> /// 头像 /// </summary> public string Avatar { get; set; } } /// <summary> /// 数据权限 /// </summary> public enum DataPermissionEnum { [Display(Name = \\\"仅自己的数据\\\")] [Description(\\\"仅自己的数据\\\")] My = 0, [Display(Name = \\\"查看所有的数据\\\")] [Description(\\\"查看所有的数据\\\")] All = 1 } \",\"操作者单例\",\"/// <summary> /// 用户登陆信息提供者。 /// </summary> public class OperatorProvider { /// <summary> /// Session键。 /// </summary> private const string _lOGIN_USER_KEY = \\\"LoginUser\\\"; private OperatorProvider() { } static OperatorProvider() { } //使用内部类+静态构造函数实现延迟初始化。 private class Nested { static Nested() { } public static readonly OperatorProvider instance = new OperatorProvider(); } /// <summary> /// 在大多数情况下，静态初始化是在.NET中实现Singleton的首选方法。 /// </summary> public static OperatorProvider Instance { get { return Nested.instance; } } public Operator Current { get; set; } /// <summary> /// /// 从Session/Cookie删除用户操作模型。 /// </summary> public void Remove(HttpContext context) { context.Session.Remove(_lOGIN_USER_KEY); } public void Remove() { MyHttpContext.Current.Session.Remove(_lOGIN_USER_KEY); } } \",\"存储并且获取用户信息\",\"//存储 OperatorProvider.Instance.Current = new Operator { Account = \\\"admin\\\", NickName = \\\"张三\\\" }; //获取 var account = OperatorProvider.Instance.Current.Account; \"]},\"369\":{\"h\":\"4. Session设置\",\"t\":[\" services.AddDistributedMemoryCache(); services.AddSession(options => { options.Cookie.Name = \\\".AdventureWorks.Session\\\"; options.IdleTimeout = System.TimeSpan.FromSeconds(10);//设置session的过期时间 options.Cookie.HttpOnly = true;//设置在浏览器不能通过js获得该cookie的值 }); services.AddSingleton<IHttpContextAccessor, HttpContextAccessor>(); \"]},\"370\":{\"h\":\"MemoryCache\",\"t\":[\"NetCore中的缓存和System.Runtime.Caching很相似，但是在功能上做了增强，缓存的key支持object类型；提供了泛型支持；可以读缓存和单个缓存项的大小做限定，可以设置缓存的压缩比例。\",\"通过实现微软官方的Microsoft.Extensions.Caching里面的IDistributedCache接口实现缓存集成到ASPNETCore中\"]},\"371\":{\"h\":\"1.1 简单入门\",\"t\":[\"netcore中缓存相关的类库都在 Microsoft.Extensions.Caching ，使用MemoryCache首先安装包\",\"<PackageReference Include=\\\"Microsoft.Extensions.Caching.Memory\\\" Version=\\\"5.0.0\\\" /> \",\"注入到容器\",\" public void ConfigureServices(IServiceCollection services) { services.AddControllers(); //添加缓存配置 services.AddMemoryCache(); } \",\"使用\",\" private readonly IMemoryCache _cache; public HomeController(IMemoryCache cache) { _cache = cache; } [HttpGet] public string Set() { //写 _cache.Set(\\\"login\\\", \\\"4545478244\\\"); return \\\"\\\"; } [HttpGet] public string Get() { //读 var value = _cache.Get(\\\"login\\\"); return \\\"\\\"; } \"]},\"372\":{\"h\":\"1.2 过期时间\",\"t\":[\" //1.最简单使用方式 _cache.Set(\\\"mykey\\\", \\\"myvalue\\\"); //2.绝对过期时间，3秒后过期 _cache.Set(\\\"key1\\\", \\\"value1\\\", new DateTimeOffset(DateTime.Now.AddSeconds(3))); //3.绝对过期时间，效果同上 _cache.Set(\\\"key2\\\", \\\"value2\\\", TimeSpan.FromSeconds(3)); //4.滑动过期时间，3秒后,即三秒钟内被访问，则重新刷新缓存时间为3秒后 _cache.Set(\\\"key3\\\", \\\"value3\\\", new MemoryCacheEntryOptions { SlidingExpiration = TimeSpan.FromSeconds(3), }); Console.WriteLine(\\\"-----------暂停2秒\\\"); Thread.Sleep(2000);//暂停2秒 Console.WriteLine($\\\"key1的值：{_cache.Get(\\\"key1\\\") ?? \\\"key1被清除\\\"}\\\"); Console.WriteLine($\\\"key2的值：{_cache.Get(\\\"key2\\\") ?? \\\"key2被清除\\\"}\\\"); Console.WriteLine($\\\"key3的值：{_cache.Get(\\\"key3\\\") ?? \\\"key3被清除\\\"}\\\"); Console.WriteLine(\\\"-----------暂停2秒\\\"); Thread.Sleep(2000);//再次暂停2秒 Console.WriteLine($\\\"key1的值：{_cache.Get(\\\"key1\\\") ?? \\\"key1被清除\\\"}\\\"); Console.WriteLine($\\\"key2的值：{_cache.Get(\\\"key2\\\") ?? \\\"key2被清除\\\"}\\\"); Console.WriteLine($\\\"key3的值：{_cache.Get(\\\"key3\\\") ?? \\\"key3被清除\\\"}\\\"); \",\"在例子中key1,key2都是使用的绝对过期时间，key3使用的相对过期时间，2秒后第一次访问key1、key2、key3都没过期，其中key3的过期时间刷新了，重新设置为3秒后，所以再次暂停2秒后，key1、key2都过期了，key3仍然存在。\",\"程序运行结果如下：\",\"img\"]},\"373\":{\"h\":\"1.2 常用配置\",\"t\":[\"下边的例子介绍netcore中缓存的常用配置，直接看代码\",\" public void ConfigureServices(IServiceCollection services) { services.AddControllers(); services.AddMemoryCache(options => { //缓存大小 options.SizeLimit = 3;//如果设置了该值，那么每个set都必须设置size，并且超过了这个值的大小的会自动销毁 //缓存满了时，压缩20%（即删除20份优先级低的缓存项） options.CompactionPercentage = 0.2; //两秒钟查找一次过期项 options.ExpirationScanFrequency = TimeSpan.FromSeconds(3); }); } [HttpGet] public string TestSize() { //SizeLimit配置3 _cache.Set(\\\"item1\\\", \\\"11111\\\", new MemoryCacheEntryOptions { //缓存大小占1份 Size = 2 }); _cache.Set(\\\"item2\\\", \\\"22222\\\", new MemoryCacheEntryOptions { Size = 2 }); var item1 = _cache.Get(\\\"item1\\\");//输出 11111 var item2 = _cache.Get(\\\"item2\\\");//输出 null return \\\"\\\"; } [HttpGet] public string TestOptions() { //单个缓存项的配置 MemoryCacheEntryOptions cacheEntityOps = new MemoryCacheEntryOptions() { //绝对过期时间1 //AbsoluteExpiration = new DateTimeOffset(DateTime.Now.AddSeconds(2)), //绝对过期时间2 //AbsoluteExpirationRelativeToNow=TimeSpan.FromSeconds(3), //相对过期时间 SlidingExpiration = TimeSpan.FromSeconds(3), //优先级，当缓存压缩时会优先清除优先级低的缓存项 Priority = CacheItemPriority.Low,//优先级等级：Low,Normal,High,NeverRemove //缓存大小占1份 Size = 1 }; //注册缓存项被清除时的回调，可以注册多个回调 cacheEntityOps.RegisterPostEvictionCallback((key, value, reason, state) => { Console.WriteLine($\\\"回调函数输出【键:{key},值:{value},被清除的原因:{reason}】\\\"); }); _cache.Set(\\\"mykey\\\", \\\"myvalue\\\", cacheEntityOps); Console.WriteLine($\\\"mykey的值：{_cache.Get(\\\"mykey\\\") ?? \\\"mykey缓存被清除了\\\"}\\\"); Console.WriteLine(\\\"------------------暂停3秒\\\"); Thread.Sleep(3000); Console.WriteLine($\\\"mykey的值：{_cache.Get(\\\"mykey\\\") ?? \\\"mykey缓存被清除了\\\"}\\\"); return \\\"\\\"; } \",\"注意netcore中设置缓存和缓存项大小是没有单位的\",\"缓存被清空的回调函数可以注册多个（System.Runtime.Caching清除缓存的回调只能是一个）。\",\"程序执行结果：\",\"img\"]},\"374\":{\"h\":\"1.3 IChangeToken\",\"t\":[\"上边我们已经简单了解了通过滑动过期时间和绝对过期时间来控制缓存的有效性，但是有时缓存的过期与否和时间没有联系，比如我们缓存一个文件的内容，不管缓存多久只要文件没有发生变化缓存都是有效的。在net framework中我们可以通过CacheDependency来控制，在net core中怎么控制呢？net core中我们可以使用IChangeToken接口轻松实现缓存的过期策略。先看一下IChangeToken接口：\",\" public interface IChangeToken { // 是否有变化发生 bool HasChanged { get; } // token是否会调用回调函数，为true时才会有效 bool ActiveChangeCallbacks { get; } // 注册一个回调函数，当有变化时触发回调 IDisposable RegisterChangeCallback(Action<object> callback, object state); } \",\"看一下IChangeToken实现缓存过期策略的两个例子：\"]},\"375\":{\"h\":\"1.3.1 监控文件\",\"t\":[\"需要安装组件：Microsoft.Extensions.FileProviders.Physical\",\" internal class Program { private static void Main(string[] args) { string fileName = Path.Combine(Environment.CurrentDirectory, \\\"someCacheData.xml\\\"); var fileInfo = new FileInfo(fileName); MemoryCache myCache = new MemoryCache(new MemoryCacheOptions() { }); MemoryCacheEntryOptions cacheEntityOps = new MemoryCacheEntryOptions(); //PollingFileChangeToken是IChangeToken的实现类，通过轮询监控文件变化 cacheEntityOps.AddExpirationToken(new Microsoft.Extensions.FileProviders.Physical.PollingFileChangeToken(fileInfo)); //缓存失效时，回调函数 cacheEntityOps.RegisterPostEvictionCallback((key, value, reason, state) => { Console.WriteLine($\\\"文件【{key}】改动了\\\"); }); //添加缓存，key为文件名，value为文件内容 myCache.Set(fileInfo.Name, File.ReadAllText(fileName), cacheEntityOps); Console.WriteLine(myCache.Get(fileInfo.Name)); } } \",\"PollingFileChangeToken通过轮询来监控文件有没有发生变化，如果文件中的内容发生改变，缓存就会自动过期。\"]},\"376\":{\"h\":\"1.3.2 通过代码控制缓存过期\",\"t\":[\" class Program { static void Main(string[] args) { MemoryCache memoryCache = new MemoryCache(new MemoryCacheOptions()); MemoryCacheEntryOptions cacheEntityOps = new MemoryCacheEntryOptions(); //使用CancellationChangeToken控制缓存过期 CancellationTokenSource tokenSource = new CancellationTokenSource(); cacheEntityOps.AddExpirationToken(new CancellationChangeToken(tokenSource.Token)); //设置缓存 memoryCache.Set(\\\"mykey\\\", \\\"myvalue\\\", cacheEntityOps); Console.WriteLine(memoryCache.Get(\\\"mykey\\\") ?? \\\"缓存被清除了\\\"); //通过代码清除缓存 tokenSource.Cancel(); Console.WriteLine(memoryCache.Get(\\\"mykey\\\") ?? \\\"缓存被清除了\\\"); } } \",\"tokenSource.Cancel方法发送取消信号，这个方法会触发缓存过期，基于此我们可以通过Cancel方法灵活的实现自定义的缓存策略。\",\"程序执行结果如下：\",\"img\"]},\"377\":{\"h\":\"1.4 引用Nuget包\",\"t\":[\"直接引用我自己简单封装的一个Nuget包(简单封装自己用，不要嘲笑)\",\" <PackageReference Include=\\\"Common.Cache.MemoryCache\\\" Version=\\\"1.1.0\\\" /> \",\"注入到容器\",\" public void ConfigureServices(IServiceCollection services) { services.AddControllers(); //注入 services.AddMemoryCacheExtension(); } \",\"使用\",\" # 在需要使用的地方进行注入 private readonly IMemoryCachimg _cache; public HomeController(IMemoryCachimg cache) { _cache = cache; } \"]},\"378\":{\"h\":\"2.1 描述\",\"t\":[\"是一个基于内存的易于使用并且线程安全的缓存组件。Lazy的意思是LazyCache永远不会再缓存未命中的时候触发一次以上的缓存委托函数，因为使用了MemoryCache并且使用了懒锁来确保只会执行一次。\",\"内置Lazy锁并且底层使用MemoryCache。\",\"安装组件\",\" <PackageReference Include=\\\"LazyCache\\\" Version=\\\"2.1.3\\\" /> <PackageReference Include=\\\"LazyCache.AspNetCore\\\" Version=\\\"2.1.3\\\" /> \",\"使用\",\"//ConfigureServices中注入服务 services.AddLazyCache(); //控制器中使用构造函数注入IAppCache //操作实例 var list = await _appCache.GetAsync<IEnumerable<WeatherForecast>>(\\\"yanshi\\\"); _appCache.Add<IEnumerable<WeatherForecast>>(\\\"yanshi\\\", list, DateTimeOffset.Now.AddSeconds(10)); \",\"IDistributedCache骨架代码\",\"namespace Microsoft.Extensions.Caching.Distributed { public interface IDistributedCache { byte[] Get(string key); void Refresh(string key); void Remove(string key); void Set(string key, byte[] value, DistributedCacheEntryOptions options); } } \"]},\"379\":{\"h\":\"2.1 Redis分布式缓存\",\"t\":[\"微软给netcore的缓存提供了Redis和Sqlserver的实现，通过Sqlserver来缓存的场景比较少，这里我们简单看一下官方提供的Redis缓存用法。\"]},\"380\":{\"h\":\"2.1.1 安装redis\",\"t\":[\"这里我直接使用docker安装了redis\",\"docker run -p 6379:6379 --name redis -d redis redis-server --appendonly yes --requirepass \\\"123456\\\" \",\"命令说明：\",\"-p：宿主机端口与容器端口映射，前面的端口为主机映射端口（需配置服务器安全组），后面的端口为镜像开放的端口\",\"--restart=always：无论什么情况挂壁，总是重启\",\"--name：容器名称\",\"-d：使用指定的镜像，在后台运行容器\",\"--appendonly yes：redis运行时开启持久化\",\"--requirepass “123456”：设置redis登录密码\"]},\"381\":{\"h\":\"2.1.2 控制台程序\",\"t\":[\"添加Nuget包\",\" <PackageReference Include=\\\"Microsoft.Extensions.Caching.StackExchangeRedis\\\" Version=\\\"5.0.1\\\" /> \",\"写一个简单的控制台程序实现一下netcore中的分布式缓存redis实现\",\" private static void Main(string[] args) { //获取RedisCache实例 RedisCache redisCache = new RedisCache(new RedisCacheOptions() { Configuration = \\\"localhost:6379,password=123456\\\", InstanceName = \\\"MyData\\\" }); //在redis中是以hash表的模式存放的 redisCache.SetString(\\\"Name\\\", \\\"jack\\\"); redisCache.SetString(\\\"Age\\\", \\\"20\\\"); redisCache.SetString(\\\"Address\\\", \\\"上海\\\", new DistributedCacheEntryOptions() { //SlidingExpiration = TimeSpan.FromSeconds(3) AbsoluteExpiration = DateTimeOffset.Now.AddDays(1)//过期时间 }); //获取缓存 Console.WriteLine(redisCache.GetString(\\\"Name\\\")); } \"]},\"382\":{\"h\":\"2.1.3 Web API\",\"t\":[\"新建一个net5 Web API应用程序添加Nuget包\",\" <PackageReference Include=\\\"Microsoft.Extensions.Caching.StackExchangeRedis\\\" Version=\\\"5.0.1\\\" /> \",\"注入服务\",\" public void ConfigureServices(IServiceCollection services) { services.AddControllers(); services.AddStackExchangeRedisCache(options => { options.Configuration = \\\"localhost:6379,password=123456,defaultdatabase=1\\\"; options.InstanceName = \\\"MyData\\\"; }); } \",\"依赖注入使用\",\" private readonly IDistributedCache _cache; public WeatherForecastController(IDistributedCache cache) { _cache = cache; } [HttpGet] public async Task<string> TestAsync() { //永不过期 await _cache.SetAsync(\\\"add\\\", Encoding.UTF8.GetBytes(\\\"北京\\\")); var add = await _cache.GetStringAsync(\\\"add\\\");//北京 //配置过期时间 await _cache.SetStringAsync(\\\"Address\\\", \\\"上海\\\", new DistributedCacheEntryOptions() { //SlidingExpiration = TimeSpan.FromSeconds(3) AbsoluteExpiration = DateTimeOffset.Now.AddDays(1) }); var address = await _cache.GetStringAsync(\\\"Address\\\");//上海 return \\\"\\\"; } \",\"作者：捞月亮的猴子 https://www.cnblogs.com/wyy1234/p/10519681.html\",\"官方教程：https://docs.microsoft.com/zh-cn/aspnet/core/performance/caching/memory?view=aspnetcore-5.0\"]},\"383\":{\"h\":\"分布式缓存\"},\"384\":{\"h\":\"分布式缓存\",\"t\":[\"微软给netcore的分布式缓存提供了Redis和Sqlserver的实现，通过Sqlserver来缓存的场景比较少，这里我们简单看一下官方提供的Redis缓存用法。\"]},\"385\":{\"h\":\"1. 安装redis\",\"t\":[\"这里我直接使用docker安装了redis\",\"docker run -p 6379:6379 --name redis -d redis redis-server --appendonly yes --requirepass \\\"123456\\\" \",\"命令说明：\",\"-p：宿主机端口与容器端口映射，前面的端口为主机映射端口（需配置服务器安全组），后面的端口为镜像开放的端口\",\"--restart=always：无论什么情况挂壁，总是重启\",\"--name：容器名称\",\"-d：使用指定的镜像，在后台运行容器\",\"--appendonly yes：redis运行时开启持久化\",\"--requirepass “123456”：设置redis登录密码\"]},\"386\":{\"h\":\"2. 控制台程序\",\"t\":[\"添加Nuget包\",\" <PackageReference Include=\\\"Microsoft.Extensions.Caching.StackExchangeRedis\\\" Version=\\\"5.0.1\\\" /> \",\"写一个简单的控制台程序实现一下netcore中的分布式缓存redis实现\",\" private static void Main(string[] args) { //获取RedisCache实例 RedisCache redisCache = new RedisCache(new RedisCacheOptions() { Configuration = \\\"localhost:6379,password=123456\\\", InstanceName = \\\"MyData\\\" }); //在redis中是以hash表的模式存放的 redisCache.SetString(\\\"Name\\\", \\\"jack\\\"); redisCache.SetString(\\\"Age\\\", \\\"20\\\"); redisCache.SetString(\\\"Address\\\", \\\"上海\\\", new DistributedCacheEntryOptions() { //SlidingExpiration = TimeSpan.FromSeconds(3) AbsoluteExpiration = DateTimeOffset.Now.AddDays(1)//过期时间 }); //获取缓存 Console.WriteLine(redisCache.GetString(\\\"Name\\\")); } \"]},\"387\":{\"h\":\"2.1 Web API\",\"t\":[\"新建一个net5 Web API应用程序添加Nuget包\",\" <PackageReference Include=\\\"Microsoft.Extensions.Caching.StackExchangeRedis\\\" Version=\\\"5.0.1\\\" /> \",\"注入服务\",\" public void ConfigureServices(IServiceCollection services) { services.AddControllers(); services.AddStackExchangeRedisCache(options => { options.Configuration = \\\"localhost:6379,password=123456,defaultdatabase=1\\\"; options.InstanceName = \\\"MyData\\\"; }); } \",\"依赖注入使用\",\" private readonly IDistributedCache _cache; public WeatherForecastController(IDistributedCache cache) { _cache = cache; } [HttpGet] public async Task<string> TestAsync() { //永不过期 await _cache.SetAsync(\\\"add\\\", Encoding.UTF8.GetBytes(\\\"北京\\\")); var add = await _cache.GetStringAsync(\\\"add\\\");//北京 //配置过期时间 await _cache.SetStringAsync(\\\"Address\\\", \\\"上海\\\", new DistributedCacheEntryOptions() { //SlidingExpiration = TimeSpan.FromSeconds(3) AbsoluteExpiration = DateTimeOffset.Now.AddDays(1) }); var address = await _cache.GetStringAsync(\\\"Address\\\");//上海 return \\\"\\\"; } \"]},\"388\":{\"h\":\"配置读取\"},\"389\":{\"h\":\"1. 说明\",\"t\":[\"默认情况下读取配置Configuration的默认优先级：ConfigureAppConfiguration(自定义读取)>CommandLine(命令行参数)>Environment(环境变量)>appsetting.json(默认配置文件)>UseSetting的顺序\",\"原因：读取配置的顺序是后来者居上模式，后来注册的会优先被读取到。\",\"默认环境：Development、Production\"]},\"390\":{\"h\":\"2. 获取配置\"},\"391\":{\"h\":\"2.1 获取单个项\",\"t\":[\"测试文件\",\"{ \\\"Logging\\\": { \\\"LogLevel\\\": { \\\"Default\\\": \\\"Information\\\", \\\"Microsoft\\\": \\\"Warning\\\", \\\"Microsoft.Hosting.Lifetime\\\": \\\"Information\\\" } }, \\\"RabbitMQ\\\": { \\\"Hosts\\\": [ \\\"**.***.***.**\\\" ], \\\"Port\\\": 5672, \\\"UserName\\\": \\\"admin\\\", \\\"Password\\\": \\\"123456789\\\", \\\"VirtualHost\\\": \\\"myQueue\\\" }, \\\"array\\\": { \\\"entries\\\": { \\\"0\\\": \\\"value00\\\", \\\"1\\\": \\\"value10\\\", \\\"2\\\": \\\"value20\\\", \\\"4\\\": \\\"value40\\\", \\\"5\\\": \\\"value50\\\" } }, \\\"AllowedHosts\\\": \\\"*\\\" } \"]},\"392\":{\"h\":\"2.1.1 GetValue\",\"t\":[\"//值是int类型 var a1 = Configuration.GetValue<int>(\\\"RabbitMQ:Port\\\"); //值是字符串 var a2 = Configuration.GetValue<string>(\\\"RabbitMQ:UserName\\\"); //获取数组第一个 var a0 = Configuration[\\\"RabbitMQ:Hosts:0\\\"]; var a3 = Configuration[\\\"RabbitMQ:UserName\\\"]; \"]},\"393\":{\"h\":\"2.1.2 GetSection\",\"t\":[\"会返回具有指定子节键的配置子节。\",\" //值是数组 var a0 = Configuration.GetSection(\\\"RabbitMQ:Hosts\\\").Get<string[]>(); var key1 = Configuration.GetSection(\\\"array:entries\\\")[\\\"0\\\"];//value00 \",\"GetSection 永远不会返回 null。 如果找不到匹配的节，则返回空 IConfigurationSection。\"]},\"394\":{\"h\":\"2.1.3 GetChildren 和 Exists\",\"t\":[\"var selection = Configuration.GetSection(\\\"array:entries\\\"); if (!selection.Exists()) { throw new Exception(\\\"section2 does not exist.\\\"); } var children = selection.GetChildren(); var strList = new List<string>(); foreach (var subSection in children) { strList.Add(subSection.Key + \\\":key\\\"); } var str = JsonConvert.SerializeObject(strList);//[\\\"0:key\\\",\\\"1:key\\\",\\\"2:key\\\",\\\"4:key\\\",\\\"5:key\\\"] \"]},\"395\":{\"h\":\"2.2 映射项到强类型对象\",\"t\":[\"模型类\",\"public class RabbitMQConfig { public const string RabbitMQ = \\\"RabbitMQ\\\"; public string[] Hosts { get; set; } public int Port { get; set; } public string UserName { get; set; } public string Password { get; set; } public string VirtualHost { get; set; } } \",\"appsettings\",\" \\\"RabbitMQ\\\": { \\\"Hosts\\\": [ \\\"**.***.***.**\\\" ], \\\"Port\\\": 5672, \\\"UserName\\\": \\\"admin\\\", \\\"Password\\\": \\\"123456789\\\", \\\"VirtualHost\\\": \\\"myQueue\\\" } \"]},\"396\":{\"h\":\"2.2.1 映射项到模型类\",\"t\":[\"var info = new RabbitMQConfig(); Configuration.Bind(RabbitMQConfig.RabbitMQ, info); //or var info2 = new RabbitMQConfig(); //Bind方法的参数可以增加配置绑定到私有类上 Configuration.GetSection(RabbitMQConfig.RabbitMQ).Bind(info2); //or var info3 = Configuration.GetSection(RabbitMQConfig.RabbitMQ).Get<RabbitMQConfig>(); \"]},\"397\":{\"h\":\"2.2.2 注入模型类\",\"t\":[\"//startup配置 services.Configure<RabbitMQConfig>(Configuration.GetSection(RabbitMQConfig.RabbitMQ)); \"]},\"398\":{\"h\":\"2.2.3 使用\",\"t\":[\"private readonly RabbitMQConfig _rabbitMQConfig; public WeatherForecastController(IOptions<RabbitMQConfig> options) { _rabbitMQConfig = options.Value; } \",\"程序启动后再修改 JSON 配置文件所做的更改获取不到。 若要读取在应用启动后的更改，请使用 IOptionsSnapshot\"]},\"399\":{\"h\":\"过滤器基本使用\",\"t\":[\"过滤器就是对目标对象(程序集、类、方法等)进行扩展，使得在运行时可以获取到被扩展对象的额外的信息，通过额外的信息来影响目标对象的行为。\",\"ASP.NET Core 有以下五种Filter 可以使用：\",\"img\",\"中间件和过滤器的功能类似，区别就是关注点是不同的，所要处理的职责不同，过滤器是更贴合业务的，关注应用程序本身（可以对你请求的数据或者返回的结果进行处理操作，中间件是没有这个能力的），中间件都可以在请求之前和之后进行操作。请求完成之后传递给下一个请求。\",\"netcore和net相比增加了资源过滤器和结果过滤器，并且异常过滤器和方法过滤器设置了异步的使用方法，如果同步过滤器和异步的都设置了，那么只会调用异步的方法。\",\"示例代码环境：vs2022、.Net6\",\"源码地址：https://github.com/azrng/dotnet-sample/tree/main/src/MVCFilter\"]},\"400\":{\"h\":\"作用范围\",\"t\":[\"[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = true, Inherited = true)] public class ApiResultFilterAttribute : Attribute, IAsyncResultFilter \",\"第一行指定了该特性作用的范围，AttributeTargets就是目标对象，是一个枚举\",\"//指定可以对它们应用属性的应用程序元素。 [ComVisible(true)] [Flags] public enum AttributeTargets { //可以对程序集应用属性。 Assembly = 1, //可以对模块应用属性。 Module = 2, //可以对类应用属性。 Class = 4, //可以对结构应用属性，即值类型。 Struct = 8, Enum = 16, //可以对构造函数应用属性。 Constructor = 32, //可以对方法应用属性。 Method = 64, //可以对属性 (Property) 应用属性 (Attribute)。 Property = 128, //可以对字段应用属性。 Field = 256, //可以对事件应用属性。 Event = 512, //可以对接口应用属性。 Interface = 1024, //可以对参数应用属性。 Parameter = 2048, //可以对委托应用属性。 Delegate = 4096, //可以对返回值应用属性。 ReturnValue = 8192, //可以对泛型参数应用属性。 GenericParameter = 16384, //可以对任何应用程序元素应用属性。 All = 32767 } \",\"下面过滤器的顺序就是执行的顺序\",\"img\",\"以下示例引用nuget包\",\"<PackageReference Include=\\\"AzrngCommon\\\" Version=\\\"1.2.5\\\" /> \",\"如果过滤器中使用了构造函数注入，那么我们需要使用到ServiceFilter\",\"//[Authorization_01Filter]//无参数过滤器 [ServiceFilter(typeof(Authorization_01Filter))] [HttpGet] public IEnumerable<WeatherForecast> Get01() \",\"并且这个过滤器也需要进行注册，例如注册这个授权过滤器\",\"//授权过滤器 builder.Services.AddScoped(typeof(Authorization_01Filter)); \"]},\"401\":{\"h\":\"Authorization Filter\",\"t\":[\"Authorization是五种Filter中优先级最高的，通常用于验证Request合不合法、用户身份是否被认证(然后授权等)、。\",\"权限控制器过滤器，可以通过Authonization可以实现复杂的权限角色认证、登录授权等操作实现事例如下：\",\"[AttributeUsage(AttributeTargets.Class)] public class Authorization_01Filter : Attribute, IAuthorizationFilter { /* 权限控制器过滤器，可以通过Authonization可以实现复杂的权限角色认证、登录授权等操作实现事例 猜想：是否到底这一步的都应该是已经经过身份认证的用户，这边只是做一些授权操作，还是说这个地方做认证以及授权操作 */ private readonly ILogger<Authorization_01Filter> _logger; public Authorization_01Filter(ILogger<Authorization_01Filter> logger) { _logger = logger; } public void OnAuthorization(AuthorizationFilterContext context) { _logger.LogInformation(\\\"进入授权过滤器\\\"); /* 实现效果：自定义身份验证，当用户调用登录接口的时候，会查询数据库并且将该用户信息存入redis(格式Wie：key：随机数，value：用户信息)，然后返回随机数 当请求其它接口的时候，验证请求头中是否传输了Authorization，如果没传直接返回401 当传输了token，那么就拿着值去查询redis，然后验证通过后将用户信息存入上下文的User中 */ if (!context.HttpContext.Request.Headers.Any(t => t.Key == \\\"Authorization\\\")) context.Result = new JsonResult(new ResultModel { Code = \\\"401\\\", Message = \\\"认证失败\\\" }); var token = context.HttpContext.Request.Headers.FirstOrDefault(t => t.Key == \\\"Authorization\\\").Value; if (token != \\\"123456\\\")//这里替换查询redis操作 { context.Result = new JsonResult(new ResultModel { Code = \\\"401\\\", Message = \\\"认证失败\\\" }); } //如果查询到上面传输的信息，那么就存储到上下文中 var claims = new[] { new Claim(ClaimTypes.NameIdentifier, \\\"zyp\\\"), new Claim(ClaimTypes.Role, \\\"admin\\\"), }; var claimIdentities = new List<ClaimsIdentity> { new ClaimsIdentity(claims) }; context.HttpContext.User.AddIdentities(claimIdentities); } } \",\"异步方案\",\"[AttributeUsage(AttributeTargets.Class)] public class Authorization_01AsyncFilter : Attribute, IAsyncAuthorizationFilter { private readonly ILogger<Authorization_01Filter> _logger; public Authorization_01AsyncFilter(ILogger<Authorization_01Filter> logger) { _logger = logger; } public Task OnAuthorizationAsync(AuthorizationFilterContext context) { _logger.LogInformation(\\\"进入授权过滤器\\\"); if (!context.HttpContext.Request.Headers.Any(t => t.Key == \\\"Authorization\\\")) context.Result = new JsonResult(new ResultModel { Code = \\\"401\\\", Message = \\\"认证失败\\\" }); var token = context.HttpContext.Request.Headers.First(t => t.Key == \\\"Authorization\\\").Value; if (token != \\\"123456\\\")//这里替换查询redis操作 { context.Result = new JsonResult(new ResultModel { Code = \\\"401\\\", Message = \\\"认证失败\\\" }); } //如果查询到上面传输的信息，那么就存储到上下文中 var claims = new[] { new Claim(ClaimTypes.NameIdentifier, \\\"zyp\\\"), new Claim(ClaimTypes.Role, \\\"admin\\\"), }; var claimIdentities = new List<ClaimsIdentity> { new ClaimsIdentity(claims) }; context.HttpContext.User.AddIdentities(claimIdentities); return Task.CompletedTask; } } \",\"使用示例\",\"/// <summary> /// 获取天气（同步验证IAuthorizationFilter） /// </summary> /// <returns></returns> //[Authorization_01Filter]//无参数过滤器 [ServiceFilter(typeof(Authorization_01Filter))] [HttpGet] public IEnumerable<WeatherForecast> Get01() { const string str = @\\\" 业务逻辑开始处理 处... 理... 中... 业务逻辑结束处理\\\"; _logger.LogInformation(str); return (new WeatherForecast()).GetList(); } \"]},\"402\":{\"h\":\"Resource Filter\",\"t\":[\"Resource是第二优先，会在Authorization之后，Model Binding之前执行。通常会是需要对Model加工处理才用也适合做缓存,因为是在创建控制器实例之前执行的。\",\"同步方案\",\"[AttributeUsage(AttributeTargets.All)] public class Resource_01Filter : Attribute, IResourceFilter { /* 使用场景：可以做缓存：比如说第一次请求先到OnResourceExecuting，根据请求地址或者参数去判断是否已经保存数据，没有发现往下走创建Action实例， 然后在OnResourceExecuted进行存储，然后再一次访问这个接口时候，OnResourceExecuting直接就赋值Result，所以就不再创建控制器实例 具体示例：根据请求地址做接口缓存、根据请求参数做缓存处理 */ /// <summary> /// 模拟数据源 /// </summary> private static readonly Dictionary<string, object> _dictionaryCache = new Dictionary<string, object>(); private readonly ILogger<Result_01Filter> _logger; public Resource_01Filter(ILogger<Result_01Filter> logger) { _logger = logger; } /// <summary> /// 在接口被调用前触发 /// </summary> /// <param name=\\\"context\\\"></param> public void OnResourceExecuting(ResourceExecutingContext context) { _logger.LogInformation(\\\"同步 OnResourceExecuting\\\"); if (context.HttpContext.Request.Method == \\\"Get\\\") { //定义一个key存储缓存 string key = context.HttpContext.Request.Path.ToString(); if (_dictionaryCache.Any(t => t.Key == key)) { //如果缓存有内容就直接返回 context.Result = _dictionaryCache[key] as IActionResult; //Result 短路器 } //如果没有缓存就接着运行，然后再executed里面设置缓存 } else { context.HttpContext.Request.EnableBuffering();//可以实现多次读取Body var sr = new StreamReader(context.HttpContext.Request.Body); string data = sr.ReadToEndAsync().GetAwaiter().GetResult();//不允许同步读取 if (data == null)//body取不到数据直接跳过，一般情况下不会出现该情况 return; //获取到body的请求字符串 _logger.LogInformation(\\\"data=\\\" + data); //根据请求字符串去做处理解析是否做缓存，本次示例是获取到请求的boyd里面的ID，如果存在id，那么就做资源缓存(id作为key)， var jobject = JObject.Parse(data); if (jobject[\\\"id\\\"]?.ToString() != null) { string key = context.HttpContext.Request.Path.ToString() + jobject[\\\"id\\\"].ToString(); if (_dictionaryCache.Any(t => t.Key == key)) { //如果缓存有内容就直接返回 context.Result = _dictionaryCache[key] as IActionResult; //Result 短路器 } } context.HttpContext.Request.Body.Seek(0, SeekOrigin.Begin);//读取到Body后，重新设置Stream到起始位置 context.HttpContext.Request.Body.Position = 0; } } /// <summary> /// 在接口调用结束时候触发 /// </summary> /// <param name=\\\"context\\\"></param> public void OnResourceExecuted(ResourceExecutedContext context) { _logger.LogInformation(\\\"异步 OnResourceExecuted\\\"); //把数据存储缓存 Key---path; 实际情况这里缓存应该加上过期时间 if (context.HttpContext.Request.Method == \\\"Get\\\") { string key = context.HttpContext.Request.Path.ToString();//将请求路径作为缓存的key _dictionaryCache[key] = context.Result;//刚才接口返回的值 } else { context.HttpContext.Request.Body.Seek(0, SeekOrigin.Begin);//读取到Body后，重新设置Stream到起始位置 context.HttpContext.Request.Body.Position = 0; var sr = new StreamReader(context.HttpContext.Request.Body); string data = sr.ReadToEndAsync().GetAwaiter().GetResult();//不允许同步读取 if (data == null) return; var jobject = JObject.Parse(data); if (jobject[\\\"id\\\"]?.ToString() != null) { string key = context.HttpContext.Request.Path.ToString() + jobject[\\\"id\\\"].ToString(); _dictionaryCache[key] = context.Result;//刚才接口返回的值 } } } } \",\"异步方案\",\"[AttributeUsage(AttributeTargets.All)] public class Resource_02Filter : Attribute, IAsyncResourceFilter { } \"]},\"403\":{\"h\":\"Action Filter\",\"t\":[\"最常使用的Filter，请求和返回都会经过它。跟Resource Filter很类似，但并不会经过Model Binding,因为进这个过滤器的时候已经走过了Model Binding。\",\"可以通过ActionFilter拦截每个执行方法进行一系列的操作，比如：执行日志、性能监控、数据校验参数验证或加密、权限控制等一系列操作。使用Action Filter 需要实现IActionFilter 抽象接口，IActionFilter 接口要求实现OnActionExecuted 和OnActionExecuting 方法\",\"同步方案：\",\"[AttributeUsage(AttributeTargets.All)] public class Action_01Filter : Attribute, IActionFilter { private readonly ILogger<Action_01Filter> _logger; public Action_01Filter(ILogger<Action_01Filter> logger) { _logger = logger; } public void OnActionExecuting(ActionExecutingContext context) { _logger.LogInformation(\\\"action 执行前\\\"); //如果标记有允许所有，不做处理那么就跳过 if (context.ActionDescriptor.EndpointMetadata.Any(t => t.GetType() == typeof(AllowAnonymousAttribute))) { return; } //记录请求来的一些参数 var queryUrl = context.HttpContext.Request.Query; string path = context.HttpContext.Request.Path; string name = context.HttpContext.User.Identity?.Name; _logger.LogInformation($\\\"Action信息 queryUrl:{queryUrl},path:{path},name:{name}\\\"); } public void OnActionExecuted(ActionExecutedContext context) { _logger.LogInformation(\\\"action 执行后\\\"); } } \",\"异步过滤器\",\"[AttributeUsage(AttributeTargets.All)] public class Action_02Filter : Attribute, IAsyncActionFilter { private readonly ILogger<Action_01Filter> _logger; public Action_02Filter(ILogger<Action_01Filter> logger) { _logger = logger; } public async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) { _logger.LogInformation(\\\"action 执行前\\\"); //如果标记有允许所有，不做处理那么就跳过 if (context.ActionDescriptor.EndpointMetadata.Any(t => t.GetType() == typeof(AllowAnonymousAttribute))) { return; } //记录请求来的一些参数 var queryUrl = context.HttpContext.Request.Query; string path = context.HttpContext.Request.Path; string name = context.HttpContext.User.Identity?.Name; _logger.LogInformation($\\\"Action信息 queryUrl:{queryUrl},path:{path},name:{name}\\\"); await next(); _logger.LogInformation(\\\"action 执行后\\\"); } } \",\"此方法不同于ActionFilter的是，它能够处理异步操作，同时它是在模型绑定完成之后执行，只有一个异步方法OnActionExecutionAsync。\",\"另外还可以继承自ActionFilterAttribute，这东西有点类似于Action过滤器和Result的合并使用\",\"[AttributeUsage(AttributeTargets.All)] public class Action_03Filter : ActionFilterAttribute { private readonly ILogger<Action_01Filter> _logger; public Action_03Filter(ILogger<Action_01Filter> logger) { _logger = logger; } public override void OnActionExecuted(ActionExecutedContext context) { _logger.LogInformation(\\\"action 执行后 OnActionExecuted 1 \\\"); base.OnActionExecuted(context); } public override void OnActionExecuting(ActionExecutingContext context) { _logger.LogInformation(\\\"action 执行前 OnActionExecuting 2 \\\"); base.OnActionExecuting(context); } public override async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next) { //会进该方法 //OnActionExecuted OnActionExecuting方法我理解是应该在这里根据条件判断去调用上面的方法 _logger.LogInformation(\\\"action 执行前 OnActionExecutionAsync 3 \\\"); await next(); _logger.LogInformation(\\\"action 执行前 OnActionExecutionAsync 4 \\\"); } public override void OnResultExecuted(ResultExecutedContext context) { _logger.LogInformation(\\\"result 执行后 OnResultExecuted 5 \\\"); base.OnResultExecuted(context); } public override void OnResultExecuting(ResultExecutingContext context) { _logger.LogInformation(\\\"result 执行前 OnResultExecuting 6 \\\"); base.OnResultExecuting(context); } public override async Task OnResultExecutionAsync(ResultExecutingContext context, ResultExecutionDelegate next) { //会进该方法 //OnResultExecuted、OnResultExecuting方法并不会直接触发，而是根据条件在当前方法中执行调用的 _logger.LogInformation(\\\"result 执行前 OnResultExecutionAsync 7 \\\"); await next(); _logger.LogInformation(\\\"result 执行后 OnResultExecutionAsync 8 \\\"); //返回 //context.Result = new ObjectResult(\\\"\\\"); //await base.OnResultExecutionAsync(context, next); } } \"]},\"404\":{\"h\":\"Exception Filter\",\"t\":[\"异常处理的Filter，可以进行全局的异常日志收集等操作，使用该过滤器需要实现IExceptionFilter接口，实现这个接口需要实现OnException方法，当系统发送未捕捉的异常时候就会触发这个方法，这个方法里面包含了一个ExceptionContext异常上下文，其中包含了具体的异常信息，然后就需要使用日志组件等记录下这个异常。\",\"注意：只能捕捉Action异常，如果是要做全局异常捕捉还是建议去使用中间件。\",\"首先自定义一个异常过滤器，然后实现IExceptionFilter接口\",\"实现方法，先判断异常是否处理过，如果没有处理过那么就进行处理。\",\"同步方案：\",\"public class Exception_01Filter : Attribute, IExceptionFilter { private readonly ILogger<Exception_01Filter> _logger; private readonly IModelMetadataProvider _modelMetadataProvider; public Exception_01Filter(ILogger<Exception_01Filter> logger, IModelMetadataProvider modelMetadataProvider) { _logger = logger; _modelMetadataProvider = modelMetadataProvider; } public void OnException(ExceptionContext context) { if (context.ExceptionHandled) return; //日志收集 _logger.LogError(context.Exception, \\\"出错\\\" + context?.Exception?.Message ?? \\\"异常\\\"); var response = new ResultModel<string>() { Message = $\\\"处理失败 {context.Exception.Message}\\\", IsSuccess = false, Code = \\\"500\\\" }; //或者 context.Result = new JsonResult(response); //如果是mvc使用，那么就可以返回错误界面 //var result = new ViewResult { ViewName = \\\"~/Views/Shared/Error.cshtml\\\" }; //result.ViewData = new Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary(_modelMetadataProvider, context.ModelState); //context.Result = result;//断路器只要一对result赋值就不继续往后赋值了 context.ExceptionHandled = true; } } \",\"异步方案\",\"public class Exception_02Filter : Attribute, IAsyncExceptionFilter { private readonly ILogger<Exception_02Filter> _logger; //构造注入日志组件 public Exception_02Filter(ILogger<Exception_02Filter> logger) { _logger = logger; } public async Task OnExceptionAsync(ExceptionContext context) { if (context.ExceptionHandled) return; //日志收集 _logger.LogError(context.Exception, context?.Exception?.Message ?? \\\"异常\\\"); var response = new ResultModel<string>() { Message = $\\\"处理失败 {context.Exception.Message}\\\", IsSuccess = false, Code = \\\"500\\\" }; var setting = new JsonSerializerSettings { ContractResolver = new Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver()//指定序列化方式为驼峰式 }; await context.HttpContext.Response.WriteAsync(JsonConvert.SerializeObject(response, setting)); //或者 //context.Result = new JsonResult(response);//断路器只要一对result赋值就不继续往后赋值了 context.ExceptionHandled = true; } } \"]},\"405\":{\"h\":\"Result Filter\",\"t\":[\"当Action完成后，最终会经过的Filter，可以对结果进行格式化、大小写转换、双语系统等一系列操作。比如根据返回的结果不同，渲染不同的视图(中文视图或者英文视图)等\",\"同步方案：\",\"[AttributeUsage(AttributeTargets.All)] public class Result_01Filter : Attribute, IResultFilter { private readonly IModelMetadataProvider _modelMetadataProvider; public Result_01Filter(IModelMetadataProvider modelMetadataProvider) { _modelMetadataProvider = modelMetadataProvider; } /// <summary> /// 在result执行前发生(在view 呈现前)，使用场景：设置客户端缓存，服务器端压缩 /// </summary> /// <param name=\\\"context\\\"></param> public void OnResultExecuting(ResultExecutingContext context) { // 在结果执行之前调用的一系列操作 mvc中使用根据不同的参数等返回不同的页面 //var param = context.HttpContext.Request.Query[\\\"View\\\"]; //if (param == \\\"1\\\")//显示中文系统 //{ // var result = new ViewResult { ViewName = \\\"~/Views/Test/Chinese.cshtml\\\" }; // result.ViewData = new Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary(_modelMetadataProvider, context.ModelState); // context.Result = result; //} //设置响应头 //context.HttpContext.Response.Headers.Add(\\\"\\\", new string[] { \\\"\\\" }); Console.WriteLine(\\\"OnResultExecuting\\\"); context.Result = new JsonResult(ResultModel<object>.Success((ObjectResult)context.Result)); } /// <summary> /// 渲染视图后执行,当Action完成后 /// </summary> /// <param name=\\\"context\\\"></param> public void OnResultExecuted(ResultExecutedContext context) { var path = context.HttpContext.Request.Path; // 在结果执行之后调用的操作... Console.WriteLine($\\\"OnResultExecuted Path：{path}\\\"); //注意：目前我并不知道找个方法适合做什么，并且context.Result方法也是只读的。 } } \",\"异步方案\",\"[AttributeUsage(AttributeTargets.All)] public class Result_02Filter : Attribute, IAsyncResultFilter { public async Task OnResultExecutionAsync(ResultExecutingContext context, ResultExecutionDelegate next) { context.Result = new JsonResult(ResultModel<object>.Success((ObjectResult)context.Result)); Console.WriteLine(\\\"之前\\\"); await next(); Console.WriteLine(\\\"之后\\\"); } } \",\"同样的这里我们还可以继承自ResultFilterAttribute。\",\"过滤器的注册方式有：Action、Controller、全局\"]},\"406\":{\"h\":\"Action注册方式\",\"t\":[\"局部注册方式，针对控制器中的某个方法上标注特性的方式进行注册，代码如下\",\"[AuthonizationFilter()] public IActionResult Index() { return View(); } \"]},\"407\":{\"h\":\"Controller注册方式\",\"t\":[\"如果使用action方式，如果一个控制器中的好几个action方式都使用了这个过滤器，那么我们就需要一个一个action进行标注注册，所以我们直接使用控制器注册方式，必须是无参数的构造函数\",\"[AuthonizationFilter()] public class FirstController : Controller { private ILogger<FirstController> _logger; public FirstController(ILogger<FirstController> logger) { _logger = logger; } public IActionResult Index() { return View(); } } \",\"如果要传递参数，需要通过TyperFilter标记在方法和控制器\",\"[TypeFilter(typeof(customerAttribute))]\"]},\"408\":{\"h\":\"全局注册方式\",\"t\":[\"比如说我们需要全局系统中的异常或者收集操作日志等，需要全局注册一个Exception来实现，就不需要一个一个action或者控制器进行注册\",\"services.AddMvc(options => { //options.Filters.Add(typeof(CustomerExceptionFilter)); options.Filters.Add<CustomerExceptionFilter>(); options.Filters.Add(new AuthorizeFilter()); options.Filters.Add(typeof(AuthorizeFilter)); }) \"]},\"409\":{\"h\":\"ServiceFilterAttribute\",\"t\":[\"将要用的ActionFilter本身注册为一个Service注册到DI容器中(必须)。通过ServiceFilter从容器中检索你的ActionFile，并且注入到需要的地方\",\"//步骤一 services.AddScoped(typeof(CustomResourceFilterAttribute)); //步骤二 在action上使用serviceFilter [ServiceFilter(typeof(FilterInjectAttribute))] [ServiceFilter(typeof(FilterInjectAttribute),IsReusable = true)] \",\"ServiceFilter有一个属性叫IsReusable。从字面意思也很好理解，就是是否可重用的意思。显而易见如果这个属性设置为True，那么多个请求就会复用这个ActionFilter,但是并不是真正的单例\",\"可以支持无参构造函数，可以支持依赖注入，但是必须注册服务\"]},\"410\":{\"h\":\"TypeFilterAttribute\",\"t\":[\"使用TypeFilterAttribute注入的ActionFilter并不从DI容器中查找，而是直接通过Microsoft.Extensions.DependencyInjection.ObjectFactory来实例化对象。所以我们的FilterInjectAttribute不需要提前注册到DI容器中。\",\"[TypeFilter(typeof(MyExceptionFilter))] [TypeFilter(typeof(MyExceptionFilter), Arguments = new object[] { \\\"aa\\\", \\\"bb\\\" })] \",\"Arguments参数是TypeFilterAttribute跟ServiceFilterAttribute的一个重要区别，ServiceFilterAttribute并没有这属性。Arguments类型为object数组。通过TypeFilterAttribute实例化的ActionFilter，如果它的构造器中的参数类型在DI容器中找不到，会继续在Arguments参数列表里按顺序获取。\",\"可以支持无参构造函数，可以支持依赖注入\",\"ASP.NET Core 中的过滤器：https://docs.microsoft.com/zh-cn/aspnet/core/mvc/controllers/filters?view=aspnetcore-6.0\"]},\"411\":{\"h\":\"过滤器常见操作\"},\"412\":{\"h\":\"目的\",\"t\":[\"通过异常过滤器实现业务异常捕捉\"]},\"413\":{\"h\":\"操作\",\"t\":[\"引用辅助包\",\"<PackageReference Include=\\\"AzrngCommon\\\" Version=\\\"1.2.6\\\" /> \",\"主要使用该包内的返回类\",\"过滤器\",\"/// <summary> /// 自定义全局异常过滤器 /// </summary> public class CustomExceptionFilter : IExceptionFilter { private readonly IWebHostEnvironment _hostEnvironment; private readonly ILogger<CustomExceptionFilter> _logger; public CustomExceptionFilter(ILogger<CustomExceptionFilter> logger, IWebHostEnvironment hostEnvironment) { _logger = logger; _hostEnvironment = hostEnvironment; } public void OnException(ExceptionContext context) { //如果异常没有处理 if (context.ExceptionHandled) return; var result = new ResultModel { Code = \\\"500\\\", IsSuccess = false, Message = \\\"系统异常，请联系管理员\\\", }; _logger.LogError($\\\"异常 path:{context.Result} message:{context.Exception.Message} StackTrace:{context.Exception.StackTrace}\\\"); if (_hostEnvironment.IsDevelopment()) { result.Message += \\\",\\\" + context.Exception.Message; } context.Result = new JsonResult(result); //异常已处理 context.ExceptionHandled = true; } } \",\"全局使用\",\"builder.Services.AddControllers(option => { //添加全局过滤器 option.Filters.Add(typeof(CustomExceptionFilter)); }); \"]},\"414\":{\"h\":\"总结\",\"t\":[\"不能拦截处理Action以外的错误。\"]},\"415\":{\"h\":\"目的\",\"t\":[\"通过返回过滤器实现返回类的处理，在最外层包一层公共返回类。\"]},\"416\":{\"h\":\"操作\",\"t\":[\"准备\",\"里面的ResultModel使用的是nuget的东西\",\"<PackageReference Include=\\\"AzrngCommon\\\" Version=\\\"1.2.4\\\" /> \",\"返回过滤器处理\",\"/// <summary> /// 方案一：返回类处理(让返回结果外面包一层公共业务返回类) /// </summary> [AttributeUsage(AttributeTargets.All)] public class CustomResultPackFilter : Attribute, IResultFilter { public void OnResultExecuted(ResultExecutedContext context) { } public void OnResultExecuting(ResultExecutingContext context) { if (context.Result is EmptyResult) { context.Result = new OkObjectResult(new ResultModel { Code = \\\"200\\\", IsSuccess = true, Message = \\\"成功\\\" }); return; } context.Result = new OkObjectResult(new ResultModel<object> { Code = \\\"200\\\", IsSuccess = true, Data = ((ObjectResult)context.Result).Value }); } } /// <summary> /// 方案二：返回类处理(让返回结果外面包一层公共业务返回类增加返回code和消息) /// </summary> [AttributeUsage(AttributeTargets.All)] public class CustomResultPack2Filter : ActionFilterAttribute { public class ReturnDataFilterAttribute : ActionFilterAttribute { public override void OnActionExecuted(ActionExecutedContext context) { if (context.Result is EmptyResult) { context.Result = new OkObjectResult(new ResultModel { Code = \\\"200\\\", IsSuccess = true, Message = \\\"成功\\\" }); return; } context.Result = new OkObjectResult(new ResultModel<object> { Code = \\\"200\\\", IsSuccess = true, Data = ((ObjectResult)context.Result).Value }); } } } \",\"注册全局过滤器\",\"services.AddControllers(options => { option.Filters.Add(typeof(CustomResultPackFilter)); }); \"]},\"417\":{\"h\":\"目的\",\"t\":[\"通过Action过滤器实现对一些常见的请求入参的校验。比如我们的接口中经常有患者ID字段，我们可以全局对该字段进行限制。\"]},\"418\":{\"h\":\"操作\",\"t\":[\"编写过滤器\",\"/// <summary> /// 对模型验证过滤器 /// </summary> public class ModelValidationFilter : ActionFilterAttribute { //实现目的：比如接口中的常用参数有患者ID，我们可以写过滤器统一校验患者ID是否有效 private readonly ILogger<ModelValidationFilter> _logger; public ModelValidationFilter(ILogger<ModelValidationFilter> logger) { _logger = logger; } public override void OnActionExecuting(ActionExecutingContext context) { if (!context.ModelState.IsValid) { context.Result = new BadRequestObjectResult(context.ModelState); } if (context.HttpContext.Request.Query.TryGetValue(\\\"patientId\\\", out StringValues patientIdValue)) { if (int.TryParse(patientIdValue.FirstOrDefault(), out int patientId)) { if (patientId == 0) { _logger.LogWarning($\\\"{context.HttpContext.Request.Path} 患者标识无效\\\"); context.Result = new BadRequestObjectResult(\\\"患者标识无效\\\"); } } } if (context.HttpContext.Request.Method == \\\"POST\\\" || context.HttpContext.Request.Method == \\\"PUT\\\") { context.HttpContext.Request.Body.Seek(0, SeekOrigin.Begin);//读取到Body后，重新设置Stream到起始位置 var stream = new StreamReader(context.HttpContext.Request.Body); string body = stream.ReadToEndAsync().GetAwaiter().GetResult(); JObject jobject = JObject.Parse(body); if (int.TryParse(jobject[\\\"patientId\\\"].ToString(), out int patientId)) { if (patientId == 0) { _logger.LogWarning($\\\"{context.HttpContext.Request.Path} 患者标识无效\\\"); context.Result = new BadRequestObjectResult(\\\"患者标识无效\\\"); } } context.HttpContext.Request.Body.Seek(0, SeekOrigin.Begin);//读取到Body后，重新设置Stream到起始位置 } } } \",\"全局使用\",\"builder.Services.AddControllers(option => { //添加全局过滤器 option.Filters.Add(typeof(ModelValidationFilter)); }); \",\"因为设计到读取请求体的操作，还需要借助中间件来设置可以重复读取流\",\"//读取请求体设置可以重复读取 app.Use((context, next) => { context.Request.EnableBuffering(); return next(context); }); \"]},\"419\":{\"h\":\"总结\",\"t\":[\"可以实现URL、请求体中参数校验。\"]},\"420\":{\"h\":\"目的\",\"t\":[\"通过Action过滤器实现对请求日志的记录。\"]},\"421\":{\"h\":\"操作\",\"t\":[\"编写过滤器\",\"/// <summary> /// 日志记录 /// </summary> public class RequestParamRecordFilter : ActionFilterAttribute { //目的：记录请求的消息 private readonly ILogger<ModelValidationFilter> _logger; public RequestParamRecordFilter(ILogger<ModelValidationFilter> logger) { _logger = logger; } public override void OnActionExecuting(ActionExecutingContext context) { //设置可以多次读取 context.HttpContext.Request.Body.Seek(0, SeekOrigin.Begin);//读取到Body后，重新设置Stream到起始位置 var sr = new StreamReader(context.HttpContext.Request.Body); var data = sr.ReadToEndAsync().GetAwaiter().GetResult(); _logger.LogInformation( $\\\"Time:{DateTime.Now:yyyy-MM-dd HH:mm:ss} requestUrl:{context.HttpContext.Request.Path} Method:{context.HttpContext.Request.Method} requestBodyData: \\\" + data); //读取到Body后，重新设置Stream到起始位置 context.HttpContext.Request.Body.Seek(0, SeekOrigin.Begin); _logger.LogInformation($\\\"Host: {context.HttpContext.Request.Host.Host}\\\"); _logger.LogInformation($\\\"Client IP: {context.HttpContext.Connection.RemoteIpAddress}\\\"); } } \",\"全局使用\",\"builder.Services.AddControllers(option => { //添加全局过滤器 option.Filters.Add(typeof(RequestParamRecordFilter)); }); \",\"因为涉及到读取请求体的操作，还需要借助中间件来设置可以重复读取流\",\"//读取请求体设置可以重复读取 app.Use((context, next) => { context.Request.EnableBuffering(); return next(context); }); \",\"输出结果：\",\"info: NetCoreFilterSample.CustomFilter.ModelValidationFilter[0] Time:2022-02-19 00:07:04 requestUrl:/api/WeatherForecast/AddPatientEat Method:POST requestBodyData: { \\\"patientId\\\": 10, \\\"eat\\\": \\\"string222\\\" } info: NetCoreFilterSample.CustomFilter.ModelValidationFilter[0] Host: localhost info: NetCoreFilterSample.CustomFilter.ModelValidationFilter[0] Client IP: ::1 \"]},\"422\":{\"h\":\"总结\",\"t\":[\"可以实现请求地址入参等参数记录。\"]},\"423\":{\"h\":\"目的\",\"t\":[\"通过请求地址作为key，搭配内存缓存，实现幂等性校验。\"]},\"424\":{\"h\":\"操作\",\"t\":[\"因为本文使用到了IMemoryCache，所以还需要注入该服务\",\"builder.Services.AddMemoryCache(); \",\"编写过滤器\",\"/// <summary> /// 接口幂等性处理 /// </summary> public class IdempotentAttributeFilter : Attribute, IActionFilter { private readonly IMemoryCache _cache; public IdempotentAttributeFilter(IMemoryCache cache) { _cache = cache; } public void OnActionExecuted(ActionExecutedContext context) { } public void OnActionExecuting(ActionExecutingContext context) { //可以根据用户ID或者请求地址标识当前用户 var path = context.HttpContext.Request.Path; var userId = \\\"123456\\\";//这个可以从上下文中获取 var key = \\\"IdempotencyKey\\\" + userId + path.ToString(); var method = context.HttpContext.Request.Method; if (method == \\\"POST\\\" || method == \\\"put\\\") { //直接限制了该接口不允许一个用户在2秒内请求多次 var cacheData = _cache.Get<string>(key); if (cacheData != null) { throw new ParameterException(\\\"不允许重复提交\\\"); } _cache.Set(key, \\\"1\\\", TimeSpan.FromSeconds(2)); } } } \",\"更合适的写法是，使用redis(可以不怕服务部署多个节点)，然后根据用户标识作为key，并且也要检验当前请求体的内容是不是也上一次也一样。\",\"全局使用\",\"builder.Services.AddControllers(option => { //添加全局过滤器 option.Filters.Add(typeof(IdempotentAttributeFilter)); }); \"]},\"425\":{\"h\":\"总结\",\"t\":[\"将不带幂等性的接口(Post、Put)，增加限制一个用户在2秒内只能请求1次，防止重复提交。\"]},\"426\":{\"h\":\"目的\",\"t\":[\"限制每一个ip客户端在指定的时间范围内请求的数量，防止恶意攻击。\"]},\"427\":{\"h\":\"操作\",\"t\":[\"增加请求限制过滤器\",\"/// <summary> /// 根据ip接口请求限制 /// </summary> [AttributeUsage(AttributeTargets.Method)] public class RequestLimitFilter : ActionFilterAttribute { private string Name { get; } private int LimitRequestNum { get; set; } private int Seconds { get; set; } private MemoryCache _cache { get; } = new MemoryCache(new MemoryCacheOptions()); /// <summary> /// 请求限制属性 /// </summary> /// <param name=\\\"name\\\">key</param> /// <param name=\\\"limitRequestNum\\\">限制的次数</param> /// <param name=\\\"seconds\\\">限制时间</param> public RequestLimitFilter(string name, int limitRequestNum = 5, int seconds = 10) { Name = name; LimitRequestNum = limitRequestNum; Seconds = seconds; } public override void OnActionExecuting(ActionExecutingContext context) { var ipAddress = context.HttpContext.Request.HttpContext.Connection.RemoteIpAddress; var key = $\\\"{Name}-{ipAddress}\\\"; var prevReqCount = _cache.Get<int>(key); if (prevReqCount >= LimitRequestNum) { context.Result = new ContentResult { Content = $\\\"Request limit is exceeded. Try again in {Seconds} seconds.\\\", }; context.HttpContext.Response.StatusCode = (int)HttpStatusCode.TooManyRequests; } else { _cache.Set(key, (prevReqCount + 1), TimeSpan.FromSeconds(Seconds)); } } } \",\"使用的时候只需要在接口头部增加\",\"[HttpGet] [RequestLimit(\\\"DataGet\\\", 5, 30)] public IEnumerable<WeatherForecast> Get() { ... } \"]},\"428\":{\"h\":\"总结\",\"t\":[\"通过借助内存缓存来存储，实现请求限制。\",\"上面只是列举了一部分使用场景，有些场景或许使用中间件处理更加合适，这个需要自行判断。还可以做匿名化处理等。\"]},\"429\":{\"h\":\"控制反转\"},\"430\":{\"h\":\"导航\",\"t\":[\"共享充电宝\",\"IOC思想 \",\"复杂的依赖关系\",\"IOC定义\",\"Spring中的IOC \",\"IOC与工厂模式\",\"IOC容器的技术剖析\",\"结语\",\"参考\",\"本节是摘自《Spring Boot 实战纪实》的第13篇,感谢您的阅读,预计阅读时长3min。\",\"将对象自身从其依赖关系的管理中解放出来，将这个管理工作的责任交给第三方来完成。\"]},\"431\":{\"h\":\"共享充电宝\",\"t\":[\"img\"]},\"432\":{\"h\":\"尴尬往事\",\"t\":[\"手机早已成为我们生活中不可或缺的一部分,但是伴随而来的便是手机的充电问题。\",\"大概在2011年,笔者和同学买好了回学校的火车票。因为是晚上6点半的火车票,所以笔者就想时间还早,正好自己也要去商场买点东西,便和同学约定晚上六点在火车站候车室会合,并将车票交给了同学。\",\"下午五点半的时候,笔者便早早地出发前往火车站,大概二十分钟左右便到了车站。到站之后正好赶上排队检票(一般都是提前一个小时检票),但是尴尬地一幕发生了——手机没电了。眼看就要轮到我检票了,可车票还在我同学那里,我同学已经进站,在二楼候车室。我礼貌地请检票员想跳过我,先去检查后面的票,同时也在想办法联系我的同学。\",\"我也想起来借一个电话或者打公用电话,但无奈没有记住同学的手机号码...眼看着排队检票的队伍都进站了,检查通道也开始准备关闭了。\",\"这时多么希望自己带了充电线或者充电宝啊...\",\"就在这时,我那同学突然从楼上冲下来,把车票给我,化解了这场尴尬。\",\"因为手机没电且未带手机充电线出现的糗事其实不止这一件,我想生活中很多人都有过这样的经历。\",\"时隔多年,可能很多同学会觉得这个很荒唐,为啥不用共享充电宝呢。因为,那个时候没有。\"]},\"433\":{\"h\":\"共享充电宝\",\"t\":[\"尽管这样的事情屡见不鲜,但是依然没有引起手机厂商的重视(直到今天手机电池的续航能力依然是个问题),通常我们在出门前会做一些准备避免这种事情的发生:\",\"多带一个手机\",\"换一个大容量电池\",\"带上电话本(以备不时之需)\",\"带上充电宝\",\"但是以上几种方式依然是成本较高的,所以通常手机没电你大概率只能通过以下但是充电:\",\"找路人借充电宝\",\"在饭店吃饭时，让店家帮忙充电\",\"去住酒店充电 ...\",\"另外,因为手机厂商不同,充电线接口不一致,你可能还需要再去买一根充电线...\",\"而以上这些不仅你的增加时间和金钱成本,还会增加新沟通成本。\",\"所以,共享充电宝应用而生,他为用户提供了各种型号的充电线和电源,用户只扫码支付即可使用。\",\"共享充电宝的模式就是把充电过程中的所有设备和过程打包成一个盒子(类似于容器),这一点和软件架构的IOC思想不谋而合。\"]},\"434\":{\"h\":\"IOC思想\",\"t\":[\"IOC(Inversion of Control) 控制反转是一种面对对象编程的设计原则，用于降低代码之间的耦合度。其基本思想是借助第三方实现具有依赖关系的对象之间的解耦。\"]},\"435\":{\"h\":\"对象之间复杂的依赖关系\",\"t\":[\"在面向对象方法设计的软件系统中，它的底层实现都是由N个对象组成的，所有的对象通过彼此的合作，最终实现系统的业务逻辑。\",\"Note: 关于面向对象请查看《类和实例通俗理解》\",\"img\",\"上图中的齿轮组，它拥有多个独立的齿轮，这些齿轮相互啮合在一起，协同工作，共同完成某项任务。我们可以看到，在这样的齿轮组中，如果有一个齿轮出了问题，就可能会影响到整个齿轮组的正常运转。\",\"齿轮组中齿轮之间的啮合关系,与软件系统中对象之间的耦合关系非常相似。对象之间的耦合关系是无法避免的，也是必要的，这是协同工作的基础。\",\"但是随着软件系统的规模越来越庞大，对象之间的依赖关系也越来越复杂，经常会出现对象之间的多重依赖性关系。\",\"img\",\"为了解决对象之间的耦合度过高的问题，软件专家提出了IOC理论，用来实现对象之间的“解耦”，目前这个理论已经被成功地应用到实践当中。\"]},\"436\":{\"h\":\"IOC的定义\",\"t\":[\"控制反转（Inversion of Control，缩写为IoC），是面向对象编程中的一种设计原则，可以用来减低计算机代码之间的耦合度。(百度百科)\",\"既然名字叫做控制反转,我们来看看，控制什么，反转什么。\",\"早在2004年，Martin Fowler就提出了“哪些方面的控制被反转了？”这个问题。他总结出是依赖对象的获得被反转了，因为大多数应用程序都是由两个或是更多的类通过彼此的合作来实现企业逻辑，这使得每个对象都需要获取与其合作的对象（也就是它所依赖的对象）的引用。如果这个获取过程要靠自身实现，那么这将导致代码高度耦合并且难以维护和调试\",\"控制什么：控制对象的创建和销毁，指的是控制对象的生命周期。\",\"反转什么：之前我们创建一个对象都是new，现在有了IOC了，指的是把对象的控制权交给了IOC容器。\",\"IOC借助于“第三方”实现具有依赖关系的对象之间的解耦，如下图：\",\"img\",\"由于引进了中间位置的“第三方”，也就是IOC容器，使得A、B、C、D这4个对象没有了耦合关系，齿轮之间的传动全部依靠“第三方”了，全部对象的控制权全部上缴给“第三方”IOC容器，所以，IOC容器成了整个系统的关键核心，它起到了一种类似“粘合剂”的作用，把系统中的所有对象粘合在一起发挥作用，如果没有这个“粘合剂”，对象与对象之间会彼此失去联系，这就是有人把IOC容器比喻成“粘合剂”的由来。\",\"为了更加直观的理解,我们可以把IOC拿掉,这时候，A、B、C、D这4个对象之间已经没有了耦合关系，彼此毫无联系，这样的话，当你在实现A的时候，根本无须再去考虑B、C和D了，对象之间的依赖关系已经降低到了最低程度。\",\"img\",\"最后,我们用一张图把IOC引入的过程串起来。\",\"img\",\"Note: IoC可以认为是一种全新的设计模式，但是理论和时间成熟相对较晚，并没有包含在GoF中。详细查看百度百科-控制反转\"]},\"437\":{\"h\":\"Spring中的IOC\"},\"438\":{\"h\":\"IOC与工厂模式\",\"t\":[\"IOC的实现主要用到了3种技术：工厂模式、XML解析、反射。\",\"工厂模式在Java/C#中开发中应用广泛。\",\"在工厂模式中，我们不会将对象创建逻辑暴露给客户端，使用一个通用的接口引用新创建的对象。\",\"img\",\"工厂模式的实现比较简单\",\"客户端(client)需要一个product对象,无须通过new关键字直接创建,而是向工厂(factory)发起一个获取新对象请求。这个过程中,客户端(client)只需要提供自己需要的对象的类型相关信息即可。\",\"工厂(factory) 实例化一个具体的product对象,然后返回给到客户端(client)新的product对象(转换为抽象类类型)。\",\"客户端使用product对象而不用了解具体的实现细节。\",\"按照惯例,这里还是给个简单demo\"]},\"439\":{\"h\":\"步骤1\",\"t\":[\"创建一个接口 Shape.java\",\"public interface Shape { void draw(); } \"]},\"440\":{\"h\":\"步骤2\",\"t\":[\"创建实现相同接口的具体类。如下所示几个类\",\"Rectangle.java\",\"public class Rectangle implements Shape { @Override public void draw() { System.out.println(\\\"Inside Rectangle::draw() method.\\\"); } } \",\"Square.java\",\"public class Square implements Shape { @Override public void draw() { System.out.println(\\\"Inside Square::draw() method.\\\"); } } \",\"Circle.java\",\"public class Circle implements Shape { @Override public void draw() { System.out.println(\\\"Inside Circle::draw() method.\\\"); } } \"]},\"441\":{\"h\":\"步骤3\",\"t\":[\"创建工厂根据给定的信息生成具体类的对象 ShapeFactory.java\",\"public class ShapeFactory { //use getShape method to get object of type shape public Shape getShape(String shapeType){ if(shapeType == null){ return null; } if(shapeType.equalsIgnoreCase(\\\"CIRCLE\\\")){ return new Circle(); } else if(shapeType.equalsIgnoreCase(\\\"RECTANGLE\\\")){ return new Rectangle(); } else if(shapeType.equalsIgnoreCase(\\\"SQUARE\\\")){ return new Square(); } return null; } } \"]},\"442\":{\"h\":\"步骤4\",\"t\":[\"使用工厂通过传递类型等信息来获取具体类的对象。 FactoryPatternDemo.java\",\"public class FactoryPatternDemo { public static void main(String[] args) { ShapeFactory shapeFactory = new ShapeFactory(); //get an object of Circle and call its draw method. Shape shape1 = shapeFactory.getShape(\\\"CIRCLE\\\"); //call draw method of Circle shape1.draw(); //get an object of Rectangle and call its draw method. Shape shape2 = shapeFactory.getShape(\\\"RECTANGLE\\\"); //call draw method of Rectangle shape2.draw(); //get an object of Square and call its draw method. Shape shape3 = shapeFactory.getShape(\\\"SQUARE\\\"); //call draw method of circle shape3.draw(); } } \",\"引入工厂模式的优势很明显: 增加新的shape(如 triangle 三角形),我们也不用修改现有的架构,而只需要在ShapeFactory中通过(if else/switch)进行扩展。\",\"上面这种方式工厂实现的方式原理是根据传入的某个参数获取一个对象，一旦我们新增一个shape类型,就修改ShapeFactory 类。这种方式不够灵活,并违背了软件设计的开闭原则。\",\"利用反射，每当新增接口子类，无需去修改工厂类代码就可以很方便的进行接口子类扩容。\",\"Note: Java的反射（reflection）机制是指在程序的运行状态中，可以构造任意一个类的对象，可以了解任意一个对象所属的类，可以了解任意一个类的成员变量和方法，可以调用任意一个对象的属性和方法。这种动态获取程序信息以及动态调用对象的功能称为Java语言的反射机制。(百度百科-JAVA反射机制)\",\"我们只需要对ShapeFactory进行改造,如下:\",\"public class ShapeFactory { private ShapeFactory(){} public static Shape getInstance(String className){ Shape shape = null; try { shape = (Shape) Class.forName(className).newInstance(); } catch (ClassNotFoundException e) { e.printStackTrace(); } catch (IllegalAccessException e) { e.printStackTrace(); } catch (InstantiationException e) { e.printStackTrace(); } return shape; } } \",\"这里我们将类名作为参数传递给工厂,工厂利用反射机制找到对应的对象,并创建实例。\",\"什么?? 你说没有看到反射的影子。那就进到Class.forName去看看吧。\",\"@CallerSensitive public static Class<?> forName(String className) throws ClassNotFoundException { Class<?> caller = Reflection.getCallerClass(); return forName0(className, true, ClassLoader.getClassLoader(caller), caller); } \",\"然后,我们再来个测试用例\",\"@Test void testReflectFactory() { /** * get circle instance * */ Shape shapeCircle = ShapeFactory .getInstance(\\\"com.zhike.blogmanager.Shape.Circle\\\"); shapeCircle.draw(); /** * get rectangle instance * */ Shape shapeRectangle = ShapeFactory .getInstance(\\\"com.zhike.blogmanager.Shape.Rectangle\\\"); shapeRectangle.draw(); /** * get square instance * */ Shape shapeSquare = ShapeFactory .getInstance(\\\"com.zhike.blogmanager.Shape.Square\\\"); shapeSquare.draw(); } \",\"看看执行结果\",\"2021-10-04 22:41:50.514 === [main] INFO com.zhike.blogwebapi.BlogWebapiApplicationTests - Started BlogWebapiApplicationTests in 6.359 seconds (JVM running for 8.133) Inside Circle::draw() method. Inside Rectangle::draw() method. Inside Square::draw() method. Process finished with exit code 0 \",\"从结果来看,进一步验证了我们设想。\",\"到了这里,有读者就会问了。你讲的工厂和IOC有啥关系呢? 还记得前面我提过:IOC的实现主要用到了3种技术：工厂模式、XML解析、反射。\"]},\"443\":{\"h\":\"Spring IOC 技术剖析\",\"t\":[\"IOC容器其实就是一个大工厂，它用来管理我们所有的对象以及依赖关系。\",\"原理就是通过 Java 的反射技术来实现的！通过反射我们可以获取类的所有信息(成员变量、类名等等等)！\",\"再通过配置文件(xml)或者注解来描述类与类之间的关系\",\"我们就可以通过这些配置信息和反射技术来构建出对应的对象和依赖关系了！\",\"我们简单来看看实际Spring IOC容器是怎么实现对象的创建和依赖的：\",\"img\",\"根据Bean配置信息在容器内部创建Bean定义注册表\",\"根据注册表加载、实例化bean、建立Bean与Bean之间的依赖关系\",\"将这些准备就绪的Bean放到Map缓存池中，等待应用程序调用\",\"(1) BeanFactory\",\"Spring Bean 的创建是典型的工厂模式，这一系列的 Bean 工厂，也即 IOC 容器为开发者管理对象间的依赖关系提供了很多便利和基础服务，在 Spring 中有许多的 IOC 容器的实现供用户选择和使用， 其相互关系如下：\",\"img\",\"BeanFactory 作为最顶层的一个接口类，它定义了IOC容器的基本功能规范。\",\"最基本的IOC容器接口BeanFactory\",\"public interface BeanFactory { /** 对 FactoryBean 的转义定义，因为如果使用 bean 的名字检索 FactoryBean 得到的对象是工厂生成的对象， 如果需要得到工厂本身，需要转义 */ String FACTORY_BEAN_PREFIX = \\\"&\\\"; /** *根据 bean 的名字，在 IOC 容器中获取 bean 实例 */ Object getBean(String name) throws BeansException; /** * 根据 bean 的名字和 Class 类型来得到 bean 实例，增加了类型安全验证机制。 */ <T> T getBean(String name, Class<T> requiredType) throws BeansException; /** * 根据名字和参数 在IOC容器中获取bean的实例 */ Object getBean(String name, Object... args) throws BeansException; /** * 根据名字和参数 在IOC容器中获取bean的实例 */ <T> T getBean(Class<T> requiredType) throws BeansException; <T> T getBean(Class<T> requiredType, Object... args) throws BeansException; <T> ObjectProvider<T> getBeanProvider(Class<T> requiredType); <T> ObjectProvider<T> getBeanProvider(ResolvableType requiredType); /** *提供对 bean 的检索，看看是否在 IOC 容器有这个名字的 bean */ boolean containsBean(String name); /** *根据 bean 名字得到 bean 实例，并同时判断这个 bean 是不是单例 */ boolean isSingleton(String name) throws NoSuchBeanDefinitionException; boolean isPrototype(String name) throws NoSuchBeanDefinitionException; boolean isTypeMatch(String name, ResolvableType typeToMatch) throws NoSuchBeanDefinitionException; boolean isTypeMatch(String name, Class<?> typeToMatch) throws NoSuchBeanDefinitionException; /** * 得到 bean 实例的 Class 类型 */ @Nullable Class<?> getType(String name) throws NoSuchBeanDefinitionException; @Nullable Class<?> getType(String name, boolean allowFactoryBeanInit) throws NoSuchBeanDefinitionException; /** *得到 bean 的别名，如果根据别名检索，那么其原名也会被检索出来 */ String[] getAliases(String name); } \",\"在 BeanFactory 里只对 IOC 容器的基本行为作了定义，根本不关心你的 Bean 是如何定义怎样加载的。 正如我们只关心工厂里得到什么的产品对象，至于工厂是怎么生产这些对象的，这个基本的接口不关心。\",\"而要知道工厂是如何产生对象的，我们需要看具体的IOC容器实现，Spring 提供了许多 IOC 容器的实现。比如XmlBeanFactory，ClasspathXmlApplicationContext等。\",\"(2) BeanDefinition\",\"SpringIOC 容器管理了我们定义的各种 Bean 对象及其相互的关系，Bean 对象在 Spring 实现中是以 BeanDefinition来描述的，其继承体系如下：\",\"img\",\"Spring IOC的实现过程比较复杂,相关的源码可以研究一下。感兴趣的同学可以下载源码查阅spring-framework源码\"]},\"444\":{\"h\":\"结语\",\"t\":[\"IOC不是什么技术，而是一种设计思想。\",\"在Spring 开发中，由IOC容器控制对象的创建、初始化、销毁等。这也就实现了对象控制权的反转，由我们对对象的控制转变成了Spring IOC 对对象的控制。\",\"以上只是笔者个人对Spring IOC的一点看法和思考,欢迎大家共同探讨和文明交流。\"]},\"445\":{\"h\":\"参考\",\"t\":[\"Spring中IOC的理解》\",\"百度百科-控制反转\",\"Factory Pattern\",\"工厂模式\",\"Spring IoC 最全源码详解之bean实例化过程\",\"Spring5源码分析(一) IOC和Spring 核心容器体系结构\",\"Spring IOC知识点总结\",\"来自戎码一生： https://www.cnblogs.com/lucky_hu/p/15378130.html\"]},\"446\":{\"h\":\"Logger\",\"t\":[\"这是asp.net core中内置的一个通用日志接口组件。\",\"日志级别说明：每一个日志都有指定的日志级别值，日志级别判断指示严重性或重要性。使用日志等级可以很好的过滤想要的日志，记录日志记录问题的同时，甚至为我们提供非常详细的日志信息。\",\"LogLevel 严重性：Trace < Debug < Information < Warning < Error < Critical < None。\",\"日志级别\",\"常用场景\",\"Trace = 0\",\"记录一些对程序员调试问题有帮助的信息, 其中可能包含一些敏感信息, 所以应该避免在 生产环境中启用Trace日志，因此不应该用于生产环境。默认应禁用。\",\"Debug = 1\",\"记录一些在开发和调试阶段有用的短时变 量(Short-term usefulness), 所以除非为了临时排除生产环境的 故障，开发人员应该尽量避免在生产环境中启用Debug日志，默认情况下这是最详细的日志。\",\"Information = 2\",\"记录跟踪应用程序的一些流程, 例如，记录当前api请求的url。\",\"Warning = 3\",\"记录应用程序中发生出现错误或其它导致程序停止的流程异常信息。 这些信息中可能包含错误消息或者错误产生的条件, 可供后续调查，例如, 文件未找到\",\"Error = 4\",\"记录应用程序中某个操作产生的错误和异常信息。这些消息应该指明当前活动或操作（比如当前的 HTTP 请求），而不是应用程序范围的故障。\",\"Critical = 5\",\"记录一些需要立刻修复，急需被关注的问题，应当记录关键级别的日志。例如数据丢失，磁盘空间不足等。\",\"注意：日志配置通常取决于 appsettings {Environment}.json 文件的 Logging配置节，支持多个LogPrivider、过滤日志、定制特定种类的日志收集级别。\",\"配置文件\",\"{ \\\"Logging\\\": { \\\"Debug\\\": { \\\"LogLevel\\\": { \\\"Default\\\": \\\"Information\\\" } }, \\\"Console\\\": { \\\"LogLevel\\\": { \\\"Microsoft.AspNetCore.Mvc.Razor.Internal\\\": \\\"Warning\\\", \\\"Microsoft.AspNetCore.Mvc.Razor.Razor\\\": \\\"Debug\\\", \\\"Microsoft.AspNetCore.Mvc.Razor\\\": \\\"Error\\\", \\\"Default\\\": \\\"Information\\\" } }, \\\"LogLevel\\\": { \\\"Microsoft\\\": \\\"Warning\\\", \\\"Microsoft.AspNetCore.Hosting.Diagnostics\\\": \\\"Information\\\", // 提供给第三方调用API日志 \\\"Microsoft.Hosting.Lifetime\\\": \\\"Information\\\", \\\"Microsoft.EntityFrameworkCore.Database.Command\\\": \\\"Information\\\", //数据库操作sql日志 \\\"System.Net.Http.HttpClient\\\": \\\"Information\\\", // 应用内部发起的Http请求日志 \\\"Default\\\": \\\"Warning\\\" // 除以上日志之外，记录Warning+级别日志 } } } \",\"此 JSON 将创建 6 条筛选规则：Debug中1 条用于调试提供程序，Console中 4 条用于控制台提供程序，最后一条LogLevel 用于所有提供程序。 创建 ILogger 对象时，为每个提供程序选择一个规则。\",\"在类库中使用需要先引用指定组件using Microsoft.Extensions.Logging;\",\"配置文件中进行配置\",\"{ \\\"Logging\\\": { \\\"LogLevel\\\": { \\\"Default\\\": \\\"Debug\\\", //大于等于这个级别的才会被输出 \\\"Microsoft\\\": \\\"Warning\\\", //类别适用于以 \\\"Microsoft\\\" 开头的所有类别 \\\"Microsoft.Hosting.Lifetime\\\": \\\"Information\\\" //类别比 \\\"Microsoft\\\" 类别更具体，因此 \\\"Microsoft.Hosting.Lifetime\\\" 类别在日志级别“Information”和更高级别记录。 } } } \",\"代码中使用：\",\"private readonly ILogger<HomeController> _logger; public HomeController(ILogger<HomeController> logger) { _logger = logger; } [HttpGet] public string Get() { /* 日志配置通常由 appsettings {Environment}.json 文件的 Logging 部分提供 */ _logger.LogTrace(\\\"0 Trace日志\\\"); _logger.LogDebug(\\\"1 我是一个Debug日志\\\"); _logger.LogInformation(\\\"2 我是一个info日志\\\"); _logger.LogWarning(\\\"3 我是一个警告日志\\\"); _logger.LogError(\\\"4 我是一个错误日志\\\"); _logger.LogCritical(\\\"5 LogCritical 立刻修复\\\"); return \\\"成功\\\"; } \",\"运行查看输出效果\",\"img\"]},\"447\":{\"h\":\"Log4net\",\"t\":[\"log4net是.Net下一个非常优秀的开源日志记录组件。log4net记录日志的功能非常强大。它可以将日志分不同的等级，以不同的格式，输出到不同的媒介。包括到追加文本文件，sqlite数据库，mysql数据库和windows日志中。\",\"引用组件\",\" <PackageReference Include=\\\"log4net\\\" Version=\\\"2.0.12\\\" /> <PackageReference Include=\\\"Microsoft.Extensions.Logging.Log4Net.AspNetCore\\\" Version=\\\"5.0.1\\\" /> \",\"引入log4net中间件\",\" public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .ConfigureLogging(logging => { logging.AddFilter(\\\"System\\\", LogLevel.Warning);//忽略掉System开头命名空间下的组件产生的warn级别的日志 logging.AddFilter(\\\"Microsoft\\\", LogLevel.Warning);//忽略掉Microsoft开头命名空间下的组件产生的warn级别的日志 logging.AddLog4Net();//引用组件 }) .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }); \",\"日志级别配置\",\"{ \\\"Logging\\\": { \\\"LogLevel\\\": { \\\"Default\\\": \\\"Debug\\\",//日志级别配置 \\\"Microsoft\\\": \\\"Warning\\\", \\\"Microsoft.Hosting.Lifetime\\\": \\\"Information\\\" } } } \",\"使用\",\"private readonly ILogger<WeatherForecastController> _logger; public WeatherForecastController(ILogger<WeatherForecastController> logger) { _logger = logger; } [HttpGet] public string Get() { //默认是输出在控制台上 _logger.LogTrace(\\\"trace\\\"); _logger.LogDebug(\\\"debug\\\"); _logger.LogInformation(\\\"info\\\"); _logger.LogWarning(\\\"warn\\\"); _logger.LogError(\\\"error\\\"); _logger.LogCritical(\\\"critical\\\"); return \\\"成功\\\"; } \",\"输出结果\",\"img\",\"log4net.Config文件\",\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?> <log4net> <!-- 错误 Error.log--> <appender name=\\\"MYLOG\\\" type=\\\"log4net.Appender.RollingFileAppender\\\"> <!--目录路径，可以是相对路径或绝对路径--> <param name=\\\"File\\\" value=\\\"SysLog\\\\\\\\\\\"/> <!--文件名，按日期生成文件夹--> <param name=\\\"DatePattern\\\" value=\\\"/yyyy-MM-dd/&quot;Error.log&quot;\\\"/> <!--追加到文件--> <appendToFile value=\\\"true\\\"/> <!--创建日志文件的方式，可选值：Date[日期],文件大小[Size],混合[Composite]--> <rollingStyle value=\\\"Composite\\\"/> <!--写到一个文件--> <staticLogFileName value=\\\"false\\\"/> <!--单个文件大小。单位:KB|MB|GB--> <maximumFileSize value=\\\"200MB\\\"/> <!--最多保留的文件数，设为\\\"-1\\\"则不限--> <maxSizeRollBackups value=\\\"-1\\\"/> <!--日志格式--> <layout type=\\\"log4net.Layout.PatternLayout\\\"> <!--<conversionPattern value=\\\"%message\\\"/>--> <param name=\\\"ConversionPattern\\\" value=\\\"----------------%n%d [%t] %-5p %c [%x] %L %nMSG:%m%n\\\" /> </layout> <!--该配置要输出的日志最低级别和最高级别--> <!--<filter type=\\\"log4net.Filter.LevelRangeFilter\\\"> <param name=\\\"LevelMin\\\" value=\\\"INFO\\\" /> <param name=\\\"LevelMax\\\" value=\\\"ERROR\\\" /> </filter>--> </appender> <!-- levels: OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL --> <root> <priority value=\\\"ALL\\\"/> <level value=\\\"ALL\\\"/> <appender-ref ref=\\\"MYLOG\\\" /> </root> </log4net> \"]},\"448\":{\"h\":\"LogDashboard\",\"t\":[\"LogDashboard是在github上开源的aspnetcore项目, 它旨在帮助开发人员排查项目运行中出现错误时快速查看日志排查问题。\",\"官网地址：https://doc.logdashboard.net/\",\"GitHub：https://github.com/realLiangshiwei/LogDashboard\",\"支持的日志组件：nlog、log4net、serilog\",\"支持的数据源：txt、数据库\",\"这里使用serilog做日志组件，数据源使用txt，认证访问使用简单的固定账号密码\"]},\"449\":{\"h\":\"程序\",\"t\":[\"本次事例使用的是ASP.NET Core Web API程序框架，版本是.net5\"]},\"450\":{\"h\":\"安装组件\"},\"451\":{\"h\":\"NLog\",\"t\":[\"NLog是适用于各种.NET平台（包括.NET标准）的灵活，免费的日志记录平台，支持数据库、文件、控制台。\"]},\"452\":{\"h\":\"2.1 引用nuget包\",\"t\":[\" <PackageReference Include=\\\"NLog\\\" Version=\\\"4.7.6\\\" /> <PackageReference Include=\\\"NLog.Web.AspNetCore\\\" Version=\\\"4.9.3\\\" /> \"]},\"453\":{\"h\":\"2.2 创建NLog配置文件\",\"t\":[\"在项目目录中新建一个xml文件的nlog.config\",\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?> <nlog xmlns=\\\"http://www.nlog-project.org/schemas/NLog.xsd\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"> <targets async=\\\"true\\\"> <target name=\\\"file\\\" xsi:type=\\\"File\\\" layout=\\\"${longdate} ${logger} ${message}${exception:format=ToString}\\\" fileName=\\\"${basedir}/logs/${date:format=yyyy-MM-dd}.txt\\\" keepFileOpen=\\\"true\\\" encoding=\\\"utf-8\\\" /> <target name=\\\"console\\\" xsi:type=\\\"Console\\\"> <attribute name=\\\"time\\\" layout=\\\"${date:format=yyyy-MM-dd HH\\\\:mm\\\\:ss.fff zzz}\\\" /> <attribute name=\\\"category\\\" layout=\\\"${logger}\\\" /> <attribute name=\\\"log_level\\\" layout=\\\"${level:lowerCase=true}\\\" /> <attribute name=\\\"message\\\" layout=\\\"${message}\\\" /> <attribute name=\\\"trace_id\\\" layout=\\\"${aspnet-TraceIdentifier:ignoreActivityId=true}\\\" /> <attribute name=\\\"user_id\\\" layout=\\\"${aspnet-user-identity}\\\" /> <!--取得该条日志生产者名字--> <attribute name=\\\"exception\\\" layout=\\\"${exception:format=tostring}\\\" /> </target> </targets> <rules> <logger name=\\\"*\\\" minlevel=\\\"Info\\\" writeTo=\\\"console\\\" ruleName=\\\"console\\\" /> <logger name=\\\"*\\\" minlevel=\\\"Debug\\\" writeTo=\\\"file\\\" /> </rules> </nlog> \"]},\"454\":{\"h\":\"2.3 Program中修改\",\"t\":[\"using Microsoft.AspNetCore.Hosting; using Microsoft.Extensions.Hosting; using Microsoft.Extensions.Logging; using NLog.Web; using System; namespace NlogDemo { public static class Program { public static void Main(string[] args) { var logger = NLogBuilder.ConfigureNLog(\\\"nlog.config\\\").GetCurrentClassLogger(); try { logger.Debug(\\\"init main\\\"); CreateHostBuilder(args).Build().Run(); } catch (Exception ex) { //NLog: catch setup errors logger.Error(ex, \\\"Stopped program because of exception\\\"); throw; } finally { NLog.LogManager.Shutdown(); } } public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }) .ConfigureLogging((_, loggerBuilder) => { loggerBuilder.ClearProviders(); loggerBuilder.SetMinimumLevel(LogLevel.Information); }) .UseNLog(); } } \"]},\"455\":{\"h\":\"2.4 配置日志级别\",\"t\":[\"{ \\\"Logging\\\": { \\\"LogLevel\\\": { \\\"Default\\\": \\\"Information\\\", \\\"Microsoft\\\": \\\"Warning\\\", \\\"Microsoft.Hosting.Lifetime\\\": \\\"Information\\\" } } } \"]},\"456\":{\"h\":\"2.5 控制器使用\",\"t\":[\" private readonly ILogger<HomeController> _logger; public HomeController(ILogger<HomeController> logger) { _logger = logger; _logger.LogDebug(1, \\\"NLog injected into HomeController\\\"); } [HttpGet] public string Get() { _logger.LogTrace(\\\"Trace\\\"); _logger.LogDebug(\\\"debug\\\"); _logger.LogInformation(\\\"info\\\"); _logger.LogWarning(\\\"warn\\\"); _logger.LogError(\\\"error\\\"); _logger.LogCritical(\\\"Critical\\\"); return default; } \",\"查看日志文件\",\"img\",\"https://github.com/NLog/NLog/wiki/Getting-started-with-ASP.NET-Core-5\"]},\"457\":{\"h\":\"Serilog\",\"t\":[\"与.NET的许多其他库一样，Serilog也提供对文件，控制台和 其他地方的诊断日志记录 。它易于设置，具有简洁的API，并且可以在最新的.NET平台之间移植。还在构建时考虑了强大的结构化事件数据。\",\"官网：https://serilog.net/\",\"GitHub：https://github.com/serilog/serilog\",\"Serilog 提供了对基本的结构化日志的功能支持\",\"Serilog.AspNetCore\",\"基于AspNetCore框架整合的Serilog日志记录程序包，包含了Serilog基本库和控制台日志的实现。\",\"Serilog.Extensions.Logging 包含了注入了Serilog的拓展方法。\",\"Serilog.Sinks.Async 实现了日志异步收集。\",\"Serilog.Sinks.Console 实现了控制台输出日志。\",\"Serilog.Sinks.Debug 实现了调试台输出日志。\",\"Serilog.Sinks.File 实现了文件输出日志。\",\"Serilog.Settings.Configuration 打通了serilog和Configuration，这样子就可以直接从appsettings.json中读取配置\",\"Serilog.Sinks.RollingFile 实现了对滚动文件的支持\",\"根据情况选择不同的组件\"]},\"458\":{\"h\":\"3.1 控制台输出\",\"t\":[\"public HomeController(ILogger<HomeController> logger) { using (var logConfig = new LoggerConfiguration().WriteTo.Console().CreateLogger()) { logConfig.Information(\\\"This is a test data.\\\"); }; _logger = logger; } \"]},\"459\":{\"h\":\"3.2 文件输出\",\"t\":[\"public HomeController() { var logger = new LoggerConfiguration().MinimumLevel.Debug().WriteTo .RollingFile(@\\\"e:\\\\log.txt\\\", retainedFileCountLimit: 7) .CreateLogger(); for (int i = 0; i < byte.MaxValue; i++) { logger.Information($\\\"log {i}\\\"); } } \"]},\"460\":{\"h\":\"3.3 控制台输出并且输出到文件\"},\"461\":{\"h\":\"3.3.1 安装Nuget包\",\"t\":[\"Serilog.AspNetCore\",\"Serilog.Extensions.Logging.File\"]},\"462\":{\"h\":\"3.3.2 方案一\",\"t\":[\"修改appsettings文件\",\"{ \\\"Serilog\\\": { \\\"WriteTo\\\": [ { \\\"Name\\\": \\\"RollingFile\\\", \\\"Args\\\": { \\\"pathFormat\\\": \\\"Serilogs\\\\\\\\{Date}.txt\\\", \\\"RestrictedToMinimumLevel\\\": \\\"Warning\\\", \\\"rollingInterval\\\": \\\"Day\\\", \\\"outputTemplate\\\": \\\"{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}\\\" } }, { \\\"Name\\\": \\\"Console\\\", \\\"Args\\\": {} } ], \\\"MinimumLevel\\\": { \\\"Default\\\": \\\"Debug\\\", \\\"Override\\\": { \\\"Microsoft\\\": \\\"Information\\\", \\\"System\\\": \\\"Information\\\" } } }, \\\"AllowedHosts\\\": \\\"*\\\" } \",\"修改Program方法\",\"public class Program { public static void Main(string[] args) { CreateHostBuilder(args).Build().Run(); } public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }).UseSerilog((hostingContext, loggerConfiguration) => { loggerConfiguration.ReadFrom.Configuration(hostingContext.Configuration) .Enrich.FromLogContext(); }); } \"]},\"463\":{\"h\":\"3.3.2 方案二\",\"t\":[\"修改Program方法\",\" public static class Program { public static void Main(string[] args) { Log.Logger = new LoggerConfiguration() .MinimumLevel.Information()//配置日志级别 .MinimumLevel.Override(\\\"Microsoft\\\", LogEventLevel.Information) .WriteTo.File(\\\"log.txt\\\", rollingInterval: RollingInterval.Day, rollOnFileSizeLimit: true) .Enrich.FromLogContext() .WriteTo.Console() .CreateLogger(); try { Log.Information(\\\"Starting web host\\\"); CreateHostBuilder(args).Build().Run(); } catch (Exception ex) { Log.Fatal(ex, \\\"Host terminated unexpectedly\\\"); } finally { Log.CloseAndFlush(); } } public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .UseSerilog() .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }); } \",\"注：这种方式不用修改appsettings.json\"]},\"464\":{\"h\":\"3.3.3 控制器中使用\"},\"465\":{\"h\":\"3.3.3.1 注入\",\"t\":[\"private readonly ILogger<WeatherForecastController> _logger; \"]},\"466\":{\"h\":\"3.3.3.2 输出\",\"t\":[\"_logger.LogTrace(\\\"0 Trace日志\\\"); _logger.LogDebug(\\\"1 我是一个调试日志\\\"); _logger.LogInformation(\\\"2 我是一个info日志\\\"); _logger.LogWarning(\\\"3 我是一个警告日志\\\"); _logger.LogError(\\\"4 我是一个错误日志\\\"); _logger.LogCritical(\\\"5 LogCritical 立刻修复\\\"); \",\"https://github.com.cnpmjs.org/serilog/serilog/wiki\"]},\"467\":{\"h\":\"概述\",\"t\":[\"MAUI 是 Xamarin.Forms 的进化（Xamarin.Forms 已经有6年历史了）。支持Model-View-ViewModel（MVVM）和Model-View-Update (MVU)等模式编写。\",\"官网：https://learn.microsoft.com/zh-cn/dotnet/maui/\",\"练习教程：https://learn.microsoft.com/zh-cn/training/browse/?expanded=dotnet&products=dotnet-maui\",\"https://www.syncfusion.com/maui-controls\",\"使用 .NET MAUI 为 iOS、Android、macOS 和 Windows 构建应用程序的动手实验手册：https://github.com/kinfey/dotnet-maui-workshop\",\"demo：https://github.com/MauiDeveloperOrg/MauiDemo\",\"dotnet界面大白博客园：https://www.cnblogs.com/jasondun/\",\"绑定相关的文章：https://www.cnblogs.com/jasondun/p/9215572.html\"]},\"468\":{\"h\":\"模型绑定\",\"t\":[\"模型绑定就是接收将来自HTTP请求的数据映射到模型的过程，这个过程是自动进行的。如果找不到模型属性的值，并不会报错，而是给该属性设置默认值。\",\"示例：比如我们有一个接口为\",\"[HttpGet(\\\"{id}\\\")] public ActionResult<Pet> GetById(int id, bool dogsOnly) \",\"这个时候你的请求为：http://localhost:5000/api/pets/2?DogsOnly=true\",\"路由系统选择该Action后，模型绑定会执行以下的步骤：\",\"查找 GetByID 的第一个参数，该参数是一个名为 id 的整数。\",\"查找 HTTP 请求中的可用源，并在路由数据中查找 id =“2”。\",\"将字符串“2”转换为整数 2。\",\"查找 GetByID 的下一个参数，该参数是一个名为 dogsOnly 的布尔值。\",\"查找源，并在查询字符串中查找“DogsOnly=true”。 名称匹配不区分大小写。\",\"将字符串“true”转换为布尔值 true。\",\"最后会调用GetById方法，参数Id为2，参数dogsOnly为true。\",\"默认情况下，模型绑定以键值对的形式从HTTP请求中的以下源中获取数据：\",\"表单域\",\"请求正文\",\"路由数据\",\"查询字符串参数\",\"上传的文件\",\"对于每个参数，按照顺序扫描源。也可以直接指定源\",\"[FromQuery] - 从查询字符串获取值。\",\"[FromRoute] - 从路由数据获取值。\",\"[FromForm] - 从发布表单字段中获取值。\",\"[FromBody] - 从请求正文获取值。\",\"[FromHeader] - 从 HTTP 标头获取值。\",\"示例：\",\"[HttpGet] public async Task<User> GetAsync([FromQuery]string id) [HttpGet] public async Task<User> GetAsync([FromRoute]string id) [HttpGet] public async Task<User> GetAsync([FromForm]string id) [HttpPost] public async Task<ActionResult<string>> AddAsync([FromBody]AddUserVm dto) public void OnGet([FromHeader(Name = \\\"Accept-Language\\\")] string language) \",\"也可以编写自定义的值提供程序，比如从cookie中获取会话状态，参考：https://docs.microsoft.com/zh-cn/aspnet/core/mvc/models/model-binding?view=aspnetcore-5.0#additional-sources\"]},\"469\":{\"h\":\"简单模型绑定\",\"t\":[\"例如：bool、byte、char、DateTime、DateTimeOffset、float、enum、guid、int、TimeSpan、Url、Version等\"]},\"470\":{\"h\":\"复杂类型\",\"t\":[\"使用复杂类型必须具有要绑定的公共默认构造函数和公共可写属性。进行模型绑定时候，将使用公共默认构造函数来实例化类。对于复杂类型的每个属性，模型绑定会查找名称模式 prefix.property_name 的源。 如果未找到，它将仅查找不含前缀的 properties_name。不过一般我们使用都是进行完全匹配，特殊需求才会做此操作。\",\"参考资料：https://docs.microsoft.com/zh-cn/aspnet/core/mvc/models/model-binding?view=aspnetcore-5.0#complex-types\"]},\"471\":{\"h\":\"内置自定义模型绑定\",\"t\":[\"通过ByteArrayModelBinder 可以实现将传输的base64编码字符串转换为字节数组。\",\"比如:\",\" [HttpPost] public void Post([FromForm] byte[] file, string filename) { var trustedFileName = Path.GetRandomFileName(); var filePath = Path.Combine(\\\"e://\\\", trustedFileName); if (System.IO.File.Exists(filePath)) { return; } System.IO.File.WriteAllBytes(filePath, file); } \",\"请求示例\",\"img\",\"接收结果\",\"img\"]},\"472\":{\"h\":\"自定义模型绑定\",\"t\":[\"示例场景：通过请求头传递后端自定义的一种token，通过自定义模型绑定将token解析后绑定到请求模型。\",\"参考资料：https://www.cnblogs.com/jyzhu/articles/8670536.html\",\"请求接口示例\",\" [HttpGet] public ActionResult GetToken(TokenModel dto) { return Ok(dto); } \",\"首先定义token模型类\",\" public class TokenModel { public int UserID { get; set; } public string UserName { get; set; } } \",\"自定义模型绑定器\",\" public class TokenModelBinder : IModelBinder { /// <summary> /// 请求里传递参数token /// </summary> /// <param name=\\\"bindingContext\\\"></param> /// <returns></returns> public Task BindModelAsync(ModelBindingContext bindingContext) { //参数必须包含token if (!(bindingContext.ActionContext.HttpContext.Request.Headers.ContainsKey(\\\"token\\\"))) return Task.CompletedTask; var token = bindingContext.ActionContext.HttpContext.Request.Headers[\\\"token\\\"]; //TODO 解析token var result = new TokenModel() { UserID = 111, UserName = \\\"azrng\\\", }; bindingContext.Result = ModelBindingResult.Success(result); return Task.CompletedTask; } } \",\"定义token框架绑定器\",\" public class TokenModelBinderProvider : IModelBinderProvider { public IModelBinder GetBinder(ModelBinderProviderContext context) { if (context == null) { throw new ArgumentNullException(nameof(context)); } if (context.Metadata.ModelType == typeof(TokenModel)) return new TokenModelBinder(); return null; } } \",\"启用绑定器\",\" services.AddControllers(options => { options.ModelBinderProviders.Insert(0, new TokenModelBinderProvider()); }); \",\"请求示例\",\"var client = new RestClient(\\\"http://localhost:5000/api/ModelVerify/GetToken\\\"); client.Timeout = -1; var request = new RestRequest(Method.GET); request.AddHeader(\\\"token\\\", \\\"123456\\\"); IRestResponse response = client.Execute(request); Console.WriteLine(response.Content); \",\"结果就是可以在GetToken方法参数获取到我们token的值。\",\"现在dotNetCore如果在控制器标识[ApiController],那么就会在进action前就会自动校验模型类绑定是否符合要求，如果不符合要求自动触发HTTP400错误响应。原文\",\"[ApiController] [Route(\\\"[controller]\\\")] public class WeatherForecastController : ControllerBase \"]},\"473\":{\"h\":\"验证特性\",\"t\":[\"通过验证特性可为属性增加验证规则。不仅仅有内置的验证特性，还可以实现自定义验证特性。\"]},\"474\":{\"h\":\"内置验证特性\",\"t\":[\"常用的有：必填、长度验证、数值范围、手机号码、邮箱，还可以使用正则验证\",\" public class AddModelVerify { [Display(Name = \\\"名称\\\"), Required(ErrorMessage = \\\"{0}不能为空\\\")]// 非空校验 [MinLength(6, ErrorMessage = \\\"名称不能小于6位\\\")] // 最小长度校验 [MaxLength(10, ErrorMessage = \\\"长度不超过10个\\\")] // 最大长度校验 public string UserName { get; set; } /// <summary> /// 密码 /// </summary> [Display(Name = \\\"密码\\\"), Required(ErrorMessage = \\\"{0}不能为空\\\")] [MinLength(6, ErrorMessage = \\\"密码必须大于6位\\\")] public string PassWord { get; set; } [Display(Name = \\\"工号\\\")] // 友好名称错误提示 [Required(ErrorMessage = \\\"{0}不能为空\\\")] [StringLength(10, MinimumLength = 1, ErrorMessage = \\\"{0}长度是{1}\\\")] public string EmployeeNo { get; set; } } public IActionResult VerifyPhone([RegularExpression(@\\\"^\\\\d{3}-\\\\d{3}-\\\\d{4}$\\\")] string phone) \",\"除了上面这些还有其他内置特性：https://docs.microsoft.com/zh-cn/aspnet/core/mvc/models/validation?view=aspnetcore-5.0#built-in-attributes\",\"请求地址传入空值，输出结果：HTTP错误400\",\"{ \\\"errors\\\": { \\\"PassWord\\\": [ \\\"密码不能为空\\\", \\\"密码必须大于6位\\\" ], \\\"UserName\\\": [ \\\"名称不能为空\\\", \\\"名称不能小于6位\\\" ], \\\"EmployeeNo\\\": [ \\\"工号不能为空\\\", \\\"工号长度是10\\\" ] }, \\\"type\\\": \\\"https://tools.ietf.org/html/rfc7231#section-6.5.1\\\", \\\"title\\\": \\\"One or more validation errors occurred.\\\", \\\"status\\\": 400, \\\"traceId\\\": \\\"00-d16b945b3e172a42bfe5b53d08f7487b-8d87c2ca238fdc4a-00\\\" } \",\"还有一个Remote特性感觉挺有意思，使用场景是比如在ID上标注远程特性，绑定时候自定验证ID是否有效\",\"[AcceptVerbs(\\\"GET\\\", \\\"POST\\\")] public IActionResult VerifyID(string id) { if (!_userService.VerifyID(id)) { return Json($\\\"对象未找到\\\"); } return Json(true); } \",\"模型类使用指向操作方法的[Remote]特性注释属性\",\"[Remote(action: \\\"VerifyID\\\", controller: \\\"Users\\\")] public string ID { get; set; } \",\"Remote其他用法：https://docs.microsoft.com/zh-cn/aspnet/core/mvc/models/validation?view=aspnetcore-5.0#additional-fields\"]},\"475\":{\"h\":\"自定义特性\",\"t\":[\"对于内置验证特性无法处理的情况，我们可以创建自定义验证特性。\",\"模拟场景：添加用户时候，设置名字和工号不能一致，出生日期必须小于当前时间\",\"输入模型类\",\" public class AddUserinfoVm { [Display(Name = \\\"名称\\\"), Required(ErrorMessage = \\\"{0}不能为空\\\")] [MinLength(6, ErrorMessage = \\\"名称不能小于6位\\\")] [MaxLength(10, ErrorMessage = \\\"长度不超过10个\\\")] public string UserName { get; set; } /// <summary> /// 密码 /// </summary> [Display(Name = \\\"密码\\\"), Required(ErrorMessage = \\\"{0}不能为空\\\")] [MinLength(6, ErrorMessage = \\\"密码必须大于6位\\\")] public string PassWord { get; set; } [Display(Name = \\\"工号\\\")] [Required(ErrorMessage = \\\"{0}不能为空\\\")] [StringLength(10, MinimumLength = 1, ErrorMessage = \\\"{0}长度是{1}\\\")] public string EmployeeNo { get; set; } /// <summary> /// 出生日期 /// </summary> public DateTime Birthday { get; set; } } \",\"方案一：通过添加AddUserVerifyAttribute来实现\",\" [AttributeUsage(AttributeTargets.All, AllowMultiple = false)] public class AddUserVerifyAttribute : ValidationAttribute { protected override ValidationResult IsValid(object value, ValidationContext validationContext) { var user = (AddUserinfoVm)validationContext.ObjectInstance;//user 变量表示 AddUserinfoVm 对象，其中包含表单提交中的数据 var date = (DateTime)value; if (date > DateTime.Now) { return new ValidationResult(\\\"出生日期不能大于当前时间\\\"); } if (user.UserName == user.EmployeeNo) { return new ValidationResult(\\\"名称和工号不能一样\\\"); } return ValidationResult.Success; } } \",\"使用方法\",\" [AddUserVerify] public DateTime Birthday { get; set; } \",\"方案二：模型类中继承IValidatableObject，并实现Validate方法\",\" /// <summary> /// 属性级别的自定义验证 /// </summary> /// <param name=\\\"validationContext\\\"></param> /// <returns></returns> public IEnumerable<ValidationResult> Validate(ValidationContext validationContext) { if (Birthday > DateTime.Now) { yield return new ValidationResult(\\\"出生日期不能大于当前时间\\\", new[] { nameof(Birthday) }); } if (UserName == EmployeeNo) { yield return new ValidationResult(\\\"名称和工号不能一样\\\", new[] { nameof(UserName), nameof(EmployeeNo) }); } } \",\"请求参数：\",\"{ \\\"userName\\\": \\\"string\\\", \\\"passWord\\\": \\\"string\\\", \\\"employeeNo\\\": \\\"string\\\", \\\"birthday\\\": \\\"2021-06-15T14:34:52.192Z\\\" } \",\"输出错误信息\",\"{ \\\"errors\\\": { \\\"Birthday\\\": [ \\\"出生日期不能大于当前时间\\\" ], \\\"UserName\\\": [ \\\"名称和工号不能一样\\\" ], \\\"EmployeeNo\\\": [ \\\"名称和工号不能一样\\\" ] }, \\\"type\\\": \\\"https://tools.ietf.org/html/rfc7231#section-6.5.1\\\", \\\"title\\\": \\\"One or more validation errors occurred.\\\", \\\"status\\\": 400, \\\"traceId\\\": \\\"00-18854d59f6b6fc48b5c4c6a6dbe3802c-ba23f594f351a64d-00\\\" } \"]},\"476\":{\"h\":\"ModelState.IsValid\",\"t\":[\"通过该方法可以实现对请求类验证是否满足要求并做出相应的响应。\",\"如果已经使用[ApiController]标识，那么该方法就不在需要。\",\" [HttpPost] public ActionResult Add([FromBody] AddModelVerify dto) { //对请求类进行验证特性 if (ModelState.IsValid)//指示该模型中是否有无效的值 { //对请求类的值做出修改 dto.UserName = \\\"azrng\\\"; if (!TryValidateModel(dto)) { //重新运行验证失败 return Ok(\\\"修改值后验证失败\\\"); } return Ok(\\\"验证成功\\\"); } else { ModelState.AddModelError(string.Empty, \\\"输入有误\\\"); } return Ok(\\\"\\\"); } \"]},\"477\":{\"h\":\"禁用验证\",\"t\":[\" /// <summary> /// 创建不会将任何字段标记为无效的 IObjectModelValidator 实现。 /// </summary> public class NullObjectModelValidator : IObjectModelValidator { public void Validate(ActionContext actionContext, ValidationStateDictionary validationState, string prefix, object model) { // 该方法故意为空 } } \",\"Startup.ConfigureServices中注入，以便替换依赖项注入容器中的默认 IObjectModelValidator 实现。\",\"services.AddSingleton<IObjectModelValidator, NullObjectModelValidator>(); \",\"增加ModelActionFiter过滤器\",\" public class ModelActionFiter : ActionFilterAttribute { public override void OnActionExecuted(ActionExecutedContext context) { } public override void OnActionExecuting(ActionExecutingContext context) { if (!context.ModelState.IsValid) { var errorResults = new List<ErrorResultDTO>(); foreach (var item in context.ModelState) { var result = new ErrorResultDTO { Field = item.Key, }; foreach (var error in item.Value.Errors) { if (!string.IsNullOrEmpty(result.Message)) { result.Message += '|'; } result.Message += error.ErrorMessage; } errorResults.Add(result); } context.Result = new BadRequestObjectResult(new { Code = StatusCodes.Status400BadRequest, Errors = errorResults }); } } public class ErrorResultDTO { /// <summary> /// 参数领域 /// </summary> public string Field { get; set; } /// <summary> /// 错误信息 /// </summary> public string Message { get; set; } } } \",\"参考文档：https://www.cnblogs.com/minskiter/p/11601873.html\",\"ConfigureServices中注册过滤器并禁用默认的自动模型验证\",\" services.AddControllers(options => { options.Filters.Add<ModelActionFiter>(); //注册过滤器 }).AddNewtonsoftJson().ConfigureApiBehaviorOptions(options => { //[ApiController] 默认自带有400模型验证，且优先级比较高，如果需要自定义模型验证，则需要先关闭默认的模型验证 options.SuppressModelStateInvalidFilter = true; }); \",\"ASP.NET Core MVC 使用 ModelStateInvalidFilter 操作筛选器来执行自定义验证。\",\"输出结果\",\"{ \\\"code\\\": 400, \\\"errors\\\": [ { \\\"field\\\": \\\"PassWord\\\", \\\"message\\\": \\\"密码不能为空|密码必须大于6位\\\" }, { \\\"field\\\": \\\"UserName\\\", \\\"message\\\": \\\"名称不能为空|名称不能小于6位\\\" } ] } \",\"模型绑定：https://docs.microsoft.com/zh-cn/aspnet/core/mvc/models/model-binding?view=aspnetcore-5.0\",\"禁用绑定源推理：https://docs.microsoft.com/zh-cn/aspnet/core/web-api/?view=aspnetcore-5.0#disable-inference-rules\",\"禁用验证：https://docs.microsoft.com/zh-cn/aspnet/core/mvc/models/validation?view=aspnetcore-5.0#disable-validation\",\"禁用自动400响应：https://docs.microsoft.com/zh-cn/aspnet/core/web-api/?view=aspnetcore-5.0#disable-automatic-400-response\"]},\"478\":{\"h\":\"swagger-Long精度丢失处理\",\"t\":[\"最近两天在给朋友讲解如何使用ajax调用接口时候，我发现我用swagger调用接口返回的long类型的数据最后几位都变成了0(例如：6974150586715898000)，本来是以为sqlite数据库不支持long类型导致我存进去的数据出了问题，然后我使用接口测试工具调用后发现数据是正确的。然后想到之前听前端同事说过他们没有long类型他们使用的字符串来处理的我返回的long类型，那么就思考如何去处理swagger这个问题吧。\",\"这个这两天才发现，说明我真的好久没有swagger调用接口了，虽然展示了，然后只是展示了。\",\"既然前端同事是通过字符串来处理的，那么我当然也可以转成字符串之后再返回出去。我是使用的Newtonsoft.Json做解析Json的，所以修改默认的解析\",\"首先我们需要修改Swashbuckle.AspNetCore.Newtonsoft包默认的解析处理DefaultContractResolver，针对long类型做特殊处理\",\"public class CustomContractResolver : DefaultContractResolver { /// <summary> /// 对长整型做处理 /// </summary> /// <param name=\\\"objectType\\\"></param> /// <returns></returns> protected override JsonConverter ResolveContractConverter(Type objectType) { if (objectType == typeof(long)) { return new JsonConverterLong(); } return base.ResolveContractConverter(objectType); } } \",\"JsonConverterLong内容如下\",\"/// <summary> /// Long类型Json序列化重写 /// 在js中传输会导致精度丢失，故而在序列化时转换成字符类型 /// </summary> public class JsonConverterLong : JsonConverter { /// <summary> /// 是否可以转换 /// </summary> /// <param name=\\\"objectType\\\"></param> /// <returns></returns> public override bool CanConvert(Type objectType) { return true; } /// <summary> /// 读json /// </summary> /// <param name=\\\"reader\\\"></param> /// <param name=\\\"objectType\\\"></param> /// <param name=\\\"existingValue\\\"></param> /// <param name=\\\"serializer\\\"></param> /// <returns></returns> public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) { if ((reader.ValueType == null || reader.ValueType == typeof(long?)) && reader.Value == null) { return null; } else { _ = long.TryParse(reader.Value != null ? reader.Value.ToString() : \\\"\\\", out long value); return value; } } /// <summary> /// 写json /// </summary> /// <param name=\\\"writer\\\"></param> /// <param name=\\\"value\\\"></param> /// <param name=\\\"serializer\\\"></param> public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) { if (value == null) writer.WriteValue(value); else writer.WriteValue(value.ToString()); } } \",\"在上面编写结束之后我们还需要进行配置也就是设置SerializerSettings\",\"services.AddControllers().AddNewtonsoftJson(options => { //时间格式化 options.SerializerSettings.DateFormatString = \\\"yyyy-MM-dd HH:mm:ss\\\"; //swagger显示枚举 options.SerializerSettings.Converters.Add(new StringEnumConverter()); // 设置自定义序列化 options.SerializerSettings.ContractResolver = new CustomContractResolver(); }); \",\"最后再次使用swagger界面调用返回值已经变成了6974150586715897857，成功解决问题。\",\"关于这个精度丢失的问题这次是第二次遇到了，上次是使用Apifox升级之后就出现了这个问题，然后我还去提了bug，结果是因为更新之后出来了一个兼容bigint的开关并且默认是关闭状态。\"]},\"479\":{\"h\":\"swagger-基础使用\",\"t\":[\"Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。日常可以用于后端开发人员测试接口或者前后端联调使用。从.net5开始，swagger已经集成到vs2019编译器中，可以通过勾对选项“启用OpenAPI支持”显示基本的swagger配置。\",\"本文示例环境：vs2019、net5\",\"新建一个netcore api项目，为了测试效果，我多创建几个控制器\",\"img\"]},\"480\":{\"h\":\"1.1 安装组件\",\"t\":[\" <ItemGroup> <PackageReference Include=\\\"Swashbuckle.AspNetCore\\\" Version=\\\"5.6.3\\\" /> </ItemGroup> \"]},\"481\":{\"h\":\"1.2 注册swagger服务\",\"t\":[\"在ConfigureServices中\",\" public void ConfigureServices(IServiceCollection services) { services.AddControllers(); services.AddSwaggerGen(c => { c.SwaggerDoc(\\\"v1\\\", new OpenApiInfo { Title = \\\"WebApi\\\", Version = \\\"v1\\\" }); }); } \",\"注意：\",\"//netcore3.0之前版本用法\",\"c.SwaggerDoc(\\\"v1\\\", new Info { Title = \\\"WebApi\\\", Version = \\\"v1\\\" });\"]},\"482\":{\"h\":\"1.3 使用Swagger\",\"t\":[\" public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); //启用中间件以将生成的swagger公开为json终结点 app.UseSwagger(); //启用swagger-ui中间件，指定swagger json终结点，以公开交互文档 app.UseSwaggerUI(c => c.SwaggerEndpoint(\\\"/swagger/v1/swagger.json\\\", \\\"WebApi v1\\\")); } app.UseRouting(); app.UseAuthorization(); app.UseEndpoints(endpoints => { endpoints.MapControllers(); }); } \",\"该示例代码配置的swagger只在Development环境下显示，可以根据实际情况来修改\"]},\"483\":{\"h\":\"1.4 启动\",\"t\":[\"运行项目，展示下面的效果\",\"img\",\"如果这是你写的接口，这个时候你的其他同事去看，真的会一脸懵逼，你这写的都是啥玩意，那么我们来给这加上注释吧。\",\"/// <summary> /// 用户控制器 /// </summary> [Route(\\\"api/[controller]\\\")] [ApiController] public class UserController : ControllerBase { /// <summary> ///查询用户列表 /// </summary> /// <returns></returns> [HttpGet] public IEnumerable<string> Get() { return new string[] { \\\"value1\\\", \\\"value2\\\" }; } /// <summary> /// 查询用户详情 /// </summary> /// <param name=\\\"id\\\"></param> /// <returns></returns> [HttpGet(\\\"{id}\\\")] public string Get(int id) { return \\\"value\\\"; } /// <summary> /// 删除用户 /// </summary> /// <param name=\\\"id\\\"></param> [HttpDelete(\\\"{id}\\\")] public void Delete(int id) { } } \",\"这样子加了注释还不行，swagger还读取不到我们的注释，我们还需要生成xml文档并且让swagger使用，选中项目右键属性=>生成=>xml文档文件\",\"img\",\"修改注入swagger配置\",\"services.AddSwaggerGen(c => { c.SwaggerDoc(\\\"v1\\\", new OpenApiInfo { Title = \\\"WebApi\\\", Version = \\\"v1\\\" }); // 使用反射获取xml文件。并构造出文件的路径 var xmlFile = $\\\"{Assembly.GetExecutingAssembly().GetName().Name}.xml\\\"; var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile); // 启用xml注释.第二个参数启用控制器的注释，默认为false. c.IncludeXmlComments(xmlPath, true); //或者循环获取xml文件配置 Directory.GetFiles(AppDomain.CurrentDomain.BaseDirectory, \\\"*.xml\\\").ToList().ForEach(file => { c.IncludeXmlComments(file); }); }); \",\"再次启动项目查看界面\",\"img\",\"至此，基础的配置swagger显示注释已经实现了，那么如何调用我们接口那？\",\"img\",\"通过该界面，我们可以看到请求地址、请求方式、入参类型、输出参数等。\",\"注：\",\"通过设置取消显示警告：1591 ， 可以去除方法和类上面的xml注释警告\",\"如果实体类不在当前程序集下，需要同样方式配置实体类程序集的xml文档到swagger配置\"]},\"484\":{\"h\":\"1.5 不显示某些接口\",\"t\":[\"通过一些特性，可以标记不显示某一些接口\",\"//忽略显示接口 [ApiExplorerSettings(IgnoreApi =true)] //废弃接口 [Obsolete(\\\"该接口不再使用\\\")] \",\"jwt是一个基于json的、用于在网络上声明某种主张的令牌，通常是用三部分组成：头信息，消息体，签名。他是一种双方之间传递安全信息的表述性声明规范。可以做权限验证的工具，但是目的不是为了数据加密和保护。虽然看似像是加密的数据，但是它并没有加密，不适合存储机密信息。\",\"如果我们接口是需要传递token才可以访问，那么我们就需要对我们的swagger配置再进行改造\",\"services.AddSwaggerGen(c => { c.SwaggerDoc(\\\"v1\\\", new OpenApiInfo { Title = \\\"WebApi\\\", Version = \\\"v1\\\" }); // 使用反射获取xml文件。并构造出文件的路径 var xmlFile = $\\\"{Assembly.GetExecutingAssembly().GetName().Name}.xml\\\"; var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile); // 启用xml注释.第二个参数启用控制器的注释，默认为false. c.IncludeXmlComments(xmlPath, true); var security = new Dictionary<string, IEnumerable<string>> { { \\\"Bearer\\\", new string[] { } } }; c.AddSecurityDefinition(\\\"Bearer\\\", new OpenApiSecurityScheme() { Description = \\\"JWT授权(数据将在请求头中进行传输) 在下方输入Bearer {token} 即可，注意两者之间有空格\\\", Name = \\\"Authorization\\\", //jwt默认的参数名称 In = ParameterLocation.Header, //jwt默认存放Authorization信息的位置(请求头中) Type = SecuritySchemeType.ApiKey, }); c.AddSecurityRequirement(new OpenApiSecurityRequirement { { new OpenApiSecurityScheme { Reference = new OpenApiReference() { Id = \\\"Bearer\\\", Type = ReferenceType.SecurityScheme } }, Array.Empty<string>() } }); }); \",\"运行，查看界面，发现界面有所不同\",\"img\",\"虽然我手上没有token，但是我也没有写校验token的代码，所以我们就暂且看为一个头部传递的工具使用。jwt具体使用后续再讲。\",\"token传递方式就是在Headers增加 Authorization:Bearer {token} ，然后需要在程序中配置校验token，当下我们只是模拟swagger在header中传递值。\",\"在输入框输出： Bearer AABBCC\",\"在Action中获取我们传输的数据\",\"var token = HttpContext.Request.Headers[\\\"Authorization\\\"]; \",\"img\",\"https://docs.microsoft.com/zh-cn/aspnet/core/tutorials/web-api-help-pages-using-swagger?view=aspnetcore-5.0\",\"关于swagger的使用操作还有很多，上面有些配置也没有详细说到，只说了一些功能性的操作。更详细操作需要自行学习。\",\"https://www.cnblogs.com/shanfeng1000/p/13476831.html\"]},\"485\":{\"h\":\"swagger-版本控制\"},\"486\":{\"h\":\"1. 安装组件\",\"t\":[\" <PackageReference Include=\\\"Microsoft.AspNetCore.Mvc.Versioning\\\" Version=\\\"4.2.0\\\" /> <PackageReference Include=\\\"Microsoft.AspNetCore.Mvc.Versioning.ApiExplorer\\\" Version=\\\"4.2.0\\\" /> <PackageReference Include=\\\"Swashbuckle.AspNetCore\\\" Version=\\\"5.6.3\\\" /> \"]},\"487\":{\"h\":\"2. 设置版本\"},\"488\":{\"h\":\"2.1 控制器设置版本\",\"t\":[\"namespace NetCore_SwaggerVersion.Controllers.v1 { /// <summary> /// 版本1.1 /// </summary> [Route(\\\"api/v{version:apiVersion}/[controller]\\\")] [ApiController] [ApiVersion(\\\"1.0\\\")] [ApiVersion(\\\"1.1\\\")]//定义控制器提供哪个版本的API public class TestController : ControllerBase namespace NetCore_SwaggerVersion.Controllers.v2 { /// <summary> /// 版本2.0 /// </summary> [Route(\\\"api/v{version:apiVersion}/[controller]\\\")] [ApiController] [ApiVersion(\\\"2.6\\\")] public class TestController : ControllerBase namespace NetCore_SwaggerVersion.Controllers { [ApiVersionNeutral]//不受版本控制 [ApiController] [Route(\\\"api/[controller]/[action]\\\")] public class WeatherForecastController : ControllerBase \"]},\"489\":{\"h\":\"2.2 特定方法设置版本\",\"t\":[\"[MapToApiVersion(\\\"1.1\\\")] [HttpGet] public IEnumerable<string> Get() \"]},\"490\":{\"h\":\"2.3 设置不受版本控制\",\"t\":[\" [ApiVersionNeutral]//退出版本控制 [ApiController] [Route(\\\"api/[controller]/[action]\\\")] public class WeatherForecastController : ControllerBase \"]},\"491\":{\"h\":\"3. 配置Startup类\"},\"492\":{\"h\":\"3.1 方案一\"},\"493\":{\"h\":\"3.1.1 添加新成员\",\"t\":[\"用来获取API版本信息\",\" /// <summary> /// Api版本信息 /// </summary> private IApiVersionDescriptionProvider _provider; \"]},\"494\":{\"h\":\"3.1.2 在 ConfigureServices 中\",\"t\":[\" //Versioning用来实现API的版本控制 services.AddApiVersioning(options => { options.DefaultApiVersion = new ApiVersion(1, 0);//默认版本号 大版本/小版本 options.AssumeDefaultVersionWhenUnspecified = true;//此选项将用于不提供版本的请求，默认情况下假定API的版本为1.0 options.ReportApiVersions = true;//当设置为true时候，api将返回响应标头中支持的版本信息 }); //Versioning.ApiExplorer用来实现元数据的发现工作 services.AddVersionedApiExplorer(options => { options.GroupNameFormat = \\\"'v'VVV\\\";//定义了版本号的格式化方式 options.SubstituteApiVersionInUrl = true; }); /* AddApiVersioning，主要用来配置向前兼容，定义了如果没有带版本号的访问，会默认访问v1.0的接口。 AddVersionedApiExplorer用来添加API的版本管理，并定义了版本号的格式化方式，以及兼容终结点上带版本号的方式。 */ services.AddControllers(); _provider = services.BuildServiceProvider().GetRequiredService<IApiVersionDescriptionProvider>(); services.AddSwaggerGen(c => { foreach (var item in _provider.ApiVersionDescriptions) { c.SwaggerDoc(item.GroupName, new OpenApiInfo { Title = \\\"Demo\\\", Version = item.ApiVersion.ToString(), Description = \\\"切换版本请点右上角版本切换\\\" }); } var xmlPath = Path.Combine(AppContext.BaseDirectory, $\\\"{AppDomain.CurrentDomain.FriendlyName}.xml\\\"); c.IncludeXmlComments(xmlPath); }); \",\"注意：\",\"_provider = services.BuildServiceProvider().GetRequiredService<IApiVersionDescriptionProvider>();会提示“ ASP0000 从应用程序代码调用“BuildServiceProvider”会导致创建单一实例服务的其他副本。 考虑依赖项注入服务等替代项作为“Configure”的参数。”\"]},\"495\":{\"h\":\"3.2.3 Configure使用服务\",\"t\":[\" public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); app.UseSwagger(); app.UseSwaggerUI(c => { foreach (var item in _provider.ApiVersionDescriptions) { c.SwaggerEndpoint($\\\"/swagger/{item.GroupName}/swagger.json\\\", \\\"Version：\\\" + item.GroupName.ToUpperInvariant()); } }); } app.UseRouting(); app.UseAuthorization(); app.UseEndpoints(endpoints => { endpoints.MapControllers(); }); } \",\"至此已经完成了版本控制+swagger。\"]},\"496\":{\"h\":\"3.2 方案二\"},\"497\":{\"h\":\"3.2.1 添加扩展类\",\"t\":[\" /// <summary> /// swagger扩展 /// </summary> internal class ConfigureSwaggerOptions : IConfigureOptions<SwaggerGenOptions> { private readonly IApiVersionDescriptionProvider _provider; public ConfigureSwaggerOptions(IApiVersionDescriptionProvider provider) => _provider = provider; public void Configure(SwaggerGenOptions options) { foreach (var description in _provider.ApiVersionDescriptions) { options.SwaggerDoc(description.GroupName, CreateInfoForApiVersion(description)); } } private OpenApiInfo CreateInfoForApiVersion(ApiVersionDescription description) { var info = new OpenApiInfo() { Title = \\\"Demo\\\", Version = description.ApiVersion.ToString(), Description = \\\"API 文档\\\" }; if (description.IsDeprecated) { info.Description += \\\" 方法被弃用.\\\"; } return info; } } internal class SwaggerDefaultValues : IOperationFilter { public void Apply(OpenApiOperation operation, OperationFilterContext context) { var apiDescription = context.ApiDescription; operation.Deprecated |= apiDescription.IsDeprecated(); if (operation.Parameters == null) return; foreach (var parameter in operation.Parameters) { var description = apiDescription.ParameterDescriptions.First(p => p.Name == parameter.Name); if (parameter.Description == null) { parameter.Description = description.ModelMetadata?.Description; } if (parameter.Schema.Default == null && description.DefaultValue != null) { parameter.Schema.Default = new OpenApiString(description.DefaultValue.ToString()); } parameter.Required |= description.IsRequired; } } } \"]},\"498\":{\"h\":\"3.2.2 在 ConfigureServices 中\",\"t\":[\" //Versioning用来实现API的版本控制 services.AddApiVersioning(options => { options.DefaultApiVersion = new ApiVersion(1, 0);//默认版本号 大版本/小版本 options.AssumeDefaultVersionWhenUnspecified = true;//此选项将用于不提供版本的请求，默认情况下假定API的版本为1.0 options.ReportApiVersions = true;//当设置为true时候，api将返回响应标头中支持的版本信息 }); //Versioning.ApiExplorer用来实现元数据的发现工作 services.AddVersionedApiExplorer(options => { options.GroupNameFormat = \\\"'v'VVV\\\";//定义了版本号的格式化方式 options.SubstituteApiVersionInUrl = true; }); /* AddApiVersioning，主要用来配置向前兼容，定义了如果没有带版本号的访问，会默认访问v1.0的接口。 AddVersionedApiExplorer用来添加API的版本管理，并定义了版本号的格式化方式，以及兼容终结点上带版本号的方式。 */ services.AddControllers(); services.AddTransient<IConfigureOptions<SwaggerGenOptions>, ConfigureSwaggerOptions>(); services.AddSwaggerGen(options => options.OperationFilter<SwaggerDefaultValues>()); \"]},\"499\":{\"h\":\"3.2.3 Configure使用服务\",\"t\":[\" public void Configure(IApplicationBuilder app, IWebHostEnvironment env, IApiVersionDescriptionProvider provider) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); app.UseSwagger(); app.UseSwaggerUI(c => { foreach (var item in provider.ApiVersionDescriptions) { c.SwaggerEndpoint($\\\"/swagger/{item.GroupName}/swagger.json\\\", \\\"Version：\\\" + item.GroupName.ToUpperInvariant()); } }); } app.UseRouting(); app.UseAuthorization(); app.UseEndpoints(endpoints => { endpoints.MapControllers(); }); } \",\"注意:传入IApiVersionDescriptionProvider provider\",\"至此已经完成了版本控制+swagger。\"]},\"500\":{\"h\":\"4 访问接口\",\"t\":[\"接口地址\",\"http://localhost:5000/api/v1.0/Test http://localhost:5000/api/v1.1/Test http://localhost:5000/api/v2.6/Test http://localhost:5000/api/WeatherForecast/Get 不受版本控制 \",\"就必须写版本号，如果不写也没有设置不受版本控制，那么就会提示404\",\"完结。\",\"借鉴于：https://www.cnblogs.com/tiger-wang/p/14167625.html\"]},\"501\":{\"h\":\"EFCore-生成数据库\",\"t\":[\"本文主要是回顾下从项目创建到生成数据到数据库(代码优先)的全部过程。采用EFCore作为ORM框架。\",\"本次示例环境：vs2019、net5、mysql\",\"本次事例代码是用过vs2019创建的ASP.NET Core Web API项目\",\"可以通过可视化界面创建或者通过命令行创建\",\"dotnet new webapi -o Net5ByDocker \",\"安装组件\",\" <PackageReference Include=\\\"Pomelo.EntityFrameworkCore.MySql\\\" Version=\\\"5.0.0\\\" /> <PackageReference Include=\\\"Pomelo.EntityFrameworkCore.MySql.Json.Newtonsoft\\\" Version=\\\"5.0.0\\\" /> \",\"增加实体类\",\" [Table(\\\"user\\\")] public class User { public User() { Id = Guid.NewGuid().ToString(); } public User(string account, string password, string creater) : this() { Account = account; Password = password; Deleted = false; SetCreater(creater); } [Key] [Comment(\\\"主键\\\")] [StringLength(36)] [Required] public string Id { get; private set; } [Comment(\\\"帐号\\\")] [StringLength(36)] [Required] public string Account { get; private set; } [Comment(\\\"密码\\\")] [StringLength(36)] [Required] public string Password { get; private set; } [Comment(\\\"余额\\\")] [Column(TypeName = \\\"decimal(18, 2)\\\")] [Required] public decimal Money { get; set; } [Comment(\\\"是否删除\\\")] [Column(TypeName = \\\"tinyint(1)\\\")] [Required] public bool Deleted { get; private set; } [Comment(\\\"创建人\\\")] [StringLength(20)] [Required] public string Creater { get; private set; } [Comment(\\\"创建时间\\\")] [Required] public DateTime CreateTime { get; private set; } [Comment(\\\"修改人\\\")] [StringLength(20)] [Required] public string Modifyer { get; private set; } [Comment(\\\"修改时间\\\")] [Required] public DateTime ModifyTime { get; private set; } public void SetCreater(string name) { Creater = name; CreateTime = DateTime.Now; SetModifyer(name); } public void SetModifyer(string name) { Modifyer = name; ModifyTime = DateTime.Now; } } \",\"这种只是增加实体类类型的一种方式，可能这种看着比较乱，还可以通过OnModelCreating实现，详情看参考文档\",\"增加数据库上下文OpenDbContext\",\" public class OpenDbContext : DbContext { public OpenDbContext(DbContextOptions<OpenDbContext> options) : base(options) { } public DbSet<User> Users { get; set; } } \",\"Startup注入连接数据库操作\",\" var connection = Configuration[\\\"DbConfig:Mysql:ConnectionString\\\"]; var migrationsAssembly = IntrospectionExtensions.GetTypeInfo(typeof(Startup)).Assembly.GetName().Name; services.AddDbContext<OpenDbContext>(option => option.UseMySql(connection, ServerVersion.AutoDetect(connection), x => { x.UseNewtonsoftJson(); x.MigrationsAssembly(migrationsAssembly); })); \",\"引用组件\",\"<PackageReference Include=\\\"Microsoft.EntityFrameworkCore.Design\\\" Version=\\\"5.0.5\\\"> <PackageReference Include=\\\"Microsoft.EntityFrameworkCore.Tools\\\" Version=\\\"5.0.5\\\"> \",\"迁移命令\",\"add-migration Init \",\"结果\",\"img\",\"要看下生成的迁移文件是否是自己预期的那样子，也可以在这一步就生成数据库，命令：Update-Database\",\"增加OpenDbSend类，添加数据种子\",\" public class OpenDbSend { /// <summary> /// 生成数据库以及数据种子 /// </summary> /// <param name=\\\"dbContext\\\">数据库上下文</param> /// <param name=\\\"loggerFactory\\\">日志</param> /// <param name=\\\"retry\\\">重试次数</param> /// <returns></returns> public static async Task SeedAsync(OpenDbContext dbContext, ILoggerFactory loggerFactory, int? retry = 0) { int retryForAvailability = retry.Value; try { dbContext.Database.Migrate();//如果当前数据库不存在按照当前 model 创建，如果存在则将数据库调整到和当前 model 匹配 await InitializeAsync(dbContext).ConfigureAwait(false); //if (dbContext.Database.EnsureCreated())//如果当前数据库不存在按照当前 model创建，如果存在则不管了。 // await InitializeAsync(dbContext).ConfigureAwait(false); } catch (Exception ex) { if (retryForAvailability < 3) { retryForAvailability++; var log = loggerFactory.CreateLogger<OpenDbSend>(); log.LogError(ex.Message); await SeedAsync(dbContext, loggerFactory, retryForAvailability).ConfigureAwait(false); } } } /// <summary> /// 初始化数据 /// </summary> /// <param name=\\\"context\\\"></param> /// <returns></returns> public static async Task InitializeAsync(OpenDbContext context) { if (!context.Set<User>().Any()) { await context.Set<User>().AddAsync(new User(\\\"azrng\\\", \\\"123456\\\", \\\"azrng\\\")).ConfigureAwait(false); await context.Set<User>().AddAsync(new User(\\\"张三\\\", \\\"123456\\\", \\\"azrng\\\")).ConfigureAwait(false); } await context.SaveChangesAsync().ConfigureAwait(false); } } \",\"设置项目启动时候调用\",\" public static async Task Main(string[] args) { var host = CreateHostBuilder(args).Build(); using (var scope = host.Services.CreateScope()) { var services = scope.ServiceProvider; var loggerFactory = services.GetRequiredService<ILoggerFactory>(); var _logger = loggerFactory.CreateLogger<Program>(); try { var openContext = services.GetRequiredService<OpenDbContext>(); await OpenDbSend.SeedAsync(openContext, loggerFactory).ConfigureAwait(false); } catch (Exception ex) { _logger.LogError(ex, $\\\"项目启动出错 {ex.Message}\\\"); } } await host.RunAsync().ConfigureAwait(false); } \",\"启动项目，自动生成数据库\",\"img\",\"表结构如下\",\"img\",\"如果后期数据库字段或者结构有变动，可以再次生成迁移文件然后生成数据库\",\" /// <summary> /// 用户接口 /// </summary> public interface IUserService { string GetName(); /// <summary> /// 查询用户信息 /// </summary> /// <param name=\\\"account\\\"></param> /// <returns></returns> Task<User> GetDetailsAsync(string account); } /// <summary> /// 用户实现 /// </summary> public class UserService : IUserService { private readonly OpenDbContext _dbContext; public UserService(OpenDbContext dbContext) { _dbContext = dbContext; } public string GetName() { return \\\"AZRNG\\\"; } ///<inheritdoc cref=\\\"IUserService.GetDetailsAsync(string)\\\"/> public async Task<User> GetDetailsAsync(string account) { return await _dbContext.Set<User>().FirstOrDefaultAsync(t => t.Account == account).ConfigureAwait(false); } } \",\"一般更推荐建立指定的返回Model类，然后只查询需要的内容，不直接返回实体类\",\"控制器方法\",\" /// <summary> /// 查询用户详情 /// </summary> /// <param name=\\\"account\\\"></param> /// <returns></returns> [HttpGet] public async Task<ActionResult<User>> GetDetailsAsync(string account) { return await _userService.GetDetailsAsync(account).ConfigureAwait(false); } \",\"查询结果\",\"{ \\\"id\\\": \\\"e8976d0a-6ee9-4e2e-b8d8-1fe6e85b727b\\\", \\\"account\\\": \\\"azrng\\\", \\\"password\\\": \\\"123456\\\", \\\"money\\\": 0, \\\"deleted\\\": false, \\\"creater\\\": \\\"azrng\\\", \\\"createTime\\\": \\\"2021-05-09T15:48:45.730302\\\", \\\"modifyer\\\": \\\"azrng\\\", \\\"modifyTime\\\": \\\"2021-05-09T15:48:45.730425\\\" } \",\"实体类型：https://docs.microsoft.com/zh-cn/ef/core/modeling/entity-types?tabs=data-annotations\",\"实体属性：https://docs.microsoft.com/zh-cn/ef/core/modeling/entity-properties?tabs=data-annotations%2Cwithout-nrt\"]},\"502\":{\"h\":\"EFCore-增删改查\",\"t\":[\"通过依赖注入配置应用程序，通过startup类的ConfigureService方法中的AddDbContext将EFCore添加到依赖注入容器\",\"public void ConfigureServices(IServiceCollection services) { services.AddControllers(); services.AddDbContext<OpenDbContext>( options => options.UseMySql(Configuration[\\\"DbConfig:Mysql:ConnectionString\\\"]); } \",\"将名为 OpenDbContext的 DbContext 子类注册到依赖注入容器的Scope生命周期。上下文配置为使用MySQL数据库提供程序，并从配置中读取数据库连接字符串。\",\"OpenDbContext类必须公开具有 DbContextOptions<OpenDbContext>参数的公共构造函数。 这是将 AddDbContext 的上下文配置传递到 DbContext 的方式。\",\" public class OpenDbContext : DbContext { public OpenDbContext(DbContextOptions options) : base(options) { } public DbSet<User> Users { get; set; } public DbSet<Score> Scores { get; set; } protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { //另一种配置连接数据库的方式 //optionsBuilder.UseMySql(\\\"连接数据库\\\", ServerVersion.AutoDetect(\\\"连接数据库字符串\\\")); //显示敏感数据日志 optionsBuilder.EnableSensitiveDataLogging(true); } protected override void OnModelCreating(ModelBuilder modelBuilder) { //属性配置 //modelBuilder.Entity<User>().Property(t => t.Account).IsRequired().HasMaxLength(20).HasComment(\\\"帐号\\\"); //种子数据设置 //modelBuilder.Entity<User>().HasData(new User { Account=\\\"种子\\\"}); // 添加etc modelBuilder.ApplyConfiguration(new UserInfoETC()); //通过反射批量添加etc的操作 modelBuilder.ApplyConfigurationsFromAssembly(Assembly.GetExecutingAssembly()); base.OnModelCreating(modelBuilder); } } \",\"然后将OpenDbContext通过构造函数注入的方式注入到应用程序的控制器或者其他服务中使用。\",\"关于连接数据库可以参考另一个文章： .Net之生成数据库全流程\",\" context.Database.EnsureDeleted();//删除数据库，如果存在，如果没有权限，则引发异常 context.Database.EnsureCreated();//如果数据库不存在，创建数据库并初始化数据库架构，如果存在任何表，则不会初始化架构 context.Database.Migrate();//根据迁移文件，迁移数据库 \"]},\"503\":{\"h\":\"3.1 基础查询\",\"t\":[\"db.Set<UserInfor>().ToList(); //查询表达式 var account = (from u in _context.Users where u.Id == id select u.Account ).ToList(); //查询单个 _context.Movie.FirstOrDefaultAsync(m => m.ID == id); _context.Movie.FindAsync(id); //查询指定列 如果不存在数据返回空对象，而不是null _context.Set<User>().AsNoTracking().Where(t=>t.Id==\\\"11\\\").Select(t => new { t.Account, t.PassWord }).FirstOrDefaultAsync(); //查询指定列 如果不存在数据返回空字符串，而不是null var session = await _context.Set<User>().Where(t=>t.Id ==\\\"11\\\").Select(t => t.Name).FirstOrDefaultAsync().ConfigureAwait(false); _context.Users.OrderBy(ty => ty.IsValid).Where(t => t.Id == \\\"1407875772521123840\\\").FirstOrDefaultAsync(); // 在EFCore中不论是先where还是先order，生成的SQL脚本都是先where再order的 // 预先加载查询 var blogs = context.Blogs.Include(blog => blog.Posts).ToList(); // 包含多个层级的查询 var blogs = context.Blogs.Include(blog => blog.Posts).ThenInclude(post => post.Author).ToList(); \",\"SingleOrDefaultAsync 与FirstOrDefaultAsync\",\"如果有多个实体符合筛选部分， SingleOrDefaultAsync 将引发异常。\",\"如果有多个实体符合筛选部分， FirstOrDefaultAsync 不引发异常。\",\"FindAsync\",\"在大部分基架代码中，FindAsync 可用于替代 FirstOrDefaultAsync ，查找具有主键 (PK) 的实体。 如果具有 PK 的实体正在由上下文跟踪，会返回该实体且不向 DB 发出请求。\",\"测试结果 var entity = _context.Users.Where(t => t.Id == \\\"55555\\\").Select(t => new { t.Account }).FirstOrDefault();//null var entity2 = _context.Users.Where(t => t.Id == \\\"55555\\\").Select(t => t.Account).FirstOrDefault();//null var enetit3 = _context.Users.Where(t => t.Id == \\\"55555\\\").Select(t => new user { Name = t.Account }).FirstOrDefault();//null var entity4 = _context.Users.FirstOrDefault(t => t.Id == \\\"55555\\\");//null var entity5 = _context.Users.Select(t => new user { Name = t.Account }).FirstOrDefault(t => t.Name == \\\"444\\\");//null \"]},\"504\":{\"h\":\"3.2 跟踪和非跟踪查询\",\"t\":[\"跟踪行为决定了EFCore是否将有些实体的信息保存在其更改更跟踪器中。如果已跟踪某个实体，则该实体中检测到的任何更改都会在SaveChanges()时候保存到数据库，\",\"不跟踪没有主键的实体类型。\",\"# 跟踪查询 _context.Set<User>().ToListAsync(); # 非跟踪查询 _context.Set<User>().AsNoTracking().ToListAsync(); \",\"默认是跟踪查询\"]},\"505\":{\"h\":\"3.3 条件查询\"},\"506\":{\"h\":\"3.3.1 不支持异步方案\",\"t\":[\" Func<User, bool> express = x => true; if (!string.IsNullOrWhiteSpace(dto.Data)) { express = x => x.Mobile == dto.Data; } string userid = \\\"\\\"; if (!string.IsNullOrWhiteSpace(userid)) { express = x => x.UserId == userid; } var bbb = _dbContext.Set<User>().Where(express).FirstOrDefault(); \"]},\"507\":{\"h\":\"3.3.2 支持异步方案\",\"t\":[\" Expression<Func<User, bool>> express = x => true; if (!string.IsNullOrWhiteSpace(dto.Data)) { express = x => x.Mobile == dto.Data; } var bbb = await _dbContext.Set<User>().Where(express).ToListAsync(); \"]},\"508\":{\"h\":\"3.4 原生SQL查询\",\"t\":[\"可使用 FromSqlRaw 扩展方法基于原始 SQL 查询开始 LINQ 查询。 FromSqlRaw 只能在直接位于 DbSet<> 上的查询根上使用。\"]},\"509\":{\"h\":\"3.4.1 基本原生SQL查询\",\"t\":[\"var blogs = context.Blogs .FromSqlRaw(\\\"select * from user\\\") .ToList(); // 执行存储过程 var blogs = context.Blogs .FromSqlRaw(\\\"EXECUTE dbo.GetMostPopularBlogs\\\") .ToList(); \",\"2.x里面使用FromSql，在3.x里面使用FromSqlRow方法\"]},\"510\":{\"h\":\"3.4.2 参数化查询\"},\"511\":{\"h\":\"3.4.2.1 SQL注入\",\"t\":[\"首先我们编写一个简单的SQL注入示例，比如就注入我们根据ID查询的语句，输入ID为：ididid' or '1'='1\",\" var strSql = string.Format(\\\"select * from user where Id='{0}'\\\", \\\"ididid' or '1'='1\\\"); var query = await _context.Set<User>().FromSqlRaw(strSql).ToListAsync(); Console.WriteLine(JsonConvert.SerializeObject(query)); \",\"生成语句\",\" select * from user where Id='ididid' or '1'='1' [{\\\"Account\\\":\\\"张三\\\",\\\"PassWord\\\":\\\"123456\\\",\\\"CreateTime\\\":\\\"2021-05-20T22:53:44.778101\\\",\\\"IsValid\\\":false,\\\"Id\\\":\\\"1395392302788120576\\\"},{\\\"Account\\\":\\\"李四\\\",\\\"PassWord\\\":\\\"123456\\\",\\\"CreateTime\\\":\\\"2021-05-20T22:53:44.849376\\\",\\\"IsValid\\\":false,\\\"Id\\\":\\\"1395392303090110464\\\"},{\\\"Account\\\":\\\"王五\\\",\\\"PassWord\\\":\\\"123456\\\",\\\"CreateTime\\\":\\\"2021-05-20T22:53:44.849425\\\",\\\"IsValid\\\":false,\\\"Id\\\":\\\"1395392303090110467\\\"}] \"]},\"512\":{\"h\":\"3.4.2.2 FromSqlRaw参数化\",\"t\":[\"通过参数化查询，防止SQL注入问题\",\" //sql语句参数化查询，防止SQL注入 var strSql = \\\"select * from user where Id=@id\\\"; var parameter = new MySqlParameter[] { new MySqlParameter(\\\"@id\\\",\\\"1395392302788120576\\\"), }; var query = await _context.Set<User>().FromSqlRaw(strSql, parameter).ToListAsync(); \",\"或者\",\" var strSql = \\\"select * from user where Id={0}\\\"; var query = await _context.Set<User>().FromSqlRaw(strSql, \\\"1395392302788120576\\\").ToListAsync(); Console.WriteLine(JsonConvert.SerializeObject(query)); // 生成SQL select * from user where Id=@p0 [{\\\"Account\\\":\\\"张三\\\",\\\"PassWord\\\":\\\"123456\\\",\\\"CreateTime\\\":\\\"2021-05-20T22:53:44.778101\\\",\\\"IsValid\\\":false,\\\"Id\\\":\\\"1395392302788120576\\\"}] \",\"通过占位符形式提供额外的参数，看上去类似于String.Format语法，但是提供的值包装在DbParameter中。可以防止SQL注入\"]},\"513\":{\"h\":\"3.4.2.3 FromSqlInterpolated参数化\",\"t\":[\"FromSqlInterpolated 类似于 FromSqlRaw，但你可以借助它使用字符串内插语法。 与 FromSqlRaw 一样，FromSqlInterpolated 只能在查询根上使用，并且都可以防止SQL注入。\",\" var query = await _context.Set<User>().FromSqlInterpolated($\\\"select * from user where Id={\\\"1395392302788120576\\\"}\\\").ToListAsync(); Console.WriteLine(JsonConvert.SerializeObject(query)); \",\"生成SQL\",\" select * from user where Id=@p0 [{\\\"Account\\\":\\\"张三\\\",\\\"PassWord\\\":\\\"123456\\\",\\\"CreateTime\\\":\\\"2021-05-20T22:53:44.778101\\\",\\\"IsValid\\\":false,\\\"Id\\\":\\\"1395392302788120576\\\"}] \"]},\"514\":{\"h\":\"3.4.3 限制\",\"t\":[\"SQL查询必须返回实体类型的所有属性的数据。\",\"结果集中的列明必须与属性映射到的列名称匹配。\",\"SQL查询不能包含关联数据， 但是，在许多情况下你可以在查询后面紧跟着使用 Include 方法以返回关联数据（请参阅包含关联数据）。\",\"参考文档：https://docs.microsoft.com/zh-cn/ef/core/querying/raw-sql\"]},\"515\":{\"h\":\"3.5 复杂查询\",\"t\":[\"数据如下：\",\"用户表(user)\",\"img\",\"用户成绩表(score)\",\"img\",\"描述：包含三个用户，其中两个用户在成绩表都有语文和数学的数据。\"]},\"516\":{\"h\":\"3.5.1 内连接\",\"t\":[\"内连接：分为隐式内连接和显式内连接(写法不同，结果相同)\"]},\"517\":{\"h\":\"3.5.1.1 Linq查询表达式\"},\"518\":{\"h\":\"显式内连接：join-in-on拼接\",\"t\":[\" var list = (from u in _context.Users join sc in _context.Scores on u.Id equals sc.UserId where sc.CourseName == \\\"语文\\\" select new { u.Account, u.PassWord, sc.CourseName, sc.Grade }).ToList(); Console.WriteLine(JsonConvert.SerializeObject(list)); \",\"记得引用：System.Linq 否则提示：未找到源类型“DbSet<User>”的查询模式的实现，未找到join\",\"生成SQL\",\" SELECT `u`.`Account`, `u`.`PassWord`, `s`.`CourseName`, `s`.`Grade` FROM `user` AS `u` INNER JOIN `score` AS `s` ON `u`.`Id` = `s`.`UserId` WHERE `s`.`CourseName` = '语文' \",\"结果\",\"img\",\"三表联合查询\",\"var templateFieldList = await (from template in _conclusionTemplateReq.EntitiesAsNoTracking.Where(t => t.Isdefault && t.TenantId == CurrentUser.TenantId) join templateField in _templateFieldMappingRep.EntitiesAsNoTracking on template.CluTemplateId equals templateField.CluTemplateId join field in _conclusionTemplateFieldRep.EntitiesAsNoTracking.Where(t => t.Isdefault) on templateField .CluFieldId equals field.CluFieldId select new ChatConclusionTemplateFieldMapping(newTemplateId, templateField.CluFieldId, templateField.Sort)).ToArrayAsync().ConfigureAwait(false); \"]},\"519\":{\"h\":\"隐式内连接：多个from并联拼接\",\"t\":[\" var list = (from u in _context.Users from sc in _context.Scores where u.Id == sc.UserId && sc.CourseName == \\\"语文\\\" select new { u.Account, u.PassWord, sc.CourseName, sc.Grade }).ToList(); Console.WriteLine(JsonConvert.SerializeObject(list)); \",\"生成SQL\",\" SELECT `u`.`Account`, `u`.`PassWord`, `s`.`CourseName`, `s`.`Grade` FROM `user` AS `u` CROSS JOIN `score` AS `s` WHERE (`u`.`Id` = `s`.`UserId`) AND (`s`.`CourseName` = '语文') \",\"结果\",\"img\"]},\"520\":{\"h\":\"3.5.1.2 Linq标准查询运算符\",\"t\":[\" var list = _context.Users.Where(t => t.Account != null) .Join(_context.Scores.Where(sc => sc.CourseName == \\\"语文\\\"), u => u.Id, sc => sc.UserId, (u, sc) => new { u.Account, u.PassWord, sc.CourseName, sc.Grade }).ToList(); Console.WriteLine(JsonConvert.SerializeObject(list)); \",\"生成SQL\",\" # 不加查询课程 SELECT `u`.`Account`, `u`.`PassWord`, `s`.`CourseName`, `s`.`Grade` FROM `user` AS `u` INNER JOIN `score` AS `s` ON `u`.`Id` = `s`.`UserId` # 查询课程 SELECT `u`.`Account`, `u`.`PassWord`, `t`.`CourseName`, `t`.`Grade` FROM `user` AS `u` INNER JOIN ( SELECT `s`.`CourseName`, `s`.`Grade`, `s`.`UserId` FROM `score` AS `s` WHERE `s`.`CourseName` = '语文' ) AS `t` ON `u`.`Id` = `t`.`UserId` \",\"结果\",\"img\"]},\"521\":{\"h\":\"3.5.2 外连接\",\"t\":[\"外连接join后必须有into，然后可以加上XX.DefaultIfEmpty()，表示对于引用类型将返回null,而对于值类型则返回0。对于结构体类型，则会根据其成员类型将它们相应地初始化为null(引用类型)或0(值类型)，\",\"如果仅需要统计右表的个数或者其它属性，可以省略XX.DefaultIfEmpty, 但如果需要点出来右表的字段，则不能省。\"]},\"522\":{\"h\":\"3.5.2.1 linq实现\",\"t\":[\"查询所有用户对应的班级,因为用户和成绩一对多，所以会出现多条数据\",\" var list = (from u in _context.Users join sc in _context.Scores on u.Id equals sc.UserId into ulist from sco in ulist.DefaultIfEmpty() where u.Account != null //这个条件只是展示如何添加条件 select new { UserId = u.Id, Account = u.Account, sco.CourseName }).ToList(); Console.WriteLine(JsonConvert.SerializeObject(list)); var list = (from g in _groupdefRep.EntitiesAsNoTracking join cl in _clouduserRep.EntitiesAsNoTracking on g.CloudId equals cl.Id into glist from c in glist.DefaultIfEmpty() where g.Enabled.Value == 1 && (cloudId == 0 || g.CloudId == cloudId) orderby c.Id, g.GroupName select new { Gid = g.Id, Name = c == null ? g.GroupName : c.CloudName }).ToList(); \",\"可以使用：string.IsNullOrEmpty 不能使用：string.IsNullOrWhiteSpace\",\"生成SQL\",\" SELECT `u`.`Id` AS `UserId`, `u`.`Account`, `s`.`CourseName` FROM `user` AS `u` LEFT JOIN `score` AS `s` ON `u`.`Id` = `s`.`UserId` \",\"结果\",\"img\",\"如果要查询成绩，应该这么写，上面那个写法会直接报错， Nullable object must have a value\",\"img\"]},\"523\":{\"h\":\"3.5.3 GroupJoin\",\"t\":[\"GroupJoin操作符常应用于返回“主键对象-外键对象集合”形式的查询，例如“用户信息-此用户下所有科目成绩”\",\" var list = _context.Users.Where(t => t.Account != null) .GroupJoin(_context.Scores, u => u.Id, sc => sc.UserId, (u, sc) => new { u.Account, u.PassWord, Scores = sc }).ToList(); Console.WriteLine(JsonConvert.SerializeObject(list)); \",\"该代码会提示错误，原因如：https://docs.microsoft.com/zh-cn/ef/core/querying/client-eval\"]},\"524\":{\"h\":\"3.5.4 GrouBy\",\"t\":[\"分组操作 根据用户分组，求科目数\",\" var list = (from sc in _context.Scores group sc by sc.UserId into g select new { g.Key, Count = g.Count() }).ToList(); Console.WriteLine(JsonConvert.SerializeObject(list)); var list2 = _context.Scores.GroupBy(sc => sc.UserId).Select(t => new { t.Key, Count = t.Count() }).ToList(); Console.WriteLine(JsonConvert.SerializeObject(list2)); \",\"生成SQL\",\"info: Microsoft.EntityFrameworkCore.Database.Command[20101] Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30'] SELECT `s`.`UserId` AS `Key`, COUNT(*) AS `Count` FROM `score` AS `s` GROUP BY `s`.`UserId` [{\\\"Key\\\":\\\"1395392302788120576\\\",\\\"Count\\\":2},{\\\"Key\\\":\\\"1395392303090110464\\\",\\\"Count\\\":2}] info: Microsoft.EntityFrameworkCore.Database.Command[20101] Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30'] SELECT `s`.`UserId` AS `Key`, COUNT(*) AS `Count` FROM `score` AS `s` GROUP BY `s`.`UserId` [{\\\"Key\\\":\\\"1395392302788120576\\\",\\\"Count\\\":2},{\\\"Key\\\":\\\"1395392303090110464\\\",\\\"Count\\\":2}] \"]},\"525\":{\"h\":\"3.6 查询是否存在\",\"t\":[\"简单查询是否存在\",\"var exist = await _templateFieldMappingRep.EntitiesAsNoTracking.AnyAsync(t => t.CluFieldId == 111); \",\"联表查询是否存在\",\"var existTitle = await (from templatefield in _templateFieldMappingRep.EntitiesAsNoTracking.Where(t => t.CluTemplateId == dto.CluTemplateId) from field in _conclusionTemplateFieldRep.EntitiesAsNoTracking.Where(t => t.FieldName == dto.FieldName) where templatefield.CluFieldId == field.CluFieldId select new { field.CluFieldId }).AnyAsync().ConfigureAwait(false); \"]},\"526\":{\"h\":\"4.1 基础添加\",\"t\":[\" _context.Movie.Add(movie); // or await _context.Movie.AddRangeAsync(movies) await _context.SaveChangesAsync(); \"]},\"527\":{\"h\":\"4.2 已经设置自增键的插入\",\"t\":[\"先关闭自增然后插入数据后再开启自增\",\" db.Database.OpenConnection(); db.Database.ExecuteSqlCommand(\\\"SET IDENTITY_INSERT [T_RoleInfor] ON\\\"); var r2 = new T_RoleInfor() { id = 123, roleName = \\\"管理员\\\", roleDescription = \\\"我是管理员\\\" }; db.Add(r2); int count2 = db.SaveChanges(); db.Database.ExecuteSqlCommand(\\\"SET ID ENTITY_INSERT [T_RoleInfor] OFF\\\"); \"]},\"528\":{\"h\":\"4.3 通过SQL添加\",\"t\":[\" var strSql2 = \\\"INSERT INTO `userinfo`(`Id`, `Account`, `PassWord`) VALUES (@id, @account, @password);\\\"; var parameter2 = new MySqlParameter[] { new MySqlParameter(\\\"@id\\\",\\\"22\\\"), new MySqlParameter(\\\"@account\\\",\\\"2222\\\"), new MySqlParameter(\\\"@password\\\",\\\"22222\\\") }; var flg = db.Database.ExecuteSqlRaw(strSql2, parameter2); // 调用存储过程 int n = db.Database.ExecuteSqlCommand(\\\"DoSome @id\\\", para);//参数化查询 \",\"2.x使用ExecuteSqlCommand，3.x使用ExecuteSqlRaw方法\",\" var movie = await _context.Movie.FirstOrDefaultAsync(m => m.ID == id); movie.Name=\\\"李思\\\"; await _context.SaveChangesAsync(); \",\" var movie = await _context.Movie.FirstOrDefaultAsync(m => m.ID == id); _context.Movie.Remove(movie); await _context.SaveChangesAsync(); \",\"官方例子：https://docs.microsoft.com/zh-cn/ef/core/dbcontext-configuration/\"]},\"529\":{\"h\":\"简介\",\"t\":[\"ORM(对象关系映射)：就是一种为了解决面向对象与关系数据库互不匹配现象的技术。通过描述对象和数据库之间映射的元数据，将程序中的对象自动持久化到关系数据库中。思想就是表实体和数据库表之间的相互转换。\",\"Orm的思想就是把表实体和数据库表直接相互转换。\",\"O代表的就是实体 m就是映射关系 r代表的是关系\",\"adonet ef是以adonet为基础所发展出来的对象关系\",\"实体框架ef是ado.net中的一组支持开发面向数据的软件应用程序的技术，是微软的一个orm框架。\",\"ef只是实现orm框架中的一种，还有linq 等\",\"只要是操作数据库，底层还是adonet\",\"优点\",\"提高了开发效率，通过ORM可以自动对试题对象与数据库中的Table进行字段与属性的映射。\",\"Orm提供了对数据库的映射，不用sql直接编码，可以像操作对象一样从数据库获取数据。\",\"缺点\",\"会牺牲程序的执行效率。\",\"https://mp.weixin.qq.com/s/L_-9TXQiPOxlJy72UkPCtA | SqlSugar、Freesql、Dos.ORM、EF、四种ORM框架的对比\"]},\"530\":{\"h\":\"实时通信-技术大乱斗\",\"t\":[\"现代应用程序的很多功能依赖于实时通信技术：\",\"聊天\",\"实时股票更新\",\"现场拍卖\",\"体育/新闻实时更新\",\"多人游戏\",\"位置服务\",\"进度条\",\"HTTP通信的核心一直没变，依旧是请求/响应模型，这给实时通信带来了根本性挑战。\",\"多年来，开发者一直在尝试以各种姿势规避HTTP障碍。 我们快速总结流行的几种技术，每种技术都有一个真实的轶事，以便于解释。\"]},\"531\":{\"h\":\"定期轮询\",\"t\":[\"带小孩徒步旅行？ 孩子们间隔1,2分钟就问：“我们到了吗？”，你的回答干脆友善，但询问/应答会持续出现。\",\" 客户端定期询问服务器是否有新信息， 显然这不是实时的，如果轮询间隔足够短，可能会有一点效果。\",\"定期轮询确实会导致客户端-服务器之间反复不必要的往返。\"]},\"532\":{\"h\":\"长轮询\",\"t\":[\"与你的孩子开启另一趟徒步旅程。 但这一次，当孩子询问， “我们到了吗？”，你只是保持沉默，一直到下一站（或者发脾气）才做出回应。\",\"img\",\"长轮询是轮询的一种高级形式，可满足实时通信的需要。\",\"客户端向服务器发出信息请求，服务器hold请求，直到发生值得关注的事情（或请求即将超时）。\",\"于此同时，客户端需要针对响应和超时进行编程，以立即发起另一个请求。这样确保客户端/服务器具有持续的Comet请求以接受实时响应。\",\"长轮询和轮询比起来，明显减少了很多不必要的http请求次数，相比之下节约了资源。长轮询的缺点在于，连接挂起也会导致资源的浪费。\",\"长轮询仍然很流行，但它通常需要在服务器和客户端自定义编程才能成功实现。\"]},\"533\":{\"h\":\"服务端发送事件 (SSE)\",\"t\":[\"你在电商上购物，勾选了推送复选框。 之后你每天都会收到三次营销邮件。\",\"img\",\"SSE是HTML5 新增的功能，SSE最大的特点就是不需要客户端发送请求，可以实现只要服务器端数据有更新，就可以马上发送到客户端。\",\"SSE很大程度上是从服务器到客户端的定向推送，客户端使用EventSource对象（HTML5标准）捕获来自服务器的流式通知。\"]},\"534\":{\"h\":\"WebSockets\",\"t\":[\"你首次去国外旅行，一旦与对方确认了语言，后续沟通就无障碍。\",\" WebSockets依赖于http1.1的持久连接机制，WebSockets握手阶段需要http，连接一旦建立，客户端和服务器端就处于平等的地位，可以全双工通信，不存在请求和响应的区别。\",\"以上技术可以解决HTTP障碍并促进实时通信。问题在于，大多数这些技术都需要开发人员的大量工作。 如果有一些框架可以消除通信的复杂性，让开发人员可以专注于构建实时应用程序，那岂不是很好吗？\"]},\"535\":{\"h\":\"SignalR是.NET技术栈成熟的实时通信框架。\",\"t\":[\"SignalR为服务器和客户端之间的双向远程过程调用（RPC）提供API，消除了实时通信的复杂性。\",\"SignalR提供了统一的API画布用于连接和客户端管理，以及进行扩展以处理增加的流量。 SignalR使用服务器端集线器的概念来帮助已连接客户端的实时通信和管理。服务器和客户端可以无缝地相互调用方法，这种交互方法是强类型的。 虽然默认使用基于文本的JSON格式，但SignalR还支持Messagepack协议-(二进制数据序列化/反序列化)，以提高效率。\",\"signalr是微软推出的标准框架， 目前我已知有node，golang的实现。\"]},\"536\":{\"h\":\"gRPC\",\"t\":[\"2015年推出的基于HTTP/2，专注于安全、数据压缩、更好的性能和更低的延迟。\",\"img\",\"gRPC是由Google开发的基于HTTP/2协议实现的高性能通用RPC框架。HTTP/2 的多路复用特性支撑了gRPC的流式传输能力。\",\"开箱即用的gRPC提供了丰富的功能，例如集成身份验证，双向流和流控制。\",\"gRPC自动为各种语言和平台生成跨平台客户端和服务器绑定代码。gRPC服务的定义和信息交换的格式是Protocol Buffers（一种功能强大的二进制序列化/反序列化工具集和语言）。\",\"来源：博客猿马甲哥 https://www.cnblogs.com/JulianHuang/p/15379648.html\"]},\"537\":{\"h\":\"Centos7部署和守护进程\",\"t\":[\"本文是一个在centos系统部署.Net6的文章，本来内容基本上来源于作者艾三元，目的是对部署流程的一次熟悉以及对守护进程的一次学习。\",\"本文示例环境：centos7、VS2022、.Net6\",\"Linux服务器：通过Hyper-v启动的虚拟机(已经写有教程了)，系统使用CentOS-7-x86_64-Minimal-2009.iso\",\"dotNet6程序：https://gitee.com/AZRNG/my-example master分支\",\"因为我这是一台新的centos7服务器，所以我先手动将 Microsoft 包签名密钥添加到受信任密钥列表，并添加 Microsoft 包存储库。\",\"rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm \",\"升级所有包同时也升级软件和系统内核\",\"yum update \"]},\"538\":{\"h\":\"3.1 安装环境\",\"t\":[\"如果已经安装SDK或者运行时，那么使用以下命令来查看安装了哪些版本\",\"dotnet --list-sdks dotnet --list-runtimes \",\"我是新系统，所以直接就是命令找不到，如果你已经存在需要的版本就不用再安装了\",\"img\",\"安装.Net6 SDK\",\"sudo yum install dotnet-sdk-6.0 \",\"img\",\"过程中会有两个“y”的原因是，命令执行的中途停顿了，让你确认下是否进行安装，你要输入“y”确认安装才会执行安装，安装完后，我们输入如下命令看下是否安装成功\",\"img\"]},\"539\":{\"h\":\"3.2 拷贝项目\",\"t\":[\"环境已经装好，下面我们开始部署项目，需要先将项目拷贝到服务器上，可以直接拷贝发布好的项目到服务器\",\"使用编译器打开项目，然后右键项目发布，然后选择发布到文件夹、发布地址等\",\"img\",\"查看发布后的目录\",\"img\",\"然后通过MobaXTerm工具将文件拷贝到服务器上\"]},\"540\":{\"h\":\"3.3 部署项目\",\"t\":[\"查看我们的项目\",\"img\",\"运行命令启动文件\",\"dotnet xxx.dll \",\"img\",\"因为发布方式是Release，并且我配置的该模式不显示swagger，那么只能通过调用接口来测试是否发布成功。\",\"在服务器直接调用示例\",\"curl localhost:5000/api/Grade/GetGradeList \",\"img\"]},\"541\":{\"h\":\"3.4 配置Nginx托管\",\"t\":[\"安装nginx\",\"curl -o nginx.rpm http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm rpm -ivh nginx.rpm yum install nginx -- 启动nginx systemctl start nginx --置开机启动（linux宕机、重启会自动运行nginx不需要连上去输入命令） systemctl enable nginx \",\"img\"]},\"542\":{\"h\":\"3.5 配置防火墙\",\"t\":[\"开放80端口\",\"firewall-cmd --permanent --zone=public --add-port=80/tcp \",\"img\",\"重启防火墙以使配置即时生效：\",\"systemctl restart firewalld \",\"img\",\"测试nginx是否可以访问\",\"img\",\"到这里我们的nginx已经安装好了\"]},\"543\":{\"h\":\"3.6 配置Nginx对程序的转发\",\"t\":[\"修改nginx的default.conf文件\",\"vi /etc/nginx/conf.d/default.conf \",\"文件内容如下\",\"img\",\"需要修改server内容为\",\"server { listen 80; location / { proxy_pass http://localhost:5000; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection keep-alive; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; }} \",\"保存并退出，重新加载配置\",\"nginx -s reload \",\"再次运行ASP.NET Core应用程序\",\"img\",\"重新通过本地访问服务器地址\",\"img\",\"注意：如果这个时候提供502错误，这个问题是由于 SELinux 保护机制所导致，我们需要将 Nginx 添加至 SELinux 的白名单或者直接关闭SELinux 。\",\"到这里基本完成了部署，但是还存在着其他问题：\",\"ASP.NETCore应用程序运行在shell之中，如果关闭shell则会发现ASP.NET Core应用被关闭，从而导致应用无法访问，这种情况当然是我们不想遇到的，而且生产环境对这种情况是零容忍的。\",\"如果ASP.NET Core进程意外终止那么需要人为连进shell进行再次启动，往往这种操作都不够及时。\",\"如果服务器宕机或需要重启我们则还是需要连入shell进行启动。\",\"为了解决这些问题，我们需要有一个程序来监听ASP.NET Core 应用程序的状况。那么要解决这些问题，我们就必须要实现这么一个功能：如果ASP.NET Core 意外终止，那么我们要自动重启；如果服务器服务器重启后，我们要有个类似脚本命令一样，自动执行 dotnet 命令。现在正好有个基于 Python 开发的工具 Supervisor 可以解决我们上述问题。\"]},\"544\":{\"h\":\"3.7 配置Supervisor守护服务\",\"t\":[\"在应用程序停止运行的时候立即重新启动。这边我们用到了Supervisor这个工具，它是用 Python 开发的 Linux/Unix 系统下的一个进程管理工具。它可以使进程脱离终端，变为后台守护进程（daemon）。实时监控进程状态，异常退出时能自动重启。Supervisor 不支持任何版本的 Window 系统；\"]},\"545\":{\"h\":\"3.7.1 安装Supervisor\",\"t\":[\"yum -y install supervisor \",\"img\",\"原文的安装方式我可能是因为网络问题没有成功\",\"yum install python-setuptoolseasy_install supervisor \"]},\"546\":{\"h\":\"3.7.2 配置Supervisor\",\"t\":[\"运行supervisord 服务的时候，需要指定 Supervisor 配置文件，所以，先通过如下命令创建目录，以便让 supervisor 成功加载默认配置：\",\"mkdir /etc/supervisor \",\"目录创建成功后, 通过 echo_supervisord_conf 程序（用来生成初始配置文件,文件名可以自定义）来初始化一个配置文件：\",\"echo_supervisord_conf >/etc/supervisor/supervisord.conf \",\"通过vim命令修改创建好的supervisord.conf配置信息：\",\"vi /etc/supervisor/supervisord.conf \",\"最下面找到如下文本片段\",\";[include];files = relative/directory/*.ini \",\"修改为\",\"[include]files = /etc/supervisor/conf.d/*.ini \"]},\"547\":{\"h\":\"3.7.3 为我们部署的.NET Core添加进程配置文件\",\"t\":[\"创建配置文件NetByDocker.ini(文件名自定义)\",\"[program:NetByDocker] command=dotnet /root/publish/NetByDocker.dll directory=/root/publish/ autostart=true autorestart=true stderr_logfile=/var/log/NetByDocker.err.log stdout_logfile=/var/log/NetByDocker.out.log environment=ASPNETCORE_ENVIRONMENT=Production user=root stopsignal=INT \",\"在/etc/supervisor/目录下创建一个文件夹conf.d\",\"mkdir /etc/supervisor/conf.d/ \",\"将刚创建的配置文件NetByDocker.ini移到conf.d文件夹下\",\" 如果服务已经启动，则需要使用 supervisorctl reload 命令来使新的配置生效，当然，我们这里并没有启动，所以不需要这一步。\"]},\"548\":{\"h\":\"3.7.4 启动 Supervisor 服务\",\"t\":[\"supervisord -c /etc/supervisor/supervisord.conf \",\"启动服务后，我们可以检测看一下：\",\"ps -ef | grep NetByDocker.dll \",\"img\",\"这个时候, 我们已经不需要使用dotnet命令运行程序, 同样可以访问我们部署的.NET Core程序了。\",\"img\"]},\"549\":{\"h\":\"3.8 配置Supervisor开机启动\",\"t\":[\"进入/usr/lib/systemd/system/目录，并创建supervisord.service文件\",\"vi /usr/lib/systemd/system/supervisord.service \",\"修改文件\",\"[Unit] Description=Supervisor daemon [Service] Type=forking ExecStart=/usr/bin/supervisord -c/etc/supervisor/supervisord.conf ExecStop=/usr/bin/supervisorctl $OPTIONS shutdown ExecReload=/usr/bin/supervisorctl $OPTIONS reload KillMode=process Restart=on-failure RestartSec=42s \",\"设置开机启动\",\"systemctl enable supervisord.service \",\"启动supervisor进程\",\"systemctl start supervisord.service systemctl daemon-reload \",\"验证一下是否为开机启动\",\"systemctl is-enabled supervisord \",\"img\",\"重启，测试是否可以开机自启\",\"总结：这个supervisord牵涉到的知识还挺多，如果后续使用该方式部署生产环境的东西，那么还是需要深入学习一下关于它的知识。\",\"原文作者：艾三元\",\"地址：https://mp.weixin.qq.com/s/1x4cStEX3AIgsL9HvJHyCw\",\"centos安装.Net：https://docs.microsoft.com/zh-cn/dotnet/core/install/linux-centos\",\"Supervisor echo_supervisord_conf配置详解：https://www.cnblogs.com/toutou/p/supervisor.html\"]},\"550\":{\"h\":\"Docker部署详细流程\",\"t\":[\"自己从头开始走一遍docker部署.net的流程，作为一种学习总结，以及后续会写一些在该基础之上的文章。\",\"本次示例环境：vs2019、net5、docker、postman\",\"本次事例代码是用过vs2019创建的ASP.NET Core Web API项目\",\"image.png\",\"目标框架是.Net5，无需身份验证，不配置HTTPS(根据个人需求勾选)，启动Docker(我习惯于后期添加)，启用OpenAPI支持(添加swagger文档)\",\"image.png\"]},\"551\":{\"h\":\"默认配置\",\"t\":[\"创建完成后，我们查看项目目录为下\",\"image.png\",\"我们直接F5启动项目，发现直接跳转一个API文档页面\",\"image.png\",\"Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。\"]},\"552\":{\"h\":\"修改配置\",\"t\":[\"我基于个人习惯，我修改launchSettings.json文件，删除IIS配置，删除后如下所示：\",\"{ \\\"profiles\\\": { \\\"Net5ByDocker\\\": { \\\"commandName\\\": \\\"Project\\\", \\\"launchBrowser\\\": true, \\\"launchUrl\\\": \\\"swagger\\\", \\\"environmentVariables\\\": { \\\"ASPNETCORE_ENVIRONMENT\\\": \\\"Development\\\" }, \\\"dotnetRunMessages\\\": \\\"true\\\", \\\"applicationUrl\\\": \\\"http://localhost:5000\\\" } } } \",\"删除默认控制器，添加新的控制器UserController，在里面添加默认一些方法操作，如下\",\"基于个人习惯的操作，也可以不删除默认控制器\",\" [Route(\\\"api/[controller]/[action]\\\")] [ApiController] public class UserController : ControllerBase { public static List<string> userInfo = new(); [HttpGet] public IEnumerable<string> Get() { return userInfo; } [HttpPost] public List<string> Post([FromBody] string value) { if (!string.IsNullOrWhiteSpace(value)) userInfo.Add(value); return userInfo.ToList(); } [HttpDelete(\\\"{id}\\\")] public List<string> Delete(string id) { if (!string.IsNullOrWhiteSpace(id)) userInfo.Remove(id); return userInfo.ToList(); } } \",\"其他配置保持默认，启动项目\",\"image.png\"]},\"553\":{\"h\":\"添加dockerfile\",\"t\":[\"选中项目右键添加docker支持，本次部署在windows平台\",\"image.png\",\"拉取基础镜像和sdk，还原nuget包，重新生成，发布\",\"此时项目的目录结构为\",\"image.png\"]},\"554\":{\"h\":\"运行命令\",\"t\":[\"在文件资源管理器打开文件\",\"image.png\",\"在上层目录下运行cmd输入命令\",\"docker build -f .\\\\Net5ByDocker\\\\Dockerfile -t net5sample . \",\"在不同的目录下命令有些许差异，这点非常感谢我的朋友王老师\",\"image.png\",\"注意：可能部分朋友在这一步会拉取官方镜像比较慢，可以配置docker加速器使用\",\"通过docker客户端查看我们已经生成的镜像\",\"image.png\",\"本文通过Terminal软件执行命令\",\"docker run --name net5sampleone -d -p 8060:80 net5sample \",\"命令简述：\",\"-d 后台运行\",\"--name 容器名称\",\"-p 端口映射\",\"截至到这，我们已经把刚才的项目生成了容器，下面我们可以直接通过容器访问上面的项目\",\"通过浏览器访问地址：localhost:8060/swagger\",\"image.png\",\"懵逼！！！这个时候不是应该出来swagger文档的界面吗？难道我们部署的方式有问题？\",\"让我们访问下项目的接口\",\"image.png\",\"说明我们的项目运行是正常的，仔细查看swagger配置后发现，因为为了安全默认不允许发布后出来swagger文档\",\"image.png\",\"如果是测试环境或者特殊情况可以通过调整swagger配置位置来显示文档\"]},\"555\":{\"h\":\"通过Postman访问\"},\"556\":{\"h\":\"添加用户\",\"t\":[\"image.png\"]},\"557\":{\"h\":\"查询用户\",\"t\":[\"image.png\"]},\"558\":{\"h\":\"删除用户\",\"t\":[\"image.png\",\"再次运行查询接口数据已经为空了。\",\"https://docs.gitlab.com/ee/ci/environments/index.html\"]},\"559\":{\"h\":\"IIS部署DotNet5\",\"t\":[\"Internet Information Services (IIS) 是一种灵活、安全且可管理的 Web 服务器，用于托管 Web 应用（包括 ASP.NET Core）。虽然我们的程序可以跨平台了，不过还是有些服务是部署在windows服务器下的，下面我们就从头开始部署下我们的程序到IIS.\",\"本次示例环境：Windows Server 2012 R2 、vs2019、MySQL、.net5\"]},\"560\":{\"h\":\"支持平台\",\"t\":[\"Windows 7 或更高版本\",\"Windows Server 2012 R2 或更高版本\",\"本次代码将安装在Windows Server 2012 R2 版本上，感觉这个版本使用的公司还不少。\"]},\"561\":{\"h\":\"安装ASP.NET Core托管捆绑包\",\"t\":[\"安装的文件应该和项目对应的版本相同，现在我项目使用的.net版本是5，那么我应该也用5的，下载地址是：此处\",\"安装其他版本的请参考官网地址：.NET Core托管捆绑包\",\"捆绑包可安装 .NET Core 运行时、.NET Core 库和 ASP.NET Core 模块。 该模块允许 ASP.NET Core 应用在 IIS 运行。\",\"image.png\",\"安装后查看应用程序目录\",\"image.png\",\"新建一个net5 WebAPI程序，当前程序主要包含一个用户控制器(包含用户信息的增删改查)并且连接MySQL数据库。\",\"项目结构如下\",\"image.png\",\"源码地址：https://gitee.com/AZRNG/my-example 需要自取\",\"通过vs2019发布我们的项目，然后将发布后的项目拷贝到要部署的服务器上面。\",\"image.png\",\"发布后如下\",\"image.png\",\"为了正确设置 ASP.NET Core 模块，web.config 文件必须存在于已部署应用的根路径中。里面可以设置一些环境、日志等配置。\"]},\"562\":{\"h\":\"进程内托管(IIS HTTP 服务器)\",\"t\":[\"自 ASP.NET Core 3.0 起，默认情况下已为部署到 IIS 的所有应用启用进程内托管。\",\"进程内托管在与其 IIS 工作进程相同的进程中运行 ASP.NET Core 应用。 进程内承载相较进程外承载提供更优的性能，因为请求并不通过环回适配器进行代理，环回适配器是一个网络接口，用于将传出的网络流量返回给同一计算机。\",\"image\",\"该图说明了 IIS、ASP.NET Core 模块和进程内托管的应用之间的关系\",\"显式配置进行内托管，需要在项目文件(.csproj)中增加如下配置\",\"<PropertyGroup> <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel> </PropertyGroup> \"]},\"563\":{\"h\":\"进程外托管(Kestrel服务器)\",\"t\":[\"由于运行 ASP.NET Core 进程与 IIS 工作进程分开，所以ASP.NET Core 模块会负责进程管理。\",\"image\",\"该图说明了 IIS、ASP.NET Core 模块和进程外托管的应用之间的关系\",\"进程外托管配置，在项目文件 ( .csproj) 中将 <AspNetCoreHostingModel> 属性的值设置为 OutOfProcess\",\"<PropertyGroup> <AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel> </PropertyGroup> \",\"关于两种托管方式的差异：此处\",\"将项目进行发布，然后拷贝到我们的服务器一个文件夹内。\",\"打开IIS添加网站，选择物理路径为我们项目文件\",\"image.png\",\"修改应用程序池为无托管模式\",\"image.png\",\"启动程序转到swagger页面\",\"image.png\",\"因为当前我并没有连接数据库，直接调用接口应该报错，我们看下错误日志。启动输出日志\",\"image.png\",\"说明我们项目已经部署成功了\",\"image.png\",\"如果出现了错误可以查看点此处查看常见错误解决方案：此处\",\"题外话：当初部署2.1版本时候，windows server 2012r2需要打好几个补丁，并且需要重启多次，没想到这次安装net5这么顺利(服务器是从朋友那借的，我自己的是linux)，如果你所在公司需要部署.net，还是推荐linux进行部署。\",\"https://docs.microsoft.com/zh-cn/aspnet/core/host-and-deploy/iis/?view=aspnetcore-5.0\"]},\"564\":{\"h\":\"部署之Supervisor基础\",\"t\":[\"Supervisor是一个进程管理工具，当进程中断的时候Supervisor能自动重新启动它。可以运行在各种类unix的机器上，supervisor就是用Python开发的一套通用的进程管理程序，能将一个普通的命令行进程变为后台daemon，并监控进程状态，异常退出时能自动重启。\",\"yum -y install supervisor \",\"### 查看supervisorctl支持的命令 # supervisorctl help default commands (type help <topic>): ===================================== add exit open reload restart start tail avail fg pid remove shutdown status update clear maintail quit reread signal stop version ### 查看当前运行的进程列表 # supervisorctl status \",\"update 更新新的配置到supervisord（不会重启原来已运行的程序）\",\"reload，载入所有配置文件，并按新的配置启动、管理所有进程（会重启原来已运行的程序）\",\"start xxx: 启动某个进程\",\"restart xxx: 重启某个进程\",\"stop xxx: 停止某一个进程(xxx)，xxx为[program:theprogramname]里配置的值\",\"stop groupworker: 重启所有属于名为groupworker这个分组的进程(start,restart同理)\",\"stop all，停止全部进程，注：start、restart、stop都不会载入最新的配置文\",\"reread，当一个服务由自动启动修改为手动启动时执行一下就ok\",\"echo_supervisord_conf详解：\",\"[root@centos-011 ~ 07:50:00]#cat /etc/supervisord.conf.bak ; Sample supervisor config file. [unix_http_server] file=/var/run/supervisor/supervisor.sock ; socket 路径 ;chmod=0700 ; socket 文件的权限 ;chown=nobody:nogroup ; socket 所属用户及组 ;username=user ; 用户名 ;password=123 ; 密码 ;[inet_http_server] ; 是否启用服务，默认是关闭的（启用的话可以看到supervisor 管理的服务状态） ;port=127.0.0.1:9001 ; 监听的IP及端口 ;username=user ; 用户名 ;password=123 ; 密码 [supervisord] ; supervisord 全局配置 logfile=/var/log/supervisor/supervisord.log ; supervisor 日志路径 logfile_maxbytes=50MB ; 单个日志文件最大数 logfile_backups=10 ; 保留多少个日志文件（默认10个） loglevel=info ; (log level;default info; others: debug,warn,trace) pidfile=/var/run/supervisord.pid ; pid 文件路径 nodaemon=false ; 启动是否丢到前台，设置为false ，表示以daemon 的方式启动 minfds=1024 ; 最小文件打开数，对应系统limit.conf 中的nofile ,默认最小为1024，最大为4096 minprocs=200 ; 最小的进程打开数，对应系统的limit.conf 中的nproc,默认为200 ;umask=022 ; (process file creation umask;default 022) ;user=chrism ; 启动supervisord 服务的用户，默认为root ;identifier=supervisor ; (supervisord identifier, default is 'supervisor') ;directory=/tmp ; 这里的目录指的是服务的工作目录 ;nocleanup=true ; (don't clean up tempfiles at start;default false) ;childlogdir=/tmp ; ('AUTO' child log dir, default $TEMP) ;environment=KEY=value ; (key value pairs to add to environment) ;strip_ansi=false ; (strip ansi escape codes in logs; def. false) ; the below section must remain in the config file for RPC ; (supervisorctl/web interface) to work, additional interfaces may be ; added by defining them in separate rpcinterface: sections [rpcinterface:supervisor] supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface [supervisorctl] serverurl=unix:///var/run/supervisor/supervisor.sock ; use a unix:// URL for a unix socket ;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket ;username=chris ; should be same as http_username if set ;password=123 ; should be same as http_password if set ;prompt=mysupervisor ; cmd line prompt (default \\\"supervisor\\\") ;history_file=~/.sc_history ; use readline history if available ; The below sample program section shows all possible program subsection values, ; create one or more 'real' program: sections to be able to control them under ; supervisor. ;[program:theprogramname] ; 定义一个守护进程 ，比如下面的elasticsearch ;command=/bin/cat ; 启动程序使用的命令，可以是绝对路径或者相对路径 ;process_name=%(program_name)s ; 一个python字符串表达式，用来表示supervisor进程启动的这个的名称，默认值是%(program_name)s ;numprocs=1 ; Supervisor启动这个程序的多个实例，如果numprocs>1，则process_name的表达式必须包含%(process_num)s，默认是1 ;directory=/tmp ; supervisord在生成子进程的时候会切换到该目录 ;umask=022 ; umask for process (default None) ;priority=999 ; 权重，可以控制程序启动和关闭时的顺序，权重越低：越早启动，越晚关闭。默认值是999 ;autostart=true ; 如果设置为true，当supervisord启动的时候，进程会自动启动 ;autorestart=true ; 设置为随 supervisord 重启而重启，值可以是false、true、unexpected。false：进程不会自动重启 ;startsecs=10 ; 程序启动后等待多长时间后才认为程序启动成功，默认是10秒 ;startretries=3 ; supervisord尝试启动一个程序时尝试的次数。默认是3 ;exitcodes=0,2 ; 一个预期的退出返回码，默认是0,2。 ;stopsignal=QUIT ; 当收到stop请求的时候，发送信号给程序，默认是TERM信号，也可以是 HUP, INT, QUIT, KILL, USR1, or USR2 ;stopwaitsecs=10 ; 在操作系统给supervisord发送SIGCHILD信号时等待的时间 ;user=chrism ; 如果supervisord以root运行，则会使用这个设置用户启动子程序 ;redirect_stderr=true ; 如果设置为true，进程则会把标准错误输出到supervisord后台的标准输出文件描述符 ;stdout_logfile=/a/path ; 把进程的标准输出写入文件中，如果stdout_logfile没有设置或者设置为AUTO，则supervisor会自动选择一个文件位置 ;stdout_logfile_maxbytes=1MB ; 标准输出log文件达到多少后自动进行轮转，单位是KB、MB、GB。如果设置为0则表示不限制日志文件大小 ;stdout_logfile_backups=10 ; 标准输出日志轮转备份的数量，默认是10，如果设置为0，则不备份 ;stdout_capture_maxbytes=1MB ; 当进程处于stderr capture mode模式的时候，写入FIFO队列的最大bytes值，单位可以是KB、MB、GB ;stdout_events_enabled=false ; 如果设置为true，当进程在写它的stderr ;stderr_logfile=/a/path ; 把进程的错误日志输出一个文件中，除非redirect_stderr参数被设置为true ;stderr_logfile_maxbytes=1MB ; 错误log文件达到多少后自动进行轮转，单位是KB、MB、GB。如果设置为0则表示不限制日志文件大小 ;stderr_logfile_backups=10 ; 错误日志轮转备份的数量，默认是10，如果设置为0，则不备份 ;stderr_capture_maxbytes=1MB ; 当进程处于stderr capture mode模式的时候，写入FIFO队列的最大bytes值，单位可以是KB、MB、GB ;stderr_events_enabled=false ; 如果设置为true，当进程在写它的stderr到文件描述符的时候，PROCESS_LOG_STDERR事件会被触发 ;environment=A=1,B=2 ; 一个k/v对的list列表 ;serverurl=AUTO ; 是否允许子进程和内部的HTTP服务通讯，如果设置为AUTO，supervisor会自动的构造一个url ; The below sample eventlistener section shows all possible ; eventlistener subsection values, create one or more 'real' ; eventlistener: sections to be able to handle event notifications ; sent by supervisor. #这个地方是自定义一个守护进程 [program:elasticsearch] ; 定义一个守护进程 elasticsearch environment=ES_HOME=/usr/local/elasticsearch ; 设置ES_HOME 环境变量 user=elk ; 启动elasticsearch 的用户 directory=/usr/local/elasticsearch ; 进入到这个目录中 command=/usr/local/elasticsearch/bin/elasticsearch ; 执行启动命令 numprocs=1 ; Supervisor启动这个程序的多个实例，如果numprocs>1，则process_name的表达式必须包含%(process_num)s，默认是1 autostart=true ; 设置为随 supervisord 启动而启动 autorestart=true ; 设置为随 supervisord 重启而重启 startretries=3 ; 设置elasticsearch 重启的重试次数 priority=1 ; 权重，可以控制程序启动和关闭时的顺序，权重越低：越早启动，越晚关闭。默认值是999 ;[eventlistener:theeventlistenername] ;command=/bin/eventlistener ; the program (relative uses PATH, can take args) ;process_name=%(program_name)s ; process_name expr (default %(program_name)s) ;numprocs=1 ; number of processes copies to start (def 1) ;events=EVENT ; event notif. types to subscribe to (req'd) ;buffer_size=10 ; event buffer queue size (default 10) ;directory=/tmp ; directory to cwd to before exec (def no cwd) ;umask=022 ; umask for process (default None) ;priority=-1 ; the relative start priority (default -1) ;autostart=true ; start at supervisord start (default: true) ;autorestart=unexpected ; restart at unexpected quit (default: unexpected) ;startsecs=10 ; number of secs prog must stay running (def. 1) ;startretries=3 ; max # of serial start failures (default 3) ;exitcodes=0,2 ; 'expected' exit codes for process (default 0,2) ;stopsignal=QUIT ; signal used to kill process (default TERM) ;stopwaitsecs=10 ; max num secs to wait b4 SIGKILL (default 10) ;user=chrism ; setuid to this UNIX account to run the program ;redirect_stderr=true ; redirect proc stderr to stdout (default false) ;stdout_logfile=/a/path ; stdout log path, NONE for none; default AUTO ;stdout_logfile_maxbytes=1MB ; max # logfile bytes b4 rotation (default 50MB) ;stdout_logfile_backups=10 ; # of stdout logfile backups (default 10) ;stdout_events_enabled=false ; emit events on stdout writes (default false) ;stderr_logfile=/a/path ; stderr log path, NONE for none; default AUTO ;stderr_logfile_maxbytes=1MB ; max # logfile bytes b4 rotation (default 50MB) ;stderr_logfile_backups ; # of stderr logfile backups (default 10) ;stderr_events_enabled=false ; emit events on stderr writes (default false) ;environment=A=1,B=2 ; process environment additions ;serverurl=AUTO ; override serverurl computation (childutils) ; The below sample group section shows all possible group values, ; create one or more 'real' group: sections to create \\\"heterogeneous\\\" ; process groups. ;[group:thegroupname] ; 服务组管理，可以将多个服务名写到这里管理(组名自定义） ;programs=progname1,progname2 ; 上面配置好的服务名，比如elasticsearch,kibana,logstash ;priority=999 ; the relative start priority (default 999) ; The [include] section can just contain the \\\"files\\\" setting. This ; setting can list multiple files (separated by whitespace or ; newlines). It can also contain wildcards. The filenames are ; interpreted as relative to this file. Included files *cannot* ; include files themselves. [include] files = supervisord.d/*.ini \",\"要部署的程序test_one配置文件\",\"[program:test_one] command=java -jar /data/smallvideo/supervisor/taskApp-exec.jar TaskTestOne ; 被监控的进程路径 priority=1 ; 数字越高，优先级越高 numprocs=1 ; 启动几个进程 autostart=true ; 随着supervisord的启动而启动 autorestart=true ; 自动重启 startretries=10 ; 启动失败时的最多重试次数 exitcodes=0 ; 正常退出代码 stopsignal=KILL ; 用来杀死进程的信号 stopwaitsecs=10 ; 发送SIGKILL前的等待时间 redirect_stderr=true ; 重定向stderr到stdout \",\"supervisor配置文件详解\",\"- command：启动程序使用的命令，可以是绝对路径或者相对路径 - process_name：一个python字符串表达式，用来表示supervisor进程启动的这个的名称，默认值是%(program_name)s - numprocs：Supervisor启动这个程序的多个实例，如果numprocs>1，则process_name的表达式必须包含%(process_num)s，默认是1 - numprocs_start：一个int偏移值，当启动实例的时候用来计算numprocs的值 - priority：权重，可以控制程序启动和关闭时的顺序，权重越低：越早启动，越晚关闭。默认值是999 - autostart：如果设置为true，当supervisord启动的时候，进程会自动重启。 - autorestart：值可以是false、true、unexpected。false：进程不会自动重启，unexpected：当程序退出时的退出码不是exitcodes中定义的时，进程会重启，true：进程会无条件重启当退出的时候。 - startsecs：程序启动后等待多长时间后才认为程序启动成功 - startretries：supervisord尝试启动一个程序时尝试的次数。默认是3 - exitcodes：一个预期的退出返回码，默认是0,2。 - stopsignal：当收到stop请求的时候，发送信号给程序，默认是TERM信号，也可以是 HUP, INT, QUIT, KILL, USR1, or USR2。 - stopwaitsecs：在操作系统给supervisord发送SIGCHILD信号时等待的时间 - stopasgroup：如果设置为true，则会使supervisor发送停止信号到整个进程组 - killasgroup：如果设置为true，则在给程序发送SIGKILL信号的时候，会发送到整个进程组，它的子进程也会受到影响。 - user：如果supervisord以root运行，则会使用这个设置用户启动子程序 - redirect_stderr：如果设置为true，进程则会把标准错误输出到supervisord后台的标准输出文件描述符。 - stdout_logfile：把进程的标准输出写入文件中，如果stdout_logfile没有设置或者设置为AUTO，则supervisor会自动选择一个文件位置。 - stdout_logfile_maxbytes：标准输出log文件达到多少后自动进行轮转，单位是KB、MB、GB。如果设置为0则表示不限制日志文件大小 - stdout_logfile_backups：标准输出日志轮转备份的数量，默认是10，如果设置为0，则不备份 - stdout_capture_maxbytes：当进程处于stderr capture mode模式的时候，写入FIFO队列的最大bytes值，单位可以是KB、MB、GB - stdout_events_enabled：如果设置为true，当进程在写它的stderr到文件描述符的时候，PROCESS_LOG_STDERR事件会被触发 - stderr_logfile：把进程的错误日志输出一个文件中，除非redirect_stderr参数被设置为true - stderr_logfile_maxbytes：错误log文件达到多少后自动进行轮转，单位是KB、MB、GB。如果设置为0则表示不限制日志文件大小 - stderr_logfile_backups：错误日志轮转备份的数量，默认是10，如果设置为0，则不备份 - stderr_capture_maxbytes：当进程处于stderr capture mode模式的时候，写入FIFO队列的最大bytes值，单位可以是KB、MB、GB - stderr_events_enabled：如果设置为true，当进程在写它的stderr到文件描述符的时候，PROCESS_LOG_STDERR事件会被触发 - environment：一个k/v对的list列表 - directory：supervisord在生成子进程的时候会切换到该目录 - umask：设置进程的umask - serverurl：是否允许子进程和内部的HTTP服务通讯，如果设置为AUTO，supervisor会自动的构造一个url \",\"作 者：请叫我头头哥\\n出 处：http://www.cnblogs.com/toutou/\"]},\"565\":{\"h\":\"Curl Http请求\"},\"566\":{\"h\":\"POST请求\"},\"567\":{\"h\":\"application/x-www-form-urlencoded\",\"t\":[\"curl localhost:3000/api/basic -X POST -d 'hello=world'\"]},\"568\":{\"h\":\"multipart/form-data(最常见的一种POST请求)\",\"t\":[\"curl localhost:3000/api/multipart -F raw=@raw.data -F hello=world\"]},\"569\":{\"h\":\"application/json\",\"t\":[\"这种一般设计到文件上传，后端对这种类型的请求处理也复杂一些\",\"curl localhost:3000/api/json -X POST -d '{\\\"hello\\\": \\\"world\\\"}' --header \\\"Content-Type: application/json\\\"\",\"跟发起 application/x-www-form-urlencoded 类型的 POST 请求类似，-d 参数值是 JSON 字符串，并且多了一个 Content-Type: application/json 指定发送内容的格式。\"]},\"570\":{\"h\":\"简单动态加载示例\",\"t\":[\"在之前学习到如何将一个类库中的WebApi加载，那么本文就刚好用到了。\",\"实现一个可以动态加载，动态更新服务的插件需求。插件的好处是什么？我们可以编写代码来动态去替换或者增加现有服务接口等，使用得当的情况下风险小、操作方便。\",\"AssemblyLoadContext 类是在 .NET Core 中引入的，在 .NET Framework 中不可用。在.Net5+和.NetCore的应用程序中均隐式使用它，它是运行时的提供程序，用来定位和加载依赖项，只要加载了依赖项，就会调用它的示例来定位该依赖项目。\"]},\"571\":{\"h\":\"版本控制\",\"t\":[\"单个 AssemblyLoadContext 实例限制为每个简单程序集名称只加载 Assembly 的一个版本。 当针对已加载同名程序集的 AssemblyLoadContext 实例解析程序集引用时，会将请求的版本与加载的版本进行比较。 仅当加载的版本等于或高于所请求的版本时，解析才会成功。\",\"本文示例环境：VS2022、.Net6\",\"思路：通过将插件文件(类库的dll)保存在文件存储等地方，然后在项目启动的时候下载插件，然后加载到当前宿主的服务内进行实现需求。\",\"注意：下面的示例为毛坯房版本\"]},\"572\":{\"h\":\"准备\"},\"573\":{\"h\":\"创建插件基础类库\",\"t\":[\"首先我们需要先创建一个插件基础服务的类库DefaultPluginsExternalProvider，为了提高该类库扩展性，我们引用框架\",\"<ItemGroup> <FrameworkReference Include=\\\"Microsoft.AspNetCore.App\\\" /> </ItemGroup> \",\"该类库被插件服务所引用，该类库中包含一个插件服务基础类IProviderBase接口，内容如下\",\"/// <summary> /// 插件提供基础类 /// </summary> public interface IProviderBase { /// <summary> /// 插件名称 /// </summary> string Name { get; } /// <summary> /// 插件显示名 /// </summary> string DisplayName { get; } /// <summary> /// 插件描述 /// </summary> string Description { get; } /// <summary> /// 插件服务注册 /// </summary> /// <param name=\\\"services\\\">ioc容器</param> /// <param name=\\\"configuration\\\">插件配置</param> void PluginsConfigureService(IServiceCollection services, IConfiguration configuration); } \",\"这里的PluginsConfigureService用来注册插件的服务，然后再创建保存插件信息的类Plugin\",\"/// <summary> /// 插件服务类(保存插件加载信息) /// </summary> public class Plugin { /// <summary> /// 插件地址信息 /// </summary> public string Path { get; set; } /// <summary> /// 程序集名称 /// </summary> public string AssemblyName { get; set; } /// <summary> /// 程序集版本 /// </summary> public string Version { get; set; } /// <summary> /// 默认程序集 /// </summary> public Assembly Assembly { get; set; } /// <summary> /// 服务提供基础类 /// </summary> public IProviderBase ProvideInstance { get; set; } /// <summary> /// 错误信息 /// </summary> public string Error { get; set; } /// <summary> /// 配置 /// </summary> public string Configuration { get; set; } /// <summary> /// 插件元数据信息 /// </summary> public PluginMatadata Matadata { get; set; } } \",\"增加一个插件元数据信息的类\",\"/// <summary> /// 插件元数据配置 /// </summary> public class PluginMatadata { /// <summary> /// 名称 /// </summary> [JsonPropertyName(\\\"name\\\")] public string Name { get; set; } /// <summary> /// 显示名 /// </summary> [JsonPropertyName(\\\"displayName\\\")] public string DisplayName { get; set; } /// <summary> /// 描述 /// </summary> [JsonPropertyName(\\\"description\\\")] public string Description { get; set; } } \",\"该类用来映射上面IProviderBase实现类中配置的信息。\",\"img\"]},\"574\":{\"h\":\"创建宿主程序\",\"t\":[\"新建一个.NetCoreWebApi程序DefaultSample，然后创建插件加载帮助类PluginHelper\",\"/// <summary> /// 插件帮助类 /// </summary> public static class PluginHelper { /// <summary> /// 获取插件加载的信息 /// </summary> /// <param name=\\\"rootPath\\\"></param> /// <returns></returns> /// <exception cref=\\\"ArgumentException\\\"></exception> public static List<Plugin> GetPluginLoaders(string rootPath) { var loaders = new List<Plugin>(); Directory.CreateDirectory(Path.Combine(rootPath, \\\"Plugins\\\")); var pluginsDir = Path.Combine(rootPath, \\\"Plugins\\\"); foreach (var dir in Directory.GetDirectories(pluginsDir)) { var dirName = Path.GetFileName(dir); var pluginDll = Path.Combine(dir, dirName + \\\".dll\\\"); if (!File.Exists(pluginDll)) { continue; } var context = new AssemblyLoadContext(pluginDll); using var stream = File.OpenRead(pluginDll); var assembly = context.LoadFromStream(stream); var plugin = new Plugin { AssemblyName = assembly.GetName().Name, Version = assembly.GetName().Version.ToString(), Path = dir, Assembly = assembly, }; try { // 判断插件中是否存在IProviderBase的实现类 var instance = assembly.GetTypes() .Where(t => typeof(IProviderBase).IsAssignableFrom(t) && !t.IsAbstract) .Select(x => Activator.CreateInstance(x) as IProviderBase) .FirstOrDefault(); if (instance == null) { throw new ArgumentException(\\\"No Matching Plugin Entry\\\"); } plugin.ProvideInstance = instance; plugin.Matadata = new PluginMatadata { Name = instance.Name, DisplayName = instance.DisplayName, Description = instance.Description }; var configurationRaw = \\\"\\\"; if (File.Exists(Path.Join(dir, \\\"configurations.json\\\"))) { using var sr = new StreamReader(Path.Join(dir, \\\"configurations.json\\\")); configurationRaw = sr.ReadToEnd(); } plugin.Configuration = configurationRaw; loaders.Add(plugin); } catch (Exception ex) { plugin.Error = ex.Message; Console.WriteLine($\\\"插件 {plugin.AssemblyName} 不兼容于当前版本，请升级到该插件的最新版本, Error: {ex.Message}\\\"); } } return loaders; } } \",\"在项目启动的时候加载插件\",\"var builder = WebApplication.CreateBuilder(args); // Add services to the container. builder.Services.AddControllers(); // Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle builder.Services.AddEndpointsApiExplorer(); builder.Services.AddSwaggerGen(); var loaders = PluginHelper.GetPluginLoaders(builder.Environment.ContentRootPath); /* 注册当前宿主服务的服务 */ // 读取插件 foreach (var p in loaders) { var pluginInstance = p.ProvideInstance; // 映射配置文件 var configurationRoot = (new ConfigurationBuilder()).SetBasePath(p.Path).AddJsonFile(\\\"configurations.json\\\").Build(); pluginInstance?.PluginsConfigureService(builder.Services, configurationRoot); Console.WriteLine($\\\"加载插件{p.AssemblyName} {p.Matadata.Name} 成功,版本号:{p.Version} \\\"); } var app = builder.Build(); \",\"完整结构如下\",\"img\"]},\"575\":{\"h\":\"动态替换服务\",\"t\":[\"在.NetCore中，我们都是通过IOC容器注册服务然后通过构造函数等来获取服务，那么我们也可以通过依赖注入的方式替换宿主服务默认注册的实现，来实现替换的功能。\",\"在上面的.NetCore服务中来实现一个发送消息通知的接口，因为我们要使用插件来替换默认实现，所以需要将接口类放在一个共享的类库中，新建类库DefaultSample.IService，在该类库中新建服务IMsgService\",\"/// <summary> /// 消息服务 /// </summary> public interface IMsgService { /// <summary> /// 发送消息服务 /// </summary> /// <returns></returns> bool SendMsg(); } \",\"完整结构如下\",\"img\",\"在宿主程序中引用该类库并且创建消息通知的实现类DefaultMsgService\",\"public class DefaultMsgService : IMsgService { private readonly ILogger<DefaultMsgService> _logger; public DefaultMsgService(ILogger<DefaultMsgService> logger) { _logger = logger; } public bool SendMsg() { _logger.LogInformation(\\\"使用邮箱发送消息成功\\\"); return true; } } \",\"新建控制器MsgController，来创建WebApi接口SendMsg\",\"[ApiController] [Route(\\\"[controller]\\\")] public class MsgController : ControllerBase { private readonly IMsgService _msgService; public MsgController(IMsgService msgService) { _msgService = msgService; } /// <summary> /// 发送消息通知 /// </summary> /// <returns></returns> [HttpGet(\\\"sendMsg\\\")] public bool SendMsg() { return _msgService.SendMsg(); } } \",\"启动项目调用该接口输出信息，呕吼居然是错误信息\",\"System.InvalidOperationException: Unable to resolve service for type 'DefaultSample.IService.IMsgService' while attempting to activate 'DefaultSample.Controllers.MsgController'.\",\"居然是忘了注入服务了，那么我们在program中注入短信服务\",\"/* 注册当前宿主服务的服务 */ builder.Services.AddScoped<IMsgService, DefaultMsgService>(); \",\"再次启动调用接口可以看到日志中输出了：使用邮箱发送消息成功\",\"这个时候，我们正常的服务已经好了，那么下面开始编写插件来替换默认的服务，新建类库DefaultPluginsExternalProvider.Sample1来实现短信消息通知的功能，在该项目中，继承自类库DefaultPluginsExternalProvider和DefaultSample.IService(这里可以做成nuget包)，并且默认应该包含以下文件\",\"configurations.json：当前插件的配置文件\",\"PluginProvider：插件的入口程序，继承自接口IProviderBase\",\"{插件名}Options：用来将configurations的配置映射到模型\",\"因为我们要发送短信，那么就弄一个短信服务的伪配置吧，修改configurations.json文件\",\"{ \\\"SmsUrl\\\": \\\"http://www.baidu.com\\\" } \",\"修改Sample1Options文件\",\"/// <summary> /// 配置文件 /// </summary> public class Sample1Options { /// <summary> /// 短信服务地址 /// </summary> public string SmsUrl { get; set; } } \",\"修改PluginProvider类的文件内容\",\"public class PluginProvider : IProviderBase { public string Name => \\\"Sample1\\\"; public string DisplayName => \\\"短信服务\\\"; public string Description => \\\"发送短信服务\\\"; public void PluginsConfigureService(IServiceCollection services, IConfiguration configuration) { // 固定写法 services.AddOptions(); services.Configure<Sample1Options>(options => configuration.Bind(options)); //自定义服务 services.AddScoped<IMsgService, SmsService>(); } } \",\"增加发送短信的实现类SmsService\",\"public class SmsService : IMsgService { private readonly ILogger<SmsService> _logger; private readonly Sample1Options _sample1Options; public SmsService(ILogger<SmsService> logger, IOptions<Sample1Options> options) { _logger = logger; _sample1Options = options.Value; } public bool SendMsg() { _logger.LogInformation($\\\"使用短信发送消息,服务地址 {_sample1Options.SmsUrl}\\\"); return true; } } \",\"完整项目结构如下\",\"img\",\"然后将该类库Release发布，并拷贝configurations.json、DefaultPluginsExternalProvider.Sample1.dll文件，并且宿主服务的Plugins文件夹下新建DefaultPluginsExternalProvider.Sample1文件夹，拷贝插件文件放到该目录下，如图所示\",\"img\",\"这个时候启动宿主项目并调用接口我们可以看到输出信息为：使用短信发送消息,服务地址 http://www.baidu.com\",\"到此，动态替换服务功能完成。\"]},\"576\":{\"h\":\"动态增加接口\",\"t\":[\"有时候，我们需要实现另外开放一些对外提供的WebApi接口，那我该如何使用插件实现那？\",\"因为我们的插件基类已经引用了Microsoft.AspNetCore.App，所以我们直接在插件中创建控制器就可以了\",\"[ApiController] [Route(\\\"[controller]\\\")] public class TestController : ControllerBase { private readonly IMsgService _msgService; private readonly ILogger<TestController> _logger; public TestController(IMsgService msgService, ILogger<TestController> logger) { _msgService = msgService; _logger = logger; } /// <summary> /// 发送消息通知 /// </summary> /// <returns></returns> [HttpGet(\\\"sendMsg\\\")] public bool SendMsg() { _logger.LogInformation(\\\"我是插件中新添加的控制器\\\"); return _msgService.SendMsg(); } } \",\"项目结构如下\",\"img\",\"然后按照上面的步骤，重新发布，然后拷贝到宿主程序的插件目录下，然后按照之前文章的经验，修改宿主服务注册代码为\",\"var mvcBuilder = builder.Services.AddControllers(); // Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle builder.Services.AddEndpointsApiExplorer(); builder.Services.AddSwaggerGen(); var loaders = PluginHelper.GetPluginLoaders(builder.Environment.ContentRootPath); /* 注册当前宿主服务的服务 */ builder.Services.AddScoped<IMsgService, DefaultMsgService>(); // 读取插件 foreach (var p in loaders) { var loader = p.Assembly; // 注册控制器 mvcBuilder.AddApplicationPart(loader); var pluginInstance = p.ProvideInstance; // 映射配置文件 var configurationRoot = (new ConfigurationBuilder()).SetBasePath(p.Path).AddJsonFile(\\\"configurations.json\\\").Build(); pluginInstance?.PluginsConfigureService(builder.Services, configurationRoot); Console.WriteLine($\\\"加载插件{p.AssemblyName} {p.Matadata.Name} 成功,版本号:{p.Version} \\\"); } var app = builder.Build(); \",\"重点就是这一句：mvcBuilder.AddApplicationPart(loader);\",\"然后再启动项目后就可以看到插件中添加的控制器了\",\"img\",\"调用接口后会输出内容表示接口添加成功。\"]},\"577\":{\"h\":\"创建带依赖项的插件\",\"t\":[\"使用 System.Runtime.Loader.AssemblyDependencyResolver 类型来允许插件具有依赖项，在宿主项目新建文件PluginLoadContext\",\"/// <summary> /// 可以加载依赖项的AssemblyLoadContext /// </summary> public class PluginLoadContext : AssemblyLoadContext { private readonly AssemblyDependencyResolver _resolver; public PluginLoadContext(string pluginPath) { // 使用.net类库的路径构建的，她根据类库的deps.json文件将程序集和本机库解析为他们的相对路径 _resolver = new AssemblyDependencyResolver(pluginPath); } protected override Assembly Load(AssemblyName assemblyName) { string? assemblyPath = _resolver.ResolveAssemblyToPath(assemblyName); if (assemblyPath != null) { return LoadFromAssemblyPath(assemblyPath); } return null; } /// <summary> /// 加载非托管的dll /// </summary> /// <param name=\\\"unmanagedDllName\\\"></param> /// <returns></returns> protected override IntPtr LoadUnmanagedDll(string unmanagedDllName) { string? libraryPath = _resolver.ResolveUnmanagedDllToPath(unmanagedDllName); if (libraryPath != null) { return LoadUnmanagedDllFromPath(libraryPath); } return IntPtr.Zero; } } \",\"然后修改我们的PluginHelper文件中加载程序集的方法，修改为\",\"/// <summary> /// 加载程序集 /// </summary> /// <param name=\\\"pluginLocation\\\"></param> /// <returns></returns> private static Assembly LoadPlugin(string pluginLocation) { // 不能加载带依赖项的 //var context = new AssemblyLoadContext(Guid.NewGuid().ToString()); //using var stream = File.OpenRead(pluginLocation); //return context.LoadFromStream(stream); var loadContext = new PluginLoadContext(pluginLocation); return loadContext.LoadFromAssemblyName(new AssemblyName(Path.GetFileNameWithoutExtension(pluginLocation))); } var assembly = LoadPlugin(pluginDll); \",\"然后我们修改我们的插件项目(DefaultPluginsExternalProvider.Sample2)引用第三方包并设置项目配置为\",\"<PropertyGroup> <TargetFramework>net6.0</TargetFramework> <ImplicitUsings>enable</ImplicitUsings> <Nullable>enable</Nullable> <!--插件项目使用该配置，以便它们将其所有依赖项复制到 dotnet build 的输出中。 使用 dotnet publish 发布类库也会将其所有依赖项复制到发布输出--> <EnableDynamicLoading>true</EnableDynamicLoading> </PropertyGroup> <ItemGroup> <PackageReference Include=\\\"AzrngCommon\\\" Version=\\\"1.3.0-beta9\\\" /> </ItemGroup> <ItemGroup> <ProjectReference Include=\\\"..\\\\..\\\\share\\\\DefaultPluginsExternalProvider\\\\DefaultPluginsExternalProvider.csproj\\\"> <!--配置是否将该引用项目输出，如果输出那么就不是从上下文继承IProviderBase，会导致找不到IProviderBase--> <private>false</private> <!--如果PluginBase引用其他包，则当前元素也很重要。 此设置与Private的效果相同，但适用于 PluginBase 项目或它的某个依赖项可能包括的包引用--> <ExcludeAssets>runtime</ExcludeAssets> </ProjectReference> <ProjectReference Include=\\\"..\\\\..\\\\share\\\\DefaultSample.IService\\\\DefaultSample.IService.csproj\\\"> <private>false</private> <ExcludeAssets>runtime</ExcludeAssets> </ProjectReference> </ItemGroup> \",\"在该配置中，引用了一个第三方的包，并设置了ProjectReference，这时候生成项目，查看输出的dll已经不包含项目引用的dll文件\",\"img\",\"将该目录的dll文件拷贝到插件文件夹下，调该插件的接口，返回结果\",\"{ \\\"data\\\": true, \\\"isSuccess\\\": true, \\\"code\\\": \\\"200\\\", \\\"message\\\": \\\"success\\\", \\\"errors\\\": [] } \",\"该返回结构代表第三方包已经加载成功了。\",\"该文档甚至算不上是实现，应该说是算是一种思路吧，毕竟关于插件存储，插件管理等功能都未提供，在合适的使用插件确实会很方便。\",\".NET Core Web APi类库如何内嵌运行：https://mp.weixin.qq.com/s/FdSlY-5SKfaQ6XpUarPKfw\",\"使用插件创建.Net应用程序：https://learn.microsoft.com/zh-cn/dotnet/core/tutorials/creating-app-with-plugin-support\"]},\"578\":{\"h\":\"静态资源-基本设置\",\"t\":[\"静态文件都存储在Core Web根目录中。默认目录是<content_root>/wwwroot，但可通过 UseWebRoot方法更改访问目录。而content_root是指web项目的所有文件夹，包括bin和wwwroot文件夹。\"]},\"579\":{\"h\":\"简单配置\",\"t\":[\"在Configure方法中设置\",\"app.UseStaticFiles();//默认静态文件目录是wwwroot 特殊配置 app.UseStaticFiles(new StaticFileOptions() { ServeUnknownFileTypes = true }); \"]},\"580\":{\"h\":\"修改默认的静态文件目录\",\"t\":[\"在Configure方法中设置\",\"StaticFiles(app, env); \",\"StaticFiles方法\",\" /// <summary> /// 静态文件 /// </summary> /// <param name=\\\"app\\\"></param> /// <param name=\\\"env\\\"></param> /// <returns></returns> private void StaticFiles(IApplicationBuilder app, IWebHostEnvironment env) { //静态文件重载 app.UseStaticFiles(new StaticFileOptions { FileProvider = new PhysicalFileProvider(Path.Combine(env.ContentRootPath, \\\"Upload\\\")), //将目录切换到静态文件所在目录 RequestPath =new PathString(\\\"/fileupload\\\"), //虚拟路径用来访问静态文件 OnPrepareResponse = ctx => { const int cacheControl = 60;//设置缓存静态文件的时间 var headers = ctx.Context.Response.GetTypedHeaders(); headers.CacheControl = new CacheControlHeaderValue { MaxAge = TimeSpan.FromSeconds(cacheControl) }; } }); } \",\"我们在项目目录下的Upload文件夹下新建一个1.txt文件，这个时候我们启动项目，就可以通过地址：http://localhost:8001/fileupload/1.txt 获取文件的内容。\"]},\"581\":{\"h\":\"静态资源-自定义设置\",\"t\":[\"前文获取配置文件的时候，是获取默认的appsettings.json配置文件的配置，下面说明下如何进行自定义获取配置\"]},\"582\":{\"h\":\"1.1 构建独立的IConfiguration\",\"t\":[\"编写方法\",\" public static IConfigurationRoot LoadSettings(this IHostEnvironment env) { return new ConfigurationBuilder() .SetBasePath(AppDomain.CurrentDomain.BaseDirectory) .AddJsonFile(\\\"common.json\\\", optional: true, reloadOnChange: false) .AddJsonFile(\\\"appsettings.json\\\", optional: true, reloadOnChange: false) .AddJsonFile($\\\"appsettings.{env.EnvironmentName}.json\\\", optional: true, reloadOnChange: false) .AddEnvironmentVariables() .Build(); } \",\"在Startup构造函数的时候进行赋值替换IConfiguration\",\" private readonly IConfiguration _configuration; public Startup(IWebHostEnvironment env) { _configuration = env.LoadSettings(); } \",\"该操作添加的配置项，只在startup范围生效。\"]},\"583\":{\"h\":\"1.2 在Progrom全局自定义配置\",\"t\":[\" public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .ConfigureAppConfiguration((hostingContext, config) => { //config.Sources.Clear(); // 会清除所有配置提供程序 var env = hostingContext.HostingEnvironment; config.SetBasePath(env.ContentRootPath); config.AddJsonFile(\\\"devappsettings.json\\\", optional: false, reloadOnChange: true); }) .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }); \",\"注意：添加自定义文件的目录要注意，可能会存在因为目录问题所以找不到配置文件的情况。\",\"允许我们将一个应用程序配置直接配置到内存中，而不是像传统方式那样子必须制定一个物理文件。\",\" var builder = new ConfigurationBuilder(); var profileCollection = new Dictionary<string, string> { {\\\"AuthorProfile:FirstName\\\", \\\"Joydip\\\"}, {\\\"AuthorProfile:LastName\\\", \\\"Kanjilal\\\"}, {\\\"AuthorProfile:Address\\\", \\\"Hyderabad, India\\\"} }; builder.AddInMemoryCollection(profileCollection); Configuration = builder.Build(); \",\"目前发现的用途\",\" public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .ConfigureAppConfiguration((hostingContext, config) => { var builder = new ConfigurationBuilder(); var profileCollection = new Dictionary<string, string> { {\\\"AuthorProfile:FirstName\\\", \\\"Joydip\\\"}, {\\\"AuthorProfile:LastName\\\", \\\"Kanjilal\\\"}, {\\\"AuthorProfile:Address\\\", \\\"Hyderabad, India\\\"} }; builder.AddInMemoryCollection(profileCollection); config.AddConfiguration(builder.Build()); }) .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }); \",\"然后就可以通过IConfiguration实例去获取了。\",\"引用组件\",\"Microsoft.Extensions.Configuration.Json\",\" public class AppSettings { private static IConfiguration Configuration { get; set; } public AppSettings(IConfiguration configuration) { Configuration = configuration; } /// <summary> /// 封装要操作的字符 /// </summary> /// <param name=\\\"sections\\\"></param> /// <returns></returns> public static string GetValue(params string[] sections) { try { if (sections.Any()) return Configuration[string.Join(\\\":\\\", sections)]; } catch (Exception) { } return \\\"\\\"; } /// <summary> /// 递归获取配置信息数组 ///引用 Microsoft.Extensions.Configuration.Binder 包 /// </summary> /// <typeparam name=\\\"T\\\"></typeparam> /// <param name=\\\"sections\\\"></param> /// <returns></returns> public static List<T> App<T>(params string[] sections) { List<T> list = new List<T>(); Configuration.Bind(string.Join(\\\":\\\", sections), list); return list; } } \",\"参考自：https://gitee.com/laozhangIsPhi/Blog.Core\",\"ConfigureServices中配置\",\"services.AddSingleton(new AppSettings(Configuration)); \",\"获取指定配置\",\"var info = AppSettings.GetValue(\\\"Logging\\\", \\\"LogLevel\\\"); \"]},\"584\":{\"h\":\"简单使用-争议篇\",\"t\":[\"常用的单元测试是测试方法、API等，下面我们来演示一下Xunit测试框架的简单使用，有些是为了演示而写的单元测试。\",\"最下面有反转，一定要看到最后\"]},\"585\":{\"h\":\"创建单元测试项目\",\"t\":[\"本次文章还在原来项目的基础上进行操作，右键解决方案添加单元测试项目\",\"img\",\"选择框架版本为.Net 5.0\",\"img\",\"单元测试项目创建完成。然后引用我们的包\",\"<Project Sdk=\\\"Microsoft.NET.Sdk\\\"> <PropertyGroup> <TargetFramework>.NETCoreApp,Version=v5.0</TargetFramework> <IsPackable>false</IsPackable> </PropertyGroup> <ItemGroup> <PackageReference Include=\\\"Microsoft.AspNetCore.TestHost\\\" Version=\\\"5.0.10\\\" /> <PackageReference Include=\\\"Microsoft.NET.Test.Sdk\\\" Version=\\\"16.9.4\\\" /> <PackageReference Include=\\\"xunit\\\" Version=\\\"2.4.1\\\" /> <PackageReference Include=\\\"xunit.runner.visualstudio\\\" Version=\\\"2.4.3\\\"> <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets> <PrivateAssets>all</PrivateAssets> </PackageReference> <PackageReference Include=\\\"coverlet.collector\\\" Version=\\\"3.0.2\\\" /> </ItemGroup> <ItemGroup> <ProjectReference Include=\\\"..\\\\Net5ByDocker\\\\Net5ByDocker.csproj\\\" /> </ItemGroup> </Project> \",\"TargetFramework：指定测试项目的目标框架\",\"IsPackable：设置是否允许打包单元测试项目\",\"xunit：该xunit包引入了三个子包，其中包括大多数开发人员想要的功能：（xunit.core测试框架本身）、 xunit.assert（包含Assert类的库）和xunit.analyzers（使 Roslyn 分析器能够检测单元测试和 xUnit.net 可扩展性的常见问题）\",\"包xunit.runner.visualstudio和Microsoft.NET.Test.Sdk 是能够在 Visual Studio 中运行测试项目以及使用 dotnet test.\",\"coverlet.collector：该coverlet.collector包允许收集代码覆盖率。如果您不打算收集代码覆盖率，则应删除此包引用。\",\"如果想使用MSTest框架，那么只需要在需要进行测试的方法上面点击右键，创建单元测试\",\"img\",\"点击确定后将会为我们创建一个单元测试的应用程序，关于User控制器的单元测试我们就写在这个里面\",\"img\",\"这里我们并不使用MSTest进行测试。\",\"创建基类文件BaseTest\",\"public class BaseTest { protected readonly ITestOutputHelper Output; public BaseTest(ITestOutputHelper output) { Output = output; } public string SerializeObject(object obj) { JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented, ContractResolver = new CamelCasePropertyNamesContractResolver() }; return JsonConvert.SerializeObject(obj, settings); } } /// <summary> /// 构建webhost /// </summary> public class BaseWebHostTest : BaseTest { protected readonly TestServer Server; public BaseWebHostTest(ITestOutputHelper helper) : base(helper) { var service = Host.CreateDefaultBuilder() .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }).Build().Services; Server = new TestServer(service); } } /// <summary> /// 只是测试控制器Api /// </summary> public class BaseHostTest : BaseTest { protected readonly TestServer Server; public BaseHostTest(ITestOutputHelper helper) : base(helper) { Server = new TestServer(WebHost.CreateDefaultBuilder() .UseEnvironment(\\\"Development\\\")//测试使用 .UseStartup<Startup>()); } } \"]},\"586\":{\"h\":\"测试API\",\"t\":[\"就以演示获取用户信息为例，我们测试调用接口后是否返回状态码为200\",\"编写构造函数并赋值HttpClient\",\"public UserControllerTests(ITestOutputHelper helper) : base(helper) { Client = Server.CreateClient(); //var token = \\\"\\\"; // 可以对HttpClient进行一些自定请求头等操作 //Client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue(\\\"Bearer\\\", token); } public HttpClient Client { get; } \",\"测试\",\"[Fact()] public async Task Get_User_ReturnOk() { //Arrange 赋值区域 //Act var response = await Client.GetAsync(\\\"api/user/getlist\\\"); //Assert Assert.Equal(HttpStatusCode.OK, response.StatusCode); Output.WriteLine(await response.Content.ReadAsStringAsync()); } \",\"写单元测试一般有三个步骤：Arrange，Act 和 Assert。\",\"Arrange 是准备阶段，这个阶段是准备工作，比如模拟数据、初始化对象等；\",\"Act 是行为阶段，这个阶段是用准备好的数据去调用要测试的方法；\",\"Assert 是断定阶段，就是把调用目标方法返回的值和预期的值进行比较，如果和预期一致说明测试通过，否则为失败。\",\"点击方法名字右键运行测试或者调试测试\",\"img\"]},\"587\":{\"h\":\"测试方法\",\"t\":[\"比如我们去对IUserService里面的GetListAsync做单元测试,继承自公共类，通过依赖注入获取IUserService服务\",\"public class UserServiceTest : BaseWebHostTest { private readonly IUserService _userService; public UserServiceTest(ITestOutputHelper helper) : base(helper) { _userService = Server.Services.GetRequiredService<IUserService>(); } [Fact] public async Task GetUser_ReturnOk() { //Arrange：准备阶段 //Act：行为阶段 var response = await _userService.GetListAsync(); //Assert：断言阶段 Assert.NotNull(response); Output.WriteLine(JsonConvert.SerializeObject(response)); } } \",\"点击方法名字右键运行测试或调试测试\",\"img\",\"单元测试成功\"]},\"588\":{\"h\":\"并行运行测试\",\"t\":[\"在Xunit的2.x版本以后支持并行运行测试。这样子相比如之前可以更好利用服务器性能。\",\"新建测试类RunnerTimeTest，\",\"public class RunnerTimeTest { [Fact] public void Test1() { Thread.Sleep(2000); } [Fact] public void Test2() { Thread.Sleep(3000); } } \",\"我们猜一下运行该测试类的话需要耗时多少？2s？3s？\",\"img\",\"通过这个结果我们可以得出来一个测试类内并不是并行执行的。默认情况下每一个测试类都是一个唯一的测试集合，同一个测试类的测试不会彼此并行运行。那么我们将这两个测试方法分别放入不同的测试类中\",\"public class RunnerTimeTest { [Fact] public void Test1() { Thread.Sleep(2000); } } public class RunnerTimeTest2 { [Fact] public void Test2() { Thread.Sleep(3000); } } \",\"运行查看效果\",\"img\",\"可以得到不同的测试类之间是并行执行的。\",\"这个是我理解的单元测试样子，但是经过同事的严厉批评，我知道了应该使用单一变量原则，控制一处不同，其他变量保持相同，而不是像该文章一样，依赖项不可控。\",\"命令行创建单元测试项目：https://xunit.net/docs/getting-started/netcore/cmdline\",\"ASP.NET Core单元测试：https://www.cnblogs.com/willick/p/aspnetcore-unit-tests-with-xunit.html\",\"并行运行测试：https://xunit.net/docs/running-tests-in-parallel\"]},\"589\":{\"h\":\"单元测试简单使用\",\"t\":[\"本文来演示一下同事教导后的写法，同样有些单元测试是为了演示而写的单元测试。\",\"本文使用组件：Xunit、Moq以及dotNet相关知识\",\"注：本文内容基于上一篇\",\"首先指定一个方法编写单元测试，并且要保证没有其他因素干扰的情况下去进行单元测试。\"]},\"590\":{\"h\":\"创建单元测试项目\",\"t\":[\"参考上篇文章，在上篇文章的基础上进行如下代码。\"]},\"591\":{\"h\":\"测试方法\",\"t\":[\"首先先继承公共类，然后注入日志组件\",\"public class UserServiceTest : BaseWebHostTest { public UserServiceTest(ITestOutputHelper helper) : base(helper) { } } \",\"比如我们去对IUserService里面的GetListAsync做单元测试,然后查看该Service依赖于一些配置\",\"private readonly IBaseRepository<User> _userRep; private readonly IUnitOfWork _unitOfWork; private readonly IMapper _mapper; public UserService(IMapper mapper, IBaseRepository<User> userRep, IUnitOfWork unitOfWork) { _mapper = mapper; _userRep = userRep; _unitOfWork = unitOfWork; } \",\"那么我们就需要使用moq组件去模拟出来这些依赖项减少影响。不过该接口有些依赖项用不到，不需要模拟直接传null\",\"//模拟用户数据 var users = new List<User> { new User {Account = \\\"123\\\", PassWord = \\\"123456\\\", IsValid = true}, new User {Account = \\\"456\\\", PassWord = \\\"123456\\\", IsValid = true}, }; // mock 数据 var mockRepository = new Mock<IBaseRepository<User>>(); mockRepository.Setup(t => t.GetListAsync(_ => true)).ReturnsAsync(users); \",\"然后就可以实例化UserService进行使用，完整代码如下\",\"[Fact] public async Task GetUser_ReturnOk() { //Arrange：准备阶段 //模拟用户数据 var users = new List<User> { new User {Account = \\\"123\\\", PassWord = \\\"123456\\\", IsValid = true}, new User {Account = \\\"456\\\", PassWord = \\\"123456\\\", IsValid = true}, }; var mockRepository = new Mock<IBaseRepository<User>>(); mockRepository.Setup(t => t.GetListAsync(_ => true)).ReturnsAsync(users); var userService = new UserService(null, mockRepository.Object, null); //Act：行为阶段 var result = await userService.GetListAsync(); //Assert：断言阶段 Assert.True(result.Any()); Output.WriteLine(JsonConvert.SerializeObject(result)); } \",\"然后就可以对该方法进行单元测试了。\",\"下面在演示一个对用户添加的方法编写单元测试\",\"img\",\"因为我们依赖这三个东西，那么就需要mock这三个\",\"var mockRepository = new Mock<IBaseRepository<User>>(); mockRepository.Setup(t => t.AddAsync(It.IsAny<User>(), false)) .ReturnsAsync(1); var mockUnitWork = new Mock<IUnitOfWork>(); mockUnitWork.Setup(t => t.SaveChangesAsync(new System.Threading.CancellationToken())) .ReturnsAsync(1); var vm = new AddUserVm { Account = \\\"789\\\", PassWord = \\\"455\\\", Sex = Net5ByDocker.Model.Enum.SexEnum.Man }; var mockIMapper = new Mock<IMapper>(); mockIMapper.Setup(t => t.Map<User>(vm)) .Returns(new User { Account = \\\"789\\\", PassWord = \\\"455\\\", IsValid = true }); \",\"这里我们模拟IBaseRepository传入任何的User到添加方法都返回，模拟单元提交也返回1，还模拟了IMapper进行映射，完整代码如下\",\"[Fact] public async Task AddUser_ReturnOk() { // 模拟数据 var mockRepository = new Mock<IBaseRepository<User>>(); mockRepository.Setup(t => t.AddAsync(It.IsAny<User>(), false)) .ReturnsAsync(1); var mockUnitWork = new Mock<IUnitOfWork>(); mockUnitWork.Setup(t => t.SaveChangesAsync(new System.Threading.CancellationToken())) .ReturnsAsync(1); var vm = new AddUserVm { Account = \\\"789\\\", PassWord = \\\"455\\\", Sex = Net5ByDocker.Model.Enum.SexEnum.Man }; var mockIMapper = new Mock<IMapper>(); mockIMapper.Setup(t => t.Map<User>(vm)) .Returns(new User { Account = \\\"789\\\", PassWord = \\\"455\\\", IsValid = true }); var userService = new UserService(mockIMapper.Object, mockRepository.Object, mockUnitWork.Object); //行为阶段 var result = await userService.AddAsync(vm); // 断言阶段 Assert.NotEmpty(result); Output.WriteLine(result); } \",\"然后单元测试就编写完成了，启动单元测试\",\"img\",\"单元测试成功，我理解的大概就是这样子的，如果有哪里不对的地方，麻烦指出来一起成长。\",\".NetCore单元测试：https://www.cnblogs.com/baoshu/p/14500273.html\",\"Mock：https://github.com/Moq/moq4/wiki/Quickstart\"]},\"592\":{\"h\":\"基础介绍\",\"t\":[\"“不会写单元测试的程序员不是合格的程序员，不写单元测试的程序员不是优秀的工程师。”\",\"​ —— 一只想要成为一个优秀程序员的渣逼程序猿。\",\"那么问题来了，什么是单元测试，如何做单元测试。\"]},\"593\":{\"h\":\"单元测试的定义\",\"t\":[\"按照维基百科上的说法，单元测试（Unit Testing）又称为模块测试, 是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。 程序单元是应用的最小可测试部件。在面向对象编程中，最小单元就是方法，包括基类、抽象类、或者派生类（子类）中的方法。 按照通俗的理解，一个单元测试判断某个特定场条件下某个特定方法的行为，如斐波那契数列算法，冒泡排序算法。\",\"单元测试（unit testing），是指对软件中的最小可测试单元进行检查和验证。 对于单元测试中单元的含义，一般来说，要根据实际情况去判定其具体含义， 如C语言中单元指一个函数，Java里单元指一个类，图形化的软件中可以指一个窗口或一个菜单等。 总的来说，单元就是人为规定的最小的被测功能模块。 单元测试是在软件开发过程中要进行的最低级别的测试活动，软件的独立单元将在与程序的其他部分相隔离的情况下进行测试。\",\"​ —— 百度百科 http://baike.baidu.com/view/106237.htm\"]},\"594\":{\"h\":\"单元测试的好处\",\"t\":[\"它是一种验证行为程序中的每一项功能都是测试来验证它的正确性。\",\"它是一种设计行为编写单元测试将使我们从调用者观察、思考。 特别是先写测试（test-first），迫使我们把程序设计成易于调用和可测试的，有利于程序的解耦和模块化。\",\"它是一种编写文档的行为单元测试是一种无价的文档，它是展示函数或类如何使用的最佳文档。这份文档是可编译、可运行的，并且它保持最新，永远与代码同步。\",\"它具有回归性自动化的单元测试避免了代码出现回归，编写完成之后，可以随时随地的快速运行测试。\",\"高效自动化的单元测试节省了开发上调试BUG的时间，绝大多数BUG可以通过单元测试测试出来，并且可以减少测试人员的测试时间。有时候通过写单元测试能够更好的完善自己程序的逻辑，让程序变得更加美好。\",\"​ —— 单元测试的优点 http://jingyan.baidu.com/article/d713063522ab4e13fdf47533.html\"]},\"595\":{\"h\":\"单元测试的原则\",\"t\":[\"可重复运行的\",\"持续长期有效，并且返回一致的结果\",\"在内存中运行，没有外部依赖组件（比如说真实的数据库，真实的文件存储等）\",\"快速返回结果\",\"一个测试方法只测试一个问题\",\"现在比较流行的测试框架包括微软的 MS Test(VS Test)、NUnit、XUnit\"]},\"596\":{\"h\":\"MS Test\",\"t\":[\"VS单元测试的主要类：Assert、StringAssert、CollectionAssert，具体可参照 MSDN介绍\",\"有些时候我们需要对测试的方法用到的数据或配置进行初始化，有几个特殊的测试方法。\",\"如果需要针对测试中的所有虚拟用户迭代仅执行一次初始化操作，请使用 TestInitializeAttribute。\",\"初始化方法的运行顺序如下：\",\"用 AssemblyInitializeAttribute 标记的方法。\",\"用 ClassInitializeAttribute 特性标记的方法。\",\"用 TestInitializeAttribute 特性标记的方法。\",\"用 TestMethodAttribute 特性标记的方法。\",\"使用 VS Test 的时候，首先我们需要标记测试方法所在类 TestClass，测试方法标记为 TestMethod\"]},\"597\":{\"h\":\"NUnit\",\"t\":[\"NUnit 测试框架使用方法与 MS Test 类似\",\"有一些是 NUnit 中的，但是MS Test框架中是没有的：\",\"Assert.IsNaN/Assert.IsEmpty/Assert.IsNotEmpty/Assert.Greater/Assert.GreaterOrEqual 等\",\"想要同时使用 VS Test 和 NUnit 的话可以使用宏来区分不同的测试框架，例如：\",\"#if !NUNIT using Microsoft.VisualStudio.TestTools.UnitTesting; using Category = Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute; #else using NUnit.Framework; using TestClass = NUnit.Framework.TestFixtureAttribute; using TestMethod = NUnit.Framework.TestAttribute; using TestInitialize = NUnit.Framework.SetUpAttribute; using TestCleanup = NUnit.Framework.TearDownAttribute; using TestContext = System.Object; using ClassCleanup = NUnit.Framework.TestFixtureTearDownAttribute; using ClassInitialize = NUnit.Framework.TestFixtureSetUpAttribute; #endif \",\"从上面可以看得出来 nunit 很多东西和 vs test 是很类似的，声明测试类，测试方法，初始化方法等\"]},\"598\":{\"h\":\"XUnit\",\"t\":[\"XUnit 是另一个测试框架，个人觉得 XUnit 测试更加简洁一些，初始化和释放资源不需要标记单独的方法，初始化直接放在构造方法里，资源释放实现 IDisposable 接口，在 Dispose 方法中进行测试的清理工作即可，相比 ms test（vs test）和 NUnit，我觉得 Xunit 更方便一些，并且对于 Assert ，xunit 更简洁，例如： 在 ms test 中的 Assert.IsNull(null);/Assert.IsTrue(1 == 1); 在 xunit 中则是 Assert.Null(null);/Assert.True(1 == 1);，虽然看上去差不多，但是写的多了就会觉得 xunit 更简洁一些。\",\"xunit 不需要对测试方法所在类型标记 TestClass ，只需要在测试方法上标记 Fact 或者使用数据驱动的 Theory\"]},\"599\":{\"h\":\"XUnit 的基本使用\",\"t\":[\"使用 XUnit 来写测试方法可以使得测试代码更为简洁，更加简单，推荐使用 xunit 来测试自己的代码\",\"测试示例：\",\"public class ResultModelTest { [Fact] public void SuccessTest() { var result = ResultModel.Success(); Assert.Null(result.ErrorMsg); Assert.Equal(ResultStatus.Success, result.Status); } [Theory] [InlineData(ResultStatus.Unauthorized)] [InlineData(ResultStatus.NoPermission)] [InlineData(ResultStatus.RequestError)] [InlineData(ResultStatus.NotImplemented)] [InlineData(ResultStatus.ResourceNotFound)] [InlineData(ResultStatus.RequestTimeout)] public void FailTest(ResultStatus resultStatus) { var result = ResultModel.Fail(\\\"test error\\\", resultStatus); Assert.Equal(resultStatus, result.Status); } } \",\"最基本的测试，使用 Fact 标记测试方法，使用 Assert 来断言自己对结果的预期\",\"可以使用 Theory 来自己指定一批数据来进行测试，来实现测试数据驱动测试，简单的数据可以通过 InlineData 直接指定，也可以使用 MemberData 来指定一个方法来返回用于测试的数据，也可以自定义一个继承于 DataAttribute 的 Data Provider\",\"我觉得在我们开发过程中测试是非常重要的一部分，高质量项目的一个重要指标就是测试覆盖率，，一个高质量的开源项目一定是有比较完善的测试项目的，所以对于测试非常有必要了解一下，并将它集成到自己的项目中持续保证项目的高质量，同时完善的测试对于项目重构也是非常有好处的，能够很大程度上检测是否有发生一些破坏性的变更。\",\"总而言之，开始写单元测试吧，为成为一个优秀的工程师而努力~~\",\"MSDN - Microsoft.VisualStudio.TestTools.UnitTesting\",\"单元测试之道\",\"VS2012 Unit Test 个人学习汇总（含目录）\",\"单元测试的优点\",\"对比MS Test与NUnit Test框架\",\"https://stackoverflow.com/questions/261139/nunit-vs-mbunit-vs-mstest-vs-xunit-net\",\"https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-with-dotnet-test\",\"https://xunit.net\",\"作者：WeihanLi\",\"出处：https://www.cnblogs.com/weihanli/p/14316093.html\",\"版权：本作品采用「署名-非商业性使用-相同方式共享 4.0 国际」许可协议进行许可。\"]},\"600\":{\"h\":\"WebApi调用示例\",\"t\":[\"通过一个简单的项目，在原来的文章基础上完善一下常用的几种WebApi编写方式以及请求方式，一方面是用于给我一个前端朋友用来学习调用接口，另一方面让我测试HttpClient的一些效果。\",\"本文示例代码环境：vs2022、net6\",\"新创建了一个.Net WebAPI程序，安装组件\",\"<ItemGroup> <PackageReference Include=\\\"AutoMapper.Extensions.Microsoft.DependencyInjection\\\" Version=\\\"11.0.0\\\" /> <PackageReference Include=\\\"Microsoft.AspNetCore.Mvc.NewtonsoftJson\\\" Version=\\\"6.0.1\\\" /> <PackageReference Include=\\\"Swashbuckle.AspNetCore\\\" Version=\\\"6.3.1\\\" /> <PackageReference Include=\\\"Swashbuckle.AspNetCore.Newtonsoft\\\" Version=\\\"6.3.1\\\" /> </ItemGroup> \",\"ConfigureServices配置NewtonsoftJson以及Automapper和操作数据库代码(为了省事，删除了一些不影响当前效果的代码)\",\"public void ConfigureServices(IServiceCollection services) { services.AddControllers().AddNewtonsoftJson(); services.AddEndpointsApiExplorer(); services.AddSwaggerGen(c => { c.SwaggerDoc(\\\"v1\\\", new OpenApiInfo { Title = \\\"MyWebApi\\\", Version = \\\"v1\\\" }); }); //注入AutoMapper services.AddAutoMapper(Assembly.GetExecutingAssembly().DefinedTypes.Where(t => typeof(Profile).GetTypeInfo() .IsAssignableFrom(t.AsType())).Select(t => t.AsType()).ToArray()); } \",\"注意：在Net core3.0以后，微软移除了Newtonsoft.Json，而使用了System.Text.Json，所以依赖于Newtonsoft.Json的组件将不可用，需要安装 Microsoft.AspNetCore.Mvc.NewtonsoftJson 包\",\"因为仅仅作为演示，所以我只是新增一个控制器，里面包含了get、post、put、patch、delete几种类型的接口。这里先不贴代码，一点一点看。通过一个用户的添加、修改、删除作为一个演示的流程。\",\"记得配置允许跨域请求，要不js请求会因为跨域问题而报错。详情看此处\",\"数据来源就是控制器里面的一个静态变量，格式如下\",\"public class UserDto { public long UserId { get; set; } public string Name { get; set; } public string Sex { get; set; } } \",\"静态变量如下\",\"private static readonly List<UserDto> _userDtoList = Enumerable.Range(0, 100) .Select(t => new UserDto { Name = \\\"张三\\\" + t, Sex = \\\"男\\\", UserId = 6974150586715897857 + t }).ToList(); \",\"后端请求的方法我使用的是HttpClient，并且做成了一个公共类，部分需要用到的如下\",\"public class HttpClientHelper: IHttpHelper { private readonly System.Net.Http.HttpClient _client; /// <summary> /// 构造函数 /// </summary> /// <param name=\\\"httpClientFactory\\\"></param> public HttpClientHelper(IHttpClientFactory httpClientFactory) { _client = httpClientFactory.CreateClient(); } private void VerifyParam(string url, string jwtToken, IDictionary<string, string> headers) { _client.DefaultRequestHeaders.Clear(); if (string.IsNullOrWhiteSpace(url)) { throw new ArgumentNullException(\\\"url不能为null\\\"); } if (!string.IsNullOrWhiteSpace(jwtToken)) { _client.DefaultRequestHeaders.Add(\\\"Authorization\\\", $\\\"Bearer {jwtToken}\\\"); } if (headers?.Count > 0) { foreach (var (key, value) in headers) { _client.DefaultRequestHeaders.Add(key, value); } } } private static async Task<T> ConvertResponseResult<T>(HttpResponseMessage httpResponse) { //确保成功完成，不是成功就返回具体错误信息 httpResponse.EnsureSuccessStatusCode(); var resStr = await httpResponse.Content.ReadAsStringAsync(); if (typeof(T) == typeof(string)) return (T)Convert.ChangeType(resStr, typeof(string)); return JsonConvert.DeserializeObject<T>(resStr); } } \",\"请求头传递token只是为了演示请求头传递参数的写法，token为伪值\"]},\"601\":{\"h\":\"GET\",\"t\":[\"从web服务检索数据。传递参数的本质是url字符串拼接，Request-Head头部传递，Request-Body中不能传递(严格点说不建议，因为我使用Apifox等工具可以在body中传值，swagger会提示 Request with GET/HEAD method cannot have body)\"]},\"602\":{\"h\":\"Query格式\",\"t\":[\"编写用户id查询用户信息接口\",\"[HttpGet(\\\"user/details\\\")] public UserDto GetUserDetails(long userId) { if (!_userDtoList.Any(t => t.UserId == userId)) throw new ParameterException(\\\"未找到用户标识\\\"); return _userDtoList.Find(t => t.UserId == userId); } \"]},\"603\":{\"h\":\"前端请求\",\"t\":[\"$(function () { $.ajax({ type: \\\"get\\\", url: \\\"http://localhost:5000/api/HttpSample/user/details?userId=6974150586715897857\\\", headers: { \\\"Authorization\\\": \\\"Bearer 123456\\\" }, contentType: \\\"application/json\\\", success: function (data, status) { if (status == \\\"success\\\") { console.log(JSON.stringify(data)); } } }); var postdata = { userId: \\\"6974150586715897857\\\" }; $.ajax({ type: \\\"get\\\", headers:{\\\"Authorization\\\":\\\"Bearer 123456\\\"}, url: \\\"http://localhost:5000/api/HttpSample/user/details\\\", data: postdata, success: function (data, status) { if (status == \\\"success\\\") { console.log(JSON.stringify(data)); } } }); }); \"]},\"604\":{\"h\":\"后端请求\",\"t\":[\"var token = \\\"123456\\\";//此处token是伪值 var result = await _httpHelper.GetAsync<ResultModel<UserDto>>(\\\"http://localhost:5000/api/HttpSample/user/details?userId=6974150586715897857\\\", token); \",\"这里的_httpHelper是注入的IHttpHelper(下面其他的方法一样)，对应的GetAsync为\",\"public async Task<T> GetAsync<T>(string url, string jwtToken = \\\"\\\", IDictionary<string, string> headers = null) { VerifyParam(url, jwtToken, headers); var response = await _client.GetAsync(url).ConfigureAwait(false); return await ConvertResponseResult<T>(response).ConfigureAwait(false); } \"]},\"605\":{\"h\":\"接口工具请求\",\"t\":[\"url：http://localhost:5000/api/HttpSample/user/details?userId=6974150586715897857\",\"并且再请求头增加：Authorization，值为Bearer xxxx\",\"返回结果如下\",\"img\"]},\"606\":{\"h\":\"POST\",\"t\":[\"在web服务上创建新的数据项。约定用于向服务端提交数据操作，请求时候参数放在参数FromBody传递\"]},\"607\":{\"h\":\"Json格式\",\"t\":[\"演示添加用户操作\",\"请求类\",\"public class UserDto { public long UserId { get; set; } public string Name { get; set; } public string Sex { get; set; } } \",\"接口代码示例\",\"[HttpPost(\\\"user/add\\\")] public bool Add([FromBody] UserDto request) { if (_userDtoList.Any(t => t.UserId == request.UserId)) throw new ParameterException(\\\"用户标识已经存在\\\"); Console.WriteLine(DateTime.Now + \\\" \\\" + HttpContext.Request.Headers[\\\"Authorization\\\"].FirstOrDefault()); _userDtoList.Add(request); return true; } \"]},\"608\":{\"h\":\"前端请求\",\"t\":[\"$(function () { var param = { userId: \\\"8974150586715897867\\\", name: \\\"老八\\\", sex: \\\"女\\\" }; $.ajax({ type: \\\"post\\\", dataType: 'json', contentType: \\\"application/json\\\", headers: { \\\"Authorization\\\": \\\"Bearer 123456\\\" }, url: \\\"http://localhost:5000/api/HttpSample/user/add\\\", data: JSON.stringify(param), success: function (data) { if (status == \\\"success\\\") { console.log(JSON.stringify(data)); } } }); }); \"]},\"609\":{\"h\":\"后端请求\",\"t\":[\"var token = \\\"123456\\\";//此处token是伪值 var url = \\\"http://localhost:5000/api/HttpSample/user/add\\\"; var usedto = new UserDto { UserId = 123456, Name = \\\"李四\\\", Sex = \\\"女\\\" }; var result = await _httpHelper.PostAsync<ResultModel<bool>>(url, usedto, token); public async Task<T> PostAsync<T>(string url, object data, string jwtToken = \\\"\\\", IDictionary<string, string> headers = null) { VerifyParam(url, jwtToken, headers); var jsonData = data is string ? data.ToString() : JsonConvert.SerializeObject(data); using var content = new StringContent(jsonData ?? string.Empty, Encoding.UTF8, \\\"application/json\\\"); var response = await _client.PostAsync(url, content).ConfigureAwait(false); return await ConvertResponseResult<T>(response).ConfigureAwait(false); } \"]},\"610\":{\"h\":\"接口工具请求\",\"t\":[\"传递参数格式为json格式，请求头部默认添加：\\\"Content-Type\\\", \\\"application/json\\\"\",\"img\"]},\"611\":{\"h\":\"x-www-form-unlencoded格式\",\"t\":[\"更新用户姓名\",\"[HttpPost(\\\"user/updatename\\\")] public bool UpdateName([FromForm] long userId, [FromForm] string name) { var entity = _userDtoList.Find(t => t.UserId == userId); if (entity is null) throw new ParameterException(\\\"用户标识不存在\\\"); entity.Name = name; return true; } \"]},\"612\":{\"h\":\"前端请求\",\"t\":[\"$(function () { var postdata = { userId: \\\"6974150586715897857\\\", name: \\\"赵六\\\" }; $.ajax({ type: \\\"post\\\", headers: { \\\"Authorization\\\": \\\"Bearer 123456\\\" }, url: \\\"http://localhost:5000/api/HttpSample/user/updatename\\\", data: postdata, success: function (data, status) { if (status == \\\"success\\\") { console.log(JSON.stringify(data)); } } }); }); \"]},\"613\":{\"h\":\"后端请求\",\"t\":[\"var token = \\\"123456\\\";//此处token是伪值 var url = \\\"http://localhost:5000/api/HttpSample/user/updatename\\\"; var dic = new Dictionary<string, string> { { \\\"userId\\\",\\\"6974150586715897857\\\"}, { \\\"name\\\",\\\"王五\\\"} }; var result = await _httpHelper.PostFormDataAsync<ResultModel<bool>>(url, dic, token); public async Task<T> PostFormDataAsync<T>(string url, Dictionary<string, string> data, string jwtToken = \\\"\\\", IDictionary<string, string> headers = null) { VerifyParam(url, jwtToken, headers); var httpContent = new FormUrlEncodedContent(data); var response = await _client.PostAsync(url, httpContent).ConfigureAwait(false); return await ConvertResponseResult<T>(response).ConfigureAwait(false); } \"]},\"614\":{\"h\":\"接口工具请求\",\"t\":[\"选择post请求，参数在Body，然后选择x-www-form-unlencoded格式。\",\"img\"]},\"615\":{\"h\":\"Form-data格式\",\"t\":[\"模拟上传用户头像操作\",\"[HttpPost(\\\"user/uploadImg\\\")] public string Upload([FromForm] IFormFile img, [FromForm] long userId) { if (img is null) throw new ParameterException(\\\"用户头像不能为null\\\"); Console.WriteLine(HttpContext.Request.Headers[\\\"Authorization\\\"].FirstOrDefault()); var entity = _userDtoList.Find(t => t.UserId == userId); if (entity is null) throw new ParameterException(\\\"用户标识不存在\\\"); return img.FileName; } \",\"注意：当你上传大于30000000字节长度的文件时候，需要修改上传文件的默认限制\"]},\"616\":{\"h\":\"前端请求\",\"t\":[\"$(function () { $(\\\"#tijiao\\\").click(function () { //logoimg是<input type=\\\"file\\\" id=\\\"logoimg\\\"\\\" /> var files = $(\\\"#logoimg\\\").prop('files'); //获取到文件列表 var formData = new FormData(); formData.append(\\\"userId\\\", \\\"6974150586715897857\\\"); formData.append(\\\"img\\\", files[0], \\\"1122.jpg\\\");//图片文件流 console.log(formData); $.ajax({ type: 'post', url: \\\"http://localhost:5000/api/HttpSample/user/uploadImg\\\", headers: { \\\"Authorization\\\": \\\"Bearer 123456\\\" }, mimeType: \\\"multipart/form-data\\\", processData: false, contentType: false, data: formData, success: function (data) { //后端Httpclient请求成功后返回过来的结果 console.log(data); } }); }); }); \"]},\"617\":{\"h\":\"后端请求\",\"t\":[\"var url = \\\"http://localhost:5000/api/HttpSample/user/uploadImg\\\"; var formData = new MultipartFormDataContent(); var bytes = System.IO.File.ReadAllBytes(\\\"D:\\\\\\\\Downloads\\\\\\\\11111.jpg\\\"); var byteContent = new ByteArrayContent(bytes); byteContent.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue(\\\"form-data\\\") { Name = \\\"img\\\", FileName = \\\"111.jpg\\\" }; formData.Add(byteContent); // 写法一 formData.Add(new StringContent(\\\"6974150586715897857\\\"), \\\"userId\\\"); // 写法二 var byteContent2 = new ByteArrayContent(Encoding.UTF8.GetBytes(\\\"天气\\\")); byteContent2.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue(\\\"form-data\\\") { Name = \\\"name\\\", }; formData.Add(byteContent2); var headerDic = new Dictionary<string, string> { { \\\"Authorization\\\",\\\"Bearer 123456\\\"}, }; var result = await _httpHelper.PostFormDataAsync<ResultModel<string>>(url, formData, headerDic); public async Task<T> PostFormDataAsync<T>(string url, MultipartFormDataContent data, IDictionary<string, string> headers = null) { VerifyParam(url, \\\"\\\", headers); var result = await _client.PostAsync(url, data).ConfigureAwait(false); return await ConvertResponseResult<T>(result); } \"]},\"618\":{\"h\":\"接口工具请求\",\"t\":[\"选择Body=>form-data\",\"img\"]},\"619\":{\"h\":\"PUT\",\"t\":[\"更新web服务上的数据项。\"]},\"620\":{\"h\":\"Json格式\",\"t\":[\"更新用户信息\",\"[HttpPut(\\\"user/update\\\")] public bool Update(UserDto userDto) { if (userDto is null) throw new ParameterException(\\\"参数不能为空\\\"); Console.WriteLine(DateTime.Now + \\\" \\\" + HttpContext.Request.Headers[\\\"Authorization\\\"].FirstOrDefault()); var currUser = _userDtoList.Find(t => t.UserId == userDto.UserId); if (currUser is null) throw new ParameterException(\\\"用户标识不存在\\\"); currUser.Name = userDto.Name; currUser.Sex = userDto.Sex; return true; } \"]},\"621\":{\"h\":\"前端请求\",\"t\":[\"$(function () { var param = { userId: \\\"6974150586715897859\\\", name: \\\"老八\\\", sex: \\\"女\\\" }; $.ajax({ type: \\\"put\\\", dataType: 'json', contentType: \\\"application/json\\\", headers: { \\\"Authorization\\\": \\\"Bearer 123456\\\" }, url: \\\"http://localhost:5000/api/HttpSample/user/update\\\", data: JSON.stringify(param), success: function (data, status) { if (status == \\\"success\\\") { console.log(JSON.stringify(data)); } } }); }); \"]},\"622\":{\"h\":\"后端请求\",\"t\":[\"var token = \\\"123456\\\";//此处token是伪值 var usedto = new UserDto { UserId = 6974150586715897859, Name = \\\"老八\\\", Sex = \\\"女\\\" }; var url = \\\"http://localhost:5000/api/HttpSample/user/update\\\"; var result = await _httpHelper.PutAsync<ResultModel<bool>>(url, usedto, token); return JsonConvert.SerializeObject(result); public async Task<T> PutAsync<T>(string url, object data, string jwtToken = \\\"\\\", IDictionary<string, string> headers = null) { VerifyParam(url, jwtToken, headers); var jsonData = data is string ? data.ToString() : JsonConvert.SerializeObject(data); using var content = new StringContent(jsonData ?? string.Empty, Encoding.UTF8, \\\"application/json\\\"); var response = await _client.PutAsync(url, content).ConfigureAwait(false); return await ConvertResponseResult<T>(response).ConfigureAwait(false); } \"]},\"623\":{\"h\":\"接口工具请求\",\"t\":[\"URL：http://localhost:5000/api/HttpSample/user/update\",\"参数传递：Body=>json\",\"img\"]},\"624\":{\"h\":\"DELETE\",\"t\":[\"删除web服务上的数据项。\"]},\"625\":{\"h\":\"Query格式\",\"t\":[\"删除用户信息\",\"[HttpDelete(\\\"user\\\")] public bool Delete(long userId) { var entity = _userDtoList.Find(t => t.UserId == userId); if (entity is null) throw new ParameterException(\\\"用户标识不存在\\\"); Console.WriteLine(DateTime.Now + \\\" \\\" + HttpContext.Request.Headers[\\\"Authorization\\\"].FirstOrDefault()); _userDtoList.Remove(entity); return true; } \"]},\"626\":{\"h\":\"前端请求\",\"t\":[\"$(function () { $.ajax({ type: \\\"DELETE\\\", url: \\\"http://localhost:5000/api/HttpSample/user?userId=6974150586715897861\\\", headers: { \\\"Authorization\\\": \\\"Bearer 123456\\\" }, success: function (data, status) { if (status == \\\"success\\\") { console.log(JSON.stringify(data)); } } }); }); \"]},\"627\":{\"h\":\"后端请求\",\"t\":[\"var token = \\\"123456\\\";//此处token是伪值 var url = \\\"http://localhost:5000/api/HttpSample/user?userId=6974150586715897862\\\"; var result = await _httpHelper.DeleteAsync<ResultModel<bool>>(url, token); public async Task<T> DeleteAsync<T>(string url, string jwtToken = \\\"\\\", IDictionary<string, string> headers = null) { VerifyParam(url, jwtToken, headers); var response = await _client.DeleteAsync(url).ConfigureAwait(false); return await ConvertResponseResult<T>(response).ConfigureAwait(false); } \"]},\"628\":{\"h\":\"接口工具请求\",\"t\":[\"URL：http://localhost:5000/api/HttpSample/user?userId=6974150586715897859\",\"img\"]},\"629\":{\"h\":\"Patch\",\"t\":[\"通过描述有关如何修改项的一组说明，更新web服务上的数据项。\",\"请求格式如下：\",\"[{\\\"op\\\" : \\\"replace\\\", \\\"path\\\" : \\\"/PassWord\\\", \\\"value\\\" : \\\"222222\\\"}]\",\"op属性指示操作的类型，path属性指示要更新的元素，value属性提供新值。\",\"add：添加属性或数组元素。 对于现有属性：设置值。\",\"remove：删除属性或数组元素。\",\"replace：替换操作\",\"为了支持该请求方式，需要安装nuget包Microsoft.AspNetCore.Mvc.NewtonsoftJson。\",\"参考文档：https://docs.microsoft.com/zh-cn/aspnet/core/web-api/jsonpatch?view=aspnetcore-6.0\"]},\"630\":{\"h\":\"Json格式\",\"t\":[\"在此用于更新数据\",\"[HttpPatch(\\\"user/update2/{userId}\\\")] public UserDto Update2([FromRoute] long userId, JsonPatchDocument<UserDto> jsonPatch, [FromServices] IMapper mapper) { var entity = _userDtoList.Find(t => t.UserId == userId); if (entity is null) throw new ParameterException(\\\"用户标识无效\\\"); var dto = mapper.Map<UserDto>(entity); jsonPatch.ApplyTo(dto, ModelState); var user = _userDtoList.Find(t => t.UserId == userId); mapper.Map(dto, user); return user; } \"]},\"631\":{\"h\":\"前端请求\",\"t\":[\"演示根据用户id去更新用户的姓名\",\"$(function () { var par = [{ \\\"op\\\": \\\"replace\\\", \\\"path\\\": \\\"/name\\\", \\\"value\\\": \\\"老六\\\" }]; $.ajax({ type: \\\"Patch\\\", url: \\\"http://localhost:5000/api/HttpSample/user/update2/6974150586715897857\\\", headers: { \\\"Authorization\\\": \\\"Bearer 123456\\\" }, contentType: \\\"application/json\\\", data: JSON.stringify(par), success: function (result) { console.log(result); } }); }); \"]},\"632\":{\"h\":\"后端请求\",\"t\":[\"var token = \\\"123456\\\";//此处token是伪值 var url = \\\"http://localhost:5000/api/HttpSample/user/update2/6974150586715897859\\\"; var content = \\\"[{\\\\\\\"op\\\\\\\":\\\\\\\"replace\\\\\\\",\\\\\\\"path\\\\\\\":\\\\\\\"/name\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"小七七\\\\\\\"}]\\\"; var result = await _httpHelper.PatchAsync<ResultModel<UserDto>>(url, content, token); public async Task<T> PatchAsync<T>(string url, object data, string jwtToken = \\\"\\\", IDictionary<string, string> headers = null) { VerifyParam(url, jwtToken, headers); var jsonData = data is string ? data.ToString() : JsonConvert.SerializeObject(data); using var content = new StringContent(jsonData ?? string.Empty, Encoding.UTF8, \\\"application/json\\\"); var response = await _client.PatchAsync(url, content).ConfigureAwait(false); return await ConvertResponseResult<T>(response).ConfigureAwait(false); } \"]},\"633\":{\"h\":\"接口工具请求\",\"t\":[\"参数传递：Body=>json\",\"img\"]},\"634\":{\"h\":\"API版本控制\",\"t\":[\"有助于保护原有系统，不受影响，并及时修改问题\",\"可以实现用户的私人定制（比如是付费接口）\",\"快速迭代\",\"在URL中追加版本或者作为查询字符串参数\",\"通过自动以标头和通过接受标头\"]},\"635\":{\"h\":\"2.1 安装组件\",\"t\":[\"ASP.NET API versioning为您提供了一种功能强大但易于使用的方法，用于将API版本控制语义添加到使用ASP.NET构建的新的和现有的REST服务中。API版本控制扩展定义了简单的元数据属性和约定，用于描述您的服务实现了哪些API版本。\",\" <PackageReference Include=\\\"Microsoft.AspNetCore.Mvc.Versioning\\\" Version=\\\"4.2.0\\\" /> <PackageReference Include=\\\"Microsoft.AspNetCore.Mvc.Versioning.ApiExplorer\\\" Version=\\\"4.2.0\\\" /> \"]},\"636\":{\"h\":\"2.1.1 常用配置\",\"t\":[\"[ApiVersion(\\\"1.1\\\")] //设置版本号 [ApiVersionNeutral]//退出版本控制 [MapToApiVersion(\\\"1.1\\\")] //设置独立版本 [ApiVersion(\\\"1.0\\\", Deprecated = true)]//api版本已经被弃用 HttpContext.GetRequestedApiVersion().ToString(); //访问版本信息 \"]},\"637\":{\"h\":\"2.2 QueryString来实现版本控制\"},\"638\":{\"h\":\"2.2.1 ConfigureServices中配置\",\"t\":[\" //Versioning用来实现API的版本控制 services.AddApiVersioning(options => { options.DefaultApiVersion = new ApiVersion(1, 1);//默认版本号 options.AssumeDefaultVersionWhenUnspecified = true;//此选项将用于不提供版本的请求，默认情况下假定API的版本为1.0 options.ReportApiVersions = true;//当设置为true时候，api将返回响应标头中支持的版本信息 //下面这句默认不写也可以 //options.ApiVersionReader = new QueryStringApiVersionReader(parameterNames: \\\"api-version\\\");//该名称用于查询时候使用 }); \"]},\"639\":{\"h\":\"2.2.2 控制器设置版本\",\"t\":[\"namespace NetCore_SwaggerVersion.Controllers.v1 { /// <summary> /// 版本1.1 /// </summary> [Route(\\\"api/[controller]\\\")] [ApiController] [ApiVersion(\\\"1.1\\\")]//可以设置多个 [ApiVersion(\\\"1.2\\\")] public class TestController : ControllerBase namespace NetCore_SwaggerVersion.Controllers.v2 { /// <summary> /// 版本2.0 /// </summary> [Route(\\\"api/[controller]\\\")] [ApiController] [ApiVersion(\\\"2.6\\\")] public class TestController : ControllerBase \",\"不同命名空间下可以存在相同的控制器\"]},\"640\":{\"h\":\"2.2.3 特定方法设置版本\",\"t\":[\"[MapToApiVersion(\\\"1.1\\\")] [HttpGet] public IEnumerable<string> Get() \"]},\"641\":{\"h\":\"2.2.4 设置不受版本控制\",\"t\":[\" [ApiVersionNeutral]//退出版本控制 [ApiController] [Route(\\\"api/[controller]/[action]\\\")] public class WeatherForecastController : ControllerBase \"]},\"642\":{\"h\":\"2.3.5 访问地址\",\"t\":[\"http://localhost:5000/api/WeatherForecast/Get //不写版本号的话走的是默认的版本号 http://localhost:5000/api/Test?api-version=1.1 http://localhost:5000/api/Test?api-version=1.2 http://localhost:5000/api/Test?api-version=2.6 \"]},\"643\":{\"h\":\"2.3 URL Path Segment来实现版本控制\"},\"644\":{\"h\":\"2.3.1 ConfigureServices中配置\",\"t\":[\" //Versioning用来实现API的版本控制 services.AddApiVersioning(options => { options.DefaultApiVersion = new ApiVersion(1, 1);//默认版本号 options.AssumeDefaultVersionWhenUnspecified = true;//此选项将用于不提供版本的请求，默认情况下假定API的版本为1.0 options.ReportApiVersions = true;//当设置为true时候，api将返回响应标头中支持的版本信息 }); \"]},\"645\":{\"h\":\"2.3.2 控制器设置版本\",\"t\":[\"namespace NetCore_SwaggerVersion.Controllers.v1 { /// <summary> /// 版本1.1 /// </summary> [Route(\\\"api/v{version:apiVersion}/[controller]\\\")] [ApiController] [ApiVersion(\\\"1.0\\\")] [ApiVersion(\\\"1.1\\\")]//定义控制器提供哪个版本的API public class TestController : ControllerBase namespace NetCore_SwaggerVersion.Controllers.v2 { /// <summary> /// 版本2.0 /// </summary> [Route(\\\"api/v{version:apiVersion}/[controller]\\\")] [ApiController] [ApiVersion(\\\"2.6\\\")] public class TestController : ControllerBase \",\"不同命名空间下可以存在相同的控制器\"]},\"646\":{\"h\":\"2.3.3 特定方法设置版本\",\"t\":[\"[MapToApiVersion(\\\"1.1\\\")] [HttpGet] public IEnumerable<string> Get() \"]},\"647\":{\"h\":\"2.3.4 设置不受版本控制\",\"t\":[\" [ApiVersionNeutral]//退出版本控制 [ApiController] [Route(\\\"api/[controller]/[action]\\\")] public class WeatherForecastController : ControllerBase \"]},\"648\":{\"h\":\"2.3.5 访问地址\",\"t\":[\"http://localhost:5000/api/v1.0/Test http://localhost:5000/api/v1.1/Test http://localhost:5000/api/v2.6/Test http://localhost:5000/api/WeatherForecast/Get 不受版本控制 \"]},\"649\":{\"h\":\"2.4 HTTP Headers来实现版本控制\"},\"650\":{\"h\":\"2.4.1 ConfigureServices中配置\",\"t\":[\" //Versioning用来实现API的版本控制 services.AddApiVersioning(options => { options.DefaultApiVersion = new ApiVersion(1, 1);//默认版本号 options.AssumeDefaultVersionWhenUnspecified = true;//此选项将用于不提供版本的请求，默认情况下假定API的版本为1.0 options.ReportApiVersions = true;//当设置为true时候，api将返回响应标头中支持的版本信息 //header传递版本信息 options.ApiVersionReader = new HeaderApiVersionReader(\\\"version\\\"); options.ApiVersionSelector = new CurrentImplementationApiVersionSelector(options);//如果没有传输版本号，那么会使用最大版本号 LowestImplementedApiVersionSelector是最小版本号 options.UseApiBehavior = false;//是否使用API行为 }); \"]},\"651\":{\"h\":\"2.4.2 控制器设置版本\",\"t\":[\"namespace NetCore_SwaggerVersion.Controllers.v1 { /// <summary> /// 版本1.1 /// </summary> [Route(\\\"api/[controller]\\\")] [ApiController] [ApiVersion(\\\"1.1\\\")]//定义控制器提供哪个版本的API public class TestController : ControllerBase namespace NetCore_SwaggerVersion.Controllers.v2 { /// <summary> /// 版本2.0 /// </summary> [Route(\\\"api/[controller]\\\")] [ApiController] [ApiVersion(\\\"2.6\\\")] public class TestController : ControllerBase \",\"不同命名空间下可以存在相同的控制器\"]},\"652\":{\"h\":\"2.4.3 特定方法设置版本\",\"t\":[\"[MapToApiVersion(\\\"1.1\\\")] [HttpGet] public IEnumerable<string> Get() \"]},\"653\":{\"h\":\"2.4.4 设置不受版本控制\",\"t\":[\" [ApiVersionNeutral]//退出版本控制 [ApiController] [Route(\\\"api/[controller]/[action]\\\")] public class WeatherForecastController : ControllerBase \"]},\"654\":{\"h\":\"2.4.5 访问地址\",\"t\":[\"http://localhost:5000/api/Test //需要在headers里面增加 version: 1.1 http://localhost:5000/api/WeatherForecast/Get 不受版本控制 \"]},\"655\":{\"h\":\"2.5 同时支持多种模式\",\"t\":[\"services.AddApiVersioning(o => { o.ReportApiVersions = true; o.AssumeDefaultVersionWhenUnspecified = true; o.DefaultApiVersion = new ApiVersion(1, 0); o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(\\\"api-version\\\"), new QueryStringApiVersionReader(\\\"api-version\\\")); //或者 //同时支持查询字符串和标头 o.ApiVersionReader = new QueryStringOrHeaderApiVersionReader(parameterName: \\\"version\\\"){HeaderNames = { \\\"api-version\\\", \\\"x-ms-version\\\" }} }); \"]},\"656\":{\"h\":\"2.6 不借助包，封装文件\",\"t\":[\"public class NameSpaceVersionRoutingConvention:IApplicationModelConvention { private readonly string apiPrefix; private const string urlTemplate = \\\"{0}/{1}/{2}\\\"; public NameSpaceVersionRoutingConvention(string apiPrefix = \\\"api\\\") { this.apiPrefix = apiPrefix; } public void Apply(ApplicationModel application) { foreach (var controller in application.Controllers) { var hasRouteAttribute = controller.Selectors .Any(x => x.AttributeRouteModel != null); if (!hasRouteAttribute) { continue; } var nameSpaces = controller.ControllerType.Namespace.Split('.'); //获取namespace中版本号部分 var version = nameSpaces.FirstOrDefault(x => Regex.IsMatch(x, @\\\"^v(\\\\d+)$\\\")); if (string.IsNullOrEmpty(version)) { continue; } string template = string.Format(urlTemplate, apiPrefix, version, controller.ControllerName); controller.Selectors[0].AttributeRouteModel = new AttributeRouteModel() { Template = template }; } } } \",\"调试代码发现这种方式只在程序第一次运行的时候会执行，之后不会再执行多次，因此效率很高。\",\"借鉴于：https://www.cnblogs.com/runningsmallguo/p/7484954.html\",\"https://github.com/microsoft/aspnet-api-versioning\"]},\"657\":{\"h\":\"WinForm使用依赖注入\",\"t\":[\"关于依赖注入是什么？依赖注入是一种具体的编码技巧，对我来说最明显的就是解决代码的耦合性。\",\"ASP.NetCore中本身容器容器已经创建好了，只需要往容器添加服务即可，但是在Winform中默认还是通过new的方式来进行操作的(虽然我已经升级成了.Net6)，最近在把一个开源项目进行增加自用的功能，然后我顺带将原来的NetF升级为NetCore，然后就想用依赖注入方式去试试了。\",\"C/S代码写的少，如有不对，麻烦指正。\",\"本文示例环境：VS2022、.Net6\"]},\"658\":{\"h\":\"准备\",\"t\":[\"示例包含以下代码\",\"窗体\",\"Form1\",\"Form2\",\"Service\",\"IUserservice以及Userservice\",\"IOrderService以及OrderService\",\"public interface IUserservice { string GetName(); } public class UserService : IUserservice { public string GetName() { return \\\"IUserservice\\\"; } } public interface IOrderService { string GetName(); } public class OrderService : IOrderService { public string GetName() { return \\\"IOrderService\\\"; } } \"]},\"659\":{\"h\":\"场景\",\"t\":[\"在Form1通过构造函数注入IUserservice，并且在Load事件里面调用IUserservice的获取名称方法，点击页面按钮后让Form2显示，Form2中通过依赖注入了IOrderService在Load事件里面调用IOrderService的获取名称方法。如果可以多次操作不报错就是成功。\"]},\"660\":{\"h\":\"开始\",\"t\":[\"引用组件\",\"<PackageReference Include=\\\"Microsoft.Extensions.DependencyInjection\\\" Version=\\\"6.0.0\\\" /> \",\"增加了一个ServiceProviderHelper的操作类\",\"public static class ServiceProviderHelper { /// <summary> /// 全局服务提供者 /// </summary> public static IServiceProvider ServiceProvider { get; private set; } = null!; /// <summary> /// 初始化构建ServiceProvider对象 /// </summary> /// <param name=\\\"serviceProvider\\\"></param> /// <exception cref=\\\"ArgumentNullException\\\"></exception> public static void InitServiceProvider(ServiceProvider serviceProvider) { ArgumentNullException.ThrowIfNull(serviceProvider, nameof(serviceProvider)); ServiceProvider = serviceProvider; } /// <summary> /// 获取Form服务 /// </summary> /// <param name=\\\"type\\\"></param> /// <returns></returns> /// <exception cref=\\\"ArgumentException\\\"></exception> public static Form GetFormService(Type type) { var service = ServiceProvider.GetRequiredService(type); if (service is Form fService) { return fService; } else { throw new ArgumentException($\\\"{type.FullName} is not a Form\\\"); } } /// <summary> /// 获取Form服务 /// </summary> /// <param name=\\\"type\\\"></param> /// <returns></returns> /// <exception cref=\\\"ArgumentException\\\"></exception> public static T GetService<T>() where T : class { return ServiceProvider.GetRequiredService<T>(); } } \",\"修改Program方法\",\"internal static class Program { /// <summary> /// The main entry point for the application. /// </summary> [STAThread] private static void Main() { //.net6写法 之前是三行合一行 ApplicationConfiguration.Initialize(); //创建服务容器 var services = new ServiceCollection(); //添加服务注册 ConfigureServices(services); //构建ServiceProvider对象 ServiceProviderHelper.InitServiceProvider(services.BuildServiceProvider()); //获取指定服务 var main = ServiceProviderHelper.ServiceProvider.GetRequiredService<Form1>(); Application.Run(main); } /// <summary> /// 注入服务 /// </summary> /// <param name=\\\"services\\\"></param> public static void ConfigureServices(IServiceCollection services) { //批量注入可以使用Scrutor或者自己封装 services.AddScoped<IUserservice, UserService>(); services.AddScoped<IOrderService, OrderService>(); //其他的窗体也可以注入在此处 services.AddSingleton(typeof(Form1)); services.AddTransient(typeof(Form2)); } } \",\"分别在Form1和Form2进行注入\",\"private readonly IUserservice _userservice; public Form1(IUserservice userservice) { InitializeComponent(); _userservice = userservice; } private readonly IOrderService _orderService; public Form2(IOrderService orderService) : this() { _orderService = orderService; } \",\"点击Form1窗体按钮让Form2窗体显示\",\"private void button1_Click(object sender, EventArgs e) { var form2 = ServiceProviderHelper.GetFormService(typeof(Form2)); form2.Show(); } \",\"正常操作几次并没有发现异常。\",\"在.NetCore3.1上基于Winform实现依赖注入实例：http://www.ty2y.com/study/znetcore3.1sjywinformsxylzrsl.html\"]},\"661\":{\"h\":\"AgileConfig\",\"t\":[\"基于NetCore开发的轻量级配置中心，部署简单、配置简单，使用简单，可以根据个人或者公司需求采用。\",\"部署简答，最少只需要一个数据节点，支持docker部署\",\"支持多节点分布式部署来保证高可用\",\"配置支持按照应用隔离，应用内配置支持分组隔离\",\"使用长链接技术，配置信息实时推送到客户端\",\"支持IConfiguration、IOptions模式读取配置，原程序几乎不用改造\",\"配置修改支持版本记录，随时回滚配置\",\"所有所有节点都故障，客户端支持从本地缓存读取配置\",\"GitHub地址：https://github.com/kklldog/AgileConfig 可以给这个大佬点个star\",\"如果使用apollo进行部署做配置中心，对于部分公司来讲，过于笨重，所以我个人还是挺推荐这个的，再次感谢kklldog大佬的开源项目。\",\"通过docker部署，目前支持sqlserver，mysql，sqlite, PostgreSql，Oracle 五种数据库。本次示例使用轻量级的sqlite作为数据存储\",\"docker run -d --name agile_config -e adminConsole=true -e db:provider=sqlite -e db:conn=\\\"Data Source=agile_config.db\\\" -p 8011:5000 kklldog/agile_config:latest \",\"adminConsole 配置程序是否为管理控制台。如果为true则启用控制台功能，访问该实例会出现管理界面。\",\"db:provider 配置程序的数据库类型。目前程序支持：sqlite，mysql，sqlserver 三种数据库。\",\"db:conn 配置数据库连接串\",\"通过浏览器访问我们地址：http://localhost:8011/\",\"img\",\"界面还是简约美观的，第一次登录需要初始化管理员密码，然后登录进入系统\",\"img\",\"通过主界面我们看到了下面这个几个菜单\",\"节点：AgileConfig支持多节点部署，所有的节点都是平行的。为了简化部署，AgileConfig并没有单独的控制台程序，请直接使用任意一个节点作为控制台。\",\"img\",\"应用：AgileConfig支持多应用程序接入。需要为每个应用程序配置名称、ID、秘钥等信息。每个应用可以设置是否可以被继承，可以被继承的应用类似apollo的公共 namespace 的概念。公共的配置可以提取到可继承应用中，其它应用只要继承它就可以获得所有配置。如果子应用跟被继承应用之间的配置键发生重复，子应用的配置会覆盖被继承的应用的配置。子应用可以继承多个应用，如果多个应用之间发生重复键，按照继承的顺序，后继承的应用的配置覆盖前面的应用。\",\"img\",\"创建好应用后我们可以点击列表的配置该应用的配置项。\",\"img\",\"新添加的配置并不会被客户端感知到，需要手动点击“上线”才会推送给客户端。\",\"img\",\"已上线的配置如果发生修改、删除、回滚操作，会实时推送给客户端。版本历史记录了配置的历史信息，可以回滚至任意版本。\",\"img\",\"客户端：可以查看已经连接的客户端\",\"日志：记录一些关键信息的日志\",\"通过VS2019创建一个.Net5的WebAPI应用程序，安装组件\",\" <ItemGroup> <PackageReference Include=\\\"AgileConfig.Client\\\" Version=\\\"1.1.8.5\\\" /> </ItemGroup> \",\"连接我们的配置中心，在program中进行配置\",\" public class Program { public static IConfigClient ConfigClient; public static void Main(string[] args) { CreateHostBuilder(args).Build().Run(); } public static IHostBuilder CreateHostBuilder(string[] args) => Host.CreateDefaultBuilder(args) .ConfigureAppConfiguration((context, config) => { //读取本地配置 var localconfig = new ConfigurationBuilder() .SetBasePath(Directory.GetCurrentDirectory()) .AddJsonFile(\\\"appsettings.json\\\").Build(); //从本地配置里读取AgileConfig的相关信息 var appId = localconfig[\\\"AgileConfig:appId\\\"]; var secret = localconfig[\\\"AgileConfig:secret\\\"]; var nodes = localconfig[\\\"AgileConfig:nodes\\\"]; //new一个client实例 var configClient = new ConfigClient(appId, secret, nodes); //使用AddAgileConfig配置一个新的IConfigurationSource config.AddAgileConfig(configClient); //找一个变量挂载client实例，以便其他地方可以直接使用实例访问配置 ConfigClient = configClient; //注册配置项修改事件 configClient.ConfigChanged += ConfigClient_ConfigChanged; }) .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); }); /// <summary> /// 此事件会在配置项目发生新增、修改、删除的时候触发 /// </summary> private static void ConfigClient_ConfigChanged(ConfigChangedArg obj) { Console.WriteLine($\\\"action:{obj.Action} key:{obj.Key}\\\"); switch (obj.Action) { case ActionConst.Add: break; case ActionConst.Update: break; case ActionConst.Remove: break; default: break; } } } \",\"appsettings添加\",\" \\\"AgileConfig\\\": { \\\"appId\\\": \\\"001\\\", \\\"secret\\\": \\\"454551215781234\\\",//密钥 \\\"nodes\\\": \\\"http://localhost:8011\\\" //多个节点使用逗号分隔 } \",\"AgileConfig支持asp.net core 标准的IConfiguration，跟IOptions模式读取配置。还支持直接通过AgileConfigClient实例直接读取。本文直接注入IConfiguration来获取刚才我们配置的数据库连接信息。\",\"在startup中获取配置\",\"img\",\"增加一个接口获取配置信息\",\" private readonly IConfiguration _configuration; public HomeController(IConfiguration configuration) { _configuration = configuration; } [HttpGet] public string Get() { return _configuration[\\\"db:ConnectionString\\\"]; } \",\"访问接口输出配置\",\"Server=localhost;Database=test;Port=3306;charset=utf8;uid=root;pwd=123456;\",\"在程序不关闭情况下修改配置，测试一下配置是否更新\",\"img\",\"请求接口重新获取最近配置(不是实时更新，需要等待一小会，但是满足我们的实际需求)\",\"开发作者的文章：https://www.cnblogs.com/kklldog/p/agile-config.html\",\"GitHub中文文档：https://github.com/kklldog/AgileConfig/blob/master/README_CN.md\"]},\"662\":{\"h\":\"介绍\",\"t\":[\"关于grpc用法我只是基本的使用，如果我用的方式不对，烦请指出来，一起讨论。\",\"img\",\"gRPC是一个由google开发的，跨语言的，高性能远程调用框架，使客户端和服务端应用程序可以透明的进行通讯，并简化了连接系统的构建，使用http/2作为通信协议，使用protocol buffers作为序列化协议。客户端应用程序可以直接在其他计算机上的服务器应用程序上调用该方法，就好像它是本地对象一样。我感觉有点像webservice。\",\"gRPC官网：https://www.grpc.io\",\"在服务器端，服务器实现此接口并运行grpc服务器以处理客户端调用(需要使用HTTP/2(https证书))。在客户端，客户端具有一个存根，提供与服务器相同的方法。\"]},\"663\":{\"h\":\"描述\",\"t\":[\"现代高性能轻量级 RPC 框架。\",\"约定优先的 API 开发，默认使用 Protocol Buffers 作为描述语言，允许与语言无关的实现。\",\"可用于多种语言的工具，以生成强类型的服务器和客户端。\",\"支持客户端，服务器双向流调用。\",\"通过Protocol Buffers二进制序列化减少网络使用。\",\"基于 HTTP/2 进行传输\"]},\"664\":{\"h\":\"推荐场景\",\"t\":[\"高性能轻量级微服务 - gRPC设计为低延迟和高吞吐量通信，非常适合需要高性能的轻量级微服务。\",\"多语言混合开发 - gRPC工具支持所有流行的开发语言，使gRPC成为多语言开发环境的理想选择。\",\"点对点实时通信 - gRPC对双向流调用提供出色的支持。gRPC服务可以实时推送消息而无需轮询。\",\"网络受限环境 - 使用 Protocol Buffers二进制序列化消息，该序列化始终小于等效的JSON消息，对网络带宽需求比JSON小。\"]},\"665\":{\"h\":\"不建议场景\",\"t\":[\"浏览器可访问的API - 浏览器不完全支持gRPC。虽然gRPC-Web可以提供浏览器支持，但是它有局限性，引入了服务器代理\",\"广播实时通信 - gRPC支持通过流进行实时通信，但不存在向已注册连接广播消息的概念\",\"进程间通信 - 进程必须承载HTTP/2才能接受传入的gRPC调用，对于Windows，进程间通信管道是一种更快速的方法。\",\"注：尽管http/2协议没有明确规定需要使用https，但是为了安全在浏览器实现都要求使用https，所以现在的http/2话题https基本上是一对。\"]},\"666\":{\"h\":\".Net支持情况\",\"t\":[\"提供了基于HttpClient的原生框架实现\",\"提供原生的ASP.NET Core集成库\",\"提供完整的代码生成工具\",\"编译器提供对proto文件的智能提示\",\"gRPC基于Http2，默认情况下Http2是使用了Http的加密协议，用于 gRPC 的 Kestrel 终结点应使用TLS 进行保护。\",\"在开发环境中，当存在ASP.NET Core 开发证书时，会在 https://localhost:5001 自动创建使用 TLS 进行保护的终结点。 不需要任何配置。 https 前缀验证 Kestrel 终结点是否正在使用TLS。\",\"在生产环境中，必须显式配置 TLS。 以下 appsettings.json 示例中提供了使用 TLS 进行保护的 HTTP/2 终结点 ：\",\"{ \\\"Kestrel\\\": { \\\"Endpoints\\\": { \\\"HttpsInlineCertFile\\\": { \\\"Url\\\": \\\"https://localhost:5001\\\", \\\"Protocols\\\": \\\"Http2\\\", \\\"Certificate\\\": { \\\"Path\\\": \\\"<path to .pfx file>\\\", \\\"Password\\\": \\\"<certificate password>\\\" } } } } } \",\"grpc在netcore官网文档：https://docs.microsoft.com/zh-cn/aspnet/core/grpc/?view=aspnetcore-5.0\",\"官方教程：https://www.grpc.io/docs/quickstart/csharp/\",\"知乎文章：https://zhuanlan.zhihu.com/p/148139089\",\"晓晨系列教程：https://www.cnblogs.com/stulzq/p/11897704.html\",\"NET Core3高性能RPC框架：https://www.cnblogs.com/Leo_wl/p/11593681.html\",\"如何使gRPC 获得最佳性能：https://mp.weixin.qq.com/s/3--85-0CMMi81xyJC-8xjA\",\"code综艺圈：https://mp.weixin.qq.com/s/4DGZQTCm0DOxRrM8Nna_1w\"]},\"667\":{\"h\":\"gRPC四种模式\",\"t\":[\"简单 RPC（Unary RPC）、服务端流式 RPC （Server streaming RPC）、客户端流式 RPC （Client streaming RPC）、双向流式 RPC（Bi-directional streaming RPC）。它们主要有以下特点：\",\"服务类型\",\"特点\",\"简单 (一元)RPC\",\"一般的rpc调用，传入一个请求对象，返回一个返回对象\",\"服务端流式 RPC\",\"传入一个请求对象，服务端可以返回多个结果对象\",\"客户端流式 RPC\",\"客户端传入多个请求对象，服务端返回一个结果对象\",\"双向流式 RPC\",\"结合客户端流式RPC和服务端流式RPC，可以传入多个请求对象，返回多个结果对象\"]},\"668\":{\"h\":\"组件包介绍\",\"t\":[\"-- 服务端 Grpc.AspNetCore 一个用于在ASP.NET Core承载gRPC服务的框架，将 gRPC和ASP.NET Core 功能集成在一起，如：日志、依赖注入、身份认证和授权。 -- 客户端包 Google.Protobuf 包含适用于 C# 的 Protobuf 消息。 Grpc.Tools 包含适用于 Protobuf 文件的 C# 工具支持，将*.proto 文件生成 C# 资产。 运行时不需要工具包，因此依赖项标记为 PrivateAssets=\\\"All\\\"。 Grpc.Net.Client，其中包含 .NET Core 客户端。 Grpc.Net.ClientFactory 与gRPC客户端集成的HttpClientFactory，允许对gRPC客户端进行集中配置，并使用DI注入到应用程序中 \",\"一个服务可以是服务端也可以是客户端\"]},\"669\":{\"h\":\"服务端基本配置\",\"t\":[\"右键新建proto文件\",\"syntax = \\\"proto3\\\"; //使用的协议 option csharp_namespace = \\\"UserService.Proto\\\"; //命名空间 service UserInfoService{ //服务名 //登录 一元调用 rpc Login(LoginRequest) returns(LoginResponse); } //登录请求类 message LoginRequest{ string account=1;//帐号 string password=2;//密码 } //登录返回类 message LoginResponse{ string name=1;//用户名 } \",\"引用组件\",\"<PackageReference Include=\\\"Grpc.AspNetCore\\\" Version=\\\"2.38.0\\\" /> \",\"ConfigureServices中配置\",\"// 默认配置 services.AddGrpc(); 或者 //自定义配置 services.AddGrpc(options => { options.EnableDetailedErrors = true;//启用想起错误 options.MaxReceiveMessageSize = 2 * 1024 * 1024;//最大接受 2m options.MaxSendMessageSize = 5 * 1024 * 1024;//最大请求 5m }); \",\"Configure中配置\",\"app.UseEndpoints(endpoints => { endpoints.MapGrpcService<PayService>();// 配置指定实现 endpoints.MapControllers(); }); \"]},\"670\":{\"h\":\"客户端基本配置\",\"t\":[\"引用组件\",\"<ItemGroup> <PackageReference Include=\\\"Google.Protobuf\\\" Version=\\\"3.19.1\\\" /> <PackageReference Include=\\\"Grpc.Net.ClientFactory\\\" Version=\\\"2.40.0\\\" /> <PackageReference Include=\\\"Grpc.Tools\\\" Version=\\\"2.42.0\\\"> <PrivateAssets>all</PrivateAssets> <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets> </PackageReference> <PackageReference Include=\\\"Grpc.Net.Client\\\" Version=\\\"2.40.0\\\" /> </ItemGroup> \",\"ConfigureServices中配置\",\"// 默认配置 services.AddGrpc(); //自定义配置 services.AddGrpc(options => { options.EnableDetailedErrors = true;//启用想起错误 options.MaxReceiveMessageSize = 2 * 1024 * 1024;//最大接受 2m options.MaxSendMessageSize = 5 * 1024 * 1024;//最大请求 5m }); // 要调用的grpc服务 services.AddGrpcClient<RPC.Protos.Two.Order.OrderClient>(o => o.Address = new Uri(\\\"https://localhost:6001\\\")); \",\"以下的使用场景仅供参考，因为工作中我也只用过简单rpc模式。\"]},\"671\":{\"h\":\"简单RPC\",\"t\":[\"实现需求：订单服务根据用户ID获取用户的详细信息数据。\",\"右键添加proto文件并命名为UserInfoService.proto\",\"syntax = \\\"proto3\\\"; //使用的协议 import \\\"google/protobuf/timestamp.proto\\\"; import \\\"google/protobuf/wrappers.proto\\\"; option csharp_namespace = \\\"UserService.Proto\\\"; //命名空间 service UserInfoService{ //服务名 //获取用户信息 一元调用 rpc GetUserInfo(GetUserInfoRequest) returns(GetUserInfoResponse); } //获取用户信息请求类 message GetUserInfoRequest{ string user_id=1;//用户ID } //获取用户信息返回类 message GetUserInfoResponse{ string name=1;//用户名 string nick_name=2;//昵称 google.protobuf.Int32Value sex=3;//可为空性别 1男 2女 空是未知 google.protobuf.Timestamp birthday=4;//生日 bool isenabled=5;//是否启用 } \"]},\"672\":{\"h\":\"服务端\",\"t\":[\"安装nuget包\",\"<ItemGroup> <PackageReference Include=\\\"Grpc.AspNetCore\\\" Version=\\\"2.40.0\\\" /> </ItemGroup> \",\"修改csproj文件去引用proto文件并且标识为服务端GrpcServices=\\\"Server\\\"\",\"<ItemGroup> <Protobuf Include=\\\"Proto\\\\UserInfoService.proto\\\" GrpcServices=\\\"Server\\\" /> </ItemGroup> 也可以将proto都存放在同一个固定位置让不同的程序引用，使用 <ItemGroup> <Protobuf Include=\\\"..\\\\ShareProto\\\\ServiceTwo\\\\*.proto\\\" GrpcServices=\\\"Server\\\" Link=\\\"Protos\\\\Server\\\\%(RecursiveDir)%(Filename)%(Extension)\\\" /> </ItemGroup> \",\"新建UserInfoGrpcService继承自我们的UserInfoService grpc服务，并且重写GetUserInfo方法\",\"public class UserInfoGrpcService : UserInfoServiceBase { /// <summary> ///根据用户id获取用户信息(简单rpc) /// </summary> /// <param name=\\\"request\\\"></param> /// <param name=\\\"context\\\"></param> /// <returns></returns> public override Task<GetUserInfoResponse> GetUserInfo(GetUserInfoRequest request, ServerCallContext context) { var userId = request.UserId; Console.WriteLine(\\\"接收到的用户Id是\\\" + userId); //根据用户ID去查询数据库返回结果 return Task.FromResult(new GetUserInfoResponse { Name = \\\"admin\\\", NickName = \\\"好好学习天天向上\\\", Sex = null, Birthday = Timestamp.FromDateTime(DateTime.UtcNow), Isenabled = true }); } } \",\"在startop注册grpc服务\",\"//启用grpc services.AddGrpc(options => { options.EnableDetailedErrors = true;//启用内部错误输出详情 options.MaxReceiveMessageSize = 2 * 1024 * 1024;//最大接受 2m options.MaxSendMessageSize = 5 * 1024 * 1024;//最大请求 5m }); \",\"配置指定grpc并且暴露出grpc服务\",\"app.UseEndpoints(endpoints => { endpoints.MapGrpcService<UserInfoGrpcService>(); endpoints.MapControllers(); }); \",\"项目目录下可以看到proto文件生成的类\",\"img\"]},\"673\":{\"h\":\"客户端\",\"t\":[\"安装nuget包\",\"<ItemGroup> <PackageReference Include=\\\"Google.Protobuf\\\" Version=\\\"3.19.1\\\" /> <PackageReference Include=\\\"Grpc.Net.ClientFactory\\\" Version=\\\"2.40.0\\\" /> <PackageReference Include=\\\"Grpc.Tools\\\" Version=\\\"2.42.0\\\"> <PrivateAssets>all</PrivateAssets> <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets> </PackageReference> <PackageReference Include=\\\"Grpc.Net.Client\\\" Version=\\\"2.40.0\\\" /> </ItemGroup> \",\"引用上面的grpc文件，修改csproj文件并标识为客户端GrpcServices=\\\"Client\\\"\",\"//本来暂且将proto文件拷贝到客户端服务，然后设置 <ItemGroup> <Protobuf Include=\\\"Proto\\\\UserInfoService.proto\\\" GrpcServices=\\\"Client\\\" /> </ItemGroup> //或者将proto文件放到一个共享目录，然后采用 <ItemGroup> <Protobuf Include=\\\"..\\\\ShareProto\\\\ServiceTwo\\\\*.proto\\\" GrpcServices=\\\"Client\\\" Link=\\\"Protos\\\\Client\\\\%(RecursiveDir)%(Filename)%(Extension)\\\" /> </ItemGroup> \",\"ConfigureServices添加该grpc服务，服务端地址为localhost:5001\",\"services.AddGrpcClient<UserInfoService.UserInfoServiceClient>(o => { o.Address = new Uri(\\\"https://localhost:5001\\\");//协议必须是https }); \",\"这个UserInfoServiceClient文件就是我们刚才引入的proto文件生成的代码\",\"调用测试\",\"[ApiController] [Route(\\\"[controller]\\\")] public class HomeController : ControllerBase { private readonly UserInfoService.UserInfoServiceClient _userInfoServiceClient; public HomeController(UserInfoService.UserInfoServiceClient userInfoServiceClient) { _userInfoServiceClient = userInfoServiceClient; } [HttpGet] public async Task<GetUserInfoResponse> Get(string userId) { var result = await _userInfoServiceClient.GetUserInfoAsync(new GetUserInfoRequest { UserId = userId }); return result; } } \",\"img\",\"下面的部分代码如上，因此省略。\"]},\"674\":{\"h\":\"服务端流式RPC\",\"t\":[\"修改之前的UserInfoService.proto文件，增加一个方法参数是一个请求对象，服务器将多个结果流式传回调用方。\",\"syntax = \\\"proto3\\\"; //使用的协议 import \\\"google/protobuf/timestamp.proto\\\"; import \\\"google/protobuf/wrappers.proto\\\"; option csharp_namespace = \\\"UserService.Proto\\\"; //命名空间 service UserInfoService{ //服务名 //获取所有信息 服务器流式处理：从客户端发送请求消息开始 //ResponseStream.MoveNext() 读取从服务流式处理的消息。 ResponseStream.MoveNext() 返回 false 时，服务器流式处理调用已完成。 rpc GetAll(GetAllRequest) returns(stream CustomerResponse); } message GetAllRequest { } message CustomerResponse{ CustomerInfo customer=1;//用户信息 } message CustomerInfo{ string account=1;//帐号 string name=3;//姓名 int32 sex=4;//性别 } \"]},\"675\":{\"h\":\"服务端\",\"t\":[\"继承自UserInfoServiceBase并重写GetAll方法\",\"public class UserInfoGrpcService : UserInfoServiceBase { /// <summary> /// 获取所有用户信息（服务端流式rpc） /// </summary> /// <param name=\\\"request\\\"></param> /// <param name=\\\"responseStream\\\"></param> /// <param name=\\\"context\\\"></param> /// <returns></returns> public override async Task GetAll(GetAllRequest request, IServerStreamWriter<CustomerResponse> responseStream, ServerCallContext context) { for (int i = 0; i < 5; i++) { if (!context.CancellationToken.IsCancellationRequested) { await responseStream.WriteAsync(new CustomerResponse { Customer = new CustomerInfo { Account = \\\"admin\\\" + i, Name = \\\"张三\\\" + i, Sex = 1 } }).ConfigureAwait(false); await Task.Delay(System.TimeSpan.FromSeconds(1)); } } } } \"]},\"676\":{\"h\":\"客户端\",\"t\":[\"修改之前的订单服务引用的proto文件，新建一个接口用于获取grpc服务\",\"/// <summary> /// 获取所有的用户信息(服务端流式处理) /// </summary> /// <returns></returns> [HttpGet] public async Task<ActionResult<IEnumerable<CustomerResponse>>> GetAllUserInfoAsync() { var result = new List<CustomerResponse>(); var cancel = new CancellationToken(); var request = new GetAllRequest(); var response = _userInfoServiceClient.GetAll(request); while (await response.ResponseStream.MoveNext(cancel)) { result.Add(response.ResponseStream.Current); } return Ok(result); } \",\"返回结果\",\"img\",\"客户端将连续的数据流发送到服务端，服务端返回一个响应信息，使用场景：根据id返回用户列表信息，分段上传图片\",\"syntax = \\\"proto3\\\"; //使用的协议 import \\\"google/protobuf/timestamp.proto\\\"; import \\\"google/protobuf/wrappers.proto\\\"; option csharp_namespace = \\\"UserService.Proto\\\"; //命名空间 service UserInfoService{ //服务名 //批量获取用户信息 客户端流式处理：多个请求对象，服务器返回一个结果 rpc GetUserListByUserId(stream GetUserListRequest) returns (GetUserListResponse); } message CustomerInfo{ string user_id=1;//用户id string account=2;//帐号 string name=3;//姓名 int32 sex=4;//性别 } message GetUserListRequest { string user_id = 1; } message GetUserListResponse { repeated CustomerInfo user_list = 1;//用户列表 } \"]},\"677\":{\"h\":\"服务端\",\"t\":[\"为了操作数据，这点新建了一个userInfo的类\",\"public class UserInfo { /// <summary> ///用户ID /// </summary> public string UserId { get; set; } /// <summary> /// 帐号 /// </summary> public string Acount { get; set; } /// <summary> /// 姓名 /// </summary> public string Name { get; set; } /// <summary> /// 性别 /// </summary> public int Sex { get; set; } } \",\"继承自UserInfoServiceBase并重写GetUserListByUserId方法\",\"public class UserInfoGrpcService : UserInfoServiceBase { /// <summary> /// 根据用户id获取用户列表 /// </summary> /// <param name=\\\"requestStream\\\"></param> /// <param name=\\\"context\\\"></param> /// <returns></returns> public override async Task<GetUserListResponse> GetUserListByUserId( IAsyncStreamReader<GetUserListRequest> requestStream, ServerCallContext context) { //模拟数据库查询 var userList = new List<UserInfo> { new UserInfo { UserId = \\\"11\\\", Acount = \\\"admin1\\\", Name = \\\"张三\\\", Sex = 1 }, new UserInfo { UserId = \\\"22\\\", Acount = \\\"admin2\\\", Name = \\\"李四\\\", Sex = 0 }, new UserInfo { UserId = \\\"33\\\", Acount = \\\"admin3\\\", Name = \\\"王五\\\", Sex = 1 }, new UserInfo { UserId = \\\"44\\\", Acount = \\\"admin4\\\", Name = \\\"赵六\\\", Sex = 0 }, }; //获取请求的用户ID列表 var userIds = new List<string>(); var cancel = context.CancellationToken; while (await requestStream.MoveNext(cancel)) { userIds.Add(requestStream.Current.UserId); } var resultList = userList.Where(t => userIds.Contains(t.UserId)); //拼接返回列表 var result = new GetUserListResponse(); foreach (var item in resultList) { result.UserList.Add(new CustomerInfo { UserId = item.UserId, Account = item.Acount, Name = item.Name, Sex = item.Sex }); } return result; } } \"]},\"678\":{\"h\":\"客户端\",\"t\":[\"修改之前的订单服务引用的proto文件，新建一个接口GetUserListByUserIdAsync用于获取grpc服务\",\"/// <summary> /// 根据用户id获取用户信息（客户端流式处理） /// </summary> /// <param name=\\\"userIds\\\"></param> /// <returns></returns> [HttpPost] public async Task<ActionResult<RepeatedField<CustomerInfo>>> GetUserListByUserIdAsync( IEnumerable<string> userIds) { using var call = _userInfoServiceClient.GetUserListByUserId(); var clientStream = call.RequestStream; //循环给服务端发送流 foreach (var item in userIds) { await clientStream.WriteAsync(new GetUserListRequest { UserId = item }); } // 发送完成之后，告诉服务端发送完成 await clientStream.CompleteAsync(); // 接收返回结果，并返回 var res = await call.ResponseAsync; return Ok(res.UserList); } \",\"返回结果\",\"img\"]},\"679\":{\"h\":\"双向流式RPC\",\"t\":[\"请求和响应都通过流的方式进行交互\",\"示例：通过流的方式添加用户并返回用户ID\",\"修改之前的UserInfoService.proto文件，增加一个方法入参是连续流，服务器将多个结果流式传回调用方。\",\"syntax = \\\"proto3\\\"; //使用的协议 import \\\"google/protobuf/timestamp.proto\\\"; import \\\"google/protobuf/wrappers.proto\\\"; option csharp_namespace = \\\"UserService.Proto\\\"; //命名空间 service UserInfoService{ //服务名 //批量添加用户 并返回用户ID 双向流模式，多个请求，返回多个信息 rpc AddUserList(stream AddUserListRequest) returns (stream AddUserListResponse); } message AddUserListRequest { string account=1;//帐号 string name=2;//姓名 int32 sex=3;//性别 } message AddUserListResponse { string user_id=1;//用户id } \"]},\"680\":{\"h\":\"服务端\",\"t\":[\"继承自UserInfoServiceBase并重写AddUserList方法\",\"public class UserInfoGrpcService : UserInfoServiceBase { /// <summary> /// 批量添加用户信息（双向流式处理） /// </summary> /// <param name=\\\"requestStream\\\"></param> /// <param name=\\\"responseStream\\\"></param> /// <param name=\\\"context\\\"></param> /// <returns></returns> public override async Task AddUserList(IAsyncStreamReader<AddUserListRequest> requestStream, IServerStreamWriter<AddUserListResponse> responseStream, ServerCallContext context) { //获取请求的用户ID列表 var userInfos = new List<UserInfo>(); var cancel = context.CancellationToken; while (await requestStream.MoveNext(cancel)) { userInfos.Add(new UserInfo { UserId = Guid.NewGuid().ToString(), Acount = requestStream.Current.Account, Name = requestStream.Current.Name, Sex = requestStream.Current.Sex }); } //返回用户Id foreach (var item in userInfos) { await responseStream.WriteAsync(new AddUserListResponse { UserId = item.UserId }).ConfigureAwait(false); } } } \"]},\"681\":{\"h\":\"客户端\",\"t\":[\"修改之前的订单服务引用的proto文件，新建一个接口用于获取grpc服务\",\"/// <summary> /// 根据用户id获取用户信息（双向流） /// </summary> /// <param name=\\\"userIds\\\"></param> /// <returns></returns> [HttpGet] public async Task<ActionResult<RepeatedField<CustomerInfo>>> AddUserList() { //模拟用户添加的数据 var userList = new List<UserInfo> { new UserInfo { UserId = \\\"11\\\", Acount = \\\"admin1\\\", Name = \\\"张三\\\", Sex = 1 }, new UserInfo { UserId = \\\"22\\\", Acount = \\\"admin2\\\", Name = \\\"李四\\\", Sex = 0 }, new UserInfo { UserId = \\\"33\\\", Acount = \\\"admin3\\\", Name = \\\"王五\\\", Sex = 1 }, new UserInfo { UserId = \\\"44\\\", Acount = \\\"admin4\\\", Name = \\\"赵六\\\", Sex = 0 }, }; using var call = _userInfoServiceClient.AddUserList(); var clientStream = call.RequestStream; //循环给服务端发送流 foreach (var item in userList) { await clientStream.WriteAsync(new AddUserListRequest { Account = item.Acount, Name = item.Name, Sex = item.Sex }); } // 发送完成之后，告诉服务端发送完成 await clientStream.CompleteAsync(); var userIds = new List<string>(); var cancel = new CancellationToken(); // 接收返回结果，并返回 while (await call.ResponseStream.MoveNext(cancel)) { userIds.Add(call.ResponseStream.Current.UserId); } return Ok(userIds); } \",\"返回结果\",\"img\",\"微信公众号【Code综艺圈】: https://mp.weixin.qq.com/s/4DGZQTCm0DOxRrM8Nna_1w\"]},\"682\":{\"h\":\"Aspose.PDF\",\"t\":[\"最近在写关于操作PDF的代码，再加上今天朋友发了一个PDF格式的文件需要我帮忙转换为Word格式的文件，然后就出来了这个文章。\",\"关于这个操作PDF的组件，我最近仔细自己找了可以使用的免费以及收费的组件，然后在参考了一个老哥写的一个文章(https://www.cnblogs.com/RobotZero/p/7742282.html)，最后选择了Aspose。本文的主角就是它，该组件是一个收费的组件，免费版本有页数限制和水印。关于该组件我摘抄一些介绍\",\"Aspose.Pdf 是一个 PDF 组件，用来生成 PDF 文档而无需 Adobe Acrobat 支持。提供 .NET 和 Java 语言两种版本。\",\"涉及技术 .Net5、Aspose.PDF\"]},\"683\":{\"h\":\"PDF转Word\",\"t\":[\"新建项目然后引用需要的组件Aspose.Pdf，以及需要一个GUI包\",\"<PackageReference Include=\\\"Aspose.Pdf\\\" Version=\\\"18.11.0\\\" /> <PackageReference Include=\\\"System.Drawing.Common\\\" Version=\\\"6.0.0\\\" /> \",\"关于核心代码我们是看不到了，我们只能去非常简单的使用该组件,比如\",\"var path = \\\"E:\\\\\\\\Download\\\\\\\\testFile.pdf\\\"; // load the file to be converted var pfile = new Document(path); // save in different formats pfile.Save(\\\"e:\\\\\\\\output.doc\\\", SaveFormat.Doc); pfile.Save(\\\"e:\\\\\\\\output.html\\\", SaveFormat.Html); \",\"现在让我们对比一下转换前后的结果,个人感觉效果还是不错的\"]},\"684\":{\"h\":\"PDF转图片\",\"t\":[\"再附上一个将pdf转图片的代码吧，万一哪里用到了\",\"var path = \\\"D:\\\\\\\\Work\\\\\\\\xxxxxx.0.20210915.pdf\\\"; //定义Jpeg转换设备 Document document = new Document(path); var device = new Aspose.Pdf.Devices.JpegDevice(10);//设置图片质量 Console.WriteLine(\\\"默认图片张数：\\\" + document.Pages.Count); //遍历每一页转为jpg for (var i = 1; i <= document.Pages.Count; i++) { string filePathOutPut = $\\\"d:\\\\\\\\img\\\\\\\\{i}.jpg\\\"; FileStream fs = new FileStream(filePathOutPut, FileMode.OpenOrCreate); try { device.Process(document.Pages[i], fs); fs.Close(); } catch (Exception ex) { fs.Close(); File.Delete(filePathOutPut); } } Console.WriteLine(\\\"保存成功\\\"); \",\"该代码可以将PDF文件每页保存为一个图片，可以设置图片的质量来选择转换后图片的大小。\"]},\"685\":{\"h\":\"概述\",\"t\":[\"https://mp.weixin.qq.com/s/yCq5y2vd-_cVL4UlCEgR5w | 支持DOCX、PPTX、Html等文件合并、拆分、互相转换的 C#开源项目\",\"https://www.coderbusy.com/archives/2546.html | 使用 C# 提取 PDF 文件中的所有文字（支持 .NET Core）-码农很忙\"]},\"686\":{\"h\":\"Spire.PDF\"},\"687\":{\"h\":\"PDF转图片\",\"t\":[\"using PdfDocument doc = new PdfDocument(picBytes); //convert to pdf file. for (var i = 0; i < doc.Pages.Count; i++) { var image = doc.SaveAsImage(i);//得到图片流 Console.WriteLine($\\\"{i} 截取为图片 \\\" + watch.ElapsedMilliseconds); await fileOperation.UploadFileStreamAsync(\\\"pacs\\\", \\\"test/\\\" + Guid.NewGuid() + \\\".jpg\\\", image, \\\"image/jpeg\\\"); Console.WriteLine($\\\"{i} 上传图片结束 \\\" + watch.ElapsedMilliseconds); } \"]},\"688\":{\"h\":\"创建PDF\",\"t\":[\"PdfDocument doc = new PdfDocument(); for (int i = 0; i < 4; i++) { PdfImage im = PdfImage.FromFile(\\\"00\\\"+i.ToString()+\\\".jpg\\\"); float width = im.Width; float height = im.Height; PdfPageBase page = doc.Pages.Add(new SizeF(width, height), new PdfMargins(0, 0, 0, 0)); page.Canvas.DrawImage(im, 0, 0, width, height); } PdfImage im2 = PdfImage.FromFile(\\\"021.jpg\\\"); float width2 = im2.Width; float height2 = im2.Height; PdfPageBase page2 = doc.Pages.Add(new SizeF(width2, height2), new PdfMargins(0, 0, 0, 0)); page2.Canvas.DrawImage(im2, 0, 0, width2, height2); //Save pdf file. doc.SaveToFile(\\\"MyFirstPDF.pdf\\\"); doc.Close(); \",\"本文摘抄自博客园\"]},\"689\":{\"h\":\"FastReport浏览器直接打印无须预览\",\"t\":[\"文章来源自：https://jhrs.com/2021/44698.html\",\"​ 2022最终版FastReport浏览器直接打印无须预览，之所以写这篇文章，是因为在两年前首发在 jhrs.com的FastReport.net 打印功能这篇文章被很多网站转（偷）载，也是为了填一下2次封装FastReport.net 打印功能，Web项目网页支持直接打印这篇文章留下的坑，本文将会给出详细的代码以实现浏览器上并结合FastReport.Net实现无须预览直接打印功能。\",\"​ 无须预览直接打印也叫静默打印，即点一下按钮（当然你可以任意方式实现让打印机开始）打印机直接开始工作打印文件；在WinForm下很好实现，而web 静默打印一直是难点，且实现较为麻烦，这也是本文要解决的问题。\",\"​ 以下的文章是2年前和后来写的关于FastReport.Net的一些系列文章，原文还是值得翻出来看一下的，讲的是一些实现思路。本文会略过VS2022怎样打包安装程序，如果你是C#开发人员，会开发WinForm程序但不熟悉怎样打包安装程序，可以看看我之前写的WPF程序打包教程，它们是一个路数。\",\"2次封装FastReport.net 打印功能，Web项目网页支持直接打印\",\"自定义协议打开本地客户端程序遇上CSP内容安全策略\",\"VS2019打包WPF安装程序最新教程\",\"​ 当你从github下载源码后，使用VS2022打开会看到如下的样式，如果你首次打开时JHRS.PrintClientSetup不能正常加载，说明你没有安装Installer Projects，参见VS2022 打不开vdproj项目解决办法，升级Installer Projects这篇文章解决即可。\",\"web 打印控件封装源码解决方案\",\"​ 源码中提供了 2 个网站程序，分别是使用asp.net webform技术编写和asp.net core razor page编写，从命名上就已经区分了；JHRS.PrintClient是基于FastReport.net封装的客户端软件，引用了FastReport.net相关dll文件。\",\"​ JHRS.PrintClientSetup是打包安装程序，为什么需要打包安装呢？那是因为在生产环境中你不可能将Debug或Release目录下的文件发给客户让他们使用，况且也使用不起来，而且还需要借助该打包程序往注册表写入自定义协议信息，具体在下面代码中会介绍。打包成安装程序后，即可在生产环境中的网页上提供下载功能，需要使用打印功能的客户端，只需要下载安装上该客户端即可，之后就可以打印了。\",\"**Github地址：**https://github.com/jhrscom/JHRS-PrintClient\",\"**演示网站：**https://fastreport.jhrs.com/\",\"**提示：**如果打开Github有问题，你最好自备一个上网工具。你可以进入演示网站首先下载客户端程序安装上，之后再点击打印按钮即可。\"]},\"690\":{\"h\":\"FastReport浏览器直接打印无须预览\",\"t\":[\"我们在使用web技术开发管理系统，如医疗领域的HIS系统，企业的ERP系统，财务系统等等，都有打印需求，而正是各类系统和客户都有着各种不相同的打印需要，模板，格式，数据不一样等；市面上报表有多种产品，但我们选择了FastReport.Net做为解决打印需求的第三方组件，当然，商用它是付费的，不过对于公司来说，这都没有什么问题。\",\"本文中所涉及到的FastReport.Net是使用的来自网上的古老的 2.0 版本，正式产品中使用，还是需要购买授权的。接下来就来说说怎样在web环境下结合FastReport.net 实现无预览直接打印功能，另外需要说明的是，我封装的客户端你可以自由的设置是否需要使用预览功能，客户端的功能点如下：\",\"支持选择多打印机，并且可以设置默认打印机\",\"支持无须预览直接打印，也可以启动客户端将预览功能开启。\",\"跨浏览器支持，Chrome，IE，FireFox，Edge全都支持。\",\"打印日志功能（保存在安装目录）\",\"桌面快捷方式（一般无须打开，只有更改设置时才使用，如更换默认打印机，设置静默打印【无预览】）\",\"要实现FastReport浏览器静默打印功能，我们需要做两步工作：\",\"第一步是编写客户端程序，并且提供下载功能，用户首次使用时先安装客户端，首次点击打印会在浏览器上看到如下提示：\",\"img\",\"第二步是web应用程序界面上提供打印功能和获取打印数据接口，具体的实现会在源码中展示。\"]},\"691\":{\"h\":\"编写客户端打印程序\",\"t\":[\"客户端打印程序其实就是将FastReport打印组件封装进去，因此我们需要编写一个WinForm窗体程序，当然你也可以使用WPF来实现，在这个窗体程序上需要拖动一个 PreviewControl 控件到主窗体上面，该窗体程序非常简单，就一个FastReport.Preview.PreviewControl控件。当然我放在github上的源码你 clone下来后可以看到其它的，只是一些辅助功能而已。\",\"FastReport浏览器直接打印无须预览\",\"完整的源码如下：\",\"using JHRS.PrintClient.Entity; using JHRS.PrintClient.Extensions; using Newtonsoft.Json; using System; using System.Collections.Generic; using System.Data; using System.IO; using System.Linq; using System.Net.Http; using System.Windows.Forms; namespace JHRS.PrintClient { public partial class MainForm : Form { public MainForm() { InitializeComponent(); } public string[] args { get; set; } /// <summary> /// 带参 /// </summary> /// <param name=\\\"args\\\"></param> public MainForm(string[] args) { this.args = args; InitializeComponent(); } /// <summary> /// 打印方法 /// </summary> /// <param name=\\\"args\\\"></param> private void Print(string[] args) { var printConfig = ConfigList.FirstOrDefault(x => x.Selected); LogHelper.WriteLog($\\\"----------------------------------------------开始打印----------------------------------------------\\\"); LogHelper.WriteLog($\\\"进入打印方法，打印设置名称：{printConfig?.ConfigName}，打印机名称：【{printConfig?.DefaultPrinter}】，是否启用直接打印功能：{printConfig?.DirectPrint}\\\"); if (printConfig == null) { LogHelper.WriteLog(\\\"未指定默认打印机，请先做打印设置！\\\"); LogHelper.WriteLog($\\\"----------------------------------------------结束打印----------------------------------------------\\\\r\\\\n\\\\r\\\\n\\\"); DialogResult result = MessageBox.Show(\\\"未指定默认打印机，请先做打印设置！\\\", \\\"系统提示\\\", MessageBoxButtons.OK, MessageBoxIcon.Error); if (result == DialogResult.OK) { DialogResult dialog = new PrintSet().ShowDialog(this); if (dialog == DialogResult.Cancel) { Print(args); } } return; } LogHelper.WriteLog($\\\"打印数据请求接口来源：{args[0].Replace(\\\"jhrsprint:\\\", \\\"\\\")}\\\"); HttpClient client = new HttpClient(); HttpResponseMessage response = client.GetAsync(args[0].Replace(\\\"jhrsprint:\\\", \\\"\\\")).Result; if (!response.IsSuccessStatusCode) { return; } var data = response.Content.ReadAsStringAsync().Result; LogHelper.WriteLog($\\\"打印数据：{data}\\\"); PrintData printData = JsonConvert.DeserializeObject<PrintData>(data); byte[] arrary = printData.FrxFile.Split('^').Select(x => (byte)int.Parse(x)).ToArray(); report1.Preview = previewControl1; report1.Load(new MemoryStream(arrary)); report1.RegisterData(printData.Data, \\\"打印数据源\\\"); report1.PrintSettings.Printer = printConfig.DefaultPrinter; LogHelper.WriteLog($\\\"----------------------------------------------结束打印----------------------------------------------\\\\r\\\\n\\\\r\\\\n\\\"); if (printConfig.DirectPrint) { report1.PrintSettings.ShowDialog = false; report1.Print(); ExitSystem(); } else { report1.Prepare(); report1.ShowPrepared(); } } private void MainForm_Load(object sender, EventArgs e) { if (args != null) { Print(args); } SetMenuItem(); } /// <summary> /// 设置默认打印机 /// </summary> public void SetMenuItem(bool reload = false) { reloadConfig = reload; var arrary = ConfigList.Select(x => x.ConfigName).ToArray(); if (arrary.Length == 0) { toolStripComboBox1.Items.Add(\\\"未设置\\\"); toolStripComboBox1.SelectedIndex = 0; } else { toolStripComboBox1.Items.Clear(); toolStripComboBox1.Items.AddRange(ConfigList.Select(x => x.ConfigName).ToArray()); var selected = ConfigList.FirstOrDefault(x => x.Selected); if (selected != null) toolStripComboBox1.SelectedItem = selected.ConfigName; } } private bool reloadConfig = false; private List<Configs> list; private List<Configs> ConfigList { get { if (list == null || reloadConfig == true) { list = XmlHelper.Deserialize<List<Configs>>(Constants.ConfigSavePath); reloadConfig = false; } if (list != null) return list; return list ?? new List<Configs>(); } } private void MainForm_FormClosing(object sender, FormClosingEventArgs e) { MessageBoxButtons mess = MessageBoxButtons.OKCancel; var printConfig = ConfigList.FirstOrDefault(x => x.Selected); if (printConfig != null && printConfig.DirectPrint) { ExitSystem(); } else { DialogResult dr = MessageBox.Show(\\\"您确定要退出打印客户端吗？\\\", \\\"系统提示\\\", mess, MessageBoxIcon.Question); if (dr == DialogResult.OK) ExitSystem(); else e.Cancel = true; } } private void notifyIcon1_MouseClick(object sender, MouseEventArgs e) { if (e.Button == MouseButtons.Left) { if (this.WindowState == FormWindowState.Minimized) { this.WindowState = FormWindowState.Maximized; this.ShowInTaskbar = true; } this.Activate(); } } private void 退出打印客户端ToolStripMenuItem_Click(object sender, EventArgs e) { MessageBoxButtons mess = MessageBoxButtons.OKCancel; DialogResult dr = MessageBox.Show(\\\"您确定要退出打印客户端吗？\\\", \\\"系统提示\\\", mess, MessageBoxIcon.Question); if (dr == DialogResult.OK) ExitSystem(); } private void 打印设置ToolStripMenuItem_Click(object sender, EventArgs e) { var set = new PrintSet(); if (set.ParentForm == null) { set.StartPosition = FormStartPosition.CenterScreen; } set.ShowDialog(this); } /// <summary> /// 更改打印设置 /// </summary> /// <param name=\\\"sender\\\"></param> /// <param name=\\\"e\\\"></param> private void toolStripComboBox1_SelectedIndexChanged(object sender, EventArgs e) { var list = ConfigList; foreach (var item in list) { if (item.ConfigName == toolStripComboBox1.SelectedItem.ToString()) { item.Selected = true; } else { item.Selected = false; } } XmlHelper.SerializeToXmlFile(list); } private void 打印日志ToolStripMenuItem_Click(object sender, EventArgs e) { new LogForm().ShowDialog(this); } /// <summary> /// 退出系统 /// </summary> private void ExitSystem() { notifyIcon.Dispose(); Environment.Exit(0); } } /// <summary> /// 打印数据实体 /// </summary> public class PrintData { /// <summary> /// 待打印数据使用的报表，由服务器端返回告诉客户端控件 /// </summary> public string FrxFile { get; set; } /// <summary> /// 报表数据源，由服务器端返回 /// </summary> public DataTable Data { get; set; } } } \",\"​ 在上面代码中的Print(string[] args)方法中，args参数就是通过自定义协议传入的，该方法就是最终的调用FastReport.Net组件在（客户端）浏览器上实现打印功能，完全具备和桌面软件一样的功能。有关自定义协议的内容，参见下面这篇文章：\"]},\"692\":{\"h\":\"编写安装程序类\",\"t\":[\"​ 安装程序类的用途是将自定义协议信息写入注册表，当你安装客户端程序时，它会自动的被操作系统的 Installer 自动调用，当然需要你在打包项目中做一些设置。完整的安装程序类的源码如下：\",\"using Microsoft.Win32; using System; using System.Collections; using System.Collections.Generic; using System.ComponentModel; using System.Configuration.Install; using System.Linq; using System.Threading.Tasks; namespace JHRS.PrintClient { [RunInstaller(true)] public partial class PrintInstall : Installer { public PrintInstall() { InitializeComponent(); } protected override void OnAfterInstall(IDictionary savedState) { string path = this.Context.Parameters[\\\"targetdir\\\"]; //获取用户设定的安装目标路径, 注意，需要在Setup项目里面自定义操作的属性栏里面的CustomActionData添加上/targetdir=\\\"[TARGETDIR]\\\\\\\" LogWrite(path); const string UriScheme = \\\"jhrsprint\\\"; const string FriendlyName = \\\"jhrsprint自定义协议\\\"; using (var key = Registry.LocalMachine.CreateSubKey(\\\"SOFTWARE\\\\\\\\Classes\\\\\\\\\\\" + UriScheme)) { string applicationLocation = path.Substring(0, path.Length - 1) + @\\\"JHRS.PrintClient.exe\\\"; LogWrite($\\\"打印客户端安装路径：{applicationLocation}\\\"); key.SetValue(\\\"\\\", \\\"URL:\\\" + FriendlyName); LogWrite($\\\"自定义协议名称：URL:{FriendlyName}\\\"); key.SetValue(\\\"URL Protocol\\\", \\\"\\\"); using (var defaultIcon = key.CreateSubKey(\\\"DefaultIcon\\\")) { defaultIcon.SetValue(\\\"\\\", applicationLocation + \\\",1\\\"); } using (var commandKey = key.CreateSubKey(@\\\"shell\\\\open\\\\command\\\")) { commandKey.SetValue(\\\"\\\", \\\"\\\\\\\"\\\" + applicationLocation + \\\"\\\\\\\" \\\\\\\"%1\\\\\\\"\\\"); } LogWrite($\\\"设置结束！key.Name是：{key.Name}，{key}\\\"); } base.OnAfterInstall(savedState); } public override void Install(IDictionary stateSaver) { LogWrite(\\\"Install！\\\"); base.Install(stateSaver); } protected override void OnBeforeInstall(IDictionary savedState) { LogWrite(\\\"OnBeforeInstall!\\\"); base.OnBeforeInstall(savedState); } public override void Uninstall(IDictionary savedState) { LogWrite(\\\"Uninstall!\\\"); base.Uninstall(savedState); } public override void Rollback(IDictionary savedState) { LogWrite(\\\"Rollback\\\"); base.Rollback(savedState); } public void LogWrite(string str) { #if DEBUG string LogPath = @\\\"c:\\\\log\\\\\\\"; if (!System.IO.Directory.Exists(LogPath)) System.IO.Directory.CreateDirectory(LogPath); using (System.IO.StreamWriter sw = new System.IO.StreamWriter(LogPath + @\\\"SetUpLog.txt\\\", true)) { sw.WriteLine(DateTime.Now.ToString(\\\"[yyyy-MM-dd HH:mm:ss] \\\") + str + \\\"\\\\n\\\"); } #endif } } } \",\"web打印客户端安装后会在桌面生成一个快捷方式，平常不会使用它的，除非你需要对客户端做一些设置。\",\"FastReport浏览器直接打印无须预览（2022终版） 1\",\"​ 完成了web客户端程序的编写和打包程序的设置， 剩下的操作你只需要将客户端打包就行了，之后放到网站目录，并提供一个下载功能，供用户下载安装你的客户端即可。\",\"​ 接下来我们来看网站端是怎样使用的FastReport web打印功能的。\"]},\"693\":{\"h\":\"FastReport web打印页面代码\",\"t\":[\"页面上要触发打印功能，通常都是放置按钮或者链接来实现，正如下面的代码那样，我使用asp.net core razor page来编写的。页面上放置了一个按钮，然后将请求提交到当前页面来处理。\",\"<input type=\\\"button\\\" value=\\\"下载并安装控件\\\" onclick=\\\"location.href='?handler=Download'\\\" /> \",\"完整的代码你可以在github上找到。后台处理打印请求，即获取打印数据的示例代码如下：\",\"/// <summary> /// 获取打印数据 /// </summary> /// <returns></returns> public ContentResult OnGetPrintData() { if (\\\"https://jhrs.com\\\".Equals(Request.Query[\\\"par1\\\"].ToString())&& \\\"znlive.com\\\".Equals(Request.Query[\\\"myblog\\\"].ToString())) { List<SbEntity> list = new List<SbEntity>(); for (int i = 0; i < 1; i++) { list.Add(new SbEntity { 标题 = \\\"江湖人士醫院超聲設備標牌\\\", 使用科室 = \\\"超聲科-\\\" + i, 启用日期 = DateTime.Now.AddDays(i), 型号 = \\\"XH34534-\\\" + i, 序列号 = \\\"XLH-3452\\\" + i, 序号 = (i + 1).ToString(), 条码 = \\\"BH20190302002\\\" + i, 二维码 = \\\"https://znlive.com/the-best-cheap-vpn\\\", 生产厂家 = \\\"jhrs.com 科技有限公司\\\", 规格 = \\\"GGX-1\\\" + i, 设备名称 = \\\"X射線髮射器\\\", 责任人 = \\\"趙佳發\\\", 质保日期 = DateTime.Now.AddYears(i + 1) }); } var print = new PrintDataEntity<List<SbEntity>> { Data = list }; var path = Path.Combine(Environment.CurrentDirectory, \\\"wwwroot/print/设备标牌.frx\\\"); using (FileStream fs = new FileStream(path, FileMode.Open, FileAccess.Read)) { try { byte[] buffur = new byte[fs.Length]; fs.Read(buffur, 0, (int)fs.Length); print.FrxFile = string.Join(\\\"^\\\", buffur); } catch (Exception ex) { return Content(new { Success = false, ErrorMsg = ex.Message }.ToJson()); } } return Content(print.ToJson()); } return Content(new { Success = false, ErrorMsg = \\\"狗日的，参数不对，重新传！\\\" }.ToJson()); } \",\"怎么样，是不是很简单呢？在演示网站中，也提供了下载功能，这里就不做过多介绍了，完整的解决方案源码你可以在github上找到。\",\"**最后提示：**FastReport.net 组件是付费产品，你在使用过程中，需要购买授权，你可以在它们的官网上联系售后进行购买。下面提供的2.0学习版较为古老，最新版界面风格也变了，但使用方式类似。\",\"本文写得比较简单，如果你是一个新手，况且对于FastReport.net没有过多的了解，或者不熟悉，会遇到很多的问题，本来还想画一张图来说明一下的，但想想还是算了，毕竟当阅读到这篇文章的人都是开发人员，且有需求，应该会弄明白的。\",\"顺便提一下，本文并没有讲解如何使用FastReport.net，例如怎样制作报表文件，怎样绑定数据源，怎样添加字典文件等，这些内容，只需要看看FastReport.net提供的demo程序就明白了。做为学习使用，这里提供了一个国外网盘下载地址，你可以下载FastReport.net来学习，如果下载不了，请参见上面打开github的方法解决，毕竟是国外的网盘。\",\"你下载时需要做好心里准备，这TMD的网盘要连点几次广告才能下载。。当然钱能解决一切问题。\",\"FastReport.net 2.0学习版下载地址：点击下载\",\"img\"]},\"694\":{\"h\":\"捷易快讯\",\"t\":[\"这两天看见有大佬分享使用钉钉和企业微信的机器人来做通知报警，然后我想到了我使用的另一个第三方软件捷易快信(可能大家都不知道这个东西，我也忘了我最开始是咋知道的)，该服务的优点是可以通过微信进行提醒，不过每条需要收费0.0080元，但是不要担心每月可能会赠送4元(因为我的就是)，对于我来说，够我玩了。\",\"访问网址：http://jy.erpit.cn/login\",\"img\",\"我是直接使用的微信进行登录的，看个人爱好进行登录。\",\"下面模拟一个服务器告警来做一个演示消息通知。\",\"img\",\"注意看红框的内容，需要让消息接收方扫码关注该公众号\",\"查看接口文档\",\"img\",\"找到我们想要的群发消息接口\",\"img\",\"也可以通过接口添加删除用户，支持给单独用户推送消息等。\",\"下面开始编写代码，还在原来的项目上进行添加接口操作。\",\"代码仓库地址：https://gitee.com/AZRNG/my-example 需要请自取\",\"新建Model类，构建请求参数\",\" var data = new SendMessageVm { App_key = \\\"xxx\\\", Secret = \\\"xxx\\\", Template_id = \\\"xxx\\\", Data = new SendMessDataVm { First = new Details { Value = \\\"服务告警测试\\\" }, Keyword1 = new Details { Value = \\\"告警服务器地址：上海\\\" }, Keyword2 = new Details { Value = \\\"原因：数据库连接不上\\\" }, Keyword3 = new Details { Value = \\\"当前服务：拼团活动\\\" }, Remark = new Details { Value = $\\\"当前时间{DateTime.Now:yy:MM:dd HH:mm:ss} 请工程师尽快查看！\\\" } } }; \",\"Model类有点长就不粘贴了，需要的话可以去下载源码查看。\",\"通过post形式去请求该接口，本次示例为了方便起见，我直接使用了自己学习使用的Nuget包：Common.RestSharpClient\",\"ConfigureServices注入服务\",\"services.AddHttpClientService(); \",\"控制器依赖注入服务\",\" private readonly IHttpClientHelper _httpClientHelper; public InformController(IHttpClientHelper httpClientHelper) { _httpClientHelper = httpClientHelper; } \",\"请求接口\",\"var result = await _httpClientHelper.PostAsync<string>(\\\"http://jy.erpit.cn/api/message/send\\\", data).ConfigureAwait(false); \",\"请求返回参数\",\"img\",\"查看微信是否有消息通知\",\"img\",\"本次示例到此结束。\",\"通过这次演示才发现还可以推荐用户，然后将得到您推荐用户消费金额的10%作为奖励，不过免费的已经够我用了，哈哈。我也想像那些大佬一样为社区做出一些贡献，为dotNet社区发展添砖加瓦，虽然我菜，但是我可以搬砖呀，搬砖也是做贡献的。\"]},\"695\":{\"h\":\"其他通知\",\"t\":[\"之前写了一个关于捷易快信做通知服务的文章，然后收到了朋友的评论。下面我将简单了解一下朋友们推荐的服务。\"]},\"696\":{\"h\":\"介绍\",\"t\":[\"分为旧版本(依赖模板消息)、新版本(Turbo版)，作者推荐使用新版，因为支持多通道和客户端。\",\"标准版\",\"Turbo版\",\"收费方式\",\"免费\",\"少量免费额度+捐赠提升额度\",\"API\",\"发送接口\",\"发送接口和状态查询接口\",\"登入方式\",\"GitHub 登入\",\"微信扫码登入\",\"通道\",\"服务号\",\"多通道（微信、客户端、群机器人、邮件和短信）\",\"推送内容保留时间\",\"48小时\",\"7天\",\"每天 API 最大请求次数\",\"500\",\"1000\",\"表格来源：https://sct.ftqq.com/\"]},\"697\":{\"h\":\"推送渠道\",\"t\":[\"企业微信应用消息：无需安装企业微信客户端，可在微信中直接收到消息，内容显全文\",\"手机客户端：Andorid有官方测试版，iOS 可用 Bark 通道\",\"群机器人：企业微信、钉钉、飞书\",\"邮件和短信：通过自定义通道调用云服务实现\",\"微信服务号和测试号：依赖模板消息接口（微信可能会在2021年4月底下线该接口，不建议使用）\",\"个人看法：像我这种轻度自己使用的，考虑到资金缘故，能考虑的渠道也就是企业微信和钉钉了\"]},\"698\":{\"h\":\"使用方法\",\"t\":[\"1.微信扫码登入\",\"网址：https://sct.ftqq.com/login\",\"2.设置消息通道\",\"img\",\"因为我没有企业微信等，所以我的可选项就只有下载APP了\",\"img\",\"3.使用在线工具测试发消息\",\"img\",\"也可以直接调用api进行发送消息\",\"4.查看手机收到的消息\",\"img\",\"在软件保持后台运行的情况下，可以通过通知栏提醒收到消息。\"]},\"699\":{\"h\":\"介绍\",\"t\":[\"(微信推送服务)是一个使用微信公众号作为通道的，实时信息推送平台，你可以通过调用API的方式，把信息推送到微信上，无需安装额外的软件，即可做到信息实时通知。\"]},\"700\":{\"h\":\"系统相关数据限制\",\"t\":[\"消息发送频率没有做限制，但是请控制在合理范围内。不排除后期做频率限制的可能，但是这样做也是为了更好的体验，只要在合理范围内，不会受到影响；\",\"消息发送，必须合法合规，发送违规违法欺诈等等非正常消息，可能被封号；\",\"WxPusher推送的是实时消息，时效性比较强，过期以后消息也就没有价值了，目前WxPusher会为你保留7天的数据 ，7天以后不再提供可靠性保证，会不定时清理历史消息；\",\"单条消息的数据长度(字符数)限制是：content<40000;summary<100;url<400;\",\"单条消息最大发送UID的数量<2000，单条消息最大发送topicIds的数量<5;\",\"说明来源自：https://wxpusher.dingliqc.com/docs/#/?id=%e9%99%90%e5%88%b6%e8%af%b4%e6%98%8e\"]},\"701\":{\"h\":\"推送渠道\",\"t\":[\"扫码管理微信公众号进行接收消息\"]},\"702\":{\"h\":\"使用方法\",\"t\":[\"通过调用API接口实时推送消息到微信公众号发送给用户。\",\"具体操作查看文档：https://wxpusher.zjiecode.com/docs/#/?id=%e4%bb%8b%e7%bb%8d\"]},\"703\":{\"h\":\"介绍\",\"t\":[\"pushplus集成了微信、短信、邮件等实时信息推送平台\",\"官网地址：http://pushplus.hxtrip.com/\"]},\"704\":{\"h\":\"成本\",\"t\":[\"本身是一项免费的服务，并且会免费提供下去。 服务本身的成本目前在以下几方面：\",\"微信公众号认证费\",\"域名费用\",\"服务器和数据库费用\",\"https证书费用\",\"人员开发费用\",\"来自：http://pushplus.hxtrip.com/doc/#成本\"]},\"705\":{\"h\":\"推送渠道\",\"t\":[\"微信、短信、邮件\"]},\"706\":{\"h\":\"使用方法\",\"t\":[\"通过调用api接口进行消息推送\",\"推送结果示例\",\"img\"]},\"707\":{\"h\":\"扩展应用\",\"t\":[\"包含Jenkins插件、阿里云监控、华硕路由器插件\"]},\"708\":{\"h\":\"介绍\",\"t\":[\"Bark 是一款 iOS 应用程序，可让您将自定义通知推送到您的 iPhone。\",\"iPhone：下载客户端使用。安卓：使用大佬开发的一个谷歌插件使用。\",\"GitHub：https://github.com/Finb/Bark\"]},\"709\":{\"h\":\"使用方法\",\"t\":[\"Bark 分为客户端和服务端。其中，客户端用于接收消息；服务端用于推送消息。\",\"网上有老哥给出了部署方案：https://www.jianshu.com/p/dacb3c4a7c9a\",\"根据自己的需求选择最合适的服务。\"]},\"710\":{\"h\":\"盛派微信SDK\",\"t\":[\"在6月5号，我报名去参加了微软举办的一个线下分享的技术市集，分享人是苏老师和赵老师(非常感谢)，其中苏老师讲述了关于一些容器的部署等操作(也可以观看我的历史文章)，其中关于部署的示例代码是使用盛派微信SDK做了一个对接微信回复消息的动能，又一次引起了我的好奇(之前是自己看微信文档对接、进行配置验证保存access_token等操作)，通过该sdk可以帮助我们省下不少事情来让我们少加班。下面我就通过该sdk来实现两个简单的功能。\",\"Senparc.Weixin SDK 是由盛派网络（Senparc）团队自主研发的针对微信各模块的开发套件（C# SDK），已全面支持微信公众号、小程序、微信支付、企业号、开放平台、JSSDK、摇一摇周边等模块。有一些东西都已经封住在sdk里面，不需要我们再进行那些繁琐的操作。\",\"要对接微信公众号，我们首先得有一个微信公众号(我本来是使用我自己公众号，奈何好多好玩的功能没有权限需要微信认证)，我们可以通过微信申请测试号来学习使用，申请地址 该测试号可以直接体验和测试公众平台的所有高级接口。\",\"通过测试号我可以可以得到我们想要的微信公众号参数信息\",\"img\",\"通过VS2019(好想尽快体验VS2022)新建一个.Net5 WebApi程序\",\"安装组件\",\" <PackageReference Include=\\\"RestSharp\\\" Version=\\\"106.11.7\\\" /> <PackageReference Include=\\\"Senparc.Weixin.MP\\\" Version=\\\"16.12.101-preview2\\\" /> <PackageReference Include=\\\"Senparc.Weixin.MP.Middleware\\\" Version=\\\"0.3.100.1-preview2\\\" /> <PackageReference Include=\\\"Swashbuckle.AspNetCore\\\" Version=\\\"5.6.3\\\" /> \",\"为了方便(偷懒)，我直接使用了postman生成的RestSharp请求代码，因此装了该包。\",\"添加配置\",\" //CO2NET \\\"SenparcSetting\\\": { \\\"IsDebug\\\": true, \\\"DefaultCacheNamespace\\\": \\\"DefaultCache\\\" //缓存通过前缀区分 }, //Senparc.Weixin SDK \\\"SenparcWeixinSetting\\\": { \\\"IsDebug\\\": true, \\\"Token\\\": \\\"token\\\", \\\"EncodingAESKey\\\": \\\"EncodingAESKey\\\", \\\"WeixinAppId\\\": \\\"appid\\\", \\\"WeixinAppSecret\\\": \\\"secret\\\" } \",\"通过配置IsDebug可以配置是否以Debug模式运行。\",\"关于SenparcWeixinSetting为何叫做这个名字？是因为配置中写死的\",\"img\",\"ConfigureServices中注册服务\",\" services.AddMemoryCache()//使用本地缓存必须添加 .AddSenparcWeixinServices(Configuration);//Senparc.Weixin 注册（必须） \",\"也可以采用redis等其他方法存储配置信息等\",\"Configure中启用服务\",\" //注册 Senparc.Weixin 及基础库 app.UseSenparcGlobal(env, senparcSetting.Value, _ => { }, true) .UseSenparcWeixin(senparcWeixinSetting.Value, weixinRegister => weixinRegister.RegisterMpAccount(senparcWeixinSetting.Value)); \",\"通过这些配置我们可以获取accesstoken\",\"var accessToken = await AccessTokenContainer.GetAccessTokenAsync(_configuration[\\\"SenparcWeixinSetting:WeixinAppId\\\"]).ConfigureAwait(false); \"]},\"711\":{\"h\":\"自定义消息回复\",\"t\":[\"要实现接受用户的消息，并且做出回应，我们需要继承MessageHandler<DefaultMpMessageContext>，新建CustomerMessageHandler类，该类中实现了网上说的价值一个亿的AI核心代码，看到就是赚到。\",\" /// <summary> /// 自定义消息处理器 /// </summary> public class CustomerMessageHandler : MessageHandler<DefaultMpMessageContext> { public CustomerMessageHandler(Stream inputStream, PostModel postModel, int maxRecordCount = 0, IServiceProvider serviceProvider = null) : base(inputStream, postModel, maxRecordCount, false, null) { } /// <summary> /// 回复以文字形式发送的信息（可选） /// </summary> public override async Task<IResponseMessageBase> OnTextRequestAsync(RequestMessageText requestMessage) { var responseMessage = base.CreateResponseMessage<ResponseMessageText>(); // await Senparc.Weixin.MP.AdvancedAPIs.CustomApi.SendTextAsync(Config.SenparcWeixinSetting.MpSetting.WeixinAppId, OpenId,);//注意：只有测试号或部署到正式环境的正式服务号可用此接口 //responseMessage.Content = $\\\"你发送了文字：{requestMessage.Content}\\\\r\\\\n\\\\r\\\\n你的OpenId：{OpenId}\\\";//以文字类型消息回复 responseMessage.Content = requestMessage.Content.Replace(\\\"吗\\\", \\\"\\\").Replace('?', '!').Replace('？', '!'); return responseMessage; } /// <summary> /// 默认消息 /// </summary> public override IResponseMessageBase DefaultResponseMessage(IRequestMessageBase requestMessage) { var responseMessage = base.CreateResponseMessage<ResponseMessageText>(); responseMessage.Content = \\\"欢迎来到我的公众号！\\\"; return responseMessage; } } \",\"启用消息处理器\",\" //使用中间件注册 MessageHandler，指定 CustomMessageHandler 为自定义处理方法 app.UseMessageHandlerForMp(\\\"/weixinmsg\\\", (stream, postModel, maxRecordCount, serviceProvider) => new CustomerMessageHandler(stream, postModel, maxRecordCount, serviceProvider), options => { options.AccountSettingFunc = context => senparcWeixinSetting.Value; }); \",\"这个时候我们已经实现了用户消息的接收和回复代码，不过还需要在微信平台进行配置(为了可以让微信发送消息到该代码，我使用了内网穿透功能供微信访问该地址)\",\"img\",\"如果你修改接口配置信息，提交成功说明微信可以调通该接口，这个时候就可以关注微信测试号，发送消息查看结果。\",\"img\"]},\"712\":{\"h\":\"自定义菜单\",\"t\":[\"通过编写接口来实现自定义菜单配置\",\" [HttpGet] public async Task<string> GetAsync() { var accessToken = await AccessTokenContainer .GetAccessTokenAsync(_configuration[\\\"SenparcWeixinSetting:WeixinAppId\\\"]).ConfigureAwait(false); var bg = new ButtonGroup(); var oneSubButton = new SubButton { name = \\\"基础知识\\\", sub_button = new List<SingleButton> { new SingleViewButton { name = \\\"日志\\\", url = \\\"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzU4MjU4NjgyOQ==&action=getalbum&album_id=1841538022157172741#wechat_redirect\\\", } } }; bg.button.Add(oneSubButton); bg.button.Add(new SingleViewButton { name = \\\"文章目录\\\", url = \\\"https://www.yuque.com/docs/share/9aed821e-9115-41c7-a0cd-6b691ad7e400\\\" }); var result = CommonApi.CreateMenu(accessToken, bg); return \\\"成功\\\" + result; } \",\"参考地址：\",\"https://developers.weixin.qq.com/doc/offiaccount/Getting_Started/Overview.html\",\"通过调用该接口实现自定义菜单配置，显示下面的菜单\",\"img\",\"GitHub：https://github.com/JeffreySu/WeiXinMPSDK\",\"sdk文档地址：https://www.cnblogs.com/szw/p/weixin-course-index.html\",\"基本使用教程：https://www.cnblogs.com/szw/p/3414732.html\"]},\"713\":{\"h\":\"概述\"},\"714\":{\"h\":\"apifox\",\"t\":[\"支持接口文档、调试、Mock、自动化测试等\",\"https://www.apifox.cn/\"]},\"715\":{\"h\":\"apipost\",\"t\":[\"国产的一个类似于postman的工具\",\"https://www.apipost.cn/\"]},\"716\":{\"h\":\"hoppscotch\",\"t\":[\"Hoppscotch是一种可以通过Web服务的方式构建API访问的工具，使用Node.js开发。\",\"官网：https://hoppscotch.io/cn/\"]},\"717\":{\"h\":\"Postman使用教程\",\"t\":[\"postman是一款支持http协议的接口调试与测试工具，其主要特点就是功能强大，使用简单且易用性好 。\",\"无论是开发人员进行接口调试，还是测试人员做接口测试，postman都是我们的首选工具之一 。\",\"那么接下来就介绍下postman到底有哪些功能，它们分别都能干些什么 。下面先通过一张图来直观的来看下postman中所包含的功能 。\",\"图片\",\"当然，以上功能也只是展示了postman的一部分功能，为了能更加全面的体现这款工具的特点，我将从以下三个维度来加以说明。它们分别是：\"]},\"718\":{\"h\":\"基础功能\",\"t\":[\"常见类型的接口请求\",\"接口响应数据的解析\",\"接口管理(Collection)\",\"批量执行接口请求\",\"日志调试\",\"断言\",\"变量\",\"请求前置脚本\",\"接口关联\",\"常见的返回值获取\"]},\"719\":{\"h\":\"便捷功能块\",\"t\":[\"速填写查询参数\",\"快速填写请求头信息\",\"快速实现添加一个请求\",\"如何继承集合认证\",\"批量断言\",\"快速查询和替换\"]},\"720\":{\"h\":\"高级功能\",\"t\":[\"读取文件进行参数化\",\"生成测试报告\",\"代码中发送请求\",\"编写接口文档\",\"mock服务\",\"监控\",\"使用工作空间\",\"代码同步与分支管理\",\"连接数据库\",\"apis\"]},\"721\":{\"h\":\"一. postman安装说明\",\"t\":[\"postman 在 2018 年之后就不再支持浏览器版本，所以，想要使用它就必须先下载客户端再安装使用，下面就以 Windows 系统为例进行安装 。\"]},\"722\":{\"h\":\"1.下载与安装\",\"t\":[\"postman安装步骤：\",\"1.访问postman官方网站，下载最新版本\",\"访问地址：https://www.getpostman.com/\",\"2.进入到下载页面，根据自己电脑下载对应的版本\",\"图片\",\"3.双击下载的安装包，进入到安装界面，直到用户登录和注册界面。\",\"若个人使用，选择跳过即可，这时会进入到postman主界面，至此postman安装成功(下图)。\",\"若团队使用，可以进行注册，注册后使用账号可以加入团队工作区\",\"图片\"]},\"723\":{\"h\":\"2.界面导航说明\",\"t\":[\"初次使用postman的朋友可能对界面上的一些元素不太熟悉，下面就通过一张图来说明这些元素的含义 。\",\"图片\"]},\"724\":{\"h\":\"3.发送第一个请求\",\"t\":[\"如果你是第一次使用postman发送请求，下面这个例子可以作为一个最基本的入门，可以帮我们建立一个初始印象 。\",\"1.打开postman，点击+加号打开一个新的请求页。\",\"2.在请求的URL中输入请求地址：\",\"http://www.weather.com.cn/data/sk/101010100.html\",\"3.点击Send按钮，这时就可以在下部的窗格中看到来自服务器的json响应数据。\",\"图片\"]},\"725\":{\"h\":\"二.postman基础功能\"},\"726\":{\"h\":\"1.常见类型的接口请求\",\"t\":[\"常见的接口有如下四种类型，分别是含有查询参数的接口，表单类型的接口，json类型的接口以及含有上传文件的接口，以下就对这四种类型接口及如何在postman中请求进行说明 。\"]},\"727\":{\"h\":\"1.1.查询参数的接口请求\"},\"728\":{\"h\":\"什么是查询参数?\",\"t\":[\"所谓的查询参数，其实就是URL地址中问号（?）后面的部分就叫查询参数，比如：http://cx.shouji.360.cn/phonearea.php?number=13012345678 。在这个接口中，查询参数就是:number=13012345678 。\",\"而这一部分是由有键值对组成，格式为：key1=value1&key2=value2, 如果有多组键值对，要用&隔开 。\"]},\"729\":{\"h\":\"postman如何请求\",\"t\":[\"在postman中实现对这类接口请求非常简单，一般就需要明确俩个参数即可，一个是请求方法，一个请求地址。\",\"针对上面的那个接口，地址已经给出 ，而它的请求方法是get 。那么在postman中只需要把这俩个参数填写上即可请求 。\"]},\"730\":{\"h\":\"具体实现步骤：\",\"t\":[\"1.打开postman，新建一个请求。\",\"2.在请求方法中选择请求方法：GET,因为在postman中默认的请求方法就是GET,所以这一步可以忽略\",\"3.接口URL中输入地址，点击Send按钮就可以发送请求了 。\",\"图片\",\"说明：查询参数的URL一般直接拷贝到输入的URL地址栏中就可以了，当然也可以把查询参数在Params中输入，俩者的效果是一样的 。\"]},\"731\":{\"h\":\"1.2 表单类型的接口请求\"},\"732\":{\"h\":\"什么是表单 ？\",\"t\":[\"我们都知道，在发送HTTP请求的时候，一个请求中一般包含三个部分，分别是请求行，请求头，请求体 。\",\"不同的接口，请求体的数据类型是不一样的，比较常见的一种就是表单类型，那么什么是表单类型呢 ？简单理解就是在请求头中查看Content-Type，它的值如果是:application/x-www-form-urlencoded .那么就说明客户端提交的数据是以表单形式提交的 。见下图：\",\"图片\"]},\"733\":{\"h\":\"postman中如何请求？\",\"t\":[\"如果在postman请求上图的接口，我们只需要填写四个参数，分别是(可以参考上图)：\",\"请求方法：POST\",\"请求URL：http://localhost/index.php?m=Home&c=User&a=do_login&t=0.21942974229794432\",\"请求头：Content-Type：application/x-www-form-urlencode\",\"请求体：username=13088888888&password=123456&verify_code=8888\",\"实现步骤：\",\"打开postman，新建一个请求 。\",\"在请求中设置以上四个参数，点击Send按钮。在postman中设置请求体类型为，需要选择body-> x-www-form-urlencoded\",\"查看响应数据。\",\"图片\"]},\"734\":{\"h\":\"1.3 上传文件的表单请求\",\"t\":[\"在做接口测试时，我们经常会遇到需要上传文件的接口，比如微信的更新头像。这就需要用到：multipart/form-data。它也属于一种表单，但它既支持表单请求，也支持文件上传。它的请求报文中数据往往是下面这样的。\",\"POST http://localhost/index.php/home/Uploadify/imageUp/savepath/head_pic/pictitle/banner/dir/images.html HTTP/1.1 Content-Type: multipart/form-data file=a1.jpg \",\"这种类型的接口，在postman中该如何请求呢 ？我们先分析需要填写的参数 。\",\"请求方法：POST\",\"请求URL：http://localhost/index.php/home/Uploadify/imageUp/savepath/head_pic/pictitle/banner/dir/images.html\",\"请求类型：multipart/form-data\",\"请求体：file=a1.jpg\",\"实现步骤：\",\"打开postman，新建一个请求 。\",\"在请求中设置以上四个参数，点击Send按钮。注意：在postman中设置请求体类型，需要选择body-> form-data 。file中要选择File类型，然后上传本地的文件 。\",\"查看响应数据。\",\"图片\",\"根据以上报文，我们可以分析出，我们在postman只需要填写四个参数即可，具体如下：\",\"请求方法：POST\",\"请求地址：http://xxx/api/sys/login\",\"请求体类型：json\",\"请求体数据\",\"{\\\"account\\\":\\\"root\\\",\\\"password\\\":\\\"123456\\\"} \",\"实现步骤：\",\"打开postman，新建一个请求 。\",\"在请求中设置以上四个参数，点击Send按钮。注意：在postman中设置请求体类型，需要选择body-> raw -JSON\",\"查看响应数据。\",\"图片\"]},\"735\":{\"h\":\"2.接口响应数据解析\",\"t\":[\"响应数据是发送请求后经过服务器处理后返回的结果，响应由三部分组成，分别是状态行、响应头、响应体。我们来看下postman的响应数据展示。\",\"图片\",\"在postman中的响应数据展示：\",\"状态行：Status：200 OK\",\"响应头：Headers + Cookies，需要注意的是Cookies是包含在响应头中的，但是为了明显，工具会分开显示\",\"响应体：Body\",\"那么这些数据对我们做接口测试有什么作用呢 ？\",\"Body和Status是我们做接口测试的重点，一般来说我们都会验证响应体中的数据和响应状态码\",\"Test Results 是我们编写断言后，可以查看断言的执行结果 ，所以这个对我们也很有用 。\",\"Time 和Size 是我们做性能测试时，可以根据这两个参数来对所测接口的性能做一个简单的判断。\",\"下来我们再来关注下Body中的几个显示主题，分别是：Pretty，Raw，Preview .\",\"图片\",\"Pretty:翻译成中文就是漂亮 ， 也就是说返回的Body数据在这个标签中查看 ，都是经过格式化的，格式化后的数据看起来更加直观，所以postman默认展示的也是这个选项。比如返回html页面，它会经过格式化成HTML格式后展示，比如返回json，那么也会格式化成json格式展示 。\",\"Raw：翻译成中文未经过加工的，也就是原始数据 ，原始数据一般都是本文格式的，未经过格式化处理的，一般在抓包工具中都有这个选项 。\",\"Preview：翻译成中文就是预览，这个选项一般对返回HTML的页面效果特别明显，如请求百度后返回结果，点击这个选项后就直接能查看到的页面 ，如下图 。同时这个选项和浏览器抓包中的Preview也是一样的 。\",\"图片\"]},\"736\":{\"h\":\"3. 接口管理（Collection）\",\"t\":[\"当我们对一个或多个系统中的很多用例进行维护时，首先想到的就是对用例进行分类管理，同时还希望对这批用例做回归测试 。在postman也提供了这样一个功能，就是Collection 。通过这个Collection就可以满足我们的上面说的需求。\",\"先对Collection功能的使用场景做个简单总结 。\",\"用例分类管理，方便后期维护\",\"可以进行批量用例回归测试 。\",\"那么Collection是如何去管理用例的呢 ？先想象我们要测试一个系统，系统下有多个模块，每个模块下有很多的被测接口用例 。那么基于这个场景，我们来通过Collection来进行实现：\",\"1.点击Collection，点击+New Collection，在弹出的输入框中输入Collection名称（这个就可以理解为所测试的系统）\",\"图片\",\"2.选中新建的Collection右键，点击Add Folder ，在弹出对话框中输入文件夹名称（这个就可以理解为系统中的模块）\",\"图片\",\"3.选中新建的Folder，点击Add Request ，在弹出的对话框中输入请求名称，这个就是我们所测试的接口，也可以理解为测试用例 。\",\"图片\",\"那么通过以上三个步骤，达到的效果就是如图所示：\",\"图片\",\"总结，通过上面的操作，我们实现了一个最简单的demo模型。但实际上，有了这个功能才是postman学习的开始，因为很多功能都是基础这个功能的基础上进行的，比如用例的批量执行，Mock ，接口文档等功能 。\"]},\"737\":{\"h\":\"4.批量执行接口请求\",\"t\":[\"当我们在一个Collection中编写了很多的接口测试用例，想一起执行这批用例，在postman中是如何操作呢 ？\",\"实现步骤：\",\"1.选中一个Collection，点击右三角，在弹出的界面点击RUN\",\"图片\",\"2.这是会弹出一个叫Collection Runner的界面，默认会把Collection中的所有用例选中 。\",\"图片\",\"3.点击界面下方的RUN Collection，就会对Collection中选中的所有测试用例运行 。\",\"图片\",\"对上面的几个红框内的功能进行简单说明：\",\"断言统计：左上角的两个0是统计当前Collection中断言成功的执行数和失败的执行数，如果没有编写断言默认都为0 。\",\"Run Summary: 运行结果总览，点击它可以看到每个请求中具体的测试断言详细信息 。Export Result：导出运行结果，默认导出的结果json文件 。\",\"Retry: 重新运行，点击它会把该Collection重新运行一遍\",\"New：返回到Runner，可以重新选择用例的组合 。\",\"总体来说，这个功能主要是用于对一个Collection中的所有用例或部分用例进行批量运行，已达到手工回归测试的目的。\"]},\"738\":{\"h\":\"5.日志调试\",\"t\":[\"在做接口测试时，经常会因为代码写的有问题导致报错，这时通过查看日志就显得非常重要了，postman也提供了这样的功能，它允许我们在脚本中编写打印语句，查看打印的结果 ; 同时也可以查看每个请求的日志信息 。\",\"在postman中编写日志打印语句使用的是JavaScript，编写的位置可以是Pre-request Script 或Tests标签中。编写打印语句如：console.log(\\\"我是一条日志\\\")\",\"图片\",\"那么打印的日如何看呢 ？在postman中有俩个入口，第一个入口就是：view-show postman console 。\",\"第二个入口就是左下角第三个图标 。\",\"图片\",\"打开的日志界面：\",\"图片\",\"这里面有几个比较实用的功能：\",\"搜索日志：输入URL或者打印的日志就能直接搜索出我们想要的请求和日志，这对我们在众多日志中查找某一条日志是非常方便的 。\",\"按级别搜索：可以查询log,info,warning,error级别的日志 ，有助于我们更快定位到错误 。\",\"查看原始报文(Show raw log)：如果习惯看原始请求报文的话，这个功能可能更方便些 。\",\"隐藏请求(Hide network)：把请求都隐藏掉，只查看输出日志 。\",\"总之，通过这个功能，我们在请求接口报错时，通过打印响应的日志，就能很轻松的找到问题原因了 。\"]},\"739\":{\"h\":\"6.断言\",\"t\":[\"如果没有断言，我们只能做接口的功能测试，但有了断言后，就为我们做自动化提供了条件，并且在postman中的断言是非常方便和强大的 。\",\"我们先来了解下postman断言的一些特点 ，具体如下\",\"断言编写位置：Tests标签\",\"断言所用语言：JavaScript\",\"断言执行顺序：在响应体数据返回后执行 。\",\"断言执行结果查看：Test Results\",\"在上面我们介绍到，编写的断言代码是JavaScript，那如果不会写怎么办 ？不用担心，因为postman已经给我们内置了一些常用的断言 。用的时候，只需从右侧点击其中一个断言，就会在文本框中自动生成对应断言代码块 。\",\"图片\",\"接下来就让我们了解一些常用断言，还是按响应的组成来划分，分别是状态行，响应头，响应体。\",\"状态行中又包括状态码，状态消息 。在postman也可以对这两个进行断言\",\"状态行中的断言：\",\"断言状态码：Status code: code is 200\",\"pm.test(\\\"Status code is 200\\\", function () { pm.response.to.have.status(200); //这里填写的200是预期结果，实际结果是请求返回结果 }); \",\"断言状态消息：Status code：code name has string\",\"pm.test(\\\"Status code name has string\\\", function () { pm.response.to.have.status(\\\"OK\\\"); //断言响应状态消息包含OK }); \",\"响应头中的断言\",\"断言响应头中包含：Response headers:Content-Type header check\",\"pm.test(\\\"Content-Type is present\\\", function () { pm.response.to.have.header(\\\"Content-Type\\\"); //断言响应头存在\\\"Content-Type\\\" }); \",\"断言响应体(重点)\",\"断言响应体中包含XXX字符串：Response body:Contains string\",\"pm.test(\\\"Body matches string\\\", function () { pm.expect(pm.response.text()).to.include(\\\"string_you_want_to_search\\\"); }); //注解 pm.expect(pm.response.text()).to.include(\\\"string\\\") 获取响应文本中包含string \",\"断言响应体等于XXX字符串：Response body : is equal to a string\",\"pm.test(\\\"Body is correct\\\", function () { pm.response.to.have.body(\\\"response_body_string\\\"); }); //注解 pm.response.to.have.body(\\\"response_body_string\\\"); 获取响应体等于response_body_string \",\"断言响应体(json)中某个键名对应的值：Response body : JSON value check\",\"pm.test(\\\"Your test name\\\", function () { var jsonData = pm.response.json(); pm.expect(jsonData.value).to.eql(100); }); //注解 var jsonData = pm.response.json() 获取响应体，以json显示，赋值给jsonData .注意：该响应体必须返会是的json，否则会报错 pm.expect(jsonData.value).to.eql(100) 获取jsonData中键名为value的值，然后和100进行比较 \",\"响应时间(一般用于性能测试)\",\"断言响应时间：Response time is less than 200ms\",\"pm.test(\\\"Response time is less than 200ms\\\", function () { pm.expect(pm.response.responseTime).to.be.below(200); //断言响应时间<200ms }); \",\"案例说明：\",\"针对以下接口返回的数据进行断言：\",\"{ \\\"cityid\\\": \\\"101120101\\\", \\\"city\\\": \\\"济南\\\", \\\"update_time\\\": \\\"2020-04-17 10:50\\\", \\\"wea\\\": \\\"晴\\\", \\\"wea_img\\\": \\\"qing\\\", \\\"tem\\\": \\\"16\\\", \\\"tem_day\\\": \\\"20\\\", \\\"tem_night\\\": \\\"9\\\", \\\"win\\\": \\\"东北风\\\", \\\"win_speed\\\": \\\"3级\\\", \\\"win_meter\\\": \\\"小于12km/h\\\", \\\"air\\\": \\\"113\\\" } \",\"断言响应状态码为200\",\"断言city等于济南\",\"断言update_time包含2020-04-17\",\"图片\",\"总结，整体来说，如果用postman做接口测试，这个断言功能必不可少，其中我们常断言的响应体包含和JSON这俩个断言又是重重之重。\"]},\"740\":{\"h\":\"7.变量（全局/集合/环境）\",\"t\":[\"变量可以使我们在请求或脚本中存储和重复使用其值，通过将值保存在变量中，可以在集合，环境或请求中引用。\",\"对我们做接口测试来说，又是一个非常重要的功能 。\",\"在postman常用的三种变量分别是全局变量，环境变量，集合变量 。\",\"全局变量：一旦申明了全局变量，全局有效，也就是说postman中的任何集合，任何请求中都可以使用这个变量。它的作用域是最大的 。\",\"环境变量：要申明环境变量，首先的创建环境，然后在环境中才能创建变量 。如果要想使用环境变量，必须先选择(导入)这个环境，这样就可以使用这个环境下的变量了 。需要说明的是环境也可以创建多个 。每个环境下又可以有多个变量 。\",\"集合变量：集合变量是针对集合的，也就是说申明的变量必须基于某个集合，它的使用范围也只是针对这个集合有效 。\",\"其中，他们的作用域范围依次从大到小：全局变量>集合变量>环境变量 。当在几个不同的范围内都申明了相同的变量时，则会优先使用范围最小的变量使。\",\"想要使用变量中的值只需俩个步骤，分别是定义变量和获取变量 。\",\"定义变量（设置变量）\",\"获取变量（访问变量）\"]},\"741\":{\"h\":\"定义变量\",\"t\":[\"定义全局变量和环境变量，点击右上角的小齿轮，弹出如下界面，就可以根据需求定义全局变量或者环境变量了。\",\"图片\",\"已经定义的全局变量和环境变量，可以进行快速查看：\",\"图片\"]},\"742\":{\"h\":\"定义集合变量\",\"t\":[\"选择一个集合，打开查看更多动作(…)菜单，然后点击编辑 。选择“变量”选项卡以编辑或添加到集合变量。\",\"图片\",\"定义变量除了以上方式，还有另外一种方式 。但是这种方式在不同的位置定义，编写不一样。\",\"在URL，Params , Authorization , Headers , Body中定义：\",\"1.手工方式创建一个空的变量名\",\"2.在以上的位置把想要的值选中右击，选中Set：环境|全局 ，选中一个变量名，点击后就会保存到这个变量中\",\"图片\",\"在Tests，Pre-requests Script：\",\"定义全局变量：pm.collectionVariables.set(\\\"变量名\\\",变量值)\",\"定义环境变量：pm.environment.set(\\\"变量名\\\"，变量值)\",\"定义集合变量：pm.variables.set(\\\"变量名\\\",变量值)\"]},\"743\":{\"h\":\"获取变量\",\"t\":[\"定义好变量，接下来就可以使用变量了 。需要注意的是，在不同的位置获取变量，编写的规则也是不一样的 。\",\"如果在请求参数中获取变量，无论是获取全局变量，还是环境变量，还是集合变量，获取的方式都是一样的编写规则：{{变量名}} 。\",\"请求参数指的是：URL，Params , Authorization , Headers , Body\",\"如果是在编写代码的位置(Tests,Pre-requests Script)获取变量，获取不同类型的变量，编写的代码都不相同，具体如下：\",\"获取环境变量：pm.environment.get(‘变量名’)\",\"获取全局变量：pm.globals.get('变量名')\",\"获取集合变量：pm.pm.collectionVariables.get.get('变量名')\",\"图片\",\"变量的使用场景非常广泛，比如我们后面要提到的接口关联，请求前置脚本都会使用到变量 。\"]},\"744\":{\"h\":\"8.请求前置脚本\",\"t\":[\"前置脚本其实就是在Pre-requests Script中编写的JavaScript脚本，想要了解这个功能，需要先了解它的执行顺序。那么下面就来看下它的执行顺序 。\",\"可以看出，一个请求在发送之前，会先去执行Pre Request Script（前置脚本）中的代码 。那么这个功能在实际工作中有什么作用呢 ？\",\"主要场景：一般情况下，在发送请求前需要对接口的数据做进一步处理，就都可以使用这个功能，比如说，登录接口的密码，在发送前需要做加密处理，那么就可以在前置脚本中做加密处理，再比如说，有的接口的输入参数有一些随机数，每请求一次接口参数值都会发送变化，就可以在前置脚本中编写生成随机数的代码 。\",\"总体来说，就是在请求接口之前对我们的请求数据进行进一步加工处理的都可以使用前置脚本这个功能。\",\"接下来通过一个案例来看下该功能是如何使用 ？\",\"案例：\",\"请求的登录接口URL，参数t的值要求的规则是每次请求都必须是一个随机数。\",\"接口地址：http://localhost/index.php？m=Home&c=User&a=do_login&t=0.7102045930338428\",\"图片\",\"实现步骤：\",\"在前置脚本中编写生成随机数\",\"将这个值保存成环境变量\",\"将参数t的值替换成环境变量的值 。\",\"图片\",\"总之，这个前置脚本对我们做接口测试也非常有用，对一些复杂的场景，都可以使用前置脚本进行处理后再请求接口 。\"]},\"745\":{\"h\":\"9.接口关联\",\"t\":[\"在我们测试的接口中，经常出现这种情况 。上一个接口的返回数据是下一个接口的输入参数 ，那么这俩个接口就产生了关联。这种关联在做接口测试时非常常见，那么在postman中，如何实现这种关联关系呢 ？\",\"实现思路：\",\"提取上一个接口的返回数据值，\",\"将这个数据值保存到环境变量或全局变量中\",\"在下一个接口获取环境变量或全局变量\",\"案例：\",\"用户上传头像功能，需要用户先上传一张图片，然后会自动预览 。那么在这个过程中，会调用到俩个接口 ，第一个上传头像接口，第二个预览图像接口 。\",\"其中调用上传头像接口成功后会返回如下信息：\",\"{ \\\"url\\\": \\\"/public/upload/user//head_pic//ba51d1c2f7f7b98dfb5cad90846e2d79.jpg\\\", \\\"title\\\": \\\"banner\\\", \\\"original\\\": \\\"\\\", \\\"state\\\": \\\"SUCCESS\\\", \\\"path\\\": \\\"images\\\" } \",\"而图像预览接口URL为：\",\"http://localhost/public/upload/user//head_pic//ba51d1c2f7f7b98dfb5cad90846e2d79.jpg 。可以看出这个接口的URL后半部分其实是上一个接口返回的url的值 。那么这俩个接口就产生了关联。那么在postman 可以通过以下三步完成这俩个接口的关联实现 。\",\"实现步骤：\",\"获取上传头像接口返回url的值\",\"将这个值保存成全局变量(环境变量也可以)\",\"在图像预览中使用全局变量\",\"图片\",\"可以看出，接口的关联的解决方案都是用的是变量中的知识，也就是说只要你明确了要提取的值，后面就是保存该值，然后在其他接口使用该值就可以了。\"]},\"746\":{\"h\":\"10.常见返回值获取\",\"t\":[\"在做接口测试时，请求接口返回的数据都是很复杂的json数据，有着多层嵌套，这样的数据层级在postman怎么获取呢 ？\",\"案例1：多层json嵌套, 获取user_id的值\",\"{ \\\"code\\\": 0, \\\"message\\\": \\\"请求成功！\\\", \\\"data\\\": { \\\"user_id\\\": \\\"1252163151781167104\\\" } } //获取json体数据 var jsonData = pm.response.json() // 获取user_id的值,通过.获取 var user_id = jsonData.data.user_id \",\"案例2：json中存在列表，获取points中的第二个元素\",\"{ \\\"code\\\": 0, \\\"message\\\": \\\"请求成功！\\\", \\\"data\\\": { \\\"roles\\\": { \\\"api\\\": [ \\\"API-USER-DELETE\\\" ], \\\"points\\\": [ \\\"point-user-delete\\\", \\\"POINT-USER-UPDATE\\\", \\\"POINT-USER-ADD\\\" ] }, \\\"authCache\\\": null } } //获取json体数据 var jsonData = pm.response.json() // 获取user_id的值,通过下标获取列表中某个元素 var user_id = jsonData.data.roles.points[1] \",\"案例3：列表中取最后一个元素\",\"{ \\\"code\\\": 0, \\\"message\\\": \\\"请求成功！\\\", \\\"data\\\": { \\\"total\\\": 24, \\\"rows\\\": [ { \\\"id\\\": \\\"1066370498633486336\\\", \\\"mobile\\\": \\\"15812340003\\\", \\\"username\\\": \\\"zbz\\\" }, { \\\"id\\\": \\\"1071632760222810112\\\", \\\"mobile\\\": \\\"16612094236\\\", \\\"username\\\": \\\"llx\\\" }, ... { \\\"id\\\": \\\"1075383133106425856\\\", \\\"mobile\\\": \\\"13523679872\\\", \\\"username\\\": \\\"test001\\\", }, //获取json体数据 var jsonData = pm.response.json() // 获取id的值,通过slice(-1)获取列表中最后一个元素。 var id = jsonData.data.rows.slice(-1)[0] \",\"来源：雨滴测试 www.toutiao.com/i6913538714060800515\"]},\"747\":{\"h\":\"Git基本操作\"},\"748\":{\"h\":\"Git安装\",\"t\":[\"可以直接从官网下载安装程序，然后按照默认的选项进行安装 https://git-scm.com/downloads 或者 https://gitforwindows.org/\",\"安装完成后找到Git Bash，然后出来一个类似于命令窗口的东西，就说明Git安装成功了\",\"安装成功后，还需要最后一步的设置，在命令行输入\",\"git config --global user.name \\\"Your Name\\\" git config --global user.email \\\"email@example.com\\\" \",\"这是因为Git是分布式版本控制系统，所以每个机器都必须自报家门：你的名字和email地址。\",\"注意：git conifg命令中的--globdal参数，这就表示你的这台机器上所有的Git仓库都使用这个地址。也可以对每个仓库指定不同的名称和email地址。\"]},\"749\":{\"h\":\"流程\"},\"750\":{\"h\":\"创建仓库\",\"t\":[\"将本地一个文件夹变为Git可以管理的仓库\",\"git init \"]},\"751\":{\"h\":\"拉取仓库\",\"t\":[\"git clone https://用户名:密码@仓库地址 # 拉取某一分支 git clone -b 分支名 https://gitee.com/AZRNG/event-bus.git \"]},\"752\":{\"h\":\"Git创建版本库\",\"t\":[\"版本库又叫做仓库，英文名称是repository，你可以理解为是一个目录，这目录里面所有的问题都可以被Git管理起来，每一个文件的修改删除Git都可以进行跟踪，以便任何时刻都可以追踪历史或在将来的某一个时间可以还原。\",\"创建版本库，找到一个合适的地方，然后右键选择Git Bash Here\",\"命令：mkdir learngit\",\"img\",\"进入这个目录\",\"命令：cd learngit\",\"显示当前目录\",\"命令：pwd\",\"img\",\"通过 git init 命令可以把这个目录变成Git可以管理的仓库\",\"img\",\"然后我们就建好了一个空的仓库，在查看隐藏项目的条件下，我们可以看见都一个.git的目录，这个是Git用来跟踪管理版本文件的。或者使用ls -ah命令就可以看见。\"]},\"753\":{\"h\":\"Git添加文件\",\"t\":[\"在仓库下创建一个文件为readme.txt，接着我们使用命令 git add告诉Git，把文件添加到仓库。\",\"img\"]},\"754\":{\"h\":\"Git提交\",\"t\":[\"使用git commit告诉Git，把文件提交到Git仓库\",\"img\",\"-m后面是本次提交的说明，可以输入有意义的提交内容\",\"1 file changed：一个文件被改动\",\"2 insertions：插入了两行内容\",\"Git的添加文件和提交文件区分开来的目的是，因为一次性提交多个文件，所以你可以多次add不同的文件。比如：\",\"git add file1.txt$ git add file2.txt file3.txt$ git commit -m \\\"add 3 files.\\\"\"]},\"755\":{\"h\":\"分支操作\"},\"756\":{\"h\":\"创建分支\",\"t\":[\"创建dev分支\",\"git branch dev \"]},\"757\":{\"h\":\"Git切换分支\",\"t\":[\"git checkout dev(分支名称) \"]},\"758\":{\"h\":\"Git查看当前分支\",\"t\":[\"git branch -a \"]},\"759\":{\"h\":\"合并分支\",\"t\":[\"切换到主分支master，合并dev分支到当前分支master\",\"git merge dev \"]},\"760\":{\"h\":\"删除分支\",\"t\":[\"git branch -d dev \"]},\"761\":{\"h\":\"推送分支\",\"t\":[\"git push -u origin master \"]},\"762\":{\"h\":\"标签\"},\"763\":{\"h\":\"创建标签\",\"t\":[\"默认标签是打在最新提交的commit上\",\"git tag v1.0 \"]},\"764\":{\"h\":\"删除标签\",\"t\":[\"git tag -d v0.1 删除远程标签 git tag -d v0.9 git push origin :refs/tags/v0.9 \"]},\"765\":{\"h\":\"推送标签到远程仓库\",\"t\":[\"#推送指定标签至远程 git push origin v0.1 #推送全部标签至远程 git push origin --tags \"]},\"766\":{\"h\":\"切换标签\",\"t\":[\"#tag标签管理 git tag #切换 git checkout tag值 \"]},\"767\":{\"h\":\"仓库信息\"},\"768\":{\"h\":\"查看仓库当前状态\",\"t\":[\"继续修改readme.txt文件，然后我们运行git status命令查看结果\",\"git status \",\"On branch masterChanges not staged for commit: (use \\\"git add <file>...\\\" to updatewhat will be committed) (use \\\"git checkout -- <file>...\\\" to discard changes in working directory)\",\"​ modified: readme.txt no changes added to commit (use \\\"git add\\\" and/or \\\"git commit -a\\\")\",\"这告诉我们readme.txt已经被吸怪了，但是还没有准备提交\"]},\"769\":{\"h\":\"查看上次的修改\",\"t\":[\"使用命令git diff\",\"git diff \",\"diff --git a/readme.txt b/readme.txt\",\"index d8036c1..013b5bc 100644\",\"--- a/readme.txt\",\"+++ b/readme.txt\",\"@@ -1,2 +1,2 @@\",\"-Git is a version control system.\",\"+Git is a distributed version control system.\",\"Git is free software.\",\"\\\\ No newline at end of file\",\"再次提交修改后的文件到仓库，第一步是git add\",\"img\",\"再次提交\",\"img\",\"查看文件状态\",\"git statusOn branch masternothing to commit, working tree clean\"]},\"770\":{\"h\":\"查看提交的历史记录\",\"t\":[\"git log \",\"img\",\"显示顺序是从最近到最远的提交日志\"]},\"771\":{\"h\":\"Git版本回退\",\"t\":[\"Git中使用HEAD表示当前版本，上一个版本是HEAD,上上一个版本是HEAD^，往上100个版本是HEAD~100.\",\"现在回退到上一个版本\",\"git reset \",\"img\",\"查看内容果然被还原了\",\"Git版本回退、撤销修改、删除文件 接着看网址：此处\"]},\"772\":{\"h\":\"清除已删除的远程分支\",\"t\":[\"git fetch -p（如果这个分支已经在本地也创建那么删除不掉） \"]},\"773\":{\"h\":\"删除本地分支\",\"t\":[\"git branch -d <branchName> (会在删除前检查merge状态，避免误删没有合并的分支) \"]},\"774\":{\"h\":\"更改仓库对应地址\",\"t\":[\"在仓库目录下右键Git Bash Here中输入命令：\",\"查询关联\",\"git remote -v\",\"img\",\"删除关联\",\"git remote rm origin\",\"添加关联\",\"git remote add origin 新地址git链接\",\"推送主分支：\",\"git push -u origin master\",\"推送其他分支\",\"git push -u origin develop #\",\"查看所有分支：\",\"git branch -av\",\"如果修改关联地址后出来呢问题：\",\"See git-pull(1) for details\",\"git pull <remote> <branch>\",\"If you wish to set tracking information for this branch you can do so with:\",\"git branch --set-upstream-to=origin/<branch> dev\",\"那么运行命令：\",\"git branch --set-upstream-to=origin/dev dev\"]},\"775\":{\"h\":\"记住密码\",\"t\":[\"场景：在git每次推送的和拉取的时候需要输入账号和密码，这是一件非常痛苦的事情，那么我们现在看下如何解决这种情况:\",\"在Git项目的文件夹（包含隐藏文件.git文件夹的）内右键git bash here\",\"img\",\"然后输入命令\",\"git config credential.helper store \",\"这里没有--global意思是指只对这个仓库生效，建议以后都不要加--global，让代码配置以仓库为单位存储就好，设置成全局不灵活\",\"打开.git文件夹的.config文件，回发现多了两行\",\"img\",\"然后git push到远程仓库，输入用户名和密码，然后再次运行git push时候就不用输入用户名和密码了\",\"删除已经保存的账户密码\",\"克隆项目的时候，输错了一次密码，然后提示认证失败，然后后期再次输入密码啥等一直拉取不成功，如何让忘记密码再次输入密码\",\"在仓库目录下运行git-bash 管理员方式运行\",\"命令：git config --system --unset credential.helper #清除保存好的账号密码\",\"之后会弹出用户名和密码，输入即可\"]},\"776\":{\"h\":\"Git基本原理\",\"t\":[\"简单地说，Git 究竟是怎样的一个系统呢？请注意接下来的内容非常重要，若你理解了 Git 的思想和基本工作原理，用起来就会知其所以然，游刃有余。在学习 Git 时，请尽量理清你对其它版本管理系统已有的认识，如 CVS、Subversion 或 Perforce， 这样能帮助你使用工具时避免发生混淆。尽管 Git 用起来与其它的版本控制系统非常相似， 但它在对信息的存储和认知方式上却有很大差异，理解这些差异将有助于避免使用中的困惑。\"]},\"777\":{\"h\":\"Git 初始化代码仓库\",\"t\":[\"执行完成了 git init 命令，究竟做了什么呢？\",\"执行完成如下命令之后，我们可以得到下图所示的内容，右侧的就是 Git 为我们创建的代码仓库，其中包含了用于版本管理所需要的内容。\",\"# 左边执行 $ mkdir git-demo $ cd git-demo && git init $ rm -rf .git/hooks/*.sample # 右边执行 $ watch -n 1 -d find . \",\"img\",\"我们这里可以一起看下生成的 .git 目录的结构如何：\",\"➜ tree .git .git ├── HEAD ├── config ├── description ├── hooks ├── info │&nbsp;&nbsp; └── exclude ├── objects │&nbsp;&nbsp; ├── info │&nbsp;&nbsp; └── pack └── refs ├── heads └── tags \",\".git/config - 当前代码仓库本地的配置文件\",\"本地配置文件（.git/config）和全局配置文件（~/.gitconfig）\",\"通过执行如下命令，可以将用户配置记录到本地代码仓库的配置文件中去\",\"git config user.name \\\"demo\\\"\",\"git config user.email \\\"demo@demo.com\\\"\",\"➜ cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true [user] name = demo email = demo@demo.com \",\".git/objects - 当前代码仓库代码的存储位置\",\"blob 类型\",\"commit 类型\",\"tree 类型\",\"# 均无内容 ➜ ll .git/objects total 0 drwxr-xr-x 2 escape staff 64B Nov 23 20:39 info drwxr-xr-x 2 escape staff 64B Nov 23 20:39 pack ➜ ll .git/objects/info ➜ ll .git/objects/pack \",\".git/info - 当前仓库的排除等信息\",\"➜ cat ./.git/info/exclude # git ls-files --others --exclude-from=.git/info/exclude # Lines that start with '#' are comments. # For a project mostly in C, the following would be a good set of # exclude patterns (uncomment them if you want to use them): # *.[oa] # *~ \",\".git/hooks - 当前代码仓库默认钩子脚本\",\"./.git/hooks/commit-msg.sample ./.git/hooks/pre-rebase.sample ./.git/hooks/pre-commit.sample ./.git/hooks/applypatch-msg.sample ./.git/hooks/fsmonitor-watchman.sample ./.git/hooks/pre-receive.sample ./.git/hooks/prepare-commit-msg.sample ./.git/hooks/post-update.sample ./.git/hooks/pre-merge-commit.sample ./.git/hooks/pre-applypatch.sample ./.git/hooks/pre-push.sample ./.git/hooks/update.sample \",\".git/HEAD - 当前代码仓库的分支指针\",\"➜ cat .git/HEAD ref: refs/heads/master \",\".git/refs - 当前代码仓库的头指针\",\"# 均无内容 ➜ ll .git/refs total 0 drwxr-xr-x 2 escape staff 64B Nov 23 20:39 heads drwxr-xr-x 2 escape staff 64B Nov 23 20:39 tags ➜ ll .git/refs/heads ➜ ll .git/refs/tags \",\".git/description - 当前代码仓库的描述信息\",\"➜ cat .git/description Unnamed repository; edit this file 'description' to name the repository. \"]},\"778\":{\"h\":\"Add 之后发生了什么\",\"t\":[\"执行完成了 git add 命令，究竟做了什么呢？\",\"执行完成如下命令之后，我们可以得到下图所示的内容，我们发现右侧新增了一个文件，但是 Git 目录里面的内容丝毫没有变化。这是因为，我们现在执行的修改默认是放在工作区的，而工作区里面的修改不归 Git 目录去管理。\",\"而当我们执行 git status 命令的时候，Git 又可以识别出来现在工作区新增了一个文件，这里怎么做到的呢？—— 详见[理解 blob 对象和 SHA1]部分\",\"而当我们执行 git add 命令让 Git 帮助我们管理文件的时候，发现右侧新增了一个目录和两个文件，分别是 8d 目录、index 和 0e41.. 文件。\",\"# 左边执行 $ echo \\\"hello git\\\" > helle.txt $ git status $ git add hello.txt # 右边执行 $ watch -n 1 -d find . \",\"图片\",\"图片\",\"我们这里重点看下，生成的 8d 这个目录以及下面的文件。而其名称的由来是因为 Git 对其进行了一个叫做 SHA1 的 Hash 算法，用于将文件内容或者字符串变成这么一串加密的字符。\",\"# 查看 objects 的文件类型 $ git cat-file -t 8d0e41 blob # 查看 objects 的文件内容 $ git cat-file -p 8d0e41 hello git # 查看 objects 的文件大小 $ git cat-file -s 8d0e41 10 # 拼装起来 blob 10\\\\0hello git \",\"现在我们就知道了，执行 git add 命令将文件从工作区添加到暂存区里面，Git 会把帮助我们生成一些 Git 的对象，它存储的是文件的内容和文件类型并不存储文件名称。\",\"为了验证我们上述的说法，我们可以添加同样的内容到另一个文件，然后进行提交，来观察 .git 目录的变化。我们发现，右侧的 objects 目录并没有新增目录和文件。这就可以证明，blob 类型的 object 只存储的是文件的内容，如果两个文件的内容一致的话，则只需要存储一个 object 即可。\",\"话说这里 object 为什么没有存储文件名称呢？这里因为 SHA1 的 Hash 算法计算哈希的时候，本身就不包括文件名称，所以取什么名称都是无所谓的。那问题来了，就是文件名的信息都存储到哪里去了呢？—— 详见[理解 blob 对象和 SHA1]部分\",\"# 左边执行 $ echo \\\"hello git\\\" > tmp.txt $ git add tmp.txt # 右边执行 $ watch -n 1 -d find . \",\"图片\"]},\"779\":{\"h\":\"理解 blob 对象和 SHA1\",\"t\":[\"了解 Git 的 blob 对象和 SHA1 之前的关系和对应计算！\",\"Hash 算法是把任意长度的输入通过散列算法变化成固定长度的输出，根据算法的不同，生成的长度也有所不同。\",\"Hash 算法：\",\"MD5 - 128bit - 不安全 - 文件校验\",\"SHA1 - 160bit(40位) - 不安全 - Git 存储\",\"SHA256 - 256bit- 安全 - Docker 镜像\",\"SHA512 - 512bit - 安全\",\"但是，当我们使用工具对上述文件内容进行 SHA1 计算的时候，会发现并没有我们在 .git 目录里面看到的那样，这是为什么呢？\",\"➜ echo \\\"hello git\\\" | shasum d6a96ae3b442218a91512b9e1c57b9578b487a0b - \",\"这里因为 Git 工具的计算方式，是使用类型 长度 \\\\0 内容的方式进行计算的。这里，我们算了下文件内容只有九位，但是这里是十位，这里因为内容里面有换行符的存在导致的。现在我们就可以使用 git cat-file 命令来拼装 Git 工具存储的完整内容了。\",\"➜ ls -lh hello.txt -rw-r--r-- 1 escape staff 10B Nov 23 21:12 hello.txt ➜ echo \\\"blob 10\\\\0hello git\\\" | shasum 8d0e41234f24b6da002d962a26c2495ea16a425f - # 拼装起来 blob 10\\\\0hello git \",\"图片\",\"当我们使用 cat 命令来查看 object 对象里面的内容的时候，发现看着像是一串乱码。其实这是 Git 工具将文件的原始内容进行一个压缩，然后再存储到 object 对象里面。奇怪的是，我们发现压缩之后的内容反而比原始内容还大！\",\"这是因为其进行了压缩，存储了一些压缩相关的信息。上例所示的比原始文件大，是因为我们创建的内容实在是太小了。当我们常见一个比较大的文件时，就会看到压缩之后的文件大小远小于原始文件的。\",\"➜ cat .git/objects/8d/0e41234f24b6da002d962a26c2495ea16a425f xKOR04`HWH,6A% ➜ ls -lh .git/objects/8d/0e41234f24b6da002d962a26c2495ea16a425f -r--r--r-- 1 escape staff 26B Nov 23 21:36 .git/objects/8d/0e41234f24b6da002d962a26c2495ea16a425f ➜ file .git/objects/8d/0e41234f24b6da002d962a26c2495ea16a425f .git/objects/8d/0e41234f24b6da002d962a26c2495ea16a425f: VAX COFF executable not stripped - version 16694 \",\"其实，我们这里也是可以通过 Python 代码来获取二进制 object 对象的内容的。\",\"import zlib contents = open('0e41234f24b6da002d962a26c2495ea16a425f', 'rb').read() zlib.decompress(contents) \",\"图片\"]},\"780\":{\"h\":\"聊聊工作区和暂存区\",\"t\":[\"聊聊工作区和暂存区，以及文件如何在工作区和缓存区之间同步的问题。\",\"之前的章节我们也聊到了，当我们执行 git status 命令的时候，Git 工具怎么知道我们有一个文件没有追踪，以及文件名的信息都存储到哪里去了？\",\"这一切的答案，都要从工作区和索引区讲起。Git 根据其存储的状态不同，将对应状态的“空间”分为工作区、暂存区（也可称为索引区）和版本区三类。具体示例，可以参考下图。\",\"图片\",\"而更加深层次的理解，就要从执行 git add 命令后生成相关的 object 对象，但是其存储的是文件的类容、大小和内容，并不包含文件名称的信息。而文件名称相关的信息就包含在生成的 index 文件（索引文件）里面。\",\"当我们直接查看 index 文件里面的内容，发现使我们无法理解的乱码，但是通过基本的输出，我们可以看到其文件名称。要想查看 index 文件的内容，可以通过 Git 提供的相关命令进行查看。\",\"# 左边执行 $ echo \\\"file1\\\" > file1.txt $ git add file1.txt $ cat .git/index $ git ls-files # 列出当前暂存区的文件列表信息 $ git ls-files -s # 列出当前暂存区文件的详细信息 # 右边执行 $ watch -n 1 -d tree .git \",\"图片\",\"当添加文件的时候，文件或目录会从工作区流向暂存区，加之一些其他操作，会导致工作区和暂存区是会有一定差别的。这就会导致，当我们执行 git status 的结果就是两者的差别。\",\"经过如下操作，会使工作区和暂存区和的内容不一致了，通过命令我们也是可以查看区别的。当我们使用 add 命令将新文件添加到暂存区的时候，会发现这下就一致了。\",\"# 左边执行 $ git status $ echo \\\"file2\\\" > file2.txt $ git ls-files -s $ git status $ git add file2.txt $ git ls-files -s $ git status # 右边执行 $ watch -n 1 -d tree .git \",\"图片\",\"如果我们这里去修改一个文件的话，很显然这个时候我们的工作区和暂存区又不一致了。当我们使用命令去查看文件状态的时候，发现一个文件被修改了，而 Git 是怎么知道的呢？咳咳，就是通过查找 index 文件的内容，找到对应文件名称以及其内部引用的 object 对象，与工作区的文件内容进行对比而来的。\",\"# 左边执行 $ git ls-files -s $ echo \\\"file.txt\\\" > file1.txt $ git status # 右边执行 $ watch -n 1 -d tree .git \",\"而这个时候，我们再使用 git add 命令将其修改内容保存至暂存区的话，会发现对应文件的 object 的 blob 对象的引用值发生改变了。这时可以发现，objects 目录下面有三个对象了，其中 file1.txt 占了两个，但是文件却只有两个。通过命令查看对应 blob 对象的内容，发现各有不同。\",\"# 左边执行 $ git ls-files -s $ git add file1.txt $ git ls-files -s # 右边执行 $ watch -n 1 -d tree .git \",\"图片\"]},\"781\":{\"h\":\"理解 commit 提交原理\",\"t\":[\"执行完成了 git commit 命令，究竟做了什么呢？\",\"Git 仓库中的提交记录保存的是你的目录下所有文件的快照，就像是把整个目录复制，然后再粘贴一样，但比复制粘贴优雅许多！Git 希望提交记录尽可能地轻量，因此在你每次进行提交时，它并不会盲目地复制整个目录。条件允许的情况下，它会将当前版本与仓库中的上一个版本进行对比，并把所有的差异打包到一起作为一个提交记录。Git 还保存了提交的历史记录。这也是为什么大多数提交记录的上面都有父节点的原因。\",\"当我们使用 add 命令将工作区提交到暂存区，而暂存区其实保存的是当前文件的一个状态，其中包括有哪些目录和文件，以及其对应的大小和内容等信息。但是我们最终是需要将其提交到代码仓库（本地）的，而其命令就是 git commit 了。\",\"图片\",\"而当我们执行 git commit 命令的时候，究竟都发生了什么呢？可以看到当提交之后，.git 目录中生成了两个信息的 object 对象，其中 logs 和 refs 目录都有新的文件生成。通过如下操作，我们可以查看到其提交的类型和对应内容。\",\"# 左边执行 $ git commit -m \\\"1st commit\\\" $ git cat-file -t 6e4a700 # 查看 commit 对象的类型 $ git cat-file -p 6e4a700 # 查看 commit 对象的内容 $ git cat-file -t 64d6ef5 # 查看 tree 对象的类型 $ git cat-file -p 64d6ef5 # 查看 tree 对象的内容 # 右边执行 $ watch -n 1 -d tree .git \",\"图片\",\"这样我们就理解了，当我们执行 git commit 命令之后，会生成一个 commit 对象和一个 tree 对象。commit 对象内容里面包含了一个 tree 对象和相关提交信息，而 tree 对象里面则包含了这次我们提交版本里面的文件状态（文件名称和 blob 对象），这样我们就知道了这次提交的变动了。\",\"图片\",\"我们这次提交之后，处理 objects 目录发生变动之外，还有一些其他的变化。比如 logs 和 refs 的目录有所变化。我们查看 refs 目录里面的内容，发现其指向了 6e4a70 这个 commit 对象，即当前 master 分支上面最新的提交就是这个 6e4a70 了。\",\"而这个 6e4a70 这个 commit 对象，有一个 HEAD 的指向，就是 .git 目录下的 HEAD 文件。其实质就是一个指针，其永远指向我们当前工作的分支，即这里我们工作在 master 分支上。当我们切换分支的时候，这个文件的指向也会随机改变的。\",\"# 左边执行 $ cat .git/refs/heads/master $ cat .git/HEAD # 右边执行 $ watch -n 1 -d tree .git \",\"图片\"]},\"782\":{\"h\":\"加深理解 commit 提交\",\"t\":[\"执行完成了 git commit 命令，究竟做了什么呢？\",\"当我们再次对 file2.txt 文件的内容进行变更、添加以及提交之后，发现在提交的时候，查看的 commit 对象的内容时，其包含有父节点的 commit 信息。而对于理解的话，可以看看下面的这个提交流程图。\",\"# 左边执行 $ echo \\\"file2.txt\\\" > file2.txt $ git status $ git add file2.txt $ git ls-files -s $ git cat-file -p 0ac9638 $ git commit -m \\\"2nd commit\\\" $ git cat-file -p bab53ff $ git cat-file -p 2f07720 # 右边执行 $ watch -n 1 -d tree .git \",\"图片\",\"图片\",\"在 Git 中空文件夹是不算在追踪范围内的，而且添加文件夹并不会增加 object 对象。当我们查看 index 内容的时候，会发现文件名称是包含相对路径的。\",\"而当我们通过 commit 命令提交之后，会发现生成了三个 object 对象，因为 commit 操作不会生成 blob 对象，所以分别是一个 commit 对象和两个 tree 对象。可以发现，tree 对象里面有包含了一个目录的 tree，其里面包含对象文件内容。\",\"下图所示的文件状态，可以体会到 Git 中版本的概念。即 commit 对象指向一个该版本中的文件目录树的根（tree），然后 tree 在指向 blob 对象（文件）和 tree 对象（目录），这样就可以无限的往复下去形成一个完整的版本。\",\"# 左边执行 $ mkdir floder1 $ echo \\\"file3\\\" > floder1/file3.txt $ git add floder1 $ git ls-files -s $ git commit -m \\\"3rd commit\\\" $ git cat-file -p 1711e01 $ git cat-file -p 9ab67f8 # 右边执行 $ watch -n 1 -d tree .git \",\"图片\"]},\"783\":{\"h\":\"文件的生命周期状态\",\"t\":[\"总结一下，Git 里面的文件状态和如何切换。\",\"现在，我们已经基本理解了文件如何在工作区、暂存区以及代码仓库之间进行状态的跟踪和同步。在 Git 的操作中，文件的可能状态有哪些，以及如何进行状态切换的，我们这里一起总结一下！\",\"图片\",\"图片\"]},\"784\":{\"h\":\"Branch 和 HEAD 的意义\",\"t\":[\"执行完成了 git branch 命令，究竟做了什么呢？\",\"到底什么是分支？分支切换又是怎么一回事？我们通过查看 Git 的官方文档，就可以得到，分支就是一个有名字的（master/dev）指向 commit 对象的一个指针。\",\"我们在初始化仓库的时候，提供会默认给我们分配一个叫做 master 的分支（在最新的版本默认仓库已经变更为 main 了），而 master 分支就是指向最新的一次提交。为什么需要给分支起名字呢？就是为了方便我们使用和记忆，可以简单理解为 alias 命令的意义一致。\",\"图片\",\"有了上述基础，我们就需要考虑下，分支到底是如何实现和工作的。要实现一个分支，我们最基本需要解决两个问题，第一个就是需要存储每一个分支指向的 commit，第二个问题就是在切换分支的时候帮助我们标识当前分支。\",\"在 Git 中，它有一个非常特殊的 HEAD 文件。而 HEAD 文件是一个指针，其有一个特性就是总会指向当前分支的最新的一个 commit 对象。而这个 HEAD 文件正好，解决了我们上面提出的两个问题。\",\"当我们从 master 切换分支到 dev 的时候，HEAD 文件也会随即切换，即指向 dev 这个指针。设计就是这么美丽，不愧是鬼才，好脑袋。\",\"图片\",\"# 左边执行 $ cat .git/HEAD $ cat .git/refs/heads/master $ git cat-file -t 1711e01 # 右边执行 $ glo = git log \",\"图片\"]},\"785\":{\"h\":\"分支操作的背后逻辑\",\"t\":[\"执行完成了 git branch 命令，究竟做了什么呢？\",\"这里我们可以看到分支切换之后，HEAD 指向发生变动了。\",\"# 左边执行 $ git branch $ git branch dev $ ll .git/refs/heads $ cat .git/refs/heads/master $ cat .git/refs/heads/dev $ cat .git/HEAD $ git checkout dev $ cat .git/HEAD # 右边执行 $ glo = git log \",\"图片\",\"这里需要注意的是，即使我们删除了分支，但是该分支上一些特有的对象并不会被删除的。这些对象其实就是我们俗称的垃圾对象，还有我们多次使用 add 命令所产生的也有垃圾对象，而这些垃圾对象怎么清除和回收呢？后续，我们会涉及到的。\",\"# 左边执行 $ echo \\\"dev\\\" > dev.txt $ git add dev.txt $ git commit -m \\\"1st commit from dev branch\\\" $ git checkout master $ git branch -d dev $ git branch -D dev $ git cat-file -t 861832c $ git cat-file -p 861832c $ git cat-file -p 680f6e9 $ git cat-file -p 38f8e88 # 右边执行 $ glo = git log \",\"图片\"]},\"786\":{\"h\":\"checkout 和 commit 操作\",\"t\":[\"我们一起聊一聊，checkout 和 commit 的操作！\",\"我们执行 checkout 命令的时候，其不光可以切换分支，而且可以切换到指定的 commit 上面，即 HEAD 文件会指向某个 commit 对象。在 Git 里面，将 HEAD 文件没有指向 master 的这个现象称之为 detached HEAD。\",\"这里不管 HEAD 文件指向的是分支名称也好，是 commit 对象也罢，其实本质都是一样的，因为分支名称也是指向某个 commit 对象的。\",\"图片\",\"# 左边执行 $ git checkout 6e4a700 $ git log # 右边执行 $ glo = git log \",\"图片\",\"当我们切换到指定的 commit 的时候，如果需要在对应的 commit 上继续修改代码提交的话，可以使用上述图片中提及的 swtich 命令创建新分支，再进行提交。但是，通常我们都不会着玩，都会使用 checkout 命令来创建新分支的。\",\"$ git checkout -b tmp $ git log \",\"即使可以这样操作，我们也很少使用。还记得我们上一章节创建的 dev 分支吗？我们创建了该分支并有了一个新的提交，但是没有合并到 master 分支就直接删除了。现在再使用 log 命令查看的话，是看不到了。\",\"实际，真的看不到了吗？大家要记住，在 Git 里面任何的操作，比如分支的删除。它只是删除了指向某个特定 commit 的指针引用而已，而那个 commit 本身并不会被删除，即 dev 分支的那个 commit 提交还是在的。\",\"那我们怎么找到这个 commit 呢？找到之后，我们就可以在上面继续工作，或者找到之前的文件数据等。\",\"第一种方法：\",\"[费劲不太好，下下策]\",\"在 objects 目录下面，自己一个一个看，然后切换过去。\",\"第二种方法：\",\"[推荐的操作方式]\",\"使用 Git 提供的 git reflog 专用命令来查找。\",\"该命令的作用就是用于将我们之前的所有操作都记录下来。\",\"# 左边执行 $ git reflog $ git checkout 9fb7a14 $ git checkout -b dev # 右边执行 $ glo = git log \",\"图片\",\"图片\"]},\"787\":{\"h\":\"聊聊 diff 的执行逻辑\",\"t\":[\"当我们执行 diff 命令之后，Git 的逻辑它们是怎么对比出来的呢？\",\"就在本节中中，我们使用上节的仓库，修改文件内容之后，看看 diff 命令都输出了哪些内容呢？我们这里一起来看看，研究研究！\",\"$ echo \\\"hello\\\" > file1.txt $ git diff $ git cat-file -p 42d9955 $ git cat-file -p ce01362 # 下述命令原理也是一样的 $ git diff --cached $ git diff HEAD \",\"图片\"]},\"788\":{\"h\":\"Git 如何添加远程仓库\",\"t\":[\"如何将我们本地的仓库和远程服务器上面的仓库关联起来呢？\",\"初始化仓库\",\"$ git init $ git add README.md $ git commit -m \\\"first commit\\\" \",\"关联远程仓库\",\"当我们使用上述命令来关联远程服务器仓库的时候，我们本地 .git 目录也是会发生改变的。通过命令查看 .git/config 文件的话，可以看到配置文件中出现了 [remote] 字段。\",\"# 关联远程仓库 $ git remote add origin git@github.com:escapelife/git-demo.git ➜ cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true [remote \\\"origin\\\"] url = git@github.com:escapelife/git-demo.git fetch = +refs/heads/*:refs/remotes/origin/* \",\"推送本地分支\",\"当我们执行如下命令，将本地 master 分支推送到远程 origin 仓库的 master 分支。之后，我们登陆 GitHub 就可以看到推送的文件及目录内容了。\",\"推送分支内容的时候，会列举推送的 objects 数量，并将其内容进行压缩，之后推送到我们远程的 GitHub 仓库，并且创建了一个远程的 master 分支（origin 仓库）。\",\"# 推送本地分支 $ git push -u origin master \",\"推送之后，我们可以发现，本地的 .git 生成了一些文件和目录，它们都是什么呢？如下所示，会新增四个目录和两个文件，皆为远程仓库的信息。当我们通过命令查看 master 这个文件的内容时，会发现其也是一个 commit 对象。此时与我们本地 master 分支所指向的一致。而其用于表示远程仓库的当前版本，用于和本地进行区别和校对的。\",\"➜ tree .git ├── logs │&nbsp;&nbsp; ├── HEAD │&nbsp;&nbsp; └── refs │&nbsp;&nbsp; ├── heads │&nbsp;&nbsp; │ ├── dev │&nbsp;&nbsp; │ ├── master │&nbsp;&nbsp; │ └── tmp │ └── remotes # 新增目录 │&nbsp;&nbsp; └── origin # 新增目录 │&nbsp;&nbsp; └── master # 新增文件 └── refs ├── heads │&nbsp;&nbsp; ├── dev │&nbsp;&nbsp; ├── master │&nbsp;&nbsp; └── tmp ├── remotes # 新增目录 │&nbsp;&nbsp; └── origin # 新增目录 │&nbsp;&nbsp; └── master # 新增文件 └── tags \"]},\"789\":{\"h\":\"远程仓库存储代码\",\"t\":[\"使用 GitLab 来了解远程仓库的服务器到底是如何存储，我们的代码的！\",\"当我们编写完代码之后，将其提交到对应的远程服务器上面，其存储结构和我们地址是一模一样的。如果我们仔细想想的话，不一样的话才见怪了。\",\"Git 本来就是代码的分发平台，无中心节点，即每个节点都是主节点，所以其存储的目录结构都是一直的。这样，不管哪一个节点的内容发生丢失或缺失的话，我们都可以通过其他节点来找到。而 Git 服务器就是一个可以帮助我们，实时都可以找到的节点，而已。\"]},\"790\":{\"h\":\"文档地址\",\"t\":[\"原文链接：https://www.escapelife.site/posts/da89563c.html\"]},\"791\":{\"h\":\"Gitea\",\"t\":[\"一款极易搭建的自助 Git 服务，是在 Gogs 的基础上新开一个发行分支。\",\"官方地址：https://gitea.com/\",\"docker方式\",\"docker run -d --name=gitea -p 10022:22 -p 9004:3000 -v /var/lib/gitea:/data gitea/gitea docker run -d --privileged=true --restart=always --name=gitea -p 10022:22 -p 9004:3000 -v /var/lib/gitea:/data gitea/gitea \",\"安装完成后访问 xxxxx:9004，配置数据库\",\"img\",\"配置一般设置\",\"img\",\"可选设置\",\"img\",\"配置管理员密码，然户跳转打开主界面\",\"img\"]},\"792\":{\"h\":\"管理后台\",\"t\":[\"img\"]},\"793\":{\"h\":\"创建仓库\",\"t\":[\"img\",\"展示\",\"img\",\"克隆项目\",\"img\",\"编写项目提交\",\"img\"]},\"794\":{\"h\":\"注册用户\",\"t\":[\"img\",\"还对用户名有校验， 应该只包含字母数字, 破折号 ('-'), 下划线 ('_') 和点 ('. ') 。\",\"和gogs之间的故事：https://blog.wolfogre.com/posts/gogs-vs-gitea/\"]},\"795\":{\"h\":\"Gogs\",\"t\":[\"Gogs 是一款极易搭建的自助 Git 服务。 开发目的 Gogs 的目标是打造一个最简单、最快速和最轻松的方式搭建自助 Git 服务。\"]},\"796\":{\"h\":\"docker方式\",\"t\":[\"docker-compose脚本\",\"version: '3' services: mygogs: container_name: mygogs image: gogs/gogs:latest restart: always ports: - \\\"10022:22\\\" - \\\"10080:3000\\\" volumes: - ./data:/data/docker/gogs \",\"执行完访问 http://ip:10080 设置数据库和管理员帐号密码\",\"参考文档：https://github.com/gogs/gogs/tree/main/docker\"]},\"797\":{\"h\":\"Linux安装Git\",\"t\":[\"使用yum安装\",\"命令：yum -y install git\",\"查询是否安装成功\",\"命令：git --version\",\"yum安装的目录:/usr/libexec/git-core\",\"linux服务器下记住密码\",\"git config --global credential.helper store \",\"git pull\",\"输入你的用户名和密码store模式会存储\",\"查看系统存储的用户名个密码\",\"cat ~/.git-credentials \",\"拉取方法\"]},\"798\":{\"h\":\"概述\",\"t\":[\"集中式的版本控制：版本库是集中存放在中央服务器的，需要首先去中央服务器取得最新的版本，然后每次编辑完以后在推送到中央服务器，最大的缺点就是必须联网才可以使用，如果是局域网的话宽带大，如果是在互联网上，网速慢的情况，提交非常慢。\",\"分布式版本控制：没有中央服务器，每一个人的电脑上都是一个完整的版本库，推送的时候是两个人吧各自的修改推送给对方，然后就可以看到对方的修改。分布式安全性更高，因为每个人的电脑里面都存在完整的版本库。但是实际上，分布式版本控制也有一个电脑充当与中央服务器，它是用来方便“交换”大家的修改。\",\"1、如果你提交时候发现对方已经提交到远程，那么你提交时候回报错提示对方已经提交有东西。\",\"解决方法：\",\"a、b两人拉取主分支（保持主分支是最新的），然后分别在主分支上面创建分支a1、b1,然后切换到\",\"各自的分支，a修改了一些数据，然后提交推送到了分支a1，b在分支b1上面修改并提交推送了一些东西到分支b1，然后a切换到主分支，右键合并分支，从a1分支合并，合并过以后切记要进行推送，b也切换到主分支，先拉取一下主分支（拉取成最新的数据），然后右键合并分支从b1合并分支并提交推送。\",\"如果a接着开发，那么a需要在主分支拉取下最新数据，然后切换到分支a1，然后点击右键合并从主分支，这样子把分支a1也弄成了最新数据。b操作了也先拉取。\",\"目前可以正常操作的拉取方式：如果有修改，那么先提交，然后拉取，这个时候可能出错，那么不要担心，正常解决冲突就行，然后拉取成功后，查看下项目有没有问题，没有问题的话就可以推送上去。\",\"同步：从远程存储库往本地同步（拉取代码）\",\"拉取：从远程拉取最新版本到本地自动合并\",\"获取：从远程获取最新版本到本地，不会自动合并，实际使用中这种更安全（获取后还需要从远程这个分支合并到本地这个分支）\",\"推送：推送到远程服务存储库\",\"提交：相当于commit，提交到本地存储库\",\"提交和推送：现在本地存储库提交然后再推送到远程服务器\",\"提交和同步：先提交到本地然后拉取远程服务器然后再推送\",\"img\",\"常见名词解释：\",\"拉取（Pull）：将远程版本库合并到本地版本库，相当于（Fetch+Meger）\",\"获取（Fetch）：从远程版本库获得最新版本\",\"合并（Meger）：将两个版本库进行合并操作\",\"提交（Commit）：将所做的更改，存入本地暂存库\",\"推送（Push）：将所做的更改，存入远程版本库\",\"同步（Pull+Push）：先将远程库拉取，再将本地库推送到远程库，相当于（Pull+Push）\",\"变基到（Switch）：切换分支（双击即可切换）\",\"常用功能简单说明\",\"img\",\"【更改】\",\"负责文件的修改、添加、忽略文件、删除文件提交到本地服务器，主要是：提交\",\"【分支】\",\"​ 负责合并分支，切换分支，主要是合并、变基到、解决冲突\",\"【同步】\",\"​ 远程Git存储库与本地Git存储库操作，主要是：推送、同步、拉取、获取\",\"【设置】\",\"设置用户名、密码、远程地址、对比工具等\",\"文档地址：https://www.cnblogs.com/mqxs/p/9497096.html\",\"创建git项目，创建的时候有个.gitignore的选项，根据自己的需要选择需要忽视的文件，例如：java，python等，C#的项目选择VisualStudio，因为创建的都是VS项目，这里面有需要C#项目所忽略的设置。创建完项目之后，项目下面就有个.gitignore文件，这个文件是可以修改的。\"]},\"799\":{\"h\":\"忽略文件\",\"t\":[\"例如：忽视后缀是.suo，.user的文件，*正式所有 *.suo *.user\",\"\\\\1. 编译生成的文件，例如：dll，等\",\"\\\\2. 配置文件，敏感的信息（密码，口令）\",\"\\\\3. 项目工具生成的文件，例如：引用Nuget时生成的packages等\",\"\\\\4. 项目测试的文件，日志文件等。\",\".gitignore****忽略规则的匹配语法\",\"\\\\1. “#\\\"开头，是git上的注释说明\",\"\\\\2. 以\\\"/\\\"开头表示根目录，其他位置的“/”表示的是忽视目录\",\"3.“*”匹配多个字符，“**”匹配任意中间目录\",\"4.“[]”匹配中括号中的字符\",\"5.“!”表示不忽视,即：如果忽视某些文件，可以用!让这些文件在启用，如果文件夹的父目录被忽略了，那么这个文件在启用，也就没有什么用了。\",\"注意：git对于.ignore配置文件是从上到下进行规则匹配的，如果前面的规则匹配的范围更大，则后面的规则将不会生效；git上的忽视文件.ignore要在创建git的时候创建，如果是之后创建的，已经push过的，在忽视将不起作用，因为git已经开始管理这些文件了。\",\".gitignore****查看忽视文件和文件夹\",\"git check-ignore -v bin\",\".gitignore:23:[Bb]in/ bin\",\"查看忽视文件夹，可以看到，第23行的忽视规则把bin给忽视掉了，如果运行指令，没有返回值则表示没有忽视此文件或者文件夹的规则。\",\"git****忽视已经上传的文件解决办法\",\"在使用git的时候，创建了一个.gitignore文件，但是后来发现有一个文件已经上传了，没有写忽视规则，但是又想这个文件【本地保存】，【远程删除】，例如：忽视已经上传的文件【test.txt】或者文件夹，用git rm -r –cached directory\",\"git rm -r --cached test.txt\",\"commit和push\",\"操作之后，你可以看到本地文件还在，远程的已经删除了\"]},\"800\":{\"h\":\"忽略文件夹\",\"t\":[\"[Dd]用的是正则，匹配大小写d，两个**表示匹配任意中间目录\",\"[Dd]ebug/\",\"[Dd]ebugPublic/\",\"[Rr]elease/\",\"[Rr]eleases/\"]},\"801\":{\"h\":\"中途修改忽略文件\",\"t\":[\"需要清空git缓存，项目目录中右键bash\",\"git rm -r --cached .\",\"git add .\",\"git commit -m 'update .gitignore'\",\"廖雪峰Git教程：https://www.liaoxuefeng.com/wiki/896043488029600\",\"https://www.cnblogs.com/wupeixuan/p/11947343.html\",\"https://www.cnblogs.com/huangtailang/p/4748075.html | Git 以分支的方式同时管理多个项目 - HTL - 博客园\",\"线上学习：https://learngitbranching.js.org/\",\"Git飞行指南：https://github.com/k88hudson/git-flight-rules/blob/master/README_zh-CN.md\"]},\"802\":{\"h\":\"Windows安装Git\",\"t\":[\"下载地址：https://git-scm.com/downloads\",\"安装该软件基本上一路下一步\",\"img\",\"选择要安装的路径，这里我选择安装到D盘\",\"img\",\"直接下一步\",\"img\",\"下一步\",\"img\",\"下一步\",\"img\",\"下一步\",\"img\",\"下一步\",\"img\",\"下一步\",\"img\",\"下一步\",\"img\",\"下一步\",\"img\",\"下一步\",\"img\",\"等待安装完成\",\"img\",\"完成界面\",\"img\",\"然后可以右键可以看到这两个就成功了\",\"img\",\"下面我们使用Gitee作为源代码仓库作为演示，没有注册的需要去官方(https://gitee.com/)注册。\",\"常见的拉取代码的方式分为HTTPS和git(ssh),这里我们就演示如何配置ssh方式拉取代码\",\"img\",\"当不配置直接使用右键Git Bash Here拉取项目的话会提示如下错误\",\"git clone git@gitee.com:AZRNG/xxx.git \",\"img\",\"下面我们就开始配置git的SSH，首先我们在命令行使用命令检查下用户名和邮箱是否配置\",\"git config --global --list \",\"img\",\"配置用户名和邮箱\",\"git config --global user.name \\\"用户名\\\" git config --global user.email \\\"邮箱\\\" \",\"img\",\"执行命令生成密钥(会在当前目录下生成，选择好合适的路径)\",\"ssh-keygen -t rsa -C \\\"你的邮箱\\\" \",\"然后需要按多次回车，默认都是直接回车加回车，不过每次回车的意思我也搜索出来了。\",\"确认秘钥的保存路径（如果不需要改路径则直接回车）；\",\"如果上一步置顶的保存路径下已经有秘钥文件，则需要确认是否覆盖（如果之前的秘钥不再需要则直接回车覆盖，如需要则手动拷贝到其他目录后再覆盖）；\",\"创建密码（如果不需要密码则直接回车）；\",\"确认密码；\",\"img\",\"然后会在指定目录(默认是当前目录)下生成2个名为id_rsa和id_rsa.pub的文件\",\"img\",\"用记事本打开id_rsa.pub拷贝内容到Gitee平台的设置=>SSH公钥\",\"img\",\"点击确定后输入密码即可添加SSH公钥，然后我们再去拉取项目\",\"img\",\"成功拉取项目，已经不需要密码了，后续其他操作也不再需要密码，Gitee就可以知道这个操作是你操作的。\",\"上面我们已经安装了Git并且配置了git的SSH，但是对于我来说还是不太方便，我更喜欢可视化界面(点点点)操作。常用的客户端软件有TortoiseGit、SourceTree、VS自带的。下面我就来演示如何安装TortoiseGit以及汉化。\",\"需要提前下载好TortoiseGit-2.9.0.0-64bit、TortoiseGit-LanguagePack-2.9.0.0-64bit-zh_CN，版本看个人爱好。\",\"下载地址：https://tortoisegit.org/download/\",\"下一步，然后下一步\",\"img\",\"这点需要注意，然后继续下一步\",\"img\",\"配置，这里我只修改了安装的地址，然后下一步\",\"img\",\"下一步，然后开始安装\",\"img\",\"安装结束\",\"img\",\"下面安装语言包，直接下一步\",\"img\",\"直接勾兑该选项也可以设置为中文\",\"img\",\"或者右键TortoiseGit=>设置=>常规设置进行修改\",\"img\",\"点击右键，查看名字已经变成了中文\",\"img\",\"可以直接在这里克隆项目以及操作项目\",\"img\"]},\"803\":{\"h\":\"Docker\"},\"804\":{\"h\":\"1.1 Docker简介\",\"t\":[\"Docker 是一个开源的应用容器引擎，是用Go语言开发的。用于开发、交付和运行应用程序的开放平台，能够将应用程序与基础设施分开，从而可以快速交付软件。\",\"看看Docker 的Logo图\",\"图片\",\"，Docker就好比是下面的小鲸鱼，上面装满的每个集装箱(方块)可以理解为容器，不管集装箱里面装的什么，统一按集装箱的形式打包存放、运输即可，集装箱之间互不影响；即Docker不在乎容器里的内容是什么，统一基于容器这种形式进行标准化管理，容器之间相互隔离，所以Docker上运行的多个容器是相互不影响的。\",\"Docker 从 17.03 版本之后分为 CE（Community Edition: 社区版） 和 EE（Enterprise Edition: 企业版），通常社区版足够用了，功能强大，还免费。\",\"Docker在线版：https://labs.play-with-docker.com/\",\"书籍推荐：https://www.cnblogs.com/Can-daydayup/p/15585714.html\"]},\"805\":{\"h\":\"1.2 Docker架构\",\"t\":[\"Docker Architecture Diagram\",\"Docker是客户端/服务器模式架构(C/S)，Client(客户端)和Docker daemon(守护进程)通信， 后者接收到客户端指令并执行。简述上图的三个流程：\",\"客户端(Client) 发送docker build指令， 服务端(Docker daemon) 收到指令之后就执行，将对应文件打包生成为镜像(Images) ；\",\"客户端(Client) 发送docker pull指令，服务端(Docker daemon) 收到指令之后就执行，从远程仓储中(Registry) 寻找镜像(Images) ，并下载到Docker主机上(DOCKER_HOST) ，如果找不到就报错；\",\"客户端(Client) 发送docker run指令，服务端(Docker daemon) 收到指令之后就执行，先从本地查找镜像(Images) ，如果本地存在，直接通过镜像启动容器(Containers) 实例；如果本地没有镜像(Images)，就会从远程仓储中(Registry)下载，然后再根据镜像启动容器(Containers) 实例，如果都没找到，那就报错。\",\"上面只是用三关键指令大概描述了从客户端到服务端的执行流程，其实还有很多指令，后续会专门整理文章分享。\",\"上图术语解释及作用：\",\"Docker daemon(守护进程) ：负责监听客户端发过来的指令请求，并管理Docker的各种对象，如镜像(Images)、容器(Containers)、网络等。\",\"Client(客户端) ：用户和Docker主机交互的主要方式，就是用来发指令请求的。\",\"远程仓储(Registry) ：用于各种镜像的存储，Docker Hub是最大的镜像存储库，基本上平时能用到的镜像都可以找到；为了提升拉取速度，可以指定国内的一些仓储。\",\"镜像(Images) ：是一个启动容器(Containers) 的只读模板；比较容易理解的比喻：镜像就是编程语言中的类(Class)，容器就是通过类(Class) new出来的实例。\",\"容器(Containers) ：就是镜像(Images) 可运行的实例。\"]},\"806\":{\"h\":\"1.3 Docker带来的好处\",\"t\":[\"开发更加敏捷： 让开发人员可以自由定义环境，创建和部署的应用程序更快、更容易，运维人员快速应对变化也更加灵活性。\",\"高可移植性和扩展性： Docker容器可以运行在各种设备环境中，如开发电脑、虚拟机、服务器上等；根据业务需求，可实时扩展或拆除应用程序及相关服务；\",\"充分利用硬件资源：Docker轻量级、启动快，能共用公共服务，不像传统的虚拟机那样，需要单独虚拟出整个系统，占用资源多，速度还不够快。Docker容器之间相互隔离，互不冲突，所以同时可运行很多个容器，充分利用资源。\",\"理论先说那么多，主要是实操应用，用明白了，理论自然就清晰了。\",\"安装步骤看本网站其他文章有叙述\",\"安装完成之后，这里不急着往下说，先来体验一下；很方便的就将自己的项目打包然后运行，步骤如下：\",\"准备一个项目\",\"这里就直接创建一个默认的API项目(基于.NetCore3.1)即可，什么都不做。\",\"编写Dockerfile\",\"在项目根目录下增加一个Dockerfile文件，里面内容如下：\",\"图片\",\"具体内容如下\",\"FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim WORKDIR /app COPY . . EXPOSE 80 ENTRYPOINT [\\\"dotnet\\\", \\\"DockerDemo.dll\\\"] \",\"设置Dockerfile的文件属性为始终复制，如下：\",\"图片\",\"以文件系统的形式发布项目，指定本地目录，如下：\",\"图片\",\"将发布之后的文件拷贝到装有Docker的主机上\",\"将项目进行发布，把发布之后的文件拷贝到我的阿里云服务器上，用到的工具是FinalShell(一个工具完成连接服务器和上传文件，很好用)，如下：\",\"图片\",\"打包为镜像\",\"进入发布文件目录，执行docker build命令，将发布文件打包为一个镜像，如下：\",\"图片\",\"上图中的mydockerdemo 是镜像名，可以自定义；通过docker images查看镜像是否生成，如下：\",\"图片\",\"根据镜像启动容器(里面包含我们的项目)\",\"镜像生成之后，就可以通过docker run指令根据镜像启动容器了，即启动我们的项目\",\"图片\",\"docker run -d --name mydockerdemo -p 9999:80 mydockerdemo \",\"-d：后台模式运行；\",\"--name：给运行中的容器指定一个名字；\",\"-p：指定端口映射， 主机的端口9999映射到容器的端80，因为在容器里面我们的项目是以80 端口启动的；\",\"最后一个参数是上一步生成的镜像名称， 即根据此镜像启动一个容器实例。\",\"测试访问看看，只要配置了云服务器的安全组和防火墙放开9999端口，那么外网就可以访问了,如下：\",\"图片\",\"可能有小伙伴说，也挺麻烦的；其实编写Dockerfile，打包镜像等操作都是一次性的，只要生成了镜像，后续其他环境直接根据镜像启动即可，不用再单独安装.NetCore运行时等基础设施了，打包好的镜像里包含了完整的运行环境。\"]},\"807\":{\"h\":\"4.1 预览\",\"t\":[\"Docker和我们熟悉的Git很类似，都是通过命令执行相关操作，当然也有一些界面管理工具(点按钮的那种)，但大家似乎更喜欢直接敲命令，毕竟这种方式更加灵活、更加容易理解操作本质；有大神将常用命令用一张图很好的展现出来，这里借用一下(图片来源于网络，侵删)：\",\"cmd_logic\",\"不熟悉Docker的小伙伴可能看见这图直接懵圈了，别急，接着往下看， 看完再回过头来瞅这张图，绝对感觉很给力。\"]},\"808\":{\"h\":\"4.2 常用命令实操\"},\"809\":{\"h\":\"4.2.1 全局命令\",\"t\":[\"docker version：查看docker版本信息。\",\"图片\",\"docker info：查看docker详情信息，比如仓储信息、加速器配置信息、有多少个镜像、有多少个容器、CPU、内存等。\",\"图片\",\"docker events：从docker 服务获取实时事件，通俗一点理解就是操作日志，比如对镜像、容器、网络、挂载卷等操作，就会记录对应的事件信息；最多能返回最近的1000条日志信息。\",\"先在一个终端执行命令，终端会阻塞：\",\"图片\",\"开启另一个终端，执行根据镜像运行容器的命令：\",\"图片\",\"此时开启的第一个终端就实时输出事件消息，如镜像拉取、容器启动、容器结束等信息，如下：\",\"图片\",\"既然可以把这个命令当做操作日志理解，那肯定可以根据条件查看对应的数据，如下：\",\"图片\",\"如图所示，会先显示符合条件的事件信息，然后会继续阻塞，如果对服务端有操作，信息还会实时显示。常用的参数指定如下：\",\"-f ：根据条件过滤事件，如上图指定的是镜像为hello-world相关的事件信息；\",\"--since ：从指定的时间戳后显示所有事件，可以理解为开始时间，支持多种时间格式，默认使用本地主机的时区;\",\"--until ：显示到指定的时间为止，可以理解为结束时间；\"]},\"810\":{\"h\":\"4.2.2 镜像常用命令\",\"t\":[\"镜像(image)可以理解为一种轻量级、可独立运行的软件包，包含了应用程序及其他运行需要的基础设施，如运行时、配置文件、依赖的库等，所以没有镜像就没法启动容器；就好比开发中没有类(class)，又怎么去根据类创建实例呢。\",\"镜像是只读的，所以操作命令不多，一般就是增、删、查。\",\"docker images：列出Docker主机上的镜像\",\"图片\",\"可以指定参数，比较常用的如下：\",\"图片\",\"-a :列出本地所有的镜像（含中间镜像层，默认过滤掉中间镜像层）。\",\"-q :只显示镜像ID。\",\"上图中的-aq就是显示所有镜像的ID，一般用于批量删除。\",\"docker search：从远程仓储中搜索镜像，后面直接根镜像名称即可\",\"图片\",\"可以指定条件进行搜索，如下：\",\"图片\",\"--filter：指定条件搜索，is-official表示是否为官方的，stars表示要找多少星星以上的。\",\"对于搜索，我还是比较喜欢用界面，直观好看：\",\"图片\",\"docker pull：从远程仓储中拉取镜像，后面跟镜像名和tag即可，即指定版本拉取，如果不指定tag，默认就latest，最新的。\",\"图片\",\"镜像的分层原理就是采用UnionFS(联合文件系统)，是一种分层、轻量级的高性能文件系统；镜像可以通过分层来进行继承，可以基于基础镜像制作出各种具体的应用镜像，比如我们刚拉取下来的nginx镜像，这里先了解，后续我们自己制作镜像的时候就明白了。\",\"docker pull 镜像名:tag：指定版本拉取；\",\"图片\",\"docker rmi：删除指定镜像，后面可以跟名称或镜像ID\",\"图片\",\"删除指定版本，如下：\",\"图片\",\"根据镜像ID删除，可以一下删除多个，中间用空格隔开：\",\"图片\",\"删除全部镜像，就是找出所有镜像ID，然后删除就行了，当然肯定不是一个一个的拷贝镜像ID；**docker images -aq**可以显示所有镜像ID ，所以两个命令结合用即可，如下：\",\"docker rmi -f $(docker images -aq) \",\"-f：代表强制删除，比如一些镜像和容器有依赖，会提示不能直接删除，加上这个选项就可以强制删除。\",\"docker save：导出镜像，可以离线拷贝到其他主机上使用，避免没有网络不能下载镜像的场景。\",\"图片\",\"生成的tar文件就可以根据需要拷贝到对应设备上加载使用，不用在线拉取，因为很多场景是不允许连外网的。\",\"docker load：加载镜像，根据拷贝过来的tar文件可以直接加载镜像到主机上。\",\"这里演示就将原来拉取的镜像删除，然后通过load命令重新加载，如下：\",\"图片\",\"加载镜像，如下：\",\"图片\",\"换一种写法，如下：\",\"图片\",\"选项说明：\",\"--input , -i : 指定导入的文件。\",\"--quiet , -q : 简化输出信息，不显示具体加载过程。\",\"图片\",\"注：这里因为是在TestDockerImage目录下执行命令，所以指定tar的文件时，就在当前目录下。\"]},\"811\":{\"h\":\"4.2.3 容器常用命令\",\"t\":[\"容器是用镜像创建的运行实例， 它可以被启动、开始、停止、删除，每个容器都是相互隔离；可以把容器看做是一个极简版的Linux环境和在其中运行程序的组合；\",\"容器和镜像几乎一样，唯一的区别就是镜像层上面加载了一个可写层，这层称为容器层；\",\"以下对容器的操作，可以指定容器名称，也可以指定容器ID，演示统一用容器ID，不再重复截图。\",\"docker run：根据镜像启动容器；语法如下：docker run [OPTIONS] IMAGE [COMMAND] [ARG...];\",\"常用选项参数说明，如下：\",\"--name=\\\"容器名\\\" : 为容器指定一个名称；\",\"-d: 后台运行容器，并返回容器ID；\",\"-i: 以交互模式运行容器，一般和 -t 同时使用；\",\"-t: 为容器重新分配一个伪输入终端，一般和 -i 同时使用；\",\"-P: 随机端口映射，容器内部端口随机映射到主机的端口\",\"-p: 指定端口映射，格式为：主机端口:容器端口\",\"演示如下：\",\"图片\",\"上图可以看到终端阻塞了，这种模式称为attached默认，即前台运行，与之对应的是detached模式，及后台运行，接下来会演示。由于终端阻塞，这里另开一个终端执行docker ps命令看运行的容器，如下：\",\"图片\",\"前台运行模式终端很容易被关闭，启动的nginx容器也会停掉，这种情况对于很多场景是不允许的，所以可以指定为后台模式运行，即detached模式，如下：\",\"图片\",\"现在只是在容器内启动了一个nginx，并监听80端口，如果需要通过主机能访问到容器里面的nginx，还需进行端口映射，如下：\",\"图片\",\"这里启动了两个nginx容器，都是监听80端口，但并没有报端口被占用的错，所以容器之间是互不影响的。通过**-p**选项进行端口映射，这下就可以通过主机的9999端口访问到容器内部的80端口，如下：\",\"图片\",\"既然刚开始说可以将容器理解为简易版的Linux，那就应该可以进入容器内部操作一把，如下：\",\"图片\",\"在容器里面只能执行一些核心的命令，因为是极简版，所以内部只包含重要的功能，如果需要其他功能可以自己安装扩展。\",\"退出容器的两种方式：\",\"a、容器中执行exit命令，容器停止并退出，回到主机；\",\"图片\",\"b、利用组合键ctrl+p+q，容器不停止退出，回到主机；\",\"图片\",\"docker ps [OPTIONS] ：显示主机中的容器，不加选项默认只列出运行中的容器；\",\"-a : 显示所有的容器，包括未运行的；\",\"-n : 列出最近创建的n个容器；\",\"演示如下：\",\"图片\",\"启动和停止容器的命令；\",\"docker start 容器id # 启动被停止的容器 docker stop 容器id # 停止运行中的容器 docker restart 容器id # 重启容器 docker kill 容器id # 强制停止容器 \",\"**docker stop**停止容器，后面可以跟一个或多个容器ID：\",\"图片\",\"docker start：启动被停止的容器，后面可以跟一个或多个容器ID：\",\"图片\",\"**docker restart重启命令和docker kill**强制停止命令就不截图啦\",\"**docker exec和docker attach**两种方式进入正在运行的容器。\",\"很多场景容器都是后台运行，但有时需要进入容器内部进行相关配置的更改。\",\"docker exec：进入容器后开启一个新的终端，正常执行Linux相关命令。\",\"图片\",\"docker attach：进入容器正在执行的终端，不会启动新的进程。\",\"图片\",\"退出容器模式：\",\"容器中执行exit命令，容器停止并退出;\",\"利用组合键ctrl+p+q，容器不停止退出;\",\"docker logs [OPTIONS] 容器ID：查看指定容器的日志；\",\"常用OPTIONS如下：\",\"-f :跟踪日志输出\",\"--since :显示指定开始时间之后所有日志\",\"-t : 显示时间戳\",\"--tail :列出最新N条容器日志\",\"图片\",\"可以指定选项，查看需要的日志，如下：\",\"图片\",\"docker top 容器ID：列出指定容器内部的进程，可以看到容器内的应用进程是否正常运行，如下：\",\"图片\",\"docker inspect 容器ID：查看指定容器的详细信息，比如运行状态、网络配置、挂载的卷等信息都有，如下：\",\"图片\",\"docker commit：根据容器生成一个新的镜像；容器是可编辑的，有些时候需要将已更改的容器生成一个新的镜像给其他人用。\",\"图片\",\"命令说明：\",\"-a :提交的镜像作者；\",\"-m :提交时的说明文字；\",\"命令中testcommitimage:v1是自定义的镜像名和tag；\",\"根据新生成的镜像启动容器，则内部就会有创建的对应文件(容器内部可以根据需要任意改，这里只是演示创建文件而已)。\",\"**docker export和docker import**将容器方便离线导出和导入；\",\"图片\",\"命令说明：\",\"#将容器导出为tar文件 docker export -o testexport.tar 030aa6fcd7f3 # -o 指定输出位置和文件名 # 030aa6fcd7f3 这个是容器ID #根据生成的tar文件导入为镜像 docker import testexport.tar testexportimagename:v2 # 指定对应的tar文件 # testexportimagename:v2 镜像名和版本, 可以自己定义 \",\"这对命令是不是和镜像的docker save、docker load这对命令用法很相似，但两种方式不能混用，因为export导出的仅仅是容器快照，save保存的是完整的镜像文件。\",\"docker rm 容器ID：删除指定容器，运行中的容器默认不让删除，可以增加**-f选项**强制删除，如下：\",\"图片\",\"以上只是总结了平时比较常用的命令，并没有全部列出，更多细节可以进入官网：https://docs.docker.com/engine/reference/commandline/rm/；\",\"常用命令演示了一遍，其中也提到容器的隔离性，默认情况下，容器内应用产生的数据都是由容器本身独有，如果容器被删除，对应的数据文件就会跟着消失。从隔离性的角度来看，数据就应该和容器共存亡；但在实际用场景中，更多需要将数据持久化，即容器被删除，数据也应该正常存在；另外也有很多场景需要容器之间共享数据，那该怎么做呢，接下来说说容器数据卷。\"]},\"812\":{\"h\":\"5.1 手动保存数据\",\"t\":[\"通常手动有两种方式，一是通过命令就行拷贝，二是将容器提交为镜像。接下来通过拉取centos镜像，运行演示\",\"通过命令形式\",\"主机和容器之间可以通过命令进行数据拷贝，也就是说，在容器删除之前可以先进行数据拷贝，如下：\",\"图片\",\"命令简述：docker run -it --name=\\\"mycentos\\\" centos /bin/bash，直接根据镜像centos以交互模式启动容器，容器名称为mycentos，在容器内部执行/bin/bash命令进入到终端；具体命令在Docker小白到实战之常用命令演示，通俗易懂这篇文章中已经详细说明；这里简单回顾一下根据镜像启动容器流程，如图：\",\"图片\",\"上图简述：在Docker执行启动命令时，会先从本地查找镜像，如果没有，就会去远程仓库搜索并拉取到主机，然后主机就可以根据镜像启动容器；如果远程仓库也没有找到镜像，那么就报错。\",\"好了，回到今天的话题，接着说拷贝数据；\",\"现在通过centos镜像启动了一个容器(Linux系统)，在上面创建一些文件进行测试，如下：\",\"图片\",\"现在如果将容器删除，里面对应的数据也会删除，所以需要将对应的数据拷贝到主机上，如下：\",\"图片\",\"docker cp bfb96a6afdbc:/usr/TestData /usr/TestDataHost命令解析:\",\"语法：docker cp SRC_PATH DEST_PATH\",\"bfb96a6afdbc:/usr/TestData对应的就是SRC_PATH ，表示源头，即需要拷贝的目录或文件；bfb96a6afdbc这是容器ID，通过这种方式限定是某个容器内的数据文件；\",\"/usr/TestDataHost对应的就是DEST_PATH，表示目标，即拷到什么地方；\",\"按照上面的语法规则，同样可以将主机上的数据文件拷贝到指定容器中，只是调换一下SRC_PATH 和DEST_PATH的位置即可，如下：\",\"图片\",\"将容器提交为镜像的方式\",\"这种方式只能勉强说是一种备份，只是通过docker commit命令将容器提交为镜像，从而达到备份数据的作用；\",\"图片\",\"但很明显能感觉到不灵活，数据还是在容器内。关于docker commit命令上次已经说过，这里就不重复截图啦。\",\"以上两种方式都不是很好的选择，首先在时效上也不能及时备份，另外通过手动这种操作很明显效率不高，还容易出错；更重要的是苦了小伙伴们，所以必须把自动安排起来；手动这种方式，根据情况偶尔用用就可以啦。\"]},\"813\":{\"h\":\"5.2 容器数据卷解放双手\"},\"814\":{\"h\":\"5.2.1 简单理解容器数据卷\",\"t\":[\"数据卷可以理解为目录或文件，设计目的就是为了数据的持久化和共享；\",\"挂载数据卷的容器，称为数据卷容器；数据卷完全独立于容器的生存周期，所以容器删除时，对应挂载的数据卷不会被删除。\",\"通过将容器内的目录挂载到主机上面，就可以让数据实时同步，不管是主机改动，还是容器里有变动，都会同步更新。\"]},\"815\":{\"h\":\"5.2.2 实操演示\",\"t\":[\"这里先用命令的方式进行演示，关于Dockerfile中的应用会在后续的章节中说到。\",\"docker run命令中**-v**的选项在上次没说，就是故意留到这里单独分享；直接在启动容器的时候挂载；语法主要有如下几种方式：\",\"# 指定具体的主机路径和容器内的路径 docker run -v /宿主机路径:容器内路径 镜像名 # 指定容器内的路径，docker默认自动指定主机路径 docker run -v 容器内路径 镜像名 # 指定容器内的路径，并指定一个名字，主机路径docker自动指定 docker run -v 卷名:容器内路径 镜像名 \",\"匿名挂载：在挂载时不指定名称，会自动生成一个名称\",\"指定主机目录\",\"图片\",\"命令解析如下图：\",\"图片\",\"# docker run -it --name=\\\"容器名称\\\" -v 主机绝对路径:容器绝对路径 镜像名称 docker run -it --name=\\\"TestVolumeCentos\\\" -v /usr/TestDataHost/DataVolumeTest:/usr/TestVolumeData centos \",\"现在已经将容器内的目录挂载到主机上，接下来感受一下数据同步：\",\"图片\",\"通过上图演示可以看到，不管是在主机还是在容器中修改数据，都能及时同步更新；容器停止之后，主机更新数据，容器再启动，修改的数据也会同步到容器；容器删除，挂载的数据不会被删除，还是在主机中，这就是我们想要的。\",\"可以通过docker inspect 容器命令查看容器的详细信息，其中就有挂载卷的详细信息，如下部分截图：\",\"图片\",\"不指定主机目录\",\"很多时候，我们不喜欢自己指定主机目录，而是由Docker自动指定，所以通常我们只指定容器内目录，如下：\",\"图片\",\"看看Docker指定的主机路径在哪，还是通过docker inspect 容器ID查看详情，如下：\",\"图片\",\"看看刚才在容器操作的文件数据是否同步过来：\",\"图片\",\"默认情况，docker都会将挂载的主机目录指定到如上图的目录中。\",\"可以通过docker volume ls查看主机挂载的数据卷信息，如下：\",\"图片\",\"通过上图可以看到，名称不直观，看不懂，所以更多时候都会在挂载的时候指定一个名称，即具名挂载。\",\"具名挂载：在挂载时指定一个名称。\",\"图片\",\"这里除了挂载的时候是指定名称挂载，之后的操作和效果都一样，这里就不重复截图了；需要注意的是这种方式和指定主机的命令很像，指定路径那种形式，冒号前面是路径，如下：\",\"image-20210825175448280\"]},\"816\":{\"h\":\"5.2.3 容器间传递数据\",\"t\":[\"数据卷其实还可以通过容器继承方式进行挂载，从而实现容器之间的数据共享，如下：\",\"图片\",\"关键命令解析：\",\"先启动一个具名挂载的容器TestVolumesFromCentos，如下命令：\",\"docker run -it --name=\\\"TestVolumesFromCentos\\\" -v testVolumesFrom:/usr/TestVolumeData centos \",\"在启动另一个容器TestVolumesFromCentos2，挂载卷继承于TestVolumesFromCentos，如下命令：\",\"docker run -it --name=\\\"TestVolumesFromCentos2\\\" --volumes-from TestVolumesFromCentos centos \",\"--volumes-from 后指定继承于哪个容器。\",\"现在不管在哪个容器中变更数据，都会实时同步到其他容器中，从而达成了容器数据的共享和实时同步。\",\"通过docker inspect 容器ID看两个容器的挂载详情都一样，截其中一个容器如下：\",\"图片\",\"其实在指定挂载的时候还可以限制容器的操作权限，比如在容器内的挂载目录下，可以限制容器内只读或可读写，如下：\",\"图片\",\"ro：代表只读；\",\"rw：代表读写；\",\"好了，关于容器数据卷就说到这吧，是不是听起来名字高大上，其实就是对文件或目录的操作。\"]},\"817\":{\"h\":\"5.2.4 redis安装实战\",\"t\":[\"关于Redis安装在Docker中很简单，直接执行命令即可，由于之前拉取过redis的镜像，所以就直接启动容器了，如果本地没有镜像，就会去远程仓库拉取。\",\"图片\",\"图片\",\"上图中可以看到，默认情况下，redis的镜像将容器内的/data目录挂载到这个主机上，而这个目录就是redis数据存放的目录，这样就达到Redis的持久化。\",\"对于Redis而言，很多时候需要修改配置文件，总不能每次修改都要到容器内更改，我们可以将配置文件放在已挂载的目录中，然后指定启动，也可以另外针对配置文件再加一个挂载，如下：\",\"执行命令前，需要将配置文件提前放在主机的这个/usr/TestDataHost/redisconf目录中。\",\"docker run -d -v /usr/TestDataHost/redisconf:/usr/local/etc/redis --name myredisconfigtest redis redis-server /usr/local/etc/redis/redis.conf \",\"通过docker inspect 容器看看挂载情况，如下：\",\"通过挂载之后，如果需要修改配置文件，只需要在主机上修改配置文件内容即可。\",\"使用第三方镜像肯定不是学习Docker的最终目的，最想要的还是自己构建镜像；将自己的程序、文件、环境等构建成自己想要的应用镜像，方便后续部署、启动和维护；而Dockerfile就是专门做这个事的，通过类似简单编码的形式，最终就可以构建出属于自己的镜像，所以必须学起来。\"]},\"818\":{\"h\":\"6.1 Dockerfile简介\",\"t\":[\"在日常开发过程中，需要编写对应的程序文件，最后通过编译打包生成对应的可执行文件或是类库；这里的Dockerfile文件就好比平时我们编写的程序文件，但内部的语法和关键字并没有程序那么复杂和繁多，相对来说还是很简单的，最后通过docker build命令就可以将对应的程序、文件、环境等构建成镜像啦。\",\"在第一篇文章最后就简单使用了Dockerfile构建了一个镜像，这里重新认识下这个Dockerfile文件，如下图：\",\"图片\",\"Dockerfile就是一个文本文件，但不需要指定后缀类型；文件内容中FROM、WORKDIR、COPY等就是关键字，按照规则写好之后，就可以将指定的文件构建为镜像啦。\",\"构建操作统一由Docker daemon进行，它会先对文件内容语法进行初步验证(语法不对就会返回错误信息)，然后逐一运行指令，每次生成一个新的镜像层，直到执行完所有指令，就构建出最终的镜像。 Dockerfile、镜像、容器的关系如下：\",\"图片\",\"总结一下Dockerfile的知识点；\",\"构建时，指令从上到下逐一执行；\",\"每条指令都会创建一个新的镜像层，每一层都是前一层变化的增量；\",\"使用#号进行注释；\",\"关键字约定都是大写，后面至少跟一个参数；\"]},\"819\":{\"h\":\"6.2 Dockerfile关键字\"},\"820\":{\"h\":\"6.2.1 FROM 关键字\",\"t\":[\"指定基础镜像， 就是新镜像是基于哪个镜像构建的。\",\"比如建房子，可以在一块空地开始，也可以在别人打好的基石基础上开始， 甚至可以在别人弄好的毛坯房基础上装修即可。\",\"如果要建房的话，可以FROM 空地，或者FROM 打好的基石，或者 FROM 毛坯房， 反正最后建好房就行；\",\"这里需要注意的是，不管咋样，空地是少不了的；构建镜像也一样，最底层肯定有一个最基础的镜像。\",\"建议使用官方的镜像作为基础镜像，推荐使用Alpine这种类型，因为它是严格控制的，而且体积很小。\",\"用法如下：\",\" # FROM [--platform=<platform>] <image>[:<tag>] [AS <name>] ARG CODE_VERSION=latest # 定义变量 FROM base:${CODE_VERSION} # 指定基础镜像 \"]},\"821\":{\"h\":\"6.2.2 MAINTAINER/LABEL 关键字\",\"t\":[\"MAINTAINER 指定维护者的相关信息，也就是构建的镜像是由谁构建的，他的邮箱是什么；\",\"LABLE 就是用于给镜像打标签，以键值对的方式进行指定，相对MAINTAINER 来说比较灵活，可以使用LABLE替代MAINTAINER。\",\"用法如下：\",\" # LABEL <key>=<value> <key>=<value> <key>=<value> ... LABEL com.example.version=\\\"0.0.1-beta\\\" LABEL vendor1=\\\"ACME Incorporated\\\" \"]},\"822\":{\"h\":\"6.2.3 RUN 关键字\",\"t\":[\"构建过程中需要运行的命令， 比如在构建过程中需要执行一条命令下载对应的包，这里就需要用到RUN关键字；\",\"用法如下：\",\" # 两种命令方式都可以 # RUN <command> # RUN [\\\"executable\\\", \\\"param1\\\", \\\"param2\\\"] # 执行命令,Linux支持的相关命令 RUN /bin/bash -c 'source $HOME/.bashrc; echo $HOME' RUN [\\\"/bin/bash\\\", \\\"-c\\\", \\\"echo hello\\\"] \"]},\"823\":{\"h\":\"6.2.4 WORKDIR 关键字\",\"t\":[\"根据镜像启动容器时，通常需要进入到容器内部；则可以通过WORKDIR指定进入容器时的目录；\",\"用法如下：\",\" WORKDIR /path # 指定路径 \"]},\"824\":{\"h\":\"6.2.5 ENV 关键字\",\"t\":[\"可以在构建过程中设置环境变量；就好比平时我们安装完程序，需要配置环境变量，方便访问；ENV关键字就是根据需求可以设置对应的环境变量；\",\"用法如下：\",\" # ENV <key>=<value> ... # 指定环境变量 ENV PATH=/usr/local/postgres-$PG_MAJOR/bin:$PATH \"]},\"825\":{\"h\":\"6.2.6 ADD 关键字\",\"t\":[\"将宿主机的资源拷贝进镜像中，会自动解压缩，而且还能从远程宿主机中读取资源并拷贝到镜像中；\",\"用法如下：\",\" # 两种命令方式都可以 # ADD [--chown=<user>:<group>] <src>... <dest> # ADD [--chown=<user>:<group>] [\\\"<src>\\\",... \\\"<dest>\\\"] ADD https://example.com/big.tar.xz /usr/src/things/ \"]},\"826\":{\"h\":\"6.2.7 COPY 关键字\",\"t\":[\"将宿主机的资源拷贝到镜像中，只支持读取构建所在宿主机的资源。相对于ADD关键字来说更加透明，操作什么就是什么。\",\"用法如下：\",\" # 拷贝资源到容器，两种命令格式都行 # COPY [--chown=<user>:<group>] <源地址>... <目标地址> # COPY [--chown=<user>:<group>] [\\\"<源地址>\\\",... \\\"<目标地址>\\\"] COPY requirements.txt /tmp/ \"]},\"827\":{\"h\":\"6.2.8 VOLUME 关键字\",\"t\":[\"挂载数据卷，之前在常用命令那说到通过命令的方式进行数据卷挂载，在Dockerfile中使用VOLUME指定挂载路径即可，根据构建出来的镜像运行容器时，默认就有构建时挂载的信息。\",\"用法如下：\",\" # 挂载数据卷 VOLUME [\\\"/data\\\"] VOLUME /myvol \"]},\"828\":{\"h\":\"6.2.9 EXPOSE 关键字\",\"t\":[\"指定运行容器时对外暴露的端口；即根据镜像启动容器时，容器向外暴露端口。\",\"用法如下：\",\" # EXPOSE <port> [<port>/<protocol>...] EXPOSE 80/tcp # 暴露端口 EXPOSE 80/udp \"]},\"829\":{\"h\":\"6.2.10 CMD 关键字\",\"t\":[\"指定启动容器时要执行的命令，只有最后一个会生效；即根据镜像启动容器时，容器需要执行啥命令。\",\"用法如下：\",\" # 两种格式都行 # CMD [\\\"param1\\\",\\\"param2\\\"] # CMD command param1 param2 # 执行命令统计 行数、字数、字节数 CMD echo \\\"This is a test.\\\" | wc - # 执行wc --help命令 CMD [\\\"/usr/bin/wc\\\",\\\"--help\\\"] \"]},\"830\":{\"h\":\"6.2.11 ENTRYPOINT 关键字\",\"t\":[\"指定根据镜像启动容器时要执行的命令，可以追加命令；执行时机同CMD。\",\"用法如下：\",\" # ENTRYPOINT [\\\"executable\\\", \\\"param1\\\", \\\"param2\\\"] # ENTRYPOINT command param1 param2 ENTRYPOINT [\\\"top\\\", \\\"-b\\\"] \"]},\"831\":{\"h\":\"6.2.12 ARG 关键字\",\"t\":[\"通过ARG指令定义了一个变量；和写代码时定义的变量一样，根据需要，定义就行啦。\",\"用法如下：\",\" # ARG <name>[=<default value>] ARG user1=someuser ARG buildno=1 \"]},\"832\":{\"h\":\"6.2.13 ONBUILD 关键字\",\"t\":[\"基于父镜像构建新的镜像时，父镜像的OBUILD会被触发。\"]},\"833\":{\"h\":\"6.3. 实战演示\",\"t\":[\"这里还是以.NetCore项目构建镜像为例，其他编程语言的项目同理；这次咱们一步一步的来，搞清楚每个命令的使用。\",\"以下关于项目创建和发布的具体细节在第一篇最后就分享了，小伙伴可以参考，这里主要演示Dockerfile关键字。\"]},\"834\":{\"h\":\"6.3.1 准备项目和Dockerfile文件\",\"t\":[\"新建一个项目，啥都不需要改，就用默认的接口演示，如下：\",\"图片\",\"Dockerfile内容如下：\",\" # 指定基础镜像，在此基础上构建自己的项目镜像 FROM mcr.microsoft.com/dotnet/core/aspnet:3.1 # 指定自己的工作目录，进入容器时目录 WORKDIR /myApp # 将构建上下文目录下的文件拷贝到容器的当前工作目录中，即/myApp COPY . . # 容器向外暴露端口，项目以什么端口启动就暴露对应的端口 EXPOSE 80 # 执行命令，这里默认是以80端口启动的 #就类似于在Linux系统的项目目录下执行 dotnet DockerfileDemo.dll 是一样的 ENTRYPOINT [\\\"dotnet\\\", \\\"DockerfileDemo.dll\\\"] \",\"记得右键Dockerfile，选择属性，然后设置Dockerfile为始终复制，这样后续更新变动，发布时就会自动拷贝到对应的发布目录。\"]},\"835\":{\"h\":\"6.3.2 发布\",\"t\":[\"以文件的形式发布项目，并连同Dockerfile拷贝到安装好Docker的机器上进行构建(这里还是用我的云服务器)；\",\"图片\",\"docker build -t myimage:v1.0 .解析：\",\"-t：指定镜像的名字及标签，通常 name:tag 或者 name 格式，myimage就是镜像名字，v1.0就是tag；\",\"-f :指定要使用的Dockerfile路径，这里由于Dockerfile在当前路径，所以不用指定；\",\"最后面的点：官方称为构建上下文，点表示指定为当前目录。会把指定的这个目录下的文件发送给docker daemon进行构建，所以千万不要指定/(斜杠代表根目录，有很多文件的)。\",\"其他选项参数小伙伴可以根据需要使用，以上是比较重要的。\"]},\"836\":{\"h\":\"6.3.3 启动容器\",\"t\":[\"根据构建出来的镜像启动容器，看Dockerfile中的命令效果；\",\"启动容器如下：\",\"图片\",\"ENTRYPOINT [\\\"dotnet\\\", \\\"DockerfileDemo.dll\\\"]这行代码就等同于的项目目录下直接执行 dotnet DockerfileDemo.dll是一样的，目的就是启动我们的项目。\",\"通过docker logs可以查看容器内部的日志，如下：\",\"图片\"]},\"837\":{\"h\":\"6.3.4 设置Dockerfile\",\"t\":[\"丰富化Dockefile文件内容并查看构建之后的细节\",\"文件内容如下：\",\" # 指定基础镜像，在此基础上构建自己的项目镜像 FROM mcr.microsoft.com/dotnet/core/aspnet:3.1 # 指定维护人 MAINTAINER CodeZYQ<1137533407@qq.com> # 打标签 LABEL createname=\\\"CodeZYQ\\\" # 指定自己的工作目录，进入容器时目录 app WORKDIR /myapp # 将构建上下文目录下的文件拷贝到容器中的工作目录中 COPY . . # 定义变量 ARG myPort=8080 # 使用环境变量方式改变启动端口，拼接用到了定义的变量 ENV ASPNETCORE_URLS=http://+:$myPort # 通过RUN 执行相关命令，根据需要执行相关命令 RUN mkdir testDir # 挂载数据卷，这里模拟挂载日志目录 VOLUME /Logs # 容器向外暴露端口，项目以什么端口启动就暴露对应的端口 EXPOSE $myPort # 执行命令，这里默认是以80端口启动的 # 就类似于在Linux系统的项目目录下执行 dotnet DockerfileDemo.dll 是一样的 ENTRYPOINT [\\\"dotnet\\\", \\\"DockerfileDemo.dll\\\"] \",\"执行如下命令，构建新的镜像：\",\" # 这里没有显示指定tag 默认就latest docker build -t newimage . \",\"图片\",\"通过docker logs看看容器日志，如下：\",\"图片\",\"看看数据卷挂载是否成功，进入容器，看根目录下就会多了Logs目录，也可以通过docker inspect 容器 看容器详细信息，如下：\",\"图片\",\"标签也打成功了：\",\"图片\",\"也可以通过docker inspect 镜像查看镜像内部的详细信息，执行命令docker inspect newimage如下：\",\"图片\",\"关于步骤和效果，在Dockerfile注释和图表中已经详细描述。\"]},\"838\":{\"h\":\"6.3.5 CMD和ENTRYPOINT的区别\",\"t\":[\"两个命令都是启动容器时指定执行命令和对应的参数，但两者稍有不同，如下：\",\"CMD：只能最后一个命令会生效，命令会被docker run之后的参数替换掉；\",\"ENTRYPOINT：可以追加命令，比如增加参数；\",\"上面构建出来的newimage镜像用到的是ENTRYPOINT，所以我们先来测试一下ENTRYPOINT，如下：\",\"图片\",\"docker run启动容器时指定了参数 --urls=\\\"http://+:9999\\\"，容器正常启动，并且参数还能生效，等同于在当前目录直接执行如下命令：\",\" dotnet DockerfileDemo.dll --urls=\\\"http://+:9999\\\" \",\"现在把ENTRYPOINT换成CMD试试，如下：\",\" # 在以上的Dockerfile中 # 将ENTRYPOINT [\\\"dotnet\\\", \\\"DockerfileDemo.dll\\\"]换成CMD，如下： CMD [\\\"dotnet\\\", \\\"DockerfileDemo.dll\\\"] \",\"然后重新构建一个镜像试试，测试如下：\",\"图片\",\"如上图，对于CMD而言，如果在运行容器时，后面指定参数，这个参数就会把CMD命令替换掉，不能拼接，导致命令不对，所以报错；但这样就可以执行，如下：\",\"图片\",\"如果在当前构建的上下文目录中不想要一些文件参与构建，可以通过在.dockerignore文件中进行配置，这个和git中的.gitignore一个道理，编写也比较简单，这里就不演示了。\",\"对了，.NetCore的镜像列表可以参照这个地址：https://hub.docker.com/_/microsoft-dotnet-aspnet/，每个镜像都有对应的Dockerfile，感兴趣的小伙伴可以点进去看看，参考参考。\",\"图片\"]},\"839\":{\"h\":\"7.1 Docker网络模式简介\",\"t\":[\"当Docker进程启动时，会在主机上创建一个名为docker0的虚拟网桥，此主机上启动的Docker容器默认会连接到这个虚拟网桥上。这样所有容器通过这个虚拟网桥就打通了，所以这里的docker0工作方式和物理交换机很像。\",\"在主机上可以执行命令ip link show docker0查看：\",\"图片\",\"Docker在启动容器时可以指定网络模式，如果不指定，默认就是采用Bridge模式；Docker的网络模式有如下几种：\",\"Bridge(桥接)模式：默认的网络模式，比较适用于在同一Docker Daemon主机上运行的容器，用户也可以自定义bridge网络，优于默认的bridge网络；如果需要不同Docker主机进行通信，可以通过操作系统网络配置，也可以使用Overlay模式。\",\"Host模式：和宿主机共用一个Network Namespace。即容器不会虚拟出自己的网卡和配置自己的IP等，而是使用宿主机的IP和端口；\",\"Overlay模式：覆盖网络可以将多个 Docker Daemon主机连接在一起，并使 swarm 服务能够相互通信；也可以让Docker Daemon主机上的两个独立容器进行通信。\",\"Macvlan模式：Macvlan 网络允许为容器分配 MAC 地址，使其在网络上显示为物理设备。Docker Deamon通过容器的 MAC 地址将流量路由到容器。\",\"None模式：Docker容器拥有自己的Network Namespace，但是并不为容器进行任何网络配置。即容器没有网卡、IP、路由等信息。需要单独为Docker容器添加网卡、配置IP；\",\"Docker在启动容器的时候可以通过**--net**指定网络模式，不指定，默认就是bridge模式，如下：\",\"# --net指定网络模式，这里指定为host模式 docker run -d --name testnet --net host nginx # 通过docker inspect 容器 看网络细节，如下图 docker inspect testnet \",\"图片\"]},\"840\":{\"h\":\"7.2 Bridge默认模式了解一下\",\"t\":[\"这里就以默认的Bridge(桥接)展开来说说，其他模式后续根据应用场景再具体细说。\",\"这里主要看看主机和容器之间的网络、容器和容器之间的网络。\",\"在Bridge模式下，当启动容器时，Docker会分配一个IP给容器，并设置docker0的IP地址为容器的默认网关；这个时候会在主机上创建一对虚拟网卡veth pair设备接口，Docker将veth pair设备的一端配置在新启动的容器中，并命名为eth0@ifxxx（容器的网卡），另一端在主机中以veth***@ifxxx这样类似的名字命名，并将这个网络设备加入到docker0网桥中。\",\"容器没有启动时主机的网络配置如下：\",\"图片\",\"当启动容器时，Docker主机就会创建一对虚拟网卡vethpair设备接口，如下：\",\"图片\",\"可以进入到容器看看IP分配情况，如果ip addr命令在容器内找不到，那是因为基础镜像只包含核心命令，如果要执行其他命令，需要额外安装。可以在容器内执行如下命令进行安装。\",\"apt update && apt install -y iproute2 \",\"安装好之后，就可以查看容器内的IP情况了，如下：\",\"图片\",\"这里有没有发现容器内的IP是和主机多出来的虚拟网卡是成对出现，这样主机网络和容器之间肯定能通；\",\"图片\",\"当然容器内部也可以ping通主机。\",\"那容器之间能不能访问呢？\",\"容器内ping命令也找不到，需要进行安装，执行如下命令：\",\"apt update && install iputils-ping \",\"这里新启动一个容器mynginx2，IP内部分配如下：\",\"图片\",\"mynginx容器内能ping通mynginx2，那是因为两个容器之间共用了docker0，通过docker0进行转发。\",\"图片\",\"大概一个网络流程如下：\",\"图片\",\"这里的Docker0就好比是交换机，形成了网络桥梁。\"]},\"841\":{\"h\":\"7.3 如何能通过容器名进行访问\",\"t\":[\"默认情况，容器间的访问只能通过IP，不能通过容器名访问；\",\"图片\",\"这种情况对于线上项目很不灵活，比如数据库备份需要临时迁移，IP可能会不一样，所以项目中的地址要重新配置，如果能通过容器名访问，那么就不用操心更换啦，只要容器名一样即可，就好比域名和IP的关系一样，IP再怎么变，域名不变就行。\"]},\"842\":{\"h\":\"7.3.1 通过--link方式；\",\"t\":[\"新启动一个容器mynginx3，如下：\",\"# 通过--link关联 mynginx容器 docker run -d --name mynginx3 --link mynginx nginx \",\"容器启动之后，可以进入到容器测试：\",\"# 进入容器 docker exec -it mynginx3 /bin/bash # 安装ping工具 apt update && apt install iputils-ping \",\"图片\",\"内部原理其实是在mynginx3内部做了个映射配置，容器mynginx3的hosts内容如下：\",\"图片\",\"这样只能在容器mynginx3内部通过mynginx容器名ping通，不能在mynginx内部通过容器名mynginx3访问，如果要达到同样的效果，就得在启动mynginx时通过--link和mynginx3关联起来。\",\"图片\",\"如果每个容器都这样的显示指定的话，感觉就有点麻烦啦，通常的做法都是通过自定义网络方式来达到这个目的。\"]},\"843\":{\"h\":\"7.3.2 通过自定义网络方式；\",\"t\":[\"首先新创建一个网络，如下：\",\"图片\",\"命令解析：\",\"# --driver 指定网络模式，这里为bridge桥接模式 # --subnet 指定子网IP 192.168.0.0/16 # --gateway 指定网关 192.168.0.1 # my-net 创建的网络名 docker network create --driver bridge --subnet 192.168.0.0/16 --gateway 192.168.0.1 my-net # 显示网络 docker network ls \",\"让启动的容器使用自定义的网络，即在启动容器时使用**--net**指定即可：\",\"图片\",\"启动容器时不需要--link，只需要接入到自定义网络就可以通过容器名ping通了，如下：\",\"图片\",\"自定义网络之所以能通过容器名ping通，那是容器内运行了一个本地DNS解析器，该解析器将请求转发到Docker内部DNS服务器当中，DNS服务器中记录了容器启动时通过--name或--net-alias参数指定的名称与容器之间的关系。\",\"另外还有一个点，现在分配给容器的IP是按照预先设置的子网范围进行分配的，而不是默认的docker0子网范围，执行如下命令看详细：\",\"# 看容器详细信息 docker inspect testmynetnginx1 \",\"图片\",\"Docker可以将应用程序及环境很方便的以容器的形式启动，但当应用程序依赖的服务比较多，或是遇到一个大系统拆分的服务很多时，如果还一个一个的根据镜像启动容器，那就有点累人了，到这有很多小伙伴会说：弄个脚本就搞定啦；要的就是这个思路，Docker提供了一个叫Docker Compose的工具，一键启动相关服务。\",\"举个例：比如开发一个Web项目，需要有数据库、Redis、MongoDB、配置中心等等，如果将其进行容器化，可以有两种选择，第一种就是把所有的服务依赖和应用程序全部构建为一个镜像，然后以一个容器运行，即这个容器里面包含了Web应用程序、数据库、Redis、MongoDB、配置中心等；另一种方式就各自服务单独启动为一个容器服务，比较独立，一般可以一个一个的启动容器，然后通过网络连接起来就行；显然第二种方式是小伙伴们更多的选择，如果能配上一个批量操作那就完美了，而Docker Compose就是来干这个事的。\"]},\"844\":{\"h\":\"8.1 概述\",\"t\":[\"Docker Compose 是一个用于定义和运行多个容器服务的 Docker 应用程序工具；搭配使用 YAML 文件来配置应用程序服务，然后运行Docker Compose命令，一键启动所有容器服务。\"]},\"845\":{\"h\":\"8.2 安装\",\"t\":[\"Docker默认安装环境下是不包含Docker Compose工具的，需要单独安装。Docker Compose工具搭配Docker才有意义，所以安装Docker Compose之前需要安装Docker。以下演示平台为Linux，其他平台请参照文档：https://docs.docker.com/compose/install/\"]},\"846\":{\"h\":\"8.2.1 下载文件\",\"t\":[\"其实Docker Compose是一个可执行文件，直接下载对应文件即可，执行如下命令：\",\"# 下载Docker Compose文件， 这个地址下载比较慢 sudo curl -L \\\"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\\\" -o /usr/local/bin/docker-compose # 这个地址快点 sudo curl -L \\\"https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\\\" -o /usr/local/bin/docker-compose \",\"如下图：\",\"图片\"]},\"847\":{\"h\":\"8.2.2 授予执行权限\",\"t\":[\"下载下来的文件默认是没有执行权限的，后续需要执行，所以得授予执行权限，执行如下命令即可：\",\"sudo chmod +x /usr/local/bin/docker-compose \",\"看看权限结果分配如下：\",\"图片\",\"这样docker-compose就安装完啦。\"]},\"848\":{\"h\":\"8.2.3 卸载\",\"t\":[\"如果需要卸载，直接删除即可，执行如下命令即可：\",\"sudo rm /usr/local/bin/docker-compose \"]},\"849\":{\"h\":\"8.3. 使用\",\"t\":[\"Docker Compose需要搭配YAML文件使用，YAML 是一种人类友好的数据序列化语言，适用于所有编程语言，后缀名为.yml。\",\"所以在进行实操前，需要大概的了解一下YAML的语法，不要慌，语法和Json的思路很像，大概了解一下，后续用到查文档就行啦。\"]},\"850\":{\"h\":\"8.3.1 简单说说语法\",\"t\":[\"YAML文件内容是通过空格的缩进来代表层次，常用的数据类型有如下：\",\"对象：键值对集合；\",\"# yaml 对象语法 testKey:testValue # Json 语法 {\\\"testKey\\\":\\\"testValue\\\"} # yaml 嵌套对象 testKey:{testKey1:testValue1,testKey2:testValue2} # Json 语法 {\\\"testKey\\\":{\\\"testKey1\\\":\\\"testValue1\\\",\\\"testKey2\\\":\\\"testValue2\\\"}} \",\"数组：一组按次序排列的数据；用-前缀表示。\",\"# yaml 数组语法 -value1 -value2 -value3 # Json 数组语法 [\\\"value1\\\",\\\"value2\\\",\\\"value3\\\"] # yaml 数组行内语法 testKey:[value1,value2] # Json 语法 {\\\"testKey\\\":['value1','value2']} \",\"纯量：不可再分的值，包括字符串、整数、浮点数、日期、布尔值等。\",\"# yaml testKey:666 # Json {testKey:666} # yaml isbool:true # Json {isbool:true} \",\"常规的基本语法格式约定如下：\",\"大小写敏感\",\"使用空格缩进表示层级关系\",\"缩进不允许使用tab，只允许空格\",\"缩进的空格数不重要，只要相同层级的元素左对齐即可\",\"'#'表示注释\",\"大概了解上面这些，关于日常Docker Compose用到的文件基本上够用了，如果有需要进阶的，可以去查查对应的语法。传送门：\",\"https://yaml.org/spec/1.2.2/\",\"https://www.runoob.com/w3cnote/yaml-intro.html\",\"关于YAML文件内容中配置的命令和Dockerfile的命令差不多是一一对应的，稍后会简单说说。\"]},\"851\":{\"h\":\"8.3.2 实操撸文件\",\"t\":[\"这里还是以一个WebApi为例，例中需要依赖Redis服务。\",\"创建项目，编写例子\",\"这里只是引入了一个Redis的缓存包，通过构造函数注入之后就可以直接用啦；编写了一个API接口TestCache。\",\"图片\",\"这里还需要在Startup文件中注入相关服务，并指定Redis的连接地址，如下：\",\"图片\",\"运行起来测试一下效果，如下：\",\"图片\",\"Redis中也有值了，这里需要注意：存入Redis中的类型是Hash。\",\"图片\",\"编写Dockerfile文件\",\"在项目根目录创建一个Dockerfile文件，内容如下：\",\"图片\",\"关于Dockerfile中的内容这里就不细说了，之前有一篇文章专门分享的(点这里)。这里的Dockerfile目的就是将我们的WebApi项目构建为镜像，和Redis没有关系，不过这里不是通过执行命令构建，而是通过Compose文件一起构建。\",\"注：这里记得将Dockerfile文件通过右键->属性->设置为始终复制，保证编译后的文件有最新文件\",\"编写Compose文件\",\"在项目根目录下创建docker-compose.yml文件，内容如下：\",\"图片\",\"有了这个项目就可以一键启动了，这里需要稍微改一下我们原来的代码，如下：\",\"图片\",\"注：这里记得将docker-compose.yml文件通过右键->属性->设置为始终复制，保证编译后的文件有最新文件。\"]},\"852\":{\"h\":\"8.3.3 体验一键启动\",\"t\":[\"将项目先发布，并拷贝到对应的服务器上，如下：\",\"图片\",\"这里用的是我的阿里云服务器，拷贝文件如下：\",\"图片\",\"一键启动\",\"在docker-compose.yml所在的目录下执行如下命令：\",\"docker-compose up \",\"下面是执行docker-compose up内部执行的步骤：\",\"图片\",\"先是构建我们的程序，然后拉取依赖的Redis服务，并启动，最后启动我们的程序。(执行顺序和依赖有关系)；启动之后就可以根据docker-compose.yml文件中映射的端口访问了，如下：\",\"图片\",\"看看启动的容器名\",\"image-20211007165313310\",\"通过docker ps -n 2 查看最近启动的容器，容器的名字规则是：目录名_Compose文件中定义的服务名_序号，那小伙伴肯定会好奇为什么程序能通过myredis名字连接到redis，可以通过docker inspect composetest_myredis_1查看容器详情：\",\"图片\",\"同样可以查看到API服务对应的容器也是用的composetest_default这个网络，这个网络是一个桥接模式，可以通过docker network ls看到，如下：\",\"图片\",\"docker compose常用命令\",\"docker-compose build:构建或者重新构建服务\",\"docker-compose up:构建、启动容器，加上-d选项代表后台运行。\",\"docker-compose ps：列出所有通过Compose运行的容器\",\"图片\",\"docker-compose logs：打印相关日志信息\",\"图片\",\"docker-compose stop/start/restartd：可以指定服务停止、开始和重新启动\",\"docker-compose命令和docker的命令基本是一样的。\",\"docker-compose.yml文件内容常用属性\",\"version：指定 docker-compose.yml 文件的版本，一般都是用version 3；\",\"services：定义多个容器集合，有多少写多少；\",\"build：构建镜像，和docker build一样功效；\",\"environment：配置环境变量，和Dockerfile中ENV 关键字功能一样；\",\"# 设置环境变量 environment: RACK_ENV: development SHOW: 'true' \",\"expose：暴露端口，和Dockerfile中的EXPOSE 关键字功能一样；\",\"expose: - \\\"80\\\" - \\\"9999\\\" \",\"ports：配置端口映射，和docker run -p一样功效\",\"ports: - \\\"8080:80\\\" - \\\"6379:6379\\\" \",\"volumes：指定卷挂载路径，与Dockerifle中的VOLUME 关键字功能一样\",\"volumes: - /var/lib/mysql - /opt/data:/var/lib/mysql \",\"command：覆盖容器启动后默认执行的命令，和Dockerfile文件中的CMD命令一样；\",\"command: bundle exec thin -p 3000 \",\"image：指定要用的镜像，构建的时候会拉取。\",\"# 指定要使用redis镜像 image: redis \",\"上面列出了一些比较常用的，具体的可以参考官网：https://docs.docker.com/compose/compose-file/compose-file-v3/\",\"代码地址如下：https://gitee.com/CodeZoe/microservies-demo/tree/main/DockerComposeDemo\",\"来自微信公众号【Code综艺圈】\"]},\"853\":{\"h\":\"Docker可视化\",\"t\":[\"Docker在线版：https://labs.play-with-docker.com/\",\"docker run -d -p 9000:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock --restart=always --name prtainer portainer/portainer \",\"docker run -d --name myrabbit -p 9005:15672 -p 5672:5672 -e RABBITMQ_DEFAULT_VHOST=customer -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 rabbitmq:3-management-alpine \",\"命令说明：\",\"-d：后台运行\",\"--name：设置名称\",\"-p：设置端口\",\"-e：配置命令\",\"部署nginx-gui\",\"docker run --name nginxwebui -itd -v /root/nginxWebUI:/home/nginxWebUI -v /var/net:/home/nginxWebUI/data -e BOOT_OPTIONS=\\\"--server.port=9008\\\" --privileged=true --net=host cym1102/nginxwebui:latest \"]},\"854\":{\"h\":\"Gitlab\",\"t\":[\"# 挂载 docker run -d -p 443:443 -p 9006:80 -p 222:22 --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/var/log/gitlab -v /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce # 不挂载 docker run -d -p 443:443 -p 9006:80 -p 222:22 --name gitlab gitlab/gitlab-ce \",\"-d：后台运行\",\"-p：将容器内部端口向外映射\",\"--name：命名容器名称\",\"-v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录\"]},\"855\":{\"h\":\"Gitea\",\"t\":[\"docker run -d --name=gitea -p 10022:22 -p 9004:3000 -v /var/lib/gitea:/data gitea/gitea docker run -d --privileged=true --restart=always --name=gitea -p 10022:22 -p 9004:3000 -v /var/lib/gitea:/data gitea/gitea \"]},\"856\":{\"h\":\"Redis\",\"t\":[\"docker run -p 6379:6379 --name redis -d redis redis-server --appendonly yes --requirepass \\\"123456\\\" \",\"命令说明：\",\"-p：宿主机端口与容器端口映射，前面的端口为主机映射端口（需配置服务器安全组），后面的端口为镜像开放的端口\",\"--restart=always：无论什么情况挂壁，总是重启\",\"--name：容器名称\",\"-d：使用指定的镜像，在后台运行容器\",\"--appendonly yes：redis运行时开启持久化\",\"--requirepass “123456”：设置redis登陆密码\"]},\"857\":{\"h\":\"MySQL\",\"t\":[\"docker run -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=123456 -e TZ:Asia/Shanghai -d mysql --lower_case_table_names=1 \"]},\"858\":{\"h\":\"MongoDB\",\"t\":[\"docker run -p 27017:27017 --name mongo -e TZ=Asia/Shanghai -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=123456 -d mongo \"]},\"859\":{\"h\":\"MSSQL\",\"t\":[\"# 拉取镜像 docker pull mcr.microsoft.com/mssql/server:2017-latest # 查看镜像 docker images # 启动镜像生成容器 docker run -e \\\"ACCEPT_EULA=Y\\\" -e \\\"SA_PASSWORD=Sql987654\\\" -p 1433:1433 --name sqlserver -d mcr.microsoft.com/mssql/server:2017-latest 或者使用阿里云镜像源 docker run -e \\\"ACCEPT_EULA=Y\\\" -e \\\"SA_PASSWORD=Sql987654\\\" -p 1433:1433 --name sqlserver -d registry.cn-hangzhou.aliyuncs.com/zrng/mssql:2019-latest \"]},\"860\":{\"h\":\"postgresql\",\"t\":[\"docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=123456 postgres \"]},\"861\":{\"h\":\"Grafana\",\"t\":[\"docker run -d -p 3000:3000 grafana/grafana \"]},\"862\":{\"h\":\"Linux安装docker\",\"t\":[\"在centos 7安装docker要求系统64位，系统内核版本3.10以上，可以使用命令查看\",\"uname -r \",\"注意：要不就是开放指定的端口，要不直接就在安装之前将服务器防火墙关闭\",\"老版本的docker被称为docker或者docker-engine，如果安装就需要卸载它们以及相关的依赖项：\",\"命令：\",\"sudo yum remove docker \\\\ docker-client \\\\ docker-client-latest \\\\ docker-common \\\\ docker-latest \\\\ docker-latest-logrotate\\\\ docker-logrotate \\\\ docker-engine \",\"新版本的名称被称为docker-ce\",\"安装方法有两种：\",\"1.从docker存储库中拉取进行安装，以简化安装和升级任务。推荐。\",\"2.下载RPM软件包并手动安装，并完全手动管理升级。\",\"这边只描述使用存储库进行安装\",\"安装yum-utils\",\"sudo yum install -y yum-utils \",\"设置存储库\",\"# docker官方仓库 sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo # 使用阿里云docker仓库 sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo \",\"安装最新版本docker engine和容器\",\"sudo yum install -y docker-ce docker-ce-cli containerd.io \",\"此命令会安装 Docker，但不会启动 Docker。它还会创建一个 docker组，但是，默认情况下它不会向该组添加任何用户。\",\"# 启动docker sudo systemctl start docker \",\"配合docker镜像加速器,不过貌似如何使用阿里云docker仓库好像不需要配置网速都不差。\",\"sudo mkdir -p /etc/docker sudo tee /etc/docker/daemon.json <<-'EOF' { \\\"registry-mirrors\\\": [\\\"加速器url\\\"] } EOF sudo systemctl daemon-reload sudo systemctl restart docker \",\"查询docker版本\",\"docker --version \",\"常用命令\",\"# 重启docker sudo systemctl restart docker # 查看docker服务状态 sudo systemctl status docker # 将docker服务设置为开机启动 sudo systemctl enable docker # 查看docker版本信息 docker --version \",\"卸载docker包\",\"sudo yum remove docker-ce docker-ce-cli containerd.io \",\"主机上docker一些容器，卷或自定义配置文件不会自动删除，可以使用命令删除：\",\" sudo rm -rf /var/lib/docker sudo rm -rf /var/lib/containerd \",\"检测docker是否可以正常运行（运行hello-word镜像，如果本机没有，系统会自动去拉取）\",\"命令：sudo docker run hello-world\",\"然后出来 Hello from Docker就说明成功了\",\"执行安装出错\",\"sudo yum install -y docker-ce docker-ce-cli containerd.io \",\"img\",\"解决方案\",\"curl https://packages.microsoft.com/config/rhel/7/prod.repo > ./microsoft-prod.repo sudo cp ./microsoft-prod.repo /etc/yum.repos.d/ yum update -y \",\"官方教程：https://docs.docker.com/engine/install/centos/\",\"离线安装模式\",\"查看博客：https://www.cnblogs.com/kingsonfu/p/11576797.html\"]},\"863\":{\"h\":\"制作精简的镜像\",\"t\":[\"前段时间网易蜂巢曾经推出蜂巢 Logo T恤，用的正是 Docker 镜像制作，最神奇的是，它最终的镜像大小只有 585 字节。\",\"$ docker images | grep hub.c.163.com/public/logo REPOSITORY TAG IMAGE ID CREATED SIZE hub.c.163.com/public/logo latest 6fbdd13cd204 11 days ago 585 B \",\"有些镜像都不是我们自己来打包的（比如下载公共镜像），那是否有一些通用的精简 Docker 镜像的手段呢？答案是肯定的，甚至有的镜像可以精简 98%。精简镜像大小的好处不言而喻，既节省了存储空间，又能节省带宽，加快传输等。那好，接下来就请跟随我来学习怎么制作精简 Docker 镜像。\",\"在开始制作镜像之前，首先了解下镜像的原理，而这其中最重要的概念就是镜像层(Layers)。镜像层依赖于一系列的底层技术，比如文件系统(filesystems)、写时复制(copy-on-write)、联合挂载(union mounts)等，幸运的是你可以在很多地方学习到这些技术[1]，这里就不再赘述技术细节。\",\"图片\",\"总的来说，你最需要记住这点：\",\"在 Dockerfile 中， 每一条指令都会创建一个镜像层，继而会增加整体镜像的大小。 \",\"举例来说：\",\"FROM busybox RUN mkdir /tmp/foo RUN dd if=/dev/zero of=/tmp/foo/bar bs=1048576 count=100 RUN rm /tmp/foo/bar \",\"以上 Dockerfile 干了几件事：\",\"基于一个官方的基础镜像 busybox(只有1M多)\",\"创建一个文件夹(/tmp/foo)和一个文件(bar)，该文件分配了100M大小\",\"再把这个大文件删除\",\"实际上它最终什么也没做，我们把它构建成镜像（构建可以参考一期[2]）：\",\"docker build -t busybox:test . \",\"再让我们来对比下原生的 busybox 镜像大小和我们生成的镜像大小：\",\"$ docker images | grep busybox busybox test 896c63dbdb96 2 seconds ago 106 MB busybox latest 2b8fd9751c4c 9 weeks ago 1.093 MB \",\"出乎意料的是，却生成了 106 MB 的镜像。\",\"多出了 100 M，这是为何？这点和 Git 类似（都用到了Copy-On-Write技术），我用 git 做了如下两次提交（添加了又删除），请问 A_VERY_LARGE_FILE 还在 git 仓库中吗？\",\"$ git add A_VERY_LARGE_FILE $ git commit $ git rm A_VERY_LARGE_FILE $ git commit \",\"答案是:在的，并且会占用仓库的大小。Git 会保存每一次提交的文件版本，而 Dockerfile 中每一条指令都可能增加整体镜像的大小，即使它最终什么事情都没做。\"]},\"864\":{\"h\":\"制作步骤\",\"t\":[\"了解了镜像层知识，有助于我们接下来制作精简镜像。这里开始，以最常用的开源缓存软件 Redis 为例，从一步步试验，来介绍如何制作更精简的 Docker 镜像。\"]},\"865\":{\"h\":\"lab-1：初始化构建 Redis 镜像\",\"t\":[\"直接上 Dockerfile ：\",\"FROM ubuntu:trusty ENV VER 3.0.0 ENV TARBALL http://download.redis.io/releases/redis-$VER.tar.gz # ==> Install curl and helper tools... RUN apt-get update RUN apt-get install -y curl make gcc # ==> Download, compile, and install... RUN curl -L $TARBALL | tar zxv WORKDIR redis-$VER RUN make RUN make install #... # ==> Clean up... WORKDIR / RUN apt-get remove -y --auto-remove curl make gcc RUN apt-get clean RUN rm -rf /var/lib/apt/lists/* /redis-$VER #... CMD [\\\"redis-server\\\"] \",\"结合注释，读起来并不困难，用到的都是常规的几个命令，简要介绍如下：\",\"FROM：顶头写，指定一个基础镜像，此处基于 ubuntu:trusty\",\"ENV：设置环境变量，这里设置了 VER 和 TARBALL 两个环境变量\",\"RUN：最常用的 Dockerfile 指令，用于运行各种命令，这里调用了 8 次 RUN 指令\",\"WORKDIR：指定工作目录，相当于指令 cd\",\"CMD：指定镜像默认执行的命令，此处默认执行 redis-server 命令来启动 redis\",\"执行构建：\",\"$ docker build -t redis:lab-1 . \",\"注：国内网络，更新下载可能会较慢\",\"查看大小：\",\"Lab\",\"iamge\",\"Base\",\"Lang\",\".red[*]\",\"Size (MB)\",\"Memo\",\"1\",\"redis\",\"ubuntu\",\"C\",\"dyn\",\"347.3\",\"base ubuntu\",\"动辄就有 300多 M 的大小，不能忍，下面我们开始一步步优化。\"]},\"866\":{\"h\":\"lab-2：优化基础镜像\",\"t\":[\"精简1：选用更小的基础镜像。\",\"常用的 Linux 系统镜像一般有 ubuntu、centos、debian，其中debian 更轻量，而且够用，对比如下：\",\"REPOSITORY TAG IMAGE ID VIRTUAL SIZE --------------- ------ ------------ ------------ centos 7 214a4932132a 215.7 MB centos 6 f6808a3e4d9e 202.6 MB ubuntu trusty d0955f21bf24 188.3 MB ubuntu precise 9c5e4be642b7 131.9 MB debian jessie 65688f7c61c4 122.8 MB debian wheezy 1265e16d0c28 84.96 MB \",\"替换 debian:jessie 作为我们的基础镜像。\",\"优化 Dockerfile：\",\"FROM debian:jessie #... \",\"执行构建：\",\"$ docker build -t redis:lab-2 . \",\"查看大小：\",\"Lab\",\"image\",\"Base\",\"Lang\",\".red[*]\",\"Size (MB)\",\"Memo\",\"01\",\"redis\",\"ubuntu\",\"C\",\"dyn\",\"347.3\",\"base ubuntu\",\"02\",\"redis\",\"debian\",\"C\",\"dyn\",\"305.7\",\"base debian\",\"减少了42M，稍有成效，但并不明显。细心的同学应该发现，只有 122 MB 的 debian 基础镜像，构建后增加到了 305 MB，看来这里面肯定有优化的空间，如何优化就要用到我们开头说到的 Image Layer 知识了。\"]},\"867\":{\"h\":\"lab-3：串联 Dockerfile 指令\",\"t\":[\"精简2：串联你的 Dockerfile 指令（一般是 RUN 指令）。\",\"Dockerfile 中的 RUN 指令通过 && 和 / 支持将命令串联在一起，有时能达到意想不到的精简效果。\",\"优化 Dockerfile：\",\"FROM debian:jessie ENV VER 3.0.0 ENV TARBALL http://download.redis.io/releases/redis-$VER.tar.gz RUN echo \\\"==> Install curl and helper tools...\\\" && \\\\ apt-get update && \\\\ apt-get install -y curl make gcc && \\\\ \\\\ echo \\\"==> Download, compile, and install...\\\" && \\\\ curl -L $TARBALL | tar zxv && \\\\ cd redis-$VER && \\\\ make && \\\\ make install && \\\\ ... echo \\\"==> Clean up...\\\" && \\\\ apt-get remove -y --auto-remove curl make gcc && \\\\ apt-get clean && \\\\ rm -rf /var/lib/apt/lists/* /redis-$VER #... CMD [\\\"redis-server\\\"] \",\"构建：\",\"$ docker build -t redis:lab-3 . \",\"查看大小：\",\"Lab\",\"Image\",\"Base\",\"Lang\",\".red[*]\",\"Size (MB)\",\"Memo\",\"01\",\"redis\",\"ubuntu\",\"C\",\"dyn\",\"347.3\",\"base ubuntu\",\"02\",\"redis\",\"debian\",\"C\",\"dyn\",\"305.7\",\"base debian\",\"03\",\"redis\",\"debian\",\"C\",\"dyn\",\"151.4\",\"cmd chaining\",\"哇！一下子减少了 50%，效果明显啊！这是最常用的一个精简手段了。\"]},\"868\":{\"h\":\"lab-4：压缩你的镜像\",\"t\":[\"优化3：试着用命令或工具压缩你的镜像。\",\"docker 自带的一些命令还能协助压缩镜像，比如 export 和 import\",\"$ docker run -d redis:lab-3 $ docker export 71b1c0ad0a2b | docker import - redis:lab-4 \",\"但麻烦的是需要先将容器运行起来，而且这个过程中你会丢失镜像原有的一些信息，比如：导出端口，环境变量，默认指令。\",\"所以一般通过命令行来精简镜像都是实验性的，那么这里再推荐一个小工具：docker-squash[3]。用起来更简单方便，并且不会丢失原有镜像的自带信息。\",\"下载安装：\",\"https://github.com/jwilder/docker-squash#installation\",\"压缩操作：\",\"$ docker save redis:lab-3 \\\\ | sudo docker-squash -verbose -t redis:lab-4 \\\\ | docker load \",\"注：该工具在 Mac 下并不好使，请在 Linux 下使用\",\"对比大小：\",\"Lab\",\"Image\",\"Base\",\"PL\",\".red[*]\",\"Size (MB)\",\"Memo\",\"01\",\"redis\",\"ubuntu\",\"C\",\"dyn\",\"347.3\",\"base ubuntu\",\"02\",\"redis\",\"debian\",\"C\",\"dyn\",\"305.7\",\"base debian\",\"03\",\"redis\",\"debian\",\"C\",\"dyn\",\"151.4\",\"cmd chaining\",\"04\",\"redis\",\"debian\",\"C\",\"dyn\",\"151.4\",\"docker-squash\",\"好吧，从这里看起来并没有太大作用，所以我只能说试着，而不要报太大期望。\"]},\"869\":{\"h\":\"lab-5：使用最精简的 base image\",\"t\":[\"使用 scratch 或者 busybox 作为基础镜像。\",\"关于 scratch：\",\"一个空镜像，只能用于构建镜像，通过 FROM scratch\",\"在构建一些基础镜像，比如 debian 、 busybox，非常有用\",\"用于构建超少镜像，比如构建一个包含所有库的二进制文件\",\"关于 busybox\",\"只有 1~5M 的大小\",\"包含了常用的 UNIX 工具\",\"非常方便构建小镜像\",\"这些超小的基础镜像，结合能生成静态原生 ELF 文件的编译语言，比如C/C++，比如 Go，特别方便构建超小的镜像。\",\"cloudcomb-logo（C语言开发） 就是用到了该原理，才能构建出 585 字节的镜像。\",\"redis 同样使用 C语言 开发，看来也有很大的优化空间，下面这个实验，让我们介绍具体的操作方法。\"]},\"870\":{\"h\":\"lab-6：提取动态链接的 .so 文件\",\"t\":[\"实验上下文：\",\"$ cat /etc/os-release NAME=\\\"Ubuntu\\\" VERSION=\\\"14.04.2 LTS, Trusty Tahr\\\" $ uname -a Linux localhost 3.13.0-46-generic #77-Ubuntu SMP Mon Mar 2 18:23:39 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux \",\"隆重推出 ldd：打印共享的依赖库\",\"$ ldd redis-3.0.0/src/redis-server linux-vdso.so.1 => (0x00007fffde365000) libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f307d5aa000) libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f307d38c000) libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f307cfc6000) /lib64/ld-linux-x86-64.so.2 (0x00007f307d8b9000) \",\"将所有需要的 .so 文件打包：\",\"$ tar ztvf rootfs.tar.gz 4485167 2015-04-21 22:54 usr/local/bin/redis-server 1071552 2015-02-25 16:56 lib/x86_64-linux-gnu/libm.so.6 141574 2015-02-25 16:56 lib/x86_64-linux-gnu/libpthread.so.0 1840928 2015-02-25 16:56 lib/x86_64-linux-gnu/libc.so.6 149120 2015-02-25 16:56 lib64/ld-linux-x86-64.so.2 \",\"再制作成 Dockerfile：\",\"FROM scratch ADD rootfs.tar.gz / COPY redis.conf /etc/redis/redis.conf EXPOSE 6379 CMD [\\\"redis-server\\\"] \",\"执行构建：\",\"$ docker build -t redis-05 . \",\"查看大小：\",\"Lab\",\"Base\",\"PL\",\".red[*]\",\"Size (MB)\",\"Memo\",\"01\",\"redis\",\"ubuntu\",\"C\",\"dyn\",\"347.3\",\"base ubuntu\",\"02\",\"redis\",\"debian\",\"C\",\"dyn\",\"305.7\",\"base debian\",\"03\",\"redis\",\"debian\",\"C\",\"dyn\",\"151.4\",\"cmd chaining\",\"04\",\"redis\",\"debian\",\"C\",\"dyn\",\"151.4\",\"docker-squash\",\"05\",\"redis\",\"scratch\",\"C\",\"dyn\",\"7.73\",\"rootfs: .so\",\"哇！显著提高啦！\",\"测试一下：\",\"$ docker run -d --name redis-05 redis-05 $ redis-cli -h \\\\ $(docker inspect -f '{{.NetworkSettings.IPAddress}}' redis-05) $ redis-benchmark -h \\\\ $(docker inspect -f '{{.NetworkSettings.IPAddress}}' redis-05) \",\"总结一下：\",\"用 ldd 查出所需的 .so 文件\",\"将所有依赖压缩成 rootfs.tar 或 rootfs.tar.gz，之后打进 scratch 基础镜像\"]},\"871\":{\"h\":\"lab-7：为 Go 应用构建精简镜像\",\"t\":[\"Go 语言天生就方便用来构建精简镜像，得益于它能方便的打包成包含静态链接的二进制文件。\",\"打个比方，你有一个 4 MB 大小的包含静态链接的 Go 二进制，并且将其打进 scratch 这样的基础镜像，你得到的镜像大小也只有区区的 4 MB。这可是包含同样功能的 Ruby 程序的百分之一啊。\",\"这里再给大家介绍一个非常好用开源的 Go 编译工具：golang-builder，并给大家实际演示一个例子\",\"程序代码：\",\"package main // import \\\"github.com/CenturyLinkLabs/hello\\\" import \\\"fmt\\\" func main() { fmt.Println(\\\"Hello World\\\") } \",\"Dockerfile：\",\"FROM scratch COPY hello / ENTRYPOINT [\\\"/hello\\\"] \",\"通过 golang-builder 打包成镜像：\",\"docker run --rm \\\\ -v $(pwd):/src \\\\ -v /var/run/docker.sock:/var/run/docker.sock \\\\ centurylink/golang-builder \",\"查看镜像大小(Mac下测试)：\",\"$ docker images REPOSITORY TAG IMAGE ID CREATED VIRTUAL SIZE hello latest 1a42948d3224 24 seconds ago 1.59 MB \",\"哇！这么省力，就能创建几 M 大小的镜像，Go 简介就是为 Docker 镜像量身定做的！\"]},\"872\":{\"h\":\"总结\",\"t\":[\"我们介绍了镜像层的知识，并且通过实验，介绍三种如何精简镜像的技巧。这里主要介绍了三种精简方法：选用更精小的镜像，串联 Dockerfile 运行指令，以及试着压缩你的镜像。通过这几个技巧，已经可以将 300M 大小的镜像压缩到 150M，压缩率50%到98%，效果还是不错。\",\"优化基础镜像\",\"串接 Dockerfile 命令：\",\"压缩 Docker images\",\"优化程序依赖\",\"选用更合适的开发语言\"]},\"873\":{\"h\":\"参考\",\"t\":[\"scratch in Docker Hub[4]\",\"Make FROM scratch a special cased 'no-base' spec[5]\",\"vDSO (virtual dynamic shared object)[6]\",\"Small Docker Images For Go Apps[7] (with golang-builder[8])\",\"Building Docker Images for Static Go Binaries[9]\",\"Dockerfile Best Practices - take 2[10] - by Michael Crosby, 2014-03-09.\",\"Optimizing Docker Images[11] - by Brian DeHamer, 2014-07-28.\",\"Squashing Docker Images[12] - by Jason Wilder, 2014-08-19.\"]},\"874\":{\"h\":\"参考资料\",\"t\":[\"[1]这些技术: https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/ [2]一期: https://github.com/bingohuang/play-docker-images/tree/master/stage-01 [3]docker-squash: https://github.com/jwilder/docker-squash [4]scratch in Docker Hub: https://registry.hub.docker.com/_/scratch/ [5]Make FROM scratch a special cased 'no-base' spec: https://github.com/docker/docker/pull/8827 [6]vDSO (virtual dynamic shared object): http://en.wikipedia.org/wiki/VDSO [7]Small Docker Images For Go Apps: http://www.centurylinklabs.com/small-docker-images-for-go-apps/ [8]golang-builder: https://github.com/CenturyLinkLabs/golang-builder [9]Building Docker Images for Static Go Binaries: https://medium.com/@kelseyhightower/optimizing-docker-images-for-static-binaries-b5696e26eb07 [10]Dockerfile Best Practices - take 2: http://crosbymichael.com/dockerfile-best-practices-take-2.html [11]Optimizing Docker Images: http://www.centurylinklabs.com/optimizing-docker-images/ [12]Squashing Docker Images: http://jasonwilder.com/blog/2014/08/19/squashing-docker-images/\"]},\"875\":{\"h\":\"转载信息\",\"t\":[\"文章来自黄庆兵老师的网易蜂巢《玩转 Docker 镜像》系列https://github.com/bingohuang/play-docker-images，原本分为上下两篇，由生态君整合成一篇便于阅读。\"]},\"876\":{\"h\":\"Windows安装docker\",\"t\":[\"打开控制面板 - 程序和功能 - 启用或关闭Windows功能，勾选Hyper-V，然后点击确定即可，如图：\",\"img\",\"点击确定后，启用完毕会提示重启系统，我们可以稍后再重启。\",\"Docker下载地址为：https://www.docker.com/products/docker-desktop 点击如图处即可下载安装包：\",\"img\",\"下载完成后运行安装包，安装完成后界面如图：\",\"img\",\"单击Close and log out，这个时候我们重启一次电脑。\",\"1.在桌面找到Docker for Windows快捷方式，双击启动即可！启动成功后托盘处会有一个小鲸鱼的图标。打开命令行输入命令：docker version可以查看当前docker版本号，如图：\",\"img\",\"注：在这里可能出现问题，启动docker时发现无法启动，具体报错显示如下：\",\"img\",\"在控制台输入docker version 显示错误如下\",\"img\",\"解决办法：首先确保Hyper-V已经启用\",\"打开任务管理器，查看性能-CPU-虚拟化已启用\",\"img\",\"如果docker还不能启动，可以尝试如下办法：\",\"在控制台输入下面命令\",\"cd \\\"C:\\\\Program Files\\\\Docker\\\\Docker\\\" ./DockerCli.exe -SwitchDaemon \",\"重启docker，docker desktop is running 2.更换镜像源地址\",\"中国官方镜像源地址为：https://registry.docker-cn.com\",\"点击托盘处docker图标右键选择-Settings，然后修改如下：\",\"img\",\"点击Apply后会重启Docker。\",\"3.载入测试镜像测试\",\"输入命名“docker run hello-world”可以加载测试镜像来测试。如图：\",\"img\",\"这样即表示安装成功了！\"]},\"877\":{\"h\":\"Jenkins\",\"t\":[\"最后编辑时间：2021年1月22日\",\"Jenkins 是一款流行的开源持续集成（CI）与持续部署（CD）工具，用于自动化各种任务，包括构建、测试和部署软件。\"]},\"878\":{\"h\":\"构建任务\"},\"879\":{\"h\":\"流水线Pipeline\",\"t\":[\"一套运行于Jenkins上的工作流框架，将原本独立运行于单个或者多个节点的任务连接起来，实现单个任务难以完成的复杂流程编排与可视化。\",\"Stage: 阶段，一个Pipeline可以划分为若干个Stage，每个Stage代表一组操作。注意，Stage是一个逻辑分组的概念，可以跨多个Node。如上图所示，Build，Test和Deploy就是Stage，代表了三个不同的阶段：编译、测试和部署。\",\"Node: 节点，一个Node就是一个Jenkins节点，或者是Master，或者是Slave，是执行Step的具体运行期环境。\",\"Step: 步骤，Step是最基本的操作单元，小到创建一个目录，大到构建一个Docker镜像，由各类Jenkins Plugin提供。\"]},\"880\":{\"h\":\"部署服务\",\"t\":[\"在Linux下，SSH服务默认会安装，而在Windows Server下，需要单独安装，可以借助FreeSSHD这个免费工具来实现。由于我的物理机都是Windows Server，物理机上的VM是Linux（Docker运行环境），所以需要给物理机配置FreeSSHD，用来实现从CI服务器发布Release到物理服务器中的VM。\"]},\"881\":{\"h\":\"Docker安装\",\"t\":[\"该方法部署的jenkins里面不包含netcore环境，下面包含通过docker部署netcore步骤\"]},\"882\":{\"h\":\"1.1 创建jenkins的工作目录\",\"t\":[\"//创建工作目录 mkdir /var/jenkins_home //赋予权限 chown -R 1000 /var/jenkins_home \"]},\"883\":{\"h\":\"1.2 通过docker部署\"},\"884\":{\"h\":\"1.2.1 拉取镜像\",\"t\":[\"docker pull jenkinsci/blueocean \"]},\"885\":{\"h\":\"1.2.2 生成容器\",\"t\":[\"#注意：切换一行执行命令 docker run -u root -d -p 9003:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home -v /usr/bin/docker:/usr/bin/docker -v /var/run/docker.sock:/var/run/docker.sock -v /usr/local/bin/docker-compose:/usr/local/bin/docker-compose jenkinsci/blueocean 一行显示: docker run -u root -d -p 9003:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home -v /usr/bin/docker:/usr/bin/docker -v /var/run/docker.sock:/var/run/docker.sock -v /usr/local/bin/docker-compose:/usr/local/bin/docker-compose jenkinsci/blueocean \"]},\"886\":{\"h\":\"1.3 通过docker-compose部署\",\"t\":[\"执行docker-compose脚本\",\"version: '3.4' services: jenkins: container_name: jenkins image: jenkinsci/blueocean ports: - \\\"9003:8080\\\" - \\\"50000:50000\\\" restart: always user: root volumes: - '/var/jenkins_home:/var/jenkins_home' - '/usr/bin/docker:/usr/bin/docker' - '/var/run/docker.sock:/var/run/docker.sock' - '/usr/local/bin/docker-compose:/usr/local/bin/docker-compose' environment: - TZ=Asia/Shanghai \"]},\"887\":{\"h\":\"1.3.1 执行命令生成容器\",\"t\":[\"docker-compose -f docker-compose.yaml up --build -d jenkins\",\"访问地址：http://IP:8080\",\"img\"]},\"888\":{\"h\":\"2.1 寻找超级管理员密码\",\"t\":[\"进入容器，然后去容器的执行目录下查找管理员的密码\",\"// 进入容器 docker exec -it 容器ID bash // 查看密码 cat /var/jenkins_home/secrets/initialAdminPassword 或者不进入容器 docker exec 容器ID cat /var/jenkins_home/secrets/initialAdminPassword \",\"img\",\"输入找到的管理员密码然后进入系统\"]},\"889\":{\"h\":\"2.2 进入jenkins\",\"t\":[\"新手入门，选择安装插件的方式，这里我们直接选择安装推荐的插件然后进入系统\",\"注意：安装插件报错的话继续在执行一遍。\"]},\"890\":{\"h\":\"2.3 设置管理员用户密码\",\"t\":[\"创建管理员用户密码\",\"img\"]},\"891\":{\"h\":\"2.4 系统界面\",\"t\":[\"如果系统管理里面有错误，那么我们可以手动安装和修改。\"]},\"892\":{\"h\":\"2.5 修改镜像源\",\"t\":[\"插件管理->高级->升级站点，修改为清华大学插件源\",\"# 清华大学官方镜像 https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json \",\"如果出现错误，那么就需要去查看控制台输出，根据错误找原因。\"]},\"893\":{\"h\":\"3.1 IPv4 forwarding is disabled\",\"t\":[\"意思就是linux没有开启 Ipv4 数据包转发功能\",\"可以先尝试重启docker，如果没有作用可以修改下面配置\",\"# 1. 打开 sysctl.conf vim /etc/sysctl.conf # 2.添加下面一行 net.ipv4.ip_forward=1 # 3.重启 network 和 docker systemctl restart network && systemctl restart docker \",\"官方文档：https://www.jenkins.io/doc/book/installing/docker/\",\"xiaoxiaotank：https://www.cnblogs.com/xiaoxiaotank/p/14762665.html\"]},\"894\":{\"h\":\"自由风格任务\",\"t\":[\"实现目的：通过jenkins在服务器部署一个简单的.Net程序\",\"输入任务名称并选择构建一个自由风格的任务\",\"img\"]},\"895\":{\"h\":\"2.1 常规\",\"t\":[\"设置描述和丢弃规则\",\"img\"]},\"896\":{\"h\":\"2.2 源码管理\",\"t\":[\"配置源代码和凭据\",\"img\"]},\"897\":{\"h\":\"2.3 构建触发器\",\"t\":[\"img\"]},\"898\":{\"h\":\"2.4 构建环境\",\"t\":[\"设置每次构建的时候删除之前的文件(我主要是想保持文件最新，奈何没找到拉取代码的方式，参考文档里面有方法)\",\"img\"]},\"899\":{\"h\":\"2.5 构建\",\"t\":[\"通过执行shell脚本来来构建\",\"img\",\"通过编写shell脚本来部署.NetCore项目\",\"image_tag=`date +%Y%m%d%H%M%S`; echo $image_tag; # build镜像并且打上tag dockerfile路径根据不同项目地址不同 docker build -f ./Net5ByDocker/Dockerfile -t net5bydocker:$image_tag .; docker images; # 停止并删除旧版 net5bydocker 容器 CID=$(docker ps | grep \\\"net5bydocker\\\" | awk '{print $1}') echo $CID if [ \\\"$CID\\\" != \\\"\\\" ];then docker stop $CID docker rm $CID fi # 把刚刚build出来的镜像跑起来 docker run -p 8012:80 --name net5bydocker -d net5bydocker:$image_tag; docker ps -a; docker logs net5bydocker; \",\"脚本参考自：https://www.cnblogs.com/xiaoxiaotank/p/14762665.html\"]},\"900\":{\"h\":\"2.6 构建后操作\",\"t\":[\"img\",\"点击保存后点击立即构建，就会在下面可以看到构建历史列表(出现蓝色代表构建成功，红色代表有问题)\",\"img\",\"构建完成后我们查看linux服务器是否已经有刚部署项目的容器\",\"img\"]},\"901\":{\"h\":\"2.3 查看输出\",\"t\":[\"通过在指定的build ID下选择输出控制台查看详细信息\",\"img\"]},\"902\":{\"h\":\"2.4 默认工作目录\",\"t\":[\"通过输出信息我们可以看到jenkins默认的工作目录是我们配置的目录\",\"/var/jenkins_home/workspace/ \",\"img\",\"通过我们的shell配置，我们访问我们的swagger地址\",\"http://192.168.1.14:8012/swagger/index.html \",\"img\",\"调用接口发现可以查询到数据\",\"img\",\"这点常见的错误就是连接数据库的地址配置有问题，如果这里有问题，可以通过命令去查看docker日志\",\"docker logs 容器Id \",\"GitLab+Jenkins持续集成+自动化部署： https://www.cnblogs.com/yanjieli/p/10613212.html\",\"xiaoxiaotank：https://www.cnblogs.com/xiaoxiaotank/p/14762665.html\"]},\"903\":{\"h\":\"Linux安装\"},\"904\":{\"h\":\"1.需要先安装java环境\",\"t\":[\"该文章再linux目录下有讲解。\"]},\"905\":{\"h\":\"2. 安装jenkins\",\"t\":[\"sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key yum install jenkins -y \",\"安装完提示信息：\",\"img\",\"默认安装后的端口绑定的是8080，如果你想更改请进入文件编辑JENKINS_PORT属性项。\",\"vim /etc/sysconfig/jenkins \",\"如果你使用的是root用户（没有单独创建一个jenkins的用户），那么建议进入上面的配置文件编辑JENKINS_USER属性项将jenkins改为root。\",\"img\"]},\"906\":{\"h\":\"3. 配置jenkins\"},\"907\":{\"h\":\"3.1 加入开启启动项\",\"t\":[\"systemctl start jenkins systemctl enable jenkins systemctl daemon-reload \"]},\"908\":{\"h\":\"3.2 修改目录权限：\",\"t\":[\"chown -R root:root /var/lib/jenkins chown -R root:root /var/cache/jenkins chown -R root:root /var/log/jenkins \",\"***Tip：***在 Shell 中，可以使用chown命令来改变文件所有者。chown命令是change owner（改变拥有者）的缩写。-R代表进行递归( recursive )的持续更改，即连同子目录下的所有文件、目录都更新成为这个用户组，常常用在更改某一目录的情况。\"]},\"909\":{\"h\":\"3.3 重启Jenkins服务\",\"t\":[\"service jenkins restart ps -ef | grep jenkins \",\"提示信息如下图所示：\",\"img\",\"***PS：***启动Jenkins\",\"systemctl start jenkins \",\"验证启动状态：\",\"systemctl status jenkins \",\"img\"]},\"910\":{\"h\":\"4. 初始化jenkins\",\"t\":[\"访问地址提示需要解锁\",\"img\",\"可以通过下面的命令查看管理员密码\",\"cat /var/lib/jenkins/secrets/initialAdminPassword \",\"复制密码到文本框然后进入系统\"]},\"911\":{\"h\":\"5. 允许通过防火墙\",\"t\":[\"# Jenkins 默认运行在 8080 端口，允许8080端口通过防火墙 $ sudo firewall-cmd --zone=public --add-port=8080/tcp --permanent $ sudo firewall-cmd --zone=public --add-service=http --permanent $ sudo firewall-cmd --reload # 或者直接关闭防火墙 $ sudo firewall-cmd --state # 查看防火墙状态 $ sudo systemctl stop firewalld.service # 停止防火墙 $ sudo systemctl disable firewalld.service # 禁用防火墙开机启动 $ sudo systemctl enable firewalld.service # 起用防火墙开机启动 $ sudo systemctl start firewalld.service # 禁用防火墙开机启动 \"]},\"912\":{\"h\":\"参考教程\",\"t\":[\"https://www.cnblogs.com/liudecai/p/14770969.html\"]},\"913\":{\"h\":\"介绍\",\"t\":[\"Kubernetes是Google开源的容器集群管理系统，是Google多年⼤规模容器管理技术Borg的开源版本，主要功能包括:\",\"基于容器的应用部署、维护和滚动升级\",\"负载均衡和服务发现\",\"跨机器和跨地区的集群调度\",\"自动伸缩\",\"无状态服务和有状态服务\",\"广泛的Volume支持\",\"插件机制保证扩展性\",\"痴者工良Kubernetes书：https://k8s.whuanle.cn/\"]},\"914\":{\"h\":\"常用概念\",\"t\":[\"文章来自微信公众号【杰哥的IT之旅】\",\"Kubernetes发展非常迅速，已经成为容器编排领域的领导者，接下来我们将讲解Kubernetes中涉及到的一些主要概念。\",\"Pod是一组紧密关联的容器集合，支持多个容器在一个Pod中共享网络和文件系统，可以通过进程间通信和文件共享这种简单高效的方式完成服务，是Kubernetes调度的基本单位。Pod的设计理念是每个Pod都有一个唯一的IP。\",\"Pod具有如下特征：\",\"包含多个共享IPC、Network和UTC namespace的容器，可直接通过localhost通信\",\"所有Pod内容器都可以访问共享的Volume，可以访问共享数据\",\"优雅终止:Pod删除的时候先给其内的进程发送SIGTERM，等待一段时间(grace period)后才强制停止依然还在运行的进程\",\"特权容器(通过SecurityContext配置)具有改变系统配置的权限(在网络插件中大量应用)\",\"支持三种重启策略（restartPolicy），分别是：Always、OnFailure、Never\",\"支持三种镜像拉取策略（imagePullPolicy），分别是：Always、Never、IfNotPresent\",\"资源限制，Kubernetes通过CGroup限制容器的CPU以及内存等资源，可以设置request以及limit值\",\"健康检查，提供两种健康检查探针，分别是livenessProbe和redinessProbe，前者用于探测容器是否存活，如果探测失败，则根据重启策略进行重启操作，后者用于检查容器状态是否正常，如果检查容器状态不正常，则请求不会到达该Pod\",\"Init container在所有容器运行之前执行，常用来初始化配置\",\"容器生命周期钩子函数，用于监听容器生命周期的特定事件，并在事件发生时执行已注册的回调函数，支持两种钩子函数：postStart和preStop，前者是在容器启动后执行，后者是在容器停止前执行\",\"Namespace（命名空间）是对一组资源和对象的抽象集合，比如可以用来将系统内部的对象划分为不同的项目组或者用户组。常见的pod、service、replicaSet和deployment等都是属于某一个namespace的(默认是default)，而node, persistentVolumes等则不属于任何namespace。\",\"常用namespace操作：\",\"kubectlgetnamespace, 查询所有namespace\",\"kubectl createnamespacens-name，创建namespace\",\"kubectldeletenamespacens-name, 删除namespace\",\"删除命名空间时，需注意以下几点：\",\"删除一个namespace会自动删除所有属于该namespace的资源。\",\"default 和 kube-system 命名空间不可删除。\",\"PersistentVolumes是不属于任何namespace的，但PersistentVolumeClaim是属于某个特定namespace的。\",\"Events是否属于namespace取决于产生events的对象。\",\"Node是Pod真正运行的主机，可以是物理机也可以是虚拟机。Node本质上不是Kubernetes来创建的， Kubernetes只是管理Node上的资源。为了管理Pod，每个Node节点上至少需要运行container runtime（Docker）、kubelet和kube-proxy服务。\",\"常用node操作：\",\"kubectlgetnodes，查询所有node\",\"kubectl cordon $nodename, 将node标志为不可调度\",\"kubectl uncordon $nodename, 将node标志为可调度\",\"taint(污点)\",\"使用kubectl taint命令可以给某个Node节点设置污点，Node被设置上污点之后就和Pod之间存在了一种相斥的关系，可以让Node拒绝Pod的调度执行，甚至将Node已经存在的Pod驱逐出去。每个污点的组成：key=value:effect，当前taint effect支持如下三个选项：\",\"NoSchedule：表示k8s将不会将Pod调度到具有该污点的Node上\",\"PreferNoSchedule：表示k8s将尽量避免将Pod调度到具有该污点的Node上\",\"NoExecute：表示k8s将不会将Pod调度到具有该污点的Node上，同时会将Node上已经存在的Pod驱逐出去\",\"常用命令如下：\",\"kubectl taint node node0 key1=value1:NoShedule，为node0设置不可调度污点\",\"kubectl taint node node0 key-，将node0上key值为key1的污点移除\",\"kubectl taint node node1 node-role.kubernetes.io/master=:NoSchedule，为kube-master节点设置不可调度污点\",\"kubectl taint node node1 node-role.kubernetes.io/master=PreferNoSchedule，为kube-master节点设置尽量不可调度污点\",\"容忍(Tolerations)\",\"设置了污点的Node将根据taint的effect：NoSchedule、PreferNoSchedule、NoExecute和Pod之间产生互斥的关系，Pod将在一定程度上不会被调度到Node上。 但我们可以在Pod上设置容忍(Toleration)，意思是设置了容忍的Pod将可以容忍污点的存在，可以被调度到存在污点的Node上。\",\"Service是对一组提供相同功能的Pods的抽象，并为他们提供一个统一的入口，借助 Service 应用可以方便的实现服务发现与负载均衡，并实现应用的零宕机升级。Service通过标签(label)来选取后端Pod，一般配合ReplicaSet或者Deployment来保证后端容器的正常运行。\",\"service 有如下四种类型，默认是ClusterIP：\",\"ClusterIP: 默认类型，自动分配一个仅集群内部可以访问的虚拟IP\",\"NodePort: 在ClusterIP基础上为Service在每台机器上绑定一个端口，这样就可以通过 NodeIP:NodePort 来访问该服务\",\"LoadBalancer: 在NodePort的基础上，借助cloud provider创建一个外部的负载均衡器，并将请求转发到 NodeIP:NodePort\",\"ExternalName: 将服务通过DNS CNAME记录方式转发到指定的域名\",\"另外，也可以将已有的服务以Service的形式加入到Kubernetes集群中来，只需要在创建 Service 的时候不指定Label selector，而是在Service创建好后手动为其添加endpoint。\",\"默认情况下容器的数据是非持久化的，容器消亡以后数据也会跟着丢失，所以Docker提供了Volume机制以便将数据持久化存储。Kubernetes提供了更强大的Volume机制和插件，解决了容器数据持久化以及容器间共享数据的问题。\",\"Kubernetes存储卷的生命周期与Pod绑定\",\"容器挂掉后Kubelet再次重启容器时，Volume的数据依然还在\",\"Pod删除时，Volume才会清理。数据是否丢失取决于具体的Volume类型，比如emptyDir的数据会丢失，而PV的数据则不会丢\",\"目前Kubernetes主要支持以下Volume类型：\",\"emptyDir：Pod存在，emptyDir就会存在，容器挂掉不会引起emptyDir目录下的数据丢失，但是pod被删除或者迁移，emptyDir也会被删除\",\"hostPath：hostPath允许挂载Node上的文件系统到Pod里面去\",\"NFS（Network File System）：网络文件系统，Kubernetes中通过简单地配置就可以挂载NFS到Pod中，而NFS中的数据是可以永久保存的，同时NFS支持同时写操作。\",\"glusterfs：同NFS一样是一种网络文件系统，Kubernetes可以将glusterfs挂载到Pod中，并进行永久保存\",\"cephfs：一种分布式网络文件系统，可以挂载到Pod中，并进行永久保存\",\"subpath：Pod的多个容器使用同一个Volume时，会经常用到\",\"secret：密钥管理，可以将敏感信息进行加密之后保存并挂载到Pod中\",\"persistentVolumeClaim：用于将持久化存储（PersistentVolume）挂载到Pod中\",\"...\",\"PesistentVolume(PV)是集群之中的一块网络存储。跟 Node 一样，也是集群的资源。PersistentVolume (PV)和PersistentVolumeClaim (PVC)提供了方便的持久化卷: PV提供网络存储资源，而PVC请求存储资源并将其挂载到Pod中。\",\"PV的访问模式(accessModes)有三种:\",\"ReadWriteOnce(RWO):是最基本的方式，可读可写，但只支持被单个Pod挂载。\",\"ReadOnlyMany(ROX):可以以只读的方式被多个Pod挂载。\",\"ReadWriteMany(RWX):这种存储可以以读写的方式被多个Pod共享。\",\"不是每一种存储都支持这三种方式，像共享方式，目前支持的还比较少，比较常用的是 NFS。在PVC绑定PV时通常根据两个条件来绑定，一个是存储的大小，另一个就是 访问模式。\",\"PV的回收策略(persistentVolumeReclaimPolicy)也有三种\",\"Retain，不清理保留Volume(需要手动清理)\",\"Recycle，删除数据，即 rm -rf /thevolume/* (只有NFS和HostPath支持)\",\"Delete，删除存储资源\",\"一般情况下我们不需要手动创建Pod实例，而是采用更高一层的抽象或定义来管理Pod，针对无状态类型的应用，Kubernetes使用Deloyment的Controller对象与之对应。其典型的应用场景包括：\",\"定义Deployment来创建Pod和ReplicaSet\",\"滚动升级和回滚应用\",\"扩容和缩容\",\"暂停和继续Deployment\",\"常用的操作命令如下：\",\"kubectl run www--image=10.0.0.183:5000/hanker/www:0.0.1--port=8080 生成一个Deployment对象\",\"kubectlgetdeployment--all-namespaces 查找Deployment\",\"kubectl describe deployment www 查看某个Deployment\",\"kubectl edit deployment www 编辑Deployment定义\",\"kubectldeletedeployment www 删除某Deployment\",\"kubectl scale deployment/www--replicas=2 扩缩容操作，即修改Deployment下的Pod实例个数\",\"kubectlsetimage deployment/nginx-deployment nginx=nginx:1.9.1更新镜像\",\"kubectl rollout undo deployment/nginx-deployment 回滚操作\",\"kubectl rollout status deployment/nginx-deployment 查看回滚进度\",\"kubectl autoscale deployment nginx-deployment--min=10--max=15--cpu-percent=80 启用水平伸缩（HPA - horizontal pod autoscaling），设置最小、最大实例数量以及目标cpu使用率\",\"kubectl rollout pause deployment/nginx-deployment 暂停更新Deployment\",\"kubectl rollout resume deploy nginx 恢复更新Deployment\",\"更新策略\",\".spec.strategy 指新的Pod替换旧的Pod的策略，有以下两种类型\",\"RollingUpdate 滚动升级，可以保证应用在升级期间，对外正常提供服务。\",\"Recreate 重建策略，在创建出新的Pod之前会先杀掉所有已存在的Pod。\",\"Deployment和ReplicaSet两者之间的关系\",\"使用Deployment来创建ReplicaSet。ReplicaSet在后台创建pod，检查启动状态，看它是成功还是失败。\",\"当执行更新操作时，会创建一个新的ReplicaSet，Deployment会按照控制的速率将pod从旧的ReplicaSet移 动到新的ReplicaSet中\",\"Deployments和ReplicaSets是为无状态服务设计的，那么StatefulSet则是为了有状态服务而设计，其应用场景包括：\",\"稳定的持久化存储，即Pod重新调度后还是能访问到相同的持久化数据，基于PVC来实现\",\"稳定的网络标志，即Pod重新调度后其PodName和HostName不变，基于Headless Service(即没有Cluster IP的Service)来实现\",\"有序部署，有序扩展，即Pod是有顺序的，在部署或者扩展的时候要依据定义的顺序依次进行操作(即从0到N-1，在下一个Pod运行之前所有之前的Pod必须都是Running和Ready状态)，基于init containers来实现\",\"有序收缩，有序删除(即从N-1到0)\",\"支持两种更新策略：\",\"OnDelete:当 .spec.template更新时，并不立即删除旧的Pod，而是等待用户手动删除这些旧Pod后自动创建新Pod。这是默认的更新策略，兼容v1.6版本的行为\",\"RollingUpdate:当 .spec.template 更新时，自动删除旧的Pod并创建新Pod替换。在更新时这些Pod是按逆序的方式进行，依次删除、创建并等待Pod变成Ready状态才进行下一个Pod的更新。\",\"DaemonSet保证在特定或所有Node节点上都运行一个Pod实例，常用来部署一些集群的日志采集、监控或者其他系统管理应用。典型的应用包括:\",\"日志收集，比如fluentd，logstash等\",\"系统监控，比如Prometheus Node Exporter，collectd等\",\"系统程序，比如kube-proxy, kube-dns, glusterd, ceph，ingress-controller等\",\"指定Node节点\",\"DaemonSet会忽略Node的unschedulable状态，有两种方式来指定Pod只运行在指定的Node节点上:\",\"nodeSelector:只调度到匹配指定label的Node上\",\"nodeAffinity:功能更丰富的Node选择器，比如支持集合操作\",\"podAffinity:调度到满足条件的Pod所在的Node上\",\"目前支持两种策略\",\"OnDelete: 默认策略，更新模板后，只有手动删除了旧的Pod后才会创建新的Pod\",\"RollingUpdate: 更新DaemonSet模版后，自动删除旧的Pod并创建新的Pod\",\"Kubernetes中的负载均衡我们主要用到了以下两种机制：\",\"Service：使用Service提供集群内部的负载均衡，Kube-proxy负责将service请求负载均衡到后端的Pod中\",\"Ingress Controller：使用Ingress提供集群外部的负载均衡\",\"Service和Pod的IP仅可在集群内部访问。集群外部的请求需要通过负载均衡转发到service所在节点暴露的端口上，然后再由kube-proxy通过边缘路由器将其转发到相关的Pod，Ingress可以给service提供集群外部访问的URL、负载均衡、HTTP路由等，为了配置这些Ingress规则，集群管理员需要部署一个Ingress Controller，它监听Ingress和service的变化，并根据规则配置负载均衡并提供访问入口。\",\"常用的ingress controller：\",\"nginx\",\"traefik\",\"Kong\",\"Openresty\",\"Job负责批量处理短暂的一次性任务 (short lived>CronJob即定时任务，就类似于Linux系统的crontab，在指定的时间周期运行指定的任务。\",\"Horizontal od Autoscaling可以根据CPU、内存使用率或应用自定义metrics自动扩展Pod数量 (支持replication controller、deployment和replica set)。\",\"控制管理器默认每隔30s查询metrics的资源使用情况(可以通过 --horizontal-pod-autoscaler-sync-period 修改)\",\"支持三种metrics类型\",\"预定义metrics(比如Pod的CPU)以利用率的方式计算\",\"自定义的Pod metrics，以原始值(raw value)的方式计算\",\"自定义的object metrics\",\"支持两种metrics查询方式:Heapster和自定义的REST API\",\"支持多metrics\",\"可以通过如下命令创建HPA：kubectl autoscale deployment php-apache--cpu-percent=50--min=1--max=10\",\"Service account是为了方便Pod里面的进程调用Kubernetes API或其他外部服务而设计的\",\"授权\",\"Service Account为服务提供了一种方便的认证机制，但它不关心授权的问题。可以配合RBAC(Role Based Access Control)来为Service Account鉴权，通过定义Role、RoleBinding、ClusterRole、ClusterRoleBinding来对sa进行授权。\",\"Sercert-密钥解决了密码、token、密钥等敏感数据的配置问题，而不需要把这些敏感数据暴露到镜像或者Pod Spec中。Secret可以以Volume或者环境变量的方式使用。有如下三种类型：\",\"Service Account:用来访问Kubernetes API，由Kubernetes自动创建，并且会自动挂载到Pod的 /run/secrets/kubernetes.io/serviceaccount 目录中;\",\"Opaque:base64编码格式的Secret，用来存储密码、密钥等;\",\"kubernetes.io/dockerconfigjson: 用来存储私有docker registry的认证信息。\",\"ConfigMap用于保存配置数据的键值对，可以用来保存单个属性，也可以用来保存配置文件。ConfigMap跟secret很类似，但它可以更方便地处理不包含敏感信息的字符串。ConfigMap可以通过三种方式在Pod中使用，三种分别方式为:设置环境变量、设置容器命令行参数以及在Volume中直接挂载文件或目录。\",\"可以使用 kubectl create configmap从文件、目录或者key-value字符串创建等创建 ConfigMap。也可以通过 kubectl create-f value.yaml 创建。\",\"资源配额(Resource Quotas)是用来限制用户资源用量的一种机制。\",\"资源配额有如下类型：\",\"计算资源，包括cpu和memory\",\"cpu, limits.cpu, requests.cpu\",\"memory, limits.memory, requests.memory\",\"存储资源，包括存储资源的总量以及指定storage class的总量\",\"requests.storage:存储资源总量，如500Gi\",\"persistentvolumeclaims:pvc的个数\",\"storageclass.storage.k8s.io/requests.storage\",\"storageclass.storage.k8s.io/persistentvolumeclaims\",\"对象数，即可创建的对象的个数\",\"pods, replicationcontrollers, configmaps, secrets\",\"resourcequotas, persistentvolumeclaims\",\"services, services.loadbalancers, services.nodeports\",\"它的工作原理为:\",\"资源配额应用在Namespace上，并且每个Namespace最多只能有一个 ResourceQuota 对象\",\"开启计算资源配额后，创建容器时必须配置计算资源请求或限制(也可以 用LimitRange设置默认值)\",\"用户超额后禁止创建新的资源\"]},\"915\":{\"h\":\"网络通信原理\",\"t\":[\"文章来自：https://zhuanlan.zhihu.com/p/81667781\"]},\"916\":{\"h\":\"名词解释\",\"t\":[\"1、网络的命名空间：Linux 在网络栈中引入网络命名空间，将独立的网络协议栈隔离到不同的命名空间中，彼此间无法通信；Docker 利用这一特性，实现不容器间的网络隔离。\",\"2、Veth 设备对：也叫虚拟网络接口对。Veth设备对的引入是为了实现在不同网络命名空间的通信。\",\"3、Iptables/Netfilter：Netfilter 负责在内核中执行各种挂接的规则（过滤、修改、丢弃等），运行在内核 模式中；Iptables模式是在用户模式下运行的进程，负责协助维护内核中 Netfilter 的各种规则表；通过二者的配合来实现整个 Linux 网络协议栈中灵活的数据包处理机制。\",\"4、网桥：网桥是一个二层网络设备,通过网桥可以将 linux 支持的不同的端口连接起来,并实现类似交换机那样的多对多的通信。\",\"5、路由：Linux 系统包含一个完整的路由功能，当IP层在处理数据发送或转发的时候，会使用路由表来决定发往哪里。\"]},\"917\":{\"h\":\"令人头大的网络模型\",\"t\":[\"Kubernetes对集群内部的网络进行了重新抽象，以实现整个集群网络扁平化。我们可以理解网络模型时，可以完全抽离物理节点去理解，我们用图说话，先有基本印象。\",\"图片\",\"其中，重点讲解以下几个关键抽象概念。\"]},\"918\":{\"h\":\"一个 Service\",\"t\":[\"Service 是 Kubernetes 为屏蔽这些后端实例（Pod）的动态变化和对多实例的负载均衡而引入的资源对象。Service 通常与 deployment 绑定，定义了服务的访问入口地址，应用（Pod）可以通过这个入口地址访问其背后的一组由 Pod 副本组成的集群实例。Service 与其后端 Pod 副本集群之间则是通过 Label Selector 来实现映射。\",\"Service的类型（Type）决定了 Service 如何对外提供服务，根据类型不同，服务可以只在Kubernetes cluster中可见，也可以暴露到集群外部。Service有三种类型，ClusterIP，NodePort 和 LoadBalancer。具体的使用场景会在下文中进行阐述。\",\"在测试环境查看：\",\"$ kubectl get svc --selector app=nginx NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE nginx ClusterIP 172.19.0.166 <none> 80/TCP 1m $ kubectl describe svc nginx Name: nginx Namespace: default Labels: app=nginx Annotations: <none> Selector: app=nginx Type: ClusterIP IP: 172.19.0.166 Port: <unset> 80/TCP TargetPort: 80/TCP Endpoints: 172.16.2.125:80,172.16.2.229:80 Session Affinity: None Events: <none> \",\"上述信息中该 svc 后端代理了2个Pod实例：172.16.2.125:80，172.16.2.229:80\"]},\"919\":{\"h\":\"二个 IP\",\"t\":[\"Kubernetes 为描述其网络模型的 IP 对象，抽象出 Cluster IP和Pod IP的概念。\",\"Pod IP 是 Kubernetes 集群中每个 Pod 的 IP 地址。它是 Docker Engine 根据 docker0网桥的IP地址段进行分配的，是一个虚拟的二层网络。Kubernetes 中 Pod 间能够彼此直接通讯，Pod 里的容器访问另外一个Pod里的容器，是通过Pod IP所在进行通信。\",\"Cluster IP仅作用于 Service，其没有实体对象所对应，因此 Cluster IP 无法被ping通。它的作用是为 Service 后端的实例提供统一的访问入口。当访问 Cluster IP 时，请求将被转发到后端的实例上，默认是轮询方式。Cluster IP 和 Service一样由 kube-proxy 组件维护，其实现方式主要有两种，iptables 和 IPVS。在 1.8 版本后 kubeproxy 开始支持IPVS 方式。在上例中，SVC的信息中包含了Cluster IP。\",\"这里未列出 node ip 概念，由于其本身是物理机的网卡IP。因此可理解为nodeip就是物理机IP。\"]},\"920\":{\"h\":\"三个 Port\",\"t\":[\"在 Kubernetes 中，涉及容器，Pod，Service，集群各等多个层级的对象间的通信，为在网络模型中区分各层级的通信端口，这里对Port进行了抽象。\"]},\"921\":{\"h\":\"Port\",\"t\":[\"该Port非一般意义上的TCP/IP中的Port概念，它是特指Kubernetes中Service的port，是Service间的访问端口，例如Mysql的Service默认3306端口。它仅对进群内容器提供访问权限，而无法从集群外部通过该端口访问服务。\"]},\"922\":{\"h\":\"nodePort\",\"t\":[\"nodePort为外部机器提供了访问集群内服务的方式。比如一个Web应用需要被其他用户访问，那么需要配置type=NodePort，而且配置nodePort=30001，那么其他机器就可以通过浏览器访问scheme://node:30001访问到该服务，例如http://node:30001。\"]},\"923\":{\"h\":\"targetPort\",\"t\":[\"targetPort是容器的端口（最根本的端口入口），与制作容器时暴露的端口一致（DockerFile中EXPOSE），例如 http://docker.io 官方的 nginx 暴露的是80端口。\",\"举一个例子来看如何配置 Service 的 port：\",\"kind: Service apiVersion: v1 metadata: name: mallh5-service namespace: abcdocker spec: selector: app: mallh5web type: NodePort ports: - protocol: TCP port: 3017 targetPort: 5003 nodePort: 31122 \",\"这里举出了一个service的yaml，其部署在abcdocker的namespace中。这里配置了nodePort，因此其类型Type就是NodePort，注意大小写。若没有配置nodePort，那这里需要填写ClusterIP，即表示只支持集群内部服务访问。\"]},\"924\":{\"h\":\"集群内部通信\"},\"925\":{\"h\":\"单节点通信\",\"t\":[\"集群单节点内的通信，主要包括两种情况，同一个 pod 内的多容器间通信以及同一节点不同 pod 间的通信。由于不涉及跨节点访问，因此流量不会经过物理网卡进行转发。\",\"通过查看路由表，也能窥见一二：\",\"root@node-1:/opt/bin# route -n Kernel IP routing table Destination Gateway Genmask Flags Metric Ref Use Iface 0.0.0.0 172.23.100.1 0.0.0.0 UG 0 0 0 eth0 10.1.0.0 0.0.0.0 255.255.0.0 U 0 0 0 flannel.1 #flannel 网络内跨节点的通信会交给 flannel.1 处理 10.1.1.0 0.0.0.0 255.255.255.0 U 0 0 0 docker0 #flannel 网络内节点内的通信会走 docker0 \"]},\"926\":{\"h\":\"Pod 内通信\",\"t\":[\"如下图所示：\",\"图片\",\"这种情况下，同一个pod内共享网络命名空间，容器之间通过访问 127.0.0.1:（端口）即可。图中的 veth* 即指veth对的一端（另一端未标注，但实际上是成对出现），该veth对是由 Docker Daemon 挂载在 docker0 网桥上，另一端添加到容器所属的网络命名空间，图上显示是容器中的eth0。\",\"图中演示了 bridge 模式下的容器间通信。docker1 向 docker2 发送请求，docker1，docker2 均与 docker0 建立了 veth 对进行通讯。\",\"当请求经过 docker0 时，由于容器和 docker0 同属于一个子网，因此请求经过 docker2与docker0的veth*对，转发到docker2，该过程并未跨节点，因此不经过eth0。\"]},\"927\":{\"h\":\"Pod 间通信\",\"t\":[\"同节点 pod 间通信\",\"由于 Pod 内共享网络命名空间（由 pause 容器创建），所以本质上也是同节点容器间的通信。同时，同一 Node 中 Pod 的默认路由都是 docker0 的地址，由于它们关联在同一个 docker0 网桥上，地址网段相同，所有它们之间应当是能直接通信的。来看看实际上这一过程如何实现。如上图，Pod1 中容器 1和容器 2 共享网络命名空间，因此对pod 外的请求通过 pod1 和 Docker0 网桥的 veth对（图中挂在eth0和ethx上）实现。\",\"图片\",\"访问另一个pod内的容器，其请求的地址是PodIP而非容器的ip，实际上也是同一个子网间通信，直接经过veth对转发即可。\"]},\"928\":{\"h\":\"跨节点通信\",\"t\":[\"CNI：容器网络接口\",\"CNI 是一种标准，它旨在为容器平台提供网络的标准化。不同的容器平台（比如目前的 kubernetes、mesos 和 rkt）能够通过相同的接口调用不同的网络组件。\",\"目前kubernetes支持的CNI组件种类很多，例如：bridge calico calico-ipam dhcp flannel host-local ipvlan loopback macvlan portmap ptp sample tuning vlan。在docker中，主流的跨主机通信方案主要有一下几种：\",\"1）基于隧道的overlay网络：按隧道类型来说，不同的公司或者组织有不同的实现方案。docker原生的overlay网络就是基于vxlan隧道实现的。ovn则需要通过geneve或者stt隧道来实现的。flannel最新版本也开始默认基于vxlan实现overlay网络。\",\"2）基于包封装的overlay网络：基于UDP封装等数据包包装方式，在docker集群上实现跨主机网络。典型实现方案有weave、flannel的早期版本。\",\"3）基于三层实现SDN网络：基于三层协议和路由，直接在三层上实现跨主机网络，并且通过iptables实现网络的安全隔离。典型的方案为Project Calico。同时对不支持三层路由的环境，Project Calico还提供了基于IPIP封装的跨主机网络实现\",\"通信方式\",\"图片\",\"集群内跨节点通信涉及到不同的子网间通信，仅靠docker0无法实现，这里需要借助CNI网络插件来实现。图中展示了使用flannel实现跨节点通信的方式。\",\"简单说来，flannel的用户态进程flanneld会为每个node节点创建一个flannel.1的网桥，根据etcd或apiserver的全局统一的集群信息为每个node分配全局唯一的网段，避免地址冲突。同时会为docker0和flannel.1创建veth对，docker0将报文丢给flannel.1,。\",\"Flanneld维护了一份全局node的网络表，通过flannel.1接收到请求后，根据node表，将请求二次封装为UDP包，扔给eth0，由eth0出口进入物理网路发送给目的node。\",\"在另一端以相反的流程。Flanneld解包并发往docker0，进而发往目的Pod中的容器。\"]},\"929\":{\"h\":\"外部访问集群\",\"t\":[\"从集群外访问集群有多种方式，比如loadbalancer，Ingress，nodeport，nodeport和loadbalancer是service的两个基本类型，是将service直接对外暴露的方式，ingress则是提供了七层负载均衡，其基本原理将外部流量转发到内部的service，再转发到后端endpoints，在平时的使用中，我们可以依据具体的业务需求选用不同的方式。这里主要介绍nodeport和ingress方式。\"]},\"930\":{\"h\":\"Nodeport\",\"t\":[\"通过将 Service 的类型设置为 NodePort，就可以在 Cluster 中的主机上通过一个指定端口暴露服务。注意通过 Cluster 中每台主机上的该指定端口都可以访问到该服务，发送到该主机端口的请求会被 Kubernetes 路由到提供服务的 Pod 上。采用这种服务类型，可以在 Kubernetes cluster 网络外通过主机 IP：端口的方式访问到服务。\",\"图片\",\"这里给出一个 influxdb 的例子，我们也可以针对这个模板去修改成其他的类型：\",\"kind: Service apiVersion: v1 metadata: name: influxdb spec: type: NodePort ports: - port: 8086 nodePort: 31112 selector: name: influxdb \"]},\"931\":{\"h\":\"Ingress\",\"t\":[\"图片\",\"Ingress 是推荐在生产环境使用的方式，它起到了七层负载均衡器和 Http 方向代理的作用，可以根据不同的 url 把入口流量分发到不同的后端Service。外部客户端只看到 http://foo.bar.com 这个服务器，屏蔽了内部多个 Service 的实现方式。采用这种方式，简化了客户端的访问，并增加了后端实现和部署的灵活性，可以在不影响客户端的情况下对后端的服务部署进行调整。\",\"其部署的 yaml 可以参考如下模板：\",\"apiVersion: extensions/v1beta1 kind: Ingress metadata: name: test annotations: ingress.kubernetes.io/rewrite-target: / spec: rules: - host: test.name.com http: paths: - path: /test backend: serviceName: service-1 servicePort: 8118 - path: /name backend: serviceName: service-2 servicePort: 8228 \",\"这里我们定义了一个ingress模板，定义通过 http://test.name.com 来访问服务，在虚拟主机http://test.name.com下面定义了两个Path，其中/test被分发到后端服务s1，/name被分发到后端服务s2。\",\"集群中可以定义多个ingress，来完成不同服务的转发，这里需要一个ingress controller来管理集群中的Ingress规则。Ingress Contronler 通过与 Kubernetes API 交互，动态的去感知集群中 Ingress 规则变化，然后读取它，按照自定义的规则，规则就是写明了哪个域名对应哪个service，生成一段 Nginx 配置，再写到 Nginx-ingress-control的 Pod 里，这个 Ingress Contronler 的 pod 里面运行着一个nginx服务，控制器会把生成的nginx配置写入 /etc/nginx.conf 文件中，然后 reload使用配置生效。\",\"Kubernetes 提供的 Ingress Controller 模板如下：\",\"apiVersion: extensions/v1beta1 kind: Ingress metadata: name: test annotations: ingress.kubernetes.io/rewrite-target: / spec: rules: - host: foo.bar.com http: paths: - path: /foo backend: serviceName: s1 servicePort: 80 - path: /bar backend: serviceName: s2 servicePort: 80 \"]},\"932\":{\"h\":\"总结及展望\",\"t\":[\"本文针对 Kubernetes 的网络模型，从一个 service，二个IP，三个 port 出发进行图解。详解 Kubernetes 集群内及集群外部访问方式。\"]},\"933\":{\"h\":\"服务发现\",\"t\":[\"文章来自微信公众号【杰哥的IT之旅】\"]},\"934\":{\"h\":\"K8S 服务发现之旅\",\"t\":[\"Kubernetes 服务发现是一个经常让我产生困惑的主题之一。本文分为两个部分：\",\"网络方面的背景知识\",\"深入了解 Kubernetes 服务发现\",\"要了解服务发现，首先要了解背后的网络知识。这部分内容相对浅显，如果读者熟知这一部分，完全可以跳过，直接阅读服务发现部分。\",\"开始之前还有一个需要提醒的事情就是，为了详细描述这一过程，本文略长。\"]},\"935\":{\"h\":\"K8S 网络基础\",\"t\":[\"要开始服务发现的探索之前，需要理解以下内容：\",\"Kubernetes 应用运行在容器之中，容器处于 Pod 之内。\",\"每个 Pod 都会附着在同一个大的扁平的 IP 网络之中，被称为 Pod 网络（通常是 VXLAN 叠加网络）。\",\"每个 Pod 都有自己的唯一的 IP 地址，这个 IP 地址在 Pod 网络中是可路由的。\",\"图片\",\"上述三个因素结合起来，让每个应用（应用的组件和服务）无需通过 NAT 之类的网络过程，就能够直接通信。\"]},\"936\":{\"h\":\"动态网络\",\"t\":[\"在对应用进行横向扩容时，会在 Pod 网络中加入新的 Pod，新 Pod 自然也伴随着新的 IP 地址；如果对应用进行缩容，旧的 Pod 及其 IP 会被删除。这个过程看起来很是混乱。\",\"应用的滚动更新和撤回也存在同样的情形——加入新版本的新 Pod，或者移除旧版本的旧 Pod。新 Pod 会加入新 IP 到 Pod 网络中，被终结的旧 Pod 会删除其现存 IP。\",\"如果没有其它因素，每个应用服务都需要对网络进行监控，并管理一个健康 Pod 的列表。这个过程会非常痛苦，另外在每个应用中编写这个逻辑也是很低效的。幸运的是，Kubernetes 用一个对象完成了这个过程——Service。\",\"把这个对象叫做 Service 是个坏主意，我们已经用这个单词来形容应用的进程或组件了。\",\"还有一个值得注意的事情：Kubernetes 执行 IP 地址管理（IPAM）职责，对 Pod 网络上已使用和可用的 IP 地址进行跟踪。\"]},\"937\":{\"h\":\"Service 带来稳定性\",\"t\":[\"Kubernetes Service 对象在一组提供服务的 Pod 之前创建一个稳定的网络端点，并为这些 Pod 进行负载分配。\",\"一般会在一组完成同样工作的 Pod 之前放置一个 Service 对象。例如可以在你的 Web 前端 Pod 前方提供一个 Service，在认证服务 Pod 之前提供另一个。行使不同职责的 Pod 之前就不应该用单一的 Service 了。\",\"客户端和 Service 通信，Service 负责把流量负载均衡给 Pod。\",\"图片\",\"在上图中，底部的 Pod 会因为伸缩、更新、故障等情况发生变化，而 Service 会对这些变化进行跟踪。同时 Service 的名字、IP 和端口都不会发生变化。\"]},\"938\":{\"h\":\"K8S Service 解析\",\"t\":[\"可以把 Kubernetes Service 理解为前端和后端两部分：\",\"前端：名称、IP 和端口等不变的部分。\",\"后端：符合特定标签选择条件的 Pod 集合。\",\"前端是稳定可靠的，它的名称、IP 和端口在 Service 的整个生命周期中都不会改变。前端的稳定性意味着无需担心客户端 DNS 缓存超时等问题。\",\"后端是高度动态的，其中包括一组符合标签选择条件的 Pod，会通过负载均衡的方式进行访问。\",\"图片\",\"这里的负载均衡是一个简单的 4 层轮询。它工作在连接层面，所以同一个连接里发起的所有请求都会进入同一个 Pod。因为在 4 层工作，所以对于 7 层的 HTTP 头或者 Cookie 之类的东西是无法感知的。\"]},\"939\":{\"h\":\"小结\",\"t\":[\"应用在容器中运行，在 Kubernetes 中体现为 Pod 的形式。Kubernetes 集群中的所有 Pod 都处于同一个平面的 Pod 网络，有自己的 IP 地址。这意味着所有的 Pod 之间都能直接连接。然而 Pod 是不稳定的，可能因为各种因素创建和销毁。\",\"Kubernetes 提供了稳定的网络端点，称为 Service，这个对象处于一组相似的 Pod 前方，提供了稳定的名称、IP 和端口。客户端连接到 Service，Service 把流量负载均衡给 Pod。\",\"接下来聊聊服务发现。\"]},\"940\":{\"h\":\"深入 K8S 服务发现\",\"t\":[\"深入了解 Kubernetes 服务发现\",\"服务发现实际上包含两个功能点：\",\"服务注册\",\"服务发现\"]},\"941\":{\"h\":\"服务注册\",\"t\":[\"服务注册过程指的是在服务注册表中登记一个服务，以便让其它服务发现。\",\"图片\",\"Kubernetes 使用 DNS 作为服务注册表。\",\"为了满足这一需要，每个 Kubernetes 集群都会在 kube-system 命名空间中用 Pod 的形式运行一个 DNS 服务，通常称之为集群 DNS。\",\"每个 Kubernetes 服务都会自动注册到集群 DNS 之中。\",\"注册过程大致如下：\",\"向 API Server 用 POST 方式提交一个新的 Service 定义；\",\"这个请求需要经过认证、鉴权以及其它的准入策略检查过程之后才会放行；\",\"Service 得到一个 ClusterIP（虚拟 IP 地址），并保存到集群数据仓库；\",\"在集群范围内传播 Service 配置；\",\"集群 DNS 服务得知该 Service 的创建，据此创建必要的 DNS A 记录。\",\"上面过程中，第 5 个步骤是关键环节。集群 DNS 使用的是 CoreDNS，以 Kubernetes 原生应用的形式运行。\",\"CoreDNS 实现了一个控制器，会对 API Server 进行监听，一旦发现有新建的 Service 对象，就创建一个从 Service 名称映射到 ClusterIP 的域名记录。这样 Service 就不必自行向 DNS 进行注册，CoreDNS 控制器会关注新创建的 Service 对象，并实现后续的 DNS 过程。\",\"DNS 中注册的名称就是 metadata.name，而 ClusterIP 则由 Kubernetes 自行分配。\",\"图片\",\"Service 对象注册到集群 DNS 之中后，就能够被运行在集群中的其它 Pod 发现了。\"]},\"942\":{\"h\":\"Endpoint 对象\",\"t\":[\"Service 的前端创建成功并注册到服务注册表（DNS）之后，剩下的就是后端的工作了。后端包含一个 Pod 列表，Service 对象会把流量分发给这些 Pod。\",\"毫无疑问，这个 Pod 列表需要是最新的。\",\"Service 对象有一个 Label Selector 字段，这个字段是一个标签列表，符合列表条件的 Pod 就会被服务纳入到服务的负载均衡范围之中。参见下图：\",\"图片\",\"Kubernetes 自动为每个 Service 创建 Endpoints 对象。Endpoints 对象的职责就是保存一个符合 Service 标签选择器标准的 Pod 列表，这些 Pod 将接收来自 Service 的流量。\",\"下面的图中，Service 会选择两个 Pod，并且还展示了 Service 的 Endpoints 对象，这个对象里包含了两个符合 Service 选择标准的 Pod 的 IP。\",\"在后面我们将解释网络如何把 ClusterIP 流量转发给 Pod IP 的过程，还会引用到 Endpoints 对象。\"]},\"943\":{\"h\":\"服务发现\",\"t\":[\"假设我们在一个 Kubernetes 集群中有两个应用，my-app 和 your-app，my-app 的 Pod 的前端是一个 名为 my-app-svc 的 Service 对象；your-app Pod 之前的 Service 就是 your-app-svc。\",\"这两个 Service 对象对应的 DNS 记录是：\",\"my-app-svc：10.0.0.10\",\"your-app-svc：10.0.0.20\",\"图片\",\"要使用服务发现功能，每个 Pod 都需要知道集群 DNS 的位置才能使用它。因此每个 Pod 中的每个容器的 /etc/resolv.conf 文件都被配置为使用集群 DNS 进行解析。\",\"如果 my-app 中的 Pod 想要连接到 your-app 中的 Pod，就得向 DNS 服务器发起对域名 your-app-svc 的查询。假设它们本地的 DNS 解析缓存中没有这个记录，则需要把查询提交到集群 DNS 服务器。会得到 you-app-svc 的 ClusterIP（VIP）。\",\"这里有个前提就是 my-app 需要知道目标服务的名称。\",\"至此，my-app 中的 Pod 得到了一个目标 IP 地址，然而这只是个虚拟 IP，在转入目标 Pod 之前，还有些网络工作要做。\"]},\"944\":{\"h\":\"网络\",\"t\":[\"一个 Pod 得到了 Service 的 ClusterIP 之后，就尝试向这个 IP 发送流量。然而 ClusterIP 所在的网络被称为 Service Network，这个网络有点特别——没有路由指向它。\",\"因为没有路由，所有容器把发现这种地址的流量都发送到了缺省网关（名为 CBR0 的网桥）。这些流量会被转发给 Pod 所在节点的网卡上。节点的网络栈也同样没有路由能到达 Service Network，所以只能发送到自己的缺省网关。路由到节点缺省网关的数据包会通过 Node 内核——这里有了变化。\",\"回顾一下前面的内容。首先 Service 对象的配置是全集群范围有效的，另外还会再次说到 Endpoints 对象。我们要在回顾中发现他们各自在这一过程中的职责。\",\"每个 Kubernetes 节点上都会运行一个叫做 kube-proxy 的系统服务。这是一个基于 Pod 运行的 Kubernetes 原生应用，它所实现的控制器会监控 API Server 上 Service 的变化，并据此创建 iptables 或者 IPVS 规则，这些规则告知节点，捕获目标为 Service 网络的报文，并转发给 Pod IP。\",\"有趣的是，kube-proxy 并不是一个普遍意义上的代理。它的工作不过是创建和管理 iptables/IPVS 规则。这个命名的原因是它过去使用 unserspace 模式的代理。\",\"每个新 Service 对象的配置，其中包含它的 ClusterIP 以及 Endpoints 对象（其中包含健康 Pod 的列表），都会被发送给 每个节点上的 kube-proxy 进程。\",\"kube-proxy 会创建 iptables 或者 IPVS 规则，告知节点捕获目标为 Service ClusterIP 的流量，并根据 Endpoints 对象的内容转发给对应的 Pod。\",\"也就是说每次节点内核处理到目标为 Service 网络的数据包时，都会对数据包的 Header 进行改写，把目标 IP 改为 Service Endpoints 对象中的健康 Pod 的 IP。\",\"原本使用的 iptables 正在被 IPVS 取代（Kubernetes 1.11 进入稳定期）。长话短说，iptables 是一个包过滤器，并非为负载均衡设计的。IPVS 是一个 4 层的负载均衡器，其性能和实现方式都比 iptables 更适合这种使用场景。\"]},\"945\":{\"h\":\"总结\",\"t\":[\"需要消化的内容很多，简单回顾一下。\",\"创建新的 Service 对象时，会得到一个虚拟 IP，被称为 ClusterIP。服务名及其 ClusterIP 被自动注册到集群 DNS 中，并且会创建相关的 Endpoints 对象用于保存符合标签条件的健康 Pod 的列表，Service 对象会向列表中的 Pod 转发流量。\",\"与此同时集群中所有节点都会配置相应的 iptables/IPVS 规则，监听目标为 ClusterIP 的流量并转发给真实的 Pod IP。这个过程如下图所示：\",\"图片\",\"一个 Pod 需要用 Service 连接其它 Pod。首先向集群 DNS 发出查询，把 Service 名称解析为 ClusterIP，然后把流量发送给位于 Service 网络的 ClusterIP 上。\",\"然而没有到 Service 网络的路由，所以 Pod 把流量发送给它的缺省网关。这一行为导致流量被转发给 Pod 所在节点的网卡，然后是节点的缺省网关。这个操作中，节点的内核修改了数据包 Header 中的目标 IP，使其转向健康的 Pod。\",\"图片\",\"译者：伪架构师\\n来源：https://nigelpoulton.com/blog/f/demystifying-kubernetes-service-discovery\"]},\"946\":{\"h\":\"概述\",\"t\":[\"鸟哥的linux私房菜：https://linux.vbird.org/linux_basic/centos7/\",\"中文文档：https://www.kancloud.cn/thinkphp/linux-command-line/39431\",\"英文文档：http://linuxcommand.org/tlcl.php\",\"linux就该这么学：[https://www.linuxprobe.com/basic-learning-00.html\",\"](https://www.linuxprobe.com/basic-learning-00.html)\",\"然后升级所有包的同时也升级软件和系统内核\",\"命令：yum update\",\"或者命令：yum upgrade\"]},\"947\":{\"h\":\"SSLinux\",\"t\":[\"SELinux一共有三种状态。\",\"Enforcing：默认状态，强制启用，状态值是1\",\"Permissive：宽容，大部分规则都放行，状态值是0\",\"Disabled：禁用，不设置任何规则\"]},\"948\":{\"h\":\"关闭\",\"t\":[\"先查询当前的状态\",\"getenforce \",\"编辑配置文件/etc/selinux/config\",\"vim /etc/selinux/config \",\"修改selinux的值为disabled\",\"img\",\"重启服务器\",\"reboot \"]},\"949\":{\"h\":\"添加配置\",\"t\":[\"演示将 Nginx 添加至 SELinux 的白名单，执行命令\",\"yum install policycoreutils-python sudo cat /var/log/audit/audit.log | grep nginx | grep denied | audit2allow -M mynginx sudo semodule -i mynginx.pp \",\"这里安装可能会报错Exiting on user cancel\",\"这是yum的一个bug导致的问题。修改/usr/lib/python2.7/site-packages/urlgrabber/grabber.py.\",\"vi /usr/lib/python2.7/site-packages/urlgrabber/grabber.py \",\"img\",\"修改后\",\"#elif errcode == 42: # this is probably wrong but ultimately this is what happens # we have a legit http code and a pycurl 'writer failed' code # which almost always means something aborted it from outside # since we cannot know what it is -I'm banking on it being # a ctrl-c. XXXX - if there's a way of going back two raises to # figure out what aborted the pycurl process FIXME # raise KeyboardInterrupt \",\"然后以root用户运行如下命令升级：\",\"yum clean metadata yum clean all yum upgrade \",\"升级完成即可。\",\"添加SeLinux配置：https://www.cnblogs.com/liuxiaoji/p/9907984.html\"]},\"950\":{\"h\":\"虚拟机\",\"t\":[\"网络使用桥接模式（以太网）\",\"img\",\"img\"]},\"951\":{\"h\":\"PicGo图床\",\"t\":[\"图床工具，就是自动把本地图片转成连接的一款工具，网络上有很多图床工具，PicGo就是一款比较优秀的图床工具，可以支持微博，七牛云，腾讯云COS，又拍云，GitHub，阿里云OSS，SM.MS，imgur 等8种常用图床\",\"GitHub：https://github.com/PicGo/\",\"需要先安装nodejs\",\"img\",\"官网：https://nodejs.org/en/\",\"从Github上下载PicGo工具，地址：https://github.com/Molunerfinn/PicGo/releases\",\"下载合适系统的版本，下载安装\"]},\"952\":{\"h\":\"Gitee图床\",\"t\":[\"国内平台，访问速度快\",\"登录gitee进入(没有账号的需要创建账号)\",\"img\",\"创建一个公开的仓库用户存储图片\",\"img\",\"进入个人设置配置私人令牌\",\"img\",\"配置好的令牌密钥需要保存好\",\"打开PicGo搜索插件Gitee进行安装\",\"img\",\"然后我们可以再图床设置找到\",\"img\",\"配置参数\",\"img\",\"名称\",\"作用\",\"URL\",\"填写gitee的官网网址\",\"owner\",\"注册gitee时留的名字\",\"repo\",\"仓库名\",\"path\",\"存储的位置（不要是中文）\",\"token\",\"刚才保存的私人令牌\",\"message\",\"表述型文字（可以不填）\",\"然后我们就可以上传一个测试下是否可以使用\",\"上传后的图片显示在相册\",\"img\"]},\"953\":{\"h\":\"Github图床\",\"t\":[\"设置方案可以参考文档：https://blog.csdn.net/weixin_46522803/article/details/126052265\",\"关键点就是选择了快速免费公有的CDN-jsdelivr，只需要只在我们 PicGo 图床配置中添加如下自定义域名即可\",\"https://cdn.jsdelivr.net/gh/用户名/仓库名 \"]},\"954\":{\"h\":\"阿里云OSS\",\"t\":[\"阿里云配置内容来自博客：https://www.cnblogs.com/qiulin2018/p/14802594.html\",\"阿里云的OSS，一年9块钱40G\",\"创建一个Bucket用于存储图片\",\"登录阿里云oss控制台-->Bucket列表-->创建Bucket\",\"img\",\"创建的一个Bucket有点类似于我们的一块磁盘，我们可以在上面创建文件夹，上传文件。\",\"我在新创建的Bucket上创建了markdown/images文件夹来用于做为我文章的配图的图床\",\"img\",\"对此文件设置匿名可以访问的权限，方便图片在任何地方无需认证只需要url就可以访问到\",\"img\",\"新增授权\",\"img\",\"获取上传到OSS的keyId和keySecret\",\"img\",\"创建访问OSS用户\",\"img\",\"新增oss用户\",\"img\",\"保存用户获取到 AccessKey ID和 AccessKey Secret 可以先保存下来用于之后PicGo配置\",\"img\",\"配置PicGo的阿里云OSS的KeyId和keySecret，将如上获取到的 AccessKey ID和 AccessKey Secret分别填入此处。存储路径一定要写刚刚我们设置可匿名访问的路径\",\"img\",\"确定存储区域这里需要填写我们oss的存储区域ID，在创建Bucket的时候选区域是有显示的，忘了也不要紧。在如下位置也可以获取到这个id\",\"img\",\"给我们新创建的用户添加访问OSS的权限\",\"img\",\"添加OSS所有权限\",\"img\",\"自此我们在PicGo配置OSS的全部步骤就已经全部完成\",\"可以在PicGo上传图片试试\",\"img\",\"在OSS的控制台上也可以看到我们图片的具体信息\",\"img\",\"复制文件URL在浏览器打开可以直接访问到我们刚上传的图片，无需认证。如果此处出现访问失败，403等错误，请检查是否按上面的配置匿名访问配置了文件夹的匿名访问权限\",\"img\",\"进入文件=>偏好设置=>图像\",\"img\",\"配置好后可以在文档中直接右键上传图片使用\"]},\"955\":{\"h\":\"EditorConfig\",\"t\":[\"EditorConfig 是帮助跨多个编辑器和 IDE 的从事同一项目的多个开发人员保持一致性编码风格的一个文本文件。EditorConfig 文件可以设置诸如缩进样式、选项卡宽度、行尾字符以及编码等，而无需考虑使用的编辑器或 IDE。向项目添加 EditorConfig 文件，可以强制对使用该项目的所有人员实施一致的编码风格。EditorConfig 设置优先于全局 Visual Studio 文本编辑器设置。由于这些设置包含在基本代码的文件中，因此能与基本代码一起移动。只要在 EditorConfig 兼容的编辑器中打开代码文件，就能实现文本编辑器设置。有关 EditorConfig 文件的详细信息，请参阅 EditorConfig.org(https://editorconfig.org/) 网站。\",\"常见的IDE支持：vs、rider、vscode等\"]},\"956\":{\"h\":\"添加\",\"t\":[\"如果是VS2019，那么需要在 Visual Studio 中打开项目或解决方案，点击“帮助” > “关于”，查看您的IDE版本是否是 16.7.1 或更高版本，如果不是请先升级。\",\"向项目或解决方案添加 EditorConfig。 根据要应用 .editorconfig 设置的对象（是解决方案中的所有项目还是其中一个项目），选择项目或解决方案节点。还可在项目或解决方案中选择一个文件夹，向其添加 .editorconfig 文件。 从菜单栏中，选择“项目” > “添加新项”，或按 Ctrl+Shift+A ：\",\"或者在“解决方案资源管理器”中右键单击项目、解决方案或文件夹，选择“添加” > “新建 EditorConfig”：\",\"添加完成后在 .editorconfig 文件中添加 file_header_template 项\",\"img\",\"file_header_template = 添加文件头（add fileheader）示例程序\\\\n Copyright (c) https://ittranslator.cn/ .editorconfig 中换行需要使用 Unix 换行符(\\\\n)来插入新行。\",\"将光标置于任意 C# 或 Visual Basic 文件的第一行， 触发“快速操作和重构”菜单，选择“添加文件头”，如图：\",\"img\",\"在“修复以下对象中的所有实例:”处可以选择 “文档”、“项目”或“解决方案”\",\"官网资料：https://docs.microsoft.com/zh-cn/dotnet/fundamentals/code-analysis/style-rules/\"]},\"957\":{\"h\":\"安装VS2019\",\"t\":[\"Visual Studio是最流行的windows平台应用程序集成开发环境，本文示例的版本为VS2019版本，后续的版本多少会有一些差异。\",\"官网地址：https://visualstudio.microsoft.com/zh-hans/vs/\",\"分为：社区版、专业版、旗舰版。\",\"从官网下载VS2019安装包，双击打开安装包，要求同意许可条款和隐私条款，选择继续\",\"img\"]},\"958\":{\"h\":\"工作负载\",\"t\":[\"选择工作负载，选择我们需要使用的东西进行安装，比如我们进行.net开发，那么选择下面几种即可\",\"img\",\"img\"]},\"959\":{\"h\":\"单个组件\",\"t\":[\"查看单个组件，一般这里我们是不需要再做修改的，不过特殊的需求也可以通过这里安装，比如我想安装.Net Core 2.2运行时，那么就需要在这边进行勾兑\",\"img\"]},\"960\":{\"h\":\"语言包\",\"t\":[\"选择我们需要使用的语言，如果英文不错的可以考虑使用英语操作\",\"img\"]},\"961\":{\"h\":\"安装位置\",\"t\":[\"官方推荐是安装在C盘，这个可以参考自己电脑的空间进行配置，如果安装在固态盘上运行会更流畅。\",\"img\",\"然后点击安装进行，等待下载安装\",\"安装完成后，选择启动按钮，开始使用Visual Studio进行开发。\"]},\"962\":{\"h\":\"离线安装\",\"t\":[\"下载所需 Visual Studio 版本的引导程序，并将其复制到要用作本地布局源位置的目录中。 创建布局后，可以使用它安装 Visual Studio。 引导程序是用于创建、更新和执行其他 Visual Stusio 安装操作的可执行文件。 必须建立 Internet 连接才能完成此操作。\"]},\"963\":{\"h\":\"下载引导程序\",\"t\":[\"版本\",\"引导程序\",\"Visual Studio 2022 Community\",\"vs_community.exe\",\"Visual Studio 2022 Professional\",\"vs_professional.exe\",\"Visual Studio 2022 Enterprise\",\"vs_enterprise.exe\",\"Visual Studio 2022 生成工具\",\"vs_buildtools.exe\"]},\"964\":{\"h\":\"创建本地布局\",\"t\":[\"使用管理员权限打开命令提示符，导航到下载引导程序到的目录，并使用 “使用命令行参数” 中定义的引导程序参数来安装 Visual Studio 页面以创建本地布局。\",\"对于.Net Web和.Net桌面开发，运行\",\"vs_enterprise.exe --layout D:\\\\Download\\\\vs2022\\\\localVSlayout --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.NetWeb --includeOptional --lang zh-CN \",\"要创建完整的本地布局，需要使用（仅限英语，所有功能）\",\"vs_enterprise.exe --layout D:\\\\Download\\\\vs2022\\\\localVSlayoutt --lang en-US \",\"Visual Studio 的完整本地布局至少需要 45 GB 的磁盘空间\",\"从本地布局安装 Visual Studio 时，Visual Studio 安装程序使用文件的本地版本。 但是，如果在安装期间选择不在布局中的组件，Visual Studio 安装程序将尝试从 Internet 下载它们，安装命令\",\"D:\\\\Download\\\\vs2022\\\\localVSlayoutt\\\\vs_enterprise.exe --noweb --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.NetWeb --includeOptional .\\\\vs_enterprise.exe --noweb --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.NetWeb --includeOptional \",\"注意：\",\"如果使用的是 Visual Studio Community，则必须在安装后的 30 天内登录产品以激活它。 激活需要 Internet 连接。\",\"如果你遇到签名无效的错误，则必须安装更新的证书。 在本地布局中打开“证书”文件夹。 双击每个证书文件，然后单击完成证书管理器向导。 如果要求输入密码，请将密码留空。\",\"官方文档：https://docs.microsoft.com/zh-cn/visualstudio/install/create-an-offline-installation-of-visual-studio?view=vs-2022\"]},\"965\":{\"h\":\"VS概述\",\"t\":[\"Visual Studio Win 2022 logo\",\"适用于 Windows 上 .NET 和 C++ 开发人员的最佳综合 IDE。 完整打包了一系列丰富的工具和功能，可提升和增强软件开发的每个阶段。\",\"使用visual studio开发过程中，有时发现在“错误列表”中的一些提示，大体分为错误、警告、消息，错误是我们必须处理的，否则代码通过编译，警告有时常常会被忽略，有时候忽略警告会为应用埋下安全隐患。\",\"这些警告来自微软的IDE的Security Code Scan - static code analyzer for .NET，这些汇总在https://security-code-scan.github.io/里。\",\"官方默认的快捷键操作\",\"F5： 启动调试 Ctrl+F5： 开始执行不调试 F10：逐过程调试 F11：逐条语句调试 F12：转到定义 Alt+F12：查看定义 F4：打开属性面板 F9：设置 切换断点 Ctrl+F：查找 Ctrl+G：转到输入的行号位置 Ctrl+H：替换 Ctrl+Z：撤销 Ctrl+C：复制 Ctrl+X：剪切 Ctrl+V：粘贴 Ctrl+A：全选 Ctrl+K + Ctrl+K：设置书签 Ctrl+K + Ctrl+N：跳到下一个书签 Ctrl+K + Ctrl+F：格式化代码 Ctrl+K + Ctrl+S：插入外侧代码 Ctrl+K + Ctrl+X：插入代码段 Ctrl+R + Ctrl+E：封装字段 Ctrl+R + Ctrl+M：提取方法 Ctrl+R + Ctrl+I：提取接口 Shift+Alt+F10 然后按回车键：添加命名空间引用 Shift+Home：选中当前行 Shift+方向键：向各个方向选中 Ctrl + M + O :折叠所有方法 \",\"折叠或者展开当前方法\",\"Ctrl+M+M\",\"展开所有方法\",\"快捷键：ctrl+M+P\",\"选中一个单词\",\"ctrl+shift+w\",\"vs每行代码前面出现了虚线\",\"ctrl+r+w\",\"折叠或展开当前方法\",\"快捷键：ctrl+M+M\",\"去掉网格线\",\"快捷键：ctrl+E+S\",\"打开指定的文件\",\"ctrl+T搜索打开\",\"定位到当前打开的文件所在目录\",\"ctrl+[ ,S\",\"多行编辑\",\"按住Alt键，使用鼠标拖选\",\"按住Alt+shift键，再按上/下/左/右方向键选择\",\"使用多个光标同时编辑\",\"按住ctrl+alt键，点击或选择要插入或编辑的位置\",\"匹配一个文档内相同的单词并编辑，先选择要编辑的单词或字符\",\"按alt+shift+; 会自动匹配并选中所有相同的单词，然后开始编辑\",\"剪贴板历史记录，默认包含你复制剪贴板的最后20项纪录\",\"ctrl+shift+v 可以打开剪贴板的历史记录\",\"整行上下移动\",\"按住alt 然后使用上下方向键移动整行代码\",\"提取接口\",\"Ctrl + R +I\"]},\"966\":{\"h\":\"修改快捷键方法\",\"t\":[\"修改快捷键的方法：\",\"img\",\"img\"]},\"967\":{\"h\":\"介绍\",\"t\":[\"插件官网：https://marketplace.visualstudio.com/vs\",\"工具插件目录：https://marketplace.visualstudio.com/search?target=VS&category=Tools&vsVersion=&subCategory=All&sortBy=Installs\"]},\"968\":{\"h\":\"插件目录\",\"t\":[\"CodeMaid\",\"从代码中删除不必要的字符，如空格代码整理、使用树型结构视图（码锹窗口）轻松浏览代码，分类显示所有的字段，属性，方法，类，快速定位。支持多种语言、注释格式\",\"ClaudiaIDE\",\"切换编程背景图\",\"工具->扩展和更新->下载ClaudiaIDE\",\"默认图片存放地址：C:\\\\Users\\\\DY-Azrng\\\\AppData\\\\Local\\\\Microsoft\\\\VisualStudio\\\\16.0_fea29920\\\\Extensions\\\\grl3zju1.amk\\\\Images\",\"Roslynator\",\"代码重构提示插件\",\"GitHub Copilot(收费)\",\"代码提示\",\"文档：https://github.com/github/copilot-docs\",\"Code Metrices\",\"代码对齐可帮助您精美地呈现代码，提高清晰度和可读性。\",\"https://marketplace.visualstudio.com/items?itemName=cpmcgrath.Codealignment\",\"Experimental Tools\",\"一堆质量重构和代码修复将改善您在 Visual Studio 中的 C# 开发体验并消除一些常见的痛苦。\",\"https://marketplace.visualstudio.com/items?itemName=AndreiDzimchuk.ExperimentalTools64bit\",\"Viasfora\",\"彩虹大括号\",\"https://viasfora.com/\",\"https://marketplace.visualstudio.com/items?itemName=TomasRestrepo.Viasfora\",\"Rainbow Braces\",\"彩虹括号\",\"https://marketplace.visualstudio.com/items?itemName=MadsKristensen.RainbowBraces\",\"SolutionColors\",\"为不同的解决方案设置不同的颜色\",\"https://marketplace.visualstudio.com/items?itemName=MadsKristensen.SolutionColors\",\"VSColorOutput64\",\"为输出控制台的内容显示不同的颜色\",\"https://marketplace.visualstudio.com/items?itemName=MikeWard-AnnArbor.VSColorOutput64\",\"Ozcode\",\"OzCode允许搜索性能，比较对象，计算表达式并建立跟踪点 - 都导致了快速的和富有成效的调试会话。\",\"Productivity Power Tools\",\"Productivity Power Tools是微软官方推出的 Visual Studio 插件，被用以提高开发人员生产率。它的出现一定程度上弥补和完善了 Visual Studio 自身的不足，比如其中的标记自动补全、复制引用等看似虽小，但却真得帮助我减轻了很多麻烦。\",\"注意：它会安装好几个插件。会自带主题\",\"文章：https://zhuanlan.zhihu.com/p/262866034\",\"Time Stamp Margin\",\"在调试模式下将时间戳信息添加到输出窗口\",\"Shrink Empty Lines\",\"句法行压缩，收缩空行\",\"Middle Click Scroll\",\"使用鼠标中键在编辑器窗格中启用滚动\",\"https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MiddleClickScroll\",\"Align Assignments\",\"对齐赋值语句\",\"https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.AlignAssignments\",\"Match Margin\",\"此功能在编辑器中突出显示插入符号位置的所有文本匹配。\",\"https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.MatchMargin\",\"Fix Mixed Tabs\",\"有助于管理文档中的空白，并有助于保持制表符和空格使用的一致性。\",\"https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.FixMixedTabs\",\"Copy As Html\",\"添加支持以HTML格式将选定的编辑器文本复制到剪贴板\",\"https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.CopyAsHtml\",\"Peek Help\",\"帮助\",\"SolutionErrorVisualizer\",\"解决方案错误展示器\",\"https://marketplace.visualstudio.com/items?itemName=VisualStudioPlatformTeam.SolutionErrorVisualizer\",\"Entity Develope\",\"Entity Developer是一个用于LINQ to SQL建模和代码产生的强大工具。你可以从零开始或者从一个现有数据库逆向设计LINQ to SQL。\",\"Entity Developer是ADO.NET实体框架，NHibernate、LinqConnect、Telerik数据访问和LINQ to SQL的强大ORM设计器。 它介绍了设计ORM模型的新方法，提高了生产力，并促进了数据库应用程序的开发。\",\"Markdown Editor\",\"一个在visual studio 中的markdown工具\",\"VisualStudioSpellCheckerVS2022andLater\",\"单词拼写检查器\",\"https://marketplace.visualstudio.com/items?itemName=EWoodruff.VisualStudioSpellCheckerVS2022andLater&ssr=false\",\"codist\",\"Codist 是一个致力于为 C# 程序员提供更佳的编码体验和效率的 Visual Studio 扩展。能够提供一系列的快捷操作和代码主题客制化，比如联网搜索，语法高亮自定义等。相当于一个精简版的Resharper。\",\"仓库地址：https://github.com/wmjordan/Codist\",\"sonarlint\",\"Security Code Scan (for VS2019 and newer)\",\"开源的代码安全分析工具\",\"https://security-code-scan.github.io/\",\"NuPack\",\"用于构建和发布NuGet程序包。\",\"https://hub.fastgit.org/cnsharp/nupack\",\"One Dark Pro\",\"主题包\",\"午夜黑主题\",\"https://marketplace.visualstudio.com/items?itemName=AustinStanding.vsthememidnightdeep&ssr=false#overview\",\"Midnigth Deep 午夜深色\",\"Midnigth Lights 午夜亮色\",\"Translator\",\"将中文翻译英文\",\"Resharper\",\"破解教程：https://blog.csdn.net/qq_42351033/article/details/103095514\",\"AProtobuf\",\"语法高亮 智能提示 引用预览 引用跳转 格式化代码 单文件生成 整个工程生成\",\"https://marketplace.visualstudio.com/items?itemName=AProtobuf.ALittleAProtobuf&ssr=false#overview\",\"FileDiffer\",\"文件比较\",\"https://marketplace.visualstudio.com/items?itemName=MadsKristensen.FileDiffer\",\"Bicep for Visual Studio\",\"Visual Studio 的二头肌语言支持。\",\"https://marketplace.visualstudio.com/items?itemName=ms-azuretools.visualstudiobicep\",\"ozcodereview\",\"此扩展允许您直接在 Visual Studio 中创建代码审查并将其分配给用户。此用户还可以直接在 Visual Studio 中查看它们并评论或更新它们的状态。\",\"https://marketplace.visualstudio.com/items?itemName=Ozytis.ozcodereview\"]},\"969\":{\"h\":\"资料\",\"t\":[\"插件菜单开发教程：https://mp.weixin.qq.com/s/lvsKTRKW8k7Oo8J3XfiMJQ\"]},\"970\":{\"h\":\"参考文章\",\"t\":[\"https://masuit.org/1782?t=udswo86qwqgw\",\"nuget默认的全局包下载地址一般为:C:\\\\Users{UserName}\\\\AppData\\\\Roaming\\\\NuGet\",\"项目多了之后,nuget下载的包就回慢慢的变多,导致c盘被大量占用,这时候我们想要将nuget的默认的包存放位置放在其他的目录下面,\",\"默认情况：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?> <configuration> <packageSources> <add key=\\\"nuget.org\\\" value=\\\"https://api.nuget.org/v3/index.json\\\" protocolVersion=\\\"3\\\" /> </packageSources> </configuration> \",\"我们将其修改为：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?> <configuration> <packageSources> <add key=\\\"nuget.org\\\" value=\\\"https://api.nuget.org/v3/index.json\\\" protocolVersion=\\\"3\\\" /> </packageSources> <config> <add key=\\\"globalPackagesFolder\\\" value=\\\"D:\\\\Program Files\\\\Microsoft Visual Studio\\\\NuGetPackages\\\" /> </config> </configuration> \",\"以后的nuget包将存放在这地址上(重启vs生效)\"]},\"971\":{\"h\":\"修改文件编码\",\"t\":[\"vs默认格式为 \\\"GB2312-80\\\",很多时候可能出现乱码情况\",\"修改方法：\",\"点击文件=》高级保存选项=》选择unicode(utf-8带签名)然后保存\",\"如果没有高级保存选项需要去配置\",\"工具=>自定义=>命令=>菜单栏=>文件=>添加命令=>文件=>高级保存选项\"]},\"972\":{\"h\":\"字体和大小\",\"t\":[\"字体：Consolas 字号：10\",\"字体：Cascadia Code\"]},\"973\":{\"h\":\"设置命名规范\",\"t\":[\"设置私有成员变量以下划线开头\",\"img\",\"首先管理命名格式\",\"增加以_开头\",\"img\",\"然后添加\",\"img\",\"官网下载地址：https://visualstudio.microsoft.com/zh-hans/downloads/\",\"Vs2017 Enterprise:\",\"NJVYC-BMHX2-G77MM-4XJMR-6Q8QF\",\"Vs2017 Professional:\",\"KBJFW-NXHK6-W4WJM-CRMQB-G3CDH\",\"Vs 2019企业版\",\"BF8Y8-GN2QH-T84XB-QVY3B-RC4DF\",\"Visual Studio 2019 Enterprise\",\"BF8Y8-GN2QH-T84XB-QVY3B-RC4DF\",\"Visual Studio 2019 Professional\",\"NYWVH-HT4XC-R2WYW-9Y3CM-X4V3Y\",\"Vs2022激活码：\",\"Pro:\",\"TD244-P4NB7-YQ6XK-Y8MMM-YWV2J\",\"Enterprise:\",\"VHF9H-NXBBB-638P6-6JHCY-88JWH\",\"激活码来源于网络，仅限用于学习使用\"]},\"974\":{\"h\":\"调试效率技巧\",\"t\":[\"在这篇文章中，我们假定读者了解VS基本的调试知识，如：\",\"F5 开始使用调试器运行程序\",\"F9 在当前行设置断点\",\"F10 运行到下一个断点处\",\"F5 从被调试的已停止程序恢复执行\",\"F11 步进到函数内（如果当前程序指针指向一个函数）\",\"F10 步过函数（如果当前程序指针指向一个函数）\",\"Shift+F11 步出执行的函数\",\"暂停执行\",\"附加到进程\",\"鼠标悬停时快速查看源代码中的元素\",\"调试窗口：局部变量、监视、即时窗口、模块、调用堆栈、异常设置\",\"许多开发人员使用这个功能强大的工具包来处理调试会话。然而，Visual Studio调试工具提供了更多的功能。下面是一系列Visual Studio调试效率技巧。注意，这些提示和快捷方式已经在的Visual studio 2019 16.6 EN-US版本中进行了验证，验证时Visual studio没有安装扩展。\"]},\"975\":{\"h\":\"1、运行到光标位置\",\"t\":[\"使用快捷键**Ctrl+F10**，您可以让调试器运行到光标所在行位置。\",\"Ctrl+F10运行到光标位置\"]},\"976\":{\"h\":\"2、通过点击鼠标，运行到当前位置\",\"t\":[\"在调试运行的程序时，通过鼠标悬停在当前行的代码上时，出现绿色的符号，可以点击此符号，直接让断点运行到此处。\"]},\"977\":{\"h\":\"3、在此处作为下一条要执行的语句\",\"t\":[\"在调试运行的程序时，通过鼠标悬停在当前行的代码上时，通过按住Ctrl键转换为将此处作为下一条要执行的语句。它与通过绿色箭头符号运行到这里不同，此功能将会跳过中间的语句，直接将断点跳转到此处。因此，在下面的动图中，我们可以在监视窗口中引用obj仍然为null，中间的MyClass构造函数并没有被执行。\"]},\"978\":{\"h\":\"4、数据断点：当值发生变化时，触发中断（值更改时中断）\",\"t\":[\"当你设置一个非静态的设置器为断点时，当所有对象的属性的值发生更改时触发断点。通过局部窗口（监视器窗口）右键点击：值更改时中断菜单，单个对象也可以获得相同的行为。\",\"下面的动画说明了这个功能，只有当obj2.Prop发生变化时，命中断点，而obj1.Prop发生变化时没有命中断点。\",\"注意：数据断点绑定到活动对象时，旨在调试期间起作用。因此，一旦调试过程停止，设置的断点就会丢失，在以后的调试过程中不能重用它。\",\"图片\",\"数据断点：值更改时中断\"]},\"979\":{\"h\":\"5、条件断点\",\"t\":[\"可以将条件附加到断点中，以便尽在特定场景中触发中断。在下面的动图中，我们在循环中定义条件i>6的断点。然后点击继续，可以看到一旦断点停止，i的值实际上变成了7。\",\"图片\"]},\"980\":{\"h\":\"6、跟踪断点\",\"t\":[\"在遇到断点时，停止程序执行时最常见的操作。但是，你可以选择在输出窗口中不终止（或带终止）打印一些跟踪信息。下面的动图说明了这种可能性。我们在输出窗口中跟踪i从0到9的值。注意：跟踪断点在编辑器的断点显示位置显示为菱形形状。\",\"注意，条件和跟踪操作都可以在断点上指定。\"]},\"981\":{\"h\":\"7、跟踪超出作用域的对象\",\"t\":[\"在监视窗口中，通过当前执行范文内引用的名称来跟踪对象。但是，当这样的跟踪引用超出作用域时，即使在引用对象仍处于活动状态时，它在监视窗口的上下文也不安的毫无意义并且被禁用。\",\"在许多情况下，我们想继续跟踪作用域外对象的状态。为此，请在监视窗口中右键单击此类引用，单击菜单[Make Object ID] 创建对象ID(M)，并要在监视器中添加或者2，$3，...，取决于你已经创建了多个对象ID)。\",\"下面的动图演示了如何跟踪作用域外对象的属性获取器的状态，该属性获取器以字符串的形式返回实际的日期时间。它很好地显示了当引用obj在Fct()上下文中超出作用域时，要观看的obj项将被禁用，而$1仍然会获得更新。\"]},\"982\":{\"h\":\"8、查看函数返回的值\",\"t\":[\"函数返回的值有时在源代码中被忽略，或者有时这个值在调试时无法被显示的访问。\",\"这样的返回值可以显示在调试->窗口->自动窗口中。伪变量$ReturnValue也可以在即时窗口和监视窗口中使用，以方便查看最后一个函数调用的返回值。\",\"注意，菜单调试->窗口->自动窗口仅在Visual Studio调试器附加到进程并且程序被调试器暂停时可用。\",\"查看函数返回的值\"]},\"983\":{\"h\":\"9、重新附加到进程\",\"t\":[\"从Visual Studio 2017开始，重新附加到进程Shift+Alt+P工具被提出，并且非常方便。将调试器附加到某个进程后，Visual Studio会记住它，并建议将调试器重新附加到同一进程。斜体也一样，因为这里有一个关于进程标识的启发式方法：\",\"如果已附加的进程仍然运行着，重新附加到进程，重新附加到它。\",\"否则，Visual Studio将尝试查找和前一个进程名具有相同名称的单进程，并将调试器重新附加到该进程。\",\"如果找到几个使用此名称的进程，则打开“附加到进程”对话框，只显示名称相同的进程\",\"如果找不到具有此名称的进程，则显示“附加到进程”对话框\",\"重新附加到进程\",\"重新附加到进程也适用于涉及多个进程的调试会话。在这种情况下，Visual Studio会尝试使用上述相同的启发式方法来查找它附加到的所有进程。\"]},\"984\":{\"h\":\"10、在即时窗口和在观察窗口的 No-Side-Effect 评估\",\"t\":[\"有时，在即时窗口或监视窗口中评估表达式时，某些状态会更改。这种行为通常时不希望发生的。你不想仅仅因为需要评估表达式的值而破坏调试程序的状态。这种情况被称为Heisenbug，该术语时物理学家Werner Heisenberg的双关语，它首先断言了量子力学的观察者效应，该现象指出，观察系统的行为不可避免的会改变器状态。\",\"为了避免更改任何状态，你可以在表达式后面加上nse(No-Side-Effect)。下面的动图说明了这种可能性（在监视窗口中监视State的值是否有变化）。\",\"在即时窗口和在观察窗口的No-Side-Effect评估\",\"下面这种动图是nse在监视窗口的使用。由于SideEffectFct()所观察的项中有Refresh评估按钮，所以此示例比前一个示例更简单。\",\"图片\"]},\"985\":{\"h\":\"11、在源码中显示线程\",\"t\":[\"调试多线程应用程序是有名的复杂。希望在源码中显示线程按钮能提供很大的帮助。它在编辑器的左侧边栏引入标记图标，以跟踪其他线程被暂停的位置。这个标记可以用来显示线程ID,并最终切换到另一个线程。注意：如果至少两个线程在同一位置暂停，则会显示不同的标记符号。\",\"更多调试多线程应用程序的技巧可以在这个微软文档中找到：Get started debugging multithreaded applications (C#, Visual Basic, C++)\",\"https://docs.microsoft.com/en-us/visualstudio/debugger/get-started-debugging-multithreaded-apps?view=vs-2019\",\"下面是这个演示的源代码，如果你想演示它，可以进行参考：\",\"using System; using System.Threading; class Program { static void Main() { for (int i=0; i< 5; i++) { // Avoid capturing a loop variable in the lambda below int j = i; // So 2 thread are blocked on '0' case if (j == 1) { j = 0; } ThreadPool.QueueUserWorkItem(delegate { Method(j); }); } Thread.Sleep(60000); } static void Method(int id) { switch(id) { case 0: Thread.Sleep(60000); break; case 1: Thread.Sleep(60000); break; case 2: Thread.Sleep(60000); break; case 3: Thread.Sleep(60000); break; case 4: Thread.Sleep(60000); break; } } } \"]},\"986\":{\"h\":\"12、从反编译的IL代码中调试源代码\",\"t\":[\"我们经常依赖一些黑盒组件：我们没有源代码的组件。\",\"但是，在调试复杂行为时，观察甚至调试引用的黑盒组件引用的逻辑。这就是为什么从16.5版本开始，Visual Studio 2019可以从编译好的程序中生成一些源代码。这样的源代码是可以调试的。这个特性是基于开源软件（OSS）工程：ILSpy（https://github.com/icsharpcode/ILSpy）。\",\"反编译菜单可以在模块窗口的组件右键菜单(如下面的动图所示)和Source Not Found或No Symbols Loaded对话框中给出。\",\"将IL代码反编译为源代码不可能是完美的，因为一些源代码信息在编译时丢失了。因此，这个特性有一些限制，在这个官方文档的最后会解释：Generate source code from .NET assemblies while debugging\",\"https://docs.microsoft.com/en-us/visualstudio/debugger/decompilation?view=vs-2019\",\"从反编译的IL代码中调试源代码\"]},\"987\":{\"h\":\"结尾\",\"t\":[\"Visual Studio非常出色，在调试方面尤其出色。在这里，我试图选择一些既隐藏又经常有用的技巧，希望它们能帮助您提高生产率。\",\"来自微信公众号【DOTNET学习站】，侵删\"]},\"988\":{\"h\":\"Bat命令\",\"t\":[\"删除文件\",\"//删除download文件夹中的文件 del C:\\\\download\\\\*.* //删除download文件及其子目录 rd /s /q C:\\\\download\\\\*.* //带空格的文件夹名字或带空格的文件的名字都需要用英文的双引号括起来 rd /s /q \\\"D:\\\\Documents\\\" \",\"/s 参数表示删除该文件夹及其下面的子目录和文件\",\"/q 参数表示安静进行，不需要确认\",\"示例\",\"删除同步文件下的文档\",\"rd /s /q \\\"C:\\\\Users\\\\user.LAPTOP-LBQ8556U\\\\AppData\\\\Roaming\\\\Scooter Software\\\\Beyond Compare 4\\\" \"]},\"989\":{\"h\":\"浏览器插件\"},\"990\":{\"h\":\"Adblock Plus\",\"t\":[\"去除广告插件\"]},\"991\":{\"h\":\"OneTab\",\"t\":[\"打开网页太多一下子收起，稍后再看\"]},\"992\":{\"h\":\"扩展管理器\",\"t\":[\"管理扩展插件\"]},\"993\":{\"h\":\"有道词典Chrome划词插件\",\"t\":[\"划词翻译\"]},\"994\":{\"h\":\"谷歌访问助手\",\"t\":[\"科学上网\"]},\"995\":{\"h\":\"完整网页截图\",\"t\":[\"对整个网页进行长截图\"]},\"996\":{\"h\":\"油猴\",\"t\":[\"包含许多好玩的插件集合\"]},\"997\":{\"h\":\"分屏浏览工具\",\"t\":[\"可以将两个网页都在一个界面展示\"]},\"998\":{\"h\":\"Fatkun图片批量下载\",\"t\":[\"可以将一个网页上的图片批量保存本地\"]},\"999\":{\"h\":\"Stylus\",\"t\":[\"对网页设置自定义样式\"]},\"1000\":{\"h\":\"IDM\",\"t\":[\"搭配IDM软件实现下载功能\"]},\"1001\":{\"h\":\"夜间模式\",\"t\":[\"浏览器设置夜间模式\"]},\"1002\":{\"h\":\"图片助手\",\"t\":[\"图片助手(ImageAssistant) 批量图片下载器\",\"img\"]},\"1003\":{\"h\":\"网页自动刷新Plus\",\"t\":[\"可以设置指定间隔自动刷新网页\",\"img\"]},\"1004\":{\"h\":\"Sourcegraph\",\"t\":[\"辅助看源码，提供接近IDE般操作体验。\"]},\"1005\":{\"h\":\"Octotree\",\"t\":[\"将仓库文件显示为侧边栏目录展示\"]},\"1006\":{\"h\":\"FeHelper(前端开发助手)\",\"t\":[\"一些常用的前端插件\"]},\"1007\":{\"h\":\"Linux子系统\",\"t\":[\"在win11下使用linux系统进行日常学习使用。\",\"注：我记得是家庭版本是不支持的。\",\"搜索控制面板然后点击程序\",\"img\",\"点击启用或者关闭windows功能\",\"img\",\"在弹框的windows功能中勾选适用于linux的windows子系统和虚拟机平台\",\"img\",\"然后我们就可以在微软商店里面搜索wsl(Windows Subsystem for Linux)，然后点击安装\",\"Windows Subsystem for Linux（简称WSL）是一个在Windows 10\\\\11上能够运行原生Linux二进制可执行文件（ELF格式）的兼容层。它是由微软与Canonical公司合作开发，其目标是使纯正的Ubuntu、Debian等映像能下载和解压到用户的本地计算机，并且映像内的工具和实用工具能在此子系统上原生运行。 内容来自于百度百科。\",\"这里我直接安装Ubuntu系统\",\"img\",\"原因是centos已经不维护了，目前使用Ubuntu的人也不少，那么就趁此机会学习一下Ubuntu吧，下载之后在开始菜单就可以看到安装好的Ubuntu系统，单击打开\",\"img\",\"需要你设置账号密码，设置好就可以正常使用，使用命令查看发行版本信息\",\"lsb_release -a \",\"img\",\"至此安装教程完成，请尽情学习吧。\"]},\"1008\":{\"h\":\"程序包管理器Chocolatey\",\"t\":[\"Chocolatey是Windows上的包管理工具，就是安装软件包的。\",\"Windows 7+ / Windows Server 2003+\",\"PowerShell v2+\",\".NET Framework 4+\",\"如果没安装，安装程序就会尝试安装.net framework4.0\",\"1、管理员方式运行PowerShell\",\"2、使用PoerShell安装\",\"使用PowerShell，您必须确保Get-ExecutionPolicy不受限制(Restricted)\",\"Get-ExecutionPolicy \",\"如果返回的是Restricted，继续运行下面的命令：\",\"Set-ExecutionPolicy AllSigned #或者 Set-ExecutionPolicy Bypass -Scope Process \",\"最后运行下面命令：\",\"Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) \",\"等待安装完成\",\"# 安装 choco install packagename # 卸载 choco uninstall packagename # 搜索 list、search、find # 帮助 查看命令功能解释 choco [command] -help \"]},\"1009\":{\"h\":\"DBCHM\",\"t\":[\"DBHCM 是一个对数据库文档生成工具！ 该工具从最初支持chm文档格式开始，通过开源，大家集思广益，不断改进，又陆续支持word、excel、pdf、html、xml、markdown等文档格式的导出。本项目力求做最简单、最实用的数据库文档(字典)生成工具！\",\"支持的数据库：sqlsever、mysql、oracle、postgresql、db2、sqlite\",\"Gitee：https://gitee.com/dotnetchina/DBCHM\",\"之前时候公司为了保存项目文档，防止后续新入职员工看不懂项目，就要求保存文档，比如数据库，就要求对数据库进行存档，保存成word或者excel(对于那个一个一个赋值真是心有余悸)，偶尔有一次发现了该开源项目，可以通过该项目一键生成常用的文档格式。是不是可以少加会班了。\"]},\"1010\":{\"h\":\"连接数据库\",\"t\":[\"img\",\"新建连接去操作数据库\",\"img\",\"连接成功\",\"img\"]},\"1011\":{\"h\":\"导出文件\",\"t\":[\"这是软件的主界面，满足常用的导出类型。\",\"img\",\"导出chm文件示例\",\"img\"]},\"1012\":{\"h\":\"环境配置\",\"t\":[\"下载好net 4.6后提示需要安装对应的KB2919355 更新后才可以继续安装\",\"所以我们现在开始下载更新包：https://www.microsoft.com/zh-CN/download/details.aspx?id=42334\",\"下载时候要选择中文，要看安装说明\",\"若要开始下载，请单击“下载”按钮，然后执行以下操作之一，或者从“更改语言”中选择另一种语言，然后单击“更改”。\",\"单击“运行”立即开始安装。\",\"单击“保存”将下载文件复制到您的计算机上供以后安装。\",\"这些 KB 必须按以下顺序安装：clearcompressionflag.exe、KB2919355、KB2932046、KB2959977、KB2937592、KB2938439、KB2934018。\",\"KB2919442 是 Windows Server 2012 R2 更新的先决条件，在尝试安装 KB2919355 之前应先安装 clearcompressionflag.exe\",\"安装上那些需要先安装KB2919442 ，KB2919442 是 Windows Server 2012 R2 更新的先决条件，下载地址：此处\",\"https://www.microsoft.com/zh-cn/download/details.aspx?id=42162\",\"然后下载下然后安装规定的顺序安装后重启电脑，就可以安装4.6.1了\",\"普通的windows server 2012因为没有更新的问题，所以导致部署不了netcore项目（装不了2015 Redistributable），所以需要安装以下补丁才可以。\",\"下载链接\",\"http://www.microsoft.com/en-us/download/details.aspx?id=48145\",\"安装如下：\",\"img\",\"错误日志：Windows8.1-KB2999226-x64.msu 安装失败\",\"img\",\"我们找到这个文件夹，手动安装一下看看效果，如下：\",\"img\",\"解决方案如下：\",\"先安装补丁 KB2919442 立即下载基于 x64 的 Windows Server 2012 R2 的KB2919442补丁。\",\"下载地址 https://www.microsoft.com/zh-cn/download/details.aspx?id=42153\",\"KB2919442 安装完成后，继续安装 Windows Server 2012 R2 Update (KB2919355) 所有补丁，如下\",\"下载地址 立即下载基于 x64 的 Windows Server 2012 R2 更新软件包。\",\"img\",\"img\",\"注意:必须按以下顺序安装更新:\",\"clearcompressionflag.exe 38 KB 管理员身份运行，没有界面，后台运\",\"Windows8.1-KB2919355-x64.msu 690.8 MB 安装完成后，需要重起，这个安装过程根据你的硬件配置和网络决定安装速度。\",\"Windows8.1-KB2932046-x64.msu 48.0 MB\",\"Windows8.1-KB2934018-x64.msu 126.4 MB\",\"Windows8.1-KB2937592-x64.msu 303 KB\",\"Windows8.1-KB2938439-x64.msu 19.6 MB\",\"Windows8.1-KB2959977-x64.msu 2.8 MB\",\"所有更新包安装完成后，接下来我们继续安装 Microsoft Visual C++ 2015 Redistributable (x64) - 14.0.23026\",\"下载链接\",\"http://www.microsoft.com/en-us/download/details.aspx?id=48145\",\"如图：\",\"img\",\"img\",\"img\",\"结束\"]},\"1013\":{\"h\":\"Hyper-v\",\"t\":[\"Hyper-V是微软的一款虚拟化产品，是微软第一个采用类似Vmware ESXi和Citrix Xen的基于hypervisor的技术。\",\"提前创建交换机是 因为到会的安装过程中会有一步选择交换机，这里提前创建好，到会安装时直接选择，在安装完成后虚拟机直接就可以连接网络。\",\"img\",\"点击：新建网络交换机=>外部网络=>创建虚拟交换机\",\"img\",\"创建对应的网卡，点击确定完成创建交换机\",\"img\",\"具体如何选择合适的网卡：\",\"Realtek PCIe GBE Family Controller：有线网卡驱动\",\"Qualcomm Atheros QCA61：无线网卡驱动\",\"通过自己本机的网络连接地方选择可以正常上网的网卡。\"]},\"1014\":{\"h\":\"新机器要装的软件\",\"t\":[\"Snipzste\",\"微信\",\"Git（小乌龟）\",\"搜狗输入法\",\"有道词典\",\"NotePad++\",\"VS2022\",\"VsCode\",\"Rider\",\"语雀\",\"Apifox\",\"360极速浏览器X\",\"Another Redis Desktop\",\"微软TODO\",\"TIM\",\"MobaXterm\",\"Sourcetree\",\"中国移动网盘\",\"Terminal\",\"Navicat\",\"DataGrip\",\"Postman\",\"Xmind\",\"微软便签\",\"WPS或者Office\"]},\"1015\":{\"h\":\"守护进程NSSM\"},\"1016\":{\"h\":\"1.安装\",\"t\":[\"这里使用的chocolatey安装\",\"choco install nssm \",\"img\"]},\"1017\":{\"h\":\"2.使用\"},\"1018\":{\"h\":\"2.1 执行命令\",\"t\":[\"nssm install \",\"便会弹出NSSM service installer\",\"img\"]},\"1019\":{\"h\":\"2.2 安装服务\",\"t\":[\"img\",\"Application Path:exe全路径\",\"C:\\\\tools\\\\nginx-1.17.8\\\\nginx.exe\",\"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\"C:\\\\Program Files\\\\nodejs\\\\node.exe\",\"Startup directory:\",\"如果.net core，就是dll的路径\",\"如果是其他脚本python脚本，或者node.js，则是启动的脚本文件路径\",\"如果是exe，则是exe的路径\",\"Arguments:参数\",\"如果是exe，可能没有参数\",\"如果是.net core,就是发布后的dll\",\"如果是python或node.js，就是main.py或者index.js\",\"Service name:windows下由nssm守护进程，本质就是把exe打包成服务，然后由nssm管理服务：监控服务中程序的运行状态，程序异常中断后，便自动启动，实现守护进程的功能。\",\"Install Service:安装服务\"]},\"1020\":{\"h\":\"2.3 启动/停止/重启 服务\",\"t\":[\"服务已经安装好了，还需要我们去启动.\",\"服务管理主要有启动、停止和重启，其命令如下：\",\"启动服务：nssm start\",\"停止服务：nssm stop\",\"重启服务：nssm restart\",\"暂停/继续服务nssm pause <servicename>``nssm continue <servicename>\",\"查看服务状态：nssm status <servicename>\",\"当然，也可以使用系统自带的服务管理器操作和使用系统的命令。\"]},\"1021\":{\"h\":\"2.3 卸载服务\",\"t\":[\"服务删除可以使用如下命令之一：\",\"nssm remove <servicename> nssm remove <servicename> confirm \",\"功能没有大的区别，后面的命令是自动确认的，没有交互界面。\"]},\"1022\":{\"h\":\"3.效果\"},\"1023\":{\"h\":\"nssm守护nginx\",\"t\":[\"​        \"]},\"1024\":{\"h\":\"介绍\",\"t\":[\"netframework下载\",\"https://dotnet.microsoft.com/download/dotnet-framework\",\"按键盘的Windows键（左下角四个方框的按键）+Q键，搜索cmd，选择以管理员身份运行→输入：DISM.exe /Online /Cleanup-image /Scanhealth 敲击回车；\",\"待提示完成后，继续输入：DISM.exe /Online /Cleanup-image /Restorehealth 敲击回车；\",\"待提示完成后，继续输入：sfc /scannow 敲击回车；提示文件修复成功后，重启电脑\",\"提示文件修复成功后，重启电脑，再使用看下效果的第一条命令是扫描你全部系统文件并和官方系统文件对比；第二条命令是把那些不同的系统文件还原成系统官方源文件；第三条命令是命令将扫描所有受保护的系统文件，并用缓存副本替换损坏的文件\"]},\"1025\":{\"h\":\"截图功能\",\"t\":[\"快捷键 win+shift+s ，在弹出来的窗口可以选择四种截图方式，分别是矩形、任意形状、窗口和全屏截图。\"]},\"1026\":{\"h\":\"录屏\",\"t\":[\"快捷键 win+G 开启录屏功能\"]},\"1027\":{\"h\":\"放大镜\",\"t\":[\"快捷键 win++ ，可以使用放大镜对桌面任务区域进行放大，随着鼠标的移动一起移动。\"]},\"1028\":{\"h\":\"虚拟键盘\",\"t\":[\"快捷键 win+R，在弹出的窗口中输入“osk”,最后点击确定。\"]},\"1029\":{\"h\":\"步骤记录器\",\"t\":[\"快捷键 win+R，在弹出的窗口输入“psr.exe”点击确定就可以弹出步骤记录器。\"]},\"1030\":{\"h\":\"剪贴板\",\"t\":[\"快捷键 win+V，就可以弹出剪贴板窗口，在这里就可以看到剪贴板的文字图片等。\"]},\"1031\":{\"h\":\"白板工具\",\"t\":[\"操作Win+V快捷键，下载后就能使用，点击加号新建白板，在出现的工具条里点击画笔可以在白板上写字（画笔有7中样子可 以选择），点击“A”可以输入文字，点击页面可以输入备注，图片图标可以插入图片，加号可以插入文档。\",\"更新win10下载工具地址：https://software-download.microsoft.com/download/pr/MediaCreationTool1809.exe\",\"页面：https://www.microsoft.com/zh-cn/software-download/windows10?OCID=WIP_r_Win10_Body_AddPC\"]},\"1032\":{\"h\":\"商业版和消费者版镜像的区别\",\"t\":[\"「商业版镜像」包含教育版、企业版、专业版、专业教育版、专业工作站版\",\"「消费者版镜像」包含家庭版、家庭单语言版、教育版、专业版、专业教育版、专业工作站版\"]},\"1033\":{\"h\":\"系统镜像\"},\"1034\":{\"h\":\"20H2\",\"t\":[\"64商业版 Windows 10 (business edition), version 20H2 (updated Feb 2021) (x64) - DVD (Chinese-Simplified) 文件：cn_windows_10_business_editions_version_20h2_updated_feb_2021_x64_dvd_be28e70d.iso 大小：5.64GB MD5：6EE808B7E2851E9B98C3C78B80038353 SHA1：9B8BA09EC4FC35D67BAA756E01D2CC563B856026 磁力链接：magnet:?xt=urn:btih:D4088008828F2B7D95B3546D32C641B736001AF5&dn=cn_windows_10_business_editions_version_20h2_updated_feb_2021_x64_dvd_be28e70d.iso&xl=6060609536 32商业版 Windows 10 (business edition), version 20H2 (updated Feb 2021) (x86) - DVD (Chinese-Simplified) 文件：cn_windows_10_business_editions_version_20h2_updated_feb_2021_x86_dvd_6eab91c5.iso 大小：4.13GB MD5：03EAB28E9F22A41CF9CFF59DBBF8855C SHA1：1515825249296E0B6EEFD8453A9FF5296975CB78 磁力链接：magnet:?xt=urn:btih:6F4C4D4F3554AF09F16D64D26E8D7BFFC8475AFE&dn=cn_windows_10_business_editions_version_20h2_updated_feb_2021_x86_dvd_6eab91c5.iso&xl=4439019520 64消费者版 Windows 10 (consumer edition), version 20H2 (updated Feb 2021) (x64) - DVD (Chinese-Simplified) 文件：cn_windows_10_consumer_editions_version_20h2_updated_feb_2021_x64_dvd_8ddab99d.iso 大小：5.8GB MD5：6592A7F121FC2DFC31F6538D56573B86 SHA1：B5CC14FA8C65FE176D148B855ED486A513E8616F 磁力链接：magnet:?xt=urn:btih:65AC835ABC26EA04F0CBF4B8D18F99C5633F6DF9&dn=cn_windows_10_consumer_editions_version_20h2_updated_feb_2021_x64_dvd_8ddab99d.iso&xl=6223781888 32消费者版 Windows 10 (consumer edition), version 20H2 (updated Feb 2021) (x86) - DVD (Chinese-Simplified) 文件：cn_windows_10_consumer_editions_version_20h2_updated_feb_2021_x86_dvd_1402b453.iso 大小：4.24GB MD5：6BD82B569FB65A7FB17CF62C4873A107 SHA1：0D24BC94B84C51438F820405DDA8FF61F6F891E7 磁力链接：magnet:?xt=urn:btih:1F8990B94AAED46303DD1CF082C949489DA1928E&dn=cn_windows_10_consumer_editions_version_20h2_updated_feb_2021_x86_dvd_1402b453.iso&xl=4549830656 \"]},\"1035\":{\"h\":\"1703版本\",\"t\":[\"Win10 专业版和家庭版二合一 文件名称：cn_windows_10_multiple_editions_version_1703_updated_march_2017_x64_dvd_10194190.iso SHA-1值：054C741DED8989F4D0D419946EB37182F20E4482文件大小：4.27GB发布时间：2017-04-05 下载地址：ed2k://|file|cn_windows_10_multiple_editions_version_1703_updated_march_2017_x64_dvd_10194190.iso|4587292672|373B263D307F6AA2486A74E557DD22C9|/ 文件名称：cn_windows_10_multiple_editions_version_1703_updated_march_2017_x86_dvd_10189569.iso SHA-1值：08D8F230E516523AD80B9A8F69ADEA6F77F2836A文件大小：3.22GB发布时间：2017-04-05 下载地址：ed2k://|file|cn_windows_10_multiple_editions_version_1703_updated_march_2017_x86_dvd_10189569.iso|3456649216|945C69ABEE0EFE9B07CF5B4C6E141262|/ win10企业版 文件名称：cn_windows_10_enterprise_version_1703_updated_march_2017_x64_dvd_10194191.iso SHA-1值: F3ACA74FA2177C06EFF3C1F8FEB1B4F26BEA880B文件大小：4.19GB发布时间：2017-04-05 下载地址：ed2k://|file|cn_windows_10_enterprise_version_1703_updated_march_2017_x64_dvd_10194191.iso|4498978816|98F0EAD4122B9B9D72FD08D22657AB45|/ 文件名称：cn_windows_10_enterprise_version_1703_updated_march_2017_x86_dvd_10189572.iso SHA-1值：14CC045F0C885CBED0AE0B9EA4B8C6F2FF7DD854文件大小：3.16GB发布时间：2017-04-05 下载地址：ed2k://|file|cn_windows_10_enterprise_version_1703_updated_march_2017_x86_dvd_10189572.iso|3394940928|2E72355CDA5373B9F778D36CF03B86FD|/ win10教育版 文件名称：cn_windows_10_education_version_1703_updated_march_2017_x64_dvd_10194187.iso SHA-1值：C7B477E404C714854734312A210F764DCF08C56A文件大小：4.16GB发布时间：2017-04-05 下载地址：ed2k://|file|cn_windows_10_education_version_1703_updated_march_2017_x64_dvd_10194187.iso|4470315008|BA9D2AB8865B80C2227E6E08BB2DD2AE|/ 文件名称：cn_windows_10_education_version_1703_updated_march_2017_x86_dvd_10189568.iso SHA-1值：57759D60ED27D2DF459571A5592F5B703F74F80E文件大小：3.17GB发布时间：2017-04-05 下载地址：ed2k://|file|cn_windows_10_education_version_1703_updated_march_2017_x86_dvd_10189568.iso|3401973760|5DD08371AF9B6E953F879E574D593607|/ 来自 <https://www.landiannews.com/archives/33577.html> \",\"win10专业版密钥 W269N-WFGWX-YVC9B-4J6C9-T83GX\"]},\"1036\":{\"h\":\"Terminal\",\"t\":[\"连接linux\",\" ssh IP -l root \",\"配置文件\",\"{ //docs https://docs.microsoft.com/zh-cn/windows/terminal/get-started \\\"$schema\\\": \\\"https://aka.ms/terminal-profiles-schema\\\", \\\"defaultProfile\\\": \\\"{61c54bbd-c2c6-5271-96e7-009a87ff44bf}\\\", //选择后复制 \\\"copyOnSelect\\\": true, //如果设置为 true，则所选文本的颜色和字体格式也将复制到剪贴板。 如果设置为 false，则只会将纯文本复制到剪贴板。 \\\"copyFormatting\\\": false, \\\"profiles\\\": { \\\"defaults\\\": { //背景透明度(0-1) \\\"acrylicOpacity\\\": 1, //背景图片 //\\\"backgroundImage\\\": \\\"E:\\\\\\\\ter.jpg\\\", \\\"fontFace\\\": \\\"Consolas\\\", //包含的配色方案 \\\"colorScheme\\\": \\\"Homebrew\\\", \\\"startingDirectory\\\": \\\"d:\\\\\\\\\\\", \\\"snapOnInput\\\": true, //是否启用毛玻璃 \\\"useAcrylic\\\": false }, \\\"list\\\": [ { // Make changes here to the powershell.exe profile. \\\"guid\\\": \\\"{61c54bbd-c2c6-5271-96e7-009a87ff44bf}\\\", \\\"name\\\": \\\"Windows PowerShell\\\", \\\"commandline\\\": \\\"powershell.exe\\\", \\\"hidden\\\": false }, { // Make changes here to the cmd.exe profile. \\\"guid\\\": \\\"{0caa0dad-35be-5f56-a8ff-afceeeaa6101}\\\", \\\"name\\\": \\\"Command Prompt\\\", \\\"commandline\\\": \\\"cmd.exe\\\", \\\"hidden\\\": false }, { \\\"guid\\\": \\\"{b453ae62-4e3d-5e58-b989-0a998ec441b8}\\\", \\\"hidden\\\": true, \\\"name\\\": \\\"Azure Cloud Shell\\\", \\\"source\\\": \\\"Windows.Terminal.Azure\\\" }, { \\\"guid\\\": \\\"{a2dfb7a0-26f4-4a2a-bc12-b2cc39ea67fd}\\\", \\\"hidden\\\": true, \\\"name\\\": \\\"Aliyun CentOS Shell\\\", \\\"commandline\\\": \\\"ssh -i root@47.104.255.61\\\" } ] }, //自定义配色方案 \\\"schemes\\\": { \\\"Homebrew\\\": { \\\"name\\\": \\\"Homebrew\\\", \\\"black\\\": \\\"#000000\\\", \\\"red\\\": \\\"#FC5275\\\", \\\"green\\\": \\\"#00a600\\\", \\\"yellow\\\": \\\"#999900\\\", \\\"blue\\\": \\\"#6666e9\\\", \\\"purple\\\": \\\"#b200b2\\\", \\\"cyan\\\": \\\"#00a6b2\\\", \\\"white\\\": \\\"#bfbfbf\\\", \\\"brightBlack\\\": \\\"#666666\\\", \\\"brightRed\\\": \\\"#e50000\\\", \\\"brightGreen\\\": \\\"#00d900\\\", \\\"brightYellow\\\": \\\"#e5e500\\\", \\\"brightBlue\\\": \\\"#0000ff\\\", \\\"brightPurple\\\": \\\"#e500e5\\\", \\\"brightCyan\\\": \\\"#00e5e5\\\", \\\"brightWhite\\\": \\\"#e5e5e5\\\", \\\"background\\\": \\\"#283033\\\", \\\"foreground\\\": \\\"#00ff00\\\" } }, // Add custom actions and keybindings to this array. // To unbind a key combination from your defaults.json, set the command to \\\"unbound\\\". // To learn more about actions and keybindings, visit https://aka.ms/terminal-keybindings \\\"actions\\\": [ // Copy and paste are bound to Ctrl+Shift+C and Ctrl+Shift+V in your defaults.json. // These two lines additionally bind them to Ctrl+C and Ctrl+V. // To learn more about selection, visit https://aka.ms/terminal-selection { \\\"command\\\": { \\\"action\\\": \\\"copy\\\", \\\"singleLine\\\": false }, \\\"keys\\\": \\\"ctrl+c\\\" }, { \\\"command\\\": \\\"paste\\\", \\\"keys\\\": \\\"ctrl+v\\\" }, // Press Ctrl+Shift+F to open the search box { \\\"command\\\": \\\"find\\\", \\\"keys\\\": \\\"ctrl+shift+f\\\" }, // Press Alt+Shift+D to open a new pane. // - \\\"split\\\": \\\"auto\\\" makes this pane open in the direction that provides the most surface area. // - \\\"splitMode\\\": \\\"duplicate\\\" makes the new pane use the focused pane's profile. // To learn more about panes, visit https://aka.ms/terminal-panes { \\\"command\\\": { \\\"action\\\": \\\"splitPane\\\", \\\"split\\\": \\\"auto\\\", \\\"splitMode\\\": \\\"duplicate\\\" }, \\\"keys\\\": \\\"alt+shift+d\\\" } ] } \",\"https://zhuanlan.zhihu.com/p/354603010\"]},\"1037\":{\"h\":\"生成APK\",\"t\":[\"本文apk下载地址：https://azrng.lanzouv.com/iBQRe0eeg8wf ，内容很简单，一个时间轴以及一个点击按钮切换背景图的东西，时间轴是学习Masa Blazor教程的，背景图的接口还是网上白嫖的，重点学习发布了apk，下面来简单介绍一下我的发布步骤吧\",\"切记项目目录不要带中文\",\"每个应用都应该指定唯一的包标识符和版本，配置在项目的.csproj文件中\",\"<!-- 显示名 --> <ApplicationTitle>MauiAppBlazor</ApplicationTitle> <!-- App 标识 --> <ApplicationId>com.companyname.mauiappblazor</ApplicationId> <ApplicationIdGuid>48CF021D-51ED-47B9-B8BC-E6005BE37A8A</ApplicationIdGuid> <!-- 版本 --> <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion> <ApplicationVersion>1</ApplicationVersion> \",\"使用密钥存储文件对包进行签名， Java/Android SDK 包含生成密钥存储所需的工具。 生成密钥存储文件后，将它添加到项目中，并将项目文件配置为引用它。提前安装 Java SDK ，以便你可以运行 keytool 工具。\",\"执行下面的步骤创建密钥存储文件\",\"1.打开终端程序并导航到项目文件夹\",\"img\",\"2.运行keytool工具\",\"keytool -genkey -v -keystore myapp.keystore -alias key -keyalg RSA -keysize 2048 -validity 10000 \",\"按照提示输入密码等设置\",\"img\",\"该工具生成 一个 myapp.keystore 文件，该文件应与项目位于同一文件夹中。\",\"修改项目的csproj文件做以下配置\",\"<PropertyGroup Condition=\\\"$(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Release'\\\"> <AndroidKeyStore>True</AndroidKeyStore> <!--设置为 True 对应用进行签名--> <AndroidSigningKeyStore>myapp.keystore</AndroidSigningKeyStore> <!--在上一部分中创建的密钥存储文件： myapp.keystore--> <AndroidSigningKeyAlias>key</AndroidSigningKeyAlias> <!--传递给 keytool 工具的参数值：键--> <AndroidSigningKeyPass>1234567</AndroidSigningKeyPass> <!--创建密钥存储文件时提供的密码--> <AndroidSigningStorePass>1234567</AndroidSigningStorePass> <!--创建密钥存储文件时提供的密码--> </PropertyGroup> \",\"使用.Net命令行来发布\",\"dotnet publish -f:net7.0-android -c:Release /p:AndroidSigningKeyPass=123456 /p:AndroidSigningStorePass=1234567 \",\"参数介绍\",\"-f ：目标框架，例如net7.0-android\",\"-c：生成配置，例如Release\",\"/p:AndroidSigningKeyPass：上面AndroidSigningKeyPass项目设置的值，也就是创建密钥文件时候的密码\",\"/p：AndroidSigningStorePass ：上面AndroidSigningStorePass项目设置的值，也就是创建密钥文件时候的密码\",\"发布之后会生成到相对路径为：\\\\bin\\\\Release\\\\net7.0-android\\\\publish\",\"img\",\"包含aab文件和apk文件，有两个 aab 文件，一个未签名，另一个已签名。 签名的变体在文件名中具有 -signed 。\",\"如果打包的时候遇到“error XA5300: 找不到 Android SDK 目录。请检查 Visual Studio 中的 Android SDK 管理器是否显示有效的安装。若要使用命令行 生成的自定义 SDK 路径，请将 \\\"AndroidSdkDirectory\\\" MSBuild 属性设置为自定义路径。 ”那么可以修改上面的发布命令为\",\"dotnet publish -f:net7.0-android -c:Release /p:AndroidSigningKeyPass=123456 /p:AndroidSigningStorePass=1234567 /p:AndroidSdkDirectory=D:\\\\Android\\\\android-sdk \",\"这个安卓sdk的地址只能你自己在你电脑上找了。\",\"官网资料：https://learn.microsoft.com/zh-cn/dotnet/maui/android/deployment/publish-cli\"]},\"1038\":{\"h\":\"Dapper扩展LnskyDB\",\"t\":[\"LnskyDB是基于Dapper的Lambda扩展,支持按时间分库分表,也可以自定义分库分表方法.而且可以T4生成实体类免去手写实体类的烦恼.\",\"文档地址: https://liningit.github.io/Dapper.LnskyDB/\",\"开源地址: https://github.com/liningit/Dapper.LnskyDB\",\"nuget地址: https://www.nuget.org/packages/LnskyDB/\"]},\"1039\":{\"h\":\"1. 使用配置\",\"t\":[\"在Startup.cs的ConfigureServices中添加services.AddLnskyDB();在Configure中添加app.UseLnskyDB();\"]},\"1040\":{\"h\":\"2. 仓储的创建\",\"t\":[\"仓储的创建有两种方式一种是通过RepositoryFactory.Create<ProductSaleByDayEntity>()创建IRepository<ProductSaleByDayEntity>\",\"还有一种是创建一个仓储类继承Repository<ProductSaleByDayEntity>\",\"public interface IProductSaleByDayRepository : IRepository<ProductSaleByDayEntity> { } public class ProductSaleByDayRepository : Repository<ProductSaleByDayEntity> { } //调用的地方可以 IProductSaleByDayRepository repository=new ProductSaleByDayRepository(); \"]},\"1041\":{\"h\":\"3. 查询\",\"t\":[\"3.1 根据主键查询\",\"var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); var entity = repository.Get(new ProductSaleByDayEntity { DBModel_ShuffledTempDate = new DateTime(2019, 01, 01),//这儿表示差19年1月的库和表 SysNo = sysNo }); \",\"3.2 根据where条件查询\",\"var stTime = new DateTime(2019, 1, 15); var endTime = new DateTime(2019, 2, 11); var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); var query = QueryFactory.Create<ProductSaleByDayEntity>(m => m.ShopName.Contains(\\\"测试\\\")); query.And(m => m.StatisticalDate >= stTime); query.And(m => m.StatisticalDate < endTime.Date.AddDays(1)); query.OrderByDescing(m => m.StatisticalDate);//如果是查多个库表必须按分库分表的字段降序排列 query.StarSize = 20; //可以设置查询行数及开始行数 query.Rows = 10; //分库的传入stTime,endTime会自动根据时间查询符合条件的库和表 var lst = repository.GetList(query, stTime, endTime); \",\"如果可以确定统计时间也可以查指定的库表进行单表查询\",\"var stTime = new DateTime(2019, 1, 15); var endTime = new DateTime(2019, 1, 18); var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); var query = QueryFactory.Create<ProductSaleByDayEntity>(m => m.ShopName.Contains(\\\"测试\\\")); query.And(m => m.StatisticalDate >= stTime); query.And(m => m.StatisticalDate < endTime.Date.AddDays(1)); query.DBModel.DBModel_ShuffledTempDate = new DateTime(2019, 01, 01);//这儿表示查19年1月的库和表 query.OrderByDescing(m => m.StatisticalDate);//单表查询可以随意排序 query.StarSize = 20; query.Rows = 10; var lst= repository.GetList(query); \",\"3.3 分页查询\",\"var stTime = new DateTime(2019, 1, 15); var endTime = new DateTime(2019, 2, 11); var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); var query = QueryFactory.Create<ProductSaleByDayEntity>(m => m.ShopName.Contains(\\\"测试\\\")); query.And(m => m.StatisticalDate >= stTime); query.And(m => m.StatisticalDate < endTime.Date.AddDays(1)); query.OrderByDescing(m => m.StatisticalDate);//如果是查多个库表必须按分库分表的字段降序排列 query.StarSize = 20; query.Rows = 10; //分库的传入stTime,endTime会自动根据时间查询符合条件的库和表 var paging = repository.GetPaging(query, stTime, endTime); var count = paging.TotalCount; var lst = paging.ToList();//或者paging.Items \",\"如果可以确定统计时间也可以查指定的库表\",\"var stTime = new DateTime(2019, 1, 15); var endTime = new DateTime(2019, 1, 18); var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); var query = QueryFactory.Create<ProductSaleByDayEntity>(m => m.ShopName.Contains(\\\"测试\\\")); query.And(m => m.StatisticalDate >= stTime); query.And(m => m.StatisticalDate < endTime.Date.AddDays(1)); query.DBModel.DBModel_ShuffledTempDate = new DateTime(2019, 01, 01);//这儿表示查19年1月的库和表 query.OrderByDescing(m => m.StatisticalDate);//单表查询可以随意排序 query.StarSize = 20; query.Rows = 10; var paging= repository.GetPaging(query); var count = paging.TotalCount; var lst = paging.ToList();//或者paging.Items \"]},\"1042\":{\"h\":\"4. 添加\",\"t\":[\"var addEntity = new ProductSaleByDayEntity() { SysNo = Guid.NewGuid(), DataSource = \\\"测试来源\\\", ProductID = Guid.NewGuid(), ShopID = Guid.NewGuid(), ShopName = \\\"测试店铺\\\", ProductName = \\\"测试商品\\\", OutProductID = Guid.NewGuid().ToString(), ImportGroupId = Guid.NewGuid(), StatisticalDate = DateTime.Now//分库分表字段是必须的 }; var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); //如果新增主键是自增列会自动赋值自增列值到主键 repository.Add(addEntity); \"]},\"1043\":{\"h\":\"5. 更新\",\"t\":[\"5.1 根据主键更新\",\"var updateEntity = new ProductSaleByDayEntity() { SysNo = Guid.Parse(\\\"650BC09C-2B9C-467B-A457-8B4853CC1F0F\\\"), DataSource = \\\"测试来源修改\\\", ShopName = \\\"店铺修改\\\", StatisticalDate = new DateTime(2019,01,05),//如果StatisticalDate赋值了则根据StatisticalDate找库表,然后根据主键更新,StatisticalDate也会被更新成所赋的值 //如果不想更新StatisticalDate可以用下面这句话 // DBModel_ShuffledTempDate=new DateTime(2019,01,05),//如果不想更新StatisticalDate字段则用这句话来确定是那个库及表 }; var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); //根据主键更新其他字段 return repository.Update(updateEntity); \",\"5.2 根据where条件更新\",\"var updateEntity = new ProductSaleByDayEntity() { DataSource = \\\"测试来源修改\\\", ShopName = \\\"店铺修改Where\\\", DBModel_ShuffledTempDate = new DateTime(2019, 01, 05),//如果用这句话来确定是那个库表 // StatisticalDate = statisticalDate,//如果要更新StatisticalDate则可以用这句话替代上面那句话 }; var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); var where = QueryFactory.Create<ProductSaleByDayEntity>(m => m.ShopName == \\\"测试店铺1\\\" && m.StatisticalDate > new DateTime(2019, 01, 03));//where是更新条件 //注意如果是更新用的是实体类的DBModel_ShuffledTempDate Query中的无效 return repository.Update(updateEntity, where); \"]},\"1044\":{\"h\":\"6. 删除\",\"t\":[\"6.1 根据主键删除\",\"var deleteEntity = new ProductSaleByDayEntity() { SysNo = Guid.Parse(\\\"650BC09C-2B9C-467B-A457-8B4853CC1F0F\\\"), DBModel_ShuffledTempDate = new DateTime(2019, 01, 05),//对于分库分表来说DBModel_ShuffledTempDate是必须的用来确认是那个库表 }; var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); return repository.Delete(deleteEntity); \",\"6.2 根据where条件删除\",\"var repository = RepositoryFactory.Create<ProductSaleByDayEntity>(); var where = QueryFactory.Create<ProductSaleByDayEntity>(); where.DBModel.DBModel_ShuffledTempDate = new DateTime(2019, 01, 01); //QueryiSearch方法表示搜索里面空格表示或+表示且 //如 导入+手工 自动+生成 表示字段必须同时拥有导入和手工或者自动和生成 //生成sql是 and ((DataSource like '%导入%' and DataSource like '%手工%') or DataSource like '%自动%' and DataSource like '%生成%') where.QueryiSearch(m => m.DataSource, \\\"新+更\\\"); where.QueryiSearch(m => m.ShopName, \\\"批量修改\\\"); //注意如果是更新用的是实体类的DBModel_ShuffledTempDate Query中的无效 return repository.Delete(where); \"]},\"1045\":{\"h\":\"7. 多线程处理\",\"t\":[\"对于mvc每次请求都会在请求结束时将数据库连接关闭,如果是新建线程则需要在线程开始调用DBTool.BeginThread();\",\"并且在线程结束为止调用DBTool.CloseConnections();关闭连接\",\"public class ThreadTool { public static void QueueUserWorkItem(Action action) { ThreadPool.QueueUserWorkItem(delegate { DBTool.BeginThread(); try { action(); } finally { DBTool.CloseConnections(); } }); } } ThreadTool.QueueUserWorkItem(ThreadDo);//调用 \"]},\"1046\":{\"h\":\"8. 实体类T4自动生成\",\"t\":[\"在LnskyDB.Demo\\\\T4中有可以自动生成实体类的T4模版.\",\"其中DbHelper.ttinclude中的Config是配置数据库的\",\"Entity.tt是生成实体的T4模版.大家可以根据自己的情况修改\",\"我们项目是表的命名规则是 :非分库分表的:模块_表名 分库分表:模块_表名_月份 所以T4也是根据这个规则生成的.大家如果不一样的话可以根据自己的情况修改DbHelper.ttinclude文件\",\"https://www.cnblogs.com/liningit/p/14792898.html\"]},\"1047\":{\"h\":\"Dapper读写分离\",\"t\":[\"一个主库+一个从库或者多个从库的结构，从库的数据来自主库的同步。\",\"下面只是关于dapper操作数据库读写分离的构思。\",\"新建一个存储连接字符串的类\",\"public class ConnectionStringConsts { /// <summary> /// 主库连接字符串 /// </summary> public static readonly string MasterConnectionString = \\\"server=db.master.com;Database=crm_db;UID=root;PWD=1\\\"; /// <summary> /// 从库连接字符串 /// </summary> public static readonly string SlaveConnectionString = \\\"server=db.slave.com;Database=crm_db;UID=root;PWD=1\\\"; } \",\"然后新建存储数据库连接字符串主从映射关旭的映射类，这个类是通过连接字符串建立主库和从库的关系，并且根据映射规则返回实际要操作的字符串。\",\"public static class ConnectionStringMapper { //存放字符串主从关系 private static readonly IDictionary<string, string[]> _mapper = new Dictionary<string, string[]>(); private static readonly Random _random = new Random(); static ConnectionStringMapper() { //添加数关系映射 _mapper.Add(ConnectionStringConsts.MasterConnectionString, new[] { ConnectionStringConsts.SlaveConnectionString }); } /// <summary> /// 获取连接字符串 /// </summary> /// <param name=\\\"masterConnectionStr\\\">主库连接字符串</param> /// <param name=\\\"useMaster\\\">是否选择读主库</param> /// <returns></returns> public static string GetConnectionString(string masterConnectionStr,bool useMaster) { //是否走主库 if (useMaster) { return masterConnectionStr; } if (!_mapper.Keys.Contains(masterConnectionStr)) { throw new KeyNotFoundException(\\\"不存在的连接字符串\\\"); } //根据主库获取从库连接字符串 string[] slaveStrs = _mapper[masterConnectionStr]; if (slaveStrs.Length == 1) { return slaveStrs[0]; } return slaveStrs[_random.Next(0, slaveStrs.Length - 1)]; } } \",\"我们将封装一个DapperHelper的操作，虽然Dapper用起来比较简单方便，但是依然强烈建议！！！封装一个Dapper操作类，这样的话可以统一处理数据库相关的操作，对于以后的维护修改都非常方便，扩展性的时候也会相对容易一些\",\"public static class DapperHelper { public static IDbConnection GetConnection(string connectionStr) { return new MySqlConnection(connectionStr); } /// <summary> /// 执行查询相关操作 /// </summary> /// <param name=\\\"sql\\\">sql语句</param> /// <param name=\\\"param\\\">参数</param> /// <param name=\\\"useMaster\\\">是否去读主库</param> /// <returns></returns> public static IEnumerable<T> Query<T>(string sql, object param = null, bool useMaster=false) { //根据实际情况选择需要读取数据库的字符串 string connectionStr = ConnectionStringMapper.GetConnectionString(ConnectionStringConsts.MasterConnectionString, useMaster); using (var connection = GetConnection(connectionStr)) { return connection.Query<T>(sql, param); } } /// <summary> /// 执行查询相关操作 /// </summary> /// <param name=\\\"connectionStr\\\">连接字符串</param> /// <param name=\\\"sql\\\">sql语句</param> /// <param name=\\\"param\\\">参数</param> /// <param name=\\\"useMaster\\\">是否去读主库</param> /// <returns></returns> public static IEnumerable<T> Query<T>(string connectionStr, string sql, object param = null, bool useMaster = false) { //根据实际情况选择需要读取数据库的字符串 connectionStr = ConnectionStringMapper.GetConnectionString(connectionStr, useMaster); using (var connection = GetConnection(connectionStr)) { return connection.Query<T>(sql, param); } } /// <summary> /// 执行事务相关操作 /// </summary> /// <param name=\\\"sql\\\">sql语句</param> /// <param name=\\\"param\\\">参数</param> /// <returns></returns> public static int Execute(string sql, object param = null) { return Execute(ConnectionStringConsts.MasterConnectionString, sql, param); } /// <summary> /// 执行事务相关操作 /// </summary> /// <param name=\\\"connectionStr\\\">连接字符串</param> /// <param name=\\\"sql\\\">sql语句</param> /// <param name=\\\"param\\\">参数</param> /// <returns></returns> public static int Execute(string connectionStr,string sql,object param=null) { using (var connection = GetConnection(connectionStr)) { return connection.Execute(sql,param); } } /// <summary> /// 事务封装 /// </summary> /// <param name=\\\"func\\\">操作</param> /// <returns></returns> public static bool ExecuteTransaction(Func<IDbConnection, IDbTransaction, int> func) { return ExecuteTransaction(ConnectionStringConsts.MasterConnectionString, func); } /// <summary> /// 事务封装 /// </summary> /// <param name=\\\"connectionStr\\\">连接字符串</param> /// <param name=\\\"func\\\">操作</param> /// <returns></returns> public static bool ExecuteTransaction(string connectionStr, Func<IDbConnection, IDbTransaction, int> func) { using (var conn = GetConnection(connectionStr)) { IDbTransaction trans = conn.BeginTransaction(); return func(conn, trans)>0; } } } \",\"使用示例\",\"string queryPersonSql = \\\"select id,name from Person where id=@id\\\"; var person = DapperHelper.Query<Person>(queryPersonSql, new { id = 1 }).FirstOrDefault(); \",\"https://www.cnblogs.com/wucy/p/13485508.html | 关于Dapper实现读写分离的个人思考 - yi念之间 - 博客园\"]},\"1048\":{\"h\":\"基础操作\",\"t\":[\"dapper是一个简单的对象关系映射框架（ORM----Object Relation Mapping），它几乎与原始的ADO.NET数据操作读取一样快是一个用来执行SQL并映射模型的轻量级ORM框架。\",\"引用nuget包\",\"<PackageReference Include=\\\"Dapper\\\" Version=\\\"2.0.123\\\" /> \",\"然后要操作哪些数据库就再安装对应数据库的包。\",\"常用数据库连接字符串\",\"MySQL： Server=47.xxxx;database=gxgtest;uid=gxg;pwd=123456;charset=utf8; SQL server Data Source=.;Initial Catalog=Test;User ID=sa;Password=123456 \"]},\"1049\":{\"h\":\"查询\"},\"1050\":{\"h\":\"基础查询\",\"t\":[\"var connection = new SqlConnection(\\\"Data Source=.;Initial Catalog=Test;User ID=sa;Password=123456\\\"); var sql = \\\"select * from Users where Email=@email\\\"; var info = connection.Query<Users>(sql, new { email = \\\"123456\\\" }); Console.ReadLine(); \"]},\"1051\":{\"h\":\"参数化查询\",\"t\":[\"=\",\"var parameters = new DynamicParameters(); parameters.Add(\\\"@reportId\\\", request.ReportId); parameters.Add(\\\"@reportClassId\\\", request.ReportClassId); var list = await _pacsViewDapperRepository.QueryAsync<GetImageReportDto>(str.ToString(), parameters); \"]},\"1052\":{\"h\":\"Like\"},\"1053\":{\"h\":\"Postgresql\",\"t\":[\"示例like\",\"var str = @\\\"SELECT * FROM \\\"\\\"user\\\"\\\".\\\"\\\"userinfo\\\"\\\" info where info.name like @name\\\"; var parameters = new DynamicParameters(); parameters.Add(\\\"@name\\\", \\\"%ab%\\\"); var list = await dapper.QueryAsync<UserInfo>(str, parameters); Console.WriteLine(JsonConvert.SerializeObject(list)); \"]},\"1054\":{\"h\":\"IN\"},\"1055\":{\"h\":\"Postgresql\",\"t\":[\"var str = @\\\"SELECT * FROM \\\"\\\"user\\\"\\\".\\\"\\\"userinfo\\\"\\\" info where info.status=any(@status)\\\"; var statusList = new int[3] { 1, 2, 3 }; var parameters = new DynamicParameters(); parameters.Add(\\\"@status\\\", statusList.ToList()); var list = await dapper.QueryAsync<UserInfo>(str, parameters); \",\"PostgreSQL IN运算符不支持数组（或任何其他集合）作为参数，所以需要使用WHERE Id = ANY(@CustomerIdList)\",\"IN相当于ANY:https://www.postgresql.org/docs/current/functions-subquery.html#FUNCTIONS-SUBQUERY-ANY-SOME\"]},\"1056\":{\"h\":\"其它\",\"t\":[\"_db.Query<Users>(\\\"SELECT * FROM dbo.Users s WHERE s.id IN @ids \\\",new { ids = IDs.ToArray()}).ToList(); \"]},\"1057\":{\"h\":\"Not IN\"},\"1058\":{\"h\":\"Postgresql\",\"t\":[\"var str = @\\\"SELECT * FROM \\\"\\\"user\\\"\\\".\\\"\\\"userinfo\\\"\\\" info where info.status!=any(@status)\\\"; var statusList = new int[3] { 1, 2, 3 }; var parameters = new DynamicParameters(); parameters.Add(\\\"@status\\\", statusList.ToList()); var list = await dapper.QueryAsync<UserInfo>(str, parameters); Console.WriteLine(JsonConvert.SerializeObject(list)); \"]},\"1059\":{\"h\":\"<>\"},\"1060\":{\"h\":\"Postgresql\",\"t\":[\"var str = @\\\"SELECT * FROM \\\"\\\"user\\\"\\\".\\\"\\\"userinfo\\\"\\\" info where info.status!=@status\\\"; var parameters = new DynamicParameters(); parameters.Add(\\\"@status\\\", 1); var list =await dapper.QueryAsync<UserInfo>(str, parameters); 或者 var sql = \\\"SELECT * FROM Invoice WHERE Kind <> ALL(@Kind);\\\"; var invoices = connection.Query<Invoice>(sql, new {Kind = new[] {\\\"aa\\\",\\\"bb\\\"}}).ToList(); \"]},\"1061\":{\"h\":\"查询映射\",\"t\":[\"当数据库里面的列和代码中模型的列命名不一致的时候(大小写等可以自动映射)是映射不上的比如create_time想映射到CreateTime上，这个时候我们一般会编写别名转换来实现，最近看到另外一种写法，如下\",\"数据库中该表的字段和代码的字段有下面区别，所以我做了一个映射\",\"var userColMap = new ColumnMap(); userColMap.Add(\\\"pass_word\\\", nameof(UserInfo.PassWord)); userColMap.Add(\\\"create_time\\\", nameof(UserInfo.CreateTime)); userColMap.Add(\\\"credit\\\", nameof(UserInfo.Integral)); userColMap.Add(\\\"id\\\", nameof(UserInfo.Id)); userColMap.Add(\\\"account\\\", nameof(UserInfo.Account)); \",\"关于这个ColumnMap，实现如下\",\"/// <summary> /// 列映射 /// </summary> public class ColumnMap { /// <summary> /// 向前映射 /// </summary> private readonly Dictionary<string, string> forward = new Dictionary<string, string>(); /// <summary> /// 向后映射 /// </summary> private readonly Dictionary<string, string> reverse = new Dictionary<string, string>(); /// <summary> /// 添加映射的值(参数不区分是数据库列和代码列的先后关系) /// </summary> /// <param name=\\\"t1\\\"></param> /// <param name=\\\"t2\\\"></param> public void Add(string t1, string t2) { forward.Add(t1, t2); reverse.Add(t2, t1); } public string this[string index] { get { // Check for a custom column map. if (forward.ContainsKey(index)) return forward[index]; if (reverse.ContainsKey(index)) return reverse[index]; // If no custom mapping exists, return the value passed in. return index; } } } \",\"然后给dapper设置自定义映射（这里的UserInfo是查询时候映射的模型）\",\"public static class DapperMapperConfigs { /// <summary> /// dapper映射配置 /// </summary> public static void Init() { var userColMap = new ColumnMap(); userColMap.Add(\\\"pass_word\\\", nameof(UserInfo.PassWord)); userColMap.Add(\\\"create_time\\\", nameof(UserInfo.CreateTime)); userColMap.Add(\\\"credit\\\", nameof(UserInfo.Integral)); userColMap.Add(\\\"id\\\", nameof(UserInfo.Id)); userColMap.Add(\\\"account\\\", nameof(UserInfo.Account)); SqlMapper.SetTypeMap(typeof(UserInfo), new CustomPropertyTypeMap(typeof(UserInfo), (type, columnName) => type.GetProperty(userColMap[columnName]))); } } \",\"注意：如果使用了自定义映射，那么默认的映射就不生效了，比如数据库的id映射不到代码的ID上面\",\"在项目启动的时候就执行该静态方法，然后再使用dapper查询的时候就可以不使用别名，使用自定义的映射了。\",\"当然还有另外的写法，不再详细描述，只是留下网上的代码\",\"根据列特性映射\",\"SqlMapper.SetTypeMap(typeof(Section), new CustomPropertyTypeMap( typeof(Section), (type, columnName) => type.GetProperties().FirstOrDefault(prop => prop.GetCustomAttributes(false).OfType<ColumnAttribute>().Any(attr => attr.Name == columnName)))); public class Section { [Column(\\\"db_column_name1\\\")] // Side note: if you create aliases, then they would match this. public int Id { get; set; } [Column(\\\"db_column_name2\\\")] public string Title { get; set; } } \",\"根据备注特性映射\",\"public class TypeWithMapping { [Description(\\\"B\\\")] public string A { get; set; } [Description(\\\"A\\\")] public string B { get; set; } } // custom mapping var map = new CustomPropertyTypeMap(typeof(TypeWithMapping), (type, columnName) => type.GetProperties().FirstOrDefault(prop => GetDescriptionFromAttribute(prop) == columnName)); Dapper.SqlMapper.SetTypeMap(typeof(TypeWithMapping), map); static string GetDescriptionFromAttribute(MemberInfo member) { if (member == null) return null; var attrib = (DescriptionAttribute)Attribute.GetCustomAttribute(member, typeof(DescriptionAttribute), false); return attrib == null ? null : attrib.Description; } \"]},\"1062\":{\"h\":\"事务\"},\"1063\":{\"h\":\"简单的事务方法\",\"t\":[\"这种事务方式很原始，就是在已存在的 Connection 上创建 Transaction， 然后将事务作为参数传递到 Execute 方法中，当业务逻辑处理完后，再做 commit 提交，参考如下代码：\",\"string sql = \\\"INSERT INTO Customers (CustomerName) Values (@CustomerName);\\\"; using (var connection = new SqlConnection(FiddleHelper.GetConnectionStringSqlServerW3Schools())) { connection.Open(); using (var transaction = connection.BeginTransaction()) { connection.Execute(sql, new {CustomerName = \\\"Mark\\\"}, transaction: transaction); connection.Execute(sql, new {CustomerName = \\\"Sam\\\"}, transaction: transaction); connection.Execute(sql, new {CustomerName = \\\"John\\\"}, transaction: transaction); transaction.Commit(); } } \"]},\"1064\":{\"h\":\"TransactionScope\",\"t\":[\"如果你喜欢用 TransactionScope 方式，有一点要注意，那就是需要在 connection 创建之前创建 Scope，然后在 Scope 作用域内做你想做的sql操作，最后执行一个 complete 提交即可，参考如下代码：\",\"using (var transaction = new TransactionScope()) { var sql = \\\"INSERT INTO Customers (CustomerName) Values (@CustomerName);\\\"; using (var connection = My.ConnectionFactory()) { connection.Open(); connection.Execute(sql, new {CustomerName = \\\"Mark\\\"}); connection.Execute(sql, new {CustomerName = \\\"Sam\\\"}); connection.Execute(sql, new {CustomerName = \\\"John\\\"}); } transaction.Complete(); } \"]},\"1065\":{\"h\":\"Dapper Transaction 方式\",\"t\":[\"这是使用 Dapper 最推荐的方式，毕竟它的代码语义太强了，你可以直接在 new 出的 Transaction 之上执行各自的sql语句，参考如下代码：\",\"string sql = \\\"INSERT INTO Customers (CustomerName) Values (@CustomerName);\\\"; using (var connection = new SqlConnection(FiddleHelper.GetConnectionStringSqlServerW3Schools())) { connection.Open(); using (var transaction = connection.BeginTransaction()) { transaction.Execute(sql, new {CustomerName = \\\"Mark\\\"}); transaction.Execute(sql, new {CustomerName = \\\"Sam\\\"}); transaction.Execute(sql, new {CustomerName = \\\"John\\\"}); transaction.Commit(); } } \",\"这三种方式总结的特别好，但有一点看着很不爽，那就是在执行 Transaction 之前需要 connection.Open()，有点繁琐，所以这一块还是可以再封装一下的。\"]},\"1066\":{\"h\":\"参考文档\",\"t\":[\"https://mp.weixin.qq.com/s/IjFtMkqaH-Z9c6uURiAoZQ | 如何在 Dapper.NET 中使用事务？\"]},\"1067\":{\"h\":\"Dapper.Extension.AspNetCore\",\"t\":[\"ASP.NET Core 的 Dapper 扩展。\",\"GitHub：https://github.com/Run2948/Dapper.Extension.AspNetCore\"]},\"1068\":{\"h\":\"GitHub Actions构建镜像并部署服务\",\"t\":[\"通过GitHub的Action来(白嫖)部署.Net服务到阿里云服务器。\",\"需要一个阿里云服务器并且该服务器还安装了docker环境，如果环境安装不清楚可以查看之前的文章。\"]},\"1069\":{\"h\":\"创建镜像仓库\",\"t\":[\"在阿里云的容器镜像服务中，创建一个镜像仓库用来存储我们测试的镜像，这里我提前创建仓库为myexample，地址为registry.cn-hangzhou.aliyuncs.com/zrng/myexample。\"]},\"1070\":{\"h\":\"准备项目文件\",\"t\":[\"本文主要讨论GitHub的Action功能，所以项目文件直接使用之前示例代码，在Github创建仓库my-example，该仓库的代码使用之前的代码(仓库地址为：https://gitee.com/AZRNG/my-example)\",\"在指定的仓库中，选择Settings=>Secrets=>Actions\",\"img\",\"点击右上的新建就可以创建想要保存的隐私配置信息\",\"img\",\"这里我保存了一下镜像仓库的账号密码等信息。\",\"img\",\"在仓库的根目录新建工作流文件.github/workflows/dotnet.yml(也可以在Actions选项卡中新建)，我们将每次提交的项目生成测试镜像，在dotnet.yml中写下面内容\",\"# 工作流名称 name: Docker on: push: # 推送的时候触发 branches: [ \\\"main\\\" ] # 推送的分支 # Publish semver tags as releases. tags: [ 'v*.*.*' ] pull_request: branches: [ \\\"main\\\" ] env: # 仓库地址 REGISTRY: registry.cn-hangzhou.aliyuncs.com IMAGE_NAME: zrng/myexample IMAGE_TAG: latest jobs: build: runs-on: ubuntu-latest permissions: contents: read packages: write # This is used to complete the identity challenge # with sigstore/fulcio when running outside of PRs. id-token: write steps: # 将远程仓库中的源代码领取到workfile自动化构建脚本运行的服务器 - name: Checkout repository uses: actions/checkout@v3 # Login against a Docker registry except on PR # https://github.com/docker/login-action - name: login to ${{ env.REGISTRY }} if: github.event_name != 'pull_request' uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c # 用于登录docker以便我们后续上传镜像到自己的镜像仓库 with: registry: ${{ env.REGISTRY }} username: ${{ secrets.USERMAME }} # 镜像仓库用户名 password: ${{ secrets.PASSWORD }} # 镜像仓库密码 # 生成和推送镜像 阿里云镜像仓库推送有问题 # # https://github.com/docker/build-push-action # - name: Build and push Docker image # id: build-and-push # 构建docker镜像，推送到自己的docker镜像仓库 # uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a # with: # registry: ${{ env.REGISTRY }} # username: ${{ secrets.USERMAME }} # 镜像仓库用户名 # password: ${{ secrets.PASSWORD }} # 镜像仓库密码 # push: ${{ github.event_name != 'pull_request' }} # tags: ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}.${{ github.run_id }}.${{ github.run_number }} #动态变量镜像TAG 使用github运行job和jobid设置tag # context: . # 相对以远程仓库根路径的dockerfile的路径 # file: ./NetByDocker/Dockerfile # 指定Dockerfile - name: Build the Docker image run: | docker version # 登录阿里云镜像仓库 docker login --username=${{ secrets.USERMAME }} --password=${{ secrets.PASSWORD }} registry.cn-hangzhou.aliyuncs.com # 使用Dockerfile构建镜像 ${{env.IMAGE_TAG}}.${{ github.run_id }}.${{ github.run_number }} docker build . --file NetByDocker/Dockerfile --tag registry.cn-hangzhou.aliyuncs.com/zrng/myexample:${{env.IMAGE_TAG}} --tag registry.cn-hangzhou.aliyuncs.com/zrng/myexample:${{ github.run_number }} # 推送镜像到镜像仓库 docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.IMAGE_TAG}} docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.run_number }} # 列出所有镜像 - name: Docker Images Lst run: docker images \",\"本来在推送镜像的时候我们可以直接build-and-push来推送，但是推送到阿里云仓库有问题，我百度说是阿里云仓库必须写前面镜像地址等信息，所以没成功，所以换用其他方式来实现\",\"上文中涉及的dockerfile文件内容如下\",\"FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base WORKDIR /app EXPOSE 80 FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build WORKDIR /src COPY [\\\"NetByDocker/NetByDocker.csproj\\\", \\\"NetByDocker/\\\"] RUN dotnet restore \\\"NetByDocker/NetByDocker.csproj\\\" # 还原项目的Nuget包 COPY . . WORKDIR \\\"/src/NetByDocker\\\" RUN dotnet build \\\"NetByDocker.csproj\\\" -c Release -o /app/build # 在发布模式下生成项目。 生成工件将写入中间映像的 app/build/ 目录。 FROM build AS publish RUN dotnet publish \\\"NetByDocker.csproj\\\" -c Release -o /app/publish # 在发布模式下发布项目。 已发布的捆绑将写入最终映像的 app/publish/ 目录。 FROM base AS final WORKDIR /app COPY --from=publish /app/publish . ENTRYPOINT [\\\"dotnet\\\", \\\"NetByDocker.dll\\\"] # 启动 \",\"在我们提交代码并推送中可以去github的Actions选项卡中查看\",\"img\",\"因为一些笨笨的操作，错误了好多次\",\"img\",\"然后再去阿里云镜像仓库查看是否有我们推送上去的镜像\",\"img\",\"已经存在，说明我们生成镜像并推送的步骤成功了，也可以通过以下命令拉取到\",\"docker pull registry.cn-hangzhou.aliyuncs.com/zrng/myexample:latest \",\"我们需要让推送成功后，在我们的阿里云服务器上拉取镜像并启动，那么先增加服务器的地址、账号、密码、端口等变量\",\"img\",\"再修改dotnet.yml文件，在最后追加内容\",\"# 列出所有镜像 - name: Docker Images Lst run: docker images - name: executing remote ssh commands using password uses: appleboy/ssh-action@master with: host: ${{ secrets.SERVERHOST }} username: ${{ secrets.SERVERUSERNAME }} password: ${{ secrets.SERVERPASSWORD }} port: ${{ secrets.SERVERPORT }} script: docker run --name netsample -d -p 8002:80 registry.cn-hangzhou.aliyuncs.com/zrng/myexample \",\"我本来是按照上面这方案走的，结果还得考虑到停止并删除容器，以及删除镜像拉取最新的镜像，所以我索性直接使用docker-compose去处理了，我在服务器的/root/net目录，放了一个docker-compose文件，内容如下\",\"version: '3.4' services: netsample: container_name: netsample image: registry.cn-hangzhou.aliyuncs.com/zrng/myexample restart: always environment: - ASPNETCORE_ENVIRONMENT=Production networks: - my-bridge ports: - \\\"8002:80\\\" networks: my-bridge: driver: bridge \",\"然后在dotnet.yml文件后追加\",\"- name: executing remote ssh commands using password uses: appleboy/ssh-action@master with: host: ${{ secrets.SERVERHOST }} username: ${{ secrets.SERVERUSERNAME }} password: ${{ secrets.SERVERPASSWORD }} port: ${{ secrets.SERVERPORT }} script: cd /root/net; docker-compose pull && docker-compose up -d; \",\"然后我提交新增加的代码，等工作流跑结束后\",\"img\",\"访问我们项目的swagger(http://IP:8002/swagger/index.html)页面(前提是阿里云服务器的端口安全组已经设置)，既可以看到下面的效果\",\"img\",\"登录服务器后查看镜像版本，也是我们刚刚推送的镜像。\",\"本文完整介绍了如何使用Github Actions做CI&CD，将ASP.NET Core 6.0 程序的main分支打包并部署到阿里云Linux服务器。\",\"如果想在每次dev提交代码后自动生成服务(不再推送镜像仓库)，那么可以稍稍修改上面的脚本使用appleboy/ssh-action@master进入某一个目录(提前拉取好项目的目录)，然后构建镜像生成容器。\",\"本文完整代码可以查看仓库：https://gitee.com/AZRNG/my-example\",\"完整的dotnet.yaml文件可以查看：https://gitee.com/AZRNG/my-example/blob/master/.github/workflows/dotnet.yml\"]},\"1071\":{\"h\":\"常见目录文件命令\",\"t\":[\"Linux 下以一个多级树状结构来组织目录和文件的， 最顶层的就是根目录， 使用 ** 表示， 目录、文件都在根目录下。 对 Linux 的操作归根结底就是对 Linux 文件的操作， 所以我们需要掌握常见的对 Linux 文件目录操作的命令。\",\"目录是 Linux 的基本组成部分， 目录管理包括目录的复制、删除、修改等操作。Linux 最顶层目录就是根目录 /。\"]},\"1072\":{\"h\":\"绝对路径和相对路径\",\"t\":[\"绝对路径： 一定是由根目录 / 开头， 如 /etc/yum.conf\",\"相对路径：当前路径的相对位置， 如当前目录 /etc， 目录下 yum.conf 可以表示为 **./**yum.conf\",\". 或 ./ 表示当前路径\",\".. 或 ../ 表示上一级目录\",\"图片\"]},\"1073\":{\"h\":\"切换工作目录 - cd\",\"t\":[\"cd - change directory 的缩写， cd 命令用于切换工作目录。我们操作某个文件之前是需要先切换到对应的目录的。\",\"格式： cd [绝对路径或相对路径]\",\"如果不带参数， 回到用户的主目录\",\"img\"]},\"1074\":{\"h\":\"显示当前工作目录 - pwd\",\"t\":[\"pwd - print working directory 的缩写， pwd 命令用于显示当前工作目录的完整路径。\",\"格式： pwd [-P]\",\"-P： 显示真实路径， 而非链接路径， 链接路径类似 Windows 中的快捷方式\",\"man pwd： 查看 pwd 命令的帮助信息\",\"图片\",\"查看当前工作目录文件 - ls\",\"ls - list 的缩写， ls 命令是最常用的命令， 默认情况下用于查看当前工作目录下的清单。\",\"格式：\",\"​ ls [-aAdlfFrSt] 目录名称\",\"​ ls [--color={never,auto,always}] 目录名称\",\"​ ls [--full-time] 目录名称\",\"-a： 列出全部文件， 包含隐藏文件（以 . 开头的）\",\"-A： 列出全部文件， 包含隐藏文件（以 . 开头的）， 但不包括 . 和 .. 这两个目录\",\"-d： 仅列出目录， 而不列出目录下文件\",\"-l： 列出详情： 文件类型、文件权限、所有者、组等信息\",\"-f： 直接列出结果， 而不进行排序\",\"-F： 在每个输出项后面追加文件的类型标识符\",\"当文件为普通文件， 不输出任何标识符\",\"*： 表示具有可执行权限的普通文件\",\"/： 表示目录\",\"@： 表示符号链接\",\"I： 表示命令管道 FIFO\",\"=： 表示 sockets 套接字\",\"r： 将排序结果方向输出\",\"S：以文件大小排序，而不是文件名\",\"t： 以时间排序，而不是文件名\",\"--color=never | always | auto： 列出时 不 | 总是 | 默认 高亮显示\",\"--full-time： 列出完整日期时间模式\",\"img\"]},\"1075\":{\"h\":\"创建目录 - mkdir\",\"t\":[\"mkdir - make directory 的缩写， mkdir 命令用于创建指定目录， 创建目录时当前用户对需要操作的目录有读写权限， 如果目录已存在， 会提示报错并退出， 也可以创建多级目录。\",\"格式： mkdir [-mp] 目录名称\",\"-m： 在创建目录时直接设置文件权限， 而不是使用默认权限\",\"-p： 创建多级目录， 一次创建多级目录\",\"man mkdir： 查看 mkdir 命令的帮助信息\",\"使用 -p 参数创建多级目录：\",\"图片\",\"使用 -m 设置文件权限， 文件权限下面会讲到：\",\"图片\"]},\"1076\":{\"h\":\"删除空目录 - rmdir\",\"t\":[\"rmdir - remove directory 的缩写， rmdir 命令用于删除指定目录， 删除的目录必须为空目录或多级空目录。\",\"格式： rmdir [-p] 目录名称\",\"如果目录内存在文件， 则无法删除\",\"-p： 连同删除多级目录\",\"man rmdir： 查看 rmdir 命令的帮助信息\",\"图片\",\"文件是 Linux 的基本组成部分， 文件管理包括文件的复制、删除、修改、移动、复制等操作。\"]},\"1077\":{\"h\":\"创建文件或修改文件时间 - touch\",\"t\":[\"touch 命令可以创建一个新文件， 这是常用的操作， touch 命令还可以修改目录或文件的时间， 文件主要有 3 个变动时间。 ls 命令显示的是文件的 mtime：\",\"mtime：modification time， 当文件内容发生变更， mtime 会更新\",\"ctime：status time， 当文件状态发生改变（如权限或属性被更改），ctime 会更新\",\"atime：access time， 当文件内容被读取（如使用cat读取），atime 会更新\",\"格式： touch 【-acdmt】 文件名\",\"-a：仅修改 atime\",\"-c：仅修改 atime\",\"-m：仅修改 mtime\",\"-d：后接欲修改的日期，也可以使用 --date=\\\"日期或时间\\\"\",\"-t：后接欲修改的时间，格式为【YYYYMMDDhhmm】\",\"先创建一个文件 data.cfg，再修改文件时间：\",\"图片\",\"先编辑文件 data.cfg 内容，mtime 会更改，载修改文件时间为 2 天前：\",\"图片\"]},\"1078\":{\"h\":\"删除目录或文件 - rm\",\"t\":[\"rm - remove 的缩写， rm 命令可以删除不需要的目录或文件， 并且支持通配符：\",\"目录中存在其他文件会递归删除\",\"删除软链接只是删除链接， 真实文件或目录不会被删除\",\"格式： rm [-fir] 文件或目录\",\"如不加任何参数， 则不能删除目录\",\"-f： force 的意思， 忽略不存在的文件， 不会出现警告信息\",\"-r： 递归删除，将子目录及子目录中文件删除\",\"-i： 互动模式，在删除前会询问\",\"img\",\"使用 rm 命令一定要小心， 文件一旦被删除就不能恢复了。尤其网上的删除跑路段子： rm -rf /\"]},\"1079\":{\"h\":\"复制文件 - cp\",\"t\":[\"cp - copy 的缩写， cp 命令用来复制文件或目录。\",\"格式：\",\"cp [-adfiprus] 来源(source) 目标(destination)\",\"cp [options] source1 source2 source3 .... directory\",\"当复制多个文件时， 目标参数必须为已经存在的目录， 否则报错\",\"cp 命令默认不能复制目录， 必须使用 -R 选项\",\"-a：相当于 -pdr 的意思，通常在复制目录时使用， 它保留链接、文件属性，并复制目录下的所有内容\",\"-f：强制（force），如果目标文件已存在，不会询问直接覆盖\",\"-i：若目标已经存在时，在覆盖时会先提示询问\",\"-r：递归持续复制，用於目录的复制行为；(常用)\",\"-p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中\",\"-d：若来源为软链接文件，则复制软链接而非文件本身\",\"-u：若 目标 比 源 旧才更新\",\"-s： 并不是复制文件本身， 而是创建当前问阿金的软链接\",\"将 /soft/mongodb-linux-x86_64-4.0.3.tgz 复制到 /usr/local 目录下\",\"图片\"]},\"1080\":{\"h\":\"移动文件 - mv\",\"t\":[\"mv - move 的缩写， mv 命令可以移动文件或目录到另一个文件后目录， 还可以将目录或文件重命名\",\"格式：\",\"mv [-fiu] source *directory*\",\"mv [options] source1 source2 source3 .... directory\",\"-f ：强制，如果目标文件已存在，不会询问直接覆盖\",\"-i：如果目标文件已存在，会询问是否覆盖\",\"-u：如果目标文件已存在，是否 update\",\"最后一个参数 directory 是目录并且该目录存在\",\"img\",\"Linux 是一种多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。\",\"上面是有 mkdir -m 命令可以直接创建目录时设置文件的权限， 下面姐介绍一下文件权限。\"]},\"1081\":{\"h\":\"文件权限\",\"t\":[\"Linux 中可以使用 ll 或者 ls –l 命令来显示一个文件的属性以及文件所属的用户和组，如：\",\"ls - l\",\"图片\",\"从上图可知，文件权限是类似 【lrwxrwxrwx】的 10 个字符表示的，它们每一位都是有含义的， 位数以 0 - 9 表示：\",\"文件类型\",\"属主权限\",\"属组权限\",\"其他用户权限\",\"0\",\"1 ，2，3\",\"4，5，6，\",\"7，8，9\",\"Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限：\",\"属主：文件的创建者，对文件具有所有权\",\"属组：跟文件所有者在同一组的用户\",\"其他：跟文件所有者不在同一组的用户\",\"0 位表示文件类型， 不同的字符表示不同的文件类型，有下面几种：\",\"d：表示是一个目录，如上图中的 boot\",\"-：表示是一个文件\",\"l：表示是一个链接文件（link file），类似 Windows 中的快捷方式\",\"b：表示是设备文件里可供储存的接口设备（可随机存取装置）\",\"c：表示是设备文件里串行端口设备，如键盘、鼠标\",\"1 - 9 以 3 个为一组， 每一组为 rwx 三个参数的组合，rwx 的位置是不变的：\",\"r：表示可读 - read\",\"w：表示可写入 - write\",\"x：表示可执行 - execute\",\"-：如果没有权限，就会出现 - 号\",\"以一个例子说明：\",\"图片\",\"-rw-r--r--\",\"0 位：表示这是一个文件\",\"123 位：表示文件所有者可读、可写\",\"456 位：表示同组用户只读\",\"789 位：表示其他用户只读\",\"文件权限对一个系统的安全是很重要的，那怎么修改文件权限？\"]},\"1082\":{\"h\":\"更改文件属组 - chgrp\",\"t\":[\"chgrp：change group 的缩写，修改文件属于哪一个组，Linux 群组名都记录在 /etc/group 文件中，要改变的群组名必须在 /etc/group 文件中，否则会显示错误\",\"比如修改文件 f 的属组修改成 群组 A，则群组 A 名称必须记录在 /etc/group 文件中。\",\"格式：chgrp [-R] 属组名 文件名\",\"-R：递归更改文件属组。在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改\"]},\"1083\":{\"h\":\"更改文件属主 - chown\",\"t\":[\"chown：change owner的缩写，修改文件的所有者，同时也可以修改文件的属组。\",\"格式：\",\"chown [–R] 属主名 文件名\",\"chown [-R] 属主名：属组名 文件名\",\"-R：递归更改文件属主或属组。在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改\"]},\"1084\":{\"h\":\"以数字形式修改文件权限 - chmod\",\"t\":[\"格式： chmod [-R] xyz 文件或目录\",\"xyz : 数字类型的权限属性，为 rwx 属性数值的相加。\",\"-R : 递归更改\",\"【rwx】权限数字对照表：\",\"r\",\"4\",\"w\",\"2\",\"x\",\"1\",\"-\",\"0\",\"权限计算：\",\"每种身份（owner、group、other）均有各自的【rwx】权限，每种身份的权限数字需要【rwx】相加\",\"如权限【-rwxrwx---】分数则是：\",\"owner = rwz = 4 + 2 + 1 = 7\",\"group = rwz = 4 + 2 + 1 = 7\",\"other = --- = 0 + 0 + 0 = 0\",\"所以变更权限语句为：chmod 770 test\"]},\"1085\":{\"h\":\"以字符形式修改文件权限 - chmod\",\"t\":[\"三种身份（owner、group、other）字符对照表：\",\"owner/user\",\"u\",\"group\",\"g\",\"other\",\"0\",\"all\",\"a\",\"权限计算：\",\"图片\",\"如将文件权限设置为：-rwxr-xr--\",\"语句：chmod u=rwx,g=rx,o=r test1\",\"如拿掉全部人的可执行权限：chmod a-x test1\",\"Linux 目录和文件基本常见命令介绍到此。\",\"本文转载自微信公众号[代码国度]\"]},\"1086\":{\"h\":\"命令\"},\"1087\":{\"h\":\"目录\"},\"1088\":{\"h\":\"ls\",\"t\":[\"查看目录下文件\",\"-- 查看当前目录文件 ls -- 查看指定目录文件 ls /var/tmp \"]},\"1089\":{\"h\":\"mkdir\",\"t\":[\"创建目录\",\"-- 创建目录 mkdir testFolder \"]},\"1090\":{\"h\":\"mv\",\"t\":[\"移动目录或者文件\",\"-- 移动一个文件夹到指定目录 mv testFolder /var/tmp -- 移动文件到指定目录 mv aa.txt /var/tmp \"]},\"1091\":{\"h\":\"文件\"},\"1092\":{\"h\":\"touch\",\"t\":[\"-- 创建文件 touch ~/testFile touch testFile \"]},\"1093\":{\"h\":\"cp\",\"t\":[\"复制文件\",\"-- 复制当前目录文件到当前目录 cp testFile testNewFile \"]},\"1094\":{\"h\":\"rm\",\"t\":[\"删除文件，输入y后回车确认删除\",\"-- 删除当前目录文件 rm testFile -- 删除目录 rm -f testFolder \"]},\"1095\":{\"h\":\"cat\",\"t\":[\"查看文件内容\",\"-- 查看操作历史文件的内容 cat ~/.bash_history \"]},\"1096\":{\"h\":\"grep\",\"t\":[\"过滤文件\",\"-- 过滤出 /etc/passwd 文件中包含 root 的记录 grep 'root' /etc/passwd --递归地过滤出 /var/log/ 目录中包含 linux 的记录 grep -r 'linux' /var/log/ \",\"Linux 中管道的作用是将上一个命令的输出作为下一个命令的输入, 像 pipe 一样将各个命令串联起来执行, 管道的操作符是 |\",\"-- 可以将 cat 和 grep 两个命令用管道组合在一起 cat /etc/passwd | grep 'root' -- 过滤出 /etc 目录中名字包含 ssh 的目录(不包括子目录) ls /etc | grep 'ssh' \",\"可以使用 > 或 < 将命令的输出重定向到一个文件中\",\"-- 将hello world 输入到一个txt中 echo 'Hello World' > ~/test.txt \"]},\"1097\":{\"h\":\"IP\"},\"1098\":{\"h\":\"ping\",\"t\":[\"检查是否联通\",\"--对 cloud.tencent.com 发送 4 个 ping 包, 检查与其是否联通 ping -c 4 cloud.tencent.com \"]},\"1099\":{\"h\":\"netstat\",\"t\":[\"显示各种网络相关信息，如网络连接、路由表接口状态等\",\"-- 列出所有处于监听状态的tcp端口 netstat -lt --查看所有的端口信息, 包括 PID 和进程名称 netstat -tulpn \"]},\"1100\":{\"h\":\"进程\"},\"1101\":{\"h\":\"ps\",\"t\":[\"获取进程信息\",\"-- 获取当前进程信息 ps aux -- 过滤得到当前系统中的 ssh 进程信息 ps aux | grep 'ssh' \"]},\"1102\":{\"h\":\"Hyper-v安装centos7\",\"t\":[\"可以让你在你的电脑上以虚拟机的形式运行多个操作系统(至于为什么选择这个，主要是系统已经自带了，所以能不装其他我就先不装其他试试)\",\"Hyper-V 可用于 64 位 Windows 10 专业版、企业版和教育版。 它无法用于家庭版。\"]},\"1103\":{\"h\":\"下载系统镜像\",\"t\":[\"去阿里云下载系统：http://mirrors.aliyun.com/centos/7/isos/x86_64/\",\"img\",\"建议下载这个版本，900M最小安装。DVD版本较大，但是里面会有很多东西。\"]},\"1104\":{\"h\":\"启用Hyper-v\",\"t\":[\"在电脑左下角搜索控制面板\",\"img\",\"选择程序，然后点击启用或者关闭Windows功能\",\"img\",\"img\",\"勾选应用后等待结束后重启系统\",\"img\",\"在重启结束后可以在电脑上搜索到Hyper-v管理器\",\"img\",\"下面的步骤就是使用该工具来完成的。\",\"打开Hyper-v管理器\",\"img\",\"img\",\"然后在这个界面名称具体规定，外部网络选择参考网络连接里面\",\"img\",\"img\",\"右键新建虚拟机\",\"img\",\"img\",\"修改一个有意义的名称和设置虚拟机的存储位置(保证有一定的空间)\",\"img\",\"选择虚拟机的代数，直接下一步\",\"img\",\"分配内存大小()\",\"img\",\"根据个人情况进行设置，如果你虚拟机里面要跑的东西比较大，那么就需要配置大一点\",\"配置网络,下拉列表选择我们配置好的，然后下一步\",\"img\",\"连接虚拟硬盘\",\"img\",\"安装选项选择镜像的位置\",\"img\",\"再次确认我们的安装信息，然后点击完成\",\"img\",\"查看已经创建的虚拟机\",\"img\",\"选中点击右侧的启动，然后启动开后点击连接\",\"img\",\"启动虚拟机，然后连接后，操作键盘选择Install CentOS7，然后输入enter\",\"img\",\"进入安装界面，选择安装语言\",\"img\",\"配置安装位置和网络\",\"img\",\"点击安装位置\",\"img\",\"配置网络和主机名\",\"img\",\"img\",\"然后点击安装\",\"img\",\"设置root密码，这里根据个人情况设置简单或者复杂的密码\",\"img\",\"这里就不另外创建用户，直接使用root\",\"img\",\"安装成功后重启\",\"img\",\"点击enter进入系统，输入用户名root，密码就是我们刚才设置的密码\",\"img\",\"输入ls命令查看\",\"img\",\"尝试ping下百度看是否可以访问外网\",\"ping baidu.com \",\"img\"]},\"1105\":{\"h\":\"查看网络配置信息\",\"t\":[\"ip addr \",\"这个时候的ip是动态分配的ip地址\",\"img\",\"如果使用默认的界面不习惯，可以使用第三方终端工具(MovaXterm、shell)进行连接。\"]},\"1106\":{\"h\":\"MovaXterm基本使用\",\"t\":[\"推荐使用MovaXterm，下载地址**：**https://mobaxterm.mobatek.net/ ，如果有需要可以去网上找汉化版。\",\"下面简单描述下如何使用，打开MovaXterm工具，新建会话\",\"img\",\"选择会话类型(支持多种)，这里我们选择SSH\",\"img\",\"img\",\"点击好的，然后输入密码进行连接。\",\"img\",\"上面演示的软件是我学习使用的\"]},\"1107\":{\"h\":\"设置静态IP\",\"t\":[\"进入指定目录修改配置,这个里面放的是网络配置\",\"cd /etc/sysconfig/network-scripts ls \",\"img\",\"使用vm编辑ifcfg-eth0文件\",\"vi ifcfg-eth0 \",\"img\",\"编辑该文件增加或者修改以下配置\",\"vi基本用法：按i进入编辑模式，保存退出先按esc，然后输入:wq\",\"BOOTPROTO=\\\"static\\\" #设置静态ip ONBOOT=\\\"yes\\\" #设置开机自启 IPADDR=192.168.1.8 #分配IP，前三个段要和本机保持一致，后一个段要不一样 NETMASK=255.255.255.0 #和本机保持一致 GATEWAY=192.168.1.1 #和本机保持一致 DNS1=192.168.1.1 #和网关保持一致，不添加无法上外网 \",\"通过cmd查询本机电脑的ip以及子网掩码等\",\"ipconfig \",\"img\",\"修改后如图所示\",\"img\",\"重启网络服务 使以上配置生效\",\"这点我是使用hyper-v自带界面运行的。\",\"service network restart \",\"img\",\"重新查询ip\",\"img\",\"将我们的MovaXterm连接配置修改为我们修改后的ip地址重新连接，并且测试是否可以访问外网\",\"img\",\"然后通过本机去ping下我们的服务器，可以正常访问。\",\"img\",\"到此，静态ip设置结束。\"]},\"1108\":{\"h\":\"防火墙设置\",\"t\":[\"本文示例目前没有用到以下配置\",\"-- 开启防火墙 systemctl start firewalld -- 查看防火墙状态 systemctl status firewalld -- 开启端口 firewall-cmd --permanent --zone=public --add-port=80/tcp firewall-cmd --permanent --zone=public --add-port=22/tcp firewall-cmd --permanent --zone=public --add-port=21/tcp -- 重启防火墙服务使配置生效 firewall-cmd --reload -- 查看当前开启的端口号 firewall-cmd --list-port \",\"Hyper-v：https://docs.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/about/\"]},\"1109\":{\"h\":\"概述\",\"t\":[\"创建好连接上linux系统\",\"然后我们需要先添加yum源，命令\",\"rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm \",\"然后升级所有包的同时也升级软件和系统内核\",\"命令：yum update\",\"或者命令：yum upgrade\",\"centos 安装netstat\",\"yum install net-tools \",\"安装vim和yum\",\"容器内安装的命令\",\"apt-get update apt-get install vim -y apt-get install yum -y 快速添加一个yum源 yum-config-manager --add-repo http://mirrors.aliyun.com/repo/Centos-7.repo 如果提示没有yum-config-manager命令，执行apt-get -y install yum-utils 安装即可，然后再执行一次上面的命令 \",\"对防火墙规则进行保存时候提示错误\",\"保存命令：service iptables save\",\"报错：The service command supports only basic LSB actions (start, stop, restart, try-restart, reload, force-reload, status). For other actions, please try to use systemctl.\",\"解决方法：\",\"systemctl stop firewalld 关闭防火墙\",\"yum install iptables-services 安装或更新服务\",\"再使用systemctl enable iptables 启动iptables\",\"最后 systemctl start iptables 打开iptables\",\"再执行service iptables save\",\"3.重启iptables服务：\",\"service iptables restart\",\"执行完毕之后/etc/syscofig/iptables文件就有了\",\"关闭防火墙\",\"查看防火墙状态\",\"firewall-cmd --state\",\"停止firewall\",\"systemctl stop firewalld.service\",\"禁止firewall开机启动\",\"systemctl disable firewalld.service\",\"常用命令\",\"移除指定端口： firewall-cmd --permanent --remove-port=5000/tcp -- 开启端口 firewall-cmd --permanent --zone=public --add-port=5000/tcp -- 重启防火墙服务使配置生效 firewall-cmd --reload -- 查看当前开启的端口号 firewall-cmd --list-port -- 停止防火墙 systemctl stop firewalld -- 查看防火墙状态 systemctl status firewalld -- 启动防火墙 systemctl start firewalld \",\"进入要修改权限的文件夹所在目录\",\"sudo chmod -R 777 文件夹名\",\"注意：\",\"【注】 -R 是指级联应用到目录里的所有子目录和文件\",\"777 是所有用户都拥有最高权限\",\"常用linux命令 https://www.cnblogs.com/pengyunjing/p/10441944.html\",\"关于阿里云centos服务器的一些安全性设置 https://www.centoschina.cn/safe/centossafe/9488.html\",\"日常必备的16个linux命令：https://mp.weixin.qq.com/s/lLtbR3BihvOfVJv5VBj0AQ\"]},\"1110\":{\"h\":\"Vm安装centos\",\"t\":[\"工欲善其事， 必先利其器。我的本机操作系统是 Windows， 准备在 VMWare 虚拟机上安装 CentOS，所以需要先下载安装 VMware， 我下载的版本是 VMware Workstation Pro 14.1。\",\"方法一 - 官网下载：进入下载页面， 选择对应的版本和对应的系统，点击【转至下载】\",\"官网下载地址：https://my.vmware.com/cn/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/14_0\",\"图片\",\"方法二 - 百度云下载：如果觉得去官网下载很麻烦，也可以下载我分享的 VMware安装包\",\"链接：https://pan.baidu.com/s/19_fq_BJMb6rbNJ8s0HVMZA\",\"提取码：smop\",\"复制这段内容后打开百度网盘手机App，操作更方便哦\",\"VMware 安装包下载完成后， 双击安装包就会弹出安装界面， 安装一般软件安装流程， 一直点击下一步就可安装成功。\",\"图片\",\"安装过程中需要输入注册码， 这里提供一个可用的注册码给大家， 如果不可用，百度一般都可搜索到相应版本的注册码\",\"注册码：YC592-8VF55-M81AZ-FWW5T-WVRV0\",\"图片\",\"VMware 安装成功后， 需要先下载 CentOS 系统镜像， 然后在 VMware 虚拟机上安装。\",\"官网下载地址： https://www.centos.org/download/ ，官网提供了多种格式的镜像文件下载， 推荐选择【**DVD ISO 】**版本下载。\",\"Minimal ISO ： 精简版镜像， CentOS 系统最小安装包， 只有命令行界面\",\"DVD ISO： 普通光盘完整安装版镜像， 可以安装图形界面， 包含大量的常用软件\",\"Everything ISO： 对 DVD ISO 软件进行补充， 集成了所有所需的软件\",\"img\",\"选择 【DVD ISO】， 进入 CentOS 镜像列表，选择其中一个链接点击下载， 当然最好选择所处区域站点的镜像， 获取资源的速度比较快。\",\"图片\",\"我选择下载 CentOS 7： CentOS-7-x86_64-DVD-1804.iso， 下载完成后镜像文件大小为 4G 多。\",\"图片\",\"CentOS 系统镜像下载完成后， 使用 VMware 安装系统前需要先创建一个虚拟机，然后在创建的虚拟机上安装 CentOS 系统。 打开 VMware 软件， 点击【创建新的虚拟机】。\",\"图片\",\"进行虚拟机新建引导， 选择【自定义（高级）】， 点击【下一步】。\",\"自定义选项可以自定义虚拟机属性 ，也可以直接选择典型选项， 使用默认属性。\",\"图片\",\"我安装的是 VMware 14 版本，所以硬件兼容性选择【Workstation 14.x】, 然后点击【下一步】。\",\"硬件兼容性决定了虚拟机的硬件限制， 后面自定义的虚拟机属性不能超过这些限制。\",\"图片\",\"选择【稍后安装操作系统】，然后点击【下一步】。\",\"我们先创建好虚拟机，定义好属性， 就好像未拆的笔记本， 此时只是一台裸机， 硬盘还是空白的， 只有安装系统后才能使用。\",\"图片\",\"系统选择【Linux】, 版本选择【CentOS 7 64 位】， 然后点击【下一步】。\",\"选择 Linux： 我安装的是 CentOS 系统， 是属于 Linux 的一种\",\"选择 CentOS 7： 下载的版本是 CentOS 7，版本要相互对应\",\"64 位： 我的主机是 64 位的， 位数要相互对应\",\"图片\",\"输入虚拟机名称以及虚拟机安装的位置，点击【下一步】。\",\"虚拟机名称： VMware 可以创建多个虚拟机， 命名用以区分\",\"虚拟机位置： 虚拟机安装在哪儿\",\"图片\",\"根据主机的处理器配置以及性能考虑， 选择合适的数量，如果设置的超过 CPU 配置会有提示 。 比如我的主机 CPU 是双核 4 线程（可以查询自己主机配置），处理器数量选择 1， 每个处理器的内核数量选择 2， 然后点击【下一步】。\",\"处理器数量： 指的是 CPU 的核数， 而不是 CPU 的颗数\",\"每个处理器的内核数量： 指的是 CPU 的线程数， 而不是 CPU 的核数\",\"处理器内核总数：上两个选项的乘积\",\"图片\",\"设置虚拟机内存大小为 4G， 然后点击【下一步】。\",\"设置的虚拟机内存是受主机内存限制的， 比如我的主机内存为 8G，为了体验和性能， 设置虚拟机内存为 4G。\",\"图片\",\"选择【使用网络地址转换（NAT）】， 然后点击【下一步】。\",\"这是设置虚拟机访问网络的方式， 后面会介绍。\",\"img\",\"选择推荐的【LSI Logic】， 然后点击【下一步】。\",\"图片\",\"选择推荐的【SCSI】， 然后点击【下一步】。\",\"上一步 IO 控制器选择了【LSI Logic】， 【LSI Logic 】适配器已提高性能，与通用 SCSI 设备结合使用效果更好。\",\"图片\",\"选择【创建新虚拟磁盘】，然后点击【下一步】。\",\"虚拟磁盘相当于主机的硬盘， 系统安装在虚拟磁盘中 。因为我是创建一个新的虚拟机， 所以选择创建新的虚拟磁盘。\",\"图片\",\"设置虚拟机磁盘容量， 我设置 80G， 选择【将虚拟磁盘存储为单个文件】\",\"虚拟磁盘由一个或多个虚拟磁盘文件构成， 虚拟磁盘文件用于存储虚拟机硬盘驱动器的内容， 文件中几乎所有的内容都是虚拟机数据。\",\"图片\",\"选择虚拟磁盘的存储位置， 然后点击【下一步】。\",\"由于上一步选择将虚拟磁盘存储为单个文件， 所以指定的就是虚拟磁盘的存储位置。\",\"图片\",\"上述自定义设置完成， 虚拟机属性就定义好了，点击【完成】。\",\"图片\",\"虚拟机创建完成， 还可以进一步对虚拟机进行设置， 点击【编辑虚拟机设置】。\",\"图片\",\"设置系统镜像， 使用 ISO 系统镜像安装系统， 镜像文件位置为前面下载的 CentOS-7-x86_64-DVD-1804.iso 的存储路径。\",\"img\",\"虚拟机创建配置完成， 设置完系统镜像， 就可以启动虚拟机， 虚拟机就会引导安装 CentOS 系统了。点击【开启此虚拟机】\",\"图片\",\"进入 CentOS 安装界面， 选择【install CentOS 7】，点击【Enter】键。\",\"鼠标点击焦点进入安装界面\",\"点击【Ctrl + Alt】返回主页面\",\"↑ 键向上移动选择\",\"↓ 键向下移动选择\",\"图片\",\"进入系统设置， 选择【中文】， 点击【继续】。当然你也可以根据需要选择其他语言。\",\"img\",\"设置时区， 根据自己所处时区选择， 我选择上海时间，点击【完成】。\",\"图片\",\"设置语言，根据需要选择，我选择【简体中文】， 点击【完成】。\",\"图片\",\"设置键盘布局， 设置中英文切换的快捷键， 我选择【Ctrl + Shift】， 点击【完成】。\",\"图片\",\"设置安装源， 前面设置使用 ISO 镜像文件， 这里选择【自动检测到的安装介质】， 点击【完成】。\",\"图片\",\"设置系统安装方式， 我选择【最小安装】， 点击【完成】。\",\"最小安装： 安装完成后只有命令行， 通过指令操作\",\"GNOME： 安装完成后是图形化界面， 类似 Windows\",\"图片\",\"设置主机名【sam】， 网络后面会设置， 点击【完成】。\",\"图片\",\"准备磁盘分区， 选择【我要配置分区】， 点击【完成】。\",\"创建虚拟机分配了一个虚拟磁盘， 现在为了便于管理，对磁盘进行分区， 类似于 Windows 系统中硬盘被分成了 C盘、D盘 ...\",\"图片\",\"点击【+】新建挂载点，挂载点就相当于 Windows 系统中的盘符。\",\"基本分区规划：\",\"/boot： 引导分区，建议 300 - 500M，设备类型为标准分区， 文件系统为 XFS\",\"swap：交换区， 设备类型为标准分区， 文件系统为 swap， 一般为内存的 2 倍\",\"/：根分区， 系统的起点， 设备类型为 LVM， 文件系统为 XFS\",\"图片\",\"点击【+】新建 /boot 挂载点， 容量 500 M， 设备类型为标准分区， 文件系统为 XFS。\",\"创建一个 500M 的分区挂载到 /boot 下面， 分区内的文件系统为 XFS， 主要用来存放系统引导时使用的文件。\",\"图片\",\"img\",\"点击【+】新建 /swap 挂载点， 容量 4096M， 设备类型为标准分区， 文件系统为 swap。\",\"swap 是磁盘仿真成为内存，一旦服务器内存不够，操作系统可在swap暂存一些内存中放不下的东西\",\"img\",\"图片\",\"点击【+】新建 / 挂载点， 容量 40960M， 设备类型为 LVM， 文件系统为 XFS。\",\"/ 表示根分区， 这个目录是系统的起点， 可以将虚拟磁盘剩余空间都分到此分区， 此时分区包含了 home、配置文件、数据文件等目录\",\"图片\",\"图片\",\"你还可以继续创建挂载点， 更精确的进行数据隔离， 全部创建完成后， 点击【完成】\",\"img\",\"确认自定义的分区， 点击【接受更改】。\",\"图片\",\"执行安装， 点击【ROOT 密码】\",\"图片\",\"root 账户是管理员， 设置一个密码， 保存好， 别忘记了。\",\"img\",\"点击【创建用户】， 不勾选【将此用户做为管理员】， 创建一个非管理用户，输入用户名， 设置密码。\",\"图片\",\"系统安装完成， 点击【重启】。\",\"图片\",\"重启完成， 选择第一个， 点击【Enter】键启动系统。\",\"图片\",\"使用 root 账户登录， 输入 root 密码\",\"第一行：Linux 系统名称和版本\",\"第二行：Linux 内核版本， 目前这个主机的硬件等级为 x86_64\",\"第三行：sam 是主机名称，root 是用户名\",\"第四行：输入对应密码\",\"第五行：~ 表示目前所在的目录，root 默认提示符为#，一般用户提示符为 $\",\"图片\",\"至此， CentOS 7 成功安装完成\",\"网络地址转换模式 - NAT\",\"VMware 提供 Bridged（桥接模式）、NAT（网络地址转换模式）、Host-Only（仅主机模式） 3 种网络工作模式， 用于为虚拟机配置虚拟网络连接。我选择使用 NAT 模式， 当然你也可以使用其他模式。\",\"如果你的网络 ip 资源紧缺， 但是又希望你的虚拟机能够联网， 这时候 NAT 模式是最好的选择。 采用 NAT 模式最大的优势是虚拟系统接入互联网非常简单，你不需要进行任何其他的配置，只需要宿主机器能访问互联网即可。\",\"设置虚拟机网络记得先关闭系统， 点击【编辑】， 选择【虚拟机网络编辑】\",\"图片\",\"进入网络编辑界面， 选择【NAT 模式】，NAT 模式， 即网络地址转换模式， 由于主机网卡有网络地址转换功能， NAT 会先将虚拟机在局域网中的 IP 转换为主机 IP，通过主机所在网络来访问外网。\",\"图片\",\"勾选【将主机虚拟机适配器连接到此网络】， NAT 可以实现虚拟机访问外部网络， 但并不能实现与主机的相互访问， 这就要用到虚拟网卡。在 CentOS 系统安装时， 会在主机上安装 2 个虚拟网卡适配器， 其中 VMware Network Adapter VMnet8 就是实现 NAT 模式中虚拟机与主机的相互访问。\",\"图片\",\"去掉勾选【使用本地 DHCP 服务将 IP 地址分配给虚拟机】， VMware 下可以有多个虚拟机， 每个虚拟机都有一个 IP， 如果使用 DHCP 服务， 会设置一个 IP 地址范围， 当虚拟机启动时会在设置的范围内动态分配一个 IP。 因为后面我会使用 XShell 通过虚拟机 IP 远程控制 CentOS，如果每次启动的 IP 都是动态的很不方便， 所以不是 DHCP 服务， 而是使用一个静态 IP。\",\"图片\",\"子网 IP为：192.168.91.0， 子网掩码为： 255.255.255.0， 则虚拟机 IP 范围为 192.168.91.0 - 192.168.91.255， 其中 192.168.91.0 和 192.168.91.255 有其他用途（广播）， 所以其他的都可以设置。\",\"点击【NAT 设置】， 设置网关 IP 为 192.168.91.2， 点击【添加】， 设置当前虚拟机的 ip 为 192.168.91.3， 主机就可以通过此 IP 访问虚拟机。\",\"图片\",\"图片\",\"虚拟机网络设置完成，点击【确定】。\",\"虚拟机和主机的相互访问是通过主机网络连接中的 VMware Network Adapter VMnet8 虚拟网卡来实现的， 所以虚拟网卡的 IP 和虚拟机 IP 应属于同一网段， 子网掩码和网关应该一致。\",\"图片\",\"点击【 VMware Network Adapter VMnet8】， 右键属性， 选择【Internet 协议版本 4】， 勾选手动设置 IP 地址：\",\"IP 地址： 192.168.91.1， 与虚拟机网段一致\",\"子网掩码、默认网关和 DNS 跟虚拟机保持一致\",\"图片\",\"如果虚拟机和主机相互无法访问， 不妨看一下 VMware Network Adapter VMnet8 虚拟网卡是否没有设置 IP。\",\"虚拟机网络配置完成， 启动系统， 设置虚拟机静态 IP， 编辑网卡配置文件， CentOS 7 命令：\",\"vi /etc/sysconfig/network-scripts/ifcfg-ens33\",\"编辑网卡配置文件：vi /etc/sysconfig/network-scripts/ifcfg-ens33，进入命令模式\",\"在命令模式点击按键【i】，进入编辑模式，修改：\",\"修改协议类型：BOOTPROTO=static\",\"修改启动时激活：ONBOOT=yes\",\"新增静态网络IP地址：IPADDR=192.168.91.3\",\"新增子网掩码：NETMASK=255.255.255.0，跟上面 NAT 设置中一致\",\"新增网关：GATEWAY=192.168.91.2，跟上面 NAT 设置中一\",\"新增DNS1：DNS1=192.168.1.1\",\"新增DNS2：DNS2=192.168.0.2\",\"编辑完成， 在编辑模式点击按键【Esc】，退出进入命令模式，输入【:wq】保存并退出命令模式\",\"图片\",\"网卡配置文件编辑完成， 需要重启网卡才能生效。 CentOS 7 重启网卡命令：\",\"systemctl restart network\",\"虚拟机网络设置完成， CentOS 7 网卡配置文件修改完成， 现在来测试一下虚拟机是否能访问外网以及虚拟机和主机的相互访问。\"]},\"1111\":{\"h\":\"测试虚拟机访问外网\",\"t\":[\"虚拟机是通过主机网络访问外网， 通过 ping 命令可以测试虚拟机是否可以访问外网， 比如测试虚拟机是否能 ping 通百度。 点击【Win + R】， 输入【cmd】， 进入控制台， 输入：\",\"ping -c 4 www.baidu.com\",\"ping -c n 是输出 n 行， 避免一直输出， 如果没有使用 -c， 会一直输出， 点击【Ctrl+c】即可结束输出\",\"图片\",\"由于笔记本可以携带， 家里和公司的 DSN 是不同的， ping 外网是不通的， 这时需要查询一下家里或公司网络 DNS， 按上面的步骤修改网卡配置文件中的 DNS， 修改完成就可 ping 通了。\",\"图片\",\"点击【Win + R】， 输入【cmd】， 进入控制台， 查询 DNS 命令：\",\"ipconfig /all\",\"图片\"]},\"1112\":{\"h\":\"测试虚拟机访问主机\",\"t\":[\"首先查询主机 ip， 点击【Win+R】， 输入【cmd】，进入控制台， 在命令行输入 ipconfig /all，查询主机ip为: 192.168.0.127\",\"图片\",\"测试虚拟机访问主机：ping -c 4 192.168.0.127\",\"图片\"]},\"1113\":{\"h\":\"测试主机访问虚拟机\",\"t\":[\"上面我设置的虚拟机静态 IP 为：192.168.91.3， 点击【Win + R】， 输入【cmd】， 执行： ping 192.168.91.3\",\"图片\",\"至此， 虚拟机网络设置介绍完成， 实现了虚拟机访问外网以及虚拟机和主机之间的相互访问。\",\"本文转载自微信公众号[代码国度]\"]},\"1114\":{\"h\":\"概述\",\"t\":[\"是一个linux操作系统\",\"系统下载地址：https://releases.ubuntu.com/jammy/ (根据需要安装界面版本或者无界面版本)\",\"或者下载阿里云的系统镜像：https://mirrors.aliyun.com/ubuntu-releases/focal/\",\"镜像源：https://mirrors.tuna.tsinghua.edu.cn/ubuntu/\"]},\"1115\":{\"h\":\"系统命令\",\"t\":[\"//查询发行版本号 lsb_release -a // 检查系统更新 sudo apt update \"]},\"1116\":{\"h\":\"目录操作\",\"t\":[\"-- 创建文件 touch 文件名 \",\"vm安装教程：https://blog.csdn.net/qq_41004932/article/details/124955610\"]},\"1117\":{\"h\":\"包管理服务BaGet\",\"t\":[\"BaGet是一个轻量级的包管理服务。有些时候公司或者个人不希望某一些包进行公开，那么就需要使用私有的包管理服务程序，该服务是用.netcore进行编写的(感谢开发者为社区做出的共享)\",\"Github：https://github.com/loic-sharma/BaGet\",\"官网：https://loic-sharma.github.io/BaGet/\",\"创建配置文件baget.env\",\"# The following config is the API Key used to publish packages. # You should change this to a secret value to secure your server. ApiKey=63edf12c-b70c-45c7-b3ed-f53c9f791e26 # 随机生成，上传包时候使用 Storage__Type=FileSystem Storage__Path=E:\\\\nuget # windows下的写法 Database__Type=Sqlite Database__ConnectionString=Data Source=/var/baget/baget.db Search__Type=Database \",\"在当前目录下执行\",\"# linux docker run -d --name BaGet-nuget -p 9002:80 --env-file baget.env -v \\\"$(pwd)/baget-data:/var/baget\\\" loicsharma/baget:latest # windows docker run -d --name BaGet-nuget -p 9002:80 --env-file baget.env -v \\\"E://nuget//baget-data:/var/baget\\\" loicsharma/baget:latest \"]},\"1118\":{\"h\":\"3.1 访问\",\"t\":[\"通过访问地址： localhost:9002 进入主界面\",\"img\",\"界面和 https://www.nuget.org/ 很相似。下面我们就开始随便创建一个类库然后打包推送\",\"img\",\"右键进行打包，可以通过右键属性进行修改包的参数\"]},\"1119\":{\"h\":\"3.2 推送\",\"t\":[\"官方提供了四种方式\",\"img\",\"下面只对其中我个人习惯的方法做示例\",\"# .net cli dotnet nuget push -s http://localhost:9002/v3/index.json UserLib.1.0.1.nupkg --api-key 63edf12c-b70c-45c7-b3ed-f53c9f791e26 \",\"使用cmd\",\"img\",\"注：\",\"1.包版本要写对\",\"2.命令需要在包的目录下执行\",\"3.需要填写baget.env文件里面的api-key\",\"打开网页端查看\",\"img\"]},\"1120\":{\"h\":\"3.3 引用包\",\"t\":[\"在我们想引用包的项目里面打开包管理器\",\"添加程序包源\",\"img\",\"然后搜索我们的nuget包\",\"img\",\"安装后就可以使用了\",\"轻量NuGet服务—GaGet：https://mp.weixin.qq.com/s/xF5K2U3OhF7I9moGMeOibw\"]},\"1121\":{\"h\":\"Nuget包自动升级\",\"t\":[\"因为公司有自己的私有包服务，但是在发包的过程中，时常会出现忘记升级包版本的情况，导致需要重新发包，就显得比较麻烦，于是就有了实现自动升级包版本的想法。鉴于服务是区分为四个环境的（dev，test，staging和master），所以对应的包版本标识也应该有四个。\",\"预设的环境与包版本标识对应关系如下\",\"环境\",\"包版本标识\",\"举例\",\"dev\",\"alpha\",\"1.0.1-alpha.2108211136\",\"test\",\"beta\",\"1.0.1-beta.2108211137\",\"staging\",\"rc\",\"1.0.1-rc.2108211138\",\"master\",\"release\",\"1.0.1.2\",\"自动升级包版本是实现通过调整csproj文件的配置来实现的。\",\"两个生成版本号的逻辑\",\"版本号由每次编译打包时的当前时间去确定的。\",\"版本号通过传入的参数去确定的。\"]},\"1122\":{\"h\":\"版本号由每次编译打包时的当前时间去确定的\",\"t\":[\"打开需要实现自动升级包版本的项目的csproj文件,调整如下\",\"<Project Sdk=\\\"Microsoft.NET.Sdk\\\"> <PropertyGroup> <TargetFramework>net7.0</TargetFramework> <ImplicitUsings>enable</ImplicitUsings> <Nullable>enable</Nullable> <!--编译时候是否生成nuget包--> <GeneratePackageOnBuild>true</GeneratePackageOnBuild> <!--包环境标识--> <PackageVersion></PackageVersion> </PropertyGroup> <PropertyGroup> <!--版本--> <VersionPrefix>1.0.0</VersionPrefix> <!--VersionSuffix顺序不能乱--> <VersionSuffix Condition=\\\"'$(Package_Version)' == ''\\\">alpha.$([System.DateTime]::Now.ToString(`yyMMddHHmm`))</VersionSuffix> <VersionSuffix Condition=\\\"'$(Package_Version)' != ''\\\">$(Package_Version).$([System.DateTime]::Now.ToString(`yyMMddHHmm`))</VersionSuffix> <VersionSuffix Condition=\\\"'$(Package_Version)' == 'release'\\\" >$([System.DateTime]::UtcNow.Date.Subtract($([System.DateTime]::Parse(\\\"2021-01-01\\\"))).TotalDays)</VersionSuffix> </PropertyGroup> </Project> \",\"其中 VersionPrefix 为包版本的前缀，VersionSuffix 为包版本的后缀，两个组合起来为当前的包版本。Package_Version 为自定义参数，用于辅助生成对应环境的nuget包，不传默认为是alpha，即对应dev环境的包。\",\"每次build都会生成一个新的包,包的环境默认为alpha，版本号为build时的当前时间。如果需要打包其他环境的包可以通过打包命令去生成。命令如下\",\"打包命令为\",\"dotnet build /p:Package_Version=alpha \"]},\"1123\":{\"h\":\"版本号通过传入的参数去确定的\",\"t\":[\"打开需要实现自动升级包版本的项目的csproj文件,调整如下\",\"<Project Sdk=\\\"Microsoft.NET.Sdk\\\"> <PropertyGroup> <TargetFramework>net7.0</TargetFramework> <ImplicitUsings>enable</ImplicitUsings> <Nullable>enable</Nullable> <GeneratePackageOnBuild>true</GeneratePackageOnBuild> <!--编译时是否生成nuget包--> <Package_Version></Package_Version> <!--包环境标识--> <Build_Version></Build_Version> <!--包版本号标识--> </PropertyGroup> <PropertyGroup> <!--版本--> <VersionPrefix>1.0.0</VersionPrefix> <!--VersionSuffix顺序不能乱--> <VersionSuffix Condition=\\\"'$(Package_Version)' == ''\\\">alpha.$([System.DateTime]::Now.ToString(`yyMMddHHmm`))</VersionSuffix> <VersionSuffix Condition=\\\"'$(Package_Version)' != ''\\\">$(Package_Version).$(Build_Version)</VersionSuffix> <VersionSuffix Condition=\\\"'$(Package_Version)'=='release'\\\">$(Build_Version)</VersionSuffix> </PropertyGroup> </Project> \",\"其中 VersionPrefix 为包版本的前缀，VersionSuffix 为包版本的后缀，两个组合起来为当前的包版本。Package_Version 为自定义参数，用于辅助生成对应环境的nuget包，不传默认为是alpha，即对应dev环境的包。Build_Version 为自定义参数，用于指定生成包的最后一位版本号。\",\"每次build都会生成一个新的包,包的环境默认为alpha，版本号为build时的当前时间。如果需要打包其他环境的包或者指定版本号的包可以通过打包命令去生成。命令如下\",\"打包命令为\",\"dotnet build /p:Package_Version=alpha /p:Build_Version=11 \",\"来源: 小猫的代码之旅\\n文章作者: caty\\n文章链接: https://blog.chcaty.cn/2021/08/22/net-core-nuget-bao-ban-ben-zi-dong-sheng-ji-shi-xian/\\n本文章著作权归作者所有，任何形式的转载都请注明出处。\"]},\"1124\":{\"h\":\"Nuget包\"},\"1125\":{\"h\":\"包源\",\"t\":[\"默认的源地址为：https://api.nuget.org/v3/index.json\",\"国内的源：https://nuget.cdn.azure.cn/v3/index.json\"]},\"1126\":{\"h\":\"设置多个目标版本\",\"t\":[\"//单个 <TargetFramework>netstandard2.0</TargetFramework> //多个 <PropertyGroup> <TargetFrameworks>netstandard1.4;net40;net45</TargetFrameworks> </PropertyGroup> //使用一个范围内的版本 <PackageReference Include=\\\"Microsoft.EntityFrameworkCore.Relational\\\" Version=\\\"[5.0.5,6.0.0)\\\" /> \",\"分别对不同的版本引用不同的其他nuget组件\",\"<!-- 引用自：netstandard2.1 框架 --> <ItemGroup Condition=\\\"'$(TargetFramework)'=='netstandard2.1'\\\"> <PackageReference Include=\\\"Microsoft.Extensions.DependencyInjection.Abstractions\\\" Version=\\\"3.1.9\\\" /> <PackageReference Include=\\\"Microsoft.Extensions.Http\\\" Version=\\\"3.1.9\\\" /> <PackageReference Include=\\\"Newtonsoft.Json\\\" Version=\\\"12.0.3\\\" /> </ItemGroup> <!-- 引用自：net5.0 框架 --> <ItemGroup Condition=\\\"'$(TargetFramework)'=='net5.0'\\\"> <PackageReference Include=\\\"Microsoft.Extensions.DependencyInjection.Abstractions\\\" Version=\\\"5.0.0\\\" /> <PackageReference Include=\\\"Microsoft.Extensions.Http\\\" Version=\\\"5.0.0\\\" /> <PackageReference Include=\\\"Newtonsoft.Json\\\" Version=\\\"13.0.1\\\" /> </ItemGroup> \"]},\"1127\":{\"h\":\"针对目标框架编译\",\"t\":[\"在库或者应用中，使用预处理器指令编写条件代码，针对各个目标框架进行编译：\",\"#if NET40 Console.WriteLine(\\\"Target framework: .NET Framework 4.0\\\"); #elif NET45 Console.WriteLine(\\\"Target framework: .NET Framework 4.5\\\"); #else Console.WriteLine(\\\"Target framework: .NET Standard 1.4\\\"); #endif #if !NETSTANDARD2_1 && !NETSTANDARD2_0 xxx #endif \",\".NET 目标框架的预处理器符号的完整列表如下：\",\"目标框架\",\"符号\",\".NET Framework\",\"NETFRAMEWORK, NET48, NET472, NET471, NET47, NET462, NET461, NET46, NET452, NET451, NET45, NET40, NET35, NET20\",\".NET Standard\",\"NETSTANDARD, NETSTANDARD2_1, NETSTANDARD2_0, NETSTANDARD1_6, NETSTANDARD1_5, NETSTANDARD1_4, NETSTANDARD1_3, NETSTANDARD1_2, NETSTANDARD1_1, NETSTANDARD1_0\",\".NET 5（和 .NET Core）\",\"NET5_0, NETCOREAPP, NETCOREAPP3_1, NETCOREAPP3_0, NETCOREAPP2_2, NETCOREAPP2_1, NETCOREAPP2_0, NETCOREAPP1_1, NETCOREAPP1_0\"]},\"1128\":{\"h\":\"兼容老方法\",\"t\":[\"[Obsolete] \"]},\"1129\":{\"h\":\"预发行包\",\"t\":[\"为了支持软件的版本生命周期，NuGet 1.6 及更高版本允许分配预发行包，其中的版本号包括语义化版本控制后缀，如 -alpha、-beta 或 -rc。\",\"-alpha：Alpha 版本，通常用于在制品和试验品\",\"-beta：Beta 版本，通常指可用于下一计划版本的功能完整的版本，但可能包含已知 bug。\",\"-rc：候选发布，通常可能为最终（稳定）版本，除非出现重大 bug。\",\"<PropertyGroup> <PackageVersion>1.0.1-alpha</PackageVersion> </PropertyGroup> \"]},\"1130\":{\"h\":\"语义化版本控制\",\"t\":[\"有一种称为“语义化版本控制”的行业标准。 语义化版本控制是指如何表达你或其他开发人员向库引入的更改类型。 语义化版本控制的工作原理是确保包具有版本号，并且该版本号划分为以下部分：\",\"主版本。 最左边的数字。 例如 1.0.0 中的 1。 此数字发生更改意味着代码可能出现中断性变更。 可能需要重写部分代码。\",\"次要版本。 中间的数字。 例如 1.2.0 中的 2。 此数字发生更改意味着添加了新功能。 你的代码仍可正常工作。 接受更新通常是安全的。\",\"修补程序版本。 最右边的数字。 例如 1.2.3 中的 3。 此数字发生更改意味着应用了一个更改，修复了代码中应正常工作的内容。 接受更新应是安全的。\",\"下表说明了每个版本类型的版本号如何更改：\",\"使用语义化版本控制\",\"类型\",\"发生的更改\",\"主版本\",\"1.0.0 更改为 2.0.0\",\"次要版本\",\"1.1.1 更改为 1.2.0\",\"修补程序版本\",\"1.0.1 更改为 1.0.2\",\"语义化版本：https://semver.org/lang/zh-CN/\"]},\"1131\":{\"h\":\"版本范围\",\"t\":[\"引用包依赖项时，NuGet 支持使用间隔表示法来指定版本范围，汇总如下：\",\"Notation\",\"应用的规则\",\"描述\",\"1.0\",\"x ≥ 1.0\",\"最低版本（包含）\",\"(1.0,)\",\"x > 1.0\",\"最低版本（独占）\",\"[1.0]\",\"x == 1.0\",\"精确的版本匹配\",\"(,1.0]\",\"x ≤ 1.0\",\"最高版本（包含）\",\"(,1.0)\",\"x < 1.0\",\"最高版本（独占）\",\"[1.0,2.0]\",\"1.0 ≤ x ≤ 2.0\",\"精确范围（包含）\",\"(1.0,2.0)\",\"1.0 < x < 2.0\",\"精确范围（独占）\",\"[1.0,2.0)\",\"1.0 ≤ x < 2.0\",\"混合了最低版本（包含）和最高版本（独占）\",\"(1.0)\",\"无效\",\"无效\",\"<PackageReference Include=\\\"Microsoft.EntityFrameworkCore.Relational\\\" Version=\\\"[5.0.5,6.0.0)\\\" /> \"]},\"1132\":{\"h\":\"参考文档\",\"t\":[\"官网地址：https://docs.microsoft.com/zh-cn/nuget/what-is-nuget\"]},\"1133\":{\"h\":\"centos7安装java环境\"},\"1134\":{\"h\":\"1. 下载jdk\",\"t\":[\"官网：https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html\",\"通过wget下载\",\"wget http://download.oracle.com/otn-pub/java/jdk/8u171-b11/512cd62ec5174c3487ac17c61aaa89e8/jdk-8u171-linux-x64.tar.gz?AuthParam=1531155951_4e06a4d17c6c1dbfb8440352e19dd2ae \",\"下载地址已经失效,需要从官网复制\",\"下载后通过命令检查安装包是否符合\",\"ls -lht \",\"img\"]},\"1135\":{\"h\":\"2. 安装\",\"t\":[\"（1）创建安装目录\",\"mkdir /usr/local/java/ \",\"（2）解压至安装目录\",\"tar -zxvf jdk-8u171-linux-x64.tar.gz -C /usr/local/java/ \"]},\"1136\":{\"h\":\"3. 设置环境变量\",\"t\":[\"打开文件\",\"vim /etc/profile \",\"在末尾添加\",\"export JAVA_HOME=/usr/local/java/jdk1.8.0_171 export JRE_HOME=${JAVA_HOME}/jre export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib export PATH=${JAVA_HOME}/bin:$PATH \",\"使环境变量生效\",\"source /etc/profile \",\"添加软链接\",\"ln -s /usr/local/java/jdk1.8.0_171/bin/java /usr/bin/java \",\"检查\",\"java -version \",\"img\"]},\"1137\":{\"h\":\"Aboutme\"},\"1138\":{\"h\":\"Article\"},\"1139\":{\"h\":\"Cloud\"},\"1140\":{\"h\":\"Csharp\"},\"1141\":{\"h\":\"Db\"},\"1142\":{\"h\":\"Dotnetcore\"},\"1143\":{\"h\":\"Interview\"},\"1144\":{\"h\":\"Middleware\"},\"1145\":{\"h\":\"Soft\"},\"1146\":{\"h\":\"Web\"},\"1147\":{\"h\":\"Github\"},\"1148\":{\"h\":\"Pgsql\"},\"1149\":{\"h\":\"D I\"},\"1150\":{\"h\":\"Auth\"},\"1151\":{\"h\":\"Cache\"},\"1152\":{\"h\":\"Config\"},\"1153\":{\"h\":\"Filter\"},\"1154\":{\"h\":\"Ioc\"},\"1155\":{\"h\":\"Loggers\"},\"1156\":{\"h\":\"Maui\"},\"1157\":{\"h\":\"Model\"},\"1158\":{\"h\":\"Openapi\"},\"1159\":{\"h\":\"Orm\"},\"1160\":{\"h\":\"Real Time\"},\"1161\":{\"h\":\"Release\"},\"1162\":{\"h\":\"Service Get\"},\"1163\":{\"h\":\"Small\"},\"1164\":{\"h\":\"Staticfile\"},\"1165\":{\"h\":\"Unit Test\"},\"1166\":{\"h\":\"Webapi\"},\"1167\":{\"h\":\"Winform\"},\"1168\":{\"h\":\"Config Centre\"},\"1169\":{\"h\":\"Grpc\"},\"1170\":{\"h\":\"Office\"},\"1171\":{\"h\":\"Print\"},\"1172\":{\"h\":\"Service Notifications\"},\"1173\":{\"h\":\"Wechat\"},\"1174\":{\"h\":\"Call Interface\"},\"1175\":{\"h\":\"Code Version\"},\"1176\":{\"h\":\"Docker\"},\"1177\":{\"h\":\"Jenkins\"},\"1178\":{\"h\":\"Kubernetes\"},\"1179\":{\"h\":\"Linux\"},\"1180\":{\"h\":\"Small\"},\"1181\":{\"h\":\"Visualstudio\"},\"1182\":{\"h\":\"Windows\"},\"1183\":{\"h\":\"Release\"},\"1184\":{\"h\":\"Dapper\"},\"1185\":{\"h\":\"Github\"},\"1186\":{\"h\":\"Ci Cd\"},\"1187\":{\"h\":\"Centos\"},\"1188\":{\"h\":\"Ubuntu\"},\"1189\":{\"h\":\"Nuget\"},\"1190\":{\"h\":\"Environment\"}},\"dirtCount\":0,\"index\":[[\"≤\",{\"1\":{\"1131\":4}}],[\"独占\",{\"1\":{\"1131\":4}}],[\"独立性比较舒服\",{\"1\":{\"210\":1}}],[\"≥\",{\"1\":{\"1131\":1}}],[\"汇总如下\",{\"1\":{\"1131\":1}}],[\"稳定\",{\"1\":{\"1129\":1}}],[\"稳定的网络标志\",{\"1\":{\"914\":1}}],[\"稳定的持久化存储\",{\"1\":{\"914\":1}}],[\"符号\",{\"1\":{\"1127\":1}}],[\"符合列表条件的\",{\"1\":{\"942\":1}}],[\"符合特定标签选择条件的\",{\"1\":{\"938\":1}}],[\"符合我们重试的场景\",{\"1\":{\"134\":1}}],[\"鉴于服务是区分为四个环境的\",{\"1\":{\"1121\":1}}],[\"鉴权以及其它的准入策略检查过程之后才会放行\",{\"1\":{\"941\":1}}],[\"↓\",{\"1\":{\"1110\":1}}],[\"↑\",{\"1\":{\"1110\":1}}],[\"硬盘还是空白的\",{\"1\":{\"1110\":1}}],[\"硬件兼容性决定了虚拟机的硬件限制\",{\"1\":{\"1110\":1}}],[\"硬件工具箱\",{\"0\":{\"271\":1}}],[\"硬件的优化\",{\"1\":{\"206\":1}}],[\"群组\",{\"1\":{\"1082\":1}}],[\"群组名都记录在\",{\"1\":{\"1082\":1}}],[\"群机器人\",{\"1\":{\"696\":1,\"697\":1}}],[\"号\",{\"1\":{\"1081\":1}}],[\"号进行注释\",{\"1\":{\"818\":1}}],[\"属组名\",{\"1\":{\"1082\":1,\"1083\":1}}],[\"属组\",{\"1\":{\"1081\":1}}],[\"属组权限\",{\"1\":{\"1081\":1}}],[\"属主名\",{\"1\":{\"1083\":2}}],[\"属主\",{\"1\":{\"1081\":1}}],[\"属主权限\",{\"1\":{\"1081\":1}}],[\"属性数值的相加\",{\"1\":{\"1084\":1}}],[\"属性设置为自定义路径\",{\"1\":{\"1037\":1}}],[\"属性的值设置为\",{\"1\":{\"563\":1}}],[\"属性配置\",{\"1\":{\"502\":1}}],[\"属性级别的自定义验证\",{\"1\":{\"475\":1}}],[\"属性注入\",{\"1\":{\"344\":1}}],[\"属性路径处理是指在调用函数的上方设定一个路径属性\",{\"1\":{\"203\":1}}],[\"属性比较\",{\"1\":{\"131\":1}}],[\"属性应用\",{\"0\":{\"120\":1}}],[\"属性名\",{\"1\":{\"114\":1}}],[\"属性值类型\",{\"1\":{\"93\":1,\"97\":1,\"104\":1,\"111\":1,\"114\":1}}],[\"属性自定义值\",{\"0\":{\"64\":1}}],[\"属性初始化器\",{\"0\":{\"63\":1}}],[\"属性最常见的实现方式是使用get和set访问器读写私有字段\",{\"1\":{\"62\":1}}],[\"属性就是只读的\",{\"1\":{\"60\":1}}],[\"属性支持以下的修饰符\",{\"1\":{\"59\":1}}],[\"属性在获取和设置值的时候给实现者提供了完全的控制能力\",{\"1\":{\"59\":1}}],[\"属性get出来的值不一定是set进去的值\",{\"1\":{\"59\":1}}],[\"属性和字段很相似\",{\"1\":{\"59\":1}}],[\"属性和特性又有何区别\",{\"1\":{\"41\":1}}],[\"属性\",{\"0\":{\"59\":1,\"93\":1,\"110\":1},\"1\":{\"88\":1,\"93\":1,\"97\":1,\"104\":1,\"111\":1,\"208\":4,\"968\":1}}],[\"属性等\",{\"1\":{\"41\":1}}],[\"属性是面向对象编程的基本概念\",{\"1\":{\"41\":1}}],[\"位数要相互对应\",{\"1\":{\"1110\":1}}],[\"位数以\",{\"1\":{\"1081\":1}}],[\"位的\",{\"1\":{\"1110\":1}}],[\"位\",{\"1\":{\"1081\":4,\"1102\":1,\"1110\":2}}],[\"位表示文件类型\",{\"1\":{\"1081\":1}}],[\"位置服务\",{\"1\":{\"530\":1}}],[\"拥有不同的权限\",{\"1\":{\"1080\":1}}],[\"源\",{\"1\":{\"1079\":1}}],[\"源码管理\",{\"0\":{\"896\":1}}],[\"源码中提供了\",{\"1\":{\"689\":1}}],[\"源码地址\",{\"1\":{\"399\":1,\"561\":1}}],[\"源码\",{\"1\":{\"180\":1}}],[\"尤其网上的删除跑路段子\",{\"1\":{\"1078\":1}}],[\"尤其是直接运行在客户端计算机上的时候\",{\"1\":{\"322\":1}}],[\"尤其是毕业生\",{\"1\":{\"183\":1}}],[\"尤其是新人\",{\"1\":{\"182\":1}}],[\"递归地过滤出\",{\"1\":{\"1096\":1}}],[\"递归更改\",{\"1\":{\"1084\":1}}],[\"递归更改文件属主或属组\",{\"1\":{\"1083\":1}}],[\"递归更改文件属组\",{\"1\":{\"1082\":1}}],[\"递归持续复制\",{\"1\":{\"1079\":1}}],[\"递归删除\",{\"1\":{\"1078\":1}}],[\"递归获取配置信息数组\",{\"1\":{\"583\":1}}],[\"套接字\",{\"1\":{\"1074\":1}}],[\"白嫖\",{\"1\":{\"1068\":1}}],[\"白板工具\",{\"0\":{\"1031\":1}}],[\"店铺修改where\",{\"1\":{\"1043\":1}}],[\"店铺修改\",{\"1\":{\"1043\":1}}],[\"仓储的创建有两种方式一种是通过repositoryfactory\",{\"1\":{\"1040\":1}}],[\"仓储的创建\",{\"0\":{\"1040\":1}}],[\"仓库名\",{\"1\":{\"952\":1,\"953\":1}}],[\"仓库中吗\",{\"1\":{\"863\":1}}],[\"仓库中的提交记录保存的是你的目录下所有文件的快照\",{\"1\":{\"781\":1}}],[\"仓库\",{\"1\":{\"788\":2}}],[\"仓库信息\",{\"0\":{\"767\":1}}],[\"仓库地址为\",{\"1\":{\"1070\":1}}],[\"仓库地址\",{\"1\":{\"23\":1,\"242\":1,\"751\":1,\"968\":1,\"1070\":1}}],[\"仓库操作\",{\"1\":{\"23\":1}}],[\"仓库解释\",{\"1\":{\"21\":1}}],[\"仓库的\",{\"1\":{\"788\":1}}],[\"仓库的版本是经典坦克大战的复刻版本\",{\"1\":{\"243\":1}}],[\"仓库的简单描述\",{\"1\":{\"21\":1}}],[\"仓库的名字\",{\"1\":{\"21\":1}}],[\"仓库有两种\",{\"1\":{\"20\":1}}],[\"磁力链接\",{\"1\":{\"1034\":4}}],[\"磁盘空间不足等\",{\"1\":{\"446\":1}}],[\"磁盘\",{\"1\":{\"209\":1}}],[\"磁盘写操作默认是延迟执行的\",{\"1\":{\"205\":1}}],[\"磁盘上的每个段都有一个相应的\",{\"1\":{\"204\":1}}],[\"教育版\",{\"1\":{\"1032\":1}}],[\"教程素材\",{\"1\":{\"330\":1}}],[\"家里和公司的\",{\"1\":{\"1111\":1}}],[\"家庭单语言版\",{\"1\":{\"1032\":1}}],[\"家中建站\",{\"1\":{\"240\":1}}],[\"画笔有7中样子可\",{\"1\":{\"1031\":1}}],[\"待提示完成后\",{\"1\":{\"1024\":2}}],[\"待打印数据使用的报表\",{\"1\":{\"691\":1}}],[\"敲击回车\",{\"1\":{\"1024\":3}}],[\"满足常用的导出类型\",{\"1\":{\"1011\":1}}],[\"满足越来越复杂的业务需求\",{\"1\":{\"210\":1}}],[\"偶尔有一次发现了该开源项目\",{\"1\":{\"1009\":1}}],[\"辅助看源码\",{\"1\":{\"1004\":1}}],[\"辅助搭建远程调试环境\",{\"1\":{\"241\":1}}],[\"油猴\",{\"0\":{\"996\":1}}],[\"谷歌访问助手\",{\"0\":{\"994\":1}}],[\"划词翻译\",{\"1\":{\"993\":1}}],[\"观察甚至调试引用的黑盒组件引用的逻辑\",{\"1\":{\"986\":1}}],[\"观察系统的行为不可避免的会改变器状态\",{\"1\":{\"984\":1}}],[\"观察者模式\",{\"1\":{\"202\":1}}],[\"某些状态会更改\",{\"1\":{\"984\":1}}],[\"某公司的数据库忽然坏了\",{\"1\":{\"192\":1}}],[\"评估\",{\"0\":{\"984\":1}}],[\"斜体也一样\",{\"1\":{\"983\":1}}],[\"斜杠代表根目录\",{\"1\":{\"835\":1}}],[\"函数返回的值有时在源代码中被忽略\",{\"1\":{\"982\":1}}],[\"旨在调试期间起作用\",{\"1\":{\"978\":1}}],[\"旨在为开发\",{\"1\":{\"216\":1}}],[\"许多开发人员使用这个功能强大的工具包来处理调试会话\",{\"1\":{\"974\":1}}],[\"许可协议进行许可\",{\"1\":{\"599\":1}}],[\"许可证\",{\"1\":{\"253\":1}}],[\"许可提到了\",{\"1\":{\"247\":1}}],[\"局部变量\",{\"1\":{\"974\":1}}],[\"局部注册方式\",{\"1\":{\"406\":1}}],[\"附加到进程\",{\"1\":{\"974\":1,\"983\":2}}],[\"步出执行的函数\",{\"1\":{\"974\":1}}],[\"步过函数\",{\"1\":{\"974\":1}}],[\"步进到函数内\",{\"1\":{\"974\":1}}],[\"步骤记录器\",{\"0\":{\"1029\":1}}],[\"步骤如下\",{\"1\":{\"806\":1}}],[\"步骤4\",{\"0\":{\"442\":1}}],[\"步骤3\",{\"0\":{\"441\":1}}],[\"步骤2\",{\"0\":{\"440\":1}}],[\"步骤1\",{\"0\":{\"439\":1}}],[\"步骤二\",{\"1\":{\"409\":1}}],[\"步骤一\",{\"1\":{\"409\":1}}],[\"步骤\",{\"1\":{\"134\":2,\"879\":1}}],[\"激活码来源于网络\",{\"1\":{\"973\":1}}],[\"激活需要\",{\"1\":{\"964\":1}}],[\"智能提示\",{\"1\":{\"968\":1}}],[\"智能提示当前项目所支持的样式\",{\"1\":{\"321\":1}}],[\"破解教程\",{\"1\":{\"968\":1}}],[\"破折号\",{\"1\":{\"794\":1}}],[\"午夜亮色\",{\"1\":{\"968\":1}}],[\"午夜深色\",{\"1\":{\"968\":1}}],[\"午夜黑主题\",{\"1\":{\"968\":1}}],[\"句法行压缩\",{\"1\":{\"968\":1}}],[\"彩虹括号\",{\"1\":{\"968\":1}}],[\"彩虹大括号\",{\"1\":{\"968\":1}}],[\"轻松浏览代码\",{\"1\":{\"968\":1}}],[\"轻量级的高性能文件系统\",{\"1\":{\"810\":1}}],[\"轻量nuget服务\",{\"1\":{\"214\":1,\"1120\":1}}],[\"码锹窗口\",{\"1\":{\"968\":1}}],[\"码农很忙\",{\"1\":{\"685\":1}}],[\"剪贴板\",{\"0\":{\"1030\":1}}],[\"剪贴板历史记录\",{\"1\":{\"965\":1}}],[\"剪切\",{\"1\":{\"965\":1}}],[\"折叠或展开当前方法\",{\"1\":{\"965\":1}}],[\"折叠或者展开当前方法\",{\"1\":{\"965\":1}}],[\"折叠所有方法\",{\"1\":{\"965\":1}}],[\"撤销\",{\"1\":{\"965\":1}}],[\"撤销修改\",{\"1\":{\"771\":1}}],[\"逐条语句调试\",{\"1\":{\"965\":1}}],[\"逐过程调试\",{\"1\":{\"965\":1}}],[\"逐个遍历找到对应关键词的位置\",{\"1\":{\"204\":1}}],[\"警告有时常常会被忽略\",{\"1\":{\"965\":1}}],[\"警告\",{\"1\":{\"965\":1}}],[\"证书\",{\"1\":{\"964\":1}}],[\"天前\",{\"1\":{\"1077\":1}}],[\"天内登录产品以激活它\",{\"1\":{\"964\":1}}],[\"天气\",{\"1\":{\"617\":1}}],[\"旗舰版\",{\"1\":{\"957\":1}}],[\"修复了代码中应正常工作的内容\",{\"1\":{\"1130\":1}}],[\"修复以下对象中的所有实例\",{\"1\":{\"956\":1}}],[\"修补程序版本\",{\"1\":{\"1130\":2}}],[\"修改完成就可\",{\"1\":{\"1111\":1}}],[\"修改启动时激活\",{\"1\":{\"1110\":1}}],[\"修改协议类型\",{\"1\":{\"1110\":1}}],[\"修改一个有意义的名称和设置虚拟机的存储位置\",{\"1\":{\"1104\":1}}],[\"修改一条数据时\",{\"1\":{\"134\":1}}],[\"修改等操作\",{\"1\":{\"1071\":1}}],[\"修改项目的csproj文件做以下配置\",{\"1\":{\"1037\":1}}],[\"修改方法\",{\"1\":{\"971\":1}}],[\"修改快捷键的方法\",{\"1\":{\"966\":1}}],[\"修改快捷键方法\",{\"0\":{\"966\":1}}],[\"修改后如图所示\",{\"1\":{\"1107\":1}}],[\"修改后\",{\"1\":{\"949\":1}}],[\"修改selinux的值为disabled\",{\"1\":{\"948\":1}}],[\"修改sample1options文件\",{\"1\":{\"575\":1}}],[\"修改目录权限\",{\"0\":{\"908\":1}}],[\"修改镜像源\",{\"0\":{\"892\":1}}],[\"修改的数据也会同步到容器\",{\"1\":{\"815\":1}}],[\"修改之前的订单服务引用的proto文件\",{\"1\":{\"676\":1,\"678\":1,\"681\":1}}],[\"修改之前的userinfoservice\",{\"1\":{\"674\":1,\"679\":1}}],[\"修改csproj文件并标识为客户端grpcservices=\",{\"1\":{\"673\":1}}],[\"修改csproj文件去引用proto文件并且标识为服务端grpcservices=\",{\"1\":{\"672\":1}}],[\"修改configurations\",{\"1\":{\"575\":1}}],[\"修改默认的静态文件目录\",{\"0\":{\"580\":1}}],[\"修改宿主服务注册代码为\",{\"1\":{\"576\":1}}],[\"修改应用程序池为无托管模式\",{\"1\":{\"563\":1}}],[\"修改配置\",{\"0\":{\"552\":1}}],[\"修改文件的所有者\",{\"1\":{\"1083\":1}}],[\"修改文件属于哪一个组\",{\"1\":{\"1082\":1}}],[\"修改文件编码\",{\"0\":{\"971\":1}}],[\"修改文件内容之后\",{\"1\":{\"787\":1}}],[\"修改文件\",{\"1\":{\"549\":1}}],[\"修改为清华大学插件源\",{\"1\":{\"892\":1}}],[\"修改为\",{\"1\":{\"546\":1,\"577\":1}}],[\"修改nginx的default\",{\"1\":{\"543\":1}}],[\"修改时间\",{\"1\":{\"501\":1}}],[\"修改人\",{\"1\":{\"501\":1}}],[\"修改注入swagger配置\",{\"1\":{\"483\":1}}],[\"修改值后验证失败\",{\"1\":{\"476\":1}}],[\"修改pluginprovider类的文件内容\",{\"1\":{\"575\":1}}],[\"修改program方法\",{\"1\":{\"462\":1,\"463\":1,\"660\":1}}],[\"修改password\",{\"1\":{\"40\":1}}],[\"修改appsettings文件\",{\"1\":{\"462\":1}}],[\"修改getusername的授权为\",{\"1\":{\"364\":1}}],[\"修改host文件访问github\",{\"0\":{\"333\":1}}],[\"修改html标签\",{\"1\":{\"321\":1}}],[\"修改内容的主体格式\",{\"1\":{\"322\":1}}],[\"修改了\",{\"1\":{\"247\":1}}],[\"修改接口\",{\"0\":{\"231\":1}}],[\"修改数据库\",{\"1\":{\"134\":1}}],[\"修改代码\",{\"1\":{\"43\":1}}],[\"修改程序如下\",{\"1\":{\"43\":1}}],[\"修改确认密码\",{\"1\":{\"40\":1}}],[\"修改\",{\"1\":{\"38\":1,\"600\":1,\"661\":1,\"914\":1,\"916\":1,\"949\":1,\"1076\":1,\"1110\":1}}],[\"修改上一条提交信息\",{\"1\":{\"27\":1}}],[\"修改readme\",{\"1\":{\"22\":2}}],[\"项\",{\"1\":{\"956\":1}}],[\"项目多了之后\",{\"1\":{\"970\":1}}],[\"项目\",{\"1\":{\"956\":2}}],[\"项目以什么端口启动就暴露对应的端口\",{\"1\":{\"834\":1,\"837\":1}}],[\"项目目录中右键bash\",{\"1\":{\"801\":1}}],[\"项目目录下可以看到proto文件生成的类\",{\"1\":{\"672\":1}}],[\"项目测试的文件\",{\"1\":{\"799\":1}}],[\"项目工具生成的文件\",{\"1\":{\"799\":1}}],[\"项目下面就有个\",{\"1\":{\"798\":1}}],[\"项目所忽略的设置\",{\"1\":{\"798\":1}}],[\"项目或它的某个依赖项可能包括的包引用\",{\"1\":{\"577\":1}}],[\"项目结构如下\",{\"1\":{\"561\":1,\"576\":1}}],[\"项目启动出错\",{\"1\":{\"501\":1}}],[\"项目启动测试的时候更推荐配置使用swagger传递token进行测试\",{\"1\":{\"364\":1}}],[\"项目名称不要写辨识度低的英文缩写\",{\"1\":{\"181\":1}}],[\"项目交付之后怎么样\",{\"1\":{\"181\":1}}],[\"项目中的哪些部分是你做的\",{\"1\":{\"181\":1}}],[\"项目和经历\",{\"1\":{\"181\":1}}],[\"项目经历在这里是两个词\",{\"1\":{\"181\":1}}],[\"项目经历是面试过程中重点问的\",{\"1\":{\"181\":1}}],[\"项目经历\",{\"0\":{\"181\":1}}],[\"帮助\",{\"1\":{\"956\":1,\"968\":1,\"1008\":1}}],[\"帮助我们管理文件的时候\",{\"1\":{\"778\":1}}],[\"兼容老方法\",{\"0\":{\"1128\":1}}],[\"兼容的编辑器中打开代码文件\",{\"1\":{\"955\":1}}],[\"兼容v1\",{\"1\":{\"914\":1}}],[\"忘了也不要紧\",{\"1\":{\"954\":1}}],[\"填写gitee的官网网址\",{\"1\":{\"952\":1}}],[\"填写如下的信息在点击`create\",{\"1\":{\"18\":1}}],[\"七牛云\",{\"1\":{\"951\":1}}],[\"宽容\",{\"1\":{\"947\":1}}],[\"鸟哥的linux私房菜\",{\"1\":{\"946\":1}}],[\"伪变量$returnvalue也可以在即时窗口和监视窗口中使用\",{\"1\":{\"982\":1}}],[\"伪架构师\",{\"1\":{\"945\":1}}],[\"伪造银行流水\",{\"1\":{\"195\":1}}],[\"译者\",{\"1\":{\"945\":1}}],[\"捕获目标为\",{\"1\":{\"944\":1}}],[\"捕获来自服务器的流式通知\",{\"1\":{\"533\":1}}],[\"毫无疑问\",{\"1\":{\"942\":1}}],[\"剩下的就是后端的工作了\",{\"1\":{\"942\":1}}],[\"剩下的操作你只需要将客户端打包就行了\",{\"1\":{\"692\":1}}],[\"据此创建必要的\",{\"1\":{\"941\":1}}],[\"称为\",{\"1\":{\"939\":1}}],[\"称为数据卷容器\",{\"1\":{\"814\":1}}],[\"底部的\",{\"1\":{\"937\":1}}],[\"底层还是adonet\",{\"1\":{\"529\":1}}],[\"职责\",{\"1\":{\"936\":1}}],[\"职位\",{\"1\":{\"192\":1}}],[\"幸运的是\",{\"1\":{\"936\":1}}],[\"幸运的是你可以在很多地方学习到这些技术\",{\"1\":{\"863\":1}}],[\"叠加网络\",{\"1\":{\"935\":1}}],[\"深入\",{\"0\":{\"940\":1}}],[\"深入了解\",{\"1\":{\"934\":1,\"940\":1}}],[\"深蓝词库转换\",{\"1\":{\"311\":1}}],[\"扔给eth0\",{\"1\":{\"928\":1}}],[\"间通信\",{\"0\":{\"927\":1},\"1\":{\"927\":1}}],[\"间的通信\",{\"1\":{\"925\":1}}],[\"间能够彼此直接通讯\",{\"1\":{\"919\":1}}],[\"暴露的是80端口\",{\"1\":{\"923\":1}}],[\"暴露端口\",{\"1\":{\"828\":1,\"852\":1}}],[\"涉及容器\",{\"1\":{\"920\":1}}],[\"涉及技术\",{\"1\":{\"682\":1}}],[\"概念\",{\"1\":{\"919\":1}}],[\"概述\",{\"0\":{\"467\":1,\"685\":1,\"713\":1,\"798\":1,\"844\":1,\"946\":1,\"1109\":1,\"1114\":1}}],[\"决定了\",{\"1\":{\"918\":1}}],[\"决定写一些面试过程的基本常识\",{\"1\":{\"183\":1}}],[\"令人头大的网络模型\",{\"0\":{\"917\":1}}],[\"丢弃等\",{\"1\":{\"916\":1}}],[\"丢失又分为\",{\"1\":{\"208\":1}}],[\"丢失\",{\"1\":{\"134\":1}}],[\"彼此间无法通信\",{\"1\":{\"916\":1}}],[\"彼此毫无联系\",{\"1\":{\"436\":1}}],[\"典型的方案为project\",{\"1\":{\"928\":1}}],[\"典型的应用包括\",{\"1\":{\"914\":1}}],[\"典型实现方案有weave\",{\"1\":{\"928\":1}}],[\"典型例子就是\",{\"1\":{\"202\":1}}],[\"滚动升级\",{\"1\":{\"914\":1}}],[\"滚动升级和回滚应用\",{\"1\":{\"914\":1}}],[\"恢复更新deployment\",{\"1\":{\"914\":1}}],[\"扩缩容操作\",{\"1\":{\"914\":1}}],[\"扩容和缩容\",{\"1\":{\"914\":1}}],[\"扩展性的时候也会相对容易一些\",{\"1\":{\"1047\":1}}],[\"扩展管理器\",{\"0\":{\"992\":1}}],[\"扩展应用\",{\"0\":{\"707\":1}}],[\"扩展方法基于原始\",{\"1\":{\"508\":1}}],[\"扩展\",{\"1\":{\"321\":1,\"968\":1,\"1067\":1}}],[\"扩展名为\",{\"1\":{\"304\":1}}],[\"扩展补充\",{\"0\":{\"116\":1}}],[\"污点\",{\"1\":{\"914\":1}}],[\"痴者工良kubernetes书\",{\"1\":{\"913\":1}}],[\"广播\",{\"1\":{\"1110\":1}}],[\"广播实时通信\",{\"1\":{\"665\":1}}],[\"广泛的volume支持\",{\"1\":{\"913\":1}}],[\"复制这段内容后打开百度网盘手机app\",{\"1\":{\"1110\":1}}],[\"复制当前目录文件到当前目录\",{\"1\":{\"1093\":1}}],[\"复制到\",{\"1\":{\"1079\":1}}],[\"复制文件\",{\"0\":{\"1079\":1},\"1\":{\"1093\":1}}],[\"复制文件url在浏览器打开可以直接访问到我们刚上传的图片\",{\"1\":{\"954\":1}}],[\"复制等操作\",{\"1\":{\"1076\":1}}],[\"复制引用等看似虽小\",{\"1\":{\"968\":1}}],[\"复制\",{\"1\":{\"965\":1}}],[\"复制密码到文本框然后进入系统\",{\"1\":{\"910\":1}}],[\"复杂查询\",{\"0\":{\"515\":1}}],[\"复杂类型\",{\"0\":{\"470\":1}}],[\"复杂的依赖关系\",{\"1\":{\"430\":1}}],[\"复杂性增大\",{\"1\":{\"208\":1}}],[\"复杂段和具有约束的段同样具体\",{\"1\":{\"165\":1}}],[\"复杂段通过非贪婪的方式从右到左进行匹配\",{\"1\":{\"161\":1}}],[\"复杂段\",{\"0\":{\"161\":1}}],[\"红色代表有问题\",{\"1\":{\"900\":1}}],[\"脚本参考自\",{\"1\":{\"899\":1}}],[\"寻找超级管理员密码\",{\"0\":{\"888\":1}}],[\"寻找镜像\",{\"1\":{\"805\":1}}],[\"赋予权限\",{\"1\":{\"882\":1}}],[\"赋值给jsondata\",{\"1\":{\"739\":1}}],[\"赋值区域\",{\"1\":{\"586\":1}}],[\"物理机上的vm是linux\",{\"1\":{\"880\":1}}],[\"物理备份方式\",{\"1\":{\"133\":1}}],[\"阶段\",{\"1\":{\"879\":1}}],[\"勾选手动设置\",{\"1\":{\"1110\":1}}],[\"勾选\",{\"1\":{\"1110\":1}}],[\"勾选应用后等待结束后重启系统\",{\"1\":{\"1104\":1}}],[\"勾选hyper\",{\"1\":{\"876\":1}}],[\"勾选了推送复选框\",{\"1\":{\"533\":1}}],[\"玩转\",{\"1\":{\"875\":1}}],[\"玩完再学源码\",{\"1\":{\"243\":1}}],[\"串接\",{\"1\":{\"872\":1}}],[\"串联你的\",{\"1\":{\"867\":1}}],[\"串联\",{\"0\":{\"867\":1},\"1\":{\"872\":1}}],[\"隆重推出\",{\"1\":{\"870\":1}}],[\"试着用命令或工具压缩你的镜像\",{\"1\":{\"868\":1}}],[\"哇\",{\"1\":{\"867\":1,\"870\":1,\"871\":1}}],[\"细心的同学应该发现\",{\"1\":{\"866\":1}}],[\"稍后安装操作系统\",{\"1\":{\"1110\":1}}],[\"稍后再看\",{\"1\":{\"991\":1}}],[\"稍后会简单说说\",{\"1\":{\"850\":1}}],[\"稍有成效\",{\"1\":{\"866\":1}}],[\"动到新的replicaset中\",{\"1\":{\"914\":1}}],[\"动辄就有\",{\"1\":{\"865\":1}}],[\"动态变量镜像tag\",{\"1\":{\"1070\":1}}],[\"动态网络\",{\"0\":{\"936\":1}}],[\"动态的去感知集群中\",{\"1\":{\"931\":1}}],[\"动态增加接口\",{\"0\":{\"576\":1}}],[\"动态替换服务功能完成\",{\"1\":{\"575\":1}}],[\"动态替换服务\",{\"0\":{\"575\":1}}],[\"动态更新服务的插件需求\",{\"1\":{\"570\":1}}],[\"动态资源转发到tomcat服务器中\",{\"1\":{\"207\":1}}],[\"动态地将责任附加到对象上\",{\"1\":{\"202\":1}}],[\"次要版本\",{\"1\":{\"1130\":2}}],[\"次\",{\"1\":{\"865\":1}}],[\"顶头写\",{\"1\":{\"865\":1}}],[\"却生成了\",{\"1\":{\"863\":1}}],[\"却要比\",{\"1\":{\"134\":1}}],[\"干了几件事\",{\"1\":{\"863\":1}}],[\"干净的搜索界面\",{\"1\":{\"259\":1}}],[\"制作步骤\",{\"0\":{\"864\":1}}],[\"制作精简的镜像\",{\"0\":{\"863\":1}}],[\"制作文档网站时候使用\",{\"1\":{\"321\":1}}],[\"离线安装\",{\"0\":{\"962\":1}}],[\"离线安装模式\",{\"1\":{\"862\":1}}],[\"离职原因这个问题\",{\"1\":{\"187\":1}}],[\"检测docker是否可以正常运行\",{\"1\":{\"862\":1}}],[\"检查系统更新\",{\"1\":{\"1115\":1}}],[\"检查与其是否联通\",{\"1\":{\"1098\":1}}],[\"检查是否联通\",{\"1\":{\"1098\":1}}],[\"检查启动状态\",{\"1\":{\"914\":1}}],[\"检查通道也开始准备关闭了\",{\"1\":{\"432\":1}}],[\"检查拼音\",{\"1\":{\"215\":1}}],[\"检查内存使用情况\",{\"1\":{\"209\":1}}],[\"检查url是否是可接受的\",{\"1\":{\"162\":1}}],[\"检查引用的转换是否能够成功\",{\"1\":{\"131\":1}}],[\"检查\",{\"1\":{\"22\":1,\"215\":2,\"1136\":1}}],[\"卷或自定义配置文件不会自动删除\",{\"1\":{\"862\":1}}],[\"卷名\",{\"1\":{\"815\":1}}],[\"配合docker镜像加速器\",{\"1\":{\"862\":1}}],[\"配置会有提示\",{\"1\":{\"1110\":1}}],[\"配置安装位置和网络\",{\"1\":{\"1104\":1}}],[\"配置网络和主机名\",{\"1\":{\"1104\":1}}],[\"配置网络\",{\"1\":{\"1104\":1}}],[\"配置在项目的\",{\"1\":{\"1037\":1}}],[\"配置好后可以在文档中直接右键上传图片使用\",{\"1\":{\"954\":1}}],[\"配置好的令牌密钥需要保存好\",{\"1\":{\"952\":1}}],[\"配置picgo的阿里云oss的keyid和keysecret\",{\"1\":{\"954\":1}}],[\"配置参数\",{\"1\":{\"952\":1}}],[\"配置jenkins\",{\"0\":{\"906\":1}}],[\"配置源代码和凭据\",{\"1\":{\"896\":1}}],[\"配置命令\",{\"1\":{\"853\":1}}],[\"配置端口映射\",{\"1\":{\"852\":1}}],[\"配置环境变量\",{\"1\":{\"852\":1}}],[\"配置中心等\",{\"1\":{\"843\":1}}],[\"配置中心等等\",{\"1\":{\"843\":1}}],[\"配置ip\",{\"1\":{\"839\":1}}],[\"配置用户名和邮箱\",{\"1\":{\"802\":1}}],[\"配置一般设置\",{\"1\":{\"791\":1}}],[\"配置数据库\",{\"1\":{\"791\":1}}],[\"配置数据库连接串\",{\"1\":{\"661\":1}}],[\"配置指定grpc并且暴露出grpc服务\",{\"1\":{\"672\":1}}],[\"配置指定实现\",{\"1\":{\"669\":1}}],[\"配置程序的数据库类型\",{\"1\":{\"661\":1}}],[\"配置程序是否为管理控制台\",{\"1\":{\"661\":1}}],[\"配置修改支持版本记录\",{\"1\":{\"661\":1}}],[\"配置信息实时推送到客户端\",{\"1\":{\"661\":1}}],[\"配置支持按照应用隔离\",{\"1\":{\"661\":1}}],[\"配置简单\",{\"1\":{\"661\":1}}],[\"配置是否将该引用项目输出\",{\"1\":{\"577\":1}}],[\"配置nginx对程序的转发\",{\"0\":{\"543\":1}}],[\"配置nginx托管\",{\"0\":{\"541\":1}}],[\"配置防火墙\",{\"0\":{\"542\":1}}],[\"配置supervisor开机启动\",{\"0\":{\"549\":1}}],[\"配置supervisor\",{\"0\":{\"546\":1}}],[\"配置supervisor守护服务\",{\"0\":{\"544\":1}}],[\"配置startup类\",{\"0\":{\"491\":1}}],[\"配置ssh\",{\"0\":{\"19\":1}}],[\"配置日志级别\",{\"0\":{\"455\":1},\"1\":{\"463\":1}}],[\"配置读取\",{\"0\":{\"388\":1}}],[\"配置过期时间\",{\"1\":{\"382\":1,\"387\":1}}],[\"配置验证\",{\"1\":{\"359\":1}}],[\"配置右键快捷启动\",{\"1\":{\"278\":1}}],[\"配置如下\",{\"1\":{\"217\":1}}],[\"配置可热重载\",{\"1\":{\"215\":1}}],[\"配置管理员密码\",{\"1\":{\"791\":1}}],[\"配置管理\",{\"1\":{\"210\":1}}],[\"配置终结点委托\",{\"0\":{\"158\":1}}],[\"配置文件中进行配置\",{\"1\":{\"446\":1}}],[\"配置文件所做的更改获取不到\",{\"1\":{\"398\":1}}],[\"配置文件热重载\",{\"1\":{\"215\":1}}],[\"配置文件存放敏感词为例\",{\"1\":{\"215\":1}}],[\"配置文件\",{\"1\":{\"153\":1,\"446\":1,\"546\":1,\"575\":1,\"799\":1,\"810\":1,\"1036\":1,\"1110\":1}}],[\"配置等文件夹挂载到宿主机指定目录\",{\"1\":{\"37\":1,\"854\":1}}],[\"配置了9006\",{\"1\":{\"37\":1}}],[\"配置\",{\"0\":{\"17\":1,\"38\":1},\"1\":{\"573\":1,\"802\":1,\"931\":1,\"941\":1}}],[\"配置帐号\",{\"0\":{\"8\":1}}],[\"配置国内镜像\",{\"1\":{\"3\":1}}],[\"覆盖容器启动后默认执行的命令\",{\"1\":{\"852\":1}}],[\"覆盖网络可以将多个\",{\"1\":{\"839\":1}}],[\"例中需要依赖redis服务\",{\"1\":{\"851\":1}}],[\"例如release\",{\"1\":{\"1037\":1}}],[\"例如net7\",{\"1\":{\"1037\":1}}],[\"例如可以在你的\",{\"1\":{\"937\":1}}],[\"例如可执行文件\",{\"1\":{\"90\":1}}],[\"例如http\",{\"1\":{\"922\":1}}],[\"例如httpcontext\",{\"1\":{\"346\":1}}],[\"例如mysql的service默认3306端口\",{\"1\":{\"921\":1}}],[\"例如怎样制作报表文件\",{\"1\":{\"693\":1}}],[\"例如集成身份验证\",{\"1\":{\"536\":1}}],[\"例如数据丢失\",{\"1\":{\"446\":1}}],[\"例如注册这个授权过滤器\",{\"1\":{\"400\":1}}],[\"例如下图是一个反向代理的层次结构\",{\"1\":{\"322\":1}}],[\"例如宽通用公共许可证\",{\"1\":{\"247\":1}}],[\"例如僵尸的位置和时间\",{\"1\":{\"243\":1}}],[\"例如很大的集合的交集保存到一个新的键\",{\"1\":{\"209\":1}}],[\"例如使用\",{\"1\":{\"208\":1}}],[\"例如整数\",{\"1\":{\"203\":1}}],[\"例如建立跳板数据库\",{\"1\":{\"203\":1}}],[\"例如你说\",{\"1\":{\"189\":1}}],[\"例如延迟\",{\"1\":{\"134\":1}}],[\"例如阿里的\",{\"1\":{\"134\":1}}],[\"例如string类具有索引器\",{\"1\":{\"65\":1}}],[\"例如\",{\"1\":{\"64\":1,\"78\":1,\"134\":2,\"159\":1,\"161\":1,\"163\":1,\"178\":1,\"180\":1,\"181\":1,\"183\":1,\"187\":1,\"189\":2,\"205\":1,\"210\":1,\"363\":1,\"446\":2,\"469\":1,\"478\":1,\"523\":1,\"597\":1,\"598\":1,\"798\":1,\"799\":4,\"923\":1,\"928\":1,\"1130\":3}}],[\"例如我只想用分布式缓存和数据库\",{\"1\":{\"43\":1}}],[\"例如我有如下的一个需求\",{\"1\":{\"43\":1}}],[\"布尔值等\",{\"1\":{\"850\":1}}],[\"浮点数\",{\"1\":{\"850\":1}}],[\"纯量\",{\"1\":{\"850\":1}}],[\"纯粹的\",{\"1\":{\"218\":1}}],[\"嵌套对象\",{\"1\":{\"850\":1}}],[\"卸载服务\",{\"0\":{\"1021\":1}}],[\"卸载docker包\",{\"1\":{\"862\":1}}],[\"卸载\",{\"0\":{\"848\":1},\"1\":{\"1008\":1}}],[\"授予执行权限\",{\"0\":{\"847\":1}}],[\"授权过滤器\",{\"1\":{\"400\":1}}],[\"授权\",{\"1\":{\"250\":1,\"914\":1}}],[\"授权下的代码文件必须保持\",{\"1\":{\"250\":1}}],[\"授权的软件集成在自己的软件里\",{\"1\":{\"249\":1}}],[\"授权方式\",{\"1\":{\"248\":1}}],[\"弄个脚本就搞定啦\",{\"1\":{\"843\":1}}],[\"域名不变就行\",{\"1\":{\"841\":1}}],[\"域名费用\",{\"1\":{\"704\":1}}],[\"展开所有方法\",{\"1\":{\"965\":1}}],[\"展开来说说\",{\"1\":{\"840\":1}}],[\"展示\",{\"1\":{\"793\":1}}],[\"展示下面的效果\",{\"1\":{\"483\":1}}],[\"展示在你主页的自定义内容就是readme\",{\"1\":{\"339\":1}}],[\"展示分组内每个用户的操作记录\",{\"1\":{\"229\":1}}],[\"展示个人项目\",{\"0\":{\"225\":1}}],[\"展示自己的长处\",{\"1\":{\"183\":1}}],[\"桥接模式\",{\"1\":{\"1110\":1}}],[\"桥接\",{\"1\":{\"839\":1,\"840\":1}}],[\"换行符\",{\"1\":{\"956\":1}}],[\"换成cmd\",{\"1\":{\"838\":1}}],[\"换一种写法\",{\"1\":{\"810\":1}}],[\"换一个大容量电池\",{\"1\":{\"433\":1}}],[\"啥都不需要改\",{\"1\":{\"834\":1}}],[\"啥是重点\",{\"1\":{\"180\":1}}],[\"搞清楚每个命令的使用\",{\"1\":{\"833\":1}}],[\"毛坯房\",{\"1\":{\"820\":1}}],[\"冒号前面是路径\",{\"1\":{\"815\":1}}],[\"冒泡排序算法\",{\"1\":{\"593\":1}}],[\"匿名挂载\",{\"1\":{\"815\":1}}],[\"匿名者代理会从\",{\"1\":{\"322\":1}}],[\"匿名者顾名思义就是代理服务器隐藏客户端特征\",{\"1\":{\"322\":1}}],[\"匿名者\",{\"1\":{\"322\":1}}],[\"宿主机路径\",{\"1\":{\"815\":1}}],[\"宿主机端口与容器端口映射\",{\"1\":{\"380\":1,\"385\":1,\"856\":1}}],[\"强制\",{\"1\":{\"1079\":1,\"1080\":1}}],[\"强制启用\",{\"1\":{\"947\":1}}],[\"强制删除\",{\"1\":{\"811\":1}}],[\"强制停止命令就不截图啦\",{\"1\":{\"811\":1}}],[\"强制停止容器\",{\"1\":{\"811\":1}}],[\"强一致\",{\"1\":{\"134\":1}}],[\"联合挂载\",{\"1\":{\"863\":1}}],[\"联合文件系统\",{\"1\":{\"810\":1}}],[\"联表查询是否存在\",{\"1\":{\"525\":1}}],[\"侵删\",{\"1\":{\"807\":1,\"987\":1}}],[\"充分利用资源\",{\"1\":{\"806\":1}}],[\"充分利用硬件资源\",{\"1\":{\"806\":1}}],[\"充电线接口不一致\",{\"1\":{\"433\":1}}],[\"守护进程nssm\",{\"0\":{\"1015\":1}}],[\"守护进程\",{\"1\":{\"805\":2}}],[\"书籍推荐\",{\"1\":{\"804\":1}}],[\"书写高效率的sql\",{\"1\":{\"206\":1}}],[\"社区版\",{\"1\":{\"804\":1,\"957\":1}}],[\"社区的的consul等\",{\"1\":{\"210\":1}}],[\"交互\",{\"1\":{\"931\":1}}],[\"交付和运行应用程序的开放平台\",{\"1\":{\"804\":1}}],[\"交换区\",{\"1\":{\"1110\":1}}],[\"交换\",{\"1\":{\"798\":1}}],[\"交换机名称\",{\"1\":{\"46\":1}}],[\"线上学习\",{\"1\":{\"801\":1}}],[\"线程\",{\"1\":{\"134\":23,\"173\":1,\"1110\":1}}],[\"线程访问修饰符\",{\"1\":{\"56\":1}}],[\"廖雪峰git教程\",{\"1\":{\"801\":1}}],[\"口令\",{\"1\":{\"799\":1}}],[\"忽视已经上传的文件\",{\"1\":{\"799\":1}}],[\"忽视已经上传的文件解决办法\",{\"1\":{\"799\":1}}],[\"忽视后缀是\",{\"1\":{\"799\":1}}],[\"忽略不存在的文件\",{\"1\":{\"1078\":1}}],[\"忽略规则的匹配语法\",{\"1\":{\"799\":1}}],[\"忽略文件夹\",{\"0\":{\"800\":1}}],[\"忽略文件\",{\"0\":{\"799\":1},\"1\":{\"798\":1}}],[\"忽略显示接口\",{\"1\":{\"484\":1}}],[\"忽略掉microsoft开头命名空间下的组件产生的warn级别的日志\",{\"1\":{\"447\":1}}],[\"忽略掉system开头命名空间下的组件产生的warn级别的日志\",{\"1\":{\"447\":1}}],[\"忽略了经历\",{\"1\":{\"181\":1}}],[\"忽略区域文化差异\",{\"1\":{\"163\":1}}],[\"忽略大小写\",{\"1\":{\"163\":1}}],[\"忽略\",{\"1\":{\"119\":1}}],[\"克隆项目\",{\"1\":{\"793\":1}}],[\"克隆项目的时候\",{\"1\":{\"775\":1}}],[\"皆为远程仓库的信息\",{\"1\":{\"788\":1}}],[\"研究研究\",{\"1\":{\"787\":1}}],[\"费劲不太好\",{\"1\":{\"786\":1}}],[\"呢\",{\"1\":{\"786\":1}}],[\"占了两个\",{\"1\":{\"780\":1}}],[\"占用资源多\",{\"1\":{\"806\":1}}],[\"占用\",{\"1\":{\"134\":1}}],[\"占用空间\",{\"1\":{\"74\":1}}],[\"咳咳\",{\"1\":{\"780\":1}}],[\"奇怪的是\",{\"1\":{\"779\":1}}],[\"话说这里\",{\"1\":{\"778\":1}}],[\"算法是把任意长度的输入通过散列算法变化成固定长度的输出\",{\"1\":{\"779\":1}}],[\"算法计算哈希的时候\",{\"1\":{\"778\":1}}],[\"算法\",{\"1\":{\"778\":1,\"779\":1}}],[\"均有各自的\",{\"1\":{\"1084\":1}}],[\"均与\",{\"1\":{\"926\":1}}],[\"均无内容\",{\"1\":{\"777\":2}}],[\"均会通知参加面试\",{\"1\":{\"194\":1}}],[\"└──\",{\"1\":{\"777\":4,\"788\":10}}],[\"│\",{\"1\":{\"777\":3,\"788\":17}}],[\"├──\",{\"1\":{\"777\":8,\"788\":9}}],[\"➜\",{\"1\":{\"777\":11,\"779\":6,\"788\":2}}],[\"左下角四个方框的按键\",{\"1\":{\"1024\":1}}],[\"左\",{\"1\":{\"965\":1}}],[\"左边执行\",{\"1\":{\"777\":1,\"778\":2,\"780\":4,\"781\":2,\"782\":2,\"784\":1,\"785\":2,\"786\":2}}],[\"左上角的两个0是统计当前collection中断言成功的执行数和失败的执行数\",{\"1\":{\"737\":1}}],[\"右方向键选择\",{\"1\":{\"965\":1}}],[\"右侧的\",{\"1\":{\"778\":1}}],[\"右侧的就是\",{\"1\":{\"777\":1}}],[\"右边执行\",{\"1\":{\"777\":1,\"778\":2,\"780\":4,\"781\":2,\"782\":2,\"784\":1,\"785\":2,\"786\":2}}],[\"右键属性\",{\"1\":{\"1110\":1}}],[\"右键新建虚拟机\",{\"1\":{\"1104\":1}}],[\"右键新建proto文件\",{\"1\":{\"669\":1}}],[\"右键点击\",{\"1\":{\"978\":1}}],[\"右键合并分支\",{\"1\":{\"798\":1}}],[\"右键添加proto文件并命名为userinfoservice\",{\"1\":{\"671\":1}}],[\"右键解决方案添加单元测试项目\",{\"1\":{\"585\":1}}],[\"右键浏览器中运行\",{\"1\":{\"321\":1}}],[\"右键进行打包\",{\"1\":{\"212\":1,\"1118\":1}}],[\"右键文件夹>添加>新建项\",{\"1\":{\"145\":1}}],[\"究竟都发生了什么呢\",{\"1\":{\"781\":1}}],[\"究竟做了什么呢\",{\"1\":{\"777\":1,\"778\":1,\"781\":1,\"782\":1,\"784\":1,\"785\":1}}],[\"究竟是怎样的一个系统呢\",{\"1\":{\"776\":1}}],[\"游刃有余\",{\"1\":{\"776\":1}}],[\"游戏录像专家\",{\"0\":{\"293\":1}}],[\"游戏集合库\",{\"1\":{\"243\":1}}],[\"游戏允许负分\",{\"1\":{\"243\":1}}],[\"游戏结束\",{\"1\":{\"243\":1}}],[\"游戏\",{\"1\":{\"243\":1}}],[\"游戏框架使用的是\",{\"1\":{\"243\":1}}],[\"游戏在线地址\",{\"1\":{\"243\":8}}],[\"游戏和\",{\"1\":{\"135\":1}}],[\"清华大学官方镜像\",{\"1\":{\"892\":1}}],[\"清除保存好的账号密码\",{\"1\":{\"775\":1}}],[\"清除已删除的远程分支\",{\"0\":{\"772\":1}}],[\"清晰的细节\",{\"1\":{\"2\":1}}],[\"插入代码段\",{\"1\":{\"965\":1}}],[\"插入外侧代码\",{\"1\":{\"965\":1}}],[\"插入了两行内容\",{\"1\":{\"754\":1}}],[\"插件菜单开发教程\",{\"1\":{\"969\":1}}],[\"插件目录\",{\"0\":{\"968\":1}}],[\"插件官网\",{\"1\":{\"967\":1}}],[\"插件机制保证扩展性\",{\"1\":{\"913\":1}}],[\"插件管理\",{\"1\":{\"892\":1}}],[\"插件管理等功能都未提供\",{\"1\":{\"577\":1}}],[\"插件项目使用该配置\",{\"1\":{\"577\":1}}],[\"插件名\",{\"1\":{\"575\":1}}],[\"插件名称\",{\"1\":{\"573\":1}}],[\"插件的入口程序\",{\"1\":{\"575\":1}}],[\"插件的好处是什么\",{\"1\":{\"570\":1}}],[\"插件帮助类\",{\"1\":{\"574\":1}}],[\"插件元数据配置\",{\"1\":{\"573\":1}}],[\"插件元数据信息\",{\"1\":{\"573\":1}}],[\"插件地址信息\",{\"1\":{\"573\":1}}],[\"插件服务类\",{\"1\":{\"573\":1}}],[\"插件服务注册\",{\"1\":{\"573\":1}}],[\"插件描述\",{\"1\":{\"573\":1}}],[\"插件显示名\",{\"1\":{\"573\":1}}],[\"插件提供基础类\",{\"1\":{\"573\":1}}],[\"插件化\",{\"1\":{\"290\":1}}],[\"插件\",{\"0\":{\"246\":1},\"1\":{\"300\":1,\"574\":1,\"968\":1}}],[\"雨滴测试\",{\"1\":{\"746\":1}}],[\"列映射\",{\"1\":{\"1061\":1}}],[\"列表需要是最新的\",{\"1\":{\"942\":1}}],[\"列表\",{\"1\":{\"942\":2}}],[\"列表中取最后一个元素\",{\"1\":{\"746\":1}}],[\"列出完整日期时间模式\",{\"1\":{\"1074\":1}}],[\"列出时\",{\"1\":{\"1074\":1}}],[\"列出详情\",{\"1\":{\"1074\":1}}],[\"列出全部文件\",{\"1\":{\"1074\":2}}],[\"列出所有处于监听状态的tcp端口\",{\"1\":{\"1099\":1}}],[\"列出所有镜像\",{\"1\":{\"1070\":2}}],[\"列出所有通过compose运行的容器\",{\"1\":{\"852\":1}}],[\"列出指定容器内部的进程\",{\"1\":{\"811\":1}}],[\"列出最新n条容器日志\",{\"1\":{\"811\":1}}],[\"列出最近创建的n个容器\",{\"1\":{\"811\":1}}],[\"列出本地所有的镜像\",{\"1\":{\"810\":1}}],[\"列出docker主机上的镜像\",{\"1\":{\"810\":1}}],[\"列出当前暂存区文件的详细信息\",{\"1\":{\"780\":1}}],[\"列出当前暂存区的文件列表信息\",{\"1\":{\"780\":1}}],[\"列举一二\",{\"1\":{\"210\":1}}],[\"列举nginx服务器的最佳用途\",{\"1\":{\"207\":1}}],[\"案例3\",{\"1\":{\"746\":1}}],[\"案例2\",{\"1\":{\"746\":1}}],[\"案例1\",{\"1\":{\"746\":1}}],[\"案例\",{\"1\":{\"744\":1,\"745\":1}}],[\"案例说明\",{\"1\":{\"739\":1}}],[\"菜单调试\",{\"1\":{\"982\":1}}],[\"菜单\",{\"1\":{\"742\":1,\"956\":1}}],[\"菜鸟教程\",{\"1\":{\"329\":1}}],[\"弹出如下界面\",{\"1\":{\"741\":1}}],[\"弹窗广告等糟糕的用户体验问题\",{\"1\":{\"311\":1}}],[\"东北风\",{\"1\":{\"739\":1}}],[\"晴\",{\"1\":{\"739\":1}}],[\"济南\",{\"1\":{\"739\":1}}],[\"隐藏请求\",{\"1\":{\"738\":1}}],[\"隐式内连接\",{\"0\":{\"519\":1}}],[\"隐式转换\",{\"0\":{\"127\":1},\"1\":{\"129\":1}}],[\"隐式向上转换为基类的引用\",{\"1\":{\"126\":1}}],[\"隐式无参数构造器\",{\"0\":{\"71\":1}}],[\"达到的效果就是如图所示\",{\"1\":{\"736\":1}}],[\"翻译成中文就是预览\",{\"1\":{\"735\":1}}],[\"翻译成中文就是漂亮\",{\"1\":{\"735\":1}}],[\"翻译成中文未经过加工的\",{\"1\":{\"735\":1}}],[\"响应时间\",{\"1\":{\"739\":1}}],[\"响应体\",{\"1\":{\"735\":2,\"739\":1}}],[\"响应头中的断言\",{\"1\":{\"739\":1}}],[\"响应头\",{\"1\":{\"735\":2,\"739\":1}}],[\"响应由三部分组成\",{\"1\":{\"735\":1}}],[\"响应数据是发送请求后经过服务器处理后返回的结果\",{\"1\":{\"735\":1}}],[\"响应模型\",{\"1\":{\"530\":1}}],[\"见下图\",{\"1\":{\"732\":1}}],[\"俩者的效果是一样的\",{\"1\":{\"730\":1}}],[\"隔开\",{\"1\":{\"728\":1}}],[\"初次使用postman的朋友可能对界面上的一些元素不太熟悉\",{\"1\":{\"723\":1}}],[\"初始密码的作用是防止软件被他人滥用\",{\"1\":{\"265\":1}}],[\"初始化jenkins\",{\"0\":{\"910\":1}}],[\"初始化构建\",{\"0\":{\"865\":1}}],[\"初始化构建serviceprovider对象\",{\"1\":{\"660\":1}}],[\"初始化仓库\",{\"1\":{\"788\":1}}],[\"初始化代码仓库\",{\"0\":{\"777\":1}}],[\"初始化直接放在构造方法里\",{\"1\":{\"598\":1}}],[\"初始化和释放资源不需要标记单独的方法\",{\"1\":{\"598\":1}}],[\"初始化方法等\",{\"1\":{\"597\":1}}],[\"初始化方法的运行顺序如下\",{\"1\":{\"596\":1}}],[\"初始化对象等\",{\"1\":{\"586\":1}}],[\"初始化数据\",{\"1\":{\"501\":1}}],[\"初始化完成\",{\"1\":{\"167\":1}}],[\"初始化本地仓库\",{\"1\":{\"22\":1}}],[\"初始化之后会在当前目录下自动生成一个\",{\"1\":{\"22\":1}}],[\"初始化操作\",{\"1\":{\"22\":1}}],[\"初始化\",{\"1\":{\"21\":1,\"22\":1,\"444\":1}}],[\"速填写查询参数\",{\"1\":{\"719\":1}}],[\"速度还不够快\",{\"1\":{\"806\":1}}],[\"速度快\",{\"1\":{\"322\":1}}],[\"速度为严重影响\",{\"1\":{\"209\":1}}],[\"速度和性能\",{\"1\":{\"205\":1}}],[\"欢迎来到我的公众号\",{\"1\":{\"711\":1}}],[\"欢迎大家共同探讨和文明交流\",{\"1\":{\"444\":1}}],[\"及更高版本允许分配预发行包\",{\"1\":{\"1129\":1}}],[\"及其\",{\"1\":{\"936\":1}}],[\"及后台运行\",{\"1\":{\"811\":1}}],[\"及基础库\",{\"1\":{\"710\":1}}],[\"及用在那里\",{\"1\":{\"210\":1}}],[\"申请地址\",{\"1\":{\"710\":1}}],[\"摇一摇周边等模块\",{\"1\":{\"710\":1}}],[\"盛派微信sdk\",{\"0\":{\"710\":1}}],[\"华硕路由器插件\",{\"1\":{\"707\":1}}],[\"阿里云镜像仓库推送有问题\",{\"1\":{\"1070\":1}}],[\"阿里云的oss\",{\"1\":{\"954\":1}}],[\"阿里云配置内容来自博客\",{\"1\":{\"954\":1}}],[\"阿里云oss\",{\"0\":{\"954\":1},\"1\":{\"951\":1}}],[\"阿里云监控\",{\"1\":{\"707\":1}}],[\"阿里云实验室\",{\"1\":{\"138\":1}}],[\"扫码管理微信公众号进行接收消息\",{\"1\":{\"701\":1}}],[\"飞书\",{\"1\":{\"697\":1}}],[\"钉钉\",{\"1\":{\"697\":1}}],[\"邮件\",{\"1\":{\"705\":1}}],[\"邮件等实时信息推送平台\",{\"1\":{\"703\":1}}],[\"邮件和短信\",{\"1\":{\"696\":1,\"697\":1}}],[\"邮箱\",{\"1\":{\"17\":1,\"178\":1,\"209\":1,\"474\":1,\"802\":1}}],[\"登入\",{\"1\":{\"696\":1}}],[\"登入方式\",{\"1\":{\"696\":1}}],[\"登录服务器后查看镜像版本\",{\"1\":{\"1070\":1}}],[\"登录阿里云镜像仓库\",{\"1\":{\"1070\":1}}],[\"登录阿里云oss控制台\",{\"1\":{\"954\":1}}],[\"登录gitee进入\",{\"1\":{\"952\":1}}],[\"登录接口的密码\",{\"1\":{\"744\":1}}],[\"登录返回类\",{\"1\":{\"669\":1}}],[\"登录请求类\",{\"1\":{\"669\":1}}],[\"登录授权等操作实现事例\",{\"1\":{\"401\":1}}],[\"登录授权等操作实现事例如下\",{\"1\":{\"401\":1}}],[\"登录成功\",{\"1\":{\"364\":1}}],[\"登录路径\",{\"1\":{\"359\":1}}],[\"登录后用户的信息存入cookie中\",{\"1\":{\"358\":1}}],[\"登录信息保存\",{\"0\":{\"357\":1}}],[\"登录\",{\"0\":{\"219\":1},\"1\":{\"669\":1}}],[\"少量免费额度+捐赠提升额度\",{\"1\":{\"696\":1}}],[\"少说空话\",{\"1\":{\"183\":1}}],[\"收缩空行\",{\"1\":{\"968\":1}}],[\"收费\",{\"1\":{\"968\":1}}],[\"收费方式\",{\"1\":{\"696\":1}}],[\"收到指令之后就执行\",{\"1\":{\"805\":3}}],[\"收入流水\",{\"1\":{\"193\":1}}],[\"搬砖也是做贡献的\",{\"1\":{\"694\":1}}],[\"哈哈\",{\"1\":{\"694\":1}}],[\"哈希槽的概念\",{\"1\":{\"209\":1}}],[\"哈希表以值对和名称的形式存储数据\",{\"1\":{\"203\":1}}],[\"哈希表和数组列表有什么区别\",{\"1\":{\"203\":1}}],[\"哈希值\",{\"1\":{\"27\":2}}],[\"哈希值只要输入4位以上就可以执行了\",{\"1\":{\"27\":1}}],[\"告知节点捕获目标为\",{\"1\":{\"944\":1}}],[\"告警服务器地址\",{\"1\":{\"694\":1}}],[\"告诉服务端发送完成\",{\"1\":{\"678\":1,\"681\":1}}],[\"告诉外界程序当前程序现在是可以访问或者不能访问的\",{\"1\":{\"149\":1}}],[\"够我玩了\",{\"1\":{\"694\":1}}],[\"捷易快讯\",{\"0\":{\"694\":1}}],[\"怎样添加字典文件等\",{\"1\":{\"693\":1}}],[\"怎样绑定数据源\",{\"1\":{\"693\":1}}],[\"怎么样\",{\"1\":{\"693\":1}}],[\"怎么优化\",{\"1\":{\"206\":1}}],[\"怎么用\",{\"1\":{\"205\":1}}],[\"怎么买量的\",{\"1\":{\"193\":1}}],[\"怎么问也是有讲究的\",{\"1\":{\"191\":1}}],[\"怎么解决这\",{\"1\":{\"134\":1}}],[\"顺便提一下\",{\"1\":{\"693\":1}}],[\"顺序消费\",{\"1\":{\"208\":1}}],[\"顺序必须相同\",{\"1\":{\"105\":1}}],[\"顺序返回指定构造方法\",{\"1\":{\"99\":1}}],[\"况且对于fastreport\",{\"1\":{\"693\":1}}],[\"况且也使用不起来\",{\"1\":{\"689\":1}}],[\"狗日的\",{\"1\":{\"693\":1}}],[\"质保日期\",{\"1\":{\"693\":1}}],[\"趙佳發\",{\"1\":{\"693\":1}}],[\"科学上网\",{\"1\":{\"994\":1}}],[\"科技有限公司\",{\"1\":{\"693\":1}}],[\"科室进行管理\",{\"1\":{\"210\":1}}],[\"序号\",{\"1\":{\"693\":1,\"852\":1}}],[\"序列号\",{\"1\":{\"693\":1}}],[\"序列化饭序列化\",{\"1\":{\"128\":1}}],[\"型号\",{\"1\":{\"693\":1}}],[\"江湖人士醫院超聲設備標牌\",{\"1\":{\"693\":1}}],[\"供用户下载安装你的客户端即可\",{\"1\":{\"692\":1}}],[\"平常不会使用它的\",{\"1\":{\"692\":1}}],[\"平台发布的\",{\"1\":{\"247\":1}}],[\"平台\",{\"1\":{\"139\":1}}],[\"控件到主窗体上面\",{\"1\":{\"691\":1}}],[\"控制管理器默认每隔30s查询metrics的资源使用情况\",{\"1\":{\"914\":1}}],[\"控制一处不同\",{\"1\":{\"588\":1}}],[\"控制台输出并且输出到文件\",{\"0\":{\"460\":1}}],[\"控制台输出\",{\"0\":{\"458\":1}}],[\"控制台和\",{\"1\":{\"457\":1}}],[\"控制台\",{\"1\":{\"451\":1}}],[\"控制台程序\",{\"0\":{\"381\":1,\"386\":1}}],[\"控制对象的创建和销毁\",{\"1\":{\"436\":1}}],[\"控制什么\",{\"1\":{\"436\":2}}],[\"控制反转是一种面对对象编程的设计原则\",{\"1\":{\"434\":1}}],[\"控制反转\",{\"0\":{\"429\":1},\"1\":{\"436\":2,\"445\":1}}],[\"控制器选择了\",{\"1\":{\"1110\":1}}],[\"控制器会关注新创建的\",{\"1\":{\"941\":1}}],[\"控制器会把生成的nginx配置写入\",{\"1\":{\"931\":1}}],[\"控制器依赖注入服务\",{\"1\":{\"694\":1}}],[\"控制器方法\",{\"1\":{\"501\":1}}],[\"控制器设置版本\",{\"0\":{\"488\":1,\"639\":1,\"645\":1,\"651\":1}}],[\"控制器使用\",{\"0\":{\"456\":1}}],[\"控制器中使用构造函数注入iappcache\",{\"1\":{\"378\":1}}],[\"控制器中使用\",{\"0\":{\"464\":1},\"1\":{\"366\":1}}],[\"控制器对应控制器\",{\"1\":{\"145\":1}}],[\"控制项\",{\"1\":{\"243\":1}}],[\"控制错误信息\",{\"1\":{\"206\":1}}],[\"控制文件下载\",{\"1\":{\"206\":1}}],[\"控制单个索引的量\",{\"1\":{\"204\":1}}],[\"控制单索引大小在200gb以内\",{\"1\":{\"204\":1}}],[\"控制或智能访问\",{\"1\":{\"202\":1}}],[\"商业版镜像\",{\"1\":{\"1032\":1}}],[\"商业版和消费者版镜像的区别\",{\"0\":{\"1032\":1}}],[\"商用它是付费的\",{\"1\":{\"690\":1}}],[\"商品的交易价格计算\",{\"1\":{\"133\":1}}],[\"商品的波段性的热点高频信息\",{\"1\":{\"133\":1}}],[\"商品关键字\",{\"1\":{\"133\":1}}],[\"商品图片\",{\"1\":{\"133\":1}}],[\"商品描述详情评价\",{\"1\":{\"133\":1}}],[\"商品基本信息\",{\"1\":{\"133\":1}}],[\"市面上报表有多种产品\",{\"1\":{\"690\":1}}],[\"财务系统等等\",{\"1\":{\"690\":1}}],[\"企业版和教育版\",{\"1\":{\"1102\":1}}],[\"企业版\",{\"1\":{\"804\":1,\"1032\":1}}],[\"企业号\",{\"1\":{\"710\":1}}],[\"企业微信\",{\"1\":{\"697\":1}}],[\"企业微信应用消息\",{\"1\":{\"697\":1}}],[\"企业的erp系统\",{\"1\":{\"690\":1}}],[\"企业应用架构模式\",{\"1\":{\"179\":1}}],[\"升级完成即可\",{\"1\":{\"949\":1}}],[\"升级installer\",{\"1\":{\"689\":1}}],[\"升级所有包同时也升级软件和系统内核\",{\"1\":{\"537\":1}}],[\"载修改文件时间为\",{\"1\":{\"1077\":1}}],[\"载入测试镜像测试\",{\"1\":{\"876\":1}}],[\"载入所有配置文件\",{\"1\":{\"564\":1}}],[\"载\",{\"1\":{\"689\":1}}],[\"偷懒\",{\"1\":{\"710\":1}}],[\"偷\",{\"1\":{\"689\":1}}],[\"截图功能\",{\"0\":{\"1025\":1}}],[\"截其中一个容器如下\",{\"1\":{\"816\":1}}],[\"截取为图片\",{\"1\":{\"687\":1}}],[\"截至到这\",{\"1\":{\"554\":1}}],[\"拆分\",{\"1\":{\"685\":1}}],[\"拆分多个\",{\"1\":{\"208\":1}}],[\"遍历每一页转为jpg\",{\"1\":{\"684\":1}}],[\"循环给服务端发送流\",{\"1\":{\"678\":1,\"681\":1}}],[\"批量修改\",{\"1\":{\"1044\":1}}],[\"批量图片下载器\",{\"1\":{\"1002\":1}}],[\"批量断言\",{\"1\":{\"719\":1}}],[\"批量执行接口请求\",{\"0\":{\"737\":1},\"1\":{\"718\":1}}],[\"批量添加用户信息\",{\"1\":{\"680\":1}}],[\"批量添加用户\",{\"1\":{\"679\":1}}],[\"批量获取用户信息\",{\"1\":{\"676\":1}}],[\"批量注入可以使用scrutor或者自己封装\",{\"1\":{\"660\":1}}],[\"空地是少不了的\",{\"1\":{\"820\":1}}],[\"空地\",{\"1\":{\"820\":1}}],[\"空是未知\",{\"1\":{\"671\":1}}],[\"空间\",{\"1\":{\"780\":1}}],[\"空间才可以实施一个迁移\",{\"1\":{\"205\":1}}],[\"空间占用小\",{\"1\":{\"204\":1}}],[\"订单服务根据用户id获取用户的详细信息数据\",{\"1\":{\"671\":1}}],[\"订阅\",{\"1\":{\"209\":1}}],[\"订阅变更日志的思想\",{\"1\":{\"134\":1}}],[\"订阅变更日志\",{\"1\":{\"134\":4}}],[\"订阅数据库变更日志\",{\"1\":{\"134\":1}}],[\"身份认证和授权\",{\"1\":{\"668\":1}}],[\"晓晨系列教程\",{\"1\":{\"666\":1}}],[\"烦请指出来\",{\"1\":{\"662\":1}}],[\"已发布的捆绑将写入最终映像的\",{\"1\":{\"1070\":1}}],[\"已达到手工回归测试的目的\",{\"1\":{\"737\":1}}],[\"已全面支持微信公众号\",{\"1\":{\"710\":1}}],[\"已上线的配置如果发生修改\",{\"1\":{\"661\":1}}],[\"已经存在\",{\"1\":{\"1070\":1}}],[\"已经成为容器编排领域的领导者\",{\"1\":{\"914\":1}}],[\"已经可以将\",{\"1\":{\"872\":1}}],[\"已经不需要密码了\",{\"1\":{\"802\":1}}],[\"已经push过的\",{\"1\":{\"799\":1}}],[\"已经定义的全局变量和环境变量\",{\"1\":{\"741\":1}}],[\"已经写有教程了\",{\"1\":{\"537\":1}}],[\"已经设置自增键的插入\",{\"0\":{\"527\":1}}],[\"已经有6年历史了\",{\"1\":{\"467\":1}}],[\"已经在日志表中\",{\"1\":{\"208\":1}}],[\"已经选择了终结点\",{\"1\":{\"167\":1}}],[\"已经建立了连接\",{\"1\":{\"22\":1}}],[\"已经安装了docker\",{\"1\":{\"3\":1}}],[\"秘钥等信息\",{\"1\":{\"661\":1}}],[\"五种数据库\",{\"1\":{\"661\":1}}],[\"五种开源协议\",{\"1\":{\"253\":1}}],[\"场景\",{\"0\":{\"659\":1},\"1\":{\"775\":1}}],[\"场景下依旧有数据不一致问题\",{\"1\":{\"134\":1}}],[\"场景下无法保证缓存和数据一致性\",{\"1\":{\"134\":1}}],[\"窗口和全屏截图\",{\"1\":{\"1025\":1}}],[\"窗口和区域三种录制方式\",{\"1\":{\"292\":1}}],[\"窗体\",{\"1\":{\"658\":1}}],[\"麻烦指正\",{\"1\":{\"657\":1}}],[\"麻烦指出来一起成长\",{\"1\":{\"591\":1}}],[\"演示将\",{\"1\":{\"949\":1}}],[\"演示如下\",{\"1\":{\"811\":2}}],[\"演示统一用容器id\",{\"1\":{\"811\":1}}],[\"演示网站\",{\"1\":{\"689\":1}}],[\"演示根据用户id去更新用户的姓名\",{\"1\":{\"631\":1}}],[\"演示添加用户操作\",{\"1\":{\"607\":1}}],[\"赵六\",{\"1\":{\"612\":1,\"677\":1,\"681\":1}}],[\"女\",{\"1\":{\"608\":1,\"609\":1,\"621\":1,\"622\":1}}],[\"约定优先的\",{\"1\":{\"663\":1}}],[\"约定用于向服务端提交数据操作\",{\"1\":{\"606\":1}}],[\"约束\",{\"1\":{\"164\":1}}],[\"约束的两种方式\",{\"1\":{\"163\":1}}],[\"男\",{\"1\":{\"600\":1}}],[\"格式化代码\",{\"1\":{\"965\":1,\"968\":1}}],[\"格式化后的数据看起来更加直观\",{\"1\":{\"735\":1}}],[\"格式为\",{\"1\":{\"728\":1,\"811\":1,\"1077\":1}}],[\"格式\",{\"1\":{\"690\":1,\"835\":1,\"1073\":1,\"1074\":2,\"1075\":1,\"1076\":1,\"1077\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1082\":1,\"1083\":1,\"1084\":1}}],[\"格式如下\",{\"1\":{\"600\":1}}],[\"格式wie\",{\"1\":{\"401\":1}}],[\"国内的源\",{\"1\":{\"1125\":1}}],[\"国内的一些定制\",{\"1\":{\"247\":1}}],[\"国内平台\",{\"1\":{\"952\":1}}],[\"国内网络\",{\"1\":{\"865\":1}}],[\"国产的一个类似于postman的工具\",{\"1\":{\"715\":1}}],[\"国际\",{\"1\":{\"599\":1}}],[\"署名\",{\"1\":{\"599\":1}}],[\"版权\",{\"1\":{\"599\":1}}],[\"版本范围\",{\"0\":{\"1131\":1}}],[\"版本要相互对应\",{\"1\":{\"1110\":1}}],[\"版本选择\",{\"1\":{\"1110\":1}}],[\"版本下载\",{\"1\":{\"1110\":1}}],[\"版本的引导程序\",{\"1\":{\"962\":1}}],[\"版本后\",{\"1\":{\"919\":1}}],[\"版本后开始大量使用的数据结构是\",{\"1\":{\"204\":1}}],[\"版本之后分为\",{\"1\":{\"804\":1}}],[\"版本看个人爱好\",{\"1\":{\"802\":1}}],[\"版本库是集中存放在中央服务器的\",{\"1\":{\"798\":1}}],[\"版本库又叫做仓库\",{\"1\":{\"752\":1}}],[\"版本\",{\"1\":{\"690\":1,\"963\":1,\"1037\":1,\"1110\":1,\"1122\":1,\"1123\":1,\"1129\":3}}],[\"版本历史记录了配置的历史信息\",{\"1\":{\"661\":1}}],[\"版本号为build时的当前时间\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"版本号通过传入的参数去确定的\",{\"0\":{\"1123\":1},\"1\":{\"1121\":1}}],[\"版本号由每次编译打包时的当前时间去确定的\",{\"0\":{\"1122\":1},\"1\":{\"1121\":1}}],[\"版本号\",{\"1\":{\"574\":1,\"576\":1}}],[\"版本上\",{\"1\":{\"560\":1}}],[\"版本2\",{\"1\":{\"488\":1,\"639\":1,\"645\":1,\"651\":1}}],[\"版本1\",{\"1\":{\"488\":1,\"639\":1,\"645\":1,\"651\":1}}],[\"版本控制\",{\"0\":{\"485\":1,\"571\":1}}],[\"版本是\",{\"1\":{\"449\":1}}],[\"版本回溯\",{\"0\":{\"27\":1}}],[\"版本管理就是管理更新的历史记录\",{\"1\":{\"11\":1}}],[\"版本管理\",{\"0\":{\"11\":1}}],[\"持续长期有效\",{\"1\":{\"595\":1}}],[\"迫使我们把程序设计成易于调用和可测试的\",{\"1\":{\"594\":1}}],[\"抽象出\",{\"1\":{\"919\":1}}],[\"抽象类\",{\"1\":{\"593\":1}}],[\"抽象接口\",{\"1\":{\"403\":1}}],[\"断言update\",{\"1\":{\"739\":1}}],[\"断言city等于济南\",{\"1\":{\"739\":1}}],[\"断言响应状态码为200\",{\"1\":{\"739\":1}}],[\"断言响应状态消息包含ok\",{\"1\":{\"739\":1}}],[\"断言响应时间<200ms\",{\"1\":{\"739\":1}}],[\"断言响应时间\",{\"1\":{\"739\":1}}],[\"断言响应体等于xxx字符串\",{\"1\":{\"739\":1}}],[\"断言响应体中包含xxx字符串\",{\"1\":{\"739\":1}}],[\"断言响应体\",{\"1\":{\"739\":2}}],[\"断言响应头存在\",{\"1\":{\"739\":1}}],[\"断言响应头中包含\",{\"1\":{\"739\":1}}],[\"断言状态消息\",{\"1\":{\"739\":1}}],[\"断言状态码\",{\"1\":{\"739\":1}}],[\"断言执行结果查看\",{\"1\":{\"739\":1}}],[\"断言执行顺序\",{\"1\":{\"739\":1}}],[\"断言所用语言\",{\"1\":{\"739\":1}}],[\"断言编写位置\",{\"1\":{\"739\":1}}],[\"断言统计\",{\"1\":{\"737\":1}}],[\"断言\",{\"0\":{\"739\":1},\"1\":{\"718\":1}}],[\"断言阶段\",{\"1\":{\"587\":1,\"591\":2}}],[\"断路器只要一对result赋值就不继续往后赋值了\",{\"1\":{\"404\":2}}],[\"行\",{\"1\":{\"1111\":1}}],[\"行尾字符以及编码等\",{\"1\":{\"955\":1}}],[\"行使不同职责的\",{\"1\":{\"937\":1}}],[\"行数\",{\"1\":{\"829\":1}}],[\"行为阶段\",{\"1\":{\"587\":1,\"591\":2}}],[\"行星需击中两次\",{\"1\":{\"243\":1}}],[\"争议篇\",{\"0\":{\"584\":1}}],[\"她根据类库的deps\",{\"1\":{\"577\":1}}],[\"固定写法\",{\"1\":{\"575\":1}}],[\"短信\",{\"1\":{\"703\":1,\"705\":1}}],[\"短信服务\",{\"1\":{\"575\":1}}],[\"短信服务地址\",{\"1\":{\"575\":1}}],[\"短路器\",{\"1\":{\"402\":2}}],[\"居然是忘了注入服务了\",{\"1\":{\"575\":1}}],[\"呕吼居然是错误信息\",{\"1\":{\"575\":1}}],[\"判断插件中是否存在iproviderbase的实现类\",{\"1\":{\"574\":1}}],[\"者\",{\"1\":{\"564\":1}}],[\"组等信息\",{\"1\":{\"1074\":1}}],[\"组件维护\",{\"1\":{\"919\":1}}],[\"组件是付费产品\",{\"1\":{\"693\":1}}],[\"组件\",{\"1\":{\"682\":1}}],[\"组件包介绍\",{\"0\":{\"668\":1}}],[\"组名自定义\",{\"1\":{\"564\":1}}],[\"组织机构图等\",{\"1\":{\"296\":1}}],[\"权限\",{\"1\":{\"1084\":1}}],[\"权限计算\",{\"1\":{\"1084\":1,\"1085\":1}}],[\"权限数字对照表\",{\"1\":{\"1084\":1}}],[\"权限控制等一系列操作\",{\"1\":{\"403\":1}}],[\"权限控制器过滤器\",{\"1\":{\"401\":2}}],[\"权重越低\",{\"1\":{\"564\":3}}],[\"权重\",{\"1\":{\"564\":3}}],[\"监视器窗口\",{\"1\":{\"978\":1}}],[\"监视\",{\"1\":{\"974\":1}}],[\"监听目标为\",{\"1\":{\"945\":1}}],[\"监听的ip及端口\",{\"1\":{\"564\":1}}],[\"监控服务中程序的运行状态\",{\"1\":{\"1019\":1}}],[\"监控或者其他系统管理应用\",{\"1\":{\"914\":1}}],[\"监控\",{\"1\":{\"720\":1}}],[\"监控文件\",{\"0\":{\"375\":1}}],[\"监控和识别的问题\",{\"1\":{\"210\":1}}],[\"题外话\",{\"1\":{\"563\":1}}],[\"环回适配器是一个网络接口\",{\"1\":{\"562\":1}}],[\"环境配置\",{\"0\":{\"1012\":1}}],[\"环境等构建成镜像啦\",{\"1\":{\"818\":1}}],[\"环境等构建成自己想要的应用镜像\",{\"1\":{\"817\":1}}],[\"环境|全局\",{\"1\":{\"742\":1}}],[\"环境或请求中引用\",{\"1\":{\"740\":1}}],[\"环境已经装好\",{\"1\":{\"539\":1}}],[\"环境变量也可以\",{\"1\":{\"745\":1}}],[\"环境变量\",{\"1\":{\"389\":1,\"564\":1,\"740\":2,\"868\":1}}],[\"环境\",{\"0\":{\"740\":1},\"1\":{\"207\":1,\"1121\":1}}],[\"起用防火墙开机启动\",{\"1\":{\"911\":1}}],[\"起\",{\"1\":{\"562\":1}}],[\"起几个毫无关联的\",{\"1\":{\"209\":1}}],[\"库和\",{\"1\":{\"561\":1}}],[\"捆绑包可安装\",{\"1\":{\"561\":1}}],[\"仔细查看swagger配置后发现\",{\"1\":{\"554\":1}}],[\"仔细想一下\",{\"1\":{\"134\":1}}],[\"难道我们部署的方式有问题\",{\"1\":{\"554\":1}}],[\"难以自动化\",{\"1\":{\"210\":1}}],[\"懵逼\",{\"1\":{\"554\":1}}],[\"拉取镜像\",{\"0\":{\"884\":1},\"1\":{\"859\":1}}],[\"拉取\",{\"1\":{\"798\":3}}],[\"拉取代码\",{\"1\":{\"798\":1}}],[\"拉取成最新的数据\",{\"1\":{\"798\":1}}],[\"拉取方法\",{\"1\":{\"797\":1}}],[\"拉取某一分支\",{\"1\":{\"751\":1}}],[\"拉取仓库\",{\"0\":{\"751\":1}}],[\"拉取基础镜像和sdk\",{\"1\":{\"553\":1}}],[\"拉取项目并填充内容\",{\"1\":{\"8\":1}}],[\"艾三元\",{\"1\":{\"549\":1}}],[\"意思是设置了容忍的pod将可以容忍污点的存在\",{\"1\":{\"914\":1}}],[\"意思就是linux没有开启\",{\"1\":{\"893\":1}}],[\"意思就是在多台机器上启动多个\",{\"1\":{\"208\":1}}],[\"意思就是说如果你的类库是net\",{\"1\":{\"141\":1}}],[\"意外终止\",{\"1\":{\"543\":1}}],[\"置开机启动\",{\"1\":{\"541\":1}}],[\"拷贝文件如下\",{\"1\":{\"852\":1}}],[\"拷贝资源到容器\",{\"1\":{\"826\":1}}],[\"拷贝插件文件放到该目录下\",{\"1\":{\"575\":1}}],[\"拷贝项目\",{\"0\":{\"539\":1}}],[\"拷贝一个简单项目\",{\"1\":{\"8\":1}}],[\"明显减少了很多不必要的http请求次数\",{\"1\":{\"532\":1}}],[\"于此同时\",{\"1\":{\"532\":1}}],[\"于是就有了实现自动升级包版本的想法\",{\"1\":{\"1121\":1}}],[\"于是\",{\"1\":{\"183\":1}}],[\"孩子们间隔1\",{\"1\":{\"531\":1}}],[\"体验一键启动\",{\"0\":{\"852\":1}}],[\"体育\",{\"1\":{\"530\":1}}],[\"体量小\",{\"1\":{\"134\":1}}],[\"聊聊\",{\"0\":{\"787\":1}}],[\"聊聊工作区和暂存区\",{\"0\":{\"780\":1},\"1\":{\"780\":1}}],[\"聊聊开源软件的\",{\"1\":{\"253\":1}}],[\"聊天\",{\"1\":{\"530\":1}}],[\"四种orm框架的对比\",{\"1\":{\"529\":1}}],[\"四猿外\",{\"1\":{\"201\":1}}],[\"思考\",{\"1\":{\"594\":1}}],[\"思路\",{\"1\":{\"571\":1}}],[\"思想就是表实体和数据库表之间的相互转换\",{\"1\":{\"529\":1}}],[\"思维导图\",{\"0\":{\"294\":1},\"1\":{\"296\":1}}],[\"李思\",{\"1\":{\"528\":1}}],[\"李四\",{\"1\":{\"46\":1,\"81\":3,\"511\":1,\"609\":1,\"677\":1,\"681\":1}}],[\"求科目数\",{\"1\":{\"524\":1}}],[\"求职者面试完都想早点知道结果\",{\"1\":{\"201\":1}}],[\"求职者按时到了\",{\"1\":{\"201\":1}}],[\"求职者多带几份打印好的简历\",{\"1\":{\"184\":1}}],[\"求职者坐在椅子上一动不动\",{\"1\":{\"184\":1}}],[\"求职者初衷是想让自己的简历更好看\",{\"1\":{\"182\":1}}],[\"形成了网络桥梁\",{\"1\":{\"840\":1}}],[\"形成了词和文章的映射关系表\",{\"1\":{\"204\":1}}],[\"形式的查询\",{\"1\":{\"523\":1}}],[\"外网是不通的\",{\"1\":{\"1111\":1}}],[\"外部网络选择参考网络连接里面\",{\"1\":{\"1104\":1}}],[\"外部客户端只看到\",{\"1\":{\"931\":1}}],[\"外部访问集群\",{\"0\":{\"929\":1}}],[\"外的请求通过\",{\"1\":{\"927\":1}}],[\"外连接join后必须有into\",{\"1\":{\"521\":1}}],[\"外连接\",{\"0\":{\"521\":1}}],[\"外键对象集合\",{\"1\":{\"523\":1}}],[\"外键可以有重复的\",{\"1\":{\"206\":1}}],[\"外键\",{\"1\":{\"206\":3}}],[\"外键和索引的区别\",{\"1\":{\"206\":2}}],[\"`yymmddhhmm`\",{\"1\":{\"1122\":2,\"1123\":1}}],[\"`count`\",{\"1\":{\"524\":2}}],[\"`coursename`\",{\"1\":{\"518\":2,\"519\":2,\"520\":4,\"522\":1}}],[\"`key`\",{\"1\":{\"524\":2}}],[\"`t`\",{\"1\":{\"520\":4}}],[\"`id`\",{\"1\":{\"518\":1,\"519\":1,\"520\":2,\"522\":2,\"528\":1}}],[\"`score`\",{\"1\":{\"518\":1,\"519\":1,\"520\":2,\"522\":1,\"524\":2}}],[\"`s`\",{\"1\":{\"518\":5,\"519\":5,\"520\":9,\"522\":3,\"524\":6}}],[\"`grade`\",{\"1\":{\"518\":1,\"519\":1,\"520\":3}}],[\"`password`\",{\"1\":{\"518\":1,\"519\":1,\"520\":2,\"528\":1}}],[\"`account`\",{\"1\":{\"518\":1,\"519\":1,\"520\":2,\"522\":1,\"528\":1}}],[\"`userinfo`\",{\"1\":{\"528\":1}}],[\"`userid`\",{\"1\":{\"518\":1,\"519\":1,\"520\":3,\"522\":2,\"524\":4}}],[\"`user`\",{\"1\":{\"518\":1,\"519\":1,\"520\":2,\"522\":1}}],[\"`u`\",{\"1\":{\"518\":4,\"519\":4,\"520\":8,\"522\":4}}],[\"`uname\",{\"1\":{\"3\":2}}],[\"王五\",{\"1\":{\"511\":1,\"613\":1,\"677\":1,\"681\":1}}],[\"迁移数据库\",{\"1\":{\"502\":1}}],[\"迁移命令\",{\"1\":{\"501\":1}}],[\"另一个已签名\",{\"1\":{\"1037\":1}}],[\"另一个就是\",{\"1\":{\"914\":1}}],[\"另一端添加到容器所属的网络命名空间\",{\"1\":{\"926\":1}}],[\"另一端未标注\",{\"1\":{\"926\":1}}],[\"另一端在主机中以veth\",{\"1\":{\"840\":1}}],[\"另一种方式就各自服务单独启动为一个容器服务\",{\"1\":{\"843\":1}}],[\"另一种配置连接数据库的方式\",{\"1\":{\"502\":1}}],[\"另一方面让我测试httpclient的一些效果\",{\"1\":{\"600\":1}}],[\"另外在每个应用中编写这个逻辑也是很低效的\",{\"1\":{\"936\":1}}],[\"另外还会再次说到\",{\"1\":{\"944\":1}}],[\"另外还有一个点\",{\"1\":{\"843\":1}}],[\"另外还可以继承自actionfilterattribute\",{\"1\":{\"403\":1}}],[\"另外还可以增加\",{\"1\":{\"204\":1}}],[\"另外通过手动这种操作很明显效率不高\",{\"1\":{\"812\":1}}],[\"另外也有很多场景需要容器之间共享数据\",{\"1\":{\"811\":1}}],[\"另外需要说明的是\",{\"1\":{\"690\":1}}],[\"另外应尽量避免统一的\",{\"1\":{\"210\":1}}],[\"另外一种处理原则是\",{\"1\":{\"208\":1}}],[\"另外对于写操作\",{\"1\":{\"204\":1}}],[\"另外就是注意基本礼貌\",{\"1\":{\"184\":1}}],[\"另外\",{\"1\":{\"162\":1,\"163\":1,\"168\":1,\"183\":1,\"192\":1,\"201\":1,\"203\":2,\"204\":1,\"433\":1,\"914\":1}}],[\"增删改查\",{\"0\":{\"502\":1}}],[\"增加以\",{\"1\":{\"973\":1}}],[\"增加一个方法入参是连续流\",{\"1\":{\"679\":1}}],[\"增加一个方法参数是一个请求对象\",{\"1\":{\"674\":1}}],[\"增加一个接口获取配置信息\",{\"1\":{\"661\":1}}],[\"增加一个插件元数据信息的类\",{\"1\":{\"573\":1}}],[\"增加了一个serviceproviderhelper的操作类\",{\"1\":{\"660\":1}}],[\"增加了类型安全验证机制\",{\"1\":{\"443\":1}}],[\"增加发送短信的实现类smsservice\",{\"1\":{\"575\":1}}],[\"增加opendbsend类\",{\"1\":{\"501\":1}}],[\"增加数据库上下文opendbcontext\",{\"1\":{\"501\":1}}],[\"增加实体类\",{\"1\":{\"501\":1}}],[\"增加modelactionfiter过滤器\",{\"1\":{\"477\":1}}],[\"增加新的shape\",{\"1\":{\"442\":1}}],[\"增加请求限制过滤器\",{\"1\":{\"427\":1}}],[\"增加限制一个用户在2秒内只能请求1次\",{\"1\":{\"425\":1}}],[\"增加token验证过期的时候给返回头设置提示\",{\"1\":{\"364\":1}}],[\"增加\",{\"1\":{\"243\":1}}],[\"增加拼音\",{\"1\":{\"215\":1}}],[\"增加繁体\",{\"1\":{\"215\":1}}],[\"增加词汇\",{\"1\":{\"215\":1}}],[\"增加文件描述符\",{\"1\":{\"204\":1}}],[\"余额\",{\"1\":{\"501\":1}}],[\"帐号\",{\"1\":{\"501\":1,\"502\":1,\"669\":1,\"674\":1,\"676\":1,\"677\":1,\"679\":1}}],[\"帐号密码就是上面配置的管理员密码\",{\"1\":{\"219\":1}}],[\"签名的变体在文件名中具有\",{\"1\":{\"1037\":1}}],[\"签名\",{\"1\":{\"484\":1}}],[\"签订\",{\"1\":{\"194\":1}}],[\"废弃接口\",{\"1\":{\"484\":1}}],[\"入参类型\",{\"1\":{\"483\":1}}],[\"入职后写增删改查\",{\"1\":{\"201\":1}}],[\"风格的\",{\"1\":{\"479\":1,\"551\":1}}],[\"故而在序列化时转换成字符类型\",{\"1\":{\"478\":1}}],[\"故障等情况发生变化\",{\"1\":{\"937\":1}}],[\"故障\",{\"1\":{\"446\":1}}],[\"禁用\",{\"1\":{\"947\":1}}],[\"禁用防火墙开机启动\",{\"1\":{\"911\":2}}],[\"禁用自动400响应\",{\"1\":{\"477\":1}}],[\"禁用绑定源推理\",{\"1\":{\"477\":1}}],[\"禁用验证\",{\"0\":{\"477\":1},\"1\":{\"477\":1}}],[\"禁止firewall开机启动\",{\"1\":{\"1109\":1}}],[\"禁止访问路径\",{\"1\":{\"359\":1}}],[\"禁止一些网站的访问\",{\"1\":{\"322\":1}}],[\"禁止外部访问链接\",{\"1\":{\"206\":1}}],[\"绑定\",{\"1\":{\"918\":1}}],[\"绑定时候自定验证id是否有效\",{\"1\":{\"474\":1}}],[\"绑定相关的文章\",{\"1\":{\"467\":1}}],[\"友好名称错误提示\",{\"1\":{\"474\":1}}],[\"练习教程\",{\"1\":{\"467\":1}}],[\"混合了最低版本\",{\"1\":{\"1131\":1}}],[\"混合\",{\"1\":{\"447\":1}}],[\"追加到文件\",{\"1\":{\"447\":1}}],[\"立即下载基于\",{\"1\":{\"1012\":2}}],[\"立即开始安装\",{\"1\":{\"1012\":1}}],[\"立即重试很大概率\",{\"1\":{\"134\":1}}],[\"立刻修复\",{\"1\":{\"446\":1,\"466\":1}}],[\"急需被关注的问题\",{\"1\":{\"446\":1}}],[\"量\",{\"1\":{\"446\":1}}],[\"核心容器体系结构\",{\"1\":{\"445\":1}}],[\"核心问题有\",{\"1\":{\"134\":1}}],[\"销毁等\",{\"1\":{\"444\":1}}],[\"感觉就有点麻烦啦\",{\"1\":{\"842\":1}}],[\"感觉这个版本使用的公司还不少\",{\"1\":{\"560\":1}}],[\"感兴趣的小伙伴可以点进去看看\",{\"1\":{\"838\":1}}],[\"感兴趣的同学可以下载源码查阅spring\",{\"1\":{\"443\":1}}],[\"感谢您的阅读\",{\"1\":{\"430\":1}}],[\"感谢群里老哥的帮助\",{\"1\":{\"346\":1}}],[\"感谢开发者为社区做出的共享\",{\"1\":{\"211\":1,\"1117\":1}}],[\"粘贴\",{\"1\":{\"965\":1}}],[\"粘贴为富文本\",{\"1\":{\"304\":1}}],[\"粘合剂\",{\"1\":{\"436\":3}}],[\"齿轮之间的传动全部依靠\",{\"1\":{\"436\":1}}],[\"齿轮组中齿轮之间的啮合关系\",{\"1\":{\"435\":1}}],[\"早在2004年\",{\"1\":{\"436\":1}}],[\"早通知早让别人踏实\",{\"1\":{\"201\":1}}],[\"缩进的空格数不重要\",{\"1\":{\"850\":1}}],[\"缩进不允许使用tab\",{\"1\":{\"850\":1}}],[\"缩写为ioc\",{\"1\":{\"436\":1}}],[\"缩放为最佳\",{\"1\":{\"243\":1}}],[\"共享网络命名空间\",{\"1\":{\"927\":1}}],[\"共享充电宝的模式就是把充电过程中的所有设备和过程打包成一个盒子\",{\"1\":{\"433\":1}}],[\"共享充电宝应用而生\",{\"1\":{\"433\":1}}],[\"共享充电宝\",{\"0\":{\"431\":1,\"433\":1},\"1\":{\"430\":1}}],[\"共同完成某项任务\",{\"1\":{\"435\":1}}],[\"化解了这场尴尬\",{\"1\":{\"432\":1}}],[\"眼看着排队检票的队伍都进站了\",{\"1\":{\"432\":1}}],[\"眼看就要轮到我检票了\",{\"1\":{\"432\":1}}],[\"手工\",{\"1\":{\"1044\":1}}],[\"手工方式创建一个空的变量名\",{\"1\":{\"742\":1}}],[\"手机客户端\",{\"1\":{\"697\":1}}],[\"手机号码\",{\"1\":{\"474\":1}}],[\"手机没电了\",{\"1\":{\"432\":1}}],[\"手机早已成为我们生活中不可或缺的一部分\",{\"1\":{\"432\":1}}],[\"手动安装一下看看效果\",{\"1\":{\"1012\":1}}],[\"手动这种方式\",{\"1\":{\"812\":1}}],[\"手动保存数据\",{\"0\":{\"812\":1}}],[\"手动设置\",{\"1\":{\"322\":1}}],[\"手动发到\",{\"1\":{\"208\":1}}],[\"手动回复确认消息\",{\"1\":{\"208\":1}}],[\"尴尬往事\",{\"0\":{\"432\":1}}],[\"患者标识无效\",{\"1\":{\"418\":4}}],[\"渲染视图后执行\",{\"1\":{\"405\":1}}],[\"渲染不同的视图\",{\"1\":{\"405\":1}}],[\"呈现前\",{\"1\":{\"405\":1}}],[\"日常必备的16个linux命令\",{\"1\":{\"1109\":1}}],[\"日常可以用于后端开发人员测试接口或者前后端联调使用\",{\"1\":{\"479\":1}}],[\"日期或时间\",{\"1\":{\"1077\":1}}],[\"日期\",{\"1\":{\"447\":1,\"850\":1}}],[\"日志文件等\",{\"1\":{\"799\":1}}],[\"日志调试\",{\"0\":{\"738\":1},\"1\":{\"718\":1}}],[\"日志\",{\"1\":{\"661\":1,\"668\":1,\"712\":1}}],[\"日志路径\",{\"1\":{\"564\":1}}],[\"日志等配置\",{\"1\":{\"561\":1}}],[\"日志格式\",{\"1\":{\"447\":1}}],[\"日志配置通常由\",{\"1\":{\"446\":1}}],[\"日志配置通常取决于\",{\"1\":{\"446\":1}}],[\"日志级别配置\",{\"1\":{\"447\":2}}],[\"日志级别\",{\"1\":{\"446\":1}}],[\"日志级别判断指示严重性或重要性\",{\"1\":{\"446\":1}}],[\"日志级别说明\",{\"1\":{\"446\":1}}],[\"日志记录\",{\"1\":{\"421\":1}}],[\"日志收集\",{\"1\":{\"404\":2,\"914\":1}}],[\"日历\",{\"0\":{\"317\":1}}],[\"刚才保存的私人令牌\",{\"1\":{\"952\":1}}],[\"刚才接口返回的值\",{\"1\":{\"402\":2}}],[\"刚开始它叫做\",{\"1\":{\"268\":1}}],[\"处可以选择\",{\"1\":{\"956\":1}}],[\"处\",{\"1\":{\"401\":1,\"564\":1}}],[\"处理器内核总数\",{\"1\":{\"1110\":1}}],[\"处理器数量\",{\"1\":{\"1110\":1}}],[\"处理器数量选择\",{\"1\":{\"1110\":1}}],[\"处理\",{\"1\":{\"781\":1,\"925\":1}}],[\"处理失败\",{\"1\":{\"404\":2}}],[\"处理完再回来处理这个长请求\",{\"1\":{\"326\":1}}],[\"处理客户端请求\",{\"1\":{\"322\":1}}],[\"处理复杂的游戏逻辑\",{\"1\":{\"243\":1}}],[\"处理单一专业的业务逻辑\",{\"1\":{\"210\":1}}],[\"处理消息成功后\",{\"1\":{\"208\":1}}],[\"处理消息之前\",{\"1\":{\"208\":1}}],[\"处理消息队列丢数据的情况\",{\"1\":{\"208\":1}}],[\"处理请求\",{\"1\":{\"207\":1}}],[\"处理到可能发生阻塞的地方\",{\"1\":{\"207\":1}}],[\"处理应用程序\",{\"1\":{\"139\":1}}],[\"猜想\",{\"1\":{\"401\":1}}],[\"猜字等\",{\"1\":{\"243\":1}}],[\"区别就是关注点是不同的\",{\"1\":{\"399\":1}}],[\"区别主要是存储和读取的系统处理和耗时方面有区别\",{\"1\":{\"343\":1}}],[\"永远与代码同步\",{\"1\":{\"594\":1}}],[\"永远不会返回\",{\"1\":{\"393\":1}}],[\"永不过期\",{\"1\":{\"382\":1,\"387\":1}}],[\"捞月亮的猴子\",{\"1\":{\"382\":1}}],[\"北京\",{\"1\":{\"382\":2,\"387\":2}}],[\"滑动过期时间\",{\"1\":{\"372\":1}}],[\"效果\",{\"0\":{\"1022\":1}}],[\"效果还是不错\",{\"1\":{\"872\":1}}],[\"效果明显啊\",{\"1\":{\"867\":1}}],[\"效果同上\",{\"1\":{\"372\":1}}],[\"效果一样\",{\"1\":{\"148\":1}}],[\"绝对路径或相对路径\",{\"1\":{\"1073\":1}}],[\"绝对路径\",{\"1\":{\"1072\":1}}],[\"绝对路径和相对路径\",{\"0\":{\"1072\":1}}],[\"绝对感觉很给力\",{\"1\":{\"807\":1}}],[\"绝对过期时间2\",{\"1\":{\"373\":1}}],[\"绝对过期时间1\",{\"1\":{\"373\":1}}],[\"绝对过期时间\",{\"1\":{\"372\":2}}],[\"绝大多数bug可以通过单元测试测试出来\",{\"1\":{\"594\":1}}],[\"绝大部分人都知道\",{\"1\":{\"184\":1}}],[\"头或者\",{\"1\":{\"938\":1}}],[\"头信息\",{\"1\":{\"484\":1}}],[\"头像\",{\"1\":{\"368\":1}}],[\"头部注释\",{\"1\":{\"321\":1}}],[\"昵称\",{\"1\":{\"368\":1,\"671\":1}}],[\"封装一个dapper操作类\",{\"1\":{\"1047\":1}}],[\"封装字段\",{\"1\":{\"965\":1}}],[\"封装文件\",{\"0\":{\"656\":1}}],[\"封装要操作的字符\",{\"1\":{\"583\":1}}],[\"封装的session公共类\",{\"0\":{\"367\":1}}],[\"封装与redis\",{\"1\":{\"210\":1}}],[\"记住密码\",{\"0\":{\"775\":1}}],[\"记得右键dockerfile\",{\"1\":{\"834\":1}}],[\"记得配置允许跨域请求\",{\"1\":{\"600\":1}}],[\"记得引用\",{\"1\":{\"518\":1}}],[\"记得在configure中开启身份认证\",{\"1\":{\"364\":1}}],[\"记录是\",{\"1\":{\"943\":1}}],[\"记录warning+级别日志\",{\"1\":{\"446\":1}}],[\"记录应用程序中某个操作产生的错误和异常信息\",{\"1\":{\"446\":1}}],[\"记录应用程序中发生出现错误或其它导致程序停止的流程异常信息\",{\"1\":{\"446\":1}}],[\"记录当前api请求的url\",{\"1\":{\"446\":1}}],[\"记录跟踪应用程序的一些流程\",{\"1\":{\"446\":1}}],[\"记录一些关键信息的日志\",{\"1\":{\"661\":1}}],[\"记录一些需要立刻修复\",{\"1\":{\"446\":1}}],[\"记录一些在开发和调试阶段有用的短时变\",{\"1\":{\"446\":1}}],[\"记录一些对程序员调试问题有帮助的信息\",{\"1\":{\"446\":1}}],[\"记录日志记录问题的同时\",{\"1\":{\"446\":1}}],[\"记录请求的消息\",{\"1\":{\"421\":1}}],[\"记录请求来的一些参数\",{\"1\":{\"403\":2}}],[\"记录数据\",{\"1\":{\"175\":1}}],[\"记录\",{\"1\":{\"174\":1,\"941\":1}}],[\"记录我们操作的每次命令\",{\"1\":{\"27\":1}}],[\"记录提交信息\",{\"1\":{\"22\":1}}],[\"密钥等\",{\"1\":{\"914\":1}}],[\"密钥等敏感数据的配置问题\",{\"1\":{\"914\":1}}],[\"密钥解决了密码\",{\"1\":{\"914\":1}}],[\"密钥管理\",{\"1\":{\"914\":1}}],[\"密钥\",{\"1\":{\"661\":1}}],[\"密钥长度太短会报出异常\",{\"1\":{\"364\":1}}],[\"密码就是我们刚才设置的密码\",{\"1\":{\"1104\":1}}],[\"密码不能为空|密码必须大于6位\",{\"1\":{\"477\":1}}],[\"密码不能为空\",{\"1\":{\"474\":1}}],[\"密码必须大于6位\",{\"1\":{\"474\":2,\"475\":1}}],[\"密码设置单独的\",{\"1\":{\"209\":1}}],[\"密码\",{\"1\":{\"48\":1,\"474\":2,\"475\":2,\"501\":1,\"564\":2,\"669\":1,\"751\":1,\"798\":1,\"799\":1,\"1070\":1,\"1110\":2}}],[\"密码修改成功\",{\"1\":{\"40\":1}}],[\"识别当前请求是否有访问指定资源的权限\",{\"1\":{\"360\":1}}],[\"识别当前请求的用户信息\",{\"1\":{\"360\":1}}],[\"校验时间是否过期时\",{\"1\":{\"364\":1}}],[\"校验后对\",{\"1\":{\"209\":1}}],[\"校长\",{\"1\":{\"358\":1}}],[\"姓名\",{\"1\":{\"674\":1,\"676\":1,\"677\":1,\"679\":1}}],[\"姓名存入name\",{\"1\":{\"358\":1}}],[\"姓氏\",{\"1\":{\"209\":1}}],[\"构建docker镜像\",{\"1\":{\"1070\":1}}],[\"构建完成后我们查看linux服务器是否已经有刚部署项目的容器\",{\"1\":{\"900\":1}}],[\"构建后操作\",{\"0\":{\"900\":1}}],[\"构建后增加到了\",{\"1\":{\"866\":1}}],[\"构建环境\",{\"0\":{\"898\":1}}],[\"构建触发器\",{\"0\":{\"897\":1}}],[\"构建任务\",{\"0\":{\"878\":1}}],[\"构建可以参考一期\",{\"1\":{\"863\":1}}],[\"构建的时候会拉取\",{\"1\":{\"852\":1}}],[\"构建镜像\",{\"1\":{\"852\":1}}],[\"构建镜像也一样\",{\"1\":{\"820\":1}}],[\"构建\",{\"0\":{\"899\":1},\"1\":{\"852\":1,\"867\":1}}],[\"构建或者重新构建服务\",{\"1\":{\"852\":1}}],[\"构建新的镜像\",{\"1\":{\"837\":1}}],[\"构建过程中需要运行的命令\",{\"1\":{\"822\":1}}],[\"构建时\",{\"1\":{\"818\":1}}],[\"构建操作统一由docker\",{\"1\":{\"818\":1}}],[\"构建请求参数\",{\"1\":{\"694\":1}}],[\"构建serviceprovider对象\",{\"1\":{\"660\":1}}],[\"构建webhost\",{\"1\":{\"585\":1}}],[\"构建独立的iconfiguration\",{\"0\":{\"582\":1}}],[\"构建应用程序的动手实验手册\",{\"1\":{\"467\":1}}],[\"构建子容器\",{\"0\":{\"354\":1}}],[\"构造注入日志组件\",{\"1\":{\"404\":1}}],[\"构造函数获取服务\",{\"0\":{\"350\":1}}],[\"构造函数注入\",{\"0\":{\"348\":1}}],[\"构造函数\",{\"0\":{\"107\":1},\"1\":{\"600\":1}}],[\"构造函数的参数是自定义特性的位置参数\",{\"1\":{\"46\":1}}],[\"构造\",{\"1\":{\"103\":1}}],[\"构造器可以使用this来调用另一个构造器\",{\"1\":{\"70\":1}}],[\"构造器重载\",{\"0\":{\"70\":1}}],[\"构造器的定义和方法很相似\",{\"1\":{\"69\":1}}],[\"构造器执行类或者结构体的初始化代码\",{\"1\":{\"69\":1}}],[\"构造器\",{\"0\":{\"69\":1}}],[\"瞬时\",{\"0\":{\"347\":1}}],[\"移除指定端口\",{\"1\":{\"1109\":1}}],[\"移除和替换注册\",{\"1\":{\"344\":1}}],[\"移动一个文件夹到指定目录\",{\"1\":{\"1090\":1}}],[\"移动目录或者文件\",{\"1\":{\"1090\":1}}],[\"移动文件到指定目录\",{\"1\":{\"1090\":1}}],[\"移动文件\",{\"0\":{\"1080\":1}}],[\"移动服务\",{\"1\":{\"247\":1}}],[\"移动卡选择水平和\",{\"1\":{\"243\":1}}],[\"移动操作会不断重试\",{\"1\":{\"205\":1}}],[\"移动操作是一致\",{\"1\":{\"205\":1}}],[\"移动\",{\"1\":{\"135\":1,\"1076\":1}}],[\"账户登录\",{\"1\":{\"1110\":1}}],[\"账户是管理员\",{\"1\":{\"1110\":1}}],[\"账户同名的仓库\",{\"1\":{\"339\":1}}],[\"账号存入givenname\",{\"1\":{\"358\":1}}],[\"账号\",{\"1\":{\"48\":1,\"368\":1,\"1070\":1}}],[\"范围为\",{\"1\":{\"1110\":1}}],[\"范围2\",{\"1\":{\"331\":1}}],[\"范围1\",{\"1\":{\"331\":1}}],[\"站点\",{\"1\":{\"328\":1}}],[\"站在用户的角度考虑问题\",{\"1\":{\"183\":1}}],[\"状态值是0\",{\"1\":{\"947\":1}}],[\"状态值是1\",{\"1\":{\"947\":1}}],[\"状态消息\",{\"1\":{\"739\":1}}],[\"状态行中的断言\",{\"1\":{\"739\":1}}],[\"状态行中又包括状态码\",{\"1\":{\"739\":1}}],[\"状态行\",{\"1\":{\"735\":1}}],[\"状态码详解\",{\"1\":{\"327\":1}}],[\"状态是红色\",{\"1\":{\"22\":1}}],[\"互动模式\",{\"1\":{\"1078\":1}}],[\"互不冲突\",{\"1\":{\"806\":1}}],[\"互相转换的\",{\"1\":{\"685\":1}}],[\"互相尊重\",{\"1\":{\"201\":1}}],[\"互联网协议入门\",{\"1\":{\"327\":1}}],[\"认证访问使用简单的固定账号密码\",{\"1\":{\"448\":1}}],[\"认证失败\",{\"1\":{\"401\":4}}],[\"认证\",{\"1\":{\"325\":1,\"364\":1}}],[\"认为该消费者繁忙\",{\"1\":{\"208\":1}}],[\"各自的分支\",{\"1\":{\"798\":1}}],[\"各个方法解释如下\",{\"1\":{\"323\":1}}],[\"各类缓存\",{\"1\":{\"204\":1}}],[\"传递给\",{\"1\":{\"1037\":1}}],[\"传递参数格式为json格式\",{\"1\":{\"610\":1}}],[\"传递参数的本质是url字符串拼接\",{\"1\":{\"601\":1}}],[\"传送门\",{\"1\":{\"850\":1}}],[\"传入一个请求对象\",{\"1\":{\"667\":2}}],[\"传入iapiversiondescriptionprovider\",{\"1\":{\"499\":1}}],[\"传输层的服务\",{\"1\":{\"327\":1}}],[\"传输层协议\",{\"1\":{\"324\":1}}],[\"传输层安全协议\",{\"1\":{\"323\":1}}],[\"传统的检索方式是通过文章\",{\"1\":{\"204\":1}}],[\"地理位置邻近选择\",{\"1\":{\"322\":1}}],[\"地址范围\",{\"1\":{\"1110\":1}}],[\"地址分配给虚拟机\",{\"1\":{\"1110\":1}}],[\"地址为registry\",{\"1\":{\"1069\":1}}],[\"地址进行跟踪\",{\"1\":{\"936\":1}}],[\"地址管理\",{\"1\":{\"936\":1}}],[\"地址在\",{\"1\":{\"935\":1}}],[\"地址网段相同\",{\"1\":{\"927\":1}}],[\"地址将流量路由到容器\",{\"1\":{\"839\":1}}],[\"地址已经给出\",{\"1\":{\"729\":1}}],[\"地址粘贴到输入框中就可以代理加速下载\",{\"1\":{\"337\":1}}],[\"地址\",{\"1\":{\"153\":1,\"243\":14,\"322\":1,\"332\":1,\"337\":1,\"549\":1,\"839\":1,\"919\":1,\"935\":1,\"936\":1,\"939\":1,\"941\":1,\"943\":1,\"951\":1,\"1110\":2}}],[\"子网掩码\",{\"1\":{\"1110\":1}}],[\"子网掩码和网关应该一致\",{\"1\":{\"1110\":1}}],[\"子网掩码为\",{\"1\":{\"1110\":1}}],[\"子网\",{\"1\":{\"1110\":1}}],[\"子应用可以继承多个应用\",{\"1\":{\"661\":1}}],[\"子应用的配置会覆盖被继承的应用的配置\",{\"1\":{\"661\":1}}],[\"子容器\",{\"1\":{\"344\":1}}],[\"子代理会根据\",{\"1\":{\"322\":1}}],[\"子代理可以根据当前父代理的工作负载级别来选择父代理\",{\"1\":{\"322\":1}}],[\"子类\",{\"1\":{\"593\":1}}],[\"子类注册到依赖注入容器的scope生命周期\",{\"1\":{\"502\":1}}],[\"子类转换为父类\",{\"1\":{\"127\":1}}],[\"子类重写父类的方法\",{\"1\":{\"52\":1}}],[\"父镜像的obuild会被触发\",{\"1\":{\"832\":1}}],[\"父代理和子代理都是可以改变的\",{\"1\":{\"322\":1}}],[\"父类\",{\"1\":{\"97\":1}}],[\"父类定义虚方法\",{\"1\":{\"52\":1}}],[\"靠近客户端的被称为子代理\",{\"1\":{\"322\":1}}],[\"靠近服务器的被称为父代理\",{\"1\":{\"322\":1}}],[\"严格点说不建议\",{\"1\":{\"601\":1}}],[\"严格来说\",{\"1\":{\"322\":1}}],[\"严重性\",{\"1\":{\"446\":1}}],[\"严重依赖\",{\"1\":{\"247\":1}}],[\"⚠️这里不得不提另外一种网络设备\",{\"1\":{\"322\":1}}],[\"⚠️谨慎使用\",{\"1\":{\"31\":1}}],[\"圈重点\",{\"1\":{\"322\":1}}],[\"果然免费的才香\",{\"1\":{\"322\":1}}],[\"总不能每次修改都要到容器内更改\",{\"1\":{\"817\":1}}],[\"总之\",{\"1\":{\"738\":1,\"744\":1}}],[\"总体来说\",{\"1\":{\"737\":1,\"744\":1}}],[\"总而言之\",{\"1\":{\"599\":1}}],[\"总是\",{\"1\":{\"1074\":1}}],[\"总是重启\",{\"1\":{\"380\":1,\"385\":1,\"856\":1}}],[\"总是会将报文转发给代理\",{\"1\":{\"322\":2}}],[\"总的来说\",{\"1\":{\"322\":1,\"593\":1,\"863\":1}}],[\"总结及展望\",{\"0\":{\"932\":1}}],[\"总结一下dockerfile的知识点\",{\"1\":{\"818\":1}}],[\"总结一下\",{\"1\":{\"183\":1,\"783\":1,\"870\":1}}],[\"总结一下这篇文章的重点\",{\"1\":{\"134\":1}}],[\"总结\",{\"0\":{\"33\":1,\"414\":1,\"419\":1,\"422\":1,\"425\":1,\"428\":1,\"872\":1,\"945\":1},\"1\":{\"549\":1,\"736\":1,\"739\":1}}],[\"限制是\",{\"1\":{\"700\":1}}],[\"限制每一个ip客户端在指定的时间范围内请求的数量\",{\"1\":{\"426\":1}}],[\"限制无法在客户端未发送请求的情况下将消息推送给客户端\",{\"1\":{\"323\":1}}],[\"限制\",{\"0\":{\"514\":1},\"1\":{\"322\":1}}],[\"扮演一种中间人的角色\",{\"1\":{\"322\":1}}],[\"替代明星完成他们自己无法完成或者不愿意完成的工作\",{\"1\":{\"322\":1}}],[\"替换操作\",{\"1\":{\"629\":1}}],[\"替换\",{\"1\":{\"215\":3,\"866\":1,\"965\":1}}],[\"替换为\",{\"1\":{\"163\":5}}],[\"倒是由代理或者工作室来解释一大堆有的没的\",{\"1\":{\"322\":1}}],[\"倒排词典的索引需要常驻内存\",{\"1\":{\"204\":1}}],[\"倒排表中存储该词元在哪些文中出现的位置\",{\"1\":{\"204\":1}}],[\"倒排索引的底层实现是基于\",{\"1\":{\"204\":1}}],[\"倒排索引\",{\"1\":{\"204\":1}}],[\"架构师修行之路\",{\"1\":{\"322\":1}}],[\"架构模型就变成了这样\",{\"1\":{\"134\":1}}],[\"搭配idm软件实现下载功能\",{\"1\":{\"1000\":1}}],[\"搭配使用\",{\"1\":{\"844\":1}}],[\"搭配内存缓存\",{\"1\":{\"423\":1}}],[\"搭配vscode实现markdown实时预览\",{\"1\":{\"321\":1}}],[\"搭配浏览器插件下载软件下载视频等东西\",{\"1\":{\"305\":1}}],[\"听说日常的软件都已经有的\",{\"1\":{\"318\":1}}],[\"听起来不错\",{\"1\":{\"186\":1}}],[\"浏览器设置夜间模式\",{\"1\":{\"1001\":1}}],[\"浏览器插件\",{\"0\":{\"989\":1}}],[\"浏览器上实现打印功能\",{\"1\":{\"691\":1}}],[\"浏览器不完全支持grpc\",{\"1\":{\"665\":1}}],[\"浏览器可访问的api\",{\"1\":{\"665\":1}}],[\"浏览器采用get方法向服务器获取资源\",{\"1\":{\"323\":1}}],[\"浏览器厂商会在客户端获取浏览器之前预先对代理进行配置\",{\"1\":{\"322\":1}}],[\"浏览器\",{\"0\":{\"316\":1}}],[\"浏览器的安全策略上的限制可以有效组织ajax向另外的一个服务发起请求\",{\"1\":{\"154\":1}}],[\"虚拟网卡是否没有设置\",{\"1\":{\"1110\":1}}],[\"虚拟网卡来实现的\",{\"1\":{\"1110\":1}}],[\"虚拟磁盘文件用于存储虚拟机硬盘驱动器的内容\",{\"1\":{\"1110\":1}}],[\"虚拟磁盘由一个或多个虚拟磁盘文件构成\",{\"1\":{\"1110\":1}}],[\"虚拟磁盘相当于主机的硬盘\",{\"1\":{\"1110\":1}}],[\"虚拟键盘\",{\"0\":{\"1028\":1}}],[\"虚拟\",{\"1\":{\"941\":1}}],[\"虚拟化已启用\",{\"1\":{\"876\":1}}],[\"虚拟机是通过主机网络访问外网\",{\"1\":{\"1111\":1}}],[\"虚拟机和主机的相互访问是通过主机网络连接中的\",{\"1\":{\"1110\":1}}],[\"虚拟机网络设置介绍完成\",{\"1\":{\"1113\":1}}],[\"虚拟机网络设置完成\",{\"1\":{\"1110\":2}}],[\"虚拟机网络配置完成\",{\"1\":{\"1110\":1}}],[\"虚拟机网络编辑\",{\"1\":{\"1110\":1}}],[\"虚拟机就会引导安装\",{\"1\":{\"1110\":1}}],[\"虚拟机创建配置完成\",{\"1\":{\"1110\":1}}],[\"虚拟机创建完成\",{\"1\":{\"1110\":1}}],[\"虚拟机属性就定义好了\",{\"1\":{\"1110\":1}}],[\"虚拟机安装在哪儿\",{\"1\":{\"1110\":1}}],[\"虚拟机位置\",{\"1\":{\"1110\":1}}],[\"虚拟机名称\",{\"1\":{\"1110\":1}}],[\"虚拟机上安装\",{\"1\":{\"1110\":2}}],[\"虚拟机\",{\"0\":{\"950\":1},\"1\":{\"806\":1}}],[\"虚拟机玩uos\",{\"0\":{\"312\":1}}],[\"虚拟路径用来访问静态文件\",{\"1\":{\"580\":1}}],[\"虚方法\",{\"0\":{\"52\":1}}],[\"词库转换工具\",{\"1\":{\"311\":1}}],[\"词库强大\",{\"1\":{\"310\":1}}],[\"致力于解决目前pc输入法产品功能繁琐\",{\"1\":{\"311\":1}}],[\"卡饭输入法是一款轻巧极致的pc输入法\",{\"1\":{\"311\":1}}],[\"卡饭输入法\",{\"0\":{\"311\":1}}],[\"卡饭论坛出品\",{\"1\":{\"276\":1}}],[\"搜狗输入法\",{\"0\":{\"310\":1},\"1\":{\"1014\":1}}],[\"搜索cmd\",{\"1\":{\"1024\":1}}],[\"搜索控制面板然后点击程序\",{\"1\":{\"1007\":1}}],[\"搜索日志\",{\"1\":{\"738\":1}}],[\"搜索\",{\"0\":{\"257\":1},\"1\":{\"1008\":1}}],[\"搜索被执行成一个两阶段过程\",{\"1\":{\"204\":1}}],[\"搜索性能会越低\",{\"1\":{\"204\":1}}],[\"搜索引擎和isearch\",{\"1\":{\"133\":1}}],[\"酷我音乐\",{\"1\":{\"307\":1}}],[\"芒果tv\",{\"1\":{\"307\":1}}],[\"雀大师\",{\"0\":{\"302\":1}}],[\"拼接用到了定义的变量\",{\"1\":{\"837\":1}}],[\"拼接返回列表\",{\"1\":{\"677\":1}}],[\"拼装起来\",{\"1\":{\"778\":1,\"779\":1}}],[\"拼团活动\",{\"1\":{\"694\":1}}],[\"拼图等等功能\",{\"1\":{\"300\":1}}],[\"拼音\",{\"1\":{\"124\":1}}],[\"瘦身\",{\"1\":{\"300\":1}}],[\"井然有序\",{\"1\":{\"300\":1}}],[\"统一基于容器这种形式进行标准化管理\",{\"1\":{\"804\":1}}],[\"统一按集装箱的形式打包存放\",{\"1\":{\"804\":1}}],[\"统一的文字\",{\"1\":{\"300\":1}}],[\"统一使用超级用户帐号可以进一步统一连接字符串\",{\"1\":{\"203\":1}}],[\"素材供你选择\",{\"1\":{\"300\":1}}],[\"素材使用\",{\"1\":{\"243\":1}}],[\"足够安全\",{\"1\":{\"322\":1}}],[\"足够成为我选择它的理由\",{\"1\":{\"295\":1}}],[\"足够长的时间来处理消息\",{\"1\":{\"208\":1}}],[\"精确范围\",{\"1\":{\"1131\":2}}],[\"精确的版本匹配\",{\"1\":{\"1131\":1}}],[\"精简版镜像\",{\"1\":{\"1110\":1}}],[\"精简2\",{\"1\":{\"867\":1}}],[\"精简1\",{\"1\":{\"866\":1}}],[\"精简镜像大小的好处不言而喻\",{\"1\":{\"863\":1}}],[\"精简\",{\"1\":{\"295\":1}}],[\"精通这类词\",{\"1\":{\"180\":1}}],[\"精通spring\",{\"1\":{\"180\":1}}],[\"录屏\",{\"0\":{\"291\":1,\"1026\":1}}],[\"安卓\",{\"1\":{\"708\":1}}],[\"安全\",{\"1\":{\"779\":2}}],[\"安全且可管理的\",{\"1\":{\"559\":1}}],[\"安全防火墙\",{\"1\":{\"322\":1}}],[\"安全导出\",{\"1\":{\"300\":1}}],[\"安全的方法\",{\"1\":{\"298\":1}}],[\"安全快速稳定\",{\"1\":{\"288\":1}}],[\"安装界面\",{\"1\":{\"1110\":1}}],[\"安装系统前需要先创建一个虚拟机\",{\"1\":{\"1110\":1}}],[\"安装过程中需要输入注册码\",{\"1\":{\"1110\":1}}],[\"安装一般软件安装流程\",{\"1\":{\"1110\":1}}],[\"安装包下载完成后\",{\"1\":{\"1110\":1}}],[\"安装或更新服务\",{\"1\":{\"1109\":1}}],[\"安装即可\",{\"1\":{\"1109\":1}}],[\"安装vim和yum\",{\"1\":{\"1109\":1}}],[\"安装vs2019\",{\"0\":{\"957\":1}}],[\"安装选项选择镜像的位置\",{\"1\":{\"1104\":1}}],[\"安装服务\",{\"0\":{\"1019\":1},\"1\":{\"1019\":1}}],[\"安装失败\",{\"1\":{\"1012\":1}}],[\"安装如下\",{\"1\":{\"1012\":1}}],[\"安装上那些需要先安装kb2919442\",{\"1\":{\"1012\":1}}],[\"安装命令\",{\"1\":{\"964\":1}}],[\"安装程序就会尝试安装\",{\"1\":{\"1008\":1}}],[\"安装程序将尝试从\",{\"1\":{\"964\":1}}],[\"安装程序使用文件的本地版本\",{\"1\":{\"964\":1}}],[\"安装程序类的用途是将自定义协议信息写入注册表\",{\"1\":{\"692\":1}}],[\"安装操作的可执行文件\",{\"1\":{\"962\":1}}],[\"安装位置\",{\"0\":{\"961\":1}}],[\"安装jenkins\",{\"0\":{\"905\":1}}],[\"安装插件报错的话继续在执行一遍\",{\"1\":{\"889\":1}}],[\"安装最新版本docker\",{\"1\":{\"862\":1}}],[\"安装yum\",{\"1\":{\"862\":1}}],[\"安装方法有两种\",{\"1\":{\"862\":1}}],[\"安装ping工具\",{\"1\":{\"842\":1}}],[\"安装好之后\",{\"1\":{\"840\":1}}],[\"安装步骤看本网站其他文章有叙述\",{\"1\":{\"806\":1}}],[\"安装结束\",{\"1\":{\"802\":1}}],[\"安装该软件基本上一路下一步\",{\"1\":{\"802\":1}}],[\"安装成功后重启\",{\"1\":{\"1104\":1}}],[\"安装成功后\",{\"1\":{\"748\":1,\"1110\":1}}],[\"安装后查看应用程序目录\",{\"1\":{\"561\":1}}],[\"安装后就可以使用了\",{\"1\":{\"214\":1,\"1120\":1}}],[\"安装其他版本的请参考官网地址\",{\"1\":{\"561\":1}}],[\"安装的文件应该和项目对应的版本相同\",{\"1\":{\"561\":1}}],[\"安装asp\",{\"0\":{\"561\":1}}],[\"安装supervisor\",{\"0\":{\"545\":1}}],[\"安装netstat\",{\"1\":{\"1109\":1}}],[\"安装nginx\",{\"1\":{\"541\":1}}],[\"安装nuget包\",{\"0\":{\"461\":1},\"1\":{\"672\":1,\"673\":1}}],[\"安装完提示信息\",{\"1\":{\"905\":1}}],[\"安装完后\",{\"1\":{\"538\":1}}],[\"安装完成之后\",{\"1\":{\"806\":1}}],[\"安装完成后是图形化界面\",{\"1\":{\"1110\":1}}],[\"安装完成后只有命令行\",{\"1\":{\"1110\":1}}],[\"安装完成后\",{\"1\":{\"961\":1,\"1012\":2}}],[\"安装完成后界面如图\",{\"1\":{\"876\":1}}],[\"安装完成后访问\",{\"1\":{\"791\":1}}],[\"安装完成后找到git\",{\"1\":{\"748\":1}}],[\"安装完成\",{\"1\":{\"312\":1}}],[\"安装环境\",{\"0\":{\"538\":1}}],[\"安装redis\",{\"0\":{\"380\":1,\"385\":1}}],[\"安装组件\",{\"0\":{\"450\":1,\"480\":1,\"486\":1,\"635\":1},\"1\":{\"378\":1,\"501\":1,\"600\":1,\"661\":1,\"710\":1}}],[\"安装fastgithub\",{\"0\":{\"332\":1}}],[\"安装与配置git\",{\"0\":{\"15\":1}}],[\"安装\",{\"0\":{\"16\":1,\"845\":1,\"1016\":1,\"1135\":1},\"1\":{\"4\":1,\"538\":1,\"1008\":1}}],[\"安装gitlab\",{\"0\":{\"4\":1,\"34\":1}}],[\"安装docker\",{\"1\":{\"3\":1}}],[\"安装docker最新版\",{\"1\":{\"3\":1}}],[\"威航软件园测试发现rustdesk和系统自带远程桌面相比拥有绝对的优势\",{\"1\":{\"288\":1}}],[\"屏蔽了内部多个\",{\"1\":{\"931\":1}}],[\"屏保设置\",{\"1\":{\"276\":1}}],[\"屏幕图\",{\"1\":{\"243\":1}}],[\"屏幕下使用\",{\"1\":{\"243\":1}}],[\"火雨桌面壁纸\",{\"0\":{\"276\":1}}],[\"火绒弹框拦截\",{\"0\":{\"263\":1}}],[\"腾讯云cos\",{\"1\":{\"951\":1}}],[\"腾讯云实验室\",{\"1\":{\"138\":1}}],[\"腾讯视频\",{\"1\":{\"307\":1}}],[\"腾讯桌面整理\",{\"0\":{\"273\":1}}],[\"叫做微pe\",{\"1\":{\"267\":1}}],[\"叫到办公室说\",{\"1\":{\"192\":1}}],[\"卖掉了\",{\"1\":{\"267\":1}}],[\"装不了2015\",{\"1\":{\"1012\":1}}],[\"装机工具\",{\"0\":{\"266\":1}}],[\"装饰器设计模式\",{\"1\":{\"202\":1}}],[\"装饰对象持有被装饰对象的实例\",{\"1\":{\"202\":1}}],[\"装饰模式就是给一个对象增加一些新的功能\",{\"1\":{\"202\":1}}],[\"装饰模式增加强了单个对象的能力\",{\"1\":{\"202\":1}}],[\"装饰者模提供了比继承更有弹性的替代方案\",{\"1\":{\"202\":1}}],[\"装饰者模式\",{\"1\":{\"202\":1}}],[\"神龙激活器\",{\"0\":{\"262\":1}}],[\"百度一般都可搜索到相应版本的注册码\",{\"1\":{\"1110\":1}}],[\"百度云下载\",{\"1\":{\"1110\":1}}],[\"百度百科\",{\"1\":{\"436\":1,\"442\":1,\"445\":1,\"593\":1}}],[\"百度开发者搜索\",{\"1\":{\"259\":1}}],[\"百度搜索\",{\"0\":{\"259\":1}}],[\"海报高清写真96\",{\"1\":{\"256\":1}}],[\"杂志\",{\"1\":{\"256\":1}}],[\"洗印照片\",{\"1\":{\"256\":1}}],[\"洗脑让你参加\",{\"1\":{\"194\":1}}],[\"历史记录\",{\"1\":{\"256\":1}}],[\"颜色模式常用\",{\"0\":{\"255\":1}}],[\"英语\",{\"1\":{\"328\":1}}],[\"英寸\",{\"1\":{\"254\":1}}],[\"英文文档\",{\"1\":{\"946\":1}}],[\"英文名称是repository\",{\"1\":{\"752\":1}}],[\"英文排序\",{\"0\":{\"123\":1}}],[\"英文状态下数字1左边符号\",{\"1\":{\"95\":1}}],[\"首次点击打印会在浏览器上看到如下提示\",{\"1\":{\"690\":1}}],[\"首次使用文件夹隐藏助手需要设置初始密码\",{\"1\":{\"265\":1}}],[\"首页\",{\"0\":{\"339\":1}}],[\"首部\",{\"1\":{\"322\":2}}],[\"首选项=\",{\"1\":{\"254\":1,\"256\":3}}],[\"首先查询主机\",{\"1\":{\"1112\":1}}],[\"首先管理命名格式\",{\"1\":{\"973\":1}}],[\"首先向集群\",{\"1\":{\"945\":1}}],[\"首先要了解背后的网络知识\",{\"1\":{\"934\":1}}],[\"首先要添加session包\",{\"1\":{\"203\":1}}],[\"首先确保hyper\",{\"1\":{\"876\":1}}],[\"首先了解下镜像的原理\",{\"1\":{\"863\":1}}],[\"首先新创建一个网络\",{\"1\":{\"843\":1}}],[\"首先在时效上也不能及时备份\",{\"1\":{\"812\":1}}],[\"首先的创建环境\",{\"1\":{\"740\":1}}],[\"首先想到的就是对用例进行分类管理\",{\"1\":{\"736\":1}}],[\"首先先继承公共类\",{\"1\":{\"591\":1}}],[\"首先指定一个方法编写单元测试\",{\"1\":{\"589\":1}}],[\"首先定义token模型类\",{\"1\":{\"472\":1}}],[\"首先自定义一个异常过滤器\",{\"1\":{\"404\":1}}],[\"首先是\",{\"1\":{\"215\":1}}],[\"首先是枚举的定义上\",{\"1\":{\"43\":1}}],[\"首先这两种方式每次请求得到的都不是同一个对象\",{\"1\":{\"203\":1}}],[\"首先\",{\"1\":{\"201\":1,\"208\":1,\"322\":1,\"944\":1}}],[\"首先别太早打听薪酬\",{\"1\":{\"195\":1}}],[\"首先恭喜你\",{\"1\":{\"191\":1}}],[\"首先说明这是一个坑问题\",{\"1\":{\"189\":1}}],[\"首先我想问下大家对于属性和特性知道多少\",{\"1\":{\"41\":1}}],[\"首先我们在命令行使用命令检查下用户名和邮箱是否配置\",{\"1\":{\"802\":1}}],[\"首先我们需要标记测试方法所在类\",{\"1\":{\"596\":1}}],[\"首先我们需要先创建一个插件基础服务的类库defaultpluginsexternalprovider\",{\"1\":{\"573\":1}}],[\"首先我们需要修改swashbuckle\",{\"1\":{\"478\":1}}],[\"首先我们编写一个简单的sql注入示例\",{\"1\":{\"511\":1}}],[\"首先我们要使用的开源组件是\",{\"1\":{\"215\":1}}],[\"首先我们要获取注册时候需要的信息\",{\"1\":{\"6\":1}}],[\"首先我们必须明白一点\",{\"1\":{\"20\":1}}],[\"首先需要设置使用git时候的名字和邮箱\",{\"1\":{\"17\":1}}],[\"首先导入repository\",{\"1\":{\"4\":1}}],[\"受影响的不只是华为\",{\"1\":{\"253\":1}}],[\"维基百科\",{\"1\":{\"253\":2}}],[\"维护和滚动升级\",{\"1\":{\"913\":1}}],[\"维护一个集中式的日志和控制面板对调试问题至关重要\",{\"1\":{\"210\":1}}],[\"维护\",{\"1\":{\"210\":1,\"216\":1}}],[\"维护成本并没有新增很多\",{\"1\":{\"134\":1}}],[\"维护成本\",{\"1\":{\"134\":1}}],[\"十四五\",{\"1\":{\"253\":1}}],[\"诉讼第一案\",{\"1\":{\"253\":1}}],[\"原本使用的\",{\"1\":{\"944\":1}}],[\"原本分为上下两篇\",{\"1\":{\"875\":1}}],[\"原生应用\",{\"1\":{\"944\":1}}],[\"原生应用的形式运行\",{\"1\":{\"941\":1}}],[\"原生sql查询\",{\"0\":{\"508\":1}}],[\"原始数据一般都是本文格式的\",{\"1\":{\"735\":1}}],[\"原程序几乎不用改造\",{\"1\":{\"661\":1}}],[\"原文链接\",{\"1\":{\"790\":1}}],[\"原文还是值得翻出来看一下的\",{\"1\":{\"689\":1}}],[\"原文作者\",{\"1\":{\"549\":1}}],[\"原文的安装方式我可能是因为网络问题没有成功\",{\"1\":{\"545\":1}}],[\"原文\",{\"1\":{\"472\":1}}],[\"原理就是通过\",{\"1\":{\"443\":1}}],[\"原因是centos已经不维护了\",{\"1\":{\"1007\":1}}],[\"原因如\",{\"1\":{\"523\":1}}],[\"原因\",{\"1\":{\"389\":1,\"694\":1}}],[\"原型图\",{\"1\":{\"296\":1}}],[\"原作者重新开发一款pe\",{\"1\":{\"267\":1}}],[\"原来产品名做市场推广\",{\"1\":{\"252\":1}}],[\"原值\",{\"1\":{\"134\":3}}],[\"机制是指在程序的运行状态中\",{\"1\":{\"442\":1}}],[\"机构名字\",{\"1\":{\"252\":1}}],[\"机器来消费消息\",{\"1\":{\"208\":1}}],[\"机器性能浪费\",{\"1\":{\"134\":1}}],[\"机器学习的资料\",{\"1\":{\"10\":1}}],[\"遵循\",{\"1\":{\"249\":1}}],[\"散布\",{\"1\":{\"248\":1}}],[\"散列表\",{\"1\":{\"209\":1}}],[\"阮一峰\",{\"1\":{\"247\":1}}],[\"协同工作\",{\"1\":{\"435\":1}}],[\"协议版本\",{\"1\":{\"1110\":1}}],[\"协议必须是https\",{\"1\":{\"673\":1}}],[\"协议森林\",{\"1\":{\"327\":1}}],[\"协议层之上\",{\"1\":{\"323\":1}}],[\"协议而\",{\"1\":{\"322\":1}}],[\"协议\",{\"1\":{\"247\":1,\"248\":1,\"249\":1,\"322\":2}}],[\"协调节点返回结果给客户端\",{\"1\":{\"204\":1}}],[\"协调节点辨别出哪些文档需要被取回并向相关的分片提交多个\",{\"1\":{\"204\":1}}],[\"协调节点接受到请求后\",{\"1\":{\"204\":1}}],[\"协调节点\",{\"1\":{\"204\":1}}],[\"投屏等操作\",{\"1\":{\"243\":1}}],[\"投递\",{\"1\":{\"134\":1}}],[\"世嘉\",{\"1\":{\"243\":1}}],[\"索尼\",{\"1\":{\"243\":1}}],[\"索引文件\",{\"1\":{\"780\":1}}],[\"索引\",{\"1\":{\"206\":3}}],[\"索引需要占用物理空间\",{\"1\":{\"206\":1}}],[\"索引对数据库系统的负面影响是什么\",{\"1\":{\"206\":1}}],[\"索引的目的是什么\",{\"1\":{\"206\":1}}],[\"索引的底层实现原理和优化\",{\"1\":{\"206\":1}}],[\"索引层面\",{\"1\":{\"204\":1}}],[\"索引数据大小\",{\"1\":{\"204\":1}}],[\"索引中的所有段都会被搜索\",{\"1\":{\"204\":1}}],[\"索引是由多个段组成\",{\"1\":{\"204\":1}}],[\"索引器的实现\",{\"0\":{\"66\":1}}],[\"索引器通过索引值访问数据\",{\"1\":{\"65\":1}}],[\"索引器为要访问的类或者结构体中封住的列表或者字典类型的数据提供访问接口\",{\"1\":{\"65\":1}}],[\"索引器\",{\"0\":{\"65\":1}}],[\"迷宫\",{\"1\":{\"243\":1}}],[\"贪吃蛇\",{\"1\":{\"243\":1}}],[\"贪婪匹配\",{\"1\":{\"161\":1}}],[\"跳到下一个书签\",{\"1\":{\"965\":1}}],[\"跳过默认的处理逻辑\",{\"1\":{\"364\":1}}],[\"跳转\",{\"1\":{\"243\":1}}],[\"跳词等变形进行检测\",{\"1\":{\"215\":1}}],[\"双向流\",{\"1\":{\"681\":1}}],[\"双向流模式\",{\"1\":{\"679\":1}}],[\"双向流式处理\",{\"1\":{\"680\":1}}],[\"双向流式rpc\",{\"0\":{\"679\":1}}],[\"双向流式\",{\"1\":{\"667\":2}}],[\"双向流和流控制\",{\"1\":{\"536\":1}}],[\"双语系统等一系列操作\",{\"1\":{\"405\":1}}],[\"双击安装包就会弹出安装界面\",{\"1\":{\"1110\":1}}],[\"双击每个证书文件\",{\"1\":{\"964\":1}}],[\"双击打开安装包\",{\"1\":{\"957\":1}}],[\"双击启动即可\",{\"1\":{\"876\":1}}],[\"双击即可切换\",{\"1\":{\"798\":1}}],[\"双击下载的安装包\",{\"1\":{\"722\":1}}],[\"双击\",{\"1\":{\"243\":1}}],[\"双精度浮点数\",{\"1\":{\"76\":1}}],[\"刹车\",{\"1\":{\"243\":1}}],[\"鼠标点击焦点进入安装界面\",{\"1\":{\"1110\":1}}],[\"鼠标悬停时快速查看源代码中的元素\",{\"1\":{\"974\":1}}],[\"鼠标\",{\"1\":{\"243\":1,\"1081\":1}}],[\"赛车游戏\",{\"1\":{\"243\":1}}],[\"夜间模式\",{\"0\":{\"1001\":1},\"1\":{\"243\":1}}],[\"背景图的接口还是网上白嫖的\",{\"1\":{\"1037\":1}}],[\"背景图片\",{\"1\":{\"1036\":1}}],[\"背景透明度\",{\"1\":{\"1036\":1}}],[\"背景信息\",{\"1\":{\"243\":1}}],[\"背上了债\",{\"1\":{\"194\":1}}],[\"水桶头僵尸\",{\"1\":{\"243\":1}}],[\"水平有限\",{\"1\":{\"201\":1}}],[\"锥头僵尸\",{\"1\":{\"243\":1}}],[\"鞭打僵尸\",{\"1\":{\"243\":1}}],[\"普通光盘完整安装版镜像\",{\"1\":{\"1110\":1}}],[\"普通的windows\",{\"1\":{\"1012\":1}}],[\"普通的录屏软件无法录取像lol这样的大型游戏画面\",{\"1\":{\"293\":1}}],[\"普通僵尸\",{\"1\":{\"243\":1}}],[\"普通集群模式\",{\"1\":{\"208\":3}}],[\"樱桃炸弹等\",{\"1\":{\"243\":1}}],[\"坚果\",{\"1\":{\"243\":1}}],[\"寒冰射手\",{\"1\":{\"243\":1}}],[\"豌豆射手\",{\"1\":{\"243\":1}}],[\"撞击友方扣除\",{\"1\":{\"243\":1}}],[\"撞击敌方损失\",{\"1\":{\"243\":1}}],[\"击中友方减\",{\"1\":{\"243\":1}}],[\"击中敌方飞船增加\",{\"1\":{\"243\":1}}],[\"触发中断\",{\"0\":{\"978\":1}}],[\"触发\",{\"1\":{\"956\":1}}],[\"触发的时机是定时触发\",{\"1\":{\"204\":1}}],[\"触碰掉下的燃料瓶可增加\",{\"1\":{\"243\":1}}],[\"燃料初始值为\",{\"1\":{\"243\":1}}],[\"键启动系统\",{\"1\":{\"1110\":1}}],[\"键向下移动选择\",{\"1\":{\"1110\":1}}],[\"键向上移动选择\",{\"1\":{\"1110\":1}}],[\"键值对集合\",{\"1\":{\"850\":1}}],[\"键\",{\"1\":{\"373\":1,\"1037\":1,\"1110\":1}}],[\"键控制飞船\",{\"1\":{\"243\":1}}],[\"键绑定移动\",{\"1\":{\"243\":1}}],[\"整个工程生成\",{\"1\":{\"968\":1}}],[\"整行上下移动\",{\"1\":{\"965\":1}}],[\"整数\",{\"1\":{\"850\":1}}],[\"整体来说\",{\"1\":{\"739\":1}}],[\"整洁\",{\"1\":{\"243\":1}}],[\"整型\",{\"0\":{\"75\":1}}],[\"退出进入命令模式\",{\"1\":{\"1110\":1}}],[\"退出容器模式\",{\"1\":{\"811\":1}}],[\"退出容器的两种方式\",{\"1\":{\"811\":1}}],[\"退出系统\",{\"1\":{\"691\":1}}],[\"退出打印客户端toolstripmenuitem\",{\"1\":{\"691\":1}}],[\"退出版本控制\",{\"1\":{\"490\":1,\"636\":1,\"641\":1,\"647\":1,\"653\":1}}],[\"退出\",{\"1\":{\"243\":1}}],[\"退出或按\",{\"1\":{\"243\":1}}],[\"退路\",{\"1\":{\"210\":1}}],[\"跟上面\",{\"1\":{\"1110\":2}}],[\"跟上述实现的方式还是有所不同\",{\"1\":{\"243\":1}}],[\"跟虚拟机保持一致\",{\"1\":{\"1110\":1}}],[\"跟文件所有者不在同一组的用户\",{\"1\":{\"1081\":1}}],[\"跟文件所有者在同一组的用户\",{\"1\":{\"1081\":1}}],[\"跟\",{\"1\":{\"914\":1}}],[\"跟ioptions模式读取配置\",{\"1\":{\"661\":1}}],[\"跟发起\",{\"1\":{\"569\":1}}],[\"跟踪超出作用域的对象\",{\"0\":{\"981\":1}}],[\"跟踪断点在编辑器的断点显示位置显示为菱形形状\",{\"1\":{\"980\":1}}],[\"跟踪断点\",{\"0\":{\"980\":1}}],[\"跟踪日志输出\",{\"1\":{\"811\":1}}],[\"跟踪查询\",{\"1\":{\"504\":1}}],[\"跟踪行为决定了efcore是否将有些实体的信息保存在其更改更跟踪器中\",{\"1\":{\"504\":1}}],[\"跟踪和非跟踪查询\",{\"0\":{\"504\":1}}],[\"跟resource\",{\"1\":{\"403\":1}}],[\"跟普通集群模式不一样的是\",{\"1\":{\"208\":1}}],[\"俄罗斯方块游戏\",{\"1\":{\"243\":2}}],[\"月份\",{\"1\":{\"1046\":1}}],[\"月被思科收购\",{\"1\":{\"247\":1}}],[\"月流量1g\",{\"1\":{\"242\":1}}],[\"月薪虽然不能给你那么多\",{\"1\":{\"200\":1}}],[\"月薪就到不了\",{\"1\":{\"199\":1}}],[\"月薪是不是分基本工资和绩效\",{\"0\":{\"199\":1}}],[\"免费的日志记录平台\",{\"1\":{\"451\":1}}],[\"免费的入门级\",{\"1\":{\"243\":1}}],[\"免费图库供你挑选\",{\"1\":{\"300\":1}}],[\"免费在线作图\",{\"1\":{\"296\":1}}],[\"免费\",{\"1\":{\"295\":1,\"696\":1}}],[\"免费版本有页数限制和水印\",{\"1\":{\"682\":1}}],[\"免费版本2个端口\",{\"1\":{\"242\":1}}],[\"免费版本二级域名\",{\"1\":{\"242\":1}}],[\"免费不限制流量\",{\"1\":{\"242\":1}}],[\"停止firewall\",{\"1\":{\"1109\":1}}],[\"停止和重启\",{\"1\":{\"1020\":1}}],[\"停止程序执行时最常见的操作\",{\"1\":{\"980\":1}}],[\"停止防火墙\",{\"1\":{\"911\":1,\"1109\":1}}],[\"停止并删除旧版\",{\"1\":{\"899\":1}}],[\"停止容器\",{\"1\":{\"811\":1}}],[\"停止运行中的容器\",{\"1\":{\"811\":1}}],[\"停止\",{\"0\":{\"1020\":1},\"1\":{\"811\":1}}],[\"停止全部进程\",{\"1\":{\"564\":1}}],[\"停止某一个进程\",{\"1\":{\"564\":1}}],[\"停止服务\",{\"1\":{\"242\":1,\"1020\":1}}],[\"停止或很慢的时候\",{\"1\":{\"205\":1}}],[\"资产\",{\"1\":{\"668\":1}}],[\"资料\",{\"0\":{\"241\":1,\"969\":1}}],[\"资源紧缺\",{\"1\":{\"1110\":1}}],[\"资源配额应用在namespace上\",{\"1\":{\"914\":1}}],[\"资源配额有如下类型\",{\"1\":{\"914\":1}}],[\"资源配额\",{\"1\":{\"914\":1}}],[\"资源限制\",{\"1\":{\"914\":1}}],[\"资源释放实现\",{\"1\":{\"598\":1}}],[\"资源之间实现统一的访问控制\",{\"1\":{\"322\":1}}],[\"资源扩大\",{\"1\":{\"208\":1}}],[\"资源和\",{\"1\":{\"208\":1}}],[\"资源文件命名方式为使用文件的文件名称加上语言代码\",{\"1\":{\"145\":1}}],[\"资源文件\",{\"1\":{\"145\":1}}],[\"知识了\",{\"1\":{\"866\":1}}],[\"知识丰富的设计\",{\"1\":{\"210\":1}}],[\"知乎文章\",{\"1\":{\"666\":1}}],[\"知乎\",{\"1\":{\"253\":1}}],[\"知乎推荐\",{\"1\":{\"238\":1}}],[\"导入+手工\",{\"1\":{\"1044\":1}}],[\"导入\",{\"1\":{\"740\":1,\"1044\":1}}],[\"导出chm文件示例\",{\"1\":{\"1011\":1}}],[\"导出文件\",{\"0\":{\"1011\":1}}],[\"导出端口\",{\"1\":{\"868\":1}}],[\"导出镜像\",{\"1\":{\"810\":1}}],[\"导出运行结果\",{\"1\":{\"737\":1}}],[\"导出预览\",{\"0\":{\"237\":1}}],[\"导航到下载引导程序到的目录\",{\"1\":{\"964\":1}}],[\"导航\",{\"0\":{\"430\":1}}],[\"导致需要重新发包\",{\"1\":{\"1121\":1}}],[\"导致c盘被大量占用\",{\"1\":{\"970\":1}}],[\"导致命令不对\",{\"1\":{\"838\":1}}],[\"导致系统崩溃\",{\"1\":{\"209\":1}}],[\"导致网络带宽压力和消耗很重\",{\"1\":{\"208\":1}}],[\"导致消息队列不知道自己已经消费过该消息了\",{\"1\":{\"208\":1}}],[\"导致客户端可以通过全局变量post和get提交一些sql语句正常执行\",{\"1\":{\"206\":1}}],[\"导致不一致的场景么\",{\"1\":{\"134\":1}}],[\"导致数据不一致的问题\",{\"1\":{\"134\":1}}],[\"导致文章难产了\",{\"1\":{\"3\":1}}],[\"带空格的文件夹名字或带空格的文件的名字都需要用英文的双引号括起来\",{\"1\":{\"988\":1}}],[\"带来稳定性\",{\"0\":{\"937\":1}}],[\"带参\",{\"1\":{\"691\":1}}],[\"带小孩徒步旅行\",{\"1\":{\"531\":1}}],[\"带上充电宝\",{\"1\":{\"433\":1}}],[\"带上电话本\",{\"1\":{\"433\":1}}],[\"带插件的\",{\"1\":{\"218\":1}}],[\"带你快速入门github\",{\"1\":{\"10\":1}}],[\"奈何没找到拉取代码的方式\",{\"1\":{\"898\":1}}],[\"奈何好多好玩的功能没有权限需要微信认证\",{\"1\":{\"710\":1}}],[\"奈何太浪费时间\",{\"1\":{\"216\":1}}],[\"奈何当时卡到一个docker命令找不到的问题上\",{\"1\":{\"3\":1}}],[\"产品\",{\"1\":{\"216\":1}}],[\"产者丢失消息\",{\"1\":{\"208\":1}}],[\"易用\",{\"1\":{\"216\":1}}],[\"易扩展性\",{\"1\":{\"205\":1}}],[\"张蘅水\",{\"1\":{\"215\":1}}],[\"张三\",{\"1\":{\"46\":1,\"67\":1,\"72\":2,\"79\":1,\"81\":4,\"358\":1,\"364\":1,\"368\":1,\"501\":1,\"511\":1,\"512\":1,\"513\":1,\"600\":1,\"675\":1,\"677\":1,\"681\":1}}],[\"哪些方面的控制被反转了\",{\"1\":{\"436\":1}}],[\"哪里敏感点哪里\",{\"1\":{\"215\":1}}],[\"哪个方案更好呢\",{\"1\":{\"134\":1}}],[\"敏感的信息\",{\"1\":{\"799\":1}}],[\"敏感词重载\",{\"1\":{\"215\":1}}],[\"敏感词替换\",{\"1\":{\"215\":1}}],[\"敏感词检查的特性\",{\"1\":{\"215\":1}}],[\"敏感词组件\",{\"0\":{\"215\":1}}],[\"敏建开发的忠实粉丝\",{\"1\":{\"179\":1}}],[\"界面导航说明\",{\"0\":{\"723\":1}}],[\"界面还是简约美观的\",{\"1\":{\"661\":1}}],[\"界面操作\",{\"1\":{\"254\":1}}],[\"界面和\",{\"1\":{\"212\":1,\"1118\":1}}],[\"界面更舒服\",{\"1\":{\"170\":1}}],[\"包源\",{\"0\":{\"1125\":1}}],[\"包的环境默认为alpha\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"包环境标识\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"包版本号标识\",{\"1\":{\"1123\":1}}],[\"包版本标识\",{\"1\":{\"1121\":1}}],[\"包版本要写对\",{\"1\":{\"213\":1,\"1119\":1}}],[\"包xunit\",{\"1\":{\"585\":1}}],[\"包\",{\"1\":{\"583\":1,\"600\":1,\"1098\":1}}],[\"包存储库\",{\"1\":{\"537\":1}}],[\"包签名密钥添加到受信任密钥列表\",{\"1\":{\"537\":1}}],[\"包括目录文件\",{\"1\":{\"1080\":1}}],[\"包括存储资源的总量以及指定storage\",{\"1\":{\"914\":1}}],[\"包括cpu和memory\",{\"1\":{\"914\":1}}],[\"包括构建\",{\"1\":{\"877\":1}}],[\"包括字符串\",{\"1\":{\"850\":1}}],[\"包括未运行的\",{\"1\":{\"811\":1}}],[\"包括基类\",{\"1\":{\"593\":1}}],[\"包括bin和wwwroot文件夹\",{\"1\":{\"578\":1}}],[\"包括\",{\"1\":{\"451\":1,\"559\":1,\"1099\":1}}],[\"包括到追加文本文件\",{\"1\":{\"447\":1}}],[\"包管理服务baget\",{\"0\":{\"211\":1,\"1117\":1}}],[\"包含大量的常用软件\",{\"1\":{\"1110\":1}}],[\"包含aab文件和apk文件\",{\"1\":{\"1037\":1}}],[\"包含assert类的库\",{\"1\":{\"585\":1}}],[\"包含生成密钥存储所需的工具\",{\"1\":{\"1037\":1}}],[\"包含的配色方案\",{\"1\":{\"1036\":1}}],[\"包含家庭版\",{\"1\":{\"1032\":1}}],[\"包含教育版\",{\"1\":{\"1032\":1}}],[\"包含许多好玩的插件集合\",{\"1\":{\"996\":1}}],[\"包含多个共享ipc\",{\"1\":{\"914\":1}}],[\"包含多个层级的查询\",{\"1\":{\"503\":1}}],[\"包含隐藏文件\",{\"1\":{\"775\":1,\"1074\":2}}],[\"包含jenkins插件\",{\"1\":{\"707\":1}}],[\"包含适用于\",{\"1\":{\"668\":2}}],[\"包含用户信息的增删改查\",{\"1\":{\"561\":1}}],[\"包含三个用户\",{\"1\":{\"515\":1}}],[\"包含了常用的\",{\"1\":{\"869\":1}}],[\"包含了应用程序及其他运行需要的基础设施\",{\"1\":{\"810\":1}}],[\"包含了注入了serilog的拓展方法\",{\"1\":{\"457\":1}}],[\"包含了serilog基本库和控制台日志的实现\",{\"1\":{\"457\":1}}],[\"包含了\",{\"1\":{\"247\":1}}],[\"包含\",{\"1\":{\"208\":1,\"1131\":4}}],[\"包含消息的唯一id\",{\"1\":{\"208\":1}}],[\"包含消息唯一\",{\"1\":{\"208\":1}}],[\"包含更多匹配段的模板更具体\",{\"1\":{\"165\":1}}],[\"包含基类\",{\"1\":{\"97\":1,\"99\":1}}],[\"包含应用程序域\",{\"1\":{\"91\":1}}],[\"金丝雀发布是一种降低在生产中引入新版本软件风险的技术\",{\"1\":{\"210\":1}}],[\"战略设计部门的重点是处理大型模型和团队\",{\"1\":{\"210\":1}}],[\"幂等性是能够以同样的方式做两次\",{\"1\":{\"210\":1}}],[\"映射配置文件\",{\"1\":{\"574\":1,\"576\":1}}],[\"映射项到模型类\",{\"0\":{\"396\":1}}],[\"映射项到强类型对象\",{\"0\":{\"395\":1}}],[\"映射领域\",{\"1\":{\"210\":1}}],[\"映射表即为倒排索引\",{\"1\":{\"204\":1}}],[\"院长\",{\"1\":{\"210\":1}}],[\"客户端连接到\",{\"1\":{\"939\":1}}],[\"客户端和\",{\"1\":{\"937\":1}}],[\"客户端和服务器端就处于平等的地位\",{\"1\":{\"534\":1}}],[\"客户端和服务器的内存中要保存一份关于对方的信息\",{\"1\":{\"327\":1}}],[\"客户端用于接收消息\",{\"1\":{\"709\":1}}],[\"客户端打印程序其实就是将fastreport打印组件封装进去\",{\"1\":{\"691\":1}}],[\"客户端的功能点如下\",{\"1\":{\"690\":1}}],[\"客户端的代理设置主要有下面四种\",{\"1\":{\"322\":1}}],[\"客户端将连续的数据流发送到服务端\",{\"1\":{\"676\":1}}],[\"客户端基本配置\",{\"0\":{\"670\":1}}],[\"客户端包\",{\"1\":{\"668\":1}}],[\"客户端传入多个请求对象\",{\"1\":{\"667\":1}}],[\"客户端流式处理\",{\"1\":{\"676\":1,\"678\":1}}],[\"客户端流式\",{\"1\":{\"667\":2}}],[\"客户端具有一个存根\",{\"1\":{\"662\":1}}],[\"客户端应用程序可以直接在其他计算机上的服务器应用程序上调用该方法\",{\"1\":{\"662\":1}}],[\"客户端支持从本地缓存读取配置\",{\"1\":{\"661\":1}}],[\"客户端使用eventsource对象\",{\"1\":{\"533\":1}}],[\"客户端使用product对象而不用了解具体的实现细节\",{\"1\":{\"438\":1}}],[\"客户端需要针对响应和超时进行编程\",{\"1\":{\"532\":1}}],[\"客户端向服务器发出信息请求\",{\"1\":{\"532\":1}}],[\"客户端向集群某节点写入数据\",{\"1\":{\"204\":1}}],[\"客户端定期询问服务器是否有新信息\",{\"1\":{\"531\":1}}],[\"客户端会取回这个\",{\"1\":{\"322\":1}}],[\"客户端\",{\"0\":{\"673\":1,\"676\":1,\"678\":1,\"681\":1},\"1\":{\"322\":3,\"438\":2,\"661\":1,\"668\":1,\"691\":1,\"696\":1,\"805\":5}}],[\"客户端不直接和\",{\"1\":{\"322\":1}}],[\"客户端就要和\",{\"1\":{\"322\":1}}],[\"客户端简化工具\",{\"1\":{\"210\":1}}],[\"携程公司的apollo\",{\"1\":{\"210\":1}}],[\"落地技术\",{\"1\":{\"210\":1}}],[\"落地对应的一个服务应用\",{\"1\":{\"210\":1}}],[\"运维人员快速应对变化也更加灵活性\",{\"1\":{\"806\":1}}],[\"运维工程师压力增大\",{\"1\":{\"210\":1}}],[\"运输即可\",{\"1\":{\"804\":1}}],[\"运行keytool工具\",{\"1\":{\"1037\":1}}],[\"运行到当前位置\",{\"0\":{\"976\":1}}],[\"运行到光标位置\",{\"0\":{\"975\":1}}],[\"运行到下一个断点处\",{\"1\":{\"974\":1}}],[\"运行的\",{\"1\":{\"944\":1}}],[\"运行的多人\",{\"1\":{\"243\":1}}],[\"运行在内核\",{\"1\":{\"916\":1}}],[\"运行在浏览器上\",{\"1\":{\"328\":1}}],[\"运行指令\",{\"1\":{\"872\":1}}],[\"运行hello\",{\"1\":{\"862\":1}}],[\"运行起来测试一下效果\",{\"1\":{\"851\":1}}],[\"运行演示\",{\"1\":{\"812\":1}}],[\"运行中的容器默认不让删除\",{\"1\":{\"811\":1}}],[\"运行结果总览\",{\"1\":{\"737\":1}}],[\"运行查看效果\",{\"1\":{\"588\":1}}],[\"运行查看输出效果\",{\"1\":{\"446\":1}}],[\"运行命令\",{\"0\":{\"554\":1}}],[\"运行命令启动文件\",{\"1\":{\"540\":1}}],[\"运行supervisord\",{\"1\":{\"546\":1}}],[\"运行项目\",{\"1\":{\"483\":1}}],[\"运行方便\",{\"1\":{\"243\":1}}],[\"运行\",{\"1\":{\"243\":1,\"484\":1,\"561\":1,\"964\":1,\"1012\":1}}],[\"运行效率相对较低的特点\",{\"1\":{\"203\":1}}],[\"运行时不需要工具包\",{\"1\":{\"668\":1}}],[\"运行时\",{\"1\":{\"140\":1,\"561\":1}}],[\"运行时检查\",{\"1\":{\"94\":1}}],[\"便自动启动\",{\"1\":{\"1019\":1}}],[\"便会弹出nssm\",{\"1\":{\"1018\":1}}],[\"便捷功能块\",{\"0\":{\"719\":1}}],[\"便和同学约定晚上六点在火车站候车室会合\",{\"1\":{\"432\":1}}],[\"便利集中\",{\"1\":{\"210\":1}}],[\"便于外界做出相应的操作\",{\"1\":{\"149\":1}}],[\"聚焦单一业务功能\",{\"1\":{\"210\":1}}],[\"聚集索引和非聚集索引\",{\"1\":{\"203\":1}}],[\"松耦合\",{\"1\":{\"210\":1}}],[\"业务逻辑结束处理\",{\"1\":{\"401\":1}}],[\"业务逻辑开始处理\",{\"1\":{\"401\":1}}],[\"业务逻辑代码\",{\"1\":{\"46\":1}}],[\"业务场景\",{\"1\":{\"210\":1}}],[\"马丁福勒\",{\"1\":{\"210\":1}}],[\"马上读取\",{\"1\":{\"134\":1}}],[\"讲的是一些实现思路\",{\"1\":{\"689\":1}}],[\"讲究的是职责单一\",{\"1\":{\"210\":1}}],[\"讲解的很详细\",{\"1\":{\"20\":1}}],[\"讲解的非常详细\",{\"1\":{\"16\":1}}],[\"专业工作站版\",{\"1\":{\"1032\":2}}],[\"专业教育版\",{\"1\":{\"1032\":2}}],[\"专业版和家庭版二合一\",{\"1\":{\"1035\":1}}],[\"专业版\",{\"1\":{\"957\":1,\"1032\":2,\"1102\":1}}],[\"专用命令来查找\",{\"1\":{\"786\":1}}],[\"专用的私有代理比较少见\",{\"1\":{\"322\":1}}],[\"专注于安全\",{\"1\":{\"536\":1}}],[\"专注某个功能的实现\",{\"1\":{\"210\":1}}],[\"专科还是高中文凭\",{\"1\":{\"194\":1}}],[\"般使用\",{\"1\":{\"209\":1}}],[\"抢到之后\",{\"1\":{\"209\":1}}],[\"放了一个docker\",{\"1\":{\"1070\":1}}],[\"放大镜\",{\"0\":{\"1027\":1}}],[\"放大缩小\",{\"1\":{\"254\":1}}],[\"放到一个大的\",{\"1\":{\"209\":1}}],[\"放入共享字典中\",{\"1\":{\"166\":1}}],[\"去掉勾选\",{\"1\":{\"1110\":1}}],[\"去掉网格线\",{\"1\":{\"965\":1}}],[\"去阿里云下载系统\",{\"1\":{\"1103\":1}}],[\"去除广告插件\",{\"1\":{\"990\":1}}],[\"去住酒店充电\",{\"1\":{\"433\":1}}],[\"去设置里面的扩展启用c\",{\"1\":{\"321\":1}}],[\"去缓存查询\",{\"1\":{\"209\":1}}],[\"去删除对应的缓存\",{\"1\":{\"134\":1}}],[\"何如避免\",{\"1\":{\"209\":1}}],[\"槽\",{\"1\":{\"209\":1}}],[\"槽的概念\",{\"1\":{\"209\":1}}],[\"计数器\",{\"1\":{\"209\":1}}],[\"计算表达式并建立跟踪点\",{\"1\":{\"968\":1}}],[\"计算资源\",{\"1\":{\"914\":1}}],[\"计算的时候\",{\"1\":{\"779\":1}}],[\"计算机\",{\"0\":{\"314\":1}}],[\"计算\",{\"1\":{\"134\":1,\"209\":1}}],[\"队列\",{\"1\":{\"209\":1}}],[\"队列名称\",{\"1\":{\"46\":1}}],[\"层的负载均衡器\",{\"1\":{\"944\":1}}],[\"层的\",{\"1\":{\"938\":1}}],[\"层工作\",{\"1\":{\"938\":1}}],[\"层轮询\",{\"1\":{\"938\":1}}],[\"层\",{\"1\":{\"325\":1}}],[\"层次结构中上下级之间都是\",{\"1\":{\"322\":1}}],[\"层次的读取和写入\",{\"1\":{\"202\":1}}],[\"层代码要求比较高\",{\"1\":{\"209\":1}}],[\"较短的键\",{\"1\":{\"209\":1}}],[\"尝试ping下百度看是否可以访问外网\",{\"1\":{\"1104\":1}}],[\"尝试回收最少使用的键\",{\"1\":{\"209\":2}}],[\"尝试设置时区为上海\",{\"1\":{\"125\":1}}],[\"咋整\",{\"1\":{\"208\":1}}],[\"咋办\",{\"1\":{\"208\":1}}],[\"削峰\",{\"1\":{\"208\":1}}],[\"利用这一特性\",{\"1\":{\"916\":1}}],[\"利用这一信息\",{\"1\":{\"205\":1}}],[\"利用组合键ctrl+p+q\",{\"1\":{\"811\":2}}],[\"利用反射\",{\"1\":{\"442\":1}}],[\"利用后者提供服务实例\",{\"1\":{\"344\":1}}],[\"利用\",{\"1\":{\"336\":1}}],[\"利用一张日志表来记录已经处理成功的消息的\",{\"1\":{\"208\":1}}],[\"网卡配置文件修改完成\",{\"1\":{\"1110\":1}}],[\"网卡配置文件编辑完成\",{\"1\":{\"1110\":1}}],[\"网页自动刷新plus\",{\"0\":{\"1003\":1}}],[\"网页界面\",{\"1\":{\"256\":1}}],[\"网桥的\",{\"1\":{\"927\":1}}],[\"网桥上\",{\"1\":{\"926\":1,\"927\":1}}],[\"网桥是一个二层网络设备\",{\"1\":{\"916\":1}}],[\"网桥\",{\"1\":{\"916\":1}}],[\"网速慢的情况\",{\"1\":{\"798\":1}}],[\"网上有老哥给出了部署方案\",{\"1\":{\"709\":1}}],[\"网址\",{\"1\":{\"698\":1}}],[\"网站\",{\"1\":{\"955\":1}}],[\"网站的内容跟\",{\"1\":{\"335\":1}}],[\"网站的计数器\",{\"1\":{\"202\":1}}],[\"网站过滤\",{\"1\":{\"322\":1}}],[\"网关就是没有过滤功能的代理服务器\",{\"1\":{\"322\":1}}],[\"网关不能阻止访问某些网站\",{\"1\":{\"322\":1}}],[\"网关旨在将两个不同的网络连接在一起\",{\"1\":{\"322\":1}}],[\"网关是一种网络硬件设备或网络节点\",{\"1\":{\"322\":1}}],[\"网易音乐\",{\"1\":{\"307\":1}}],[\"网盘地址\",{\"1\":{\"272\":1}}],[\"网络地址转换模式\",{\"1\":{\"1110\":2}}],[\"网络后面会设置\",{\"1\":{\"1110\":1}}],[\"网络上有很多图床工具\",{\"1\":{\"951\":1}}],[\"网络上已使用和可用的\",{\"1\":{\"936\":1}}],[\"网络使用桥接模式\",{\"1\":{\"950\":1}}],[\"网络的路由\",{\"1\":{\"945\":1}}],[\"网络的\",{\"1\":{\"945\":1}}],[\"网络的数据包时\",{\"1\":{\"944\":1}}],[\"网络的报文\",{\"1\":{\"944\":1}}],[\"网络的命名空间\",{\"1\":{\"916\":1}}],[\"网络中\",{\"1\":{\"936\":1}}],[\"网络中加入新的\",{\"1\":{\"936\":1}}],[\"网络中是可路由的\",{\"1\":{\"935\":1}}],[\"网络之中\",{\"1\":{\"935\":1}}],[\"网络基础\",{\"0\":{\"935\":1}}],[\"网络方面的背景知识\",{\"1\":{\"934\":1}}],[\"网络外通过主机\",{\"1\":{\"930\":1}}],[\"网络内节点内的通信会走\",{\"1\":{\"925\":1}}],[\"网络内跨节点的通信会交给\",{\"1\":{\"925\":1}}],[\"网络协议栈中灵活的数据包处理机制\",{\"1\":{\"916\":1}}],[\"网络通信原理\",{\"0\":{\"915\":1}}],[\"网络文件系统\",{\"1\":{\"914\":1}}],[\"网络允许为容器分配\",{\"1\":{\"839\":1}}],[\"网络配置\",{\"1\":{\"811\":1}}],[\"网络\",{\"0\":{\"944\":1},\"1\":{\"809\":1,\"935\":1,\"939\":1}}],[\"网络等\",{\"1\":{\"805\":1}}],[\"网络受限环境\",{\"1\":{\"664\":1}}],[\"网络即软件\",{\"1\":{\"327\":1}}],[\"网络拓扑图\",{\"1\":{\"296\":1}}],[\"网络图片\",{\"1\":{\"256\":1}}],[\"网络不可达\",{\"1\":{\"208\":1}}],[\"造成了linux\",{\"1\":{\"247\":1}}],[\"造成消息重复的根本原因是\",{\"1\":{\"208\":1}}],[\"造假成本太高\",{\"1\":{\"195\":1}}],[\"谁让你第一个方案执行的太慢了\",{\"1\":{\"208\":1}}],[\"谁都会这么写\",{\"1\":{\"179\":1}}],[\"临时建立好原先\",{\"1\":{\"208\":1}}],[\"临时紧急扩容\",{\"1\":{\"208\":1}}],[\"倍速度来消费数据\",{\"1\":{\"208\":1}}],[\"倍数量的\",{\"1\":{\"208\":1}}],[\"倍的机器来部署\",{\"1\":{\"208\":1}}],[\"倍的\",{\"1\":{\"208\":1}}],[\"倍的差距\",{\"1\":{\"208\":1}}],[\"倍\",{\"1\":{\"208\":2,\"1110\":1}}],[\"坏处在于\",{\"1\":{\"208\":1}}],[\"镜像源\",{\"1\":{\"1114\":1}}],[\"镜像文件\",{\"1\":{\"1110\":1}}],[\"镜像文件位置为前面下载的\",{\"1\":{\"1110\":1}}],[\"镜像列表\",{\"1\":{\"1110\":1}}],[\"镜像仓库密码\",{\"1\":{\"1070\":2}}],[\"镜像仓库用户名\",{\"1\":{\"1070\":2}}],[\"镜像量身定做的\",{\"1\":{\"871\":1}}],[\"镜像大小和我们生成的镜像大小\",{\"1\":{\"863\":1}}],[\"镜像层依赖于一系列的底层技术\",{\"1\":{\"863\":1}}],[\"镜像的手段呢\",{\"1\":{\"863\":1}}],[\"镜像的分层原理就是采用unionfs\",{\"1\":{\"810\":1}}],[\"镜像制作\",{\"1\":{\"863\":1}}],[\"镜像查看镜像内部的详细信息\",{\"1\":{\"837\":1}}],[\"镜像名称\",{\"1\":{\"815\":1}}],[\"镜像名和版本\",{\"1\":{\"811\":1}}],[\"镜像名\",{\"1\":{\"810\":1,\"815\":3}}],[\"镜像可以通过分层来进行继承\",{\"1\":{\"810\":1}}],[\"镜像是只读的\",{\"1\":{\"810\":1}}],[\"镜像常用命令\",{\"0\":{\"810\":1}}],[\"镜像生成之后\",{\"1\":{\"806\":1}}],[\"镜像就是编程语言中的类\",{\"1\":{\"805\":1}}],[\"镜像\",{\"0\":{\"865\":1},\"1\":{\"779\":1,\"805\":1,\"810\":1,\"818\":1,\"863\":1,\"864\":1,\"875\":1}}],[\"镜像访问\",{\"0\":{\"335\":1}}],[\"镜像集群下\",{\"1\":{\"208\":1}}],[\"镜像集群模式\",{\"1\":{\"208\":2}}],[\"镜像用的vs默认的\",{\"1\":{\"125\":1}}],[\"条码\",{\"1\":{\"693\":1}}],[\"条用于控制台提供程序\",{\"1\":{\"446\":1}}],[\"条用于调试提供程序\",{\"1\":{\"446\":1}}],[\"条筛选规则\",{\"1\":{\"446\":1}}],[\"条款更要求作者所许可的人对改作后的派生作品要使用相同许可证授予作者\",{\"1\":{\"248\":1}}],[\"条款之后\",{\"1\":{\"248\":1}}],[\"条款源自自由软件运动\",{\"1\":{\"248\":1}}],[\"条\",{\"1\":{\"208\":1}}],[\"条件和跟踪操作都可以在断点上指定\",{\"1\":{\"980\":1}}],[\"条件断点\",{\"0\":{\"979\":1}}],[\"条件允许的情况下\",{\"1\":{\"781\":1}}],[\"条件查询\",{\"0\":{\"505\":1}}],[\"条件\",{\"1\":{\"134\":1}}],[\"出的\",{\"1\":{\"1065\":1}}],[\"出发进行图解\",{\"1\":{\"932\":1}}],[\"出乎意料的是\",{\"1\":{\"863\":1}}],[\"出处\",{\"1\":{\"599\":1}}],[\"出\",{\"1\":{\"564\":1}}],[\"出生日期不能大于当前时间\",{\"1\":{\"475\":3}}],[\"出生日期\",{\"1\":{\"475\":1}}],[\"出生日期必须小于当前时间\",{\"1\":{\"475\":1}}],[\"出错\",{\"1\":{\"404\":1}}],[\"出来解决方案\",{\"1\":{\"321\":1}}],[\"出来混\",{\"1\":{\"195\":1}}],[\"出售\",{\"1\":{\"250\":1}}],[\"出现绿色的符号\",{\"1\":{\"976\":1}}],[\"出现蓝色代表构建成功\",{\"1\":{\"900\":1}}],[\"出现负荷过载或者响应慢的情况\",{\"1\":{\"210\":1}}],[\"出现异常后\",{\"1\":{\"208\":1}}],[\"矛盾点在于\",{\"1\":{\"208\":1}}],[\"坑爹\",{\"1\":{\"208\":1}}],[\"慢的多\",{\"1\":{\"208\":1}}],[\"吞吐量下降\",{\"1\":{\"208\":1}}],[\"然户跳转打开主界面\",{\"1\":{\"791\":1}}],[\"然而没有到\",{\"1\":{\"945\":1}}],[\"然而这只是个虚拟\",{\"1\":{\"943\":1}}],[\"然而在实际过程中\",{\"1\":{\"215\":1}}],[\"然而\",{\"1\":{\"208\":1,\"939\":1,\"944\":1,\"974\":1}}],[\"然后输入\",{\"1\":{\"1107\":1}}],[\"然后输入密码进行连接\",{\"1\":{\"1106\":1}}],[\"然后输入enter\",{\"1\":{\"1104\":1}}],[\"然后输入命令\",{\"1\":{\"775\":1}}],[\"然后连接后\",{\"1\":{\"1104\":1}}],[\"然后启动开后点击连接\",{\"1\":{\"1104\":1}}],[\"然后构建镜像生成容器\",{\"1\":{\"1070\":1}}],[\"然后给dapper设置自定义映射\",{\"1\":{\"1061\":1}}],[\"然后要操作哪些数据库就再安装对应数据库的包\",{\"1\":{\"1048\":1}}],[\"然后新建存储数据库连接字符串主从映射关旭的映射类\",{\"1\":{\"1047\":1}}],[\"然后新建控制器并添加下面的代码\",{\"1\":{\"364\":1}}],[\"然后由nssm管理服务\",{\"1\":{\"1019\":1}}],[\"然后由专门的消费者来重试\",{\"1\":{\"134\":1}}],[\"然后下载下然后安装规定的顺序安装后重启电脑\",{\"1\":{\"1012\":1}}],[\"然后下一步\",{\"1\":{\"802\":2,\"1104\":1}}],[\"然后执行以下操作之一\",{\"1\":{\"1012\":1}}],[\"然后执行该终结点的\",{\"1\":{\"157\":1}}],[\"然后添加\",{\"1\":{\"973\":1}}],[\"然后保存\",{\"1\":{\"971\":1}}],[\"然后使用上下方向键移动整行代码\",{\"1\":{\"965\":1}}],[\"然后按回车键\",{\"1\":{\"965\":1}}],[\"然后按照默认的选项进行安装\",{\"1\":{\"748\":1}}],[\"然后按照之前文章的经验\",{\"1\":{\"576\":1}}],[\"然后按照上面的步骤\",{\"1\":{\"576\":1}}],[\"然后以root用户运行如下命令升级\",{\"1\":{\"949\":1}}],[\"然后以一个容器运行\",{\"1\":{\"843\":1}}],[\"然后升级所有包的同时也升级软件和系统内核\",{\"1\":{\"946\":1,\"1109\":1}}],[\"然后是节点的缺省网关\",{\"1\":{\"945\":1}}],[\"然后把流量发送给位于\",{\"1\":{\"945\":1}}],[\"然后把这些词又组合了一遍\",{\"1\":{\"179\":1}}],[\"然后读取它\",{\"1\":{\"931\":1}}],[\"然后去容器的执行目录下查找管理员的密码\",{\"1\":{\"888\":1}}],[\"然后去对应的redis\",{\"1\":{\"209\":1}}],[\"然后修改如下\",{\"1\":{\"876\":1}}],[\"然后修改我们的pluginhelper文件中加载程序集的方法\",{\"1\":{\"577\":1}}],[\"然后出来\",{\"1\":{\"862\":1}}],[\"然后出来一个类似于命令窗口的东西\",{\"1\":{\"748\":1}}],[\"然后运行docker\",{\"1\":{\"844\":1}}],[\"然后逐一运行指令\",{\"1\":{\"818\":1}}],[\"然后指定启动\",{\"1\":{\"817\":1}}],[\"然后主机就可以根据镜像启动容器\",{\"1\":{\"812\":1}}],[\"然后删除就行了\",{\"1\":{\"810\":1}}],[\"然后开始编辑\",{\"1\":{\"965\":1}}],[\"然后开始安装\",{\"1\":{\"802\":1}}],[\"然后开始调试\",{\"1\":{\"173\":1}}],[\"然后继续下一步\",{\"1\":{\"802\":1}}],[\"然后会继续阻塞\",{\"1\":{\"809\":1}}],[\"然后会在指定目录\",{\"1\":{\"802\":1}}],[\"然后会自动预览\",{\"1\":{\"745\":1}}],[\"然后需要按多次回车\",{\"1\":{\"802\":1}}],[\"然后需要在程序中配置校验token\",{\"1\":{\"484\":1}}],[\"然后拉取依赖的redis服务\",{\"1\":{\"852\":1}}],[\"然后拉取成功后\",{\"1\":{\"798\":1}}],[\"然后拉取\",{\"1\":{\"798\":1}}],[\"然后a切换到主分支\",{\"1\":{\"798\":1}}],[\"然后提交推送到了分支a1\",{\"1\":{\"798\":1}}],[\"然后提示认证失败\",{\"1\":{\"775\":1}}],[\"然后切换到分支a1\",{\"1\":{\"798\":1}}],[\"然后切换到\",{\"1\":{\"798\":1}}],[\"然后切换过去\",{\"1\":{\"786\":1}}],[\"然后每次编辑完以后在推送到中央服务器\",{\"1\":{\"798\":1}}],[\"然后每次你写消息到\",{\"1\":{\"208\":1}}],[\"然后后期再次输入密码啥等一直拉取不成功\",{\"1\":{\"775\":1}}],[\"然后git\",{\"1\":{\"775\":1}}],[\"然后gitlab\",{\"1\":{\"38\":1}}],[\"然后右键合并分支从b1合并分支并提交推送\",{\"1\":{\"798\":1}}],[\"然后右键选择git\",{\"1\":{\"752\":1}}],[\"然后右键项目发布\",{\"1\":{\"539\":1}}],[\"然后点击\",{\"1\":{\"1110\":10}}],[\"然后点击完成\",{\"1\":{\"1104\":1}}],[\"然后点击启用或者关闭windows功能\",{\"1\":{\"1104\":1}}],[\"然后点击安装\",{\"1\":{\"1007\":1,\"1104\":1}}],[\"然后点击安装进行\",{\"1\":{\"961\":1}}],[\"然后点击继续\",{\"1\":{\"979\":1}}],[\"然后点击确定即可\",{\"1\":{\"876\":1}}],[\"然后点击右键合并从主分支\",{\"1\":{\"798\":1}}],[\"然后点击编辑\",{\"1\":{\"742\":1}}],[\"然后点击立即重启\",{\"1\":{\"312\":1}}],[\"然后和100进行比较\",{\"1\":{\"739\":1}}],[\"然后上传本地的文件\",{\"1\":{\"734\":1}}],[\"然后收到了朋友的评论\",{\"1\":{\"695\":1}}],[\"然后采用\",{\"1\":{\"673\":1}}],[\"然后设置dockerfile为始终复制\",{\"1\":{\"834\":1}}],[\"然后设置\",{\"1\":{\"673\":1}}],[\"然后登录进入系统\",{\"1\":{\"661\":1}}],[\"然后单元测试就编写完成了\",{\"1\":{\"591\":1}}],[\"然后单击完成证书管理器向导\",{\"1\":{\"964\":1}}],[\"然后单击\",{\"1\":{\"175\":1,\"1012\":1}}],[\"然后查看该service依赖于一些配置\",{\"1\":{\"591\":1}}],[\"然后注入日志组件\",{\"1\":{\"591\":1}}],[\"然后引用我们的包\",{\"1\":{\"585\":1}}],[\"然后拷贝到宿主程序的插件目录下\",{\"1\":{\"576\":1}}],[\"然后拷贝到我们的服务器一个文件夹内\",{\"1\":{\"563\":1}}],[\"然后创建插件加载帮助类pluginhelper\",{\"1\":{\"574\":1}}],[\"然后加载到当前宿主的服务内进行实现需求\",{\"1\":{\"571\":1}}],[\"然后选择x\",{\"1\":{\"614\":1}}],[\"然后选择发布到文件夹\",{\"1\":{\"539\":1}}],[\"然后选出第一个\",{\"1\":{\"204\":1}}],[\"然后可以右键可以看到这两个就成功了\",{\"1\":{\"802\":1}}],[\"然后可以加上xx\",{\"1\":{\"521\":1}}],[\"然后可以用它来滚动开发按需实例的微服务而无需任何额外的工作\",{\"1\":{\"210\":1}}],[\"然后只查询需要的内容\",{\"1\":{\"501\":1}}],[\"然后只是展示了\",{\"1\":{\"478\":1}}],[\"然后想到之前听前端同事说过他们没有long类型他们使用的字符串来处理的我返回的long类型\",{\"1\":{\"478\":1}}],[\"然后返回给到客户端\",{\"1\":{\"438\":1}}],[\"然后返回随机数\",{\"1\":{\"401\":1}}],[\"然后根据主键更新\",{\"1\":{\"1043\":1}}],[\"然后根据用户标识作为key\",{\"1\":{\"424\":1}}],[\"然后根据哈希运算的结果中的\",{\"1\":{\"204\":1}}],[\"然后实现iexceptionfilter接口\",{\"1\":{\"404\":1}}],[\"然后验证通过后将用户信息存入上下文的user中\",{\"1\":{\"401\":1}}],[\"然后授权等\",{\"1\":{\"401\":1}}],[\"然后通过本机去ping下我们的服务器\",{\"1\":{\"1107\":1}}],[\"然后通过网络连接起来就行\",{\"1\":{\"843\":1}}],[\"然后通过load命令重新加载\",{\"1\":{\"810\":1}}],[\"然后通过mobaxterm工具将文件拷贝到服务器上\",{\"1\":{\"539\":1}}],[\"然后通过这个去获取\",{\"1\":{\"363\":1}}],[\"然后通过匹配\",{\"1\":{\"156\":1}}],[\"然后利用servicecollection来创建serviceprovider\",{\"1\":{\"344\":1}}],[\"然后自定义readme\",{\"1\":{\"339\":1}}],[\"然后在创建的虚拟机上安装\",{\"1\":{\"1110\":1}}],[\"然后在这个界面名称具体规定\",{\"1\":{\"1104\":1}}],[\"然后在这个网站里面进行下载克隆等操作\",{\"1\":{\"335\":1}}],[\"然后在dotnet\",{\"1\":{\"1070\":1}}],[\"然后在\",{\"1\":{\"1064\":1,\"1110\":1}}],[\"然后在其他接口使用该值就可以了\",{\"1\":{\"745\":1}}],[\"然后在环境中才能创建变量\",{\"1\":{\"740\":1}}],[\"然后在参考了一个老哥写的一个文章\",{\"1\":{\"682\":1}}],[\"然后在项目启动的时候下载插件\",{\"1\":{\"571\":1}}],[\"然后在onresourceexecuted进行存储\",{\"1\":{\"402\":1}}],[\"然后在gitlab的ci\",{\"1\":{\"8\":1}}],[\"然后再执行一次上面的命令\",{\"1\":{\"1109\":1}}],[\"然后再去阿里云镜像仓库查看是否有我们推送上去的镜像\",{\"1\":{\"1070\":1}}],[\"然后再使用dapper查询的时候就可以不使用别名\",{\"1\":{\"1061\":1}}],[\"然后再由kube\",{\"1\":{\"914\":1}}],[\"然后再根据镜像启动容器\",{\"1\":{\"805\":1}}],[\"然后再根据这条数据\",{\"1\":{\"134\":1}}],[\"然后再粘贴一样\",{\"1\":{\"781\":1}}],[\"然后再存储到\",{\"1\":{\"779\":1}}],[\"然后再次运行git\",{\"1\":{\"775\":1}}],[\"然后再启动项目后就可以看到插件中添加的控制器了\",{\"1\":{\"576\":1}}],[\"然后再创建保存插件信息的类plugin\",{\"1\":{\"573\":1}}],[\"然后再executed里面设置缓存\",{\"1\":{\"402\":1}}],[\"然后再一次访问这个接口时候\",{\"1\":{\"402\":1}}],[\"然后再将响应报文通过代理传回给客户端\",{\"1\":{\"322\":1}}],[\"然后这里我们选择普通模式\",{\"1\":{\"312\":1}}],[\"然后这次就可以选择时区并创建账户\",{\"1\":{\"312\":1}}],[\"然后这个\",{\"1\":{\"208\":1}}],[\"然后我提交新增加的代码\",{\"1\":{\"1070\":1}}],[\"然后我想到了我使用的另一个第三方软件捷易快信\",{\"1\":{\"694\":1}}],[\"然后我顺带将原来的netf升级为netcore\",{\"1\":{\"657\":1}}],[\"然后我还去提了bug\",{\"1\":{\"478\":1}}],[\"然后我使用接口测试工具调用后发现数据是正确的\",{\"1\":{\"478\":1}}],[\"然后我就陷入了重启=>安装=>重启的死循环中\",{\"1\":{\"312\":1}}],[\"然后我们需要先添加yum源\",{\"1\":{\"1109\":1}}],[\"然后我们就可以在微软商店里面搜索wsl\",{\"1\":{\"1007\":1}}],[\"然后我们就可以上传一个测试下是否可以使用\",{\"1\":{\"952\":1}}],[\"然后我们就建好了一个空的仓库\",{\"1\":{\"752\":1}}],[\"然后我们可以再图床设置找到\",{\"1\":{\"952\":1}}],[\"然后我们再去拉取项目\",{\"1\":{\"802\":1}}],[\"然后我们运行git\",{\"1\":{\"768\":1}}],[\"然后我们修改我们的插件项目\",{\"1\":{\"577\":1}}],[\"然后我们查看接口列表\",{\"1\":{\"234\":1}}],[\"然后我们重新按照上面的命令执行一遍\",{\"1\":{\"22\":1}}],[\"然后其他的人都在该分组中编辑本分组的项目\",{\"1\":{\"227\":1}}],[\"然后搜索我们的nuget包\",{\"1\":{\"214\":1,\"1120\":1}}],[\"然后走第二个方案\",{\"1\":{\"208\":1}}],[\"然后等过了高峰期以后\",{\"1\":{\"208\":1}}],[\"然后写一个临时的分发数据的\",{\"1\":{\"208\":1}}],[\"然后将事务作为参数传递到\",{\"1\":{\"1063\":1}}],[\"然后将得到您推荐用户消费金额的10\",{\"1\":{\"694\":1}}],[\"然后将请求提交到当前页面来处理\",{\"1\":{\"693\":1}}],[\"然后将该类库release发布\",{\"1\":{\"575\":1}}],[\"然后将发布后的项目拷贝到要部署的服务器上面\",{\"1\":{\"561\":1}}],[\"然后将opendbcontext通过构造函数注入的方式注入到应用程序的控制器或者其他服务中使用\",{\"1\":{\"502\":1}}],[\"然后将现有\",{\"1\":{\"208\":1}}],[\"然后将这个修改包含到前一个提交之中\",{\"1\":{\"27\":1}}],[\"然后发送消息\",{\"1\":{\"208\":1}}],[\"然后重新构建一个镜像试试\",{\"1\":{\"838\":1}}],[\"然后重新灌入\",{\"1\":{\"208\":1}}],[\"然后重新分发给下一个订阅的消费者\",{\"1\":{\"208\":1}}],[\"然后重复上面注册的过程\",{\"1\":{\"7\":1}}],[\"然后分别在主分支上面创建分支a1\",{\"1\":{\"798\":1}}],[\"然后分发给底层不同的\",{\"1\":{\"208\":1}}],[\"然后分析记录的性能\",{\"1\":{\"174\":1}}],[\"然后更改才会在所有权转移前复制到新的分片上\",{\"1\":{\"205\":1}}],[\"然后定时\",{\"1\":{\"204\":1}}],[\"然后又在configure方法里面调用usesession\",{\"1\":{\"203\":1}}],[\"然后就出来了这个文章\",{\"1\":{\"682\":1}}],[\"然后就想用依赖注入方式去试试了\",{\"1\":{\"657\":1}}],[\"然后就可以看到对方的修改\",{\"1\":{\"798\":1}}],[\"然后就可以对该方法进行单元测试了\",{\"1\":{\"591\":1}}],[\"然后就可以实例化userservice进行使用\",{\"1\":{\"591\":1}}],[\"然后就可以通过iconfiguration实例去获取了\",{\"1\":{\"583\":1}}],[\"然后就可以在仓库的配置下可以看到我们注册的东西\",{\"1\":{\"7\":1}}],[\"然后就需要使用日志组件等记录下这个异常\",{\"1\":{\"404\":1}}],[\"然后就这样子获取到我想要的数据了\",{\"1\":{\"342\":1}}],[\"然后就没有然后了\",{\"1\":{\"192\":1}}],[\"然后让你把代码也交出来\",{\"1\":{\"192\":1}}],[\"然后让我给他介绍一下\",{\"1\":{\"186\":1}}],[\"然后进行提交\",{\"1\":{\"778\":1}}],[\"然后进行匹配matcher\",{\"1\":{\"167\":1}}],[\"然后进行路由约束注册\",{\"1\":{\"164\":1}}],[\"然后\",{\"1\":{\"161\":2,\"442\":1,\"782\":1,\"931\":1}}],[\"然后生成pe文件\",{\"1\":{\"90\":1}}],[\"然后委托调用目标方法\",{\"1\":{\"83\":1}}],[\"然后回车\",{\"1\":{\"40\":3}}],[\"然后服务器不断进行部署\",{\"1\":{\"3\":1}}],[\"劫持等原因\",{\"1\":{\"208\":1}}],[\"生日\",{\"1\":{\"671\":1}}],[\"生产厂家\",{\"1\":{\"693\":1}}],[\"生产环境中启用trace日志\",{\"1\":{\"446\":1}}],[\"生产的消息会丢失\",{\"1\":{\"209\":1}}],[\"生产消息\",{\"1\":{\"209\":1}}],[\"生产者会自动重发\",{\"1\":{\"208\":1}}],[\"生产者丢失消息\",{\"1\":{\"208\":2}}],[\"生产者应用程序的回调方法就会被触发来处理确认消息\",{\"1\":{\"208\":1}}],[\"生产者应用程序在等待确认的同时\",{\"1\":{\"208\":1}}],[\"生成工件将写入中间映像的\",{\"1\":{\"1070\":1}}],[\"生成工具\",{\"1\":{\"963\":1,\"1009\":1}}],[\"生成和推送镜像\",{\"1\":{\"1070\":1}}],[\"生成\",{\"1\":{\"1044\":1}}],[\"生成配置\",{\"1\":{\"1037\":1}}],[\"生成密钥存储文件后\",{\"1\":{\"1037\":1}}],[\"生成apk\",{\"0\":{\"1037\":1}}],[\"生成一段\",{\"1\":{\"931\":1}}],[\"生成一个deployment对象\",{\"1\":{\"914\":1}}],[\"生成了一些文件和目录\",{\"1\":{\"788\":1}}],[\"生成的自定义\",{\"1\":{\"1037\":1}}],[\"生成的tar文件就可以根据需要拷贝到对应设备上加载使用\",{\"1\":{\"810\":1}}],[\"生成的长度也有所不同\",{\"1\":{\"779\":1}}],[\"生成的\",{\"1\":{\"778\":1}}],[\"生成的sql脚本都是先where再order的\",{\"1\":{\"503\":1}}],[\"生成测试报告\",{\"1\":{\"720\":1}}],[\"生成sql是\",{\"1\":{\"1044\":1}}],[\"生成sql\",{\"1\":{\"512\":1,\"513\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":1,\"524\":1}}],[\"生成语句\",{\"1\":{\"511\":1}}],[\"生成数据库以及数据种子\",{\"1\":{\"501\":1}}],[\"生成数据库\",{\"0\":{\"501\":1}}],[\"生成token出错\",{\"1\":{\"364\":1}}],[\"生成静态页面\",{\"1\":{\"206\":1}}],[\"生成容器\",{\"0\":{\"35\":1,\"885\":1}}],[\"未经过格式化处理的\",{\"1\":{\"735\":1}}],[\"未指定默认打印机\",{\"1\":{\"691\":2}}],[\"未找到用户标识\",{\"1\":{\"602\":1}}],[\"未找到join\",{\"1\":{\"518\":1}}],[\"未找到源类型\",{\"1\":{\"518\":1}}],[\"未联网状态\",{\"1\":{\"318\":1}}],[\"未设置\",{\"1\":{\"208\":1,\"691\":1}}],[\"未确认\",{\"1\":{\"208\":1}}],[\"未来可能发生变化的任何值都不应当表示为常量\",{\"1\":{\"67\":1}}],[\"针对各个目标框架进行编译\",{\"1\":{\"1127\":1}}],[\"针对目标框架编译\",{\"0\":{\"1127\":1}}],[\"针对无状态类型的应用\",{\"1\":{\"914\":1}}],[\"针对以下接口返回的数据进行断言\",{\"1\":{\"739\":1}}],[\"针对以上问题\",{\"1\":{\"208\":1}}],[\"针对上面的那个接口\",{\"1\":{\"729\":1}}],[\"针对long类型做特殊处理\",{\"1\":{\"478\":1}}],[\"针对控制器中的某个方法上标注特性的方式进行注册\",{\"1\":{\"406\":1}}],[\"针对当前仓库\",{\"1\":{\"27\":1}}],[\"信道会发送一个确认给生产者\",{\"1\":{\"208\":1}}],[\"信道是建立在真实的\",{\"1\":{\"208\":1}}],[\"信息还会实时显示\",{\"1\":{\"809\":1}}],[\"信息保存\",{\"0\":{\"358\":1}}],[\"信息\",{\"1\":{\"203\":1,\"782\":1}}],[\"连同删除多级目录\",{\"1\":{\"1076\":1}}],[\"连接虚拟硬盘\",{\"1\":{\"1104\":1}}],[\"连接linux\",{\"1\":{\"1036\":1}}],[\"连接成功\",{\"1\":{\"1010\":1}}],[\"连接\",{\"1\":{\"964\":1}}],[\"连接才能完成此操作\",{\"1\":{\"962\":1}}],[\"连接其它\",{\"1\":{\"945\":1}}],[\"连接我们的配置中心\",{\"1\":{\"661\":1}}],[\"连接一旦建立\",{\"1\":{\"534\":1}}],[\"连接挂起也会导致资源的浪费\",{\"1\":{\"532\":1}}],[\"连接数据库字符串\",{\"1\":{\"502\":1}}],[\"连接数据库\",{\"0\":{\"1010\":1},\"1\":{\"502\":1,\"720\":1}}],[\"连接也未断开\",{\"1\":{\"208\":1}}],[\"连接上的信道数量没有限制\",{\"1\":{\"208\":1}}],[\"连接内的虚拟连接\",{\"1\":{\"208\":1}}],[\"连接的创建和销毁开销较大\",{\"1\":{\"208\":1}}],[\"连屁股都不抬一下\",{\"1\":{\"184\":1}}],[\"降低复杂性\",{\"1\":{\"210\":1}}],[\"降低对后台应用访问\",{\"1\":{\"207\":1}}],[\"降低出问题的概率\",{\"1\":{\"134\":1}}],[\"静默打印一直是难点\",{\"1\":{\"689\":1}}],[\"静音\",{\"1\":{\"243\":1}}],[\"静分离将网站静态资源\",{\"1\":{\"207\":1}}],[\"静分离\",{\"1\":{\"207\":1}}],[\"静态ip设置结束\",{\"1\":{\"1107\":1}}],[\"静态变量如下\",{\"1\":{\"600\":1}}],[\"静态文件重载\",{\"1\":{\"580\":1}}],[\"静态文件\",{\"1\":{\"580\":1}}],[\"静态文件都存储在core\",{\"1\":{\"578\":1}}],[\"静态资源\",{\"0\":{\"578\":1,\"581\":1}}],[\"静态初始化是在\",{\"1\":{\"368\":1}}],[\"静态类和成员\",{\"1\":{\"345\":1}}],[\"静态意味着这个在这个层次结构中\",{\"1\":{\"322\":1}}],[\"静态页面都可以用vscode来打断点调试\",{\"1\":{\"321\":1}}],[\"静态成员\",{\"1\":{\"119\":1}}],[\"静态\",{\"1\":{\"103\":1}}],[\"静态方法\",{\"0\":{\"92\":1}}],[\"静态修饰符\",{\"1\":{\"51\":1,\"56\":1,\"59\":1,\"69\":1}}],[\"管道的操作符是\",{\"1\":{\"1096\":1}}],[\"管道里面的map拓展有什么作用\",{\"1\":{\"203\":1}}],[\"管理器是否显示有效的安装\",{\"1\":{\"1037\":1}}],[\"管理扩展插件\",{\"1\":{\"992\":1}}],[\"管理后台\",{\"0\":{\"792\":1}}],[\"管理的服务状态\",{\"1\":{\"564\":1}}],[\"管理所有进程\",{\"1\":{\"564\":1}}],[\"管理游戏状态\",{\"1\":{\"243\":1}}],[\"管理本分组人员操作和简单操作权限\",{\"1\":{\"228\":1}}],[\"管理员身份运行\",{\"1\":{\"1012\":1}}],[\"管理员方式运行powershell\",{\"1\":{\"1008\":1}}],[\"管理员方式运行\",{\"1\":{\"775\":1}}],[\"管理员\",{\"1\":{\"527\":1}}],[\"管理员密码\",{\"1\":{\"218\":1}}],[\"管理员可以配置nginx主进程的工作进程的数量\",{\"1\":{\"207\":1}}],[\"管理平台\",{\"1\":{\"216\":1}}],[\"管理复杂\",{\"1\":{\"210\":1}}],[\"唯一的区别就是镜像层上面加载了一个可写层\",{\"1\":{\"811\":1}}],[\"唯一的方法就是尽量保证系统访问数据库所使用的连接字符串不变\",{\"1\":{\"203\":1}}],[\"唯一标识一条记录\",{\"1\":{\"206\":1}}],[\"删\",{\"1\":{\"206\":1,\"810\":1}}],[\"删除目录\",{\"1\":{\"1094\":1}}],[\"删除目录或文件\",{\"0\":{\"1078\":1}}],[\"删除当前目录文件\",{\"1\":{\"1094\":1}}],[\"删除软链接只是删除链接\",{\"1\":{\"1078\":1}}],[\"删除的目录必须为空目录或多级空目录\",{\"1\":{\"1076\":1}}],[\"删除的时候触发\",{\"1\":{\"661\":1}}],[\"删除空目录\",{\"0\":{\"1076\":1}}],[\"删除同步文件下的文档\",{\"1\":{\"988\":1}}],[\"删除download文件及其子目录\",{\"1\":{\"988\":1}}],[\"删除download文件夹中的文件\",{\"1\":{\"988\":1}}],[\"删除某deployment\",{\"1\":{\"914\":1}}],[\"删除存储资源\",{\"1\":{\"914\":1}}],[\"删除数据\",{\"1\":{\"914\":1}}],[\"删除数据库\",{\"1\":{\"502\":1}}],[\"删除一个namespace会自动删除所有属于该namespace的资源\",{\"1\":{\"914\":1}}],[\"删除命名空间时\",{\"1\":{\"914\":1}}],[\"删除namespace\",{\"1\":{\"914\":1}}],[\"删除全部镜像\",{\"1\":{\"810\":1}}],[\"删除指定容器\",{\"1\":{\"811\":1}}],[\"删除指定版本\",{\"1\":{\"810\":1}}],[\"删除指定镜像\",{\"1\":{\"810\":1}}],[\"删除已经保存的账户密码\",{\"1\":{\"775\":1}}],[\"删除关联\",{\"1\":{\"774\":1}}],[\"删除本地分支\",{\"0\":{\"773\":1}}],[\"删除文件提交到本地服务器\",{\"1\":{\"798\":1}}],[\"删除文件\",{\"1\":{\"771\":1,\"988\":1,\"1094\":1}}],[\"删除远程标签\",{\"1\":{\"764\":1}}],[\"删除标签\",{\"0\":{\"764\":1}}],[\"删除分支\",{\"0\":{\"760\":1}}],[\"删除属性或数组元素\",{\"1\":{\"629\":1}}],[\"删除web服务上的数据项\",{\"1\":{\"624\":1}}],[\"删除作为一个演示的流程\",{\"1\":{\"600\":1}}],[\"删除了一些不影响当前效果的代码\",{\"1\":{\"600\":1}}],[\"删除默认控制器\",{\"1\":{\"552\":1}}],[\"删除后如下所示\",{\"1\":{\"552\":1}}],[\"删除iis配置\",{\"1\":{\"552\":1}}],[\"删除用户信息\",{\"1\":{\"625\":1}}],[\"删除用户\",{\"0\":{\"558\":1},\"1\":{\"483\":1}}],[\"删除和更新也都是写操作\",{\"1\":{\"204\":1}}],[\"删除\",{\"0\":{\"1044\":1},\"1\":{\"134\":2,\"661\":1,\"811\":1,\"1071\":1,\"1076\":1}}],[\"删除缓存的方案中\",{\"1\":{\"134\":1}}],[\"删除缓存的时间\",{\"1\":{\"134\":1}}],[\"删除缓存对应的方案也有\",{\"1\":{\"134\":1}}],[\"删除缓存\",{\"1\":{\"134\":5}}],[\"负载均衡和服务发现\",{\"1\":{\"913\":1}}],[\"负载均衡\",{\"1\":{\"210\":1,\"322\":1,\"914\":1}}],[\"负面影响\",{\"1\":{\"206\":1}}],[\"负责把流量负载均衡给\",{\"1\":{\"937\":1}}],[\"负责协助维护内核中\",{\"1\":{\"916\":1}}],[\"负责在内核中执行各种挂接的规则\",{\"1\":{\"916\":1}}],[\"负责监听客户端发过来的指令请求\",{\"1\":{\"805\":1}}],[\"负责合并分支\",{\"1\":{\"798\":1}}],[\"负责文件的修改\",{\"1\":{\"798\":1}}],[\"负责创建\",{\"1\":{\"165\":1}}],[\"负责当http请求到达时\",{\"1\":{\"156\":1}}],[\"负责将http请求按照匹配规则选择对应的终结点\",{\"1\":{\"156\":1}}],[\"取决于你已经创建了多个对象id\",{\"1\":{\"981\":1}}],[\"取决于定时任务的执行频率\",{\"1\":{\"134\":1}}],[\"取代\",{\"1\":{\"944\":1}}],[\"取得该条日志生产者名字\",{\"1\":{\"453\":1}}],[\"取模来决定放置哪个槽\",{\"1\":{\"209\":1}}],[\"取不易被猜到的\",{\"1\":{\"206\":1}}],[\"防火墙设置\",{\"0\":{\"1108\":1}}],[\"防火墙能够也能够过滤数据\",{\"1\":{\"322\":1}}],[\"防止后续新入职员工看不懂项目\",{\"1\":{\"1009\":1}}],[\"防止sql注入\",{\"1\":{\"512\":1}}],[\"防止sql注入问题\",{\"1\":{\"512\":1}}],[\"防止sql注入的方式\",{\"1\":{\"206\":1}}],[\"防止恶意攻击\",{\"1\":{\"426\":1}}],[\"防止重复提交\",{\"1\":{\"425\":1}}],[\"防止内存泄露\",{\"1\":{\"354\":1}}],[\"防篡改\",{\"1\":{\"325\":1}}],[\"防伪装\",{\"1\":{\"325\":1}}],[\"防窃听\",{\"1\":{\"325\":1}}],[\"防坑指南\",{\"0\":{\"176\":1}}],[\"④\",{\"1\":{\"206\":2}}],[\"③\",{\"1\":{\"206\":3}}],[\"②\",{\"1\":{\"206\":3}}],[\"①\",{\"1\":{\"206\":3}}],[\"锁的优化策略\",{\"1\":{\"206\":1}}],[\"盗链\",{\"1\":{\"206\":1}}],[\"优雅终止\",{\"1\":{\"914\":1}}],[\"优化程序依赖\",{\"1\":{\"872\":1}}],[\"优化3\",{\"1\":{\"868\":1}}],[\"优化\",{\"1\":{\"866\":1,\"867\":1}}],[\"优化基础镜像\",{\"0\":{\"866\":1},\"1\":{\"872\":1}}],[\"优化数据库访问\",{\"1\":{\"206\":1}}],[\"优于默认的bridge网络\",{\"1\":{\"839\":1}}],[\"优先级越高\",{\"1\":{\"564\":1}}],[\"优先级等级\",{\"1\":{\"373\":1}}],[\"优先级\",{\"1\":{\"373\":1}}],[\"优酷视频\",{\"1\":{\"307\":1}}],[\"优启通是由it天空论坛出品的pe\",{\"1\":{\"268\":1}}],[\"优启通\",{\"0\":{\"268\":1},\"1\":{\"268\":1}}],[\"优点上面已经说了\",{\"1\":{\"208\":1}}],[\"优点\",{\"1\":{\"133\":1,\"170\":1,\"171\":1,\"210\":1,\"529\":1}}],[\"您必须确保get\",{\"1\":{\"1008\":1}}],[\"您可以让调试器运行到光标所在行位置\",{\"1\":{\"975\":1}}],[\"您可以使用\",{\"1\":{\"328\":1}}],[\"您可以使用多种语言\",{\"1\":{\"135\":1}}],[\"您确定要退出打印客户端吗\",{\"1\":{\"691\":2}}],[\"您采用什么样的方法来解决各页面访问量统计问题\",{\"1\":{\"206\":1}}],[\"改变拥有者\",{\"1\":{\"908\":1}}],[\"改动了\",{\"1\":{\"375\":1}}],[\"改动比较大\",{\"1\":{\"344\":1}}],[\"改作以外\",{\"1\":{\"248\":1}}],[\"改\",{\"1\":{\"206\":1}}],[\"改为像素\",{\"1\":{\"254\":1}}],[\"改为手动确认消息即可\",{\"1\":{\"208\":1}}],[\"改为\",{\"1\":{\"206\":1,\"944\":1}}],[\"改到30s\",{\"1\":{\"204\":1}}],[\"减少了42m\",{\"1\":{\"866\":1}}],[\"减少锁持有的时间\",{\"1\":{\"206\":1}}],[\"减少单表中的数据量提高查询速度\",{\"1\":{\"206\":1}}],[\"减少人力成本是\",{\"1\":{\"195\":1}}],[\"预发行包\",{\"0\":{\"1129\":1}}],[\"预设的环境与包版本标识对应关系如下\",{\"1\":{\"1121\":1}}],[\"预览\",{\"0\":{\"807\":1}}],[\"预先加载查询\",{\"1\":{\"503\":1}}],[\"预先配置浏览器代理\",{\"1\":{\"322\":1}}],[\"预计阅读时长3min\",{\"1\":{\"430\":1}}],[\"预计运维三年\",{\"1\":{\"206\":1}}],[\"预定义metrics\",{\"1\":{\"914\":1}}],[\"预定义的路\",{\"1\":{\"162\":1}}],[\"预定义类型\",{\"0\":{\"74\":1}}],[\"预定义特性和自定义特性\",{\"1\":{\"41\":1}}],[\"里的容器访问另外一个pod里的容器\",{\"1\":{\"919\":1}}],[\"里的消息都会存在于多个实例上\",{\"1\":{\"208\":1}}],[\"里配置的值\",{\"1\":{\"564\":1}}],[\"里只对\",{\"1\":{\"443\":1}}],[\"里有\",{\"1\":{\"209\":1}}],[\"里去再补一次\",{\"1\":{\"208\":1}}],[\"里面运行着一个nginx服务\",{\"1\":{\"931\":1}}],[\"里面对应的数据也会删除\",{\"1\":{\"812\":1}}],[\"里面包含我们的项目\",{\"1\":{\"806\":1}}],[\"里面包含了get\",{\"1\":{\"600\":1}}],[\"里面内容如下\",{\"1\":{\"806\":1}}],[\"里面任何的操作\",{\"1\":{\"786\":1}}],[\"里面可以设置一些环境\",{\"1\":{\"561\":1}}],[\"里面的文件状态和如何切换\",{\"1\":{\"783\":1}}],[\"里面的resultmodel使用的是nuget的东西\",{\"1\":{\"416\":1}}],[\"里面的bool类型\",{\"1\":{\"77\":1}}],[\"里面一个\",{\"1\":{\"210\":1}}],[\"里面\",{\"1\":{\"208\":1,\"780\":1,\"786\":1}}],[\"里面去\",{\"1\":{\"208\":1}}],[\"里\",{\"1\":{\"205\":1,\"208\":2,\"931\":1,\"965\":1}}],[\"事务封装\",{\"1\":{\"1047\":2}}],[\"事务就会回滚\",{\"1\":{\"208\":1}}],[\"事务\",{\"0\":{\"1062\":1},\"1\":{\"205\":1}}],[\"事件消息总线cap\",{\"1\":{\"210\":1}}],[\"事件发生时\",{\"1\":{\"205\":1}}],[\"事件处理程序数据类型\",{\"1\":{\"87\":1}}],[\"事件名\",{\"1\":{\"68\":1}}],[\"事件的定义\",{\"1\":{\"68\":1}}],[\"事件\",{\"0\":{\"68\":1},\"1\":{\"68\":1}}],[\"节约消息头占用的网络流量\",{\"1\":{\"326\":1}}],[\"节省了大量资源\",{\"1\":{\"207\":1}}],[\"节省存储空间和检索效率\",{\"1\":{\"204\":1}}],[\"节点上都会运行一个叫做\",{\"1\":{\"944\":1}}],[\"节点的内核修改了数据包\",{\"1\":{\"945\":1}}],[\"节点的网络栈也同样没有路由能到达\",{\"1\":{\"944\":1}}],[\"节点的职责主要包括集群\",{\"1\":{\"204\":1}}],[\"节点失效后的替代算法方案\",{\"1\":{\"209\":1}}],[\"节点都有这个\",{\"1\":{\"208\":1}}],[\"节点内存\",{\"1\":{\"204\":1}}],[\"节点可以关闭\",{\"1\":{\"204\":1}}],[\"节点和索引的管理\",{\"1\":{\"204\":1}}],[\"节点\",{\"1\":{\"204\":2,\"208\":1,\"209\":1,\"661\":1,\"879\":1}}],[\"节点之间通过这个rpc来发现彼此\",{\"1\":{\"204\":1}}],[\"冷热数据分离存储\",{\"1\":{\"204\":1}}],[\"冷备份\",{\"1\":{\"133\":1}}],[\"考虑到资金缘故\",{\"1\":{\"697\":1}}],[\"考虑依赖项注入服务等替代项作为\",{\"1\":{\"494\":1}}],[\"考虑部分包括\",{\"1\":{\"209\":1}}],[\"考虑通过设置index\",{\"1\":{\"204\":1}}],[\"考虑把每个索引的index\",{\"1\":{\"204\":1}}],[\"考虑一下\",{\"1\":{\"165\":1}}],[\"超聲科\",{\"1\":{\"693\":1}}],[\"超级管理员\",{\"1\":{\"364\":1}}],[\"超级录屏支持全屏\",{\"1\":{\"292\":1}}],[\"超级录屏\",{\"0\":{\"292\":1}}],[\"超文本标记语言\",{\"1\":{\"328\":1}}],[\"超大规模集群可以考虑分拆成多个集群通过tribe\",{\"1\":{\"204\":1}}],[\"超过所有候选节点一半以上来解决脑裂问题\",{\"1\":{\"204\":1}}],[\"＝\",{\"1\":{\"204\":1}}],[\"做了如下两次提交\",{\"1\":{\"863\":1}}],[\"做为学习使用\",{\"1\":{\"693\":1}}],[\"做异步队列么\",{\"1\":{\"209\":1}}],[\"做二级缓存\",{\"1\":{\"209\":1}}],[\"做高可用性的\",{\"1\":{\"208\":1}}],[\"做概率估算从而得到基数\",{\"1\":{\"204\":1}}],[\"做完你有什么成长\",{\"1\":{\"181\":1}}],[\"做完后的结果\",{\"1\":{\"181\":1}}],[\"度量\",{\"1\":{\"204\":1}}],[\"丰富化dockefile文件内容并查看构建之后的细节\",{\"1\":{\"837\":1}}],[\"丰富的查询语言\",{\"1\":{\"205\":1}}],[\"丰富\",{\"1\":{\"204\":1}}],[\"段合并\",{\"1\":{\"204\":2}}],[\"段是不可变的\",{\"1\":{\"204\":1}}],[\"段本身是一个功能齐全的倒排索引\",{\"1\":{\"204\":1}}],[\"段的\",{\"1\":{\"204\":1}}],[\"旧才更新\",{\"1\":{\"1079\":1}}],[\"旧节点数据可恢复到新\",{\"1\":{\"209\":1}}],[\"旧版本的文档依然能匹配查询\",{\"1\":{\"204\":1}}],[\"旧版本的文档在\",{\"1\":{\"204\":1}}],[\"旧的\",{\"1\":{\"204\":1,\"936\":1}}],[\"旧值\",{\"1\":{\"134\":9}}],[\"过程\",{\"1\":{\"941\":1}}],[\"过程中会有两个\",{\"1\":{\"538\":1}}],[\"过程中\",{\"1\":{\"204\":1}}],[\"过于笨重\",{\"1\":{\"661\":1}}],[\"过滤得到当前系统中的\",{\"1\":{\"1101\":1}}],[\"过滤出\",{\"1\":{\"1096\":2}}],[\"过滤文件\",{\"1\":{\"1096\":1}}],[\"过滤日志\",{\"1\":{\"446\":1}}],[\"过滤器\",{\"1\":{\"413\":1}}],[\"过滤器常见操作\",{\"0\":{\"411\":1}}],[\"过滤器的注册方式有\",{\"1\":{\"405\":1}}],[\"过滤器是更贴合业务的\",{\"1\":{\"399\":1}}],[\"过滤器就是对目标对象\",{\"1\":{\"399\":1}}],[\"过滤器基本使用\",{\"0\":{\"399\":1}}],[\"过滤数据的流入和流出\",{\"1\":{\"322\":1}}],[\"过滤\",{\"1\":{\"209\":1,\"916\":1}}],[\"过滤掉sql语句中的一些关键词\",{\"1\":{\"206\":1}}],[\"过期以后消息也就没有价值了\",{\"1\":{\"700\":1}}],[\"过期时间\",{\"0\":{\"372\":1},\"1\":{\"381\":1,\"386\":1}}],[\"过期时间7小时\",{\"1\":{\"364\":1}}],[\"过期时候的场景\",{\"1\":{\"364\":1}}],[\"过期\",{\"1\":{\"134\":1}}],[\"秒以上的消息吞吐量\",{\"1\":{\"208\":1}}],[\"秒\",{\"1\":{\"204\":1}}],[\"随时回滚配置\",{\"1\":{\"661\":1}}],[\"随机端口映射\",{\"1\":{\"811\":1}}],[\"随机数\",{\"1\":{\"401\":1}}],[\"随机生成\",{\"1\":{\"211\":1,\"1117\":1}}],[\"随着鼠标的移动一起移动\",{\"1\":{\"1027\":1}}],[\"随着supervisord的启动而启动\",{\"1\":{\"564\":1}}],[\"随着服务数量增加\",{\"1\":{\"210\":1}}],[\"随着时间的推移\",{\"1\":{\"134\":1}}],[\"随后请求会被转到另外的节点\",{\"1\":{\"204\":1}}],[\"​\",{\"1\":{\"204\":1,\"210\":2,\"592\":1,\"593\":1,\"594\":1,\"689\":6,\"691\":1,\"692\":3,\"768\":1,\"798\":2,\"1023\":1,\"1074\":3}}],[\"候选发布\",{\"1\":{\"1129\":1}}],[\"候选\",{\"1\":{\"204\":1}}],[\"候选数量不小于\",{\"1\":{\"204\":1}}],[\"候选主节点数n\",{\"1\":{\"204\":1}}],[\"集成了所有所需的软件\",{\"1\":{\"1110\":1}}],[\"集装箱之间互不影响\",{\"1\":{\"804\":1}}],[\"集合变量是针对集合的\",{\"1\":{\"740\":1}}],[\"集合变量\",{\"1\":{\"740\":2}}],[\"集合\",{\"0\":{\"740\":1},\"1\":{\"938\":1}}],[\"集中式的版本控制\",{\"1\":{\"798\":1}}],[\"集中的服务管理机制\",{\"1\":{\"210\":1}}],[\"集中型将所有特点是方便管理\",{\"1\":{\"12\":1}}],[\"集群\",{\"1\":{\"941\":2}}],[\"集群都会在\",{\"1\":{\"941\":1}}],[\"集群内及集群外部访问方式\",{\"1\":{\"932\":1}}],[\"集群内跨节点通信涉及到不同的子网间通信\",{\"1\":{\"928\":1}}],[\"集群内部通信\",{\"0\":{\"924\":1}}],[\"集群单节点内的通信\",{\"1\":{\"925\":1}}],[\"集群各等多个层级的对象间的通信\",{\"1\":{\"920\":1}}],[\"集群中有两个应用\",{\"1\":{\"943\":1}}],[\"集群中的所有\",{\"1\":{\"939\":1}}],[\"集群中的节点\",{\"1\":{\"204\":1}}],[\"集群中可以定义多个ingress\",{\"1\":{\"931\":1}}],[\"集群中每个\",{\"1\":{\"919\":1}}],[\"集群管理员需要部署一个ingress\",{\"1\":{\"914\":1}}],[\"集群外部的请求需要通过负载均衡转发到service所在节点暴露的端口上\",{\"1\":{\"914\":1}}],[\"集群目前无法做数据库选择\",{\"1\":{\"209\":1}}],[\"集群如何选择数据库\",{\"1\":{\"209\":1}}],[\"集群最大节点个数是多少\",{\"1\":{\"209\":1}}],[\"集群之间是如何复制的\",{\"1\":{\"209\":1}}],[\"集群会有写操作丢失吗\",{\"1\":{\"209\":1}}],[\"集群的主从复制模型是怎样的\",{\"1\":{\"209\":1}}],[\"集群的每个节点负责一部分\",{\"1\":{\"209\":1}}],[\"集群有\",{\"1\":{\"209\":1}}],[\"集群没有使用一致性\",{\"1\":{\"209\":1}}],[\"集群方案什么情况下会导致整个集群不可用\",{\"1\":{\"209\":1}}],[\"集群方案应该怎么做\",{\"1\":{\"209\":1}}],[\"补充\",{\"1\":{\"204\":2}}],[\"补偿\",{\"1\":{\"134\":1}}],[\"暂停\",{\"1\":{\"1020\":1}}],[\"暂停执行\",{\"1\":{\"974\":1}}],[\"暂停更新deployment\",{\"1\":{\"914\":1}}],[\"暂停和继续deployment\",{\"1\":{\"914\":1}}],[\"暂停3秒\",{\"1\":{\"373\":1}}],[\"暂停2秒\",{\"1\":{\"372\":3}}],[\"暂停游戏\",{\"1\":{\"243\":1}}],[\"暂存盘中可以设置历史记录保存多少步\",{\"1\":{\"256\":1}}],[\"暂存盘\",{\"1\":{\"256\":1}}],[\"暂存盘设置\",{\"0\":{\"256\":1}}],[\"暂存区以及代码仓库之间进行状态的跟踪和同步\",{\"1\":{\"783\":1}}],[\"暂存区\",{\"1\":{\"23\":1,\"780\":1}}],[\"暂时停止对该服务的调用\",{\"1\":{\"210\":1}}],[\"暂且认为它是master节点\",{\"1\":{\"204\":1}}],[\"选用更合适的开发语言\",{\"1\":{\"872\":1}}],[\"选用更精小的镜像\",{\"1\":{\"872\":1}}],[\"选用更小的基础镜像\",{\"1\":{\"866\":1}}],[\"选中点击右侧的启动\",{\"1\":{\"1104\":1}}],[\"选中当前行\",{\"1\":{\"965\":1}}],[\"选中一个单词\",{\"1\":{\"965\":1}}],[\"选中一个变量名\",{\"1\":{\"742\":1}}],[\"选中一个collection\",{\"1\":{\"737\":1}}],[\"选中set\",{\"1\":{\"742\":1}}],[\"选中新建的folder\",{\"1\":{\"736\":1}}],[\"选中新建的collection右键\",{\"1\":{\"736\":1}}],[\"选中项目右键添加docker支持\",{\"1\":{\"553\":1}}],[\"选中项目右键属性=>生成=>xml文档文件\",{\"1\":{\"483\":1}}],[\"选图\",{\"1\":{\"300\":1}}],[\"选配色\",{\"1\":{\"300\":1}}],[\"选主题\",{\"1\":{\"300\":1}}],[\"选项卡宽度\",{\"1\":{\"955\":1}}],[\"选项卡以编辑或添加到集合变量\",{\"1\":{\"742\":1}}],[\"选项进行端口映射\",{\"1\":{\"811\":1}}],[\"选项说明\",{\"1\":{\"810\":1}}],[\"选项\",{\"1\":{\"205\":1,\"1079\":1}}],[\"选举流程大致描述如下\",{\"1\":{\"204\":1}}],[\"选择第一个\",{\"1\":{\"1110\":1}}],[\"选择虚拟磁盘的存储位置\",{\"1\":{\"1110\":1}}],[\"选择虚拟机的代数\",{\"1\":{\"1104\":1}}],[\"选择推荐的\",{\"1\":{\"1110\":2}}],[\"选择合适的数量\",{\"1\":{\"1110\":1}}],[\"选择合适的表字段数据类型和存储引擎\",{\"1\":{\"206\":1}}],[\"选择其中一个链接点击下载\",{\"1\":{\"1110\":1}}],[\"选择对应的版本和对应的系统\",{\"1\":{\"1110\":1}}],[\"选择会话类型\",{\"1\":{\"1106\":1}}],[\"选择安装语言\",{\"1\":{\"1104\":1}}],[\"选择安装插件的方式\",{\"1\":{\"889\":1}}],[\"选择程序\",{\"1\":{\"1104\":1}}],[\"选择settings=>secrets=>actions\",{\"1\":{\"1070\":1}}],[\"选择后复制\",{\"1\":{\"1036\":1}}],[\"选择以管理员身份运行→输入\",{\"1\":{\"1024\":1}}],[\"选择unicode\",{\"1\":{\"971\":1}}],[\"选择启动按钮\",{\"1\":{\"961\":1}}],[\"选择我们需要使用的语言\",{\"1\":{\"960\":1}}],[\"选择我们需要使用的东西进行安装\",{\"1\":{\"958\":1}}],[\"选择工作负载\",{\"1\":{\"958\":1}}],[\"选择继续\",{\"1\":{\"957\":1}}],[\"选择项目或解决方案节点\",{\"1\":{\"956\":1}}],[\"选择标准的\",{\"1\":{\"942\":1}}],[\"选择属性\",{\"1\":{\"834\":1}}],[\"选择好合适的路径\",{\"1\":{\"802\":1}}],[\"选择要安装的路径\",{\"1\":{\"802\":1}}],[\"选择\",{\"1\":{\"742\":1,\"956\":3,\"1110\":14}}],[\"选择一个集合\",{\"1\":{\"742\":1}}],[\"选择跳过即可\",{\"1\":{\"722\":1}}],[\"选择body=>form\",{\"1\":{\"618\":1}}],[\"选择post请求\",{\"1\":{\"614\":1}}],[\"选择框架版本为\",{\"1\":{\"585\":1}}],[\"选择物理路径为我们项目文件\",{\"1\":{\"563\":1}}],[\"选择指定虚拟机然后点击右下角设置\",{\"1\":{\"312\":1}}],[\"选择盘符然后直接下一步\",{\"1\":{\"312\":1}}],[\"选择语言然后同意协议点击下一步进入硬盘分区\",{\"1\":{\"312\":1}}],[\"选择主节点成功返回对应\",{\"1\":{\"204\":1}}],[\"选择终结点\",{\"1\":{\"167\":1}}],[\"选择执行者\",{\"1\":{\"6\":1}}],[\"极大的提高了检索效率\",{\"1\":{\"204\":1}}],[\"极端情况下\",{\"1\":{\"134\":1}}],[\"元数据可以认为是\",{\"1\":{\"208\":1}}],[\"元数据是存储在pe\",{\"1\":{\"203\":1}}],[\"元组可以指定为参数或方法的返回类型\",{\"1\":{\"203\":1}}],[\"元组可以容纳多少个元素\",{\"1\":{\"203\":1}}],[\"堆内存\",{\"1\":{\"203\":1}}],[\"堆栈内存\",{\"1\":{\"203\":1}}],[\"使环境变量生效\",{\"1\":{\"1136\":1}}],[\"使以上配置生效\",{\"1\":{\"1107\":1}}],[\"使其转向健康的\",{\"1\":{\"945\":1}}],[\"使其在网络上显示为物理设备\",{\"1\":{\"839\":1}}],[\"使grpc成为多语言开发环境的理想选择\",{\"1\":{\"664\":1}}],[\"使客户端和服务端应用程序可以透明的进行通讯\",{\"1\":{\"662\":1}}],[\"使网络传输减少\",{\"1\":{\"323\":1}}],[\"使浏览器更加高效\",{\"1\":{\"323\":1}}],[\"使\",{\"1\":{\"304\":1,\"585\":1}}],[\"使得a\",{\"1\":{\"436\":1}}],[\"使得在运行时可以获取到被扩展对象的额外的信息\",{\"1\":{\"399\":1}}],[\"使得代码更具有维护性\",{\"1\":{\"344\":1}}],[\"使得驱动程序可以在\",{\"1\":{\"247\":1}}],[\"使得新添加的数据有空间存放\",{\"1\":{\"209\":3}}],[\"使所有连接都首先尝试访问跳板数据库\",{\"1\":{\"203\":1}}],[\"使用语义化版本控制\",{\"1\":{\"1130\":1}}],[\"使用预处理器指令编写条件代码\",{\"1\":{\"1127\":1}}],[\"使用一个范围内的版本\",{\"1\":{\"1126\":1}}],[\"使用一个通用的接口引用新创建的对象\",{\"1\":{\"438\":1}}],[\"使用本地\",{\"1\":{\"1110\":1}}],[\"使用本地缓存必须添加\",{\"1\":{\"710\":1}}],[\"使用网络地址转换\",{\"1\":{\"1110\":1}}],[\"使用默认属性\",{\"1\":{\"1110\":1}}],[\"使用默认的排序\",{\"1\":{\"124\":1,\"125\":1}}],[\"使用自定义的映射了\",{\"1\":{\"1061\":1}}],[\"使用配置\",{\"0\":{\"1039\":1}}],[\"使用密钥存储文件对包进行签名\",{\"1\":{\"1037\":1}}],[\"使用快捷键\",{\"1\":{\"975\":1}}],[\"使用鼠标中键在编辑器窗格中启用滚动\",{\"1\":{\"968\":1}}],[\"使用鼠标拖选\",{\"1\":{\"965\":1}}],[\"使用树型结构视图\",{\"1\":{\"968\":1}}],[\"使用多个光标同时编辑\",{\"1\":{\"965\":1}}],[\"使用vm编辑ifcfg\",{\"1\":{\"1107\":1}}],[\"使用visual\",{\"1\":{\"965\":1}}],[\"使用vs2022打开会看到如下的样式\",{\"1\":{\"689\":1}}],[\"使用命令查看发行版本信息\",{\"1\":{\"1007\":1}}],[\"使用命令行参数\",{\"1\":{\"964\":1}}],[\"使用命令git\",{\"1\":{\"33\":1,\"769\":1}}],[\"使用管理员权限打开命令提示符\",{\"1\":{\"964\":1}}],[\"使用ingress提供集群外部的负载均衡\",{\"1\":{\"914\":1}}],[\"使用dockerfile构建镜像\",{\"1\":{\"1070\":1}}],[\"使用docker部署了gitlab\",{\"1\":{\"3\":1}}],[\"使用deployment来创建replicaset\",{\"1\":{\"914\":1}}],[\"使用kubectl\",{\"1\":{\"914\":1}}],[\"使用最精简的\",{\"0\":{\"869\":1}}],[\"使用阿里云docker仓库\",{\"1\":{\"862\":1}}],[\"使用空格缩进表示层级关系\",{\"1\":{\"850\":1}}],[\"使用环境变量方式改变启动端口\",{\"1\":{\"837\":1}}],[\"使用第三方镜像肯定不是学习docker的最终目的\",{\"1\":{\"817\":1}}],[\"使用yum安装\",{\"1\":{\"797\":1}}],[\"使用工作空间\",{\"1\":{\"720\":1}}],[\"使用工厂通过传递类型等信息来获取具体类的对象\",{\"1\":{\"442\":1}}],[\"使用工厂模式最主要的好处是什么\",{\"1\":{\"202\":1}}],[\"使用node\",{\"1\":{\"716\":1}}],[\"使用中间件注册\",{\"1\":{\"711\":1}}],[\"使用大佬开发的一个谷歌插件使用\",{\"1\":{\"708\":1}}],[\"使用在线工具测试发消息\",{\"1\":{\"698\":1}}],[\"使用科室\",{\"1\":{\"693\":1}}],[\"使用http\",{\"1\":{\"662\":1}}],[\"使用hyper\",{\"1\":{\"312\":1}}],[\"使用长链接技术\",{\"1\":{\"661\":1}}],[\"使用简单且易用性好\",{\"1\":{\"717\":1}}],[\"使用简单\",{\"1\":{\"661\":1}}],[\"使用插件创建\",{\"1\":{\"577\":1}}],[\"使用短信发送消息\",{\"1\":{\"575\":2}}],[\"使用邮箱发送消息成功\",{\"1\":{\"575\":2}}],[\"使用得当的情况下风险小\",{\"1\":{\"570\":1}}],[\"使用编译器打开项目\",{\"1\":{\"539\":1}}],[\"使用方法\",{\"0\":{\"698\":1,\"702\":1,\"706\":1,\"709\":1},\"1\":{\"475\":1}}],[\"使用复杂类型必须具有要绑定的公共默认构造函数和公共可写属性\",{\"1\":{\"470\":1}}],[\"使用复杂段\",{\"1\":{\"161\":1}}],[\"使用日志等级可以很好的过滤想要的日志\",{\"1\":{\"446\":1}}],[\"使用redis\",{\"1\":{\"424\":1}}],[\"使用typefilterattribute注入的actionfilter并不从di容器中查找\",{\"1\":{\"410\":1}}],[\"使用type的getmethods或getmethod方法来调用特定的方法\",{\"1\":{\"87\":1}}],[\"使用type的getconstructors或getconstructor方法来调用特定的构造函数\",{\"1\":{\"87\":1}}],[\"使用该过滤器需要实现iexceptionfilter接口\",{\"1\":{\"404\":1}}],[\"使用该方案应该先看下一步去创建项目\",{\"1\":{\"7\":1}}],[\"使用addagileconfig配置一个新的iconfigurationsource\",{\"1\":{\"661\":1}}],[\"使用action\",{\"1\":{\"403\":1}}],[\"使用assembly定义和加载程序集\",{\"1\":{\"87\":1}}],[\"使用示例\",{\"1\":{\"401\":1,\"1047\":1}}],[\"使用指定的镜像\",{\"1\":{\"380\":1,\"385\":1,\"856\":1}}],[\"使用内部类+静态构造函数实现延迟初始化\",{\"1\":{\"368\":1}}],[\"使用内置文件管理器可以方便地与远程电脑互传文件\",{\"1\":{\"288\":1}}],[\"使用表情的话\",{\"1\":{\"341\":1}}],[\"使用明文进行通信\",{\"1\":{\"323\":1}}],[\"使用代理\",{\"1\":{\"322\":1}}],[\"使用它可以可以让你轻轻松松做出经验高大上的ppt\",{\"1\":{\"300\":1}}],[\"使用了隧道进行通信\",{\"1\":{\"325\":1}}],[\"使用了\",{\"1\":{\"247\":1}}],[\"使用了大佬提供的镜像\",{\"1\":{\"217\":1}}],[\"使用场景是比如在id上标注远程特性\",{\"1\":{\"474\":1}}],[\"使用场景\",{\"0\":{\"240\":1},\"1\":{\"402\":1,\"405\":1,\"676\":1}}],[\"使用前文的\",{\"1\":{\"232\":1}}],[\"使用cancellationchangetoken控制缓存过期\",{\"1\":{\"376\":1}}],[\"使用cmd\",{\"1\":{\"213\":1,\"1119\":1}}],[\"使用constructorinfo了解构造函数的名称\",{\"1\":{\"87\":1}}],[\"使用过\",{\"1\":{\"209\":2}}],[\"使用的协议\",{\"1\":{\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"使用的时候只需要在接口头部增加\",{\"1\":{\"427\":1}}],[\"使用的是\",{\"1\":{\"247\":1,\"941\":1}}],[\"使用的是默认排序\",{\"1\":{\"124\":1}}],[\"使用的内存非常小\",{\"1\":{\"209\":1}}],[\"使用信道的方式来传输数据\",{\"1\":{\"208\":1}}],[\"使用service提供集群内部的负载均衡\",{\"1\":{\"914\":1}}],[\"使用swagger\",{\"0\":{\"482\":1}}],[\"使用scgi\",{\"1\":{\"207\":1}}],[\"使用sortlist\",{\"1\":{\"125\":1}}],[\"使用分组和排序子句进行数据检索时\",{\"1\":{\"206\":1}}],[\"使用浏览统计软件\",{\"1\":{\"206\":1}}],[\"使用不同主机分流\",{\"1\":{\"206\":1}}],[\"使用gridfs可以将大文件分隔成多个小文档存放\",{\"1\":{\"205\":1}}],[\"使用github运行job和jobid设置tag\",{\"1\":{\"1070\":1}}],[\"使用git\",{\"1\":{\"27\":1,\"754\":1}}],[\"使用集群\",{\"1\":{\"205\":1}}],[\"使用批量请求并调整其大小\",{\"1\":{\"204\":1}}],[\"使用哪种方法在\",{\"1\":{\"203\":1}}],[\"使用完的数据库连接将被有选择的保持在数据库连接池中\",{\"1\":{\"203\":1}}],[\"使用反射获取xml文件\",{\"1\":{\"483\":1,\"484\":1}}],[\"使用反射可以实现灵活性较高的工厂模式\",{\"1\":{\"203\":1}}],[\"使用反射能够看到一个程序集内部的接口\",{\"1\":{\"88\":1}}],[\"使用体验\",{\"1\":{\"170\":1,\"171\":1,\"172\":1}}],[\"使用其编写进行应用程序编写\",{\"1\":{\"139\":1}}],[\"使用这种方案的优点在于\",{\"1\":{\"134\":1}}],[\"使用时编译器不会检查\",{\"1\":{\"94\":1}}],[\"使用powershell\",{\"1\":{\"1008\":1}}],[\"使用poershell安装\",{\"1\":{\"1008\":1}}],[\"使用protocol\",{\"1\":{\"662\":1}}],[\"使用propertyinfo了解属性的名称\",{\"1\":{\"87\":1}}],[\"使用parameterinfo了解参数的名称\",{\"1\":{\"87\":1}}],[\"使用eventinfo了解事件的名称\",{\"1\":{\"87\":1}}],[\"使用fiedinfo了解字段的名称\",{\"1\":{\"87\":1}}],[\"使用memorycache首先安装包\",{\"1\":{\"371\":1}}],[\"使用methodinfo了解方法的名称\",{\"1\":{\"87\":1}}],[\"使用module了解包含模块的程序集以及模块中的类等\",{\"1\":{\"87\":1}}],[\"使用\",{\"0\":{\"47\":1,\"398\":1,\"849\":1,\"1017\":1},\"1\":{\"46\":1,\"135\":1,\"153\":1,\"207\":1,\"209\":1,\"241\":1,\"243\":5,\"295\":1,\"371\":1,\"377\":1,\"378\":1,\"447\":1,\"467\":1,\"477\":1,\"577\":3,\"596\":1,\"599\":3,\"664\":1,\"672\":1,\"685\":1,\"786\":1,\"789\":1,\"818\":1,\"869\":1,\"941\":1,\"1037\":1,\"1071\":1,\"1075\":2,\"1078\":1,\"1110\":3}}],[\"使用特性\",{\"1\":{\"41\":1}}],[\"使用如下命令\",{\"1\":{\"32\":1}}],[\"使用如下语句\",{\"1\":{\"26\":1}}],[\"语义化版本\",{\"1\":{\"1130\":1}}],[\"语义化版本控制的工作原理是确保包具有版本号\",{\"1\":{\"1130\":1}}],[\"语义化版本控制是指如何表达你或其他开发人员向库引入的更改类型\",{\"1\":{\"1130\":1}}],[\"语义化版本控制\",{\"0\":{\"1130\":1},\"1\":{\"1130\":1}}],[\"语雀\",{\"1\":{\"1014\":1}}],[\"语文\",{\"1\":{\"518\":2,\"519\":2,\"520\":2}}],[\"语法高亮\",{\"1\":{\"968\":1}}],[\"语法高亮自定义等\",{\"1\":{\"968\":1}}],[\"语法和json的思路很像\",{\"1\":{\"849\":1}}],[\"语法不对就会返回错误信息\",{\"1\":{\"818\":1}}],[\"语法主要有如下几种方式\",{\"1\":{\"815\":1}}],[\"语法如下\",{\"1\":{\"811\":1}}],[\"语法\",{\"1\":{\"207\":1,\"331\":4,\"812\":1,\"850\":3}}],[\"语句\",{\"1\":{\"203\":1,\"1085\":1}}],[\"语言包\",{\"0\":{\"960\":1}}],[\"语言包下的目录结构和mvc对应\",{\"1\":{\"145\":1}}],[\"语言天生就方便用来构建精简镜像\",{\"1\":{\"871\":1}}],[\"语言两种版本\",{\"1\":{\"682\":1}}],[\"语言编写的植物大战僵尸\",{\"1\":{\"243\":1}}],[\"语言配置文件\",{\"0\":{\"145\":1}}],[\"避免一直输出\",{\"1\":{\"1111\":1}}],[\"避免地址冲突\",{\"1\":{\"928\":1}}],[\"避免没有网络不能下载镜像的场景\",{\"1\":{\"810\":1}}],[\"避免误删没有合并的分支\",{\"1\":{\"773\":1}}],[\"避免在configureservice中调用buildserviceprovider\",{\"1\":{\"354\":1}}],[\"避免集群跨越大的地理距离\",{\"1\":{\"204\":1}}],[\"避免返回大量结果集的搜索与聚合\",{\"1\":{\"204\":1}}],[\"避免采用clear\",{\"1\":{\"204\":1}}],[\"避免脑裂问题\",{\"1\":{\"204\":1}}],[\"避免直接使用用户输入拼接\",{\"1\":{\"203\":1}}],[\"避免产生dind\",{\"1\":{\"4\":1}}],[\"链式委托是指一个由委托串成的链表\",{\"1\":{\"203\":1}}],[\"链接路径类似\",{\"1\":{\"1074\":1}}],[\"链接\",{\"1\":{\"168\":1,\"1110\":1}}],[\"每种身份的权限数字需要\",{\"1\":{\"1084\":1}}],[\"每种身份\",{\"1\":{\"1084\":1}}],[\"每种技术都有一个真实的轶事\",{\"1\":{\"530\":1}}],[\"每条指令都会创建一个新的镜像层\",{\"1\":{\"818\":1}}],[\"每条消息只会分发给一个订阅的消费者\",{\"1\":{\"208\":1}}],[\"每请求一次接口参数值都会发送变化\",{\"1\":{\"744\":1}}],[\"每当新增接口子类\",{\"1\":{\"442\":1}}],[\"每修改一个文件都必须放置版权声明\",{\"1\":{\"251\":1}}],[\"每秒递减\",{\"1\":{\"243\":1}}],[\"每一组为\",{\"1\":{\"1081\":1}}],[\"每一条指令都会创建一个镜像层\",{\"1\":{\"863\":1}}],[\"每一层都是前一层变化的增量\",{\"1\":{\"818\":1}}],[\"每一次获取的对象都不是同一个\",{\"1\":{\"347\":1}}],[\"每一个人的电脑上都是一个完整的版本库\",{\"1\":{\"798\":1}}],[\"每一个文件的修改删除git都可以进行跟踪\",{\"1\":{\"752\":1}}],[\"每一个日志都有指定的日志级别值\",{\"1\":{\"446\":1}}],[\"每一个科室都是一个独立的微服务\",{\"1\":{\"210\":1}}],[\"每一个分片\",{\"1\":{\"205\":1}}],[\"每一批\",{\"1\":{\"208\":1}}],[\"每进来一个request\",{\"1\":{\"207\":1}}],[\"每天\",{\"1\":{\"696\":1}}],[\"每天递增数据\",{\"1\":{\"204\":1}}],[\"每天进步一点点\",{\"1\":{\"0\":1}}],[\"每个虚拟机都有一个\",{\"1\":{\"1110\":1}}],[\"每个处理器的内核数量\",{\"1\":{\"1110\":1}}],[\"每个处理器的内核数量选择\",{\"1\":{\"1110\":1}}],[\"每个节点上的\",{\"1\":{\"944\":1}}],[\"每个节点都会有\",{\"1\":{\"209\":1}}],[\"每个新\",{\"1\":{\"944\":1}}],[\"每个应用都应该指定唯一的包标识符和版本\",{\"1\":{\"1037\":1}}],[\"每个应用服务都需要对网络进行监控\",{\"1\":{\"936\":1}}],[\"每个应用可以设置是否可以被继承\",{\"1\":{\"661\":1}}],[\"每个污点的组成\",{\"1\":{\"914\":1}}],[\"每个node节点上至少需要运行container\",{\"1\":{\"914\":1}}],[\"每个stage代表一组操作\",{\"1\":{\"879\":1}}],[\"每个镜像都有对应的dockerfile\",{\"1\":{\"838\":1}}],[\"每个容器都是相互隔离\",{\"1\":{\"811\":1}}],[\"每个环境下又可以有多个变量\",{\"1\":{\"740\":1}}],[\"每个模块下有很多的被测接口用例\",{\"1\":{\"736\":1}}],[\"每个服务都围绕具体业务进行构建\",{\"1\":{\"210\":1}}],[\"每个服务运行在其独立的自己的进程中服务之间相互配合\",{\"1\":{\"210\":1}}],[\"每个机器启动一个\",{\"1\":{\"208\":1}}],[\"每个\",{\"1\":{\"208\":2,\"209\":1,\"935\":2,\"941\":2,\"943\":1,\"944\":1}}],[\"每个工作进程可以处理多个请求\",{\"1\":{\"207\":1}}],[\"每个索引也需要占用物理空间\",{\"1\":{\"206\":1}}],[\"每个索引根据数据量分片\",{\"1\":{\"204\":1}}],[\"每个默认块的大小是\",{\"1\":{\"205\":1}}],[\"每个分片加载并\",{\"1\":{\"204\":1}}],[\"每个分片返回各自优先队列中\",{\"1\":{\"204\":1}}],[\"每个分片在本地执行搜索并构建一个匹配文档的大小为\",{\"1\":{\"204\":1}}],[\"每个委托对象至少包含了一个指向某个方法的指针\",{\"1\":{\"203\":1}}],[\"每次build都会生成一个新的包\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"每次生成一个新的镜像层\",{\"1\":{\"818\":1}}],[\"每次批量数据\",{\"1\":{\"204\":1}}],[\"每次选举每个节点都把自己所知道节点排一次序\",{\"1\":{\"204\":1}}],[\"每次请求\",{\"1\":{\"203\":2}}],[\"每次都获取同一个实例\",{\"1\":{\"203\":2}}],[\"每次都获取一个新的实例\",{\"1\":{\"203\":1}}],[\"像\",{\"1\":{\"1096\":1}}],[\"像共享方式\",{\"1\":{\"914\":1}}],[\"像我这种轻度自己使用的\",{\"1\":{\"697\":1}}],[\"像素\",{\"1\":{\"254\":1}}],[\"像ubuntu那样\",{\"1\":{\"253\":1}}],[\"像集群模式\",{\"1\":{\"208\":1}}],[\"像httpclientfactory\",{\"1\":{\"202\":1}}],[\"像一些挂载的需要自行处理\",{\"1\":{\"35\":1}}],[\"责任人\",{\"1\":{\"693\":1}}],[\"责任链模式\",{\"1\":{\"202\":1}}],[\"责任心强\",{\"1\":{\"179\":1}}],[\"池都是很好的使用了享元模式的例子\",{\"1\":{\"202\":1}}],[\"池以及\",{\"1\":{\"202\":1}}],[\"池\",{\"1\":{\"202\":1}}],[\"享元模式通过共享对象来避免创建太多的对象\",{\"1\":{\"202\":1}}],[\"若来源为软链接文件\",{\"1\":{\"1079\":1}}],[\"若目标已经存在时\",{\"1\":{\"1079\":1}}],[\"若没有配置nodeport\",{\"1\":{\"923\":1}}],[\"若没有终结点\",{\"1\":{\"168\":1}}],[\"若你理解了\",{\"1\":{\"776\":1}}],[\"若团队使用\",{\"1\":{\"722\":1}}],[\"若个人使用\",{\"1\":{\"722\":1}}],[\"若要使用命令行\",{\"1\":{\"1037\":1}}],[\"若要开始下载\",{\"1\":{\"1012\":1}}],[\"若要读取在应用启动后的更改\",{\"1\":{\"398\":1}}],[\"若要扩展功能\",{\"1\":{\"202\":1}}],[\"若想达到\",{\"1\":{\"208\":1}}],[\"若\",{\"1\":{\"208\":2,\"1079\":1}}],[\"若是就直接扔了\",{\"1\":{\"208\":1}}],[\"若该队列至少有一个消费者订阅\",{\"1\":{\"208\":1}}],[\"适用于\",{\"1\":{\"965\":1}}],[\"适用于所有编程语言\",{\"1\":{\"849\":1}}],[\"适用于数据量小的系统\",{\"1\":{\"133\":1}}],[\"适当的添加索引\",{\"1\":{\"206\":1}}],[\"适当使用加密数据进行存储\",{\"1\":{\"203\":1}}],[\"适合于轻量级\",{\"1\":{\"347\":1}}],[\"适合大数据\",{\"1\":{\"206\":1}}],[\"适合小数据\",{\"1\":{\"206\":1}}],[\"适合用于频繁查询的应用\",{\"1\":{\"206\":1}}],[\"适配器已提高性能\",{\"1\":{\"1110\":1}}],[\"适配器让原本接口不兼容的类可以合作无间\",{\"1\":{\"202\":1}}],[\"适配器模式和代理模式的区别在于他们的意图不同\",{\"1\":{\"202\":1}}],[\"适配器模式和代理模式之间有什么不同\",{\"1\":{\"202\":1}}],[\"适配器模式将某个类的接口转换成客户端期望的另一个接口表示\",{\"1\":{\"202\":1}}],[\"适配器模式有三种\",{\"1\":{\"202\":1}}],[\"适配器模式被用于桥接两个接口\",{\"1\":{\"202\":1}}],[\"适配器模式与装饰器模式有什么区别\",{\"1\":{\"202\":1}}],[\"适配器模式提供对接口的转换\",{\"1\":{\"202\":1}}],[\"适配器模式\",{\"1\":{\"202\":2}}],[\"适配器模式是什么\",{\"1\":{\"202\":1}}],[\"系列https\",{\"1\":{\"875\":1}}],[\"系列类如\",{\"1\":{\"202\":1}}],[\"系统命令\",{\"0\":{\"1115\":1}}],[\"系统名称和版本\",{\"1\":{\"1110\":1}}],[\"系统安装时\",{\"1\":{\"1110\":1}}],[\"系统安装完成\",{\"1\":{\"1110\":1}}],[\"系统安装在虚拟磁盘中\",{\"1\":{\"1110\":1}}],[\"系统的起点\",{\"1\":{\"1110\":1}}],[\"系统中的盘符\",{\"1\":{\"1110\":1}}],[\"系统中硬盘被分成了\",{\"1\":{\"1110\":1}}],[\"系统中有一个用户对象\",{\"1\":{\"209\":1}}],[\"系统了\",{\"1\":{\"1110\":1}}],[\"系统选择\",{\"1\":{\"1110\":1}}],[\"系统最小安装包\",{\"1\":{\"1110\":1}}],[\"系统对不同的用户访问同一文件\",{\"1\":{\"1080\":1}}],[\"系统镜像安装系统\",{\"1\":{\"1110\":1}}],[\"系统镜像下载完成后\",{\"1\":{\"1110\":1}}],[\"系统镜像\",{\"0\":{\"1033\":1},\"1\":{\"1110\":1}}],[\"系统镜像一般有\",{\"1\":{\"866\":1}}],[\"系统包含一个完整的路由功能\",{\"1\":{\"916\":1}}],[\"系统程序\",{\"1\":{\"914\":1}}],[\"系统监控\",{\"1\":{\"914\":1}}],[\"系统界面\",{\"0\":{\"891\":1}}],[\"系统会自动去拉取\",{\"1\":{\"862\":1}}],[\"系统内核版本3\",{\"1\":{\"862\":1}}],[\"系统为例进行安装\",{\"1\":{\"721\":1}}],[\"系统相关数据限制\",{\"0\":{\"700\":1}}],[\"系统提示\",{\"1\":{\"691\":3}}],[\"系统下有多个模块\",{\"1\":{\"736\":1}}],[\"系统下的一个进程管理工具\",{\"1\":{\"544\":1}}],[\"系统下载地址\",{\"1\":{\"1114\":1}}],[\"系统下载\",{\"0\":{\"269\":1}}],[\"系统使用centos\",{\"1\":{\"537\":1}}],[\"系统异常\",{\"1\":{\"413\":1}}],[\"系统信息\",{\"1\":{\"319\":1}}],[\"系统主界面\",{\"0\":{\"313\":1}}],[\"系统激活\",{\"0\":{\"261\":1}}],[\"系统都是基于\",{\"1\":{\"247\":1}}],[\"系统\",{\"1\":{\"247\":1,\"544\":1,\"1110\":2}}],[\"系统依赖增强\",{\"1\":{\"210\":1}}],[\"系统写库失败了\",{\"1\":{\"208\":1}}],[\"系统处理完了直接返回成功了\",{\"1\":{\"208\":1}}],[\"系统复杂度提高\",{\"1\":{\"208\":1}}],[\"系统可用性会降低\",{\"1\":{\"208\":1}}],[\"系统可用性降低\",{\"1\":{\"208\":1}}],[\"系统配置的优化\",{\"1\":{\"206\":1}}],[\"系数\",{\"1\":{\"199\":1}}],[\"举一个例子来看如何配置\",{\"1\":{\"923\":1}}],[\"举一个用\",{\"1\":{\"202\":1}}],[\"举个例\",{\"1\":{\"843\":1}}],[\"举例来说\",{\"1\":{\"863\":1}}],[\"举例\",{\"1\":{\"134\":1,\"1121\":1}}],[\"任意形状\",{\"1\":{\"1025\":1}}],[\"任何形式的转载都请注明出处\",{\"1\":{\"1123\":1}}],[\"任何人也无法发现这些文件夹\",{\"1\":{\"265\":1}}],[\"任何请求中都可以使用这个变量\",{\"1\":{\"740\":1}}],[\"任何请求\",{\"1\":{\"134\":1}}],[\"任务管理器\",{\"1\":{\"202\":1}}],[\"答\",{\"1\":{\"202\":9,\"203\":27,\"204\":10,\"205\":13,\"206\":13,\"207\":10,\"208\":12,\"209\":14,\"210\":14}}],[\"答案是肯定的\",{\"1\":{\"863\":1}}],[\"答案是否定的\",{\"1\":{\"134\":1}}],[\"答案是\",{\"1\":{\"134\":2,\"863\":1}}],[\"设备类型为\",{\"1\":{\"1110\":2}}],[\"设备类型为标准分区\",{\"1\":{\"1110\":4}}],[\"设备结合使用效果更好\",{\"1\":{\"1110\":1}}],[\"设备对\",{\"1\":{\"916\":1}}],[\"设备标牌\",{\"1\":{\"693\":1}}],[\"设备名称\",{\"1\":{\"693\":1}}],[\"设为\",{\"1\":{\"447\":1}}],[\"设计目的就是为了数据的持久化和共享\",{\"1\":{\"814\":1}}],[\"设计就是这么美丽\",{\"1\":{\"784\":1}}],[\"设计排版\",{\"1\":{\"300\":1}}],[\"设计微服务的最佳实践是什么\",{\"1\":{\"210\":1}}],[\"设计良好的数据库结构\",{\"1\":{\"206\":1}}],[\"设计合理的话是行锁\",{\"1\":{\"206\":1}}],[\"设计模式面试题\",{\"0\":{\"202\":1}}],[\"设置多个目标版本\",{\"0\":{\"1126\":1}}],[\"设置多少才合理\",{\"1\":{\"134\":1}}],[\"设置当前虚拟机的\",{\"1\":{\"1110\":1}}],[\"设置网关\",{\"1\":{\"1110\":1}}],[\"设置密码\",{\"1\":{\"1110\":1}}],[\"设置一个密码\",{\"1\":{\"1110\":1}}],[\"设置一个很大的值\",{\"1\":{\"204\":1}}],[\"设置主机名\",{\"1\":{\"1110\":1}}],[\"设置系统安装方式\",{\"1\":{\"1110\":1}}],[\"设置系统镜像\",{\"1\":{\"1110\":1}}],[\"设置安装源\",{\"1\":{\"1110\":1}}],[\"设置中一\",{\"1\":{\"1110\":1}}],[\"设置中一致\",{\"1\":{\"1110\":1}}],[\"设置中英文切换的快捷键\",{\"1\":{\"1110\":1}}],[\"设置中文\",{\"1\":{\"321\":1}}],[\"设置键盘布局\",{\"1\":{\"1110\":1}}],[\"设置语言\",{\"1\":{\"1110\":1}}],[\"设置完系统镜像\",{\"1\":{\"1110\":1}}],[\"设置虚拟机静态\",{\"1\":{\"1110\":1}}],[\"设置虚拟机网络记得先关闭系统\",{\"1\":{\"1110\":1}}],[\"设置虚拟机磁盘容量\",{\"1\":{\"1110\":1}}],[\"设置虚拟机内存为\",{\"1\":{\"1110\":1}}],[\"设置虚拟机内存大小为\",{\"1\":{\"1110\":1}}],[\"设置开机自启\",{\"1\":{\"1107\":1}}],[\"设置开机启动\",{\"1\":{\"549\":1}}],[\"设置静态ip\",{\"0\":{\"1107\":1},\"1\":{\"1107\":1}}],[\"设置静默打印\",{\"1\":{\"690\":1}}],[\"设置root密码\",{\"1\":{\"1104\":1}}],[\"设置redis登陆密码\",{\"1\":{\"856\":1}}],[\"设置redis登录密码\",{\"1\":{\"380\":1,\"385\":1}}],[\"设置文件权限\",{\"1\":{\"1075\":1}}],[\"设置好就可以正常使用\",{\"1\":{\"1007\":1}}],[\"设置私有成员变量以下划线开头\",{\"1\":{\"973\":1}}],[\"设置命名规范\",{\"0\":{\"973\":1}}],[\"设置书签\",{\"1\":{\"965\":1}}],[\"设置优先于全局\",{\"1\":{\"955\":1}}],[\"设置方案可以参考文档\",{\"1\":{\"953\":1}}],[\"设置容器命令行参数以及在volume中直接挂载文件或目录\",{\"1\":{\"914\":1}}],[\"设置最小\",{\"1\":{\"914\":1}}],[\"设置每次构建的时候删除之前的文件\",{\"1\":{\"898\":1}}],[\"设置描述和丢弃规则\",{\"1\":{\"895\":1}}],[\"设置管理员用户密码\",{\"0\":{\"890\":1}}],[\"设置存储库\",{\"1\":{\"862\":1}}],[\"设置端口\",{\"1\":{\"853\":1}}],[\"设置名称\",{\"1\":{\"853\":1}}],[\"设置名字和工号不能一致\",{\"1\":{\"475\":1}}],[\"设置环境变量\",{\"0\":{\"1136\":1},\"1\":{\"852\":1,\"865\":1,\"914\":1}}],[\"设置dockerfile\",{\"0\":{\"837\":1}}],[\"设置dockerfile的文件属性为始终复制\",{\"1\":{\"806\":1}}],[\"设置docker自启动\",{\"1\":{\"3\":1}}],[\"设置用户名\",{\"1\":{\"798\":1}}],[\"设置数据库和管理员帐号密码\",{\"1\":{\"796\":1}}],[\"设置成全局不灵活\",{\"1\":{\"775\":1}}],[\"设置成auto\",{\"1\":{\"17\":1}}],[\"设置变量\",{\"1\":{\"740\":1}}],[\"设置消息通道\",{\"1\":{\"698\":1}}],[\"设置结束\",{\"1\":{\"692\":1}}],[\"设置默认打印机\",{\"1\":{\"691\":1}}],[\"设置图片质量\",{\"1\":{\"684\":1}}],[\"设置独立版本\",{\"1\":{\"636\":1}}],[\"设置是否允许打包单元测试项目\",{\"1\":{\"585\":1}}],[\"设置进程的umask\",{\"1\":{\"564\":1}}],[\"设置elasticsearch\",{\"1\":{\"564\":1}}],[\"设置es\",{\"1\":{\"564\":1}}],[\"设置为\",{\"1\":{\"1037\":1}}],[\"设置为随\",{\"1\":{\"564\":3}}],[\"设置为false\",{\"1\":{\"564\":1}}],[\"设置为长期\",{\"1\":{\"209\":1}}],[\"设置项目启动时候调用\",{\"1\":{\"501\":1}}],[\"设置不受版本控制\",{\"0\":{\"490\":1,\"641\":1,\"647\":1,\"653\":1}}],[\"设置不同的过期时间\",{\"1\":{\"209\":1}}],[\"设置版本号\",{\"1\":{\"636\":1}}],[\"设置版本\",{\"0\":{\"487\":1}}],[\"设置自定义序列化\",{\"1\":{\"478\":1}}],[\"设置可以多次读取\",{\"1\":{\"421\":1}}],[\"设置响应头\",{\"1\":{\"405\":1}}],[\"设置客户端缓存\",{\"1\":{\"405\":1}}],[\"设置缓存静态文件的时间\",{\"1\":{\"580\":1}}],[\"设置缓存\",{\"1\":{\"376\":1}}],[\"设置在浏览器不能通过js获得该cookie的值\",{\"1\":{\"369\":1}}],[\"设置session的过期时间\",{\"1\":{\"369\":1}}],[\"设置shell\",{\"1\":{\"3\":1}}],[\"设置的虚拟机内存是受主机内存限制的\",{\"1\":{\"1110\":1}}],[\"设置的断点就会丢失\",{\"1\":{\"978\":1}}],[\"设置的对象\",{\"1\":{\"956\":1}}],[\"设置的时钟偏移量\",{\"1\":{\"364\":1}}],[\"设置的值\",{\"1\":{\"204\":1}}],[\"设置tcp隧道也很容易\",{\"1\":{\"288\":1}}],[\"设置任意地方鼠标右键启动cmder\",{\"1\":{\"278\":1}}],[\"设置了污点的node将根据taint的effect\",{\"1\":{\"914\":1}}],[\"设置了\",{\"1\":{\"208\":2}}],[\"设置\",{\"0\":{\"319\":1},\"1\":{\"204\":1,\"798\":1,\"965\":1,\"1110\":1}}],[\"设置堆内存\",{\"1\":{\"204\":1}}],[\"设置发音排序\",{\"1\":{\"124\":1}}],[\"设置笔画数排序\",{\"1\":{\"124\":1}}],[\"设置区域zh\",{\"1\":{\"124\":1}}],[\"设置值\",{\"1\":{\"115\":1,\"629\":1}}],[\"设置属性值\",{\"1\":{\"112\":1}}],[\"设置对象属性\",{\"1\":{\"111\":1}}],[\"设置泛型类\",{\"1\":{\"97\":1}}],[\"设置=>ci\",{\"1\":{\"7\":1}}],[\"设置时区\",{\"1\":{\"3\":1,\"1110\":1}}],[\"设置yum源\",{\"1\":{\"3\":1}}],[\"微软便签\",{\"1\":{\"1014\":1}}],[\"微软todo\",{\"1\":{\"1014\":1}}],[\"微软移除了newtonsoft\",{\"1\":{\"600\":1}}],[\"微软给netcore的分布式缓存提供了redis和sqlserver的实现\",{\"1\":{\"384\":1}}],[\"微软给netcore的缓存提供了redis和sqlserver的实现\",{\"1\":{\"379\":1}}],[\"微软learn\",{\"1\":{\"138\":1}}],[\"微pe无明显捆绑和流氓行为\",{\"1\":{\"267\":1}}],[\"微pe前身叫做通用pe工具箱\",{\"1\":{\"267\":1}}],[\"微pe\",{\"0\":{\"267\":1}}],[\"微信支付\",{\"1\":{\"710\":1}}],[\"微信推送服务\",{\"1\":{\"699\":1}}],[\"微信可能会在2021年4月底下线该接口\",{\"1\":{\"697\":1}}],[\"微信服务号和测试号\",{\"1\":{\"697\":1}}],[\"微信\",{\"1\":{\"696\":1,\"705\":1,\"1014\":1}}],[\"微信扫码登入\",{\"1\":{\"696\":1,\"698\":1}}],[\"微信开发\",{\"1\":{\"240\":1}}],[\"微信公众号认证费\",{\"1\":{\"704\":1}}],[\"微信公众号\",{\"1\":{\"201\":1,\"681\":1}}],[\"微服务\",{\"1\":{\"210\":1}}],[\"微服务条目\",{\"1\":{\"210\":1}}],[\"微服务只专注于当前业务逻辑代码\",{\"1\":{\"210\":1}}],[\"微服务一个功能受损\",{\"1\":{\"210\":1}}],[\"微服务的优缺点是什么\",{\"1\":{\"210\":1}}],[\"微服务之间如何独立通讯的\",{\"1\":{\"210\":1}}],[\"微服务强调的是服务大小\",{\"1\":{\"210\":1}}],[\"微服务就是一个独立的职责单一的服务应用程序\",{\"1\":{\"210\":1}}],[\"微服务架构是一种架构风格\",{\"1\":{\"210\":1}}],[\"微服务架构是一种架构模式或者说是架构风格\",{\"1\":{\"210\":1}}],[\"微服务架构主要就是这种功能\",{\"1\":{\"210\":1}}],[\"微服务架构\",{\"1\":{\"210\":2}}],[\"微服务架构系统是一个分布式的系统\",{\"1\":{\"210\":1}}],[\"微服务讲究的是\",{\"1\":{\"210\":1}}],[\"微服务面试题\",{\"0\":{\"210\":1}}],[\"拖太久\",{\"1\":{\"201\":1}}],[\"招人按照架构师的标准来\",{\"1\":{\"201\":1}}],[\"招到一个理想的员工不容易\",{\"1\":{\"198\":1}}],[\"趟公司\",{\"1\":{\"201\":1}}],[\"轮面试要去\",{\"1\":{\"201\":1}}],[\"轮面试\",{\"1\":{\"201\":1}}],[\"轮询间隔\",{\"1\":{\"153\":1}}],[\"恨不得\",{\"1\":{\"201\":1}}],[\"恨不得直接让你现场操作了\",{\"1\":{\"192\":1}}],[\"碾压别人的快感那么爽吗\",{\"1\":{\"201\":1}}],[\"借鉴于\",{\"1\":{\"500\":1,\"656\":1}}],[\"借助cloud\",{\"1\":{\"914\":1}}],[\"借助\",{\"1\":{\"914\":1}}],[\"借助公网服务器暴露局域网服务\",{\"1\":{\"242\":1}}],[\"借助分散仓库的优势\",{\"1\":{\"27\":1}}],[\"借机打压对方\",{\"1\":{\"201\":1}}],[\"穷追猛打\",{\"1\":{\"201\":1}}],[\"吐槽一下面试官和公司\",{\"1\":{\"201\":1}}],[\"吐字清晰\",{\"1\":{\"185\":1}}],[\"朋友算账\",{\"1\":{\"201\":1}}],[\"祝你们以后薪酬越来越高\",{\"1\":{\"201\":1}}],[\"打个比方\",{\"1\":{\"871\":1}}],[\"打标签\",{\"1\":{\"837\":1}}],[\"打好的基石\",{\"1\":{\"820\":1}}],[\"打包命令为\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"打包成镜像\",{\"1\":{\"871\":1}}],[\"打包成安装程序后\",{\"1\":{\"689\":1}}],[\"打包好的镜像里包含了完整的运行环境\",{\"1\":{\"806\":1}}],[\"打包镜像等操作都是一次性的\",{\"1\":{\"806\":1}}],[\"打包为镜像\",{\"1\":{\"806\":1}}],[\"打不开vdproj项目解决办法\",{\"1\":{\"689\":1}}],[\"打印一些跟踪信息\",{\"1\":{\"980\":1}}],[\"打印共享的依赖库\",{\"1\":{\"870\":1}}],[\"打印相关日志信息\",{\"1\":{\"852\":1}}],[\"打印客户端安装路径\",{\"1\":{\"692\":1}}],[\"打印日志toolstripmenuitem\",{\"1\":{\"691\":1}}],[\"打印日志功能\",{\"1\":{\"690\":1}}],[\"打印设置toolstripmenuitem\",{\"1\":{\"691\":1}}],[\"打印设置名称\",{\"1\":{\"691\":1}}],[\"打印数据实体\",{\"1\":{\"691\":1}}],[\"打印数据源\",{\"1\":{\"691\":1}}],[\"打印数据\",{\"1\":{\"691\":1}}],[\"打印数据请求接口来源\",{\"1\":{\"691\":1}}],[\"打印机名称\",{\"1\":{\"691\":1}}],[\"打印机直接开始工作打印文件\",{\"1\":{\"689\":1}}],[\"打印方法\",{\"1\":{\"691\":1}}],[\"打印控件封装源码解决方案\",{\"1\":{\"689\":1}}],[\"打印功能\",{\"1\":{\"689\":2}}],[\"打印功能这篇文章被很多网站转\",{\"1\":{\"689\":1}}],[\"打通了serilog和configuration\",{\"1\":{\"457\":1}}],[\"打造你得心应手的工具集合\",{\"1\":{\"290\":1}}],[\"打开文件\",{\"1\":{\"1136\":1}}],[\"打开需要实现自动升级包版本的项目的csproj文件\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"打开iptables\",{\"1\":{\"1109\":1}}],[\"打开iis添加网站\",{\"1\":{\"563\":1}}],[\"打开movaxterm工具\",{\"1\":{\"1106\":1}}],[\"打开hyper\",{\"1\":{\"1104\":1}}],[\"打开htper\",{\"1\":{\"312\":1}}],[\"打开终端程序并导航到项目文件夹\",{\"1\":{\"1037\":1}}],[\"打开网页太多一下子收起\",{\"1\":{\"991\":1}}],[\"打开网页端查看\",{\"1\":{\"213\":1,\"1119\":1}}],[\"打开指定的文件\",{\"1\":{\"965\":1}}],[\"打开属性面板\",{\"1\":{\"965\":1}}],[\"打开picgo搜索插件gitee进行安装\",{\"1\":{\"952\":1}}],[\"打开postman\",{\"1\":{\"724\":1,\"730\":1,\"733\":1,\"734\":2}}],[\"打开任务管理器\",{\"1\":{\"876\":1}}],[\"打开命令行输入命令\",{\"1\":{\"876\":1}}],[\"打开控制面板\",{\"1\":{\"876\":1}}],[\"打开\",{\"1\":{\"775\":1,\"893\":1,\"1110\":1}}],[\"打开查看更多动作\",{\"1\":{\"742\":1}}],[\"打开的日志界面\",{\"1\":{\"738\":1}}],[\"打开上面我们创建好的仓库\",{\"1\":{\"21\":1}}],[\"打听的消息够多够准吗\",{\"1\":{\"201\":1}}],[\"私下打听工资\",{\"1\":{\"201\":1}}],[\"私有代理相比公共代理\",{\"1\":{\"322\":1}}],[\"私有代理是一个专用的\",{\"1\":{\"322\":1}}],[\"私有代理和公共代理\",{\"1\":{\"322\":1}}],[\"私有\",{\"1\":{\"103\":1}}],[\"私有方法\",{\"1\":{\"98\":1}}],[\"私有字段\",{\"1\":{\"98\":1}}],[\"私有构造函数\",{\"1\":{\"98\":1}}],[\"私有密钥\",{\"1\":{\"19\":1}}],[\"觉得自己的工资偏低\",{\"1\":{\"201\":1}}],[\"觉得自己会的太少\",{\"1\":{\"183\":1}}],[\"理解为前端和后端两部分\",{\"1\":{\"938\":1}}],[\"理解为是http1\",{\"1\":{\"326\":1}}],[\"理解\",{\"0\":{\"779\":1,\"781\":1},\"1\":{\"778\":2}}],[\"理解这些差异将有助于避免使用中的困惑\",{\"1\":{\"776\":1}}],[\"理\",{\"1\":{\"401\":1}}],[\"理由是打听了一下公司同事的工资\",{\"1\":{\"201\":1}}],[\"理论自然就清晰了\",{\"1\":{\"806\":1}}],[\"理论先说那么多\",{\"1\":{\"806\":1}}],[\"理论\",{\"1\":{\"134\":1}}],[\"谈好之后又涨价\",{\"1\":{\"201\":1}}],[\"谈好之后\",{\"0\":{\"201\":1}}],[\"谈薪酬之前\",{\"1\":{\"196\":2}}],[\"奖金等等都是一样\",{\"1\":{\"200\":1}}],[\"期权\",{\"1\":{\"200\":1}}],[\"股票\",{\"1\":{\"200\":1}}],[\"绩效谈少点\",{\"1\":{\"199\":1}}],[\"真的看不到了吗\",{\"1\":{\"786\":1}}],[\"真的会一脸懵逼\",{\"1\":{\"483\":1}}],[\"真实文件或目录不会被删除\",{\"1\":{\"1078\":1}}],[\"真实的文件存储等\",{\"1\":{\"595\":1}}],[\"真实姓名\",{\"1\":{\"368\":1}}],[\"真是其乐无穷\",{\"1\":{\"243\":1}}],[\"真是\",{\"1\":{\"201\":1}}],[\"真是个好问题\",{\"1\":{\"191\":1}}],[\"真正的月薪是\",{\"1\":{\"199\":1}}],[\"面向连接\",{\"1\":{\"327\":1}}],[\"面向文件的\",{\"1\":{\"205\":1}}],[\"面对压价不坚持一下\",{\"1\":{\"198\":1}}],[\"面对压价\",{\"1\":{\"198\":1}}],[\"面试造火箭\",{\"1\":{\"201\":1}}],[\"面试一刻钟\",{\"1\":{\"201\":1}}],[\"面试结果还八字没一撇的时候\",{\"1\":{\"195\":1}}],[\"面试时\",{\"1\":{\"194\":1}}],[\"面试刚开始还算正常\",{\"1\":{\"193\":1}}],[\"面试过程中就问一个问题\",{\"1\":{\"192\":1}}],[\"面试的时候就问他们怎么恢复我们的数据库\",{\"1\":{\"192\":1}}],[\"面试是为了从你口中套取机密\",{\"0\":{\"193\":1}}],[\"面试是骗你帮他们解决问题\",{\"0\":{\"192\":1}}],[\"面试是双向选择\",{\"1\":{\"191\":1,\"201\":1}}],[\"面试中遇到没听过的名词\",{\"1\":{\"186\":1}}],[\"面试前几分钟的好印象非常重要\",{\"1\":{\"185\":1}}],[\"面试这么重要的事情你都迟到\",{\"1\":{\"184\":1}}],[\"面试官也代表了公司的形象\",{\"1\":{\"201\":1}}],[\"面试官不要太傲慢\",{\"1\":{\"201\":1}}],[\"面试官不尊重人\",{\"1\":{\"201\":1}}],[\"面试官不守时\",{\"1\":{\"201\":1}}],[\"面试官过于强势\",{\"1\":{\"201\":1}}],[\"面试官没法给你评理\",{\"1\":{\"187\":1}}],[\"面试官怎么相信你能管理好时间\",{\"1\":{\"184\":1}}],[\"面试官就是用户\",{\"1\":{\"183\":1}}],[\"面试官会看不到重点\",{\"1\":{\"181\":1}}],[\"完整网页截图\",{\"0\":{\"995\":1}}],[\"完整打包了一系列丰富的工具和功能\",{\"1\":{\"965\":1}}],[\"完整的dotnet\",{\"1\":{\"1070\":1}}],[\"完整的解决方案源码你可以在github上找到\",{\"1\":{\"693\":1}}],[\"完整的代码你可以在github上找到\",{\"1\":{\"693\":1}}],[\"完整的安装程序类的源码如下\",{\"1\":{\"692\":1}}],[\"完整的源码如下\",{\"1\":{\"691\":1}}],[\"完整代码如下\",{\"1\":{\"591\":2}}],[\"完整项目结构如下\",{\"1\":{\"575\":1}}],[\"完整结构如下\",{\"1\":{\"574\":1,\"575\":1}}],[\"完结\",{\"1\":{\"500\":1}}],[\"完全可以跳过\",{\"1\":{\"934\":1}}],[\"完全具备和桌面软件一样的功能\",{\"1\":{\"691\":1}}],[\"完全是根据你选择的参照物来说明的\",{\"1\":{\"322\":1}}],[\"完全不在意搜索\",{\"1\":{\"204\":1}}],[\"完美\",{\"1\":{\"197\":1}}],[\"完成界面\",{\"1\":{\"802\":1}}],[\"完成了web客户端程序的编写和打包程序的设置\",{\"1\":{\"692\":1}}],[\"完成\",{\"1\":{\"134\":1,\"1110\":9}}],[\"压价时候有一个惯用手段\",{\"1\":{\"200\":1}}],[\"压价的成就感\",{\"1\":{\"197\":1}}],[\"压缩\",{\"1\":{\"872\":1}}],[\"压缩率50\",{\"1\":{\"872\":1}}],[\"压缩操作\",{\"1\":{\"868\":1}}],[\"压缩你的镜像\",{\"0\":{\"868\":1}}],[\"压缩20\",{\"1\":{\"373\":1}}],[\"压缩了存储空间\",{\"1\":{\"204\":1}}],[\"压缩成一个历史记录\",{\"1\":{\"27\":1}}],[\"压缩历史\",{\"1\":{\"27\":1}}],[\"结束\",{\"1\":{\"1012\":1}}],[\"结束打印\",{\"1\":{\"691\":2}}],[\"结尾\",{\"0\":{\"987\":1}}],[\"结语\",{\"0\":{\"444\":1},\"1\":{\"430\":1}}],[\"结合能生成静态原生\",{\"1\":{\"869\":1}}],[\"结合注释\",{\"1\":{\"865\":1}}],[\"结合客户端流式rpc和服务端流式rpc\",{\"1\":{\"667\":1}}],[\"结合角色权限相关配置来判断\",{\"1\":{\"360\":1}}],[\"结合之前了解的行情\",{\"1\":{\"197\":1}}],[\"结构作为队列\",{\"1\":{\"209\":1}}],[\"结果还得考虑到停止并删除容器\",{\"1\":{\"1070\":1}}],[\"结果相同\",{\"1\":{\"516\":1}}],[\"结果集中的列明必须与属性映射到的列名称匹配\",{\"1\":{\"514\":1}}],[\"结果是因为更新之后出来了一个兼容bigint的开关并且默认是关闭状态\",{\"1\":{\"478\":1}}],[\"结果就是可以在gettoken方法参数获取到我们token的值\",{\"1\":{\"472\":1}}],[\"结果就强制要求使用word\",{\"1\":{\"216\":1}}],[\"结果都是当事人不解释\",{\"1\":{\"322\":1}}],[\"结果\",{\"1\":{\"208\":1,\"501\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":1}}],[\"结果等面试官等好久\",{\"1\":{\"201\":1}}],[\"结果工资没涨成\",{\"1\":{\"201\":1}}],[\"结果脑子一热\",{\"1\":{\"195\":1}}],[\"结果面试一问\",{\"1\":{\"180\":1}}],[\"结果不行\",{\"1\":{\"125\":1}}],[\"结果发现输出的排序结果不是我们想要的样子\",{\"1\":{\"125\":1}}],[\"假如你现在年收入\",{\"1\":{\"197\":1}}],[\"假设它们本地的\",{\"1\":{\"943\":1}}],[\"假设\",{\"1\":{\"208\":1}}],[\"假设你用的是\",{\"1\":{\"208\":1}}],[\"假设你有个系统\",{\"1\":{\"208\":1}}],[\"假设我们在一个\",{\"1\":{\"943\":1}}],[\"假设我们采用\",{\"1\":{\"134\":1}}],[\"假设我们希望使用编写类的程序员名字来标记该类\",{\"1\":{\"46\":1}}],[\"假设某个分支已经完成了作业需要和主分支master合并\",{\"1\":{\"26\":1}}],[\"综合以上几点\",{\"1\":{\"197\":1}}],[\"综合示例\",{\"1\":{\"98\":1}}],[\"怕对方觉得你狮子大开口\",{\"1\":{\"197\":1}}],[\"福利等等\",{\"1\":{\"196\":1}}],[\"准备磁盘分区\",{\"1\":{\"1110\":1}}],[\"准备在\",{\"1\":{\"1110\":1}}],[\"准备项目文件\",{\"0\":{\"1070\":1}}],[\"准备项目和dockerfile文件\",{\"0\":{\"834\":1}}],[\"准备一个项目\",{\"1\":{\"806\":1}}],[\"准备阶段\",{\"1\":{\"587\":1,\"591\":1}}],[\"准备\",{\"0\":{\"572\":1,\"658\":1},\"1\":{\"416\":1}}],[\"准备工作不能少\",{\"1\":{\"196\":1}}],[\"准确地描述问题\",{\"1\":{\"2\":1}}],[\"讨价还价的行为\",{\"1\":{\"195\":1}}],[\"迟早要还的\",{\"1\":{\"195\":1}}],[\"薪酬部分暂时先写这么多了\",{\"1\":{\"201\":1}}],[\"薪酬福利不要问太细\",{\"1\":{\"191\":1}}],[\"薪能不能写到合同里\",{\"1\":{\"200\":1}}],[\"薪\",{\"1\":{\"200\":1}}],[\"薪资证明\",{\"1\":{\"195\":1}}],[\"谎言圆不上\",{\"1\":{\"195\":1}}],[\"应属于同一网段\",{\"1\":{\"1110\":1}}],[\"应答会持续出现\",{\"1\":{\"531\":1}}],[\"应当记录关键级别的日志\",{\"1\":{\"446\":1}}],[\"应用的规则\",{\"1\":{\"1131\":1}}],[\"应用的滚动更新和撤回也存在同样的情形\",{\"1\":{\"936\":1}}],[\"应用的组件和服务\",{\"1\":{\"935\":1}}],[\"应用运行在容器之中\",{\"1\":{\"935\":1}}],[\"应用可以方便的实现服务发现与负载均衡\",{\"1\":{\"914\":1}}],[\"应用构建精简镜像\",{\"0\":{\"871\":1}}],[\"应用内配置支持分组隔离\",{\"1\":{\"661\":1}}],[\"应用内部发起的http请求日志\",{\"1\":{\"446\":1}}],[\"应用在容器中运行\",{\"1\":{\"939\":1}}],[\"应用在\",{\"1\":{\"561\":1}}],[\"应用\",{\"1\":{\"559\":1,\"562\":1,\"661\":1,\"918\":1}}],[\"应用属性\",{\"1\":{\"400\":1}}],[\"应用层协议\",{\"1\":{\"324\":1}}],[\"应用商店\",{\"0\":{\"318\":1}}],[\"应用这个策略\",{\"1\":{\"208\":1}}],[\"应用程序工具\",{\"1\":{\"844\":1}}],[\"应用程序\",{\"1\":{\"708\":1}}],[\"应用程序的状况\",{\"1\":{\"543\":1}}],[\"应用程序的日志应用\",{\"1\":{\"202\":1}}],[\"应用程序的运行\",{\"1\":{\"174\":1}}],[\"应用程序域\",{\"1\":{\"117\":1}}],[\"应用程序结构\",{\"0\":{\"91\":1}}],[\"应该只包含字母数字\",{\"1\":{\"794\":1}}],[\"应该会弄明白的\",{\"1\":{\"693\":1}}],[\"应该说是算是一种思路吧\",{\"1\":{\"577\":1}}],[\"应该这么写\",{\"1\":{\"522\":1}}],[\"应该依赖于抽象\",{\"1\":{\"344\":1}}],[\"应该怎样处理\",{\"1\":{\"208\":1}}],[\"应该使用这种动静分离的策略去解决动\",{\"1\":{\"207\":1}}],[\"应该是在面试基本成功的时候\",{\"1\":{\"195\":1}}],[\"毕竟它的代码语义太强了\",{\"1\":{\"1065\":1}}],[\"毕竟这种方式更加灵活\",{\"1\":{\"807\":1}}],[\"毕竟是国外的网盘\",{\"1\":{\"693\":1}}],[\"毕竟当阅读到这篇文章的人都是开发人员\",{\"1\":{\"693\":1}}],[\"毕竟关于插件存储\",{\"1\":{\"577\":1}}],[\"毕竟tomcat的优势是处理动态请求\",{\"1\":{\"207\":1}}],[\"毕竟跳槽是最好的涨薪机会\",{\"1\":{\"198\":1}}],[\"毕竟你还没得到这份工作\",{\"1\":{\"191\":1}}],[\"毕业生\",{\"1\":{\"194\":1}}],[\"报表数据源\",{\"1\":{\"691\":1}}],[\"报文有可能遭篡改\",{\"1\":{\"323\":1}}],[\"报文中删除身份特征\",{\"1\":{\"322\":1}}],[\"报文\",{\"1\":{\"322\":1}}],[\"报纸僵尸等\",{\"1\":{\"243\":1}}],[\"报期望收入的之前\",{\"1\":{\"197\":1}}],[\"报上了名\",{\"1\":{\"194\":1}}],[\"报错\",{\"1\":{\"94\":1,\"1109\":1}}],[\"培训花费从工资里扣\",{\"1\":{\"194\":1}}],[\"培训机构以招聘的名义变相招生\",{\"0\":{\"194\":1}}],[\"岗前培训\",{\"1\":{\"194\":1}}],[\"岗位培训合同\",{\"1\":{\"194\":1}}],[\"岗位是\",{\"1\":{\"185\":1}}],[\"岗位的程序员对面试题的要求不一样\",{\"1\":{\"183\":1}}],[\"岗位明确要求的\",{\"1\":{\"180\":1}}],[\"买量成本\",{\"1\":{\"193\":1}}],[\"万个订单积压在\",{\"1\":{\"208\":1}}],[\"万双方达成一致\",{\"1\":{\"197\":1}}],[\"万\",{\"1\":{\"192\":1,\"197\":3,\"199\":2}}],[\"万一哪里用到了\",{\"1\":{\"684\":1}}],[\"万一有缘我们成了同事\",{\"1\":{\"190\":1}}],[\"万一人多简历少\",{\"1\":{\"184\":1}}],[\"兄弟\",{\"1\":{\"191\":1}}],[\"省的你将来入职之后再后悔\",{\"1\":{\"191\":1}}],[\"差评\",{\"1\":{\"191\":1}}],[\"三种身份\",{\"1\":{\"1085\":1}}],[\"三种分别方式为\",{\"1\":{\"914\":1}}],[\"三种数据库\",{\"1\":{\"661\":1}}],[\"三种写法\",{\"1\":{\"148\":1}}],[\"三表联合查询\",{\"1\":{\"518\":1}}],[\"三角形\",{\"1\":{\"442\":1}}],[\"三次握手四次挥手\",{\"0\":{\"327\":1}}],[\"三斜线注释\",{\"1\":{\"321\":1}}],[\"三个参数的组合\",{\"1\":{\"1081\":1}}],[\"三个\",{\"0\":{\"920\":1},\"1\":{\"932\":1}}],[\"三个节点的集群\",{\"1\":{\"209\":1}}],[\"三个系统那里\",{\"1\":{\"208\":1}}],[\"三个类型\",{\"1\":{\"203\":1}}],[\"三年之后的目标总可以吧\",{\"1\":{\"190\":1}}],[\"嗯\",{\"1\":{\"189\":1}}],[\"估计也会有人说\",{\"1\":{\"188\":1}}],[\"遇到这个问题\",{\"1\":{\"188\":1}}],[\"遇到这些断点时\",{\"1\":{\"173\":1}}],[\"合并\",{\"1\":{\"798\":1}}],[\"合并过以后切记要进行推送\",{\"1\":{\"798\":1}}],[\"合并dev分支到当前分支master\",{\"1\":{\"759\":1}}],[\"合并分支\",{\"0\":{\"759\":1},\"1\":{\"26\":2}}],[\"合成一条指令来用的\",{\"1\":{\"209\":1}}],[\"合于插入和更新操作比较多的应用\",{\"1\":{\"206\":1}}],[\"合理的答案\",{\"1\":{\"187\":1}}],[\"惹不起惹不起\",{\"1\":{\"187\":1}}],[\"前三个段要和本机保持一致\",{\"1\":{\"1107\":1}}],[\"前方\",{\"1\":{\"939\":1}}],[\"前方提供一个\",{\"1\":{\"937\":1}}],[\"前者是在容器启动后执行\",{\"1\":{\"914\":1}}],[\"前者用于探测容器是否存活\",{\"1\":{\"914\":1}}],[\"前段时间网易蜂巢曾经推出蜂巢\",{\"1\":{\"863\":1}}],[\"前缀表示\",{\"1\":{\"850\":1}}],[\"前缀验证\",{\"1\":{\"666\":1}}],[\"前台运行模式终端很容易被关闭\",{\"1\":{\"811\":1}}],[\"前置脚本\",{\"1\":{\"744\":1}}],[\"前置脚本其实就是在pre\",{\"1\":{\"744\":1}}],[\"前置条件\",{\"1\":{\"204\":1}}],[\"前文获取配置文件的时候\",{\"1\":{\"581\":1}}],[\"前端开发助手\",{\"0\":{\"1006\":1}}],[\"前端的稳定性意味着无需担心客户端\",{\"1\":{\"938\":1}}],[\"前端是稳定可靠的\",{\"1\":{\"938\":1}}],[\"前端\",{\"1\":{\"937\":1,\"938\":1}}],[\"前端请求\",{\"0\":{\"603\":1,\"608\":1,\"612\":1,\"616\":1,\"621\":1,\"626\":1,\"631\":1}}],[\"前端传递token然后后端解析token识别用户信息并处理逻辑\",{\"1\":{\"364\":1}}],[\"前端存储token并且在后续的每次请求都携带token来访问\",{\"1\":{\"364\":1}}],[\"前面设置使用\",{\"1\":{\"1110\":1}}],[\"前面的端口为主机映射端口\",{\"1\":{\"380\":1,\"385\":1,\"856\":1}}],[\"前面是登录逻辑\",{\"1\":{\"364\":1}}],[\"前面我们分析到\",{\"1\":{\"134\":1}}],[\"前提是阿里云服务器的端口安全组已经设置\",{\"1\":{\"1070\":1}}],[\"前提是需要安装mongdb用于存储数据\",{\"1\":{\"217\":1}}],[\"前提是消费者能够正常处理消息并进行确认\",{\"1\":{\"208\":1}}],[\"前\",{\"1\":{\"208\":1}}],[\"前几天网上热传一张图\",{\"1\":{\"196\":1}}],[\"前公司薪资证明的时候\",{\"1\":{\"195\":1}}],[\"前领导\",{\"1\":{\"187\":1}}],[\"几乎涵盖了全球各大音视频网站\",{\"1\":{\"307\":1}}],[\"几乎\",{\"1\":{\"187\":1}}],[\"几个层次\",{\"1\":{\"91\":1}}],[\"他的邮箱是什么\",{\"1\":{\"821\":1}}],[\"他们的作用域范围依次从大到小\",{\"1\":{\"740\":1}}],[\"他们好像是明星的另一张嘴\",{\"1\":{\"322\":1}}],[\"他是一种双方之间传递安全信息的表述性声明规范\",{\"1\":{\"484\":1}}],[\"他总结出是依赖对象的获得被反转了\",{\"1\":{\"436\":1}}],[\"他为用户提供了各种型号的充电线和电源\",{\"1\":{\"433\":1}}],[\"他不能打开俩个\",{\"1\":{\"202\":1}}],[\"他说\",{\"1\":{\"186\":1}}],[\"他说之前一直用\",{\"1\":{\"186\":1}}],[\"他又问我\",{\"1\":{\"186\":1}}],[\"他想了想说没用过\",{\"1\":{\"186\":1}}],[\"他写的代码八成会很整洁吧\",{\"1\":{\"177\":1}}],[\"吗\",{\"1\":{\"186\":1,\"711\":1}}],[\"根分区\",{\"1\":{\"1110\":1}}],[\"根本不关心你的\",{\"1\":{\"443\":1}}],[\"根本无须再去考虑b\",{\"1\":{\"436\":1}}],[\"根本糊弄不过去\",{\"1\":{\"186\":1}}],[\"根据个人情况进行设置\",{\"1\":{\"1104\":1}}],[\"根据个人需求勾选\",{\"1\":{\"550\":1}}],[\"根据备注特性映射\",{\"1\":{\"1061\":1}}],[\"根据列特性映射\",{\"1\":{\"1061\":1}}],[\"根据实际情况选择需要读取数据库的字符串\",{\"1\":{\"1047\":2}}],[\"根据实际情况回答即可\",{\"1\":{\"204\":1}}],[\"根据主机的处理器配置以及性能考虑\",{\"1\":{\"1110\":1}}],[\"根据主库获取从库连接字符串\",{\"1\":{\"1047\":1}}],[\"根据主键删除\",{\"1\":{\"1044\":1}}],[\"根据主键更新其他字段\",{\"1\":{\"1043\":1}}],[\"根据主键更新\",{\"1\":{\"1043\":1}}],[\"根据主键查询\",{\"1\":{\"1041\":1}}],[\"根据where条件删除\",{\"1\":{\"1044\":1}}],[\"根据where条件更新\",{\"1\":{\"1043\":1}}],[\"根据where条件查询\",{\"1\":{\"1041\":1}}],[\"根据要应用\",{\"1\":{\"956\":1}}],[\"根据node表\",{\"1\":{\"928\":1}}],[\"根据etcd或apiserver的全局统一的集群信息为每个node分配全局唯一的网段\",{\"1\":{\"928\":1}}],[\"根据类型不同\",{\"1\":{\"918\":1}}],[\"根据类型创建类型实例\",{\"1\":{\"94\":1}}],[\"根据错误找原因\",{\"1\":{\"892\":1}}],[\"根据构建出来的镜像启动容器\",{\"1\":{\"836\":1}}],[\"根据构建出来的镜像运行容器时\",{\"1\":{\"827\":1}}],[\"根据需要安装界面版本或者无界面版本\",{\"1\":{\"1114\":1}}],[\"根据需要选择\",{\"1\":{\"1110\":1}}],[\"根据需要执行相关命令\",{\"1\":{\"837\":1}}],[\"根据需要\",{\"1\":{\"831\":1}}],[\"根据情况偶尔用用就可以啦\",{\"1\":{\"812\":1}}],[\"根据情况选择不同的组件\",{\"1\":{\"457\":1}}],[\"根据生成的tar文件导入为镜像\",{\"1\":{\"811\":1}}],[\"根据新生成的镜像启动容器\",{\"1\":{\"811\":1}}],[\"根据容器生成一个新的镜像\",{\"1\":{\"811\":1}}],[\"根据拷贝过来的tar文件可以直接加载镜像到主机上\",{\"1\":{\"810\":1}}],[\"根据镜像id删除\",{\"1\":{\"810\":1}}],[\"根据镜像启动容器时\",{\"1\":{\"823\":1}}],[\"根据镜像启动容器\",{\"1\":{\"806\":1,\"811\":1}}],[\"根据条件过滤事件\",{\"1\":{\"809\":1}}],[\"根据业务需求\",{\"1\":{\"806\":1}}],[\"根据业务重要程度\",{\"1\":{\"208\":1}}],[\"根据其存储的状态不同\",{\"1\":{\"780\":1}}],[\"根据算法的不同\",{\"1\":{\"779\":1}}],[\"根据以上报文\",{\"1\":{\"734\":1}}],[\"根据自己所处时区选择\",{\"1\":{\"1110\":1}}],[\"根据自己的需要选择需要忽视的文件\",{\"1\":{\"798\":1}}],[\"根据自己的需求选择最合适的服务\",{\"1\":{\"709\":1}}],[\"根据自己电脑下载对应的版本\",{\"1\":{\"722\":1}}],[\"根据id返回用户列表信息\",{\"1\":{\"676\":1}}],[\"根据ip接口请求限制\",{\"1\":{\"427\":1}}],[\"根据用户id获取用户列表\",{\"1\":{\"677\":1}}],[\"根据用户id获取用户信息\",{\"1\":{\"672\":1,\"678\":1,\"681\":1}}],[\"根据用户id去查询数据库返回结果\",{\"1\":{\"672\":1}}],[\"根据用户分组\",{\"1\":{\"524\":1}}],[\"根据迁移文件\",{\"1\":{\"502\":1}}],[\"根据名字和参数\",{\"1\":{\"443\":2}}],[\"根据名称获取公共方法\",{\"1\":{\"99\":1}}],[\"根据名称获取公共成员\",{\"1\":{\"99\":1}}],[\"根据\",{\"1\":{\"443\":3,\"919\":1}}],[\"根据注册表加载\",{\"1\":{\"443\":1}}],[\"根据bean配置信息在容器内部创建bean定义注册表\",{\"1\":{\"443\":1}}],[\"根据请求字符串去做处理解析是否做缓存\",{\"1\":{\"402\":1}}],[\"根据请求参数做缓存处理\",{\"1\":{\"402\":1}}],[\"根据请求地址做接口缓存\",{\"1\":{\"402\":1}}],[\"根据请求地址或者参数去判断是否已经保存数据\",{\"1\":{\"402\":1}}],[\"根据协议和类型来选择\",{\"1\":{\"322\":1}}],[\"根据唯一标识判断是否消费过\",{\"1\":{\"208\":1}}],[\"根据数据类型和日期分库\",{\"1\":{\"204\":1}}],[\"根据年收入去谈\",{\"1\":{\"197\":1}}],[\"根据这些信息补强自己\",{\"1\":{\"183\":1}}],[\"根据ascii先数字\",{\"1\":{\"125\":1}}],[\"根据参数的类型\",{\"1\":{\"99\":1}}],[\"根据参数顺序\",{\"1\":{\"99\":1}}],[\"根据全名称\",{\"1\":{\"94\":3}}],[\"根据全路径获取指定程序集\",{\"1\":{\"92\":2}}],[\"根据传入类型创建类型实例\",{\"1\":{\"93\":1}}],[\"贵公司也要做海外电商\",{\"1\":{\"185\":1}}],[\"功能没有大的区别\",{\"1\":{\"1021\":1}}],[\"功能更丰富的node选择器\",{\"1\":{\"914\":1}}],[\"功能强大\",{\"1\":{\"804\":1}}],[\"功能强大的\",{\"1\":{\"216\":1}}],[\"功能集成在一起\",{\"1\":{\"668\":1}}],[\"功能介绍\",{\"1\":{\"243\":3}}],[\"功能简陋齐全\",{\"1\":{\"243\":1}}],[\"功能小而精\",{\"1\":{\"210\":1}}],[\"功能\",{\"1\":{\"185\":1,\"204\":1}}],[\"越晚关闭\",{\"1\":{\"564\":3}}],[\"越早启动\",{\"1\":{\"564\":3}}],[\"越来越多的网站都采用\",{\"1\":{\"322\":1}}],[\"越普适的越不好写\",{\"1\":{\"183\":1}}],[\"越具体的模板优先级越高\",{\"1\":{\"165\":1}}],[\"众口难调\",{\"1\":{\"183\":1}}],[\"突出自己爱学习\",{\"1\":{\"183\":1}}],[\"页面\",{\"1\":{\"1031\":1,\"1070\":1}}],[\"页面以创建本地布局\",{\"1\":{\"964\":1}}],[\"页面上放置了一个按钮\",{\"1\":{\"693\":1}}],[\"页面上要触发打印功能\",{\"1\":{\"693\":1}}],[\"页面通知用户稍作等待等\",{\"1\":{\"149\":1}}],[\"页\",{\"1\":{\"183\":1}}],[\"页刚刚好\",{\"1\":{\"183\":1}}],[\"页略单薄\",{\"1\":{\"183\":1}}],[\"损失太大\",{\"1\":{\"183\":1}}],[\"容量\",{\"1\":{\"1110\":3}}],[\"容忍\",{\"1\":{\"914\":1}}],[\"容易在这方面发力过猛\",{\"1\":{\"182\":1}}],[\"容器处于\",{\"1\":{\"935\":1}}],[\"容器网络接口\",{\"1\":{\"928\":1}}],[\"容器创建\",{\"1\":{\"927\":1}}],[\"容器之间通过访问\",{\"1\":{\"926\":1}}],[\"容器之间相互隔离\",{\"1\":{\"804\":1}}],[\"容器挂掉不会引起emptydir目录下的数据丢失\",{\"1\":{\"914\":1}}],[\"容器挂掉后kubelet再次重启容器时\",{\"1\":{\"914\":1}}],[\"容器消亡以后数据也会跟着丢失\",{\"1\":{\"914\":1}}],[\"容器生命周期钩子函数\",{\"1\":{\"914\":1}}],[\"容器mynginx3的hosts内容如下\",{\"1\":{\"842\":1}}],[\"容器间的访问只能通过ip\",{\"1\":{\"841\":1}}],[\"容器间传递数据\",{\"0\":{\"816\":1}}],[\"容器没有启动时主机的网络配置如下\",{\"1\":{\"840\":1}}],[\"容器和容器之间的网络\",{\"1\":{\"840\":1}}],[\"容器和镜像几乎一样\",{\"1\":{\"811\":1}}],[\"容器正常启动\",{\"1\":{\"838\":1}}],[\"容器需要执行啥命令\",{\"1\":{\"829\":1}}],[\"容器向外暴露端口\",{\"1\":{\"828\":1,\"834\":1,\"837\":1}}],[\"容器看看挂载情况\",{\"1\":{\"817\":1}}],[\"容器命令查看容器的详细信息\",{\"1\":{\"815\":1}}],[\"容器删除\",{\"1\":{\"815\":1}}],[\"容器再启动\",{\"1\":{\"815\":1}}],[\"容器停止之后\",{\"1\":{\"815\":1}}],[\"容器停止并退出\",{\"1\":{\"811\":2}}],[\"容器绝对路径\",{\"1\":{\"815\":1}}],[\"容器数据卷解放双手\",{\"0\":{\"813\":1}}],[\"容器id看两个容器的挂载详情都一样\",{\"1\":{\"816\":1}}],[\"容器id查看详情\",{\"1\":{\"815\":1}}],[\"容器id\",{\"1\":{\"811\":8,\"888\":2,\"902\":1}}],[\"容器不停止退出\",{\"1\":{\"811\":2}}],[\"容器中执行exit命令\",{\"1\":{\"811\":2}}],[\"容器中获取\",{\"1\":{\"443\":1}}],[\"容器端口\",{\"1\":{\"811\":1}}],[\"容器内安装的命令\",{\"1\":{\"1109\":1}}],[\"容器内ping命令也找不到\",{\"1\":{\"840\":1}}],[\"容器内路径\",{\"1\":{\"815\":3}}],[\"容器内应用产生的数据都是由容器本身独有\",{\"1\":{\"811\":1}}],[\"容器内部可以根据需要任意改\",{\"1\":{\"811\":1}}],[\"容器内部端口随机映射到主机的端口\",{\"1\":{\"811\":1}}],[\"容器内修改密码\",{\"0\":{\"40\":1}}],[\"容器名\",{\"1\":{\"811\":1}}],[\"容器名称为mycentos\",{\"1\":{\"812\":1}}],[\"容器名称\",{\"1\":{\"380\":1,\"385\":1,\"554\":1,\"815\":1,\"856\":1}}],[\"容器是可编辑的\",{\"1\":{\"811\":1}}],[\"容器是用镜像创建的运行实例\",{\"1\":{\"811\":1}}],[\"容器是管理基于微服务的程序以便单独开发和部署它们的好方法\",{\"1\":{\"210\":1}}],[\"容器常用命令\",{\"0\":{\"811\":1}}],[\"容器结束等信息\",{\"1\":{\"809\":1}}],[\"容器启动之后\",{\"1\":{\"842\":1}}],[\"容器启动\",{\"1\":{\"809\":1}}],[\"容器就是通过类\",{\"1\":{\"805\":1}}],[\"容器\",{\"1\":{\"805\":2,\"809\":1,\"837\":1,\"839\":1,\"899\":1}}],[\"容器管理了我们定义的各种\",{\"1\":{\"443\":1}}],[\"容器的名字规则是\",{\"1\":{\"852\":1}}],[\"容器的网卡\",{\"1\":{\"840\":1}}],[\"容器的关系如下\",{\"1\":{\"818\":1}}],[\"容器的实现\",{\"1\":{\"443\":1}}],[\"容器的实现供用户选择和使用\",{\"1\":{\"443\":1}}],[\"容器的基本行为作了定义\",{\"1\":{\"443\":1}}],[\"容器有这个名字的\",{\"1\":{\"443\":1}}],[\"容器为开发者管理对象间的依赖关系提供了很多便利和基础服务\",{\"1\":{\"443\":1}}],[\"容器在微服务中的用途是什么\",{\"1\":{\"210\":1}}],[\"容器达到低维护\",{\"1\":{\"133\":1}}],[\"容器输出结果为\",{\"1\":{\"125\":1}}],[\"挑和岗位更匹配的写\",{\"1\":{\"181\":1}}],[\"挑你参与多写\",{\"1\":{\"181\":1}}],[\"挑规模大的写\",{\"1\":{\"181\":1}}],[\"太假了\",{\"1\":{\"189\":1}}],[\"太小的项目就别写了\",{\"1\":{\"181\":1}}],[\"太早的\",{\"1\":{\"181\":1}}],[\"经常出现这种情况\",{\"1\":{\"745\":1}}],[\"经常会因为代码写的有问题导致报错\",{\"1\":{\"738\":1}}],[\"经常会出现对象之间的多重依赖性关系\",{\"1\":{\"435\":1}}],[\"经常用业余时间把工作力争做到最好\",{\"1\":{\"189\":1}}],[\"经历过一次\",{\"1\":{\"193\":1}}],[\"经历是你做了什么\",{\"1\":{\"181\":1}}],[\"经过如下操作\",{\"1\":{\"780\":1}}],[\"经过优化的b+树\",{\"1\":{\"206\":1}}],[\"经过一番讨价还价\",{\"1\":{\"197\":1}}],[\"经过前面的分析我们已经得知\",{\"1\":{\"134\":1}}],[\"经过查询资料\",{\"1\":{\"125\":1}}],[\"篇\",{\"1\":{\"180\":1}}],[\"篇原创技术文章\",{\"1\":{\"178\":1}}],[\"框架\",{\"1\":{\"180\":1,\"364\":1,\"663\":1,\"1126\":2}}],[\"框架提供了两种类型的特性\",{\"1\":{\"41\":1}}],[\"二个ip\",{\"1\":{\"932\":1}}],[\"二个\",{\"0\":{\"919\":1}}],[\"二进制\",{\"1\":{\"871\":1}}],[\"二进制数据序列化\",{\"1\":{\"535\":1}}],[\"二是将容器提交为镜像\",{\"1\":{\"812\":1}}],[\"二维码\",{\"1\":{\"693\":1}}],[\"二者应该依赖于抽象\",{\"1\":{\"344\":1}}],[\"二\",{\"0\":{\"725\":1},\"1\":{\"180\":1,\"190\":1}}],[\"二哈\",{\"1\":{\"73\":2,\"127\":1,\"131\":3}}],[\"老版本的docker被称为docker或者docker\",{\"1\":{\"862\":1}}],[\"老六\",{\"1\":{\"631\":1}}],[\"老八\",{\"1\":{\"608\":1,\"621\":1,\"622\":1}}],[\"老板很着急\",{\"1\":{\"192\":1}}],[\"老程序员\",{\"1\":{\"180\":1}}],[\"老张的哲学8\",{\"1\":{\"137\":1}}],[\"建议\",{\"1\":{\"1110\":1}}],[\"建议下载这个版本\",{\"1\":{\"1103\":1}}],[\"建议使用官方的镜像作为基础镜像\",{\"1\":{\"820\":1}}],[\"建议以后都不要加\",{\"1\":{\"775\":1}}],[\"建议可以这么写\",{\"1\":{\"180\":1}}],[\"建立了\",{\"1\":{\"926\":1}}],[\"建立bean与bean之间的依赖关系\",{\"1\":{\"443\":1}}],[\"建立连接\",{\"1\":{\"22\":1}}],[\"建立本地仓库\",{\"1\":{\"22\":2}}],[\"建立远程仓库\",{\"1\":{\"22\":1}}],[\"建立远程仓库连接并推送\",{\"1\":{\"22\":1}}],[\"建立远程仓库与本地仓库的连接\",{\"1\":{\"21\":1}}],[\"建立远程仓库需要我们先登陆自己的github账号\",{\"1\":{\"21\":1}}],[\"建立仓库\",{\"0\":{\"20\":1}}],[\"掌握技能\",{\"1\":{\"180\":1}}],[\"掌握\",{\"1\":{\"180\":1}}],[\"掌握缓存和数据库一致性问题\",{\"1\":{\"134\":1}}],[\"熟悉我的朋友首先就会想到使用\",{\"1\":{\"215\":1}}],[\"熟悉\",{\"1\":{\"180\":1}}],[\"曾经一个面试者\",{\"1\":{\"191\":1}}],[\"曾经一次面试\",{\"1\":{\"180\":1}}],[\"曾被评选为公司优秀团队\",{\"1\":{\"179\":1}}],[\"技术大乱斗\",{\"0\":{\"530\":1}}],[\"技术剖析\",{\"0\":{\"443\":1}}],[\"技术还比较弱\",{\"1\":{\"189\":1}}],[\"技术交流\",{\"1\":{\"10\":1}}],[\"技能水平\",{\"0\":{\"180\":1}}],[\"团队自主研发的针对微信各模块的开发套件\",{\"1\":{\"710\":1}}],[\"团队带的还不错\",{\"1\":{\"179\":1}}],[\"团队气氛和谐\",{\"1\":{\"179\":1}}],[\"团队规模降低\",{\"1\":{\"210\":1}}],[\"团队规模\",{\"1\":{\"179\":1}}],[\"门付费课程\",{\"1\":{\"179\":1}}],[\"今年已经在极客时间上完成\",{\"1\":{\"179\":1}}],[\"今后就可以使用私有密钥进行认证\",{\"1\":{\"19\":1}}],[\"领域驱动设计\",{\"1\":{\"179\":1}}],[\"爱看书\",{\"1\":{\"179\":1}}],[\"爱看技术书籍\",{\"1\":{\"179\":1}}],[\"爱学习\",{\"1\":{\"179\":1}}],[\"爱总结分享\",{\"1\":{\"178\":1}}],[\"年之后就不再支持浏览器版本\",{\"1\":{\"721\":1}}],[\"年收入能满足你的预期\",{\"1\":{\"200\":1}}],[\"年薪\",{\"1\":{\"192\":1}}],[\"年的工程师\",{\"1\":{\"189\":1}}],[\"年电商行业的开发经验\",{\"1\":{\"185\":1}}],[\"年了\",{\"1\":{\"185\":1}}],[\"年使用经验\",{\"1\":{\"180\":1}}],[\"年团队管理经验\",{\"1\":{\"179\":1}}],[\"年互联网行业经验\",{\"1\":{\"179\":1}}],[\"年\",{\"1\":{\"179\":1,\"247\":1}}],[\"哎\",{\"1\":{\"179\":1}}],[\"价值观\",{\"1\":{\"179\":1}}],[\"既可以看到下面的效果\",{\"1\":{\"1070\":1}}],[\"既节省了存储空间\",{\"1\":{\"863\":1}}],[\"既是重新认识自己\",{\"1\":{\"179\":1}}],[\"既然刚开始说可以将容器理解为简易版的linux\",{\"1\":{\"811\":1}}],[\"既然可以把这个命令当做操作日志理解\",{\"1\":{\"809\":1}}],[\"既然前端同事是通过字符串来处理的\",{\"1\":{\"478\":1}}],[\"既然名字叫做控制反转\",{\"1\":{\"436\":1}}],[\"既然决定使用缓存\",{\"1\":{\"134\":1}}],[\"既然是版本控制系统\",{\"1\":{\"27\":1}}],[\"既然好处颇多\",{\"1\":{\"10\":1}}],[\"别忘记了\",{\"1\":{\"1110\":1}}],[\"别忘了\",{\"1\":{\"201\":1}}],[\"别忘了要突出重点\",{\"1\":{\"180\":1}}],[\"别人可以通过域名访问到你本机的服务\",{\"1\":{\"238\":1}}],[\"别的\",{\"1\":{\"208\":1}}],[\"别等到入职才发现月薪里面\",{\"1\":{\"199\":1}}],[\"别不懂装懂\",{\"0\":{\"186\":1},\"1\":{\"186\":1}}],[\"别回答的时候支支吾吾\",{\"1\":{\"185\":1}}],[\"别让人觉得你是吹牛\",{\"1\":{\"180\":1}}],[\"别乱写\",{\"1\":{\"180\":1}}],[\"别小看这句说明\",{\"1\":{\"178\":1}}],[\"别犹豫\",{\"1\":{\"178\":1}}],[\"别急\",{\"1\":{\"134\":1,\"807\":1}}],[\"电话等\",{\"1\":{\"178\":1}}],[\"学历\",{\"1\":{\"178\":1}}],[\"学习之旅\",{\"1\":{\"243\":1}}],[\"学习\",{\"1\":{\"179\":1}}],[\"学习能力强\",{\"1\":{\"179\":1}}],[\"学习c\",{\"1\":{\"122\":1}}],[\"学习github的使用\",{\"1\":{\"22\":1}}],[\"照例先说一些最基本的常识\",{\"1\":{\"195\":1}}],[\"照骗\",{\"1\":{\"177\":1}}],[\"照片是别人对你的第一印象\",{\"1\":{\"177\":1}}],[\"能共用公共服务\",{\"1\":{\"806\":1}}],[\"能考虑的渠道也就是企业微信和钉钉了\",{\"1\":{\"697\":1}}],[\"能将一个普通的命令行进程变为后台daemon\",{\"1\":{\"564\":1}}],[\"能举几个示例吗\",{\"1\":{\"322\":1}}],[\"能不能生产一次消费多次呢\",{\"1\":{\"209\":1}}],[\"能不能把面试时间集中一下\",{\"1\":{\"201\":1}}],[\"能够提供一系列的快捷操作和代码主题客制化\",{\"1\":{\"968\":1}}],[\"能够通过相同的接口调用不同的网络组件\",{\"1\":{\"928\":1}}],[\"能够将应用程序与基础设施分开\",{\"1\":{\"804\":1}}],[\"能够很大程度上检测是否有发生一些破坏性的变更\",{\"1\":{\"599\":1}}],[\"能够支持\",{\"1\":{\"322\":1}}],[\"能够创建和编辑\",{\"1\":{\"304\":1}}],[\"能够帮助程序员设计更加简洁优美的面向对象程序\",{\"1\":{\"203\":1}}],[\"能够处理更多的请求\",{\"1\":{\"203\":1}}],[\"能够起到技术交流的效果\",{\"1\":{\"10\":1}}],[\"能在网上查到的不要问\",{\"1\":{\"191\":1}}],[\"能以公司为家吗\",{\"1\":{\"188\":1}}],[\"能\",{\"1\":{\"188\":2}}],[\"能接受加班吗\",{\"0\":{\"188\":1}}],[\"能锦上添花\",{\"1\":{\"178\":1}}],[\"能显得你爱学习\",{\"1\":{\"178\":1}}],[\"能增加别人对你的好感\",{\"1\":{\"177\":1}}],[\"又陆续支持word\",{\"1\":{\"1009\":1}}],[\"又拍云\",{\"1\":{\"951\":1}}],[\"又能节省带宽\",{\"1\":{\"863\":1}}],[\"又怎么去根据类创建实例呢\",{\"1\":{\"810\":1}}],[\"又是一个非常重要的功能\",{\"1\":{\"740\":1}}],[\"又一次引起了我的好奇\",{\"1\":{\"710\":1}}],[\"又称为模块测试\",{\"1\":{\"593\":1}}],[\"又可以识别出来现在工作区新增了一个文件\",{\"1\":{\"778\":1}}],[\"又可以通过这三个句柄类型对象\",{\"1\":{\"203\":1}}],[\"又可以让对方知道你的长处\",{\"1\":{\"179\":1}}],[\"又说工资希望能再涨\",{\"1\":{\"201\":1}}],[\"又或者是一个行业专家\",{\"1\":{\"190\":1}}],[\"又怕说不清楚\",{\"1\":{\"183\":1}}],[\"又补充了点新内容\",{\"1\":{\"176\":1}}],[\"又存在先后问题\",{\"1\":{\"134\":1}}],[\"调整如下\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"调度到满足条件的pod所在的node上\",{\"1\":{\"914\":1}}],[\"调该插件的接口\",{\"1\":{\"577\":1}}],[\"调试多线程应用程序是有名的复杂\",{\"1\":{\"985\":1}}],[\"调试窗口\",{\"1\":{\"974\":1}}],[\"调试效率技巧\",{\"0\":{\"974\":1}}],[\"调试代码发现这种方式只在程序第一次运行的时候会执行\",{\"1\":{\"656\":1}}],[\"调试\",{\"1\":{\"210\":1,\"714\":1}}],[\"调试的最有用的工具之一\",{\"1\":{\"173\":1}}],[\"调试工具\",{\"1\":{\"172\":1}}],[\"调试神器\",{\"1\":{\"172\":1}}],[\"调用接口发现可以查询到数据\",{\"1\":{\"902\":1}}],[\"调用接口后会输出内容表示接口添加成功\",{\"1\":{\"576\":1}}],[\"调用测试\",{\"1\":{\"673\":1}}],[\"调用存储过程\",{\"1\":{\"528\":1}}],[\"调用和可视化\",{\"1\":{\"479\":1,\"551\":1}}],[\"调用上面的接口会生成token\",{\"1\":{\"364\":1}}],[\"调用堆栈\",{\"1\":{\"173\":1,\"974\":1}}],[\"调用\",{\"1\":{\"157\":1,\"1045\":1}}],[\"调用前\",{\"1\":{\"157\":1}}],[\"调用构造函数\",{\"1\":{\"109\":1}}],[\"调用公共泛型类的有参方法\",{\"1\":{\"106\":2}}],[\"调用公共泛型有参方法\",{\"1\":{\"106\":1}}],[\"调用公共泛型无参方法\",{\"1\":{\"106\":1}}],[\"调用非泛型方法\",{\"1\":{\"104\":1}}],[\"调用无参数重载方法\",{\"1\":{\"99\":1}}],[\"调用有一个int类型参数的重载方法\",{\"1\":{\"99\":1}}],[\"调用者调用委托\",{\"1\":{\"83\":1}}],[\"调用的地方可以\",{\"1\":{\"1040\":1}}],[\"调用的地方\",{\"1\":{\"43\":1}}],[\"快捷\",{\"1\":{\"298\":1}}],[\"快捷键\",{\"0\":{\"254\":1},\"1\":{\"965\":3,\"1025\":1,\"1026\":1,\"1027\":1,\"1028\":1,\"1029\":1,\"1030\":1}}],[\"快捷键不太习惯\",{\"1\":{\"171\":1}}],[\"快速添加一个yum源\",{\"1\":{\"1109\":1}}],[\"快速定位\",{\"1\":{\"968\":1}}],[\"快速操作和重构\",{\"1\":{\"956\":1}}],[\"快速查询和替换\",{\"1\":{\"719\":1}}],[\"快速实现添加一个请求\",{\"1\":{\"719\":1}}],[\"快速填写请求头信息\",{\"1\":{\"719\":1}}],[\"快速迭代\",{\"1\":{\"634\":1}}],[\"快速返回结果\",{\"1\":{\"595\":1}}],[\"快速注释\",{\"1\":{\"321\":1}}],[\"快速恢复界面原状\",{\"1\":{\"254\":1}}],[\"快速消费掉所有的消息\",{\"1\":{\"208\":1}}],[\"快速访问数据表中的特定信息\",{\"1\":{\"206\":1}}],[\"快速入门\",{\"1\":{\"22\":1}}],[\"快速入门github\",{\"0\":{\"9\":1,\"10\":1}}],[\"说下你在项目中碰到的坑\",{\"1\":{\"210\":1}}],[\"说说\",{\"1\":{\"209\":1}}],[\"说说怎么解决\",{\"1\":{\"208\":1}}],[\"说说你们公司es的集群架构\",{\"1\":{\"204\":1}}],[\"说\",{\"1\":{\"200\":1}}],[\"说一个网上的段子\",{\"1\":{\"192\":1}}],[\"说正在克服的缺点\",{\"1\":{\"189\":1}}],[\"说对方知道的缺点\",{\"1\":{\"189\":1}}],[\"说了说\",{\"1\":{\"186\":1}}],[\"说了那么多\",{\"1\":{\"168\":1}}],[\"说明来源自\",{\"1\":{\"700\":1}}],[\"说明你没有安装installer\",{\"1\":{\"689\":1}}],[\"说明我们生成镜像并推送的步骤成功了\",{\"1\":{\"1070\":1}}],[\"说明我们项目已经部署成功了\",{\"1\":{\"563\":1}}],[\"说明我们的项目运行是正常的\",{\"1\":{\"554\":1}}],[\"说明我真的好久没有swagger调用接口了\",{\"1\":{\"478\":1}}],[\"说明\",{\"0\":{\"389\":1},\"1\":{\"32\":1,\"730\":1}}],[\"确定\",{\"1\":{\"1110\":1}}],[\"确定存储区域这里需要填写我们oss的存储区域id\",{\"1\":{\"954\":1}}],[\"确定有限状态自动机\",{\"1\":{\"167\":1}}],[\"确实是麻烦点\",{\"1\":{\"208\":1}}],[\"确实需要大量拉取数据的场景\",{\"1\":{\"204\":1}}],[\"确保成功完成\",{\"1\":{\"600\":1}}],[\"确保其恢复消费速度\",{\"1\":{\"208\":1}}],[\"确保文档是最新版本\",{\"1\":{\"204\":1}}],[\"确保只初始化\",{\"1\":{\"167\":1}}],[\"确认自定义的分区\",{\"1\":{\"1110\":1}}],[\"确认密码\",{\"1\":{\"802\":1}}],[\"确认秘钥的保存路径\",{\"1\":{\"802\":1}}],[\"确认安装才会执行安装\",{\"1\":{\"538\":1}}],[\"确认信息没有传送到消息队列\",{\"1\":{\"208\":1}}],[\"确认服务器是否能支撑当前访问量\",{\"1\":{\"206\":1}}],[\"确认候选主节点数达标\",{\"1\":{\"204\":1}}],[\"确认即可\",{\"1\":{\"19\":1}}],[\"流量转发给\",{\"1\":{\"942\":1}}],[\"流量非常小\",{\"1\":{\"134\":1}}],[\"流水线pipeline\",{\"0\":{\"879\":1}}],[\"流程\",{\"0\":{\"749\":1}}],[\"流转到下一个中间件\",{\"1\":{\"167\":2}}],[\"必先利其器\",{\"1\":{\"1110\":1}}],[\"必填\",{\"1\":{\"474\":1}}],[\"必应\",{\"0\":{\"258\":1}}],[\"必然导致性能的下降\",{\"1\":{\"208\":1}}],[\"必须使用\",{\"1\":{\"1079\":1}}],[\"必须按以下顺序安装更新\",{\"1\":{\"1012\":1}}],[\"必须按以下顺序安装\",{\"1\":{\"1012\":1}}],[\"必须建立\",{\"1\":{\"962\":1}}],[\"必须先选择\",{\"1\":{\"740\":1}}],[\"必须先执行了\",{\"1\":{\"166\":1}}],[\"必须合法合规\",{\"1\":{\"700\":1}}],[\"必须显式配置\",{\"1\":{\"666\":1}}],[\"必须\",{\"1\":{\"409\":1,\"710\":1}}],[\"必须是无参数的构造函数\",{\"1\":{\"407\":1}}],[\"必须添加下面的两者\",{\"1\":{\"360\":1}}],[\"必须添加到同一个\",{\"1\":{\"167\":1}}],[\"必须结合实际应用场景\",{\"1\":{\"204\":1}}],[\"必定是会备受关注\",{\"1\":{\"10\":1}}],[\"标签选择器标准的\",{\"1\":{\"942\":1}}],[\"标签也打成功了\",{\"1\":{\"837\":1}}],[\"标签\",{\"0\":{\"762\":1}}],[\"标题\",{\"1\":{\"693\":1}}],[\"标记测试方法\",{\"1\":{\"599\":1}}],[\"标记的方法\",{\"1\":{\"596\":1}}],[\"标记已将所有路由服务注册完毕\",{\"1\":{\"165\":1}}],[\"标识\",{\"1\":{\"476\":1,\"1037\":1}}],[\"标识该接口需要认证才可以访问\",{\"1\":{\"364\":1}}],[\"标头获取值\",{\"1\":{\"468\":1}}],[\"标准版\",{\"1\":{\"696\":1}}],[\"标准的iconfiguration\",{\"1\":{\"661\":1}}],[\"标准的定义\",{\"1\":{\"210\":1}}],[\"标准输出日志轮转备份的数量\",{\"1\":{\"564\":2}}],[\"标准输出log文件达到多少后自动进行轮转\",{\"1\":{\"564\":2}}],[\"标准化\",{\"1\":{\"205\":1}}],[\"标有星号\",{\"1\":{\"26\":1}}],[\"具名挂载\",{\"1\":{\"815\":1}}],[\"具有改变系统配置的权限\",{\"1\":{\"914\":1}}],[\"具有简洁的api\",{\"1\":{\"457\":1}}],[\"具有了加密\",{\"1\":{\"325\":1}}],[\"具有层次结构\",{\"1\":{\"322\":1}}],[\"具有快速和数据持久化的特征\",{\"1\":{\"209\":1}}],[\"具有约束的参数段比没有约束的参数段更具体\",{\"1\":{\"165\":1}}],[\"具体如何选择合适的网卡\",{\"1\":{\"1013\":1}}],[\"具体如下\",{\"1\":{\"734\":1,\"739\":1,\"743\":1}}],[\"具体报错显示如下\",{\"1\":{\"876\":1}}],[\"具体命令在docker小白到实战之常用命令演示\",{\"1\":{\"812\":1}}],[\"具体内容如下\",{\"1\":{\"806\":1}}],[\"具体实现步骤\",{\"0\":{\"730\":1}}],[\"具体操作查看文档\",{\"1\":{\"702\":1}}],[\"具体操作就是\",{\"1\":{\"134\":1}}],[\"具体的使用场景会在下文中进行阐述\",{\"1\":{\"918\":1}}],[\"具体的可以参考官网\",{\"1\":{\"852\":1}}],[\"具体的实现会在源码中展示\",{\"1\":{\"690\":1}}],[\"具体的用法在这里不做过多的介绍\",{\"1\":{\"215\":1}}],[\"具体在下面代码中会介绍\",{\"1\":{\"689\":1}}],[\"具体可参照\",{\"1\":{\"596\":1}}],[\"具体可以参考定制android固件列表\",{\"1\":{\"247\":1}}],[\"具体示例\",{\"1\":{\"402\":1,\"780\":1}}],[\"具体解决某一个问题\",{\"1\":{\"210\":1}}],[\"具体就是使用springboot\",{\"1\":{\"210\":1}}],[\"具体来讲就是\",{\"1\":{\"134\":1}}],[\"具体要怎么存呢\",{\"1\":{\"134\":1}}],[\"^v\",{\"1\":{\"656\":1}}],[\"^\",{\"1\":{\"163\":2,\"474\":1,\"691\":1,\"693\":1}}],[\"内共享网络命名空间\",{\"1\":{\"927\":1}}],[\"内通信\",{\"0\":{\"926\":1}}],[\"内的多容器间通信以及同一节点不同\",{\"1\":{\"925\":1}}],[\"内部原理其实是在mynginx3内部做了个映射配置\",{\"1\":{\"842\":1}}],[\"内部用内存队列做排队\",{\"1\":{\"208\":1}}],[\"内右键git\",{\"1\":{\"775\":1}}],[\"内连接\",{\"0\":{\"516\":1},\"1\":{\"516\":1}}],[\"内置验证特性\",{\"0\":{\"474\":1}}],[\"内置自定义模型绑定\",{\"0\":{\"471\":1}}],[\"内置lazy锁并且底层使用memorycache\",{\"1\":{\"378\":1}}],[\"内置的服务容器已经满足框架和大多数项目的需求\",{\"1\":{\"344\":1}}],[\"内容\",{\"1\":{\"1077\":1}}],[\"内容很简单\",{\"1\":{\"1037\":1}}],[\"内容来自于百度百科\",{\"1\":{\"1007\":1}}],[\"内容的时候\",{\"1\":{\"782\":1}}],[\"内容的方式进行计算的\",{\"1\":{\"779\":1}}],[\"内容显全文\",{\"1\":{\"697\":1}}],[\"内容如下\",{\"1\":{\"573\":1,\"851\":2,\"1070\":1}}],[\"内容可能会被窃听\",{\"1\":{\"323\":1}}],[\"内容被写入一个新段\",{\"1\":{\"204\":1}}],[\"内核版本\",{\"1\":{\"1110\":1}}],[\"内核开发小组撤下了\",{\"1\":{\"247\":1}}],[\"内核的分裂\",{\"1\":{\"247\":1}}],[\"内核的上层运行\",{\"1\":{\"247\":1}}],[\"内核上\",{\"1\":{\"247\":1}}],[\"内核采用的是\",{\"1\":{\"247\":1}}],[\"内核\",{\"1\":{\"247\":2,\"944\":1}}],[\"内网穿透\",{\"0\":{\"238\":1}}],[\"内存使用率或应用自定义metrics自动扩展pod数量\",{\"1\":{\"914\":1}}],[\"内存使用量只与你配置的精确度相关\",{\"1\":{\"204\":1}}],[\"内存等\",{\"1\":{\"809\":1}}],[\"内存数据集大小上升到一定大小的时候\",{\"1\":{\"209\":1}}],[\"内存数据库redis\",{\"1\":{\"133\":1}}],[\"内存交换到磁盘对服务器性能来说是致命的\",{\"1\":{\"204\":1}}],[\"内存中的缓冲将被清除\",{\"1\":{\"204\":1}}],[\"内存映射文件用于将文件内容映射到应用程序的逻辑地址\",{\"1\":{\"203\":1}}],[\"内联约束解析器\",{\"1\":{\"165\":1}}],[\"内联方式\",{\"1\":{\"163\":1}}],[\"摘自官方文档\",{\"1\":{\"162\":1}}],[\"解压至安装目录\",{\"1\":{\"1135\":1}}],[\"解析缓存中没有这个记录\",{\"1\":{\"943\":1}}],[\"解析\",{\"0\":{\"938\":1},\"1\":{\"835\":1}}],[\"解析才会成功\",{\"1\":{\"571\":1}}],[\"解析token\",{\"1\":{\"472\":1}}],[\"解析我们生成token如图\",{\"1\":{\"364\":1}}],[\"解析多个服务\",{\"1\":{\"348\":1}}],[\"解析为\",{\"1\":{\"161\":2}}],[\"解耦\",{\"1\":{\"208\":1,\"344\":1,\"435\":1}}],[\"解释泛型的基本原理\",{\"1\":{\"203\":1}}],[\"解决办法\",{\"1\":{\"876\":1}}],[\"解决冲突\",{\"1\":{\"798\":1}}],[\"解决方法\",{\"1\":{\"798\":1,\"1109\":1}}],[\"解决方案如下\",{\"1\":{\"1012\":1}}],[\"解决方案错误展示器\",{\"1\":{\"968\":1}}],[\"解决方案或文件夹\",{\"1\":{\"956\":1}}],[\"解决方案资源管理器\",{\"1\":{\"956\":1}}],[\"解决方案\",{\"1\":{\"208\":1,\"862\":1,\"956\":1}}],[\"解决方案是\",{\"1\":{\"134\":1}}],[\"解决了容器数据持久化以及容器间共享数据的问题\",{\"1\":{\"914\":1}}],[\"解决了我们上面提出的两个问题\",{\"1\":{\"784\":1}}],[\"解决了1\",{\"1\":{\"326\":1}}],[\"解决了并发问题\",{\"1\":{\"134\":1}}],[\"解决单个系统的不足\",{\"1\":{\"210\":1}}],[\"解决第二个问题\",{\"1\":{\"134\":1}}],[\"解决第一个问题\",{\"1\":{\"134\":1}}],[\"继而会增加整体镜像的大小\",{\"1\":{\"863\":1}}],[\"继续\",{\"1\":{\"1110\":1}}],[\"继续输入\",{\"1\":{\"1024\":2}}],[\"继续服务nssm\",{\"1\":{\"1020\":1}}],[\"继续安装\",{\"1\":{\"1012\":1}}],[\"继续运行下面的命令\",{\"1\":{\"1008\":1}}],[\"继续修改readme\",{\"1\":{\"768\":1}}],[\"继续从右到左读取模板\",{\"1\":{\"161\":2}}],[\"继承自userinfoservicebase并重写adduserlist方法\",{\"1\":{\"680\":1}}],[\"继承自userinfoservicebase并重写getuserlistbyuserid方法\",{\"1\":{\"677\":1}}],[\"继承自userinfoservicebase并重写getall方法\",{\"1\":{\"675\":1}}],[\"继承自公共类\",{\"1\":{\"587\":1}}],[\"继承自接口iproviderbase\",{\"1\":{\"575\":1}}],[\"继承自类库defaultpluginsexternalprovider和defaultsample\",{\"1\":{\"575\":1}}],[\"继承接口必须实现接口的所有成员\",{\"1\":{\"82\":1}}],[\"继承了一个了类\",{\"1\":{\"73\":1}}],[\"继承\",{\"0\":{\"73\":1}}],[\"继承修饰符\",{\"1\":{\"51\":1,\"56\":1,\"59\":1}}],[\"匹配一个文档内相同的单词并编辑\",{\"1\":{\"965\":1}}],[\"匹配大小写d\",{\"1\":{\"800\":1}}],[\"匹配中括号中的字符\",{\"1\":{\"799\":1}}],[\"匹配任意中间目录\",{\"1\":{\"799\":1}}],[\"匹配多个字符\",{\"1\":{\"799\":1}}],[\"匹配度高的技能\",{\"1\":{\"180\":1}}],[\"匹配成功则触发事件\",{\"1\":{\"167\":1}}],[\"匹配策略相关服务\",{\"1\":{\"165\":1}}],[\"匹配失败的案例\",{\"1\":{\"161\":1}}],[\"匹配\",{\"1\":{\"161\":4,\"501\":1}}],[\"匹配过程为\",{\"1\":{\"161\":2}}],[\"匹配最小可能的字符串\",{\"1\":{\"161\":1}}],[\"匹配最大可能的字符串\",{\"1\":{\"161\":1}}],[\"匹配到了终结点\",{\"1\":{\"157\":1}}],[\"懒惰匹配\",{\"1\":{\"161\":1}}],[\"模板如下\",{\"1\":{\"931\":1}}],[\"模板\",{\"1\":{\"690\":1}}],[\"模板时\",{\"1\":{\"160\":2}}],[\"模型绑定会查找名称模式\",{\"1\":{\"470\":1}}],[\"模型绑定会执行以下的步骤\",{\"1\":{\"468\":1}}],[\"模型绑定以键值对的形式从http请求中的以下源中获取数据\",{\"1\":{\"468\":1}}],[\"模型绑定就是接收将来自http请求的数据映射到模型的过程\",{\"1\":{\"468\":1}}],[\"模型绑定\",{\"0\":{\"468\":1},\"1\":{\"477\":1}}],[\"模型类中继承ivalidatableobject\",{\"1\":{\"475\":1}}],[\"模型类使用指向操作方法的\",{\"1\":{\"474\":1}}],[\"模型类\",{\"1\":{\"395\":1}}],[\"模拟用户添加的数据\",{\"1\":{\"681\":1}}],[\"模拟用户数据\",{\"1\":{\"591\":2}}],[\"模拟上传用户头像操作\",{\"1\":{\"615\":1}}],[\"模拟数据库查询\",{\"1\":{\"677\":1}}],[\"模拟数据\",{\"1\":{\"591\":1}}],[\"模拟数据源\",{\"1\":{\"402\":1}}],[\"模拟单元提交也返回1\",{\"1\":{\"591\":1}}],[\"模拟场景\",{\"1\":{\"475\":1}}],[\"模拟的假数据\",{\"1\":{\"342\":1}}],[\"模式最大的优势是虚拟系统接入互联网非常简单\",{\"1\":{\"1110\":1}}],[\"模式是最好的选择\",{\"1\":{\"1110\":1}}],[\"模式的代理\",{\"1\":{\"944\":1}}],[\"模式下的容器间通信\",{\"1\":{\"926\":1}}],[\"模式中虚拟机与主机的相互访问\",{\"1\":{\"1110\":1}}],[\"模式中\",{\"1\":{\"916\":1}}],[\"模式\",{\"1\":{\"208\":1,\"839\":1,\"1110\":3}}],[\"模糊匹配\",{\"1\":{\"206\":1}}],[\"模块会负责进程管理\",{\"1\":{\"563\":1}}],[\"模块和进程外托管的应用之间的关系\",{\"1\":{\"563\":1}}],[\"模块和进程内托管的应用之间的关系\",{\"1\":{\"562\":1}}],[\"模块和类型的对象\",{\"1\":{\"86\":1,\"90\":1}}],[\"模块负责的\",{\"1\":{\"204\":1}}],[\"模块名\",{\"1\":{\"98\":1,\"118\":1}}],[\"模块\",{\"1\":{\"91\":1,\"203\":1,\"561\":2,\"974\":1,\"1046\":2}}],[\"模块包含类型\",{\"1\":{\"90\":1}}],[\"非分库分表的\",{\"1\":{\"1046\":1}}],[\"非分布式\",{\"1\":{\"208\":1}}],[\"非常方便构建小镜像\",{\"1\":{\"869\":1}}],[\"非常有用\",{\"1\":{\"869\":1}}],[\"非常感谢\",{\"1\":{\"710\":1}}],[\"非常适合需要高性能的轻量级微服务\",{\"1\":{\"664\":1}}],[\"非常纯净\",{\"1\":{\"311\":1}}],[\"非商业性使用\",{\"1\":{\"599\":1}}],[\"非跟踪查询\",{\"1\":{\"504\":1}}],[\"非空校验\",{\"1\":{\"474\":1}}],[\"非要在中间加一层代理呢\",{\"1\":{\"322\":1}}],[\"非要把对方问到答不出来\",{\"1\":{\"201\":1}}],[\"非盈利开源组织\",{\"1\":{\"251\":1}}],[\"非内核\",{\"1\":{\"247\":1}}],[\"非贪婪匹配\",{\"1\":{\"161\":1}}],[\"非路由参数的文本和分隔符\",{\"1\":{\"159\":1}}],[\"非重载方法\",{\"1\":{\"99\":1}}],[\"规格\",{\"1\":{\"693\":1}}],[\"规划\",{\"1\":{\"179\":1}}],[\"规则就是写明了哪个域名对应哪个service\",{\"1\":{\"931\":1}}],[\"规则变化\",{\"1\":{\"931\":1}}],[\"规则\",{\"1\":{\"159\":1,\"944\":3,\"945\":1}}],[\"规定特性可被放置的语言元素\",{\"1\":{\"42\":1}}],[\"时常会出现忘记升级包版本的情况\",{\"1\":{\"1121\":1}}],[\"时效性比较强\",{\"1\":{\"700\":1}}],[\"时候保存到数据库\",{\"1\":{\"504\":1}}],[\"时隔多年\",{\"1\":{\"432\":1}}],[\"时间轴是学习masa\",{\"1\":{\"1037\":1}}],[\"时间格式化\",{\"1\":{\"478\":1}}],[\"时间复杂度的效率检索文章了\",{\"1\":{\"204\":1}}],[\"时间长\",{\"1\":{\"133\":1}}],[\"时薪还低了\",{\"1\":{\"198\":1}}],[\"时\",{\"1\":{\"157\":1,\"204\":1,\"243\":1,\"674\":1,\"776\":1,\"919\":1,\"926\":1,\"964\":1}}],[\"肯定不是\",{\"1\":{\"157\":1}}],[\"肯定会有\",{\"1\":{\"134\":1}}],[\"始终为\",{\"1\":{\"157\":1}}],[\"含中间镜像层\",{\"1\":{\"810\":1}}],[\"含目录\",{\"1\":{\"599\":1}}],[\"含有文本的段比参数段更具体\",{\"1\":{\"165\":1}}],[\"含有metadata元数据集合\",{\"1\":{\"156\":1}}],[\"含有requestdelegate委托\",{\"1\":{\"156\":1}}],[\"含义\",{\"1\":{\"125\":1}}],[\"终端会阻塞\",{\"1\":{\"809\":1}}],[\"终端中间件\",{\"1\":{\"157\":1}}],[\"终于到了路由匹配的逻辑了\",{\"1\":{\"167\":1}}],[\"终于又有空来捣鼓它了\",{\"1\":{\"3\":1}}],[\"终结点是否正在使用tls\",{\"1\":{\"666\":1}}],[\"终结点应使用tls\",{\"1\":{\"666\":1}}],[\"终结点仍然为空\",{\"1\":{\"167\":1}}],[\"终结点选择\",{\"1\":{\"165\":1}}],[\"终结点对象在创建完毕后\",{\"1\":{\"157\":1}}],[\"终结点有以下特点\",{\"1\":{\"156\":1}}],[\"终结点\",{\"1\":{\"156\":1,\"666\":1}}],[\"更适合这种使用场景\",{\"1\":{\"944\":1}}],[\"更换镜像源地址\",{\"1\":{\"876\":1}}],[\"更轻量\",{\"1\":{\"866\":1}}],[\"更重要的是苦了小伙伴们\",{\"1\":{\"812\":1}}],[\"更加容易理解操作本质\",{\"1\":{\"807\":1}}],[\"更加简单\",{\"1\":{\"599\":1}}],[\"更容易\",{\"1\":{\"806\":1}}],[\"更改为\",{\"1\":{\"1130\":3}}],[\"更改文件属主\",{\"0\":{\"1083\":1}}],[\"更改文件属组\",{\"0\":{\"1082\":1}}],[\"更改语言\",{\"1\":{\"1012\":1}}],[\"更改\",{\"1\":{\"798\":1,\"1012\":1}}],[\"更改仓库对应地址\",{\"0\":{\"774\":1}}],[\"更改打印设置\",{\"1\":{\"691\":1}}],[\"更简洁一些\",{\"1\":{\"598\":1}}],[\"更简洁\",{\"1\":{\"598\":1}}],[\"更方便一些\",{\"1\":{\"598\":1}}],[\"更好的性能和更低的延迟\",{\"1\":{\"536\":1}}],[\"更详细操作需要自行学习\",{\"1\":{\"484\":1}}],[\"更合适的写法是\",{\"1\":{\"424\":1}}],[\"更是贴心提供了快捷rdp模式\",{\"1\":{\"288\":1}}],[\"更多调试多线程应用程序的技巧可以在这个微软文档中找到\",{\"1\":{\"985\":1}}],[\"更多需要将数据持久化\",{\"1\":{\"811\":1}}],[\"更多细节可以进入官网\",{\"1\":{\"811\":1}}],[\"更多配置还需要查看官方文档\",{\"1\":{\"237\":1}}],[\"更多内存\",{\"1\":{\"204\":1}}],[\"更精确的进行数据隔离\",{\"1\":{\"1110\":1}}],[\"更精确\",{\"1\":{\"204\":1}}],[\"更惨的是\",{\"1\":{\"201\":1}}],[\"更不要说不利面试通过的缺点\",{\"1\":{\"189\":1}}],[\"更准确的应该叫做endpoint\",{\"1\":{\"156\":1}}],[\"更新win10下载工具地址\",{\"1\":{\"1031\":1}}],[\"更新web服务上的数据项\",{\"1\":{\"619\":1,\"629\":1}}],[\"更新软件包\",{\"1\":{\"1012\":1}}],[\"更新的先决条件\",{\"1\":{\"1012\":2}}],[\"更新后才可以继续安装\",{\"1\":{\"1012\":1}}],[\"更新和执行其他\",{\"1\":{\"962\":1}}],[\"更新\",{\"0\":{\"1043\":1},\"1\":{\"937\":1}}],[\"更新daemonset模版后\",{\"1\":{\"914\":1}}],[\"更新模板后\",{\"1\":{\"914\":1}}],[\"更新时\",{\"1\":{\"914\":1}}],[\"更新时间\",{\"1\":{\"331\":1}}],[\"更新时间搜索可以把版本老旧的资源筛选出去\",{\"1\":{\"331\":1}}],[\"更新时间搜索\",{\"1\":{\"331\":1}}],[\"更新策略\",{\"1\":{\"914\":1}}],[\"更新下载可能会较慢\",{\"1\":{\"865\":1}}],[\"更新用户信息\",{\"1\":{\"620\":1}}],[\"更新用户姓名\",{\"1\":{\"611\":1}}],[\"更新新的配置到supervisord\",{\"1\":{\"564\":1}}],[\"更新操作会立即发生在旧的块\",{\"1\":{\"205\":1}}],[\"更新操作立刻fsync到磁盘\",{\"1\":{\"205\":1}}],[\"更新完数据库之后\",{\"1\":{\"134\":1}}],[\"更新主库\",{\"1\":{\"134\":1}}],[\"更新缓存方案\",{\"1\":{\"134\":1}}],[\"更新缓存\",{\"1\":{\"134\":5}}],[\"更新数据库\",{\"1\":{\"134\":8}}],[\"更新到缓存中\",{\"1\":{\"134\":1}}],[\"更新分布式缓存\",{\"1\":{\"43\":2}}],[\"更新本地缓存\",{\"1\":{\"43\":4}}],[\"允许8080端口通过防火墙\",{\"1\":{\"911\":1}}],[\"允许通过防火墙\",{\"0\":{\"911\":1}}],[\"允许对grpc客户端进行集中配置\",{\"1\":{\"668\":1}}],[\"允许与语言无关的实现\",{\"1\":{\"663\":1}}],[\"允许我们将一个应用程序配置直接配置到内存中\",{\"1\":{\"583\":1}}],[\"允许传输任意类型的数据对象\",{\"1\":{\"323\":1}}],[\"允许用户跨多个网络进行通信\",{\"1\":{\"322\":1}}],[\"允许使用者修改和重新发布代码\",{\"1\":{\"252\":1}}],[\"允许使用者自由复制\",{\"1\":{\"248\":1}}],[\"允许代码修改\",{\"1\":{\"251\":1}}],[\"允许在其授权下的源代码与其他授权的文件进行混合\",{\"1\":{\"250\":1}}],[\"允许商业软件通过类库引用的方式使用\",{\"1\":{\"249\":1}}],[\"允许部分数据冗余\",{\"1\":{\"206\":1}}],[\"允许\",{\"1\":{\"204\":1}}],[\"允许程序员定义更通用的类型和算法\",{\"1\":{\"203\":1}}],[\"允许携带cookie\",{\"1\":{\"155\":1}}],[\"允许所有的头部参数\",{\"1\":{\"155\":1}}],[\"允许所有的请求方式get\",{\"1\":{\"155\":1}}],[\"允许所有的域名请求\",{\"1\":{\"155\":1}}],[\"允许任何证书\",{\"1\":{\"155\":1}}],[\"允许任何头部\",{\"1\":{\"155\":1}}],[\"允许任何请求方式\",{\"1\":{\"155\":1}}],[\"允许任务来源的主机访问\",{\"1\":{\"155\":1}}],[\"看它是成功还是失败\",{\"1\":{\"914\":1}}],[\"看来也有很大的优化空间\",{\"1\":{\"869\":1}}],[\"看来这里面肯定有优化的空间\",{\"1\":{\"866\":1}}],[\"看网络细节\",{\"1\":{\"839\":1}}],[\"看容器详细信息\",{\"1\":{\"837\":1,\"843\":1}}],[\"看根目录下就会多了logs目录\",{\"1\":{\"837\":1}}],[\"看dockerfile中的命令效果\",{\"1\":{\"836\":1}}],[\"看不懂\",{\"1\":{\"815\":1}}],[\"看完再回过头来瞅这张图\",{\"1\":{\"807\":1}}],[\"看个人爱好进行登录\",{\"1\":{\"694\":1}}],[\"看上去类似于string\",{\"1\":{\"512\":1}}],[\"看看启动的容器名\",{\"1\":{\"852\":1}}],[\"看看权限结果分配如下\",{\"1\":{\"847\":1}}],[\"看看数据卷挂载是否成功\",{\"1\":{\"837\":1}}],[\"看看刚才在容器操作的文件数据是否同步过来\",{\"1\":{\"815\":1}}],[\"看看docker指定的主机路径在哪\",{\"1\":{\"815\":1}}],[\"看看docker\",{\"1\":{\"804\":1}}],[\"看看\",{\"1\":{\"787\":1}}],[\"看看是否在\",{\"1\":{\"443\":1}}],[\"看看执行结果\",{\"1\":{\"442\":1}}],[\"看看符合规则的放进来\",{\"1\":{\"155\":1}}],[\"看一下ichangetoken实现缓存过期策略的两个例子\",{\"1\":{\"374\":1}}],[\"看一个网友的经历\",{\"1\":{\"194\":1}}],[\"看起来专业十足\",{\"1\":{\"300\":1}}],[\"看起来月薪是\",{\"1\":{\"199\":1}}],[\"看起来是让你面试\",{\"1\":{\"191\":1}}],[\"看起来好像很洋气\",{\"1\":{\"181\":1}}],[\"看在钱\",{\"1\":{\"188\":1}}],[\"看几个正面句子\",{\"1\":{\"179\":1}}],[\"看这种文字真是提不起兴趣\",{\"1\":{\"179\":1}}],[\"看过之前文章的老读者可以快速浏览这部分\",{\"1\":{\"176\":1}}],[\"看到就是赚到\",{\"1\":{\"711\":1}}],[\"看到这里你可能会想\",{\"1\":{\"134\":1}}],[\"看到了么\",{\"1\":{\"134\":2}}],[\"跨节点通信\",{\"0\":{\"928\":1}}],[\"跨机器和跨地区的集群调度\",{\"1\":{\"913\":1}}],[\"跨浏览器支持\",{\"1\":{\"690\":1}}],[\"跨语言的\",{\"1\":{\"662\":1}}],[\"跨域仅仅是浏览器的行为\",{\"1\":{\"154\":1}}],[\"跨域\",{\"0\":{\"154\":1}}],[\"跨平台的现代桌面软件\",{\"1\":{\"290\":1}}],[\"跨平台的\",{\"1\":{\"135\":1}}],[\"新+更\",{\"1\":{\"1044\":1}}],[\"新机器要装的软件\",{\"0\":{\"1014\":1}}],[\"新\",{\"1\":{\"936\":2}}],[\"新手入门\",{\"1\":{\"889\":1}}],[\"新启动一个容器mynginx3\",{\"1\":{\"842\":1}}],[\"新增dns2\",{\"1\":{\"1110\":1}}],[\"新增dns1\",{\"1\":{\"1110\":1}}],[\"新增网关\",{\"1\":{\"1110\":1}}],[\"新增子网掩码\",{\"1\":{\"1110\":1}}],[\"新增静态网络ip地址\",{\"1\":{\"1110\":1}}],[\"新增oss用户\",{\"1\":{\"954\":1}}],[\"新增授权\",{\"1\":{\"954\":1}}],[\"新增文件\",{\"1\":{\"788\":2}}],[\"新增目录\",{\"1\":{\"788\":4}}],[\"新增的功能\",{\"1\":{\"533\":1}}],[\"新地址git链接\",{\"1\":{\"774\":1}}],[\"新添加的配置并不会被客户端感知到\",{\"1\":{\"661\":1}}],[\"新创建了一个\",{\"1\":{\"600\":1}}],[\"新建挂载点\",{\"1\":{\"1110\":1}}],[\"新建会话\",{\"1\":{\"1106\":1}}],[\"新建网络交换机=>外部网络=>创建虚拟交换机\",{\"1\":{\"1013\":1}}],[\"新建连接去操作数据库\",{\"1\":{\"1010\":1}}],[\"新建\",{\"1\":{\"956\":1,\"1110\":3}}],[\"新建customermessagehandler类\",{\"1\":{\"711\":1}}],[\"新建model类\",{\"1\":{\"694\":1}}],[\"新建项目然后引用需要的组件aspose\",{\"1\":{\"683\":1}}],[\"新建userinfogrpcservice继承自我们的userinfoservice\",{\"1\":{\"672\":1}}],[\"新建测试类runnertimetest\",{\"1\":{\"588\":1}}],[\"新建类库defaultpluginsexternalprovider\",{\"1\":{\"575\":1}}],[\"新建类库defaultsample\",{\"1\":{\"575\":1}}],[\"新建控制器msgcontroller\",{\"1\":{\"575\":1}}],[\"新建一个存储连接字符串的类\",{\"1\":{\"1047\":1}}],[\"新建一个项目\",{\"1\":{\"834\":1}}],[\"新建一个请求\",{\"1\":{\"730\":1,\"733\":1,\"734\":2}}],[\"新建一个接口getuserlistbyuseridasync用于获取grpc服务\",{\"1\":{\"678\":1}}],[\"新建一个接口用于获取grpc服务\",{\"1\":{\"676\":1,\"681\":1}}],[\"新建一个netcore\",{\"1\":{\"479\":1}}],[\"新建一个net5\",{\"1\":{\"382\":1,\"387\":1,\"561\":1}}],[\"新建一个\",{\"1\":{\"208\":1,\"574\":1,\"710\":1}}],[\"新闻实时更新\",{\"1\":{\"530\":1}}],[\"新的product对象\",{\"1\":{\"438\":1}}],[\"新版本的名称被称为docker\",{\"1\":{\"862\":1}}],[\"新版本的文档被索引到一个新段\",{\"1\":{\"204\":1}}],[\"新版本\",{\"1\":{\"696\":1}}],[\"新版本可以使用相对路径\",{\"1\":{\"153\":1}}],[\"新工作是\",{\"1\":{\"198\":1}}],[\"新人\",{\"1\":{\"183\":1}}],[\"新值\",{\"1\":{\"134\":4}}],[\"kb2999226\",{\"1\":{\"1012\":1}}],[\"kb2919442\",{\"1\":{\"1012\":4}}],[\"kb2919355\",{\"1\":{\"1012\":4}}],[\"kb2934018\",{\"1\":{\"1012\":2}}],[\"kb2938439\",{\"1\":{\"1012\":2}}],[\"kb2937592\",{\"1\":{\"1012\":2}}],[\"kb2932046\",{\"1\":{\"1012\":2}}],[\"kb2959977\",{\"1\":{\"1012\":2}}],[\"kb\",{\"1\":{\"1012\":3}}],[\"kbjfw\",{\"1\":{\"973\":1}}],[\"kb|mb|gb\",{\"1\":{\"447\":1}}],[\"know\",{\"1\":{\"949\":1}}],[\"kong\",{\"1\":{\"914\":1}}],[\"kubeproxy\",{\"1\":{\"919\":1}}],[\"kubelet和kube\",{\"1\":{\"914\":1}}],[\"kube\",{\"1\":{\"914\":3,\"919\":1,\"941\":1,\"944\":4}}],[\"kubectlsetimage\",{\"1\":{\"914\":1}}],[\"kubectldeletedeployment\",{\"1\":{\"914\":1}}],[\"kubectldeletenamespacens\",{\"1\":{\"914\":1}}],[\"kubectlgetdeployment\",{\"1\":{\"914\":1}}],[\"kubectlgetnodes\",{\"1\":{\"914\":1}}],[\"kubectlgetnamespace\",{\"1\":{\"914\":1}}],[\"kubectl\",{\"1\":{\"914\":19,\"918\":2}}],[\"kubernetes对集群内部的网络进行了重新抽象\",{\"1\":{\"917\":1}}],[\"kubernetes中的负载均衡我们主要用到了以下两种机制\",{\"1\":{\"914\":1}}],[\"kubernetes中通过简单地配置就可以挂载nfs到pod中\",{\"1\":{\"914\":1}}],[\"kubernetes使用deloyment的controller对象与之对应\",{\"1\":{\"914\":1}}],[\"kubernetes可以将glusterfs挂载到pod中\",{\"1\":{\"914\":1}}],[\"kubernetes存储卷的生命周期与pod绑定\",{\"1\":{\"914\":1}}],[\"kubernetes提供了更强大的volume机制和插件\",{\"1\":{\"914\":1}}],[\"kubernetes只是管理node上的资源\",{\"1\":{\"914\":1}}],[\"kubernetes通过cgroup限制容器的cpu以及内存等资源\",{\"1\":{\"914\":1}}],[\"kubernetes发展非常迅速\",{\"1\":{\"914\":1}}],[\"kubernetes是google开源的容器集群管理系统\",{\"1\":{\"913\":1}}],[\"kubernetes等\",{\"1\":{\"210\":1}}],[\"kubernetes\",{\"0\":{\"1178\":1},\"1\":{\"152\":2,\"253\":1,\"914\":4,\"918\":1,\"919\":3,\"920\":1,\"928\":1,\"930\":2,\"931\":4,\"932\":2,\"934\":2,\"935\":1,\"936\":2,\"937\":1,\"938\":1,\"939\":3,\"940\":1,\"941\":5,\"942\":1,\"943\":1,\"944\":3,\"945\":1}}],[\"k8s\",{\"0\":{\"934\":1,\"935\":1,\"938\":1,\"940\":1},\"1\":{\"913\":1,\"914\":2}}],[\"k88hudson\",{\"1\":{\"801\":1}}],[\"kklldog\",{\"1\":{\"661\":4}}],[\"kind\",{\"1\":{\"923\":1,\"930\":1,\"931\":2,\"1060\":3}}],[\"kingsonfu\",{\"1\":{\"862\":1}}],[\"kinfey\",{\"1\":{\"467\":1}}],[\"kibana\",{\"1\":{\"564\":1}}],[\"killasgroup\",{\"1\":{\"564\":1}}],[\"kill\",{\"1\":{\"564\":3,\"811\":2}}],[\"killmode=process\",{\"1\":{\"549\":1}}],[\"killedbyapixel\",{\"1\":{\"243\":2}}],[\"kfsafe\",{\"1\":{\"276\":1,\"311\":1}}],[\"kancloud\",{\"1\":{\"946\":1}}],[\"kanjilal\",{\"1\":{\"583\":2}}],[\"kaifa\",{\"1\":{\"259\":1}}],[\"kafka等发送接收消息\",{\"1\":{\"210\":1}}],[\"kafka\",{\"1\":{\"152\":2,\"210\":2}}],[\"k\",{\"1\":{\"215\":4}}],[\"kernel\",{\"1\":{\"925\":1}}],[\"kelseyhightower\",{\"1\":{\"874\":1}}],[\"keep\",{\"1\":{\"543\":1}}],[\"keepfileopen=\",{\"1\":{\"453\":1}}],[\"kestrel服务器\",{\"0\":{\"563\":1}}],[\"kestrel\",{\"1\":{\"203\":1,\"666\":3}}],[\"keynotfoundexception\",{\"1\":{\"1047\":1}}],[\"keyalg\",{\"1\":{\"1037\":1}}],[\"keytool\",{\"1\":{\"1037\":3}}],[\"keybindings\",{\"1\":{\"1036\":3}}],[\"keyboardinterrupt\",{\"1\":{\"949\":1}}],[\"key=\",{\"1\":{\"970\":3}}],[\"key=value\",{\"1\":{\"914\":1}}],[\"keyword3\",{\"1\":{\"694\":1}}],[\"keyword2\",{\"1\":{\"694\":1}}],[\"keyword1\",{\"1\":{\"694\":1}}],[\"key为文件名\",{\"1\":{\"375\":1}}],[\"key3仍然存在\",{\"1\":{\"372\":1}}],[\"key3都没过期\",{\"1\":{\"372\":1}}],[\"key3使用的相对过期时间\",{\"1\":{\"372\":1}}],[\"key3被清除\",{\"1\":{\"372\":2}}],[\"key3的值\",{\"1\":{\"372\":2}}],[\"key3\",{\"1\":{\"372\":3}}],[\"key2=value2\",{\"1\":{\"728\":1}}],[\"key2都过期了\",{\"1\":{\"372\":1}}],[\"key2都是使用的绝对过期时间\",{\"1\":{\"372\":1}}],[\"key2被清除\",{\"1\":{\"372\":2}}],[\"key2的值\",{\"1\":{\"372\":2}}],[\"key2\",{\"1\":{\"372\":4}}],[\"key1=value1\",{\"1\":{\"728\":1,\"914\":1}}],[\"key1被清除\",{\"1\":{\"372\":2}}],[\"key1的值\",{\"1\":{\"372\":2}}],[\"key1\",{\"1\":{\"372\":4,\"393\":1}}],[\"keymap\",{\"1\":{\"321\":1}}],[\"keysize\",{\"1\":{\"1037\":1}}],[\"keystore<\",{\"1\":{\"1037\":1}}],[\"keystore\",{\"1\":{\"1037\":4}}],[\"keys\",{\"1\":{\"215\":3,\"1036\":4,\"1047\":1}}],[\"keys=\",{\"1\":{\"215\":1}}],[\"key部分复制上面id\",{\"1\":{\"19\":1}}],[\"keygen\",{\"1\":{\"19\":1,\"802\":1}}],[\"key\",{\"1\":{\"19\":3,\"125\":2,\"151\":2,\"152\":1,\"164\":1,\"209\":10,\"211\":1,\"213\":2,\"364\":2,\"368\":3,\"373\":2,\"375\":2,\"378\":4,\"394\":7,\"401\":5,\"402\":13,\"424\":3,\"427\":3,\"477\":1,\"501\":1,\"524\":6,\"564\":1,\"600\":2,\"661\":2,\"692\":8,\"694\":1,\"905\":1,\"914\":1,\"1036\":1,\"1037\":1,\"1117\":1,\"1119\":2}}],[\"健康检查\",{\"0\":{\"149\":1},\"1\":{\"914\":1}}],[\"依次删除\",{\"1\":{\"914\":1}}],[\"依据不同的协议\",{\"1\":{\"322\":1}}],[\"依据职责的不同\",{\"1\":{\"322\":1}}],[\"依赖的库等\",{\"1\":{\"810\":1}}],[\"依赖模板消息接口\",{\"1\":{\"697\":1}}],[\"依赖模板消息\",{\"1\":{\"696\":1}}],[\"依赖项不可控\",{\"1\":{\"588\":1}}],[\"依赖关系注入\",{\"1\":{\"355\":1}}],[\"依赖注入是一种具体的编码技巧\",{\"1\":{\"657\":1}}],[\"依赖注入使用\",{\"1\":{\"382\":1,\"387\":1}}],[\"依赖注入\",{\"1\":{\"344\":1,\"668\":1}}],[\"依赖注入资源文件\",{\"1\":{\"145\":1}}],[\"依赖于\",{\"1\":{\"210\":1}}],[\"依此类推\",{\"1\":{\"202\":1}}],[\"依旧是请求\",{\"1\":{\"530\":1}}],[\"依旧是\",{\"1\":{\"134\":1}}],[\"依旧有很多疑惑\",{\"1\":{\"134\":1}}],[\"视图对应视图\",{\"1\":{\"145\":1}}],[\"视频播放\",{\"0\":{\"315\":1}}],[\"视频编辑\",{\"0\":{\"301\":1}}],[\"视频壁纸支持静态+动态壁纸\",{\"1\":{\"276\":1}}],[\"视频\",{\"0\":{\"137\":1}}],[\"存放字符串主从关系\",{\"1\":{\"1047\":1}}],[\"存放路径需要和使用的地方目录结构一致\",{\"1\":{\"145\":1}}],[\"存入redis中的类型是hash\",{\"1\":{\"851\":1}}],[\"存入远程版本库\",{\"1\":{\"798\":1}}],[\"存入本地暂存库\",{\"1\":{\"798\":1}}],[\"存在敏感词\",{\"1\":{\"215\":2}}],[\"存在\",{\"1\":{\"204\":1}}],[\"存储路径一定要写刚刚我们设置可匿名访问的路径\",{\"1\":{\"954\":1}}],[\"存储的位置\",{\"1\":{\"952\":1}}],[\"存储资源总量\",{\"1\":{\"914\":1}}],[\"存储资源\",{\"1\":{\"914\":1}}],[\"存储了一些压缩相关的信息\",{\"1\":{\"779\":1}}],[\"存储并且获取用户信息\",{\"1\":{\"368\":1}}],[\"存储session\",{\"1\":{\"367\":1}}],[\"存储\",{\"1\":{\"366\":1,\"368\":1,\"779\":1}}],[\"存储等各种风险也随之而来\",{\"1\":{\"204\":1}}],[\"存储层面\",{\"1\":{\"204\":1}}],[\"存储形式以dll和exe后缀名结尾的文件为主\",{\"1\":{\"139\":1}}],[\"存储mongodb\",{\"1\":{\"133\":1}}],[\"存储mysql\",{\"1\":{\"133\":1}}],[\"启用hyper\",{\"0\":{\"1104\":1}}],[\"启用水平伸缩\",{\"1\":{\"914\":1}}],[\"启用完毕会提示重启系统\",{\"1\":{\"876\":1}}],[\"启用或关闭windows功能\",{\"1\":{\"876\":1}}],[\"启用消息处理器\",{\"1\":{\"711\":1}}],[\"启用日期\",{\"1\":{\"693\":1}}],[\"启用内部错误输出详情\",{\"1\":{\"672\":1}}],[\"启用grpc\",{\"1\":{\"672\":1}}],[\"启用想起错误\",{\"1\":{\"669\":1,\"670\":1}}],[\"启用的话可以看到supervisor\",{\"1\":{\"564\":1}}],[\"启用xml注释\",{\"1\":{\"483\":1,\"484\":1}}],[\"启用swagger\",{\"1\":{\"482\":1}}],[\"启用openapi支持\",{\"1\":{\"479\":1,\"550\":1}}],[\"启用绑定器\",{\"1\":{\"472\":1}}],[\"启用身份授权\",{\"1\":{\"360\":1}}],[\"启用身份认证\",{\"1\":{\"360\":1}}],[\"启用中间件以将生成的swagger公开为json终结点\",{\"1\":{\"482\":1}}],[\"启用中间件\",{\"1\":{\"150\":1}}],[\"启用配置\",{\"0\":{\"144\":1}}],[\"启动系统\",{\"1\":{\"1110\":1}}],[\"启动防火墙\",{\"1\":{\"1109\":1}}],[\"启动iptables\",{\"1\":{\"1109\":1}}],[\"启动虚拟机\",{\"1\":{\"1104\":1}}],[\"启动服务\",{\"1\":{\"1020\":1}}],[\"启动服务后\",{\"1\":{\"548\":1}}],[\"启动调试\",{\"1\":{\"965\":1}}],[\"启动jenkins\",{\"1\":{\"909\":1}}],[\"启动成功后托盘处会有一个小鲸鱼的图标\",{\"1\":{\"876\":1}}],[\"启动镜像生成容器\",{\"1\":{\"859\":1}}],[\"启动之后就可以根据docker\",{\"1\":{\"852\":1}}],[\"启动容器时不需要\",{\"1\":{\"843\":1}}],[\"启动容器如下\",{\"1\":{\"836\":1}}],[\"启动容器\",{\"0\":{\"836\":1},\"1\":{\"852\":1}}],[\"启动和维护\",{\"1\":{\"817\":1}}],[\"启动和停止容器的命令\",{\"1\":{\"811\":1}}],[\"启动被停止的容器\",{\"1\":{\"811\":2}}],[\"启动的nginx容器也会停掉\",{\"1\":{\"811\":1}}],[\"启动快\",{\"1\":{\"806\":1}}],[\"启动单元测试\",{\"1\":{\"591\":1}}],[\"启动失败时的最多重试次数\",{\"1\":{\"564\":1}}],[\"启动几个进程\",{\"1\":{\"564\":1}}],[\"启动而启动\",{\"1\":{\"564\":1}}],[\"启动elasticsearch\",{\"1\":{\"564\":1}}],[\"启动supervisord\",{\"1\":{\"564\":1}}],[\"启动supervisor进程\",{\"1\":{\"549\":1}}],[\"启动是否丢到前台\",{\"1\":{\"564\":1}}],[\"启动某个进程\",{\"1\":{\"564\":1}}],[\"启动输出日志\",{\"1\":{\"563\":1}}],[\"启动程序使用的命令\",{\"1\":{\"564\":2}}],[\"启动程序转到swagger页面\",{\"1\":{\"563\":1}}],[\"启动程序访问\",{\"1\":{\"153\":1}}],[\"启动nginx\",{\"1\":{\"541\":1}}],[\"启动项目调用该接口输出信息\",{\"1\":{\"575\":1}}],[\"启动项目\",{\"1\":{\"501\":1,\"552\":1}}],[\"启动\",{\"0\":{\"483\":1,\"548\":1,\"1020\":1},\"1\":{\"1070\":1}}],[\"启动一个定时任务\",{\"1\":{\"134\":1}}],[\"启动docker时发现无法启动\",{\"1\":{\"876\":1}}],[\"启动docker\",{\"1\":{\"3\":1,\"550\":1,\"862\":1}}],[\"排行榜\",{\"1\":{\"209\":1}}],[\"排名不分先后\",{\"1\":{\"137\":1}}],[\"排序=笔画排序\",{\"1\":{\"124\":1}}],[\"排序\",{\"0\":{\"122\":1}}],[\"杨旭\",{\"1\":{\"137\":1}}],[\"杨中科\",{\"1\":{\"137\":1}}],[\"角落的白板报\",{\"1\":{\"137\":1}}],[\"官方默认的快捷键操作\",{\"1\":{\"965\":1}}],[\"官方推荐是安装在c盘\",{\"1\":{\"961\":1}}],[\"官方的\",{\"1\":{\"923\":1}}],[\"官方称为构建上下文\",{\"1\":{\"835\":1}}],[\"官方地址\",{\"1\":{\"791\":1}}],[\"官方例子\",{\"1\":{\"528\":1}}],[\"官方教程\",{\"1\":{\"382\":1,\"666\":1,\"862\":1}}],[\"官方访问太慢\",{\"1\":{\"364\":1}}],[\"官方原话\",{\"1\":{\"344\":1}}],[\"官方提供了四种方式\",{\"1\":{\"213\":1,\"1119\":1}}],[\"官方中文文档翻译错了\",{\"1\":{\"159\":1}}],[\"官方文档\",{\"1\":{\"90\":1,\"893\":1,\"964\":1}}],[\"官网提供了多种格式的镜像文件下载\",{\"1\":{\"1110\":1}}],[\"官网下载\",{\"1\":{\"1110\":1}}],[\"官网下载地址\",{\"1\":{\"973\":1,\"1110\":2}}],[\"官网资料\",{\"1\":{\"956\":1,\"1037\":1}}],[\"官网地址\",{\"1\":{\"170\":1,\"171\":1,\"172\":1,\"448\":1,\"703\":1,\"957\":1,\"1132\":1}}],[\"官网\",{\"1\":{\"136\":1,\"211\":1,\"239\":1,\"242\":2,\"262\":1,\"267\":1,\"268\":1,\"272\":1,\"287\":1,\"288\":1,\"290\":1,\"296\":1,\"298\":1,\"304\":1,\"457\":1,\"467\":1,\"716\":1,\"951\":1,\"1117\":1,\"1134\":1}}],[\"博客猿马甲哥\",{\"1\":{\"536\":1}}],[\"博客园老张的哲学\",{\"1\":{\"364\":1}}],[\"博客园\",{\"1\":{\"136\":1,\"801\":1,\"1047\":1}}],[\"博客\",{\"0\":{\"136\":1,\"329\":1},\"1\":{\"341\":1}}],[\"勤快哥\",{\"1\":{\"135\":1}}],[\"桌面快捷方式\",{\"1\":{\"690\":1}}],[\"桌面\",{\"1\":{\"135\":1}}],[\"开头表示根目录\",{\"1\":{\"799\":1}}],[\"开头\",{\"1\":{\"799\":1,\"973\":1,\"1072\":1}}],[\"开头的\",{\"1\":{\"1074\":2}}],[\"开头的所有类别\",{\"1\":{\"446\":1}}],[\"开头的like语句\",{\"1\":{\"206\":1}}],[\"开始使用调试器运行程序\",{\"1\":{\"974\":1}}],[\"开始使用visual\",{\"1\":{\"961\":1}}],[\"开始执行不调试\",{\"1\":{\"965\":1}}],[\"开始之前还有一个需要提醒的事情就是\",{\"1\":{\"934\":1}}],[\"开始支持ipvs\",{\"1\":{\"919\":1}}],[\"开始和重新启动\",{\"1\":{\"852\":1}}],[\"开始打印\",{\"1\":{\"691\":1}}],[\"开始\",{\"0\":{\"660\":1},\"1\":{\"811\":1}}],[\"开始写单元测试吧\",{\"1\":{\"599\":1}}],[\"开始编写sql\",{\"1\":{\"342\":1}}],[\"开放平台\",{\"1\":{\"710\":1}}],[\"开放80端口\",{\"1\":{\"542\":1}}],[\"开放了\",{\"1\":{\"247\":1}}],[\"开源地址\",{\"1\":{\"1038\":1}}],[\"开源的代码安全分析工具\",{\"1\":{\"968\":1}}],[\"开源的开发者平台\",{\"1\":{\"135\":1}}],[\"开源固件的前世今生\",{\"1\":{\"253\":1}}],[\"开源路由器固件历史\",{\"1\":{\"253\":1}}],[\"开源项目\",{\"1\":{\"247\":1,\"685\":1}}],[\"开源协议\",{\"1\":{\"247\":1,\"253\":1}}],[\"开源游戏\",{\"0\":{\"243\":1}}],[\"开箱即用的grpc提供了丰富的功能\",{\"1\":{\"536\":1}}],[\"开箱即用版本\",{\"0\":{\"218\":1}}],[\"开箱即用\",{\"1\":{\"210\":1}}],[\"开启此虚拟机\",{\"1\":{\"1110\":1}}],[\"开启端口\",{\"1\":{\"1108\":1,\"1109\":1}}],[\"开启防火墙\",{\"1\":{\"1108\":1}}],[\"开启录屏功能\",{\"1\":{\"1026\":1}}],[\"开启计算资源配额后\",{\"1\":{\"914\":1}}],[\"开启另一个终端\",{\"1\":{\"809\":1}}],[\"开启事务\",{\"1\":{\"208\":1}}],[\"开启配置文件中的magic\",{\"1\":{\"206\":1}}],[\"开发体验并消除一些常见的痛苦\",{\"1\":{\"968\":1}}],[\"开发更加敏捷\",{\"1\":{\"806\":1}}],[\"开发目的\",{\"1\":{\"795\":1}}],[\"开发证书时\",{\"1\":{\"666\":1}}],[\"开发\",{\"1\":{\"663\":1,\"869\":1}}],[\"开发作者的文章\",{\"1\":{\"661\":1}}],[\"开发人员的最佳综合\",{\"1\":{\"965\":1}}],[\"开发人员\",{\"1\":{\"689\":1}}],[\"开发人员应该尽量避免在生产环境中启用debug日志\",{\"1\":{\"446\":1}}],[\"开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理\",{\"1\":{\"216\":1}}],[\"开发中\",{\"1\":{\"444\":1}}],[\"开发使用\",{\"1\":{\"321\":1}}],[\"开发自己的\",{\"1\":{\"247\":1}}],[\"开发的\",{\"1\":{\"544\":1}}],[\"开发的工具\",{\"1\":{\"543\":1}}],[\"开发的飞船射击类游戏\",{\"1\":{\"243\":1}}],[\"开发的一个小的模块\",{\"1\":{\"210\":1}}],[\"开发的一款\",{\"1\":{\"170\":1}}],[\"开发较小的微服务听起来很容易\",{\"1\":{\"210\":1}}],[\"开发已经\",{\"1\":{\"185\":1}}],[\"开发语言\",{\"1\":{\"180\":1}}],[\"开发经验\",{\"1\":{\"179\":1}}],[\"开发者一直在尝试以各种姿势规避http障碍\",{\"1\":{\"530\":1}}],[\"开发者边车\",{\"1\":{\"334\":1}}],[\"开发者将源代码存入名叫\",{\"1\":{\"14\":1}}],[\"开发者是可以随意编辑的\",{\"1\":{\"13\":1}}],[\"介绍三种如何精简镜像的技巧\",{\"1\":{\"872\":1}}],[\"介绍完之后\",{\"1\":{\"186\":1}}],[\"介绍的时候时间控制在\",{\"1\":{\"185\":1}}],[\"介绍\",{\"0\":{\"135\":1,\"152\":1,\"239\":1,\"662\":1,\"696\":1,\"699\":1,\"703\":1,\"708\":1,\"913\":1,\"967\":1,\"1024\":1},\"1\":{\"155\":1,\"185\":1}}],[\"希望它们能帮助您提高生产率\",{\"1\":{\"987\":1}}],[\"希望在源码中显示线程按钮能提供很大的帮助\",{\"1\":{\"985\":1}}],[\"希望提交记录尽可能地轻量\",{\"1\":{\"781\":1}}],[\"希望以后能成长为架构师\",{\"1\":{\"179\":1}}],[\"希望我的这些心得对你有所启发\",{\"1\":{\"134\":1}}],[\"希望你可以耐心读完\",{\"1\":{\"134\":1}}],[\"让每个应用\",{\"1\":{\"935\":1}}],[\"让我们介绍具体的操作方法\",{\"1\":{\"869\":1}}],[\"让我们访问下项目的接口\",{\"1\":{\"554\":1}}],[\"让启动的容器使用自定义的网络\",{\"1\":{\"843\":1}}],[\"让开发人员可以自由定义环境\",{\"1\":{\"806\":1}}],[\"让开发人员可以专注于构建实时应用程序\",{\"1\":{\"534\":1}}],[\"让这些文件在启用\",{\"1\":{\"799\":1}}],[\"让代码配置以仓库为单位存储就好\",{\"1\":{\"775\":1}}],[\"让程序变得更加美好\",{\"1\":{\"594\":1}}],[\"让店家帮忙充电\",{\"1\":{\"433\":1}}],[\"让返回结果外面包一层公共业务返回类增加返回code和消息\",{\"1\":{\"416\":1}}],[\"让返回结果外面包一层公共业务返回类\",{\"1\":{\"416\":1}}],[\"让vscode映射chrome的debug功能\",{\"1\":{\"321\":1}}],[\"让vscode资源目录加上图标\",{\"1\":{\"321\":1}}],[\"让括号有独立的颜色\",{\"1\":{\"321\":1}}],[\"让支持c\",{\"1\":{\"321\":1}}],[\"让你确认下是否进行安装\",{\"1\":{\"538\":1}}],[\"让你的ppt\",{\"1\":{\"300\":1}}],[\"让你不用一个一个打开文件就可以直接看到文件里的内容\",{\"1\":{\"289\":1}}],[\"让缓存失效的时间点尽量均匀\",{\"1\":{\"209\":1}}],[\"让面试官觉得你是一个潜力股也是可以加分的\",{\"1\":{\"183\":1}}],[\"让其它异质系统\",{\"1\":{\"134\":1}}],[\"让社会化全员编程成为了现实\",{\"1\":{\"10\":1}}],[\"副本集群之间则是通过\",{\"1\":{\"918\":1}}],[\"副本组成的集群实例\",{\"1\":{\"918\":1}}],[\"副本\",{\"1\":{\"134\":2}}],[\"点这里\",{\"1\":{\"851\":1}}],[\"点表示指定为当前目录\",{\"1\":{\"835\":1}}],[\"点按钮的那种\",{\"1\":{\"807\":1}}],[\"点点点\",{\"1\":{\"802\":1}}],[\"点对点实时通信\",{\"1\":{\"664\":1}}],[\"点击好的\",{\"1\":{\"1106\":1}}],[\"点击enter进入系统\",{\"1\":{\"1104\":1}}],[\"点击安装位置\",{\"1\":{\"1104\":1}}],[\"点击页面可以输入备注\",{\"1\":{\"1031\":1}}],[\"点击页面按钮后让form2显示\",{\"1\":{\"659\":1}}],[\"点击加号新建白板\",{\"1\":{\"1031\":1}}],[\"点击确定就可以弹出步骤记录器\",{\"1\":{\"1029\":1}}],[\"点击确定完成创建交换机\",{\"1\":{\"1013\":1}}],[\"点击确定后\",{\"1\":{\"876\":1}}],[\"点击确定后输入密码即可添加ssh公钥\",{\"1\":{\"802\":1}}],[\"点击确定后将会为我们创建一个单元测试的应用程序\",{\"1\":{\"585\":1}}],[\"点击启用或者关闭windows功能\",{\"1\":{\"1007\":1}}],[\"点击文件=\",{\"1\":{\"971\":1}}],[\"点击或选择要插入或编辑的位置\",{\"1\":{\"965\":1}}],[\"点击保存后点击立即构建\",{\"1\":{\"900\":1}}],[\"点击apply后会重启docker\",{\"1\":{\"876\":1}}],[\"点击add\",{\"1\":{\"736\":2}}],[\"点击托盘处docker图标右键选择\",{\"1\":{\"876\":1}}],[\"点击如图处即可下载安装包\",{\"1\":{\"876\":1}}],[\"点击后就会保存到这个变量中\",{\"1\":{\"742\":1}}],[\"点击它会把该collection重新运行一遍\",{\"1\":{\"737\":1}}],[\"点击它可以看到每个请求中具体的测试断言详细信息\",{\"1\":{\"737\":1}}],[\"点击界面下方的run\",{\"1\":{\"737\":1}}],[\"点击右上的新建就可以创建想要保存的隐私配置信息\",{\"1\":{\"1070\":1}}],[\"点击右上角的小齿轮\",{\"1\":{\"741\":1}}],[\"点击右上角的账户设定按钮\",{\"1\":{\"19\":1}}],[\"点击右键\",{\"1\":{\"802\":1}}],[\"点击右三角\",{\"1\":{\"737\":1}}],[\"点击+new\",{\"1\":{\"736\":1}}],[\"点击+加号打开一个新的请求页\",{\"1\":{\"724\":1}}],[\"点击collection\",{\"1\":{\"736\":1}}],[\"点击这个选项后就直接能查看到的页面\",{\"1\":{\"735\":1}}],[\"点击send按钮就可以发送请求了\",{\"1\":{\"730\":1}}],[\"点击send按钮\",{\"1\":{\"724\":1,\"733\":1,\"734\":2}}],[\"点击下载\",{\"1\":{\"693\":1}}],[\"点击下一步\",{\"1\":{\"312\":1}}],[\"点击form1窗体按钮让form2窗体显示\",{\"1\":{\"660\":1}}],[\"点击方法名字右键运行测试或调试测试\",{\"1\":{\"587\":1}}],[\"点击方法名字右键运行测试或者调试测试\",{\"1\":{\"586\":1}}],[\"点击回车进入系统\",{\"1\":{\"312\":1}}],[\"点击\",{\"1\":{\"243\":1,\"956\":1,\"1013\":1,\"1031\":1,\"1110\":32,\"1111\":3,\"1112\":1,\"1113\":1}}],[\"点燃料\",{\"1\":{\"243\":1}}],[\"点\",{\"1\":{\"134\":1,\"243\":3}}],[\"点心得给你\",{\"1\":{\"134\":1}}],[\"凭借经验发送\",{\"1\":{\"134\":1}}],[\"缓解此问题的方案是\",{\"1\":{\"134\":1}}],[\"缓存超时等问题\",{\"1\":{\"938\":1}}],[\"缓存通过前缀区分\",{\"1\":{\"710\":1}}],[\"缓存被清除了\",{\"1\":{\"376\":2}}],[\"缓存被清空的回调函数可以注册多个\",{\"1\":{\"373\":1}}],[\"缓存就会自动过期\",{\"1\":{\"375\":1}}],[\"缓存失效时\",{\"1\":{\"375\":1}}],[\"缓存失效时间设置为短期\",{\"1\":{\"209\":1}}],[\"缓存满了时\",{\"1\":{\"373\":1}}],[\"缓存大小占1份\",{\"1\":{\"373\":2}}],[\"缓存大小\",{\"1\":{\"373\":1}}],[\"缓存的key支持object类型\",{\"1\":{\"370\":1}}],[\"缓存雪崩\",{\"1\":{\"209\":1}}],[\"缓存时间设置短一点\",{\"1\":{\"209\":1}}],[\"缓存穿透\",{\"1\":{\"209\":1}}],[\"缓存资源浪费\",{\"1\":{\"134\":1}}],[\"缓存都是有\",{\"1\":{\"134\":1}}],[\"缓存都被回种了\",{\"1\":{\"134\":1}}],[\"缓存延迟双删策略\",{\"1\":{\"134\":1}}],[\"缓存刚好已失效\",{\"1\":{\"134\":1}}],[\"缓存利用率\",{\"1\":{\"134\":2}}],[\"缓存利用率得以最大化\",{\"1\":{\"134\":1}}],[\"缓存利用率低\",{\"1\":{\"134\":1}}],[\"缓存中\",{\"1\":{\"134\":1}}],[\"缓存中是\",{\"1\":{\"134\":1}}],[\"缓存中不经常访问的数据\",{\"1\":{\"134\":1}}],[\"缓存中只保留最近访问的\",{\"1\":{\"134\":1}}],[\"缓存和数据库存在不一致\",{\"1\":{\"134\":1}}],[\"缓存和数据库一致性的问题\",{\"1\":{\"134\":1}}],[\"缓存和数据库一致性\",{\"0\":{\"134\":1}}],[\"缓存\",{\"1\":{\"134\":6,\"322\":1}}],[\"缓存加数据库加垂直拆分=\",{\"1\":{\"133\":1}}],[\"缓存区是提交之前的一个临时区域\",{\"1\":{\"23\":1}}],[\"缓存区推送到远程仓库\",{\"1\":{\"22\":1}}],[\"需注意以下几点\",{\"1\":{\"914\":1}}],[\"需配置服务器安全组\",{\"1\":{\"380\":1,\"385\":1,\"856\":1}}],[\"需配合\",{\"1\":{\"134\":1}}],[\"需要从官网复制\",{\"1\":{\"1134\":1}}],[\"需要重启网卡才能生效\",{\"1\":{\"1110\":1}}],[\"需要重起\",{\"1\":{\"1012\":1}}],[\"需要一个阿里云服务器并且该服务器还安装了docker环境\",{\"1\":{\"1068\":1}}],[\"需要一个product对象\",{\"1\":{\"438\":1}}],[\"需要你设置账号密码\",{\"1\":{\"1007\":1}}],[\"需要你多收集一些目标岗位的任职要求\",{\"1\":{\"183\":1}}],[\"需要用\",{\"1\":{\"945\":1}}],[\"需要用户先上传一张图片\",{\"1\":{\"745\":1}}],[\"需要消化的内容很多\",{\"1\":{\"945\":1}}],[\"需要知道目标服务的名称\",{\"1\":{\"943\":1}}],[\"需要理解以下内容\",{\"1\":{\"935\":1}}],[\"需要手动清理\",{\"1\":{\"914\":1}}],[\"需要手动点击\",{\"1\":{\"661\":1}}],[\"需要大概的了解一下yaml的语法\",{\"1\":{\"849\":1}}],[\"需要大量拉取数据的场景\",{\"1\":{\"204\":1}}],[\"需要有数据库\",{\"1\":{\"843\":1}}],[\"需要进行安装\",{\"1\":{\"840\":1}}],[\"需要额外安装\",{\"1\":{\"840\":1}}],[\"需要单独安装\",{\"1\":{\"845\":1,\"880\":1}}],[\"需要单独为docker容器添加网卡\",{\"1\":{\"839\":1}}],[\"需要单独虚拟出整个系统\",{\"1\":{\"806\":1}}],[\"需要配置环境变量\",{\"1\":{\"824\":1}}],[\"需要编写对应的程序文件\",{\"1\":{\"818\":1}}],[\"需要将配置文件提前放在主机的这个\",{\"1\":{\"817\":1}}],[\"需要将ihttpcontextaccessor注入进去\",{\"1\":{\"363\":1}}],[\"需要提前下载好tortoisegit\",{\"1\":{\"802\":1}}],[\"需要清空git缓存\",{\"1\":{\"801\":1}}],[\"需要首先去中央服务器取得最新的版本\",{\"1\":{\"798\":1}}],[\"需要先下载\",{\"1\":{\"1110\":1}}],[\"需要先安装nodejs\",{\"1\":{\"951\":1}}],[\"需要先安装java环境\",{\"0\":{\"904\":1}}],[\"需要先了解它的执行顺序\",{\"1\":{\"744\":1}}],[\"需要先将项目拷贝到服务器上\",{\"1\":{\"539\":1}}],[\"需要说明的是环境也可以创建多个\",{\"1\":{\"740\":1}}],[\"需要选择body\",{\"1\":{\"733\":1,\"734\":2}}],[\"需要的话可以去下载源码查看\",{\"1\":{\"694\":1}}],[\"需要请自取\",{\"1\":{\"694\":1}}],[\"需要让消息接收方扫码关注该公众号\",{\"1\":{\"694\":1}}],[\"需要购买授权\",{\"1\":{\"693\":1}}],[\"需要使用\",{\"1\":{\"964\":1}}],[\"需要使用打印功能的客户端\",{\"1\":{\"689\":1}}],[\"需要使用http\",{\"1\":{\"662\":1}}],[\"需要等待一小会\",{\"1\":{\"661\":1}}],[\"需要为每个应用程序配置名称\",{\"1\":{\"661\":1}}],[\"需要修改上传文件的默认限制\",{\"1\":{\"615\":1}}],[\"需要修改server内容为\",{\"1\":{\"543\":1}}],[\"需要安装nuget包microsoft\",{\"1\":{\"629\":1}}],[\"需要安装\",{\"1\":{\"600\":1}}],[\"需要安装组件\",{\"1\":{\"375\":1}}],[\"需要自取\",{\"1\":{\"561\":1}}],[\"需要指定\",{\"1\":{\"546\":1}}],[\"需要同样方式配置实体类程序集的xml文档到swagger配置\",{\"1\":{\"483\":1}}],[\"需要转义\",{\"1\":{\"443\":1}}],[\"需要全局注册一个exception来实现\",{\"1\":{\"408\":1}}],[\"需要通过typerfilter标记在方法和控制器\",{\"1\":{\"407\":1}}],[\"需要实现iactionfilter\",{\"1\":{\"403\":1}}],[\"需要在setup项目里面自定义操作的属性栏里面的customactiondata添加上\",{\"1\":{\"692\":1}}],[\"需要在headers里面增加\",{\"1\":{\"654\":1}}],[\"需要在项目文件\",{\"1\":{\"562\":1}}],[\"需要在configureservices方法进行注入\",{\"1\":{\"347\":1}}],[\"需要在根目录新建一个文件夹\",{\"1\":{\"145\":1}}],[\"需要填写baget\",{\"1\":{\"213\":1,\"1119\":1}}],[\"需要把所有数据放到内存中\",{\"1\":{\"209\":1}}],[\"需要考虑的东西更多\",{\"1\":{\"208\":1}}],[\"需要考虑缓存和数据库一致性问题\",{\"1\":{\"134\":1}}],[\"需要综合考虑性能需要\",{\"1\":{\"208\":1}}],[\"需要去重\",{\"1\":{\"208\":1}}],[\"需要排序的字段上建立索引\",{\"1\":{\"206\":1}}],[\"需要监控data\",{\"1\":{\"204\":1}}],[\"需要以下nuget包\",{\"1\":{\"153\":1}}],[\"需要更新\",{\"1\":{\"134\":1}}],[\"需要至少哈希值的前4位\",{\"1\":{\"32\":1}}],[\"需要注意的是这种方式和指定主机的命令很像\",{\"1\":{\"815\":1}}],[\"需要注意的是cookies是包含在响应头中的\",{\"1\":{\"735\":1}}],[\"需要注意的是\",{\"1\":{\"17\":1,\"157\":1,\"743\":1}}],[\"且有需求\",{\"1\":{\"693\":1}}],[\"且实现较为麻烦\",{\"1\":{\"689\":1}}],[\"且优先级比较高\",{\"1\":{\"477\":1}}],[\"且应该保证关键消息的量不会导致性能瓶颈\",{\"1\":{\"208\":1}}],[\"且每条\",{\"1\":{\"208\":1}}],[\"且并发数受系统资源限制\",{\"1\":{\"208\":1}}],[\"且招聘的范围很广\",{\"1\":{\"194\":1}}],[\"且存在\",{\"1\":{\"134\":1}}],[\"且对数据一致性要求不高的业务场景\",{\"1\":{\"134\":1}}],[\"没想到这次安装net5这么顺利\",{\"1\":{\"563\":1}}],[\"没想到在写的过程中\",{\"1\":{\"134\":1}}],[\"没事儿\",{\"1\":{\"208\":1}}],[\"没人生产用单机模式\",{\"1\":{\"208\":1}}],[\"没准人家已经入职其他公司了\",{\"1\":{\"201\":1}}],[\"没问题\",{\"1\":{\"190\":1}}],[\"没啥说服力\",{\"1\":{\"179\":1}}],[\"没错\",{\"1\":{\"134\":1,\"177\":1}}],[\"没有交互界面\",{\"1\":{\"1021\":1}}],[\"没有界面\",{\"1\":{\"1012\":1}}],[\"没有账号的需要创建账号\",{\"1\":{\"952\":1}}],[\"没有路由指向它\",{\"1\":{\"944\":1}}],[\"没有单独创建一个jenkins的用户\",{\"1\":{\"905\":1}}],[\"没有注册的需要去官方\",{\"1\":{\"802\":1}}],[\"没有写忽视规则\",{\"1\":{\"799\":1}}],[\"没有返回值则表示没有忽视此文件或者文件夹的规则\",{\"1\":{\"799\":1}}],[\"没有问题的话就可以推送上去\",{\"1\":{\"798\":1}}],[\"没有中央服务器\",{\"1\":{\"798\":1}}],[\"没有外部依赖组件\",{\"1\":{\"595\":1}}],[\"没有发现往下走创建action实例\",{\"1\":{\"402\":1}}],[\"没有消息的时候\",{\"1\":{\"209\":1}}],[\"没有\",{\"1\":{\"208\":1,\"247\":1}}],[\"没有处理\",{\"1\":{\"208\":1}}],[\"没有合同保证的承诺都是嘴上跑火车\",{\"1\":{\"200\":1}}],[\"没有特殊情况\",{\"1\":{\"197\":1}}],[\"没有想问的了\",{\"1\":{\"191\":1}}],[\"没有内容可写\",{\"1\":{\"183\":1}}],[\"没有统一的标准\",{\"1\":{\"180\":1}}],[\"没有剩余的路由模板段或参数\",{\"1\":{\"161\":2}}],[\"没有命中\",{\"1\":{\"134\":1}}],[\"没有按照ascii排序\",{\"1\":{\"125\":1}}],[\"没有排序\",{\"1\":{\"123\":1}}],[\"没有初始化的字段会设置默认值\",{\"1\":{\"57\":1}}],[\"没有理由不学好github😄本文将详细介绍github的相关基础操作\",{\"1\":{\"10\":1}}],[\"消除了实时通信的复杂性\",{\"1\":{\"535\":1}}],[\"消费消息\",{\"1\":{\"209\":1}}],[\"消费消息时\",{\"1\":{\"208\":1}}],[\"消费端处理消息的业务逻辑保持幂等性\",{\"1\":{\"208\":1}}],[\"消费一个丢弃一个\",{\"1\":{\"208\":1}}],[\"消费一个临时\",{\"1\":{\"208\":1}}],[\"消费一条消息就往数据库里插入一条数据\",{\"1\":{\"208\":1}}],[\"消费之后不做耗时的处理\",{\"1\":{\"208\":1}}],[\"消费完毕后\",{\"1\":{\"208\":1}}],[\"消费者版镜像\",{\"1\":{\"1032\":1}}],[\"消费者在收到消息之后\",{\"1\":{\"208\":1}}],[\"消费者在消费消息的时候\",{\"1\":{\"208\":1}}],[\"消费者丢数据一般是因为采用了自动确认消息模式\",{\"1\":{\"208\":1}}],[\"消费者丢失消息\",{\"1\":{\"208\":3}}],[\"消费者接收每一条消息后都必须进行确认\",{\"1\":{\"208\":1}}],[\"消费者\",{\"1\":{\"208\":3}}],[\"消费者延时\",{\"1\":{\"134\":1}}],[\"消息发送\",{\"1\":{\"700\":1}}],[\"消息发送频率没有做限制\",{\"1\":{\"700\":1}}],[\"消息服务\",{\"1\":{\"575\":1}}],[\"消息体\",{\"1\":{\"484\":1}}],[\"消息报头\",{\"1\":{\"323\":1}}],[\"消息的重复问题\",{\"1\":{\"208\":1}}],[\"消息积压处理办法\",{\"1\":{\"208\":1}}],[\"消息需要同步到所有机器上\",{\"1\":{\"208\":1}}],[\"消息持久化\",{\"1\":{\"208\":1}}],[\"消息列表丢失消息\",{\"1\":{\"208\":1}}],[\"消息不可靠的情况可能是消息丢失\",{\"1\":{\"208\":1}}],[\"消息接收和消息确认是两个不同操作\",{\"1\":{\"208\":1}}],[\"消息\",{\"1\":{\"208\":1,\"668\":1,\"965\":1}}],[\"消息基于什么传输\",{\"1\":{\"208\":1}}],[\"消息将以循环\",{\"1\":{\"208\":1}}],[\"消息如何分发\",{\"1\":{\"208\":1}}],[\"消息队列有什么优缺点\",{\"1\":{\"208\":1}}],[\"消息队列满了以后该怎么处理\",{\"1\":{\"208\":1}}],[\"消息队列丢数据\",{\"1\":{\"208\":2}}],[\"消息队列就知道该消息被消费了\",{\"1\":{\"208\":1}}],[\"消息队列保证消息成功投递\",{\"1\":{\"134\":1}}],[\"消息队列保证可靠性\",{\"1\":{\"134\":1}}],[\"消息队列\",{\"1\":{\"134\":4,\"208\":4,\"210\":2}}],[\"延时消息\",{\"1\":{\"134\":1}}],[\"延迟消息\",{\"1\":{\"134\":1}}],[\"延迟双删\",{\"1\":{\"134\":2}}],[\"延迟双删会有什么问题\",{\"1\":{\"134\":1}}],[\"延迟时间要大于线程\",{\"1\":{\"134\":1}}],[\"延迟时间要大于\",{\"1\":{\"134\":1}}],[\"延迟时间到底设置要多久呢\",{\"1\":{\"134\":1}}],[\"延迟删除缓存\",{\"1\":{\"134\":1}}],[\"延迟删除\",{\"1\":{\"134\":1}}],[\"延迟删\",{\"1\":{\"134\":1}}],[\"休眠一会\",{\"1\":{\"134\":1}}],[\"把流量发送给它的缺省网关\",{\"1\":{\"945\":1}}],[\"把流量负载均衡给\",{\"1\":{\"939\":1}}],[\"把目标\",{\"1\":{\"944\":1}}],[\"把这个对象叫做\",{\"1\":{\"936\":1}}],[\"把入口流量分发到不同的后端service\",{\"1\":{\"931\":1}}],[\"把刚刚build出来的镜像跑起来\",{\"1\":{\"899\":1}}],[\"把发布之后的文件拷贝到我的阿里云服务器上\",{\"1\":{\"806\":1}}],[\"把文件提交到git仓库\",{\"1\":{\"754\":1}}],[\"把文件添加到仓库\",{\"1\":{\"753\":1}}],[\"把请求都隐藏掉\",{\"1\":{\"738\":1}}],[\"把信息推送到微信上\",{\"1\":{\"699\":1}}],[\"把进程的错误日志输出一个文件中\",{\"1\":{\"564\":2}}],[\"把进程的标准输出写入文件中\",{\"1\":{\"564\":2}}],[\"把系统中的所有对象粘合在一起发挥作用\",{\"1\":{\"436\":1}}],[\"把车票给我\",{\"1\":{\"432\":1}}],[\"把数据存储缓存\",{\"1\":{\"402\":1}}],[\"把白天丢的数据给他补回来\",{\"1\":{\"208\":1}}],[\"把面试官集中一下\",{\"1\":{\"201\":1}}],[\"把期望收入上浮一点\",{\"1\":{\"197\":1}}],[\"把奖金\",{\"1\":{\"197\":1}}],[\"把\",{\"1\":{\"192\":1,\"945\":1}}],[\"把缓存删掉\",{\"1\":{\"134\":1}}],[\"把相关的代码和类型进行组合\",{\"1\":{\"90\":1}}],[\"主版本\",{\"1\":{\"1130\":2}}],[\"主库连接字符串\",{\"1\":{\"1047\":1}}],[\"主流的跨主机通信方案主要有一下几种\",{\"1\":{\"928\":1}}],[\"主机就可以通过此\",{\"1\":{\"1110\":1}}],[\"主机上docker一些容器\",{\"1\":{\"862\":1}}],[\"主机更新数据\",{\"1\":{\"815\":1}}],[\"主机绝对路径\",{\"1\":{\"815\":1}}],[\"主机路径docker自动指定\",{\"1\":{\"815\":1}}],[\"主机和容器之间可以通过命令进行数据拷贝\",{\"1\":{\"812\":1}}],[\"主机端口\",{\"1\":{\"811\":1}}],[\"主机的端口9999映射到容器的端80\",{\"1\":{\"806\":1}}],[\"主题包\",{\"1\":{\"321\":1,\"968\":1}}],[\"主题订阅者模式\",{\"1\":{\"209\":1}}],[\"主打轻巧静默\",{\"1\":{\"311\":1}}],[\"主事件循环等待操作系统发出准备事件的信号\",{\"1\":{\"207\":1}}],[\"主键对象\",{\"1\":{\"523\":1}}],[\"主键只能有一个\",{\"1\":{\"206\":1}}],[\"主键\",{\"1\":{\"206\":5,\"501\":1}}],[\"主分片或者副本分片\",{\"1\":{\"204\":1}}],[\"主要包括两种情况\",{\"1\":{\"925\":1}}],[\"主要包含\",{\"1\":{\"204\":1}}],[\"主要场景\",{\"1\":{\"744\":1}}],[\"主要用来存放系统引导时使用的文件\",{\"1\":{\"1110\":1}}],[\"主要用来配置向前兼容\",{\"1\":{\"494\":1,\"498\":1}}],[\"主要用于构建windows\",{\"1\":{\"139\":1}}],[\"主要使用该包内的返回类\",{\"1\":{\"413\":1}}],[\"主要通过\",{\"1\":{\"243\":1}}],[\"主要是系统已经自带了\",{\"1\":{\"1102\":1}}],[\"主要是实操应用\",{\"1\":{\"806\":1}}],[\"主要是合并\",{\"1\":{\"798\":1}}],[\"主要是\",{\"1\":{\"798\":2}}],[\"主要是代理浏览器进行访问页面\",{\"1\":{\"322\":1}}],[\"主要是在所有的叶子结点中增加了指向下一个叶子节点的指针\",{\"1\":{\"206\":1}}],[\"主要是便于位移运算\",{\"1\":{\"43\":1}}],[\"主要利用的是系统设计的弊端\",{\"1\":{\"203\":1}}],[\"主要有两种路径处理方式\",{\"1\":{\"203\":1}}],[\"主要功能包括\",{\"1\":{\"913\":1}}],[\"主要功能\",{\"1\":{\"172\":1}}],[\"主从复制\",{\"1\":{\"134\":2}}],[\"主从复制延迟\",{\"1\":{\"134\":1}}],[\"主从库\",{\"1\":{\"134\":1}}],[\"主从库延迟\",{\"1\":{\"134\":2}}],[\"至少包括以下几部分\",{\"1\":{\"185\":1}}],[\"至于为什么选择这个\",{\"1\":{\"1102\":1}}],[\"至于工厂是怎么生产这些对象的\",{\"1\":{\"443\":1}}],[\"至于内容可以参考简历里的自我评价\",{\"1\":{\"185\":1}}],[\"至于衣着啥的\",{\"1\":{\"184\":1}}],[\"至于写队列失败和消息队列的维护成本问题\",{\"1\":{\"134\":1}}],[\"至此安装教程完成\",{\"1\":{\"1007\":1}}],[\"至此postman安装成功\",{\"1\":{\"722\":1}}],[\"至此已经完成了版本控制+swagger\",{\"1\":{\"495\":1,\"499\":1}}],[\"至此\",{\"1\":{\"134\":1,\"483\":1,\"943\":1,\"1110\":1,\"1113\":1}}],[\"给我们新创建的用户添加访问oss的权限\",{\"1\":{\"954\":1}}],[\"给运行中的容器指定一个名字\",{\"1\":{\"806\":1}}],[\"给锁加一个过期时间防止锁忘记了释放\",{\"1\":{\"209\":1}}],[\"给清理掉\",{\"1\":{\"208\":1}}],[\"给了\",{\"1\":{\"208\":1}}],[\"给协调节点\",{\"1\":{\"204\":1}}],[\"给双方留一个谈判空间\",{\"1\":{\"197\":1}}],[\"给下游的消息队列\",{\"1\":{\"134\":1}}],[\"给docker\",{\"1\":{\"8\":1}}],[\"拿公众号举个例子\",{\"1\":{\"178\":1}}],[\"拿到具体操作的数据\",{\"1\":{\"134\":1}}],[\"拿到正确的值\",{\"1\":{\"134\":1}}],[\"拿\",{\"1\":{\"134\":1}}],[\"变基到\",{\"1\":{\"798\":2}}],[\"变为后台守护进程\",{\"1\":{\"544\":1}}],[\"变量的使用场景非常广泛\",{\"1\":{\"743\":1}}],[\"变量值\",{\"1\":{\"742\":3}}],[\"变量名\",{\"1\":{\"742\":3,\"743\":4}}],[\"变量可以使我们在请求或脚本中存储和重复使用其值\",{\"1\":{\"740\":1}}],[\"变量\",{\"0\":{\"740\":1},\"1\":{\"718\":1,\"742\":1}}],[\"变量表示\",{\"1\":{\"475\":1}}],[\"变量声明方式\",{\"1\":{\"163\":1}}],[\"变得太大\",{\"1\":{\"204\":1}}],[\"变更日志\",{\"1\":{\"134\":1}}],[\"变回去\",{\"1\":{\"134\":1}}],[\"否则会显示错误\",{\"1\":{\"1082\":1}}],[\"否则会报错\",{\"1\":{\"739\":1}}],[\"否则报错\",{\"1\":{\"1079\":1}}],[\"否则代码通过编译\",{\"1\":{\"965\":1}}],[\"否则为失败\",{\"1\":{\"586\":1}}],[\"否则为什么裁你不裁别人\",{\"1\":{\"187\":1}}],[\"否则提示\",{\"1\":{\"518\":1}}],[\"否则业务变更\",{\"1\":{\"344\":1}}],[\"否则动态文件\",{\"1\":{\"207\":1}}],[\"否则查询会返回一个错误\",{\"1\":{\"205\":1}}],[\"否则重新选举一直到满足上述条件\",{\"1\":{\"204\":1}}],[\"否则返回\",{\"1\":{\"204\":1}}],[\"否则内容不好追加显示\",{\"1\":{\"202\":1}}],[\"否则难以同步\",{\"1\":{\"202\":1}}],[\"否则噼里啪啦写好几页项目\",{\"1\":{\"181\":1}}],[\"否则\",{\"1\":{\"157\":1,\"163\":1,\"983\":1}}],[\"否则还会继续投递消息给消费者\",{\"1\":{\"134\":1}}],[\"否则恢复不能进行\",{\"1\":{\"133\":1}}],[\"服务将\",{\"1\":{\"1110\":1}}],[\"服务删除可以使用如下命令之一\",{\"1\":{\"1021\":1}}],[\"服务管理主要有启动\",{\"1\":{\"1020\":1}}],[\"服务已经安装好了\",{\"1\":{\"1020\":1}}],[\"服务得知该\",{\"1\":{\"941\":1}}],[\"服务都会自动注册到集群\",{\"1\":{\"941\":1}}],[\"服务注册过程指的是在服务注册表中登记一个服务\",{\"1\":{\"941\":1}}],[\"服务注册\",{\"0\":{\"941\":1},\"1\":{\"940\":1}}],[\"服务注册与发现\",{\"1\":{\"210\":1}}],[\"服务发现实际上包含两个功能点\",{\"1\":{\"940\":1}}],[\"服务发现是一个经常让我产生困惑的主题之一\",{\"1\":{\"934\":1}}],[\"服务发现之旅\",{\"0\":{\"934\":1}}],[\"服务发现\",{\"0\":{\"933\":1,\"940\":1,\"943\":1},\"1\":{\"934\":1,\"940\":2}}],[\"服务可以只在kubernetes\",{\"1\":{\"918\":1}}],[\"服务能够相互通信\",{\"1\":{\"839\":1}}],[\"服务获取实时事件\",{\"1\":{\"809\":1}}],[\"服务本身的成本目前在以下几方面\",{\"1\":{\"704\":1}}],[\"服务号\",{\"1\":{\"696\":1}}],[\"服务告警测试\",{\"1\":{\"694\":1}}],[\"服务名及其\",{\"1\":{\"945\":1}}],[\"服务名\",{\"1\":{\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"服务类型\",{\"1\":{\"667\":1}}],[\"服务端用于推送消息\",{\"1\":{\"709\":1}}],[\"服务端返回一个响应信息\",{\"1\":{\"676\":1}}],[\"服务端返回一个结果对象\",{\"1\":{\"667\":1}}],[\"服务端地址为localhost\",{\"1\":{\"673\":1}}],[\"服务端基本配置\",{\"0\":{\"669\":1}}],[\"服务端\",{\"0\":{\"672\":1,\"675\":1,\"677\":1,\"680\":1},\"1\":{\"668\":1,\"805\":3}}],[\"服务端可以返回多个结果对象\",{\"1\":{\"667\":1}}],[\"服务端流式处理\",{\"1\":{\"676\":1}}],[\"服务端流式rpc\",{\"0\":{\"674\":1},\"1\":{\"675\":1}}],[\"服务端流式\",{\"1\":{\"667\":2}}],[\"服务端发送事件\",{\"0\":{\"533\":1}}],[\"服务提供基础类\",{\"1\":{\"573\":1}}],[\"服务提供者\",{\"1\":{\"367\":1}}],[\"服务组管理\",{\"1\":{\"564\":1}}],[\"服务的用户\",{\"1\":{\"564\":1}}],[\"服务的时候\",{\"1\":{\"546\":1}}],[\"服务作为构造函数参数添加\",{\"1\":{\"348\":1}}],[\"服务在第一次请求时被创建\",{\"1\":{\"345\":1}}],[\"服务地址\",{\"1\":{\"217\":1,\"575\":2}}],[\"服务部署\",{\"1\":{\"210\":1}}],[\"服务监控\",{\"1\":{\"210\":1}}],[\"服务路由\",{\"1\":{\"210\":1}}],[\"服务配置中心管理\",{\"1\":{\"210\":1}}],[\"服务配置与管理\",{\"1\":{\"210\":1}}],[\"服务接口调用\",{\"1\":{\"210\":1}}],[\"服务熔断器\",{\"1\":{\"210\":1}}],[\"服务熔断的作用类似于我们家用的保险丝\",{\"1\":{\"210\":1}}],[\"服务通信\",{\"1\":{\"210\":1}}],[\"服务通信和调用压力增大\",{\"1\":{\"210\":1}}],[\"服务调用\",{\"1\":{\"210\":1}}],[\"服务开发\",{\"1\":{\"210\":1}}],[\"服务降级是从整个系统的负荷情况出发和考虑的\",{\"1\":{\"210\":1}}],[\"服务之间采用轻量级通信\",{\"1\":{\"210\":1}}],[\"服务间异步通信\",{\"1\":{\"208\":1}}],[\"服务\",{\"0\":{\"548\":1,\"1020\":1},\"1\":{\"134\":1,\"322\":1,\"479\":1,\"551\":1,\"791\":1,\"795\":2,\"941\":1,\"1110\":2}}],[\"服务器发起对域名\",{\"1\":{\"943\":1}}],[\"服务器上等\",{\"1\":{\"806\":1}}],[\"服务器上公共内容时的性能\",{\"1\":{\"322\":1}}],[\"服务器就是一个可以帮助我们\",{\"1\":{\"789\":1}}],[\"服务器返回一个结果\",{\"1\":{\"676\":1}}],[\"服务器流式处理调用已完成\",{\"1\":{\"674\":1}}],[\"服务器流式处理\",{\"1\":{\"674\":1}}],[\"服务器将多个结果流式传回调用方\",{\"1\":{\"674\":1,\"679\":1}}],[\"服务器双向流调用\",{\"1\":{\"663\":1}}],[\"服务器实现此接口并运行grpc服务器以处理客户端调用\",{\"1\":{\"662\":1}}],[\"服务器是从朋友那借的\",{\"1\":{\"563\":1}}],[\"服务器具有持续的comet请求以接受实时响应\",{\"1\":{\"532\":1}}],[\"服务器hold请求\",{\"1\":{\"532\":1}}],[\"服务器之间反复不必要的往返\",{\"1\":{\"531\":1}}],[\"服务器端压缩\",{\"1\":{\"405\":1}}],[\"服务器模式架构\",{\"1\":{\"805\":1}}],[\"服务器模式\",{\"1\":{\"323\":1}}],[\"服务器回送响应\",{\"1\":{\"323\":1}}],[\"服务器和数据库费用\",{\"1\":{\"704\":1}}],[\"服务器和客户端可以无缝地相互调用方法\",{\"1\":{\"535\":1}}],[\"服务器和\",{\"1\":{\"322\":1}}],[\"服务器进行对话\",{\"1\":{\"322\":1}}],[\"服务器进行直接对话\",{\"1\":{\"322\":1}}],[\"服务器需要增多\",{\"1\":{\"210\":1}}],[\"服务器\",{\"0\":{\"562\":1},\"1\":{\"208\":1,\"322\":1,\"559\":1,\"943\":1}}],[\"服务器转发request\",{\"1\":{\"207\":1}}],[\"服务器b\",{\"1\":{\"3\":1}}],[\"服务器a\",{\"1\":{\"3\":1}}],[\"直观好看\",{\"1\":{\"810\":1}}],[\"直到执行完所有指令\",{\"1\":{\"818\":1}}],[\"直到用户登录和注册界面\",{\"1\":{\"722\":1}}],[\"直到发生值得关注的事情\",{\"1\":{\"532\":1}}],[\"直到今天手机电池的续航能力依然是个问题\",{\"1\":{\"433\":1}}],[\"直到成功\",{\"1\":{\"134\":1}}],[\"直接使用root\",{\"1\":{\"1104\":1}}],[\"直接列出结果\",{\"1\":{\"1074\":1}}],[\"直接将断点跳转到此处\",{\"1\":{\"977\":1}}],[\"直接让断点运行到此处\",{\"1\":{\"976\":1}}],[\"直接阅读服务发现部分\",{\"1\":{\"934\":1}}],[\"直接在三层上实现跨主机网络\",{\"1\":{\"928\":1}}],[\"直接在启动容器的时候挂载\",{\"1\":{\"815\":1}}],[\"直接经过veth对转发即可\",{\"1\":{\"927\":1}}],[\"直接上\",{\"1\":{\"865\":1}}],[\"直接删除即可\",{\"1\":{\"848\":1}}],[\"直接下载对应文件即可\",{\"1\":{\"846\":1}}],[\"直接下一步\",{\"1\":{\"802\":2,\"1104\":1}}],[\"直接执行命令即可\",{\"1\":{\"817\":1}}],[\"直接根据镜像centos以交互模式启动容器\",{\"1\":{\"812\":1}}],[\"直接通过镜像启动容器\",{\"1\":{\"805\":1}}],[\"直接勾兑该选项也可以设置为中文\",{\"1\":{\"802\":1}}],[\"直接指定\",{\"1\":{\"599\":1}}],[\"直接调用接口应该报错\",{\"1\":{\"563\":1}}],[\"直接限制了该接口不允许一个用户在2秒内请求多次\",{\"1\":{\"424\":1}}],[\"直接引用我自己简单封装的一个nuget包\",{\"1\":{\"377\":1}}],[\"直接看代码\",{\"1\":{\"373\":1}}],[\"直接一条sql就可以获取到我想要的数据\",{\"1\":{\"342\":1}}],[\"直接可以设置状态栏透明或者是亚力克之类\",{\"1\":{\"275\":1}}],[\"直接均匀轮询写入临时建立好的\",{\"1\":{\"208\":1}}],[\"直接进行匹配任务\",{\"1\":{\"167\":1}}],[\"直接放到消息队列中\",{\"1\":{\"134\":1}}],[\"直接操作数据库即可\",{\"1\":{\"134\":1}}],[\"直接赋值\",{\"1\":{\"128\":1}}],[\"直接开始创建项目\",{\"1\":{\"8\":1}}],[\"现代高性能轻量级\",{\"1\":{\"663\":1}}],[\"现代应用程序的很多功能依赖于实时通信技术\",{\"1\":{\"530\":1}}],[\"现场拍卖\",{\"1\":{\"530\":1}}],[\"现如今大部分服务都会有用户输入\",{\"1\":{\"215\":1}}],[\"现实情况往往没有想的这么简单\",{\"1\":{\"134\":1}}],[\"现在来测试一下虚拟机是否能访问外网以及虚拟机和主机的相互访问\",{\"1\":{\"1110\":1}}],[\"现在为了便于管理\",{\"1\":{\"1110\":1}}],[\"现在分配给容器的ip是按照预先设置的子网范围进行分配的\",{\"1\":{\"843\":1}}],[\"现在把entrypoint换成cmd试试\",{\"1\":{\"838\":1}}],[\"现在不管在哪个容器中变更数据\",{\"1\":{\"816\":1}}],[\"现在已经将容器内的目录挂载到主机上\",{\"1\":{\"815\":1}}],[\"现在如果将容器删除\",{\"1\":{\"812\":1}}],[\"现在通过centos镜像启动了一个容器\",{\"1\":{\"812\":1}}],[\"现在只是在容器内启动了一个nginx\",{\"1\":{\"811\":1}}],[\"现在本地存储库提交然后再推送到远程服务器\",{\"1\":{\"798\":1}}],[\"现在再使用\",{\"1\":{\"786\":1}}],[\"现在回退到上一个版本\",{\"1\":{\"771\":1}}],[\"现在让我们对比一下转换前后的结果\",{\"1\":{\"683\":1}}],[\"现在比较流行的测试框架包括微软的\",{\"1\":{\"595\":1}}],[\"现在我们就可以使用\",{\"1\":{\"779\":1}}],[\"现在我们就知道了\",{\"1\":{\"778\":1}}],[\"现在我们需要创建公开密钥所需的ssh\",{\"1\":{\"19\":1}}],[\"现在我项目使用的\",{\"1\":{\"561\":1}}],[\"现在正好有个基于\",{\"1\":{\"543\":1}}],[\"现在dotnetcore如果在控制器标识\",{\"1\":{\"472\":1}}],[\"现在有了ioc了\",{\"1\":{\"436\":1}}],[\"现在你非要加入个消息队列进去\",{\"1\":{\"208\":1}}],[\"现在想不明白\",{\"1\":{\"190\":1}}],[\"现在互联网公司普遍加班\",{\"1\":{\"188\":1}}],[\"现在互联网领域中\",{\"1\":{\"10\":1}}],[\"现在\",{\"1\":{\"173\":1,\"205\":1,\"783\":1}}],[\"现在要放到缓存中读取\",{\"1\":{\"134\":1}}],[\"现在笔者使用的macos系统\",{\"1\":{\"16\":1}}],[\"现在几乎整个互联网的开发者都将版本管理工具github作为版本控制的首选\",{\"1\":{\"10\":1}}],[\"尽管\",{\"1\":{\"776\":1}}],[\"尽管http\",{\"1\":{\"665\":1}}],[\"尽管这样的事情屡见不鲜\",{\"1\":{\"433\":1}}],[\"尽管访问属性和字段的方式是相同的\",{\"1\":{\"59\":1}}],[\"尽量避免join查询\",{\"1\":{\"206\":1}}],[\"尽量使用ssd\",{\"1\":{\"204\":1}}],[\"尽量别超过\",{\"1\":{\"183\":1}}],[\"尽可能使用散列表\",{\"1\":{\"209\":1}}],[\"尽可能降低不一致发生的概率\",{\"1\":{\"134\":1}}],[\"尽可能地去做\",{\"1\":{\"134\":1}}],[\"想一起执行这批用例\",{\"1\":{\"737\":1}}],[\"想一下\",{\"1\":{\"134\":1}}],[\"想知道heap够不够\",{\"1\":{\"204\":1}}],[\"想薪酬谈的好\",{\"1\":{\"196\":1}}],[\"想转行当程序员的\",{\"1\":{\"194\":1}}],[\"想的时候要结合自己的兴趣和特长\",{\"1\":{\"190\":1}}],[\"想去更大的公司发展\",{\"1\":{\"187\":1}}],[\"想办法让你的简历打动用户\",{\"1\":{\"183\":1}}],[\"想写好简历\",{\"1\":{\"183\":1}}],[\"想写好实则不容易\",{\"1\":{\"176\":1}}],[\"想要连接到\",{\"1\":{\"943\":1}}],[\"想要了解这个功能\",{\"1\":{\"744\":1}}],[\"想要使用变量中的值只需俩个步骤\",{\"1\":{\"740\":1}}],[\"想要使用它就必须先下载客户端再安装使用\",{\"1\":{\"721\":1}}],[\"想要同时使用\",{\"1\":{\"597\":1}}],[\"想要跨平台需要借助第三方\",{\"1\":{\"139\":1}}],[\"想要提高应用的性能\",{\"1\":{\"134\":1}}],[\"想要保证数据库和缓存一致性\",{\"1\":{\"134\":1}}],[\"想要缓存利用率\",{\"1\":{\"134\":1}}],[\"失败了\",{\"1\":{\"205\":1,\"209\":1}}],[\"失败场景下要保证一致性\",{\"1\":{\"134\":1}}],[\"失败后立即重试的问题在于\",{\"1\":{\"134\":1}}],[\"失败\",{\"1\":{\"134\":1}}],[\"失效时\",{\"1\":{\"209\":1}}],[\"失效时间\",{\"1\":{\"134\":1}}],[\"失效\",{\"1\":{\"134\":2}}],[\"好吧\",{\"1\":{\"868\":1}}],[\"好脑袋\",{\"1\":{\"784\":1}}],[\"好想尽快体验vs2022\",{\"1\":{\"710\":1}}],[\"好好学习天天向上\",{\"1\":{\"672\":1}}],[\"好好准备你的自我介绍吧\",{\"1\":{\"185\":1}}],[\"好好准备\",{\"1\":{\"185\":1}}],[\"好像这么回答会证明自己能吃苦\",{\"1\":{\"188\":1}}],[\"好在哪\",{\"1\":{\"186\":1}}],[\"好难\",{\"1\":{\"183\":1}}],[\"好了\",{\"1\":{\"134\":1,\"812\":1,\"816\":1}}],[\"好\",{\"1\":{\"134\":1,\"190\":1}}],[\"通了\",{\"1\":{\"1111\":1}}],[\"通百度\",{\"1\":{\"1111\":1}}],[\"通俗易懂这篇文章中已经详细说明\",{\"1\":{\"812\":1}}],[\"通俗一点理解就是操作日志\",{\"1\":{\"809\":1}}],[\"通俗的来讲\",{\"1\":{\"210\":1}}],[\"通俗的说法\",{\"1\":{\"202\":1}}],[\"通俗的解释\",{\"1\":{\"202\":1}}],[\"通道\",{\"1\":{\"696\":1,\"697\":1}}],[\"通信方式\",{\"1\":{\"928\":1}}],[\"通信方的身份有可能遭遇伪装\",{\"1\":{\"323\":1}}],[\"通信双方必须建立一个连接\",{\"1\":{\"327\":1}}],[\"通信\",{\"1\":{\"325\":2,\"805\":1,\"937\":1}}],[\"通信可以涉及简单的数据传送\",{\"1\":{\"210\":1}}],[\"通用内核\",{\"1\":{\"253\":1}}],[\"通用语言\",{\"1\":{\"210\":1}}],[\"通\",{\"1\":{\"204\":1}}],[\"通常可能为最终\",{\"1\":{\"1129\":1}}],[\"通常指可用于下一计划版本的功能完整的版本\",{\"1\":{\"1129\":1}}],[\"通常在复制目录时使用\",{\"1\":{\"1079\":1}}],[\"通常称之为集群\",{\"1\":{\"941\":1}}],[\"通常与\",{\"1\":{\"918\":1}}],[\"通常的做法都是通过自定义网络方式来达到这个目的\",{\"1\":{\"842\":1}}],[\"通常\",{\"1\":{\"835\":1}}],[\"通常需要进入到容器内部\",{\"1\":{\"823\":1}}],[\"通常手动有两种方式\",{\"1\":{\"812\":1}}],[\"通常社区版足够用了\",{\"1\":{\"804\":1}}],[\"通常都是放置按钮或者链接来实现\",{\"1\":{\"693\":1}}],[\"通常是\",{\"1\":{\"935\":1}}],[\"通常是用三部分组成\",{\"1\":{\"484\":1}}],[\"通常是要比读数据库的时间更长的\",{\"1\":{\"134\":1}}],[\"通常我们都不会着玩\",{\"1\":{\"786\":1}}],[\"通常我们在出门前会做一些准备避免这种事情的发生\",{\"1\":{\"433\":1}}],[\"通常我在看简历的时候\",{\"1\":{\"177\":1}}],[\"通常会是需要对model加工处理才用也适合做缓存\",{\"1\":{\"402\":1}}],[\"通常会采用\",{\"1\":{\"134\":1}}],[\"通常用于在制品和试验品\",{\"1\":{\"1129\":1}}],[\"通常用于验证request合不合法\",{\"1\":{\"401\":1}}],[\"通常用在大型企业或者分布式机构中\",{\"1\":{\"322\":1}}],[\"通常将这些反向代理称为服务器加速\",{\"1\":{\"322\":1}}],[\"通常每个接收者都包含对另一个接收者的引用\",{\"1\":{\"202\":1}}],[\"通过wget下载\",{\"1\":{\"1134\":1}}],[\"通过虚拟机\",{\"1\":{\"1110\":1}}],[\"通过主机所在网络来访问外网\",{\"1\":{\"1110\":1}}],[\"通过主界面我们看到了下面这个几个菜单\",{\"1\":{\"661\":1}}],[\"通过指令操作\",{\"1\":{\"1110\":1}}],[\"通过cmd查询本机电脑的ip以及子网掩码等\",{\"1\":{\"1107\":1}}],[\"通过cron表达式配置自动同步时间\",{\"1\":{\"233\":1}}],[\"通过github的action来\",{\"1\":{\"1068\":1}}],[\"通过开源\",{\"1\":{\"1009\":1}}],[\"通过当前执行范文内引用的名称来跟踪对象\",{\"1\":{\"981\":1}}],[\"通过局部窗口\",{\"1\":{\"978\":1}}],[\"通过按住ctrl键转换为将此处作为下一条要执行的语句\",{\"1\":{\"977\":1}}],[\"通过鼠标悬停在当前行的代码上时\",{\"1\":{\"976\":1,\"977\":1}}],[\"通过点击鼠标\",{\"0\":{\"976\":1}}],[\"通过与\",{\"1\":{\"931\":1}}],[\"通过flannel\",{\"1\":{\"928\":1}}],[\"通过fido可以非常简单方便的获取原汁原味的原版镜像\",{\"1\":{\"270\":1}}],[\"通过查看路由表\",{\"1\":{\"925\":1}}],[\"通过网桥可以将\",{\"1\":{\"916\":1}}],[\"通过二者的配合来实现整个\",{\"1\":{\"916\":1}}],[\"通过定义role\",{\"1\":{\"914\":1}}],[\"通过我们的shell配置\",{\"1\":{\"902\":1}}],[\"通过输出信息我们可以看到jenkins默认的工作目录是我们配置的目录\",{\"1\":{\"902\":1}}],[\"通过在指定的build\",{\"1\":{\"901\":1}}],[\"通过在将更改传递给整个基础架构之前将更改缓慢地推广到一小部分用户来完成的\",{\"1\":{\"210\":1}}],[\"通过编写shell脚本来部署\",{\"1\":{\"899\":1}}],[\"通过编写接口来实现自定义菜单配置\",{\"1\":{\"712\":1}}],[\"通过执行shell脚本来来构建\",{\"1\":{\"899\":1}}],[\"通过执行如下命令\",{\"1\":{\"777\":1}}],[\"通过jenkins在服务器部署一个简单的\",{\"1\":{\"894\":1}}],[\"通过构造函数注入之后就可以直接用啦\",{\"1\":{\"851\":1}}],[\"通过run\",{\"1\":{\"837\":1}}],[\"通过regex\",{\"1\":{\"163\":1}}],[\"通过arg指令定义了一个变量\",{\"1\":{\"831\":1}}],[\"通过action过滤器实现对请求日志的记录\",{\"1\":{\"420\":1}}],[\"通过action过滤器实现对一些常见的请求入参的校验\",{\"1\":{\"417\":1}}],[\"通过挂载之后\",{\"1\":{\"817\":1}}],[\"通过上图可以看到\",{\"1\":{\"815\":1}}],[\"通过上图演示可以看到\",{\"1\":{\"815\":1}}],[\"通过上面的操作\",{\"1\":{\"736\":1}}],[\"通过如下操作\",{\"1\":{\"781\":1}}],[\"通过命令形式\",{\"1\":{\"812\":1}}],[\"通过命令查看\",{\"1\":{\"788\":1}}],[\"通过命令查看对应\",{\"1\":{\"780\":1}}],[\"通过命令我们也是可以查看区别的\",{\"1\":{\"780\":1}}],[\"通过下标获取列表中某个元素\",{\"1\":{\"746\":1}}],[\"通过下面该代码来讲解类中常用的概念\",{\"1\":{\"48\":1}}],[\"通过打印响应的日志\",{\"1\":{\"738\":1}}],[\"通过配置isdebug可以配置是否以debug模式运行\",{\"1\":{\"710\":1}}],[\"通过测试号我可以可以得到我们想要的微信公众号参数信息\",{\"1\":{\"710\":1}}],[\"通过调用该接口实现自定义菜单配置\",{\"1\":{\"712\":1}}],[\"通过调用api接口进行消息推送\",{\"1\":{\"706\":1}}],[\"通过调用api接口实时推送消息到微信公众号发送给用户\",{\"1\":{\"702\":1}}],[\"通过调用者的参数获取输入的数据\",{\"1\":{\"51\":1}}],[\"通过这几个技巧\",{\"1\":{\"872\":1}}],[\"通过这种方式限定是某个容器内的数据文件\",{\"1\":{\"812\":1}}],[\"通过这些配置我们可以获取accesstoken\",{\"1\":{\"710\":1}}],[\"通过这次演示才发现还可以推荐用户\",{\"1\":{\"694\":1}}],[\"通过这个功能\",{\"1\":{\"738\":1}}],[\"通过这个collection就可以满足我们的上面说的需求\",{\"1\":{\"736\":1}}],[\"通过这个结果我们可以得出来一个测试类内并不是并行执行的\",{\"1\":{\"588\":1}}],[\"通过这个分析器你可以找到比预期慢的查询\",{\"1\":{\"205\":1}}],[\"通过流的方式添加用户并返回用户id\",{\"1\":{\"679\":1}}],[\"通过post形式去请求该接口\",{\"1\":{\"694\":1}}],[\"通过postman访问\",{\"0\":{\"555\":1}}],[\"通过protocol\",{\"1\":{\"663\":1}}],[\"通过浏览器访问我们地址\",{\"1\":{\"661\":1}}],[\"通过浏览器访问地址\",{\"1\":{\"219\":1,\"554\":1}}],[\"通过描述有关如何修改项的一组说明\",{\"1\":{\"629\":1}}],[\"通过描述对象和数据库之间映射的元数据\",{\"1\":{\"529\":1}}],[\"通过一个用户的添加\",{\"1\":{\"600\":1}}],[\"通过一个简单的项目\",{\"1\":{\"600\":1}}],[\"通过一些特性\",{\"1\":{\"484\":1}}],[\"通过依赖注入获取iuserservice服务\",{\"1\":{\"587\":1}}],[\"通过依赖注入配置应用程序\",{\"1\":{\"502\":1}}],[\"通过将\",{\"1\":{\"930\":1}}],[\"通过将容器内的目录挂载到主机上面\",{\"1\":{\"814\":1}}],[\"通过将值保存在变量中\",{\"1\":{\"740\":1}}],[\"通过将插件文件\",{\"1\":{\"571\":1}}],[\"通过将大型模型划分为不同的有界上下文并明确其相互关系来处理大型模型\",{\"1\":{\"210\":1}}],[\"通过vs2019\",{\"1\":{\"710\":1}}],[\"通过vs2019创建一个\",{\"1\":{\"661\":1}}],[\"通过vs2019发布我们的项目\",{\"1\":{\"561\":1}}],[\"通过vim命令修改创建好的supervisord\",{\"1\":{\"546\":1}}],[\"通过vim编辑器修改内容如下\",{\"1\":{\"22\":1}}],[\"通过hyper\",{\"1\":{\"537\":1}}],[\"通过orm可以自动对试题对象与数据库中的table进行字段与属性的映射\",{\"1\":{\"529\":1}}],[\"通过占位符形式提供额外的参数\",{\"1\":{\"512\":1}}],[\"通过参数化查询\",{\"1\":{\"512\":1}}],[\"通过设置取消显示警告\",{\"1\":{\"483\":1}}],[\"通过设置gateway\",{\"1\":{\"204\":1}}],[\"通过该sdk可以帮助我们省下不少事情来让我们少加班\",{\"1\":{\"710\":1}}],[\"通过该界面\",{\"1\":{\"483\":1}}],[\"通过该方法可以实现对请求类验证是否满足要求并做出相应的响应\",{\"1\":{\"476\":1}}],[\"通过添加adduserverifyattribute来实现\",{\"1\":{\"475\":1}}],[\"通过验证特性可为属性增加验证规则\",{\"1\":{\"473\":1}}],[\"通过自己本机的网络连接地方选择可以正常上网的网卡\",{\"1\":{\"1013\":1}}],[\"通过自定义网络方式\",{\"0\":{\"843\":1}}],[\"通过自定义通道调用云服务实现\",{\"1\":{\"697\":1}}],[\"通过自定义模型绑定将token解析后绑定到请求模型\",{\"1\":{\"472\":1}}],[\"通过自动以标头和通过接受标头\",{\"1\":{\"634\":1}}],[\"通过自由选配丰富的插件\",{\"1\":{\"290\":1}}],[\"通过请求头传递后端自定义的一种token\",{\"1\":{\"472\":1}}],[\"通过请求地址作为key\",{\"1\":{\"423\":1}}],[\"通过bytearraymodelbinder\",{\"1\":{\"471\":1}}],[\"通过反射批量添加etc的操作\",{\"1\":{\"502\":1}}],[\"通过反射我们可以获取类的所有信息\",{\"1\":{\"443\":1}}],[\"通过反射能够得到\",{\"1\":{\"88\":1}}],[\"通过借助内存缓存来存储\",{\"1\":{\"428\":1}}],[\"通过返回过滤器实现返回类的处理\",{\"1\":{\"415\":1}}],[\"通过异常过滤器实现业务异常捕捉\",{\"1\":{\"412\":1}}],[\"通过typefilterattribute实例化的actionfilter\",{\"1\":{\"410\":1}}],[\"通过额外的信息来影响目标对象的行为\",{\"1\":{\"399\":1}}],[\"通过代码清除缓存\",{\"1\":{\"376\":1}}],[\"通过代码控制缓存过期\",{\"0\":{\"376\":1}}],[\"通过代理服务器\",{\"1\":{\"154\":1}}],[\"通过轮询监控文件变化\",{\"1\":{\"375\":1}}],[\"通过slice\",{\"1\":{\"746\":1}}],[\"通过sql添加\",{\"0\":{\"528\":1}}],[\"通过sqlserver来缓存的场景比较少\",{\"1\":{\"379\":1,\"384\":1}}],[\"通过startup类的configureservice方法中的adddbcontext将efcore添加到依赖注入容器\",{\"1\":{\"502\":1}}],[\"通过stars\",{\"1\":{\"331\":1}}],[\"通过securitycontext配置\",{\"1\":{\"914\":1}}],[\"通过servicefilter从容器中检索你的actionfile\",{\"1\":{\"409\":1}}],[\"通过session存储用户信息\",{\"0\":{\"368\":1}}],[\"通过in关键字搜索\",{\"1\":{\"331\":1}}],[\"通过使用\",{\"1\":{\"325\":1}}],[\"通过提供一个\",{\"1\":{\"322\":1}}],[\"通过docker0进行转发\",{\"1\":{\"840\":1}}],[\"通过docker\",{\"0\":{\"886\":1},\"1\":{\"806\":1,\"816\":1,\"817\":1,\"836\":1,\"837\":1,\"839\":1,\"852\":1}}],[\"通过docker部署\",{\"0\":{\"883\":1},\"1\":{\"661\":1}}],[\"通过docker客户端查看我们已经生成的镜像\",{\"1\":{\"554\":1}}],[\"通过docker生成yapi服务\",{\"1\":{\"217\":1}}],[\"通过di容器\",{\"1\":{\"156\":1}}],[\"通过yapi\",{\"1\":{\"216\":1}}],[\"通过简单的了解\",{\"1\":{\"215\":1}}],[\"通过不断达到边界然后不断地回收回到边界以下\",{\"1\":{\"209\":1}}],[\"通过加锁或者队列来控制读数据库写缓存的线程数量\",{\"1\":{\"209\":1}}],[\"通过元数据\",{\"1\":{\"208\":1}}],[\"通过路由可实现多消费的功能\",{\"1\":{\"208\":1}}],[\"通过路由约束\",{\"1\":{\"162\":1}}],[\"通过比较mysql和mongodb\",{\"1\":{\"205\":1}}],[\"通过对词典中单词前缀和后缀的重复利用\",{\"1\":{\"204\":1}}],[\"通过对这个参数的分析来进行格式化输出\",{\"1\":{\"203\":1}}],[\"通过对开源项目提出issue\",{\"1\":{\"10\":1}}],[\"通过实现微软官方的microsoft\",{\"1\":{\"370\":1}}],[\"通过实现\",{\"1\":{\"203\":1}}],[\"通过实现irouteconstraint接口来创建自定义路由约束\",{\"1\":{\"164\":1}}],[\"通过了还拖好久才通知\",{\"1\":{\"201\":1}}],[\"通过=设置默认值\",{\"1\":{\"159\":1}}],[\"通过访问地址\",{\"1\":{\"151\":2,\"212\":1,\"1118\":1}}],[\"通过访问地址加\",{\"1\":{\"150\":1}}],[\"通过同步变更日志的方式\",{\"1\":{\"134\":1}}],[\"通过类似简单编码的形式\",{\"1\":{\"817\":1}}],[\"通过类的fullname类获得type对象\",{\"1\":{\"98\":1}}],[\"通过类获得对应的type\",{\"1\":{\"98\":1}}],[\"通过\",{\"0\":{\"842\":1},\"1\":{\"98\":1,\"157\":1,\"159\":2,\"209\":1,\"243\":1,\"253\":1,\"338\":1,\"546\":1,\"746\":1,\"752\":1,\"811\":1,\"842\":1,\"869\":1,\"871\":1,\"1111\":1}}],[\"通过此类能够载入操纵一个程序集\",{\"1\":{\"88\":1}}],[\"通过图表的形式查看提交的内容\",{\"1\":{\"26\":1}}],[\"通过ls查看已经有了readme\",{\"1\":{\"22\":1}}],[\"通过外部访问服务\",{\"1\":{\"8\":1}}],[\"很好用\",{\"1\":{\"806\":1}}],[\"很方便的就将自己的项目打包然后运行\",{\"1\":{\"806\":1}}],[\"很有用\",{\"1\":{\"322\":1}}],[\"很有可能是先查询数据库\",{\"1\":{\"134\":1}}],[\"很显然这个时候我们的工作区和暂存区又不一致了\",{\"1\":{\"780\":1}}],[\"很显然\",{\"1\":{\"215\":1}}],[\"很相似\",{\"1\":{\"212\":1,\"1118\":1}}],[\"很难找到与产生的错误相关的每一项服务\",{\"1\":{\"210\":1}}],[\"很早之前我特别不理解\",{\"1\":{\"195\":1}}],[\"很多场景容器都是后台运行\",{\"1\":{\"811\":1}}],[\"很多东西和\",{\"1\":{\"597\":1}}],[\"很多公司的月薪分为基本工资和绩效工资两部分\",{\"1\":{\"199\":1}}],[\"很多公司有规定\",{\"1\":{\"197\":1}}],[\"很多人坚持不住\",{\"1\":{\"198\":1}}],[\"很多人薪酬谈不好\",{\"1\":{\"196\":1}}],[\"很多一致性问题\",{\"1\":{\"134\":1}}],[\"很多时候可能出现乱码情况\",{\"1\":{\"971\":1}}],[\"很多时候需要修改配置文件\",{\"1\":{\"817\":1}}],[\"很多时候不得不针对输入进行敏感词的检测\",{\"1\":{\"215\":1}}],[\"很多时候\",{\"1\":{\"134\":1,\"815\":1}}],[\"很可能会超过引入缓存带来的性能提升\",{\"1\":{\"134\":1}}],[\"很低\",{\"1\":{\"134\":1}}],[\"读起来并不困难\",{\"1\":{\"865\":1}}],[\"读json\",{\"1\":{\"478\":1}}],[\"读\",{\"1\":{\"371\":1}}],[\"读过\",{\"1\":{\"180\":1}}],[\"读取文件进行参数化\",{\"1\":{\"720\":1}}],[\"读取从服务流式处理的消息\",{\"1\":{\"674\":1}}],[\"读取本地配置\",{\"1\":{\"661\":1}}],[\"读取插件\",{\"1\":{\"574\":1,\"576\":1}}],[\"读取请求体设置可以重复读取\",{\"1\":{\"418\":1,\"421\":1}}],[\"读取到body后\",{\"1\":{\"402\":2,\"418\":2,\"421\":2}}],[\"读取配置的顺序是后来者居上模式\",{\"1\":{\"389\":1}}],[\"读取快\",{\"1\":{\"343\":1}}],[\"读取慢\",{\"1\":{\"343\":1}}],[\"读取及评估配置和维持\",{\"1\":{\"207\":1}}],[\"读取url\",{\"1\":{\"161\":2}}],[\"读取数据库\",{\"1\":{\"134\":2}}],[\"读请求\",{\"1\":{\"134\":1}}],[\"读请求先读缓存\",{\"1\":{\"134\":1}}],[\"读+写\",{\"1\":{\"134\":1}}],[\"读缓存\",{\"1\":{\"134\":2}}],[\"读写分离\",{\"1\":{\"134\":3,\"206\":1}}],[\"读写\",{\"1\":{\"134\":3}}],[\"种网络工作模式\",{\"1\":{\"1110\":1}}],[\"种子\",{\"1\":{\"502\":1}}],[\"种子数据设置\",{\"1\":{\"502\":1}}],[\"种\",{\"1\":{\"134\":1}}],[\"种方案我们一个个来分析\",{\"1\":{\"134\":1}}],[\"由eth0出口进入物理网路发送给目的node\",{\"1\":{\"928\":1}}],[\"由kubernetes自动创建\",{\"1\":{\"914\":1}}],[\"由各类jenkins\",{\"1\":{\"879\":1}}],[\"由生态君整合成一篇便于阅读\",{\"1\":{\"875\":1}}],[\"由服务器端返回\",{\"1\":{\"691\":1}}],[\"由服务器端返回告诉客户端控件\",{\"1\":{\"691\":1}}],[\"由我们对对象的控制转变成了spring\",{\"1\":{\"444\":1}}],[\"由ioc容器控制对象的创建\",{\"1\":{\"444\":1}}],[\"由浏览器来解析\",{\"1\":{\"328\":1}}],[\"由请求和响应构成\",{\"1\":{\"323\":1}}],[\"由\",{\"1\":{\"250\":1,\"927\":1}}],[\"由应用层来处理具体的冲突\",{\"1\":{\"204\":1}}],[\"由约束\",{\"1\":{\"162\":1}}],[\"由消费者来操作缓存\",{\"1\":{\"134\":1}}],[\"由此可见\",{\"1\":{\"134\":1}}],[\"由于笔记本可以携带\",{\"1\":{\"1111\":1}}],[\"由于主机网卡有网络地址转换功能\",{\"1\":{\"1110\":1}}],[\"由于上一步选择将虚拟磁盘存储为单个文件\",{\"1\":{\"1110\":1}}],[\"由于sideeffectfct\",{\"1\":{\"984\":1}}],[\"由于这些设置包含在基本代码的文件中\",{\"1\":{\"955\":1}}],[\"由于它们关联在同一个\",{\"1\":{\"927\":1}}],[\"由于容器和\",{\"1\":{\"926\":1}}],[\"由于不涉及跨节点访问\",{\"1\":{\"925\":1}}],[\"由于其本身是物理机的网卡ip\",{\"1\":{\"919\":1}}],[\"由于我的物理机都是windows\",{\"1\":{\"880\":1}}],[\"由于之前拉取过redis的镜像\",{\"1\":{\"817\":1}}],[\"由于终端阻塞\",{\"1\":{\"811\":1}}],[\"由于运行\",{\"1\":{\"563\":1}}],[\"由于引进了中间位置的\",{\"1\":{\"436\":1}}],[\"由于\",{\"1\":{\"208\":1,\"249\":1,\"927\":1}}],[\"由于web\",{\"1\":{\"207\":1}}],[\"由于适配器模式和代理模式都是封装真正执行动作的类\",{\"1\":{\"202\":1}}],[\"由于程序集在编译后并不一定会生成单个文件\",{\"1\":{\"90\":1}}],[\"由于该类继承自\",{\"1\":{\"46\":1}}],[\"得益于它能方便的打包成包含静态链接的二进制文件\",{\"1\":{\"871\":1}}],[\"得使用专业的消息队列如\",{\"1\":{\"209\":1}}],[\"得恢复原先部署的架构\",{\"1\":{\"208\":1}}],[\"得不偿失的事千万别干\",{\"1\":{\"201\":1}}],[\"得出一个值\",{\"1\":{\"134\":1}}],[\"得到了\",{\"1\":{\"944\":1}}],[\"得到了一个目标\",{\"1\":{\"943\":1}}],[\"得到一个\",{\"1\":{\"941\":1}}],[\"得到图片流\",{\"1\":{\"687\":1}}],[\"得到\",{\"1\":{\"443\":2}}],[\"得到的对象是工厂生成的对象\",{\"1\":{\"443\":1}}],[\"得到该文档属于哪个分片\",{\"1\":{\"204\":1}}],[\"得到旧值\",{\"1\":{\"134\":2}}],[\"得到指定模块\",{\"1\":{\"118\":1}}],[\"得到所有公共成员\",{\"1\":{\"98\":1}}],[\"浪费缓存资源\",{\"1\":{\"134\":1}}],[\"除复制文件的内容外\",{\"1\":{\"1079\":1}}],[\"除以上日志之外\",{\"1\":{\"446\":1}}],[\"除非出现重大\",{\"1\":{\"1129\":1}}],[\"除非你需要对客户端做一些设置\",{\"1\":{\"692\":1}}],[\"除非你用到了下面这些功能\",{\"1\":{\"344\":1}}],[\"除非redirect\",{\"1\":{\"564\":2}}],[\"除非查询设置了\",{\"1\":{\"205\":1}}],[\"除非数据量特别少\",{\"1\":{\"204\":1}}],[\"除此之外海外\",{\"1\":{\"247\":1}}],[\"除此之外\",{\"1\":{\"134\":1}}],[\"除了上面这些还有其他内置特性\",{\"1\":{\"474\":1}}],[\"除了软件中必须包含许可声明外没有任何限制\",{\"1\":{\"253\":1}}],[\"除了压价\",{\"1\":{\"198\":1}}],[\"除了问你的解决思路\",{\"1\":{\"192\":1}}],[\"除了公司选择你\",{\"1\":{\"191\":1}}],[\"除了重新请求外\",{\"1\":{\"175\":1}}],[\"除了操作失败问题\",{\"1\":{\"134\":1}}],[\"除了c\",{\"1\":{\"82\":1}}],[\"采用这种方式\",{\"1\":{\"931\":1}}],[\"采用这种方案\",{\"1\":{\"134\":1}}],[\"采用这种服务类型\",{\"1\":{\"930\":1}}],[\"采用efcore作为orm框架\",{\"1\":{\"501\":1}}],[\"采用四次挥手来关闭一个连接\",{\"1\":{\"327\":1}}],[\"采用三次握手来建立一个连接\",{\"1\":{\"327\":1}}],[\"采用二进制的格式传输数据\",{\"1\":{\"326\":1}}],[\"采用tls\",{\"1\":{\"288\":1}}],[\"采用rust语言编写\",{\"1\":{\"288\":1}}],[\"采用的协议\",{\"1\":{\"251\":1}}],[\"采用了\",{\"1\":{\"247\":1}}],[\"采用单线程来异步非阻塞处理请求\",{\"1\":{\"207\":1}}],[\"采用\",{\"1\":{\"134\":1,\"1110\":1}}],[\"错过了就错过了\",{\"1\":{\"198\":1}}],[\"错乱\",{\"1\":{\"134\":1}}],[\"错误了好多次\",{\"1\":{\"1070\":1}}],[\"错误日志\",{\"1\":{\"1012\":1}}],[\"错误日志轮转备份的数量\",{\"1\":{\"564\":2}}],[\"错误是我们必须处理的\",{\"1\":{\"965\":1}}],[\"错误列表\",{\"1\":{\"965\":1}}],[\"错误log文件达到多少后自动进行轮转\",{\"1\":{\"564\":2}}],[\"错误信息\",{\"1\":{\"477\":1,\"573\":1}}],[\"错误处理信息\",{\"1\":{\"210\":1}}],[\"错误\",{\"1\":{\"128\":1,\"447\":1}}],[\"虽然dapper用起来比较简单方便\",{\"1\":{\"1047\":1}}],[\"虽然grpc\",{\"1\":{\"665\":1}}],[\"虽然看上去差不多\",{\"1\":{\"598\":1}}],[\"虽然看似像是加密的数据\",{\"1\":{\"484\":1}}],[\"虽然默认使用基于文本的json格式\",{\"1\":{\"535\":1}}],[\"虽然我菜\",{\"1\":{\"694\":1}}],[\"虽然我已经升级成了\",{\"1\":{\"657\":1}}],[\"虽然我手上没有token\",{\"1\":{\"484\":1}}],[\"虽然我们的程序可以跨平台了\",{\"1\":{\"559\":1}}],[\"虽然我们可以通过加\",{\"1\":{\"134\":1}}],[\"虽然我们想通过重试的方式解决问题\",{\"1\":{\"134\":1}}],[\"虽然展示了\",{\"1\":{\"478\":1}}],[\"虽然网关能起到代理的作用\",{\"1\":{\"322\":1}}],[\"虽然\",{\"1\":{\"247\":1}}],[\"虽然提供的是一个有损的服务\",{\"1\":{\"210\":1}}],[\"虽然不同的请求得到的结果不同\",{\"1\":{\"203\":1}}],[\"虽然不是很准确\",{\"1\":{\"196\":1}}],[\"虽然适配器模式和装饰器模式的结构类似\",{\"1\":{\"202\":1}}],[\"虽然是个段子\",{\"1\":{\"192\":1}}],[\"虽然程序员不是靠脸吃饭\",{\"1\":{\"177\":1}}],[\"虽然先于\",{\"1\":{\"134\":1}}],[\"虽然此时读请求可以命中缓存\",{\"1\":{\"134\":1}}],[\"两种格式都行\",{\"1\":{\"829\":1}}],[\"两种命令格式都行\",{\"1\":{\"826\":1}}],[\"两种命令方式都可以\",{\"1\":{\"822\":1,\"825\":1}}],[\"两种方式进入正在运行的容器\",{\"1\":{\"811\":1}}],[\"两秒钟查找一次过期项\",{\"1\":{\"373\":1}}],[\"两个组合起来为当前的包版本\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"两个生成版本号的逻辑\",{\"1\":{\"1121\":1}}],[\"两个命令用管道组合在一起\",{\"1\":{\"1096\":1}}],[\"两个命令都是启动容器时指定执行命令和对应的参数\",{\"1\":{\"838\":1}}],[\"两个环境变量\",{\"1\":{\"865\":1}}],[\"两个\",{\"1\":{\"800\":1}}],[\"两个系统写库成功了\",{\"1\":{\"208\":1}}],[\"两个线程\",{\"1\":{\"134\":1}}],[\"两者最大的区别是\",{\"1\":{\"129\":1}}],[\"才做出回应\",{\"1\":{\"532\":1}}],[\"才是所谓的\",{\"1\":{\"208\":1}}],[\"才是我们应该关注的\",{\"1\":{\"167\":1}}],[\"才是真正地提交内容\",{\"1\":{\"22\":1}}],[\"才能构建出\",{\"1\":{\"869\":1}}],[\"才能恢复该\",{\"1\":{\"208\":1}}],[\"才能安全地把消息从队列中删除\",{\"1\":{\"208\":1}}],[\"才能正确的使用它\",{\"1\":{\"161\":1}}],[\"才能从数据库中得到正确的值\",{\"1\":{\"134\":1}}],[\"才会推送给客户端\",{\"1\":{\"661\":1}}],[\"才会有多个分片获取数据的选项\",{\"1\":{\"205\":1}}],[\"才会清除掉\",{\"1\":{\"204\":1}}],[\"才会执行这里\",{\"1\":{\"157\":1}}],[\"才会认为是健康\",{\"1\":{\"151\":1}}],[\"才把这个值才写到缓存中\",{\"1\":{\"134\":1}}],[\"了之后清理缓存\",{\"1\":{\"209\":1}}],[\"了解了镜像层知识\",{\"1\":{\"864\":1}}],[\"了解\",{\"1\":{\"779\":1}}],[\"了解访问量\",{\"1\":{\"206\":1}}],[\"了解的越多\",{\"1\":{\"196\":1}}],[\"了\",{\"1\":{\"134\":3,\"182\":1,\"436\":1,\"781\":2,\"784\":1,\"937\":1}}],[\"第\",{\"1\":{\"941\":1}}],[\"第23行的忽视规则把bin给忽视掉了\",{\"1\":{\"799\":1}}],[\"第六步\",{\"1\":{\"204\":1}}],[\"第六是使用start\",{\"1\":{\"203\":1}}],[\"第五行\",{\"1\":{\"1110\":1}}],[\"第五步\",{\"1\":{\"204\":1}}],[\"第五是使用app\",{\"1\":{\"203\":1}}],[\"第四行\",{\"1\":{\"1110\":1}}],[\"第四步\",{\"1\":{\"204\":1}}],[\"第四是可以使用命令行创建应用\",{\"1\":{\"203\":1}}],[\"第四是dot\",{\"1\":{\"203\":1}}],[\"第三行\",{\"1\":{\"1110\":1}}],[\"第三条命令是命令将扫描所有受保护的系统文件\",{\"1\":{\"1024\":1}}],[\"第三方\",{\"1\":{\"436\":4}}],[\"第三步\",{\"1\":{\"204\":2}}],[\"第三是引入了一个跨平台的网络服务器\",{\"1\":{\"203\":1}}],[\"第三是dot\",{\"1\":{\"203\":1}}],[\"第0位\",{\"1\":{\"204\":1}}],[\"第九是对于跨网站的请求的预防和保护机制\",{\"1\":{\"203\":1}}],[\"第八是支持web\",{\"1\":{\"203\":1}}],[\"第七是更好的支持异步编程\",{\"1\":{\"203\":1}}],[\"第二行\",{\"1\":{\"1110\":1}}],[\"第二条命令是把那些不同的系统文件还原成系统官方源文件\",{\"1\":{\"1024\":1}}],[\"第二种方法\",{\"1\":{\"786\":1}}],[\"第二个预览图像接口\",{\"1\":{\"745\":1}}],[\"第二个入口就是左下角第三个图标\",{\"1\":{\"738\":1}}],[\"第二个参数启用控制器的注释\",{\"1\":{\"483\":1,\"484\":1}}],[\"第二个问题就是在切换分支的时候帮助我们标识当前分支\",{\"1\":{\"784\":1}}],[\"第二个问题\",{\"1\":{\"134\":1}}],[\"第二是日志系统架构\",{\"1\":{\"203\":1}}],[\"第二是对架构本身安装没有依赖\",{\"1\":{\"203\":1}}],[\"第二步是web应用程序界面上提供打印功能和获取打印数据接口\",{\"1\":{\"690\":1}}],[\"第二步执行\",{\"1\":{\"134\":1}}],[\"第二步\",{\"1\":{\"134\":1,\"204\":2}}],[\"第二步失败\",{\"1\":{\"134\":1}}],[\"第一行\",{\"1\":{\"1110\":1}}],[\"第一行指定了该特性作用的范围\",{\"1\":{\"400\":1}}],[\"第一种就是把所有的服务依赖和应用程序全部构建为一个镜像\",{\"1\":{\"843\":1}}],[\"第一种方法\",{\"1\":{\"786\":1}}],[\"第一个就是需要存储每一个分支指向的\",{\"1\":{\"784\":1}}],[\"第一个上传头像接口\",{\"1\":{\"745\":1}}],[\"第一个入口就是\",{\"1\":{\"738\":1}}],[\"第一个问题\",{\"1\":{\"134\":1}}],[\"第一次登录需要初始化管理员密码\",{\"1\":{\"661\":1}}],[\"第一次提交\",{\"1\":{\"23\":1}}],[\"第一\",{\"1\":{\"208\":1}}],[\"第一步是git\",{\"1\":{\"769\":1}}],[\"第一步是编写客户端程序\",{\"1\":{\"690\":1}}],[\"第一步\",{\"1\":{\"204\":2}}],[\"第一步成功\",{\"1\":{\"134\":1}}],[\"第一是依赖注入\",{\"1\":{\"203\":1}}],[\"第一是跨平台\",{\"1\":{\"203\":1}}],[\"情况下\",{\"1\":{\"134\":1}}],[\"情况会是怎样的呢\",{\"1\":{\"134\":1}}],[\"情况\",{\"1\":{\"134\":1}}],[\"异步过滤器\",{\"1\":{\"403\":1}}],[\"异步方案\",{\"1\":{\"401\":1,\"402\":1,\"404\":1,\"405\":1}}],[\"异步方法修饰符\",{\"1\":{\"51\":1}}],[\"异步获取\",{\"0\":{\"355\":1}}],[\"异步连接多路复用\",{\"1\":{\"326\":1}}],[\"异步复制\",{\"1\":{\"209\":1}}],[\"异步\",{\"1\":{\"208\":1,\"210\":1,\"402\":1}}],[\"异步重试\",{\"1\":{\"134\":1}}],[\"异常设置\",{\"1\":{\"974\":1}}],[\"异常退出时能自动重启\",{\"1\":{\"544\":1,\"564\":1}}],[\"异常已处理\",{\"1\":{\"413\":1}}],[\"异常处理的filter\",{\"1\":{\"404\":1}}],[\"异常且无法重启的情况下\",{\"1\":{\"208\":1}}],[\"异常\",{\"1\":{\"134\":1,\"404\":2,\"413\":1}}],[\"无效\",{\"1\":{\"1131\":2}}],[\"无线网卡驱动\",{\"1\":{\"1013\":1}}],[\"无状态服务和有状态服务\",{\"1\":{\"913\":1}}],[\"无状态的服务\",{\"1\":{\"347\":1}}],[\"无中心节点\",{\"1\":{\"789\":1}}],[\"无预览\",{\"1\":{\"690\":1}}],[\"无须预览直接打印也叫静默打印\",{\"1\":{\"689\":1}}],[\"无须通过new关键字直接创建\",{\"1\":{\"438\":1}}],[\"无打扰\",{\"1\":{\"311\":1}}],[\"无关开发语言\",{\"1\":{\"210\":1}}],[\"无法被ping通\",{\"1\":{\"919\":1}}],[\"无法证明报文的完整性\",{\"1\":{\"323\":1}}],[\"无法在其他\",{\"1\":{\"208\":1}}],[\"无法gc\",{\"1\":{\"204\":1}}],[\"无法修改\",{\"1\":{\"157\":1}}],[\"无法做到都满足要求\",{\"1\":{\"134\":1}}],[\"无法服务其它客户端请求\",{\"1\":{\"134\":1}}],[\"无需认证\",{\"1\":{\"954\":1}}],[\"无需通过\",{\"1\":{\"935\":1}}],[\"无需身份验证\",{\"1\":{\"550\":1}}],[\"无需去修改工厂类代码就可以很方便的进行接口子类扩容\",{\"1\":{\"442\":1}}],[\"无需担心隐私被泄漏的风险\",{\"1\":{\"322\":1}}],[\"无需任何配置开箱即用\",{\"1\":{\"288\":1}}],[\"无需安装额外的软件\",{\"1\":{\"699\":1}}],[\"无需安装企业微信客户端\",{\"1\":{\"697\":1}}],[\"无需安装\",{\"1\":{\"173\":1}}],[\"无需手动添加\",{\"1\":{\"156\":1}}],[\"无需引用nuget包即可实现以下功能\",{\"1\":{\"142\":1}}],[\"无需考虑写消息队列失败情况\",{\"1\":{\"134\":1}}],[\"无需操作缓存\",{\"1\":{\"134\":1}}],[\"无论什么情况挂壁\",{\"1\":{\"380\":1,\"385\":1,\"856\":1}}],[\"无论元数据还是\",{\"1\":{\"208\":1}}],[\"无论数千还是数十亿的唯一值\",{\"1\":{\"204\":1}}],[\"无论是获取全局变量\",{\"1\":{\"743\":1}}],[\"无论是开发人员进行接口调试\",{\"1\":{\"717\":1}}],[\"无论是本科\",{\"1\":{\"194\":1}}],[\"无论是类库\",{\"1\":{\"140\":1}}],[\"无论是先操作缓存\",{\"1\":{\"134\":1}}],[\"无论是更新缓存还是删除缓存\",{\"1\":{\"134\":1}}],[\"无论谁先谁后\",{\"1\":{\"134\":2}}],[\"无脑重试\",{\"1\":{\"134\":1}}],[\"无脑\",{\"1\":{\"134\":1}}],[\"无参构造函数\",{\"1\":{\"109\":1}}],[\"无参构造方法\",{\"1\":{\"98\":1}}],[\"无参数过滤器\",{\"1\":{\"400\":1,\"401\":1}}],[\"无参数方法第二个参数可传null\",{\"1\":{\"105\":2}}],[\"无参数私有方法\",{\"1\":{\"98\":1}}],[\"无参数重载实例方法\",{\"1\":{\"98\":1}}],[\"无参数实例方法\",{\"1\":{\"98\":1}}],[\"正在被\",{\"1\":{\"944\":1}}],[\"正在毁掉开源\",{\"1\":{\"253\":1}}],[\"正如下面的代码那样\",{\"1\":{\"693\":1}}],[\"正如我们只关心工厂里得到什么的产品对象\",{\"1\":{\"443\":1}}],[\"正式所有\",{\"1\":{\"799\":1}}],[\"正式产品中使用\",{\"1\":{\"690\":1}}],[\"正式github\",{\"1\":{\"10\":1}}],[\"正好自己也要去商场买点东西\",{\"1\":{\"432\":1}}],[\"正好符合我们的需求\",{\"1\":{\"134\":1}}],[\"正确的时机\",{\"1\":{\"195\":1}}],[\"正常执行linux相关命令\",{\"1\":{\"811\":1}}],[\"正常解决冲突就行\",{\"1\":{\"798\":1}}],[\"正常操作几次并没有发现异常\",{\"1\":{\"660\":1}}],[\"正常退出代码\",{\"1\":{\"564\":1}}],[\"正常人都喜欢美的东西\",{\"1\":{\"177\":1}}],[\"正常情况下\",{\"1\":{\"134\":1,\"208\":1}}],[\"正文\",{\"1\":{\"175\":1}}],[\"正则表达式路由约束\",{\"0\":{\"163\":1}}],[\"淘汰掉\",{\"1\":{\"134\":1}}],[\"都导致了快速的和富有成效的调试会话\",{\"1\":{\"968\":1}}],[\"都需要知道集群\",{\"1\":{\"943\":1}}],[\"都处于同一个平面的\",{\"1\":{\"939\":1}}],[\"都用到了copy\",{\"1\":{\"863\":1}}],[\"都能及时同步更新\",{\"1\":{\"815\":1}}],[\"都要从工作区和索引区讲起\",{\"1\":{\"780\":1}}],[\"都必须采取构建\",{\"1\":{\"210\":1}}],[\"都有自己的唯一的\",{\"1\":{\"935\":1}}],[\"都有打印需求\",{\"1\":{\"690\":1}}],[\"都有哪些方案\",{\"1\":{\"209\":1}}],[\"都有可能查到\",{\"1\":{\"134\":1}}],[\"都不要了\",{\"1\":{\"208\":1}}],[\"都快写满了\",{\"1\":{\"208\":1}}],[\"都停掉\",{\"1\":{\"208\":1}}],[\"都可以使用前置脚本进行处理后再请求接口\",{\"1\":{\"744\":1}}],[\"都可以到其它节点上去消费数据\",{\"1\":{\"208\":1}}],[\"都可以让两者保持一致\",{\"1\":{\"134\":1}}],[\"都使用持久化机制\",{\"1\":{\"208\":1}}],[\"都获取一个新的实例\",{\"1\":{\"203\":2}}],[\"都把他拒了\",{\"1\":{\"192\":1}}],[\"都是动态的很不方便\",{\"1\":{\"1110\":1}}],[\"都是监听80端口\",{\"1\":{\"811\":1}}],[\"都是通过命令执行相关操作\",{\"1\":{\"807\":1}}],[\"都是经过格式化的\",{\"1\":{\"735\":1}}],[\"都是经常被访问的\",{\"1\":{\"134\":1}}],[\"都是一些简单的小游戏\",{\"1\":{\"243\":1}}],[\"都是按照\",{\"1\":{\"209\":1}}],[\"都是用来向应用请求管道里面添加中间件的\",{\"1\":{\"203\":1}}],[\"都是吃了信息不对等的亏\",{\"1\":{\"196\":1}}],[\"都是公司的钱\",{\"1\":{\"195\":1}}],[\"都是我的错\",{\"1\":{\"191\":1}}],[\"都是为了把缓存清掉\",{\"1\":{\"134\":1}}],[\"都会对数据包的\",{\"1\":{\"944\":1}}],[\"都会被发送给\",{\"1\":{\"944\":1}}],[\"都会附着在同一个大的扁平的\",{\"1\":{\"935\":1}}],[\"都会实时同步到其他容器中\",{\"1\":{\"816\":1}}],[\"都会同步更新\",{\"1\":{\"814\":1}}],[\"都会使用\",{\"1\":{\"786\":1}}],[\"都会自动把消息同步到多个实例的\",{\"1\":{\"208\":1}}],[\"都会采用这些方案来解决\",{\"1\":{\"134\":1}}],[\"都会导致数据不一致\",{\"1\":{\"134\":1}}],[\"都会逐渐\",{\"1\":{\"134\":1}}],[\"都\",{\"1\":{\"134\":1}}],[\"都设置失效时间\",{\"1\":{\"134\":1}}],[\"写时复制\",{\"1\":{\"863\":1}}],[\"写法二\",{\"1\":{\"617\":1}}],[\"写法一\",{\"1\":{\"617\":1}}],[\"写法不同\",{\"1\":{\"516\":1}}],[\"写单元测试一般有三个步骤\",{\"1\":{\"586\":1}}],[\"写json\",{\"1\":{\"478\":1}}],[\"写一个简单的控制台程序实现一下netcore中的分布式缓存redis实现\",{\"1\":{\"381\":1,\"386\":1}}],[\"写的代理自动配置文件\",{\"1\":{\"322\":1}}],[\"写个临时程序\",{\"1\":{\"208\":1}}],[\"写\",{\"1\":{\"207\":1,\"371\":1}}],[\"写操作可能在两三秒\",{\"1\":{\"205\":1}}],[\"写入fifo队列的最大bytes值\",{\"1\":{\"564\":4}}],[\"写入到f\",{\"1\":{\"204\":1}}],[\"写入缓存的时间\",{\"1\":{\"134\":1}}],[\"写入缓存\",{\"1\":{\"134\":2}}],[\"写入缓存中的数据\",{\"1\":{\"134\":1}}],[\"写太粗了\",{\"1\":{\"183\":1}}],[\"写太细了\",{\"1\":{\"183\":1}}],[\"写简历看似简单\",{\"1\":{\"176\":1}}],[\"写起来很好写\",{\"1\":{\"134\":1}}],[\"写队列失败\",{\"1\":{\"134\":1}}],[\"写到一个文件\",{\"1\":{\"447\":1}}],[\"写到一半我就后悔了\",{\"1\":{\"183\":1}}],[\"写到合同里\",{\"0\":{\"200\":1}}],[\"写到消息队列中\",{\"1\":{\"134\":1}}],[\"写到队列中的消息\",{\"1\":{\"134\":1}}],[\"写到缓存中的值\",{\"1\":{\"134\":1}}],[\"写消息队列也有可能会失败啊\",{\"1\":{\"134\":1}}],[\"写缓存时间短\",{\"1\":{\"134\":1}}],[\"写请求并发\",{\"1\":{\"134\":1}}],[\"写请求依旧只写数据库\",{\"1\":{\"134\":1}}],[\"写请求只更新数据库\",{\"1\":{\"134\":1}}],[\"则虚拟机\",{\"1\":{\"1110\":1}}],[\"则群组\",{\"1\":{\"1082\":1}}],[\"则复制软链接而非文件本身\",{\"1\":{\"1079\":1}}],[\"则无法删除\",{\"1\":{\"1076\":1}}],[\"则无法获取到最新的源码\",{\"1\":{\"12\":1}}],[\"则只会将纯文本复制到剪贴板\",{\"1\":{\"1036\":1}}],[\"则只需要存储一个\",{\"1\":{\"778\":1}}],[\"则所选文本的颜色和字体格式也将复制到剪贴板\",{\"1\":{\"1036\":1}}],[\"则所有在信道上发布的消息都会被指派一个唯一的\",{\"1\":{\"208\":1}}],[\"则是exe的路径\",{\"1\":{\"1019\":1}}],[\"则是启动的脚本文件路径\",{\"1\":{\"1019\":1}}],[\"则显示\",{\"1\":{\"983\":1}}],[\"则打开\",{\"1\":{\"983\":1}}],[\"则必须安装更新的证书\",{\"1\":{\"964\":1}}],[\"则必须在安装后的\",{\"1\":{\"964\":1}}],[\"则由\",{\"1\":{\"941\":1}}],[\"则请求不会到达该pod\",{\"1\":{\"914\":1}}],[\"则根据重启策略进行重启操作\",{\"1\":{\"914\":1}}],[\"则根据设定好的策略进行回收\",{\"1\":{\"209\":1}}],[\"则可以通过workdir指定进入容器时的目录\",{\"1\":{\"823\":1}}],[\"则可以将第8个元素定义为另一个元组\",{\"1\":{\"203\":1}}],[\"则内部就会有创建的对应文件\",{\"1\":{\"811\":1}}],[\"则后面的规则将不会生效\",{\"1\":{\"799\":1}}],[\"则应删除此包引用\",{\"1\":{\"585\":1}}],[\"则当前元素也很重要\",{\"1\":{\"577\":1}}],[\"则在给程序发送sigkill信号的时候\",{\"1\":{\"564\":1}}],[\"则supervisor会自动选择一个文件位置\",{\"1\":{\"564\":2}}],[\"则process\",{\"1\":{\"564\":3}}],[\"则会显示不同的标记符号\",{\"1\":{\"985\":1}}],[\"则会优先使用范围最小的变量使\",{\"1\":{\"740\":1}}],[\"则会使supervisor发送停止信号到整个进程组\",{\"1\":{\"564\":1}}],[\"则会使用这个设置用户启动子程序\",{\"1\":{\"564\":2}}],[\"则会根据其成员类型将它们相应地初始化为null\",{\"1\":{\"521\":1}}],[\"则会发送一个nack消息给你\",{\"1\":{\"208\":1}}],[\"则不能删除目录\",{\"1\":{\"1078\":1}}],[\"则不能省\",{\"1\":{\"521\":1}}],[\"则不备份\",{\"1\":{\"564\":4}}],[\"则不会初始化架构\",{\"1\":{\"502\":1}}],[\"则不限\",{\"1\":{\"447\":1}}],[\"则引发异常\",{\"1\":{\"502\":1}}],[\"则返回空\",{\"1\":{\"393\":1}}],[\"则重新刷新缓存时间为3秒后\",{\"1\":{\"372\":1}}],[\"则需要把查询提交到集群\",{\"1\":{\"943\":1}}],[\"则需要确认是否覆盖\",{\"1\":{\"802\":1}}],[\"则需要使用\",{\"1\":{\"547\":1}}],[\"则需要使用专业的游戏录屏软件\",{\"1\":{\"293\":1}}],[\"则需要先关闭默认的模型验证\",{\"1\":{\"477\":1}}],[\"则需要传递索引号来访问值\",{\"1\":{\"203\":1}}],[\"则修改的代码或衍生的代码都必须采用\",{\"1\":{\"249\":1}}],[\"则数据已有记录数达到内存限值后不能继续插入新值\",{\"1\":{\"209\":1}}],[\"则要么使用其他的方式来确保\",{\"1\":{\"208\":1}}],[\"则该实体中检测到的任何更改都会在savechanges\",{\"1\":{\"504\":1}}],[\"则该\",{\"1\":{\"208\":1}}],[\"则代表是一个持久的队列\",{\"1\":{\"208\":1}}],[\"则\",{\"1\":{\"208\":1}}],[\"则继续执行下一个中间件\",{\"1\":{\"168\":1}}],[\"则说明之前没有调用\",{\"1\":{\"167\":1}}],[\"则匹配失败\",{\"1\":{\"167\":1}}],[\"则跳过匹配\",{\"1\":{\"167\":1}}],[\"则使用\",{\"1\":{\"159\":1}}],[\"则从数据库读取\",{\"1\":{\"134\":1}}],[\"热数据\",{\"1\":{\"134\":2,\"204\":1}}],[\"热备份\",{\"1\":{\"133\":1}}],[\"先编辑文件\",{\"1\":{\"1077\":1}}],[\"先创建一个文件\",{\"1\":{\"1077\":1}}],[\"先安装补丁\",{\"1\":{\"1012\":1}}],[\"先选择要编辑的单词或字符\",{\"1\":{\"965\":1}}],[\"先查询当前的状态\",{\"1\":{\"948\":1}}],[\"先有基本印象\",{\"1\":{\"917\":1}}],[\"先是构建我们的程序\",{\"1\":{\"852\":1}}],[\"先启动一个具名挂载的容器testvolumesfromcentos\",{\"1\":{\"816\":1}}],[\"先在一个终端执行命令\",{\"1\":{\"809\":1}}],[\"先来体验一下\",{\"1\":{\"806\":1}}],[\"先来看第一个问题\",{\"1\":{\"134\":1}}],[\"先从本地查找镜像\",{\"1\":{\"805\":1}}],[\"先将远程库拉取\",{\"1\":{\"798\":1}}],[\"先提交到本地然后拉取远程服务器然后再推送\",{\"1\":{\"798\":1}}],[\"先拉取一下主分支\",{\"1\":{\"798\":1}}],[\"先想象我们要测试一个系统\",{\"1\":{\"736\":1}}],[\"先想想是否有其他更好的替代方案\",{\"1\":{\"164\":1}}],[\"先对collection功能的使用场景做个简单总结\",{\"1\":{\"736\":1}}],[\"先通过如下命令创建目录\",{\"1\":{\"546\":1}}],[\"先关闭自增然后插入数据后再开启自增\",{\"1\":{\"527\":1}}],[\"先去检查后面的票\",{\"1\":{\"432\":1}}],[\"先判断异常是否处理过\",{\"1\":{\"404\":1}}],[\"先看一下ichangetoken接口\",{\"1\":{\"374\":1}}],[\"先测试再使用\",{\"1\":{\"342\":1}}],[\"先处理下一个请求\",{\"1\":{\"326\":1}}],[\"先和\",{\"1\":{\"325\":1}}],[\"先让代码去处理输入\",{\"1\":{\"215\":1}}],[\"先拿\",{\"1\":{\"209\":1}}],[\"先修复\",{\"1\":{\"208\":1}}],[\"先说为什么会重复消费\",{\"1\":{\"208\":1}}],[\"先说一句\",{\"1\":{\"164\":1}}],[\"先举个例子\",{\"1\":{\"159\":1}}],[\"先了解一下终结点的类结构\",{\"1\":{\"156\":1}}],[\"先\",{\"1\":{\"134\":1}}],[\"先删除缓存\",{\"1\":{\"134\":7}}],[\"先不考虑并发问题\",{\"1\":{\"134\":1}}],[\"先更新数据库\",{\"1\":{\"134\":12}}],[\"先更新缓存\",{\"1\":{\"134\":3}}],[\"先写上注释\",{\"1\":{\"21\":1}}],[\"刷新缓存\",{\"1\":{\"134\":1}}],[\"性能=\",{\"1\":{\"256\":2}}],[\"性能监控\",{\"1\":{\"210\":1,\"403\":1}}],[\"性能和一致性不能同时满足\",{\"1\":{\"134\":1}}],[\"性能和一致性就像天平的两端\",{\"1\":{\"134\":1}}],[\"性能\",{\"1\":{\"134\":1}}],[\"性能非常高\",{\"1\":{\"134\":1}}],[\"性别\",{\"1\":{\"56\":3,\"57\":1,\"58\":1,\"674\":1,\"676\":1,\"677\":1,\"679\":1}}],[\"全部创建完成后\",{\"1\":{\"1110\":1}}],[\"全部对象的控制权全部上缴给\",{\"1\":{\"436\":1}}],[\"全选\",{\"1\":{\"965\":1}}],[\"全局命令\",{\"0\":{\"809\":1}}],[\"全局有效\",{\"1\":{\"740\":1}}],[\"全局变量>集合变量>环境变量\",{\"1\":{\"740\":1}}],[\"全局变量\",{\"1\":{\"740\":1}}],[\"全局服务提供者\",{\"1\":{\"660\":1}}],[\"全局配置\",{\"1\":{\"564\":1}}],[\"全局使用\",{\"1\":{\"413\":1,\"418\":1,\"421\":1,\"424\":1}}],[\"全局注册方式\",{\"0\":{\"408\":1}}],[\"全局\",{\"0\":{\"740\":1},\"1\":{\"405\":1}}],[\"全局获取\",{\"0\":{\"363\":1}}],[\"全球技术精选\",{\"1\":{\"247\":1}}],[\"全链路追踪\",{\"1\":{\"210\":1}}],[\"全页缓存\",{\"1\":{\"209\":1}}],[\"全栈ace\",{\"1\":{\"137\":1}}],[\"全面的c\",{\"1\":{\"135\":1}}],[\"全量刷入缓存\",{\"1\":{\"134\":1}}],[\"全量数据刷到缓存中\",{\"1\":{\"134\":1}}],[\"全名称\",{\"1\":{\"93\":1}}],[\"之上执行各自的sql语句\",{\"1\":{\"1065\":1}}],[\"之中后\",{\"1\":{\"941\":1}}],[\"之中\",{\"1\":{\"941\":1}}],[\"之类的东西是无法感知的\",{\"1\":{\"938\":1}}],[\"之类的网络过程\",{\"1\":{\"935\":1}}],[\"之内\",{\"1\":{\"935\":1}}],[\"之所以写这篇文章\",{\"1\":{\"689\":1}}],[\"之后打进\",{\"1\":{\"870\":1}}],[\"之后的操作和效果都一样\",{\"1\":{\"815\":1}}],[\"之后的读请求读到的都是旧数据\",{\"1\":{\"134\":1}}],[\"之后推送到我们远程的\",{\"1\":{\"788\":1}}],[\"之后发生了什么\",{\"0\":{\"778\":1}}],[\"之后会弹出用户名和密码\",{\"1\":{\"775\":1}}],[\"之后会主动去尝试一下\",{\"1\":{\"186\":1}}],[\"之后放到网站目录\",{\"1\":{\"692\":1}}],[\"之后再点击打印按钮即可\",{\"1\":{\"689\":1}}],[\"之后就可以打印了\",{\"1\":{\"689\":1}}],[\"之后不会再执行多次\",{\"1\":{\"656\":1}}],[\"之后你每天都会收到三次营销邮件\",{\"1\":{\"533\":1}}],[\"之后你可以使用更高级和更高性能的实现来替换原始的产品实现或类\",{\"1\":{\"202\":1}}],[\"之后\",{\"1\":{\"405\":1,\"788\":1,\"942\":1,\"944\":1}}],[\"之后执行\",{\"1\":{\"209\":1}}],[\"之前需要\",{\"1\":{\"1065\":1}}],[\"之前应先安装\",{\"1\":{\"1012\":1}}],[\"之前时候公司为了保存项目文档\",{\"1\":{\"1009\":1}}],[\"之前就不应该用单一的\",{\"1\":{\"937\":1}}],[\"之前提供另一个\",{\"1\":{\"937\":1}}],[\"之前放置一个\",{\"1\":{\"937\":1}}],[\"之前创建一个稳定的网络端点\",{\"1\":{\"937\":1}}],[\"之前有一篇文章专门分享的\",{\"1\":{\"851\":1}}],[\"之前在常用命令那说到通过命令的方式进行数据卷挂载\",{\"1\":{\"827\":1}}],[\"之前的\",{\"1\":{\"943\":1}}],[\"之前的章节我们也聊到了\",{\"1\":{\"780\":1}}],[\"之前的关系和对应计算\",{\"1\":{\"779\":1}}],[\"之前是自己看微信文档对接\",{\"1\":{\"710\":1}}],[\"之前是三行合一行\",{\"1\":{\"660\":1}}],[\"之前写了一个关于捷易快信做通知服务的文章\",{\"1\":{\"695\":1}}],[\"之前我们创建一个对象都是new\",{\"1\":{\"436\":1}}],[\"之前\",{\"1\":{\"405\":1,\"943\":1}}],[\"之前进程意外\",{\"1\":{\"209\":1}}],[\"之前很多谈薪酬的经历都是血泪史\",{\"1\":{\"194\":1}}],[\"之前别人把你都了解透了\",{\"1\":{\"191\":1}}],[\"之前听\",{\"1\":{\"185\":1}}],[\"之前数据只存在数据库中\",{\"1\":{\"134\":1}}],[\"之间都能直接连接\",{\"1\":{\"939\":1}}],[\"之间保持一致\",{\"1\":{\"134\":1}}],[\"之间\",{\"1\":{\"79\":1}}],[\"莫属\",{\"1\":{\"134\":1}}],[\"引导分区\",{\"1\":{\"1110\":1}}],[\"引导程序\",{\"1\":{\"963\":1}}],[\"引导程序是用于创建\",{\"1\":{\"962\":1}}],[\"引用自\",{\"1\":{\"1126\":2}}],[\"引用跳转\",{\"1\":{\"968\":1}}],[\"引用预览\",{\"1\":{\"968\":1}}],[\"引用nuget时生成的packages等\",{\"1\":{\"799\":1}}],[\"引用nuget包\",{\"0\":{\"377\":1,\"452\":1},\"1\":{\"364\":1,\"1048\":1}}],[\"引用上面的grpc文件\",{\"1\":{\"673\":1}}],[\"引用\",{\"1\":{\"583\":1}}],[\"引用第三方包并设置项目配置为\",{\"1\":{\"577\":1}}],[\"引用类型\",{\"1\":{\"521\":1}}],[\"引用组件\",{\"1\":{\"447\":2,\"501\":1,\"583\":1,\"660\":1,\"669\":1,\"670\":1}}],[\"引用辅助包\",{\"1\":{\"413\":1}}],[\"引用验证中间件\",{\"1\":{\"359\":1}}],[\"引用包依赖项时\",{\"1\":{\"1131\":1}}],[\"引用包\",{\"0\":{\"214\":1,\"1120\":1}}],[\"引用的类型和程序集和清单\",{\"1\":{\"203\":1}}],[\"引用了fastreport\",{\"1\":{\"689\":1}}],[\"引用了一个第三方的包\",{\"1\":{\"577\":1}}],[\"引用了\",{\"1\":{\"94\":1}}],[\"引擎会查找类型中的方法存根\",{\"1\":{\"203\":1}}],[\"引擎在编译中间代码之前\",{\"1\":{\"203\":1}}],[\"引入了服务器代理\",{\"1\":{\"665\":1}}],[\"引入log4net中间件\",{\"1\":{\"447\":1}}],[\"引入工厂模式的优势很明显\",{\"1\":{\"442\":1}}],[\"引入缓存后\",{\"1\":{\"134\":1}}],[\"引入消息队列来解决这个问题\",{\"1\":{\"134\":1}}],[\"引入消息队列\",{\"1\":{\"134\":1}}],[\"引入\",{\"1\":{\"134\":1}}],[\"你还可以继续创建挂载点\",{\"1\":{\"1110\":1}}],[\"你还不借这个机会赶紧问问公司的情况\",{\"1\":{\"191\":1}}],[\"你不需要进行任何其他的配置\",{\"1\":{\"1110\":1}}],[\"你不想仅仅因为需要评估表达式的值而破坏调试程序的状态\",{\"1\":{\"984\":1}}],[\"你不就插入了两条\",{\"1\":{\"208\":1}}],[\"你得到的镜像大小也只有区区的\",{\"1\":{\"871\":1}}],[\"你最需要记住这点\",{\"1\":{\"863\":1}}],[\"你最好自备一个上网工具\",{\"1\":{\"689\":1}}],[\"你发送了文字\",{\"1\":{\"711\":1}}],[\"你发现岗位里要求\",{\"1\":{\"183\":1}}],[\"你下载时需要做好心里准备\",{\"1\":{\"693\":1}}],[\"你要输入\",{\"1\":{\"538\":1}}],[\"你要注意了\",{\"1\":{\"199\":1}}],[\"你首次去国外旅行\",{\"1\":{\"534\":1}}],[\"你讲的工厂和ioc有啥关系呢\",{\"1\":{\"442\":1}}],[\"你讲了这么多东西\",{\"1\":{\"322\":1}}],[\"你说没有看到反射的影子\",{\"1\":{\"442\":1}}],[\"你说你打听饭补多少钱合适吗\",{\"1\":{\"191\":1}}],[\"你在使用过程中\",{\"1\":{\"693\":1}}],[\"你在电商上购物\",{\"1\":{\"533\":1}}],[\"你在\",{\"1\":{\"340\":1}}],[\"你在哪里使用\",{\"1\":{\"202\":1}}],[\"你只是保持沉默\",{\"1\":{\"532\":1}}],[\"你只需要创建一个和你的\",{\"1\":{\"339\":1}}],[\"你只能手动写程序把那\",{\"1\":{\"208\":1}}],[\"你只能存储类似类型的数据类型\",{\"1\":{\"203\":1}}],[\"你对分布式事务的理解\",{\"1\":{\"210\":1}}],[\"你对得起自己吗\",{\"1\":{\"198\":1}}],[\"你面临的挑战是什么\",{\"1\":{\"210\":1}}],[\"你所知道微服务的技术栈有哪些\",{\"1\":{\"210\":1}}],[\"你临时写程序\",{\"1\":{\"208\":1}}],[\"你很长时间都没有处理掉\",{\"1\":{\"208\":1}}],[\"你任何一个机器宕机了\",{\"1\":{\"208\":1}}],[\"你消费的时候\",{\"1\":{\"208\":1}}],[\"你创建的\",{\"1\":{\"208\":2}}],[\"你需要将名称传递给哈希表中的值\",{\"1\":{\"203\":1}}],[\"你需要确保你的对象是不可变的\",{\"1\":{\"202\":1}}],[\"你需要先知道\",{\"1\":{\"197\":1}}],[\"你使用工厂来创建对象\",{\"1\":{\"202\":1}}],[\"你试试啥感觉\",{\"1\":{\"201\":1}}],[\"你告诉我\",{\"1\":{\"201\":1}}],[\"你们在谈薪酬的时候\",{\"1\":{\"199\":1}}],[\"你们为什么喜欢在这工作\",{\"1\":{\"191\":1}}],[\"你期望收入是\",{\"1\":{\"197\":1}}],[\"你可能还需要再去买一根充电线\",{\"1\":{\"433\":1}}],[\"你可能就铤而走险\",{\"1\":{\"195\":1}}],[\"你可以直接在\",{\"1\":{\"1065\":1}}],[\"你可以选择在输出窗口中不终止\",{\"1\":{\"980\":1}}],[\"你可以从零开始或者从一个现有数据库逆向设计linq\",{\"1\":{\"968\":1}}],[\"你可以看到本地文件还在\",{\"1\":{\"799\":1}}],[\"你可以理解为是一个目录\",{\"1\":{\"752\":1}}],[\"你可以通过调用api的方式\",{\"1\":{\"699\":1}}],[\"你可以下载fastreport\",{\"1\":{\"693\":1}}],[\"你可以进入演示网站首先下载客户端程序安装上\",{\"1\":{\"689\":1}}],[\"你可以进行重试操作\",{\"1\":{\"208\":1}}],[\"你可以访问上面的镜像网站\",{\"1\":{\"335\":1}}],[\"你可以将微服务封装在容器镜像及其依赖项中\",{\"1\":{\"210\":1}}],[\"你可以彻底关掉合并限流\",{\"1\":{\"204\":1}}],[\"你可以存储不同类型的数据类型\",{\"1\":{\"203\":1}}],[\"你可以说出几个在\",{\"1\":{\"202\":1}}],[\"你可以在表达式后面加上nse\",{\"1\":{\"984\":1}}],[\"你可以在它们的官网上联系售后进行购买\",{\"1\":{\"693\":1}}],[\"你可以在消息持久化磁盘后\",{\"1\":{\"208\":1}}],[\"你可以在这部分写上毕业院校\",{\"1\":{\"178\":1}}],[\"你可以在反编译的代码本上中放置断点\",{\"1\":{\"173\":1}}],[\"你可以使用它来查看服务器端如何处理极端情况\",{\"1\":{\"175\":1}}],[\"你可以更改标题\",{\"1\":{\"175\":1}}],[\"你可以右键单击任何请求\",{\"1\":{\"175\":1}}],[\"你可以注册一些用于修改路由操作的数据\",{\"1\":{\"157\":1}}],[\"你可以按照前面的思路推演一下\",{\"1\":{\"134\":1}}],[\"你为了多要点薪水\",{\"1\":{\"195\":1}}],[\"你为啥要接受\",{\"1\":{\"188\":1}}],[\"你花了好几天做出来了\",{\"1\":{\"192\":1}}],[\"你赶紧发布一个\",{\"1\":{\"192\":1}}],[\"你细品一下\",{\"1\":{\"191\":1}}],[\"你来面试之前\",{\"1\":{\"191\":1}}],[\"你也要选择公司\",{\"1\":{\"191\":1}}],[\"你有一个\",{\"1\":{\"871\":1}}],[\"你有什么想问的吗\",{\"0\":{\"191\":1}}],[\"你有职业规划吗\",{\"0\":{\"190\":1}}],[\"你能成长\",{\"1\":{\"190\":1}}],[\"你是怎么用的\",{\"1\":{\"209\":1}}],[\"你是在为了什么而努力呢\",{\"1\":{\"190\":1}}],[\"你是不是应该起身打个招呼\",{\"1\":{\"184\":1}}],[\"你是不是核心人员\",{\"1\":{\"181\":1}}],[\"你想成长为什么样的人\",{\"1\":{\"190\":1}}],[\"你确实不擅长沟通\",{\"1\":{\"189\":1}}],[\"你这写的都是啥玩意\",{\"1\":{\"483\":1}}],[\"你这数据就不一致了\",{\"1\":{\"208\":1}}],[\"你这么做合适吗\",{\"1\":{\"201\":1}}],[\"你这轮面试基本有戏了\",{\"1\":{\"191\":1}}],[\"你这抖机灵以为面试官是白痴吗\",{\"1\":{\"189\":1}}],[\"你这是重新定义了精通吧\",{\"1\":{\"180\":1}}],[\"你的代码仍可正常工作\",{\"1\":{\"1130\":1}}],[\"你的邮箱\",{\"1\":{\"802\":1}}],[\"你的名字和email地址\",{\"1\":{\"748\":1}}],[\"你的回答干脆友善\",{\"1\":{\"531\":1}}],[\"你的头疼\",{\"1\":{\"210\":1}}],[\"你的牙齿不舒服\",{\"1\":{\"210\":1}}],[\"你的系统不是呵呵了\",{\"1\":{\"208\":1}}],[\"你的缺点是什么\",{\"0\":{\"189\":1}}],[\"你的项目请求量越来越大\",{\"1\":{\"134\":1}}],[\"你应该先问一下公司加班的时长和频率\",{\"1\":{\"188\":1}}],[\"你看\",{\"1\":{\"186\":1}}],[\"你以为面试官傻吗\",{\"1\":{\"186\":1}}],[\"你带的简历就派上用场了\",{\"1\":{\"184\":1}}],[\"你会面对多个面试官\",{\"1\":{\"184\":1}}],[\"你写个\",{\"1\":{\"181\":1}}],[\"你怎么做的\",{\"1\":{\"181\":1}}],[\"你觉得可以写精通就写\",{\"1\":{\"180\":1}}],[\"你就可以写一个适配去来连接这些接口\",{\"1\":{\"202\":1}}],[\"你就傻眼了\",{\"1\":{\"195\":1}}],[\"你就问薪酬\",{\"1\":{\"195\":1}}],[\"你就不能多来点例子\",{\"1\":{\"179\":1}}],[\"你就会面临一个问题\",{\"1\":{\"134\":1}}],[\"你都可以查看流程\",{\"1\":{\"175\":1}}],[\"你将能够看到每种调用方法花费了多长时间\",{\"1\":{\"174\":1}}],[\"你将看到局部变量\",{\"1\":{\"173\":1}}],[\"你好\",{\"1\":{\"129\":1}}],[\"那怎么修改文件权限\",{\"1\":{\"1081\":1}}],[\"那怎么解决这类问题呢\",{\"1\":{\"134\":1}}],[\"那怎么解决这个问题呢\",{\"1\":{\"134\":1}}],[\"那好\",{\"1\":{\"863\":1}}],[\"那小伙伴肯定会好奇为什么程序能通过myredis名字连接到redis\",{\"1\":{\"852\":1}}],[\"那是否有一些通用的精简\",{\"1\":{\"863\":1}}],[\"那是容器内运行了一个本地dns解析器\",{\"1\":{\"843\":1}}],[\"那是因为两个容器之间共用了docker0\",{\"1\":{\"840\":1}}],[\"那是因为基础镜像只包含核心命令\",{\"1\":{\"840\":1}}],[\"那是因为在生产环境中你不可能将debug或release目录下的文件发给客户让他们使用\",{\"1\":{\"689\":1}}],[\"那容器之间能不能访问呢\",{\"1\":{\"840\":1}}],[\"那该怎么做呢\",{\"1\":{\"811\":1}}],[\"那肯定可以根据条件查看对应的数据\",{\"1\":{\"809\":1}}],[\"那肯定会有性能问题\",{\"1\":{\"134\":1}}],[\"那我们怎么找到这个\",{\"1\":{\"786\":1}}],[\"那我该如何使用插件实现那\",{\"1\":{\"576\":1}}],[\"那问题来了\",{\"1\":{\"778\":1}}],[\"那岂不是很好吗\",{\"1\":{\"534\":1}}],[\"那个时候没有\",{\"1\":{\"432\":1}}],[\"那不是白瞎这世界最先进的开源关系型数据库称号了\",{\"1\":{\"342\":1}}],[\"那到底网关能干啥呢\",{\"1\":{\"322\":1}}],[\"那要是查资料该怎么办呢\",{\"1\":{\"322\":1}}],[\"那会怎么样\",{\"1\":{\"209\":1}}],[\"那消息队列挂了\",{\"1\":{\"208\":1}}],[\"那些地方用到了单例模式\",{\"1\":{\"202\":1}}],[\"那就有点累人了\",{\"1\":{\"843\":1}}],[\"那就应该可以进入容器内部操作一把\",{\"1\":{\"811\":1}}],[\"那就报错\",{\"1\":{\"805\":1}}],[\"那就进到class\",{\"1\":{\"442\":1}}],[\"那就靠这个编号了\",{\"1\":{\"326\":1}}],[\"那就是在执行\",{\"1\":{\"1065\":1}}],[\"那就是需要在\",{\"1\":{\"1064\":1}}],[\"那就是防火墙\",{\"1\":{\"322\":1}}],[\"那就是既能扮演客户端\",{\"1\":{\"322\":1}}],[\"那就需要在\",{\"1\":{\"151\":1}}],[\"那就不能再用定时任务刷新缓存了\",{\"1\":{\"134\":1}}],[\"那必须要求所有更新操作完成之前期间\",{\"1\":{\"134\":1}}],[\"那必然要面临一致性问题\",{\"1\":{\"134\":1}}],[\"那什么时候操作缓存呢\",{\"1\":{\"134\":1}}],[\"那如果不会写怎么办\",{\"1\":{\"739\":1}}],[\"那如果你确实不想在应用中去写消息队列\",{\"1\":{\"134\":1}}],[\"那如果我们的业务体量很大\",{\"1\":{\"134\":1}}],[\"那这里需要填写clusterip\",{\"1\":{\"923\":1}}],[\"那这就是第二个坑了\",{\"1\":{\"208\":1}}],[\"那这个节点就是master\",{\"1\":{\"204\":1}}],[\"那这条数据就一直不一致了\",{\"1\":{\"134\":1}}],[\"那这次重试请求也就\",{\"1\":{\"134\":1}}],[\"那这是不是意味着\",{\"1\":{\"134\":1}}],[\"那更好的方案应该怎么做\",{\"1\":{\"134\":1}}],[\"那对应的方案就有\",{\"1\":{\"134\":1}}],[\"那无论是读请求还是写请求\",{\"1\":{\"134\":1}}],[\"那么先增加服务器的地址\",{\"1\":{\"1070\":1}}],[\"那么先提交\",{\"1\":{\"798\":1}}],[\"那么默认的映射就不生效了\",{\"1\":{\"1061\":1}}],[\"那么可以稍稍修改上面的脚本使用appleboy\",{\"1\":{\"1070\":1}}],[\"那么可以修改上面的发布命令为\",{\"1\":{\"1037\":1}}],[\"那么可以这么设置\",{\"1\":{\"125\":1}}],[\"那么选择下面几种即可\",{\"1\":{\"958\":1}}],[\"那么需要在\",{\"1\":{\"956\":1}}],[\"那么需要配置type=nodeport\",{\"1\":{\"922\":1}}],[\"那么其他机器就可以通过浏览器访问scheme\",{\"1\":{\"922\":1}}],[\"那么其原名也会被检索出来\",{\"1\":{\"443\":1}}],[\"那么statefulset则是为了有状态服务而设计\",{\"1\":{\"914\":1}}],[\"那么建议进入上面的配置文件编辑jenkins\",{\"1\":{\"905\":1}}],[\"那么外网就可以访问了\",{\"1\":{\"806\":1}}],[\"那么不要担心\",{\"1\":{\"798\":1}}],[\"那么a需要在主分支拉取下最新数据\",{\"1\":{\"798\":1}}],[\"那么你提交时候回报错提示对方已经提交有东西\",{\"1\":{\"798\":1}}],[\"那么你就去脑科\",{\"1\":{\"210\":1}}],[\"那么你就去牙科\",{\"1\":{\"210\":1}}],[\"那么运行命令\",{\"1\":{\"774\":1}}],[\"那么在postman\",{\"1\":{\"745\":1}}],[\"那么在postman中\",{\"1\":{\"745\":1}}],[\"那么在postman中只需要把这俩个参数填写上即可请求\",{\"1\":{\"729\":1}}],[\"那么在这个过程中\",{\"1\":{\"745\":1}}],[\"那么下面就来看下它的执行顺序\",{\"1\":{\"744\":1}}],[\"那么下面开始编写插件来替换默认的服务\",{\"1\":{\"575\":1}}],[\"那么打印的日如何看呢\",{\"1\":{\"738\":1}}],[\"那么通过以上三个步骤\",{\"1\":{\"736\":1}}],[\"那么基于这个场景\",{\"1\":{\"736\":1}}],[\"那么collection是如何去管理用例的呢\",{\"1\":{\"736\":1}}],[\"那么也会格式化成json格式展示\",{\"1\":{\"735\":1}}],[\"那么这里再推荐一个小工具\",{\"1\":{\"868\":1}}],[\"那么这个文件在启用\",{\"1\":{\"799\":1}}],[\"那么这个功能在实际工作中有什么作用呢\",{\"1\":{\"744\":1}}],[\"那么这俩个接口就产生了关联\",{\"1\":{\"745\":2}}],[\"那么这些数据对我们做接口测试有什么作用呢\",{\"1\":{\"735\":1}}],[\"那么这将导致代码高度耦合并且难以维护和调试\",{\"1\":{\"436\":1}}],[\"那么什么是表单类型呢\",{\"1\":{\"732\":1}}],[\"那么接下来就介绍下postman到底有哪些功能\",{\"1\":{\"717\":1}}],[\"那么会使用最大版本号\",{\"1\":{\"650\":1}}],[\"那么问题来了\",{\"1\":{\"592\":1}}],[\"那么问题就变成了\",{\"1\":{\"208\":1}}],[\"那么本文就刚好用到了\",{\"1\":{\"570\":1}}],[\"那么还是需要深入学习一下关于它的知识\",{\"1\":{\"549\":1}}],[\"那么要解决这些问题\",{\"1\":{\"543\":1}}],[\"那么只需要在需要进行测试的方法上面点击右键\",{\"1\":{\"585\":1}}],[\"那么只能通过调用接口来测试是否发布成功\",{\"1\":{\"540\":1}}],[\"那么只会调用异步的方法\",{\"1\":{\"399\":1}}],[\"那么使用以下命令来查看安装了哪些版本\",{\"1\":{\"538\":1}}],[\"那么如何调用我们接口那\",{\"1\":{\"483\":1}}],[\"那么如何持久化呢\",{\"1\":{\"208\":1}}],[\"那么我应该也用5的\",{\"1\":{\"561\":1}}],[\"那么我当然也可以转成字符串之后再返回出去\",{\"1\":{\"478\":1}}],[\"那么我们可以手动安装和修改\",{\"1\":{\"891\":1}}],[\"那么我们现在看下如何解决这种情况\",{\"1\":{\"775\":1}}],[\"那么我们将这两个测试方法分别放入不同的测试类中\",{\"1\":{\"588\":1}}],[\"那么我们在program中注入短信服务\",{\"1\":{\"575\":1}}],[\"那么我们也可以通过依赖注入的方式替换宿主服务默认注册的实现\",{\"1\":{\"575\":1}}],[\"那么我们要自动重启\",{\"1\":{\"543\":1}}],[\"那么我们来给这加上注释吧\",{\"1\":{\"483\":1}}],[\"那么我们需要使用到servicefilter\",{\"1\":{\"400\":1}}],[\"那么我们就需要使用moq组件去模拟出来这些依赖项减少影响\",{\"1\":{\"591\":1}}],[\"那么我们就需要对我们的swagger配置再进行改造\",{\"1\":{\"484\":1}}],[\"那么我们就需要一个一个action进行标注注册\",{\"1\":{\"407\":1}}],[\"那么我们就需要自定义一个author特性类\",{\"1\":{\"46\":1}}],[\"那么我们就创建一个获取一个角色为超级管理员的token\",{\"1\":{\"364\":1}}],[\"那么该目录下的所有文件的属组都会更改\",{\"1\":{\"1082\":1,\"1083\":1}}],[\"那么该方法就不在需要\",{\"1\":{\"476\":1}}],[\"那么该坚持就坚持\",{\"1\":{\"198\":1}}],[\"那么多个请求就会复用这个actionfilter\",{\"1\":{\"409\":1}}],[\"那么每个set都必须设置size\",{\"1\":{\"373\":1}}],[\"那么服务器就可以先暂停这个请求\",{\"1\":{\"326\":1}}],[\"那么公共代理对某些\",{\"1\":{\"322\":1}}],[\"那么整个集群就会以为缺少5501\",{\"1\":{\"209\":1}}],[\"那么那个实例会从\",{\"1\":{\"208\":1}}],[\"那么当\",{\"1\":{\"208\":1}}],[\"那么当该\",{\"1\":{\"208\":1}}],[\"那么生产者收不到ack信号\",{\"1\":{\"208\":1}}],[\"那么它会把相同的请求传给下一个接收者\",{\"1\":{\"202\":1}}],[\"那么薪酬就是价格\",{\"1\":{\"194\":1}}],[\"那么简历就是说明书\",{\"1\":{\"176\":1}}],[\"那么此处就不为\",{\"1\":{\"157\":1}}],[\"那么此类库既可以是net\",{\"1\":{\"141\":1}}],[\"那么此时数据库中是最新值\",{\"1\":{\"134\":1}}],[\"那么此时缓存中是最新值\",{\"1\":{\"134\":1}}],[\"那么类型转换之后的值也为null\",{\"1\":{\"130\":1}}],[\"那么仍然可以从基类转回去dog类\",{\"1\":{\"128\":1}}],[\"那么就趁此机会学习一下ubuntu吧\",{\"1\":{\"1007\":1}}],[\"那么就不用操心更换啦\",{\"1\":{\"841\":1}}],[\"那么就不再处理这条消息\",{\"1\":{\"208\":1}}],[\"那么就报错\",{\"1\":{\"812\":1}}],[\"那么就可以在前置脚本中做加密处理\",{\"1\":{\"744\":1}}],[\"那么就可以返回错误界面\",{\"1\":{\"404\":1}}],[\"那么就说明客户端提交的数据是以表单形式提交的\",{\"1\":{\"732\":1}}],[\"那么就需要配置大一点\",{\"1\":{\"1104\":1}}],[\"那么就需要在这边进行勾兑\",{\"1\":{\"959\":1}}],[\"那么就需要去查看控制台输出\",{\"1\":{\"892\":1}}],[\"那么就需要mock这三个\",{\"1\":{\"591\":1}}],[\"那么就需要使用私有的包管理服务程序\",{\"1\":{\"211\":1,\"1117\":1}}],[\"那么就弄一个短信服务的伪配置吧\",{\"1\":{\"575\":1}}],[\"那么就思考如何去处理swagger这个问题吧\",{\"1\":{\"478\":1}}],[\"那么就会提示404\",{\"1\":{\"500\":1}}],[\"那么就会在进action前就会自动校验模型类绑定是否符合要求\",{\"1\":{\"472\":1}}],[\"那么就会导致数据库和缓存不一致\",{\"1\":{\"134\":1}}],[\"那么就做资源缓存\",{\"1\":{\"402\":1}}],[\"那么就存储到上下文中\",{\"1\":{\"401\":2}}],[\"那么就拿着值去查询redis\",{\"1\":{\"401\":1}}],[\"那么就先走这个失败的方法\",{\"1\":{\"364\":1}}],[\"那么就注册transient就好了\",{\"1\":{\"347\":1}}],[\"那么就使用scoped\",{\"1\":{\"346\":1}}],[\"那么就只能查询到内存中处理了\",{\"1\":{\"342\":1}}],[\"那么就返回字符串\",{\"1\":{\"145\":1}}],[\"那么就很有可能存在\",{\"1\":{\"134\":1}}],[\"那么就拥有animal里面的属性和方法\",{\"1\":{\"73\":1}}],[\"那么就拥有父类所有的功能而无需重新构建\",{\"1\":{\"73\":1}}],[\"那么就是只写的\",{\"1\":{\"60\":1}}],[\"那么\",{\"1\":{\"43\":1,\"207\":1,\"210\":1,\"322\":2}}],[\"那么对于不同版本的管理肯定是至关重要的\",{\"1\":{\"27\":1}}],[\"还把修改时间和访问权限也复制到新文件中\",{\"1\":{\"1079\":1}}],[\"还原项目的nuget包\",{\"1\":{\"1070\":1}}],[\"还原nuget包\",{\"1\":{\"553\":1}}],[\"还可在项目或解决方案中选择一个文件夹\",{\"1\":{\"956\":1}}],[\"还可以进一步对虚拟机进行设置\",{\"1\":{\"1110\":1}}],[\"还可以将目录或文件重命名\",{\"1\":{\"1080\":1}}],[\"还可以通过onmodelcreating实现\",{\"1\":{\"501\":1}}],[\"还可以使用正则验证\",{\"1\":{\"474\":1}}],[\"还可以实现自定义验证特性\",{\"1\":{\"473\":1}}],[\"还可以做匿名化处理等\",{\"1\":{\"428\":1}}],[\"还可以分别设置桌面状态和软件界面状态\",{\"1\":{\"275\":1}}],[\"还可以获取在模块上定义的所有全局方法或其他特定的非全局方法\",{\"1\":{\"87\":1}}],[\"还容易出错\",{\"1\":{\"812\":1}}],[\"还需进行端口映射\",{\"1\":{\"811\":1}}],[\"还需要我们去启动\",{\"1\":{\"1020\":1}}],[\"还需要最后一步的设置\",{\"1\":{\"748\":1}}],[\"还需要借助中间件来设置可以重复读取流\",{\"1\":{\"418\":1,\"421\":1}}],[\"还需要注意对某些字符进行转义\",{\"1\":{\"163\":1}}],[\"还免费\",{\"1\":{\"804\":1}}],[\"还对用户名有校验\",{\"1\":{\"794\":1}}],[\"还记得我们上一章节创建的\",{\"1\":{\"786\":1}}],[\"还记得前面我提过\",{\"1\":{\"442\":1}}],[\"还记得前面讲到的\",{\"1\":{\"134\":1}}],[\"还保存了提交的历史记录\",{\"1\":{\"781\":1}}],[\"还在\",{\"1\":{\"863\":1}}],[\"还在原来的项目上进行添加接口操作\",{\"1\":{\"694\":1}}],[\"还在构建时考虑了强大的结构化事件数据\",{\"1\":{\"457\":1}}],[\"还模拟了imapper进行映射\",{\"1\":{\"591\":1}}],[\"还确定传输文档中的那个部分\",{\"1\":{\"323\":1}}],[\"还支持直接通过agileconfigclient实例直接读取\",{\"1\":{\"661\":1}}],[\"还支持各种身份验证机制等协议\",{\"1\":{\"322\":1}}],[\"还支持自定义\",{\"1\":{\"145\":1}}],[\"还允许用户通过安装rustdesk提供的服务器程序建立自己的网络\",{\"1\":{\"288\":1}}],[\"还为用户提供了优秀的交互体验\",{\"1\":{\"216\":1}}],[\"还包含了这个\",{\"1\":{\"208\":1}}],[\"还不如诚实点说不懂\",{\"1\":{\"186\":1}}],[\"还都能看懂\",{\"1\":{\"181\":1}}],[\"还要考虑各种容错问题\",{\"1\":{\"134\":1}}],[\"还要一并操作缓存\",{\"1\":{\"134\":1}}],[\"还有些网络工作要做\",{\"1\":{\"943\":1}}],[\"还有我们多次使用\",{\"1\":{\"785\":1}}],[\"还有另外一种方式\",{\"1\":{\"742\":1}}],[\"还有linq\",{\"1\":{\"529\":1}}],[\"还有一种是创建一个仓储类继承repository<productsalebydayentity>\",{\"1\":{\"1040\":1}}],[\"还有一个值得注意的事情\",{\"1\":{\"936\":1}}],[\"还有一个remote特性感觉挺有意思\",{\"1\":{\"474\":1}}],[\"还有一些其他的变化\",{\"1\":{\"781\":1}}],[\"还有一些涉密公司会禁止访问外网\",{\"1\":{\"322\":1}}],[\"还有一些你可能不知道的坑\",{\"1\":{\"183\":1}}],[\"还有策略授权\",{\"1\":{\"364\":1}}],[\"还有heap空间可以分配给其他任务吗\",{\"1\":{\"204\":1}}],[\"还有的面试直接让你做一个东西\",{\"1\":{\"192\":1}}],[\"还有\",{\"1\":{\"134\":1,\"184\":1}}],[\"还有什么场景会影响数据一致性\",{\"1\":{\"134\":1}}],[\"还没等执行成功\",{\"1\":{\"134\":1}}],[\"还会引用到\",{\"1\":{\"942\":1}}],[\"还会增加新沟通成本\",{\"1\":{\"433\":1}}],[\"还会失败\",{\"1\":{\"134\":1}}],[\"还会造成机器性能的浪费\",{\"1\":{\"134\":1}}],[\"还是通过docker\",{\"1\":{\"815\":1}}],[\"还是在主机中\",{\"1\":{\"815\":1}}],[\"还是容器里有变动\",{\"1\":{\"814\":1}}],[\"还是集合变量\",{\"1\":{\"743\":1}}],[\"还是环境变量\",{\"1\":{\"743\":1}}],[\"还是按响应的组成来划分\",{\"1\":{\"739\":1}}],[\"还是测试人员做接口测试\",{\"1\":{\"717\":1}}],[\"还是需要购买授权的\",{\"1\":{\"690\":1}}],[\"还是推荐linux进行部署\",{\"1\":{\"563\":1}}],[\"还是说这个地方做认证以及授权操作\",{\"1\":{\"401\":1}}],[\"还是那句话\",{\"1\":{\"195\":1}}],[\"还是带团队\",{\"1\":{\"181\":1}}],[\"还是\",{\"1\":{\"157\":1}}],[\"还是挖到了很多之前没有深度思考过的细节\",{\"1\":{\"134\":1}}],[\"还是有可能发生不一致\",{\"1\":{\"134\":1}}],[\"还是先操作数据库\",{\"1\":{\"134\":1}}],[\"还是先删除缓存\",{\"1\":{\"134\":1}}],[\"还是存在数据不一致的情况\",{\"1\":{\"134\":1}}],[\"还一直留在缓存中\",{\"1\":{\"134\":1}}],[\"还提供了很多友好的数据类型\",{\"1\":{\"134\":1}}],[\"缺点有以下几个\",{\"1\":{\"208\":1}}],[\"缺点\",{\"1\":{\"133\":1,\"170\":1,\"171\":1,\"209\":1,\"210\":1,\"529\":1}}],[\"备份恢复更为精确\",{\"1\":{\"133\":1}}],[\"备份和恢复速度\",{\"1\":{\"133\":1}}],[\"高亮显示\",{\"1\":{\"1074\":1}}],[\"高可移植性和扩展性\",{\"1\":{\"806\":1}}],[\"高可用性\",{\"1\":{\"205\":1}}],[\"高质量项目的一个重要指标就是测试覆盖率\",{\"1\":{\"599\":1}}],[\"高效自动化的单元测试节省了开发上调试bug的时间\",{\"1\":{\"594\":1}}],[\"高层模块不应该依赖于底层模块\",{\"1\":{\"344\":1}}],[\"高级\",{\"1\":{\"1110\":1}}],[\"高级保存选项=\",{\"1\":{\"971\":1}}],[\"高级功能\",{\"0\":{\"720\":1}}],[\"高级搜索\",{\"0\":{\"331\":1}}],[\"高级工程师\",{\"1\":{\"185\":1}}],[\"高性能轻量级微服务\",{\"1\":{\"664\":1}}],[\"高性能远程调用框架\",{\"1\":{\"662\":1}}],[\"高性能\",{\"1\":{\"205\":1}}],[\"高安全的效果\",{\"1\":{\"133\":1}}],[\"高精度浮点数\",{\"1\":{\"76\":1}}],[\"灵活\",{\"1\":{\"133\":1}}],[\"逻辑备份方式\",{\"1\":{\"133\":1}}],[\"逻辑值\",{\"0\":{\"77\":1}}],[\"支付授权费\",{\"1\":{\"247\":1}}],[\"支付系统\",{\"1\":{\"133\":1}}],[\"支持使用间隔表示法来指定版本范围\",{\"1\":{\"1131\":1}}],[\"支持按时间分库分表\",{\"1\":{\"1038\":1}}],[\"支持replication\",{\"1\":{\"914\":1}}],[\"支持两种metrics查询方式\",{\"1\":{\"914\":1}}],[\"支持两种更新策略\",{\"1\":{\"914\":1}}],[\"支持两种钩子函数\",{\"1\":{\"914\":1}}],[\"支持三种metrics类型\",{\"1\":{\"914\":1}}],[\"支持三种镜像拉取策略\",{\"1\":{\"914\":1}}],[\"支持三种重启策略\",{\"1\":{\"914\":1}}],[\"支持将命令串联在一起\",{\"1\":{\"867\":1}}],[\"支持接口文档\",{\"1\":{\"714\":1}}],[\"支持给单独用户推送消息等\",{\"1\":{\"694\":1}}],[\"支持无须预览直接打印\",{\"1\":{\"690\":1}}],[\"支持选择多打印机\",{\"1\":{\"690\":1}}],[\"支持docx\",{\"1\":{\"685\":1}}],[\"支持docker部署\",{\"1\":{\"661\":1}}],[\"支持iconfiguration\",{\"1\":{\"661\":1}}],[\"支持平台\",{\"0\":{\"560\":1}}],[\"支持异步方案\",{\"0\":{\"507\":1}}],[\"支持model\",{\"1\":{\"467\":1}}],[\"支持数据库\",{\"1\":{\"451\":1}}],[\"支持的数据库\",{\"1\":{\"1009\":1}}],[\"支持的数据源\",{\"1\":{\"448\":1}}],[\"支持的不同的端口连接起来\",{\"1\":{\"916\":1}}],[\"支持的日志组件\",{\"1\":{\"448\":1}}],[\"支持的版本有\",{\"1\":{\"152\":1}}],[\"支持客户端\",{\"1\":{\"663\":1}}],[\"支持客户\",{\"1\":{\"323\":1}}],[\"支持\",{\"1\":{\"322\":1,\"344\":1,\"682\":1,\"685\":1}}],[\"支持在windows\",{\"1\":{\"311\":1}}],[\"支持在关卡开始前选择植物卡\",{\"1\":{\"243\":1}}],[\"支持根据不同的下载状态\",{\"1\":{\"308\":1}}],[\"支持流程图\",{\"1\":{\"296\":1}}],[\"支持任天堂\",{\"1\":{\"243\":1}}],[\"支持多种\",{\"1\":{\"1106\":1}}],[\"支持多种语言\",{\"1\":{\"968\":1}}],[\"支持多种时间格式\",{\"1\":{\"809\":1}}],[\"支持多metrics\",{\"1\":{\"914\":1}}],[\"支持多个容器在一个pod中共享网络和文件系统\",{\"1\":{\"914\":1}}],[\"支持多个logprivider\",{\"1\":{\"446\":1}}],[\"支持多节点分布式部署来保证高可用\",{\"1\":{\"661\":1}}],[\"支持多平台\",{\"1\":{\"243\":1}}],[\"支持多人和单人两种模式\",{\"1\":{\"243\":1}}],[\"支持多语言使网站可以覆盖更广泛的受众\",{\"1\":{\"142\":1}}],[\"支持白天\",{\"1\":{\"243\":1}}],[\"支持http\",{\"1\":{\"242\":1,\"308\":1}}],[\"支持一一些封装的检查\",{\"1\":{\"152\":1}}],[\"支持8个预定义的整型类型\",{\"1\":{\"75\":1}}],[\"工欲善其事\",{\"1\":{\"1110\":1}}],[\"工程\",{\"1\":{\"986\":1}}],[\"工号长度是10\",{\"1\":{\"474\":1}}],[\"工号不能为空\",{\"1\":{\"474\":1}}],[\"工号\",{\"1\":{\"474\":1,\"475\":1}}],[\"工厂利用反射机制找到对应的对象\",{\"1\":{\"442\":1}}],[\"工厂\",{\"1\":{\"438\":1,\"443\":1}}],[\"工厂模式的实现比较简单\",{\"1\":{\"438\":1}}],[\"工厂模式的最大好处是增加了创建对象时的封装层次\",{\"1\":{\"202\":1}}],[\"工厂模式在java\",{\"1\":{\"438\":1}}],[\"工厂模式\",{\"1\":{\"202\":1,\"438\":1,\"442\":1,\"445\":1}}],[\"工资偏低这个判断准确吗\",{\"1\":{\"201\":1}}],[\"工作流名称\",{\"1\":{\"1070\":1}}],[\"工作负载\",{\"0\":{\"958\":1}}],[\"工作进程分开\",{\"1\":{\"563\":1}}],[\"工作进程相同的进程中运行\",{\"1\":{\"562\":1}}],[\"工作区附件加颜色\",{\"1\":{\"254\":1}}],[\"工作区文件内容保持不变\",{\"1\":{\"29\":1}}],[\"工作拧螺丝\",{\"1\":{\"201\":1}}],[\"工作时长一下多了\",{\"1\":{\"198\":1}}],[\"工作踏实努力\",{\"1\":{\"179\":1}}],[\"工具的参数值\",{\"1\":{\"1037\":1}}],[\"工具的计算方式\",{\"1\":{\"779\":1}}],[\"工具=>自定义=>命令=>菜单栏=>文件=>添加命令=>文件=>高级保存选项\",{\"1\":{\"971\":1}}],[\"工具插件目录\",{\"1\":{\"967\":1}}],[\"工具怎么知道我们有一个文件没有追踪\",{\"1\":{\"780\":1}}],[\"工具将文件的原始内容进行一个压缩\",{\"1\":{\"779\":1}}],[\"工具存储的完整内容了\",{\"1\":{\"779\":1}}],[\"工具会分开显示\",{\"1\":{\"735\":1}}],[\"工具支持\",{\"1\":{\"668\":1}}],[\"工具里面就是用maven开发的一个个独立的module\",{\"1\":{\"210\":1}}],[\"工具\",{\"0\":{\"169\":1},\"1\":{\"869\":1,\"877\":1,\"968\":1,\"1037\":1}}],[\"工具网站\",{\"0\":{\"133\":1}}],[\"被用以提高开发人员生产率\",{\"1\":{\"968\":1}}],[\"被用于diagnosticsource和很多的事件监听中\",{\"1\":{\"202\":1}}],[\"被用于各种不可变的类如httpclient\",{\"1\":{\"202\":1}}],[\"被用于多个\",{\"1\":{\"202\":1}}],[\"被自动注册到集群\",{\"1\":{\"945\":1}}],[\"被终结的旧\",{\"1\":{\"936\":1}}],[\"被称为\",{\"1\":{\"935\":1,\"945\":1}}],[\"被称为catch\",{\"1\":{\"160\":1}}],[\"被监控的进程路径\",{\"1\":{\"564\":1}}],[\"被清除的原因\",{\"1\":{\"373\":1}}],[\"被注入的服务应该与注入的服务具有相同或者更长的生命周期\",{\"1\":{\"344\":1}}],[\"被裁员这个原因\",{\"1\":{\"187\":1}}],[\"被问了之后\",{\"1\":{\"187\":1}}],[\"被转换对象的运行时类型即不是所转换的目标类型\",{\"1\":{\"130\":1}}],[\"被引用对象本身不会被替换或者改变\",{\"1\":{\"127\":1}}],[\"转至下载\",{\"1\":{\"1110\":1}}],[\"转到输入的行号位置\",{\"1\":{\"965\":1}}],[\"转到定义\",{\"1\":{\"965\":1}}],[\"转发流量\",{\"1\":{\"945\":1}}],[\"转发到docker2\",{\"1\":{\"926\":1}}],[\"转码代理可以在传输\",{\"1\":{\"322\":1}}],[\"转码器\",{\"1\":{\"322\":1}}],[\"转向\",{\"1\":{\"243\":1}}],[\"转换为主机\",{\"1\":{\"1110\":1}}],[\"转换为布尔值\",{\"1\":{\"468\":1}}],[\"转换为整数\",{\"1\":{\"468\":1}}],[\"转换为抽象类类型\",{\"1\":{\"438\":1}}],[\"转换成客户期望的另一个接口\",{\"1\":{\"202\":1}}],[\"转换之后\",{\"1\":{\"127\":1}}],[\"转自\",{\"1\":{\"168\":1}}],[\"转载信息\",{\"0\":{\"875\":1}}],[\"转载地址\",{\"1\":{\"134\":1}}],[\"转载说明\",{\"0\":{\"121\":1}}],[\"向后映射\",{\"1\":{\"1061\":1}}],[\"向前映射\",{\"1\":{\"1061\":1}}],[\"向各个方向选中\",{\"1\":{\"965\":1}}],[\"向其添加\",{\"1\":{\"956\":1}}],[\"向项目或解决方案添加\",{\"1\":{\"956\":1}}],[\"向项目添加\",{\"1\":{\"955\":1}}],[\"向\",{\"1\":{\"926\":1,\"941\":1}}],[\"向日葵\",{\"1\":{\"243\":1}}],[\"向下转换错误会抛出invalidcastexception错误\",{\"1\":{\"128\":1}}],[\"向下转换必须是显式转换\",{\"1\":{\"128\":1}}],[\"向上类型转换创建一个基类指向子类的引用\",{\"1\":{\"127\":1}}],[\"向缓存区中添加内容\",{\"1\":{\"23\":1}}],[\"显著提高啦\",{\"1\":{\"870\":1}}],[\"显然第二种方式是小伙伴们更多的选择\",{\"1\":{\"843\":1}}],[\"显然这不是实时的\",{\"1\":{\"531\":1}}],[\"显式配置进行内托管\",{\"1\":{\"562\":1}}],[\"显式内连接\",{\"0\":{\"518\":1}}],[\"显式向下转换为子类的引用\",{\"1\":{\"126\":1}}],[\"显而易见如果这个属性设置为true\",{\"1\":{\"409\":1}}],[\"显示各种网络相关信息\",{\"1\":{\"1099\":1}}],[\"显示真实路径\",{\"1\":{\"1074\":1}}],[\"显示当前工作目录\",{\"0\":{\"1074\":1}}],[\"显示当前目录\",{\"1\":{\"752\":1}}],[\"显示错误如下\",{\"1\":{\"876\":1}}],[\"显示网络\",{\"1\":{\"843\":1}}],[\"显示时间戳\",{\"1\":{\"811\":1}}],[\"显示指定开始时间之后所有日志\",{\"1\":{\"811\":1}}],[\"显示所有的容器\",{\"1\":{\"811\":1}}],[\"显示主机中的容器\",{\"1\":{\"811\":1}}],[\"显示到指定的时间为止\",{\"1\":{\"809\":1}}],[\"显示顺序是从最近到最远的提交日志\",{\"1\":{\"770\":1}}],[\"显示下面的菜单\",{\"1\":{\"712\":1}}],[\"显示名\",{\"1\":{\"573\":1,\"1037\":1}}],[\"显示敏感数据日志\",{\"1\":{\"502\":1}}],[\"显示基本的swagger配置\",{\"1\":{\"479\":1}}],[\"显示中文系统\",{\"1\":{\"405\":1}}],[\"显示转换\",{\"0\":{\"128\":1},\"1\":{\"129\":2}}],[\"显示分支一览表\",{\"1\":{\"26\":1}}],[\"显示分支\",{\"1\":{\"26\":1}}],[\"发出查询\",{\"1\":{\"945\":1}}],[\"发出请求\",{\"1\":{\"503\":1}}],[\"发起一个获取新对象请求\",{\"1\":{\"438\":1}}],[\"发起一个查询会怎样\",{\"1\":{\"205\":1}}],[\"发行人\",{\"1\":{\"364\":1}}],[\"发行人验证\",{\"1\":{\"364\":1}}],[\"发射\",{\"1\":{\"243\":1}}],[\"发布之后会生成到相对路径为\",{\"1\":{\"1037\":1}}],[\"发布时就会自动拷贝到对应的发布目录\",{\"1\":{\"834\":1}}],[\"发布类库也会将其所有依赖项复制到发布输出\",{\"1\":{\"577\":1}}],[\"发布后如下\",{\"1\":{\"561\":1}}],[\"发布地址等\",{\"1\":{\"539\":1}}],[\"发布和监控的步骤\",{\"1\":{\"210\":1}}],[\"发布\",{\"0\":{\"835\":1},\"1\":{\"209\":1,\"216\":1,\"553\":1}}],[\"发布大量招聘需求\",{\"1\":{\"194\":1}}],[\"发往该\",{\"1\":{\"208\":1}}],[\"发送\",{\"1\":{\"1098\":1}}],[\"发送流量\",{\"1\":{\"944\":1}}],[\"发送到该主机端口的请求会被\",{\"1\":{\"930\":1}}],[\"发送docker\",{\"1\":{\"805\":3}}],[\"发送第一个请求\",{\"0\":{\"724\":1}}],[\"发送违规违法欺诈等等非正常消息\",{\"1\":{\"700\":1}}],[\"发送接口和状态查询接口\",{\"1\":{\"696\":1}}],[\"发送接口\",{\"1\":{\"696\":1}}],[\"发送完成之后\",{\"1\":{\"678\":1,\"681\":1}}],[\"发送短信服务\",{\"1\":{\"575\":1}}],[\"发送sigkill前的等待时间\",{\"1\":{\"564\":1}}],[\"发送信号给程序\",{\"1\":{\"564\":2}}],[\"发送消息查看结果\",{\"1\":{\"711\":1}}],[\"发送消息通知\",{\"1\":{\"575\":1,\"576\":1}}],[\"发送消息服务\",{\"1\":{\"575\":1}}],[\"发送消息的时候将deliverymode=2\",{\"1\":{\"208\":1}}],[\"发送消息前\",{\"1\":{\"208\":1}}],[\"发送方确认模式是异步的\",{\"1\":{\"208\":1}}],[\"发送方确认模式\",{\"1\":{\"208\":2}}],[\"发送请求\",{\"1\":{\"204\":1,\"926\":1}}],[\"发表\",{\"1\":{\"180\":1}}],[\"发现了\",{\"1\":{\"941\":1}}],[\"发现在提交的时候\",{\"1\":{\"782\":1}}],[\"发现在运行镜像的时候加上以下命令就可以了\",{\"1\":{\"125\":1}}],[\"发现其指向了\",{\"1\":{\"781\":1}}],[\"发现各有不同\",{\"1\":{\"780\":1}}],[\"发现一个文件被修改了\",{\"1\":{\"780\":1}}],[\"发现使我们无法理解的乱码\",{\"1\":{\"780\":1}}],[\"发现看着像是一串乱码\",{\"1\":{\"779\":1}}],[\"发现右侧新增了一个目录和两个文件\",{\"1\":{\"778\":1}}],[\"发现直接跳转一个api文档页面\",{\"1\":{\"551\":1}}],[\"发现界面有所不同\",{\"1\":{\"484\":1}}],[\"发现可以使用函数jsonb\",{\"1\":{\"342\":1}}],[\"发现太水了\",{\"1\":{\"180\":1}}],[\"发现不存在\",{\"1\":{\"134\":2}}],[\"发生的更改\",{\"1\":{\"1130\":1}}],[\"发生的概率其实是非常低的\",{\"1\":{\"134\":1}}],[\"发生内部错误从而导致消息丢失\",{\"1\":{\"208\":1}}],[\"发生\",{\"1\":{\"134\":1}}],[\"发生不一致\",{\"1\":{\"134\":3}}],[\"发音排序\",{\"1\":{\"124\":2,\"125\":1}}],[\"特权容器\",{\"1\":{\"914\":1}}],[\"特别方便构建超小的镜像\",{\"1\":{\"869\":1}}],[\"特别是先写测试\",{\"1\":{\"594\":1}}],[\"特别是需要实时更新敏感词\",{\"1\":{\"215\":1}}],[\"特别是当您使用web托管服务时\",{\"1\":{\"207\":1}}],[\"特别是有时候一轮面试里\",{\"1\":{\"184\":1}}],[\"特定方法设置版本\",{\"0\":{\"489\":1,\"640\":1,\"646\":1,\"652\":1}}],[\"特殊配置\",{\"1\":{\"579\":1}}],[\"特殊需求才会做此操作\",{\"1\":{\"470\":1}}],[\"特殊字符\",{\"1\":{\"125\":1}}],[\"特点\",{\"1\":{\"326\":1,\"667\":1}}],[\"特点在于他的分布式算法不是一致性\",{\"1\":{\"209\":1}}],[\"特性标记的方法\",{\"1\":{\"596\":3}}],[\"特性标签\",{\"1\":{\"43\":1}}],[\"特性注释属性\",{\"1\":{\"474\":1}}],[\"特性等信息\",{\"1\":{\"88\":1}}],[\"特性仅对类和\",{\"1\":{\"46\":1}}],[\"特性可使\",{\"1\":{\"46\":1}}],[\"特性类是直接或间接派生自\",{\"1\":{\"46\":1}}],[\"特性\",{\"0\":{\"41\":1},\"1\":{\"41\":1}}],[\"长话短说\",{\"1\":{\"944\":1}}],[\"长轮询仍然很流行\",{\"1\":{\"532\":1}}],[\"长轮询的缺点在于\",{\"1\":{\"532\":1}}],[\"长轮询和轮询比起来\",{\"1\":{\"532\":1}}],[\"长轮询是轮询的一种高级形式\",{\"1\":{\"532\":1}}],[\"长轮询\",{\"0\":{\"532\":1}}],[\"长度\",{\"1\":{\"779\":1}}],[\"长度是\",{\"1\":{\"474\":1,\"475\":1}}],[\"长度不超过10个\",{\"1\":{\"474\":1,\"475\":1}}],[\"长度不等\",{\"1\":{\"125\":1}}],[\"长度验证\",{\"1\":{\"474\":1}}],[\"长度相等\",{\"1\":{\"125\":1}}],[\"长度将不能更改\",{\"1\":{\"81\":1}}],[\"长\",{\"1\":{\"125\":3}}],[\"零基础必看的h5\",{\"1\":{\"330\":1}}],[\"零\",{\"1\":{\"125\":1}}],[\"小猫的代码之旅\",{\"1\":{\"1123\":1}}],[\"小乌龟\",{\"1\":{\"1014\":1}}],[\"小结\",{\"0\":{\"939\":1}}],[\"小到创建一个目录\",{\"1\":{\"879\":1}}],[\"小伙伴可以参考\",{\"1\":{\"833\":1}}],[\"小于12km\",{\"1\":{\"739\":1}}],[\"小于零\",{\"1\":{\"125\":1}}],[\"小程序\",{\"1\":{\"710\":1}}],[\"小七七\",{\"1\":{\"632\":1}}],[\"小版本\",{\"1\":{\"494\":1,\"498\":1}}],[\"小并发\",{\"1\":{\"206\":1}}],[\"小的数据集精度是非常高的\",{\"1\":{\"204\":1}}],[\"小总结\",{\"1\":{\"203\":1}}],[\"小数位\",{\"1\":{\"76\":1}}],[\"值更改时中断菜单\",{\"1\":{\"978\":1}}],[\"值更改时中断\",{\"0\":{\"978\":1},\"1\":{\"978\":1}}],[\"值为bearer\",{\"1\":{\"605\":1}}],[\"值可以是false\",{\"1\":{\"564\":2}}],[\"值类型\",{\"1\":{\"521\":1}}],[\"值类型的对象分配在堆栈上\",{\"1\":{\"203\":1}}],[\"值类型的赋值会产生一个新的数据副本\",{\"1\":{\"203\":1}}],[\"值类型和引用类型的区别\",{\"1\":{\"203\":1}}],[\"值是数组\",{\"1\":{\"393\":1}}],[\"值是字符串\",{\"1\":{\"392\":1}}],[\"值是int类型\",{\"1\":{\"392\":1}}],[\"值是\",{\"1\":{\"147\":1}}],[\"值\",{\"1\":{\"125\":1,\"373\":1}}],[\"饿\",{\"1\":{\"124\":1,\"125\":1}}],[\"啊吧饿我一鄭\",{\"1\":{\"124\":2,\"125\":1}}],[\"啊\",{\"1\":{\"124\":1,\"125\":2}}],[\"吧\",{\"1\":{\"124\":1,\"125\":1}}],[\"鄭\",{\"1\":{\"124\":1,\"125\":1}}],[\"汉字的排序方案\",{\"1\":{\"125\":1}}],[\"汉字可以有两种排序方案\",{\"1\":{\"124\":1}}],[\"汉字排序\",{\"0\":{\"124\":1}}],[\"按上面的步骤修改网卡配置文件中的\",{\"1\":{\"1111\":1}}],[\"按i进入编辑模式\",{\"1\":{\"1107\":1}}],[\"按键盘的windows键\",{\"1\":{\"1024\":1}}],[\"按键移动位置\",{\"1\":{\"243\":1}}],[\"按钮\",{\"1\":{\"1012\":1}}],[\"按alt+shift+\",{\"1\":{\"965\":1}}],[\"按住ctrl+alt键\",{\"1\":{\"965\":1}}],[\"按住alt\",{\"1\":{\"965\":1}}],[\"按住alt+shift键\",{\"1\":{\"965\":1}}],[\"按住alt键\",{\"1\":{\"965\":1}}],[\"按隧道类型来说\",{\"1\":{\"928\":1}}],[\"按级别搜索\",{\"1\":{\"738\":1}}],[\"按日期生成文件夹\",{\"1\":{\"447\":1}}],[\"按创建\",{\"1\":{\"331\":1}}],[\"按下\",{\"1\":{\"243\":3}}],[\"按照提示输入密码等设置\",{\"1\":{\"1037\":1}}],[\"按照自定义的规则\",{\"1\":{\"931\":1}}],[\"按照规则写好之后\",{\"1\":{\"818\":1}}],[\"按照上面的语法规则\",{\"1\":{\"812\":1}}],[\"按照继承的顺序\",{\"1\":{\"661\":1}}],[\"按照通俗的理解\",{\"1\":{\"593\":1}}],[\"按照维基百科上的说法\",{\"1\":{\"593\":1}}],[\"按照顺序扫描源\",{\"1\":{\"468\":1}}],[\"按照惯例\",{\"1\":{\"438\":1}}],[\"按照我之前操作的习惯\",{\"1\":{\"342\":1}}],[\"按照创建时间\",{\"1\":{\"331\":1}}],[\"按照范围查询\",{\"1\":{\"331\":1}}],[\"按照业务进行划分服务单元模块\",{\"1\":{\"210\":1}}],[\"按照延时双删策略\",{\"1\":{\"134\":1}}],[\"按照用户恢复\",{\"1\":{\"133\":1}}],[\"按照ascii排序\",{\"1\":{\"123\":1}}],[\"按值传递和按引用传递\",{\"0\":{\"55\":1}}],[\"仅主机模式\",{\"1\":{\"1110\":1}}],[\"仅修改\",{\"1\":{\"1077\":3}}],[\"仅列出目录\",{\"1\":{\"1074\":1}}],[\"仅限用于学习使用\",{\"1\":{\"973\":1}}],[\"仅限英语\",{\"1\":{\"964\":1}}],[\"仅靠docker0无法实现\",{\"1\":{\"928\":1}}],[\"仅当加载的版本等于或高于所请求的版本时\",{\"1\":{\"571\":1}}],[\"仅自己的数据\",{\"1\":{\"368\":2}}],[\"仅对关键消息作持久化处理\",{\"1\":{\"208\":1}}],[\"仅通过\",{\"1\":{\"208\":1}}],[\"仅刷新磁盘一次\",{\"1\":{\"205\":1}}],[\"仅是我做过的\",{\"1\":{\"204\":1}}],[\"仅此而已\",{\"1\":{\"175\":1}}],[\"仅搜索\",{\"1\":{\"119\":1}}],[\"仅包含两个值\",{\"1\":{\"77\":1}}],[\"指新的pod替换旧的pod的策略\",{\"1\":{\"914\":1}}],[\"指令通过\",{\"1\":{\"867\":1}}],[\"指令\",{\"0\":{\"867\":1},\"1\":{\"865\":2,\"867\":2}}],[\"指令从上到下逐一执行\",{\"1\":{\"818\":1}}],[\"指令有非常复杂的参数\",{\"1\":{\"209\":1}}],[\"指向发生变动了\",{\"1\":{\"785\":1}}],[\"指向\",{\"1\":{\"784\":1}}],[\"指向一个用\",{\"1\":{\"322\":1}}],[\"指示该模型中是否有无效的值\",{\"1\":{\"476\":1}}],[\"指的是\",{\"1\":{\"1110\":2}}],[\"指的是把对象的控制权交给了ioc容器\",{\"1\":{\"436\":1}}],[\"指的是控制对象的生命周期\",{\"1\":{\"436\":1}}],[\"指可包含层次结构上的静态成员\",{\"1\":{\"119\":1}}],[\"指可在搜索中包含非公共成员\",{\"1\":{\"119\":1}}],[\"指可在搜索中包含公共成员\",{\"1\":{\"119\":1}}],[\"指定dockerfile\",{\"1\":{\"1070\":1}}],[\"指定node节点\",{\"1\":{\"914\":1}}],[\"指定镜像默认执行的命令\",{\"1\":{\"865\":1}}],[\"指定镜像的名字及标签\",{\"1\":{\"835\":1}}],[\"指定工作目录\",{\"1\":{\"865\":1}}],[\"指定一个基础镜像\",{\"1\":{\"865\":1}}],[\"指定要使用redis镜像\",{\"1\":{\"852\":1}}],[\"指定要使用的dockerfile路径\",{\"1\":{\"835\":1}}],[\"指定要用的镜像\",{\"1\":{\"852\":1}}],[\"指定卷挂载路径\",{\"1\":{\"852\":1}}],[\"指定即可\",{\"1\":{\"843\":1}}],[\"指定网关\",{\"1\":{\"843\":1}}],[\"指定网络模式\",{\"1\":{\"839\":1,\"843\":1}}],[\"指定子网ip\",{\"1\":{\"843\":1}}],[\"指定维护人\",{\"1\":{\"837\":1}}],[\"指定维护者的相关信息\",{\"1\":{\"821\":1}}],[\"指定自己的工作目录\",{\"1\":{\"834\":1,\"837\":1}}],[\"指定根据镜像启动容器时要执行的命令\",{\"1\":{\"830\":1}}],[\"指定启动容器时要执行的命令\",{\"1\":{\"829\":1}}],[\"指定运行容器时对外暴露的端口\",{\"1\":{\"828\":1}}],[\"指定环境变量\",{\"1\":{\"824\":1}}],[\"指定路径\",{\"1\":{\"823\":1}}],[\"指定路径那种形式\",{\"1\":{\"815\":1}}],[\"指定基础镜像\",{\"1\":{\"820\":2,\"834\":1,\"837\":1}}],[\"指定主机目录\",{\"1\":{\"815\":1}}],[\"指定容器内的路径\",{\"1\":{\"815\":2}}],[\"指定具体的主机路径和容器内的路径\",{\"1\":{\"815\":1}}],[\"指定对应的tar文件\",{\"1\":{\"811\":1}}],[\"指定输出位置和文件名\",{\"1\":{\"811\":1}}],[\"指定导入的文件\",{\"1\":{\"810\":1}}],[\"指定版本拉取\",{\"1\":{\"810\":1}}],[\"指定版本的上个版本\",{\"1\":{\"32\":1}}],[\"指定条件搜索\",{\"1\":{\"810\":1}}],[\"指定端口映射\",{\"1\":{\"806\":1,\"811\":1}}],[\"指定本地目录\",{\"1\":{\"806\":1}}],[\"指定测试项目的目标框架\",{\"1\":{\"585\":1}}],[\"指定发送内容的格式\",{\"1\":{\"569\":1}}],[\"指定swagger\",{\"1\":{\"482\":1}}],[\"指定序列化方式为驼峰式\",{\"1\":{\"404\":1}}],[\"指定可以对它们应用属性的应用程序元素\",{\"1\":{\"400\":1}}],[\"指定的时候是可以要求数据同步到所有节点的\",{\"1\":{\"208\":1}}],[\"指定\",{\"1\":{\"163\":1,\"711\":1,\"852\":1}}],[\"指定泛型方法参数\",{\"1\":{\"106\":1}}],[\"指定泛型参数类型\",{\"1\":{\"101\":1}}],[\"枚举值\",{\"1\":{\"119\":1}}],[\"枚举等\",{\"1\":{\"93\":1}}],[\"输错了一次密码\",{\"1\":{\"775\":1}}],[\"输出参数等\",{\"1\":{\"483\":1}}],[\"输出错误信息\",{\"1\":{\"475\":1}}],[\"输出到不同的媒介\",{\"1\":{\"447\":1}}],[\"输出\",{\"0\":{\"466\":1},\"1\":{\"373\":2}}],[\"输出结果\",{\"1\":{\"342\":2,\"421\":1,\"447\":1,\"474\":1,\"477\":1}}],[\"输出为\",{\"1\":{\"157\":2}}],[\"输出当前区域以及排序\",{\"1\":{\"124\":1}}],[\"输出当前区域以及排序规则\",{\"1\":{\"124\":1,\"125\":1}}],[\"输出类型名\",{\"1\":{\"118\":1}}],[\"输入对应密码\",{\"1\":{\"1110\":1}}],[\"输入\",{\"1\":{\"1110\":2,\"1111\":3,\"1112\":1,\"1113\":1}}],[\"输入虚拟机名称以及虚拟机安装的位置\",{\"1\":{\"1110\":1}}],[\"输入ls命令查看\",{\"1\":{\"1104\":1}}],[\"输入用户名\",{\"1\":{\"1110\":1}}],[\"输入用户名root\",{\"1\":{\"1104\":1}}],[\"输入用户名和密码\",{\"1\":{\"775\":1}}],[\"输入到一个txt中\",{\"1\":{\"1096\":1}}],[\"输入y后回车确认删除\",{\"1\":{\"1094\":1}}],[\"输入任务名称并选择构建一个自由风格的任务\",{\"1\":{\"894\":1}}],[\"输入找到的管理员密码然后进入系统\",{\"1\":{\"888\":1}}],[\"输入命名\",{\"1\":{\"876\":1}}],[\"输入命令进行注册\",{\"1\":{\"6\":1}}],[\"输入你的用户名和密码store模式会存储\",{\"1\":{\"797\":1}}],[\"输入即可\",{\"1\":{\"775\":1}}],[\"输入id为\",{\"1\":{\"511\":1}}],[\"输入有误\",{\"1\":{\"476\":1}}],[\"输入模型类\",{\"1\":{\"475\":1}}],[\"输入刚才设置的密码下一步\",{\"1\":{\"312\":1}}],[\"输入url或者打印的日志就能直接搜索出我们想要的请求和日志\",{\"1\":{\"738\":1}}],[\"输入u\",{\"1\":{\"40\":2}}],[\"输入u=user\",{\"1\":{\"40\":1}}],[\"此数字发生更改意味着应用了一个更改\",{\"1\":{\"1130\":1}}],[\"此数字发生更改意味着添加了新功能\",{\"1\":{\"1130\":1}}],[\"此数字发生更改意味着代码可能出现中断性变更\",{\"1\":{\"1130\":1}}],[\"此功能将会跳过中间的语句\",{\"1\":{\"977\":1}}],[\"此功能在编辑器中突出显示插入符号位置的所有文本匹配\",{\"1\":{\"968\":1}}],[\"此用户还可以直接在\",{\"1\":{\"968\":1}}],[\"此用户下所有科目成绩\",{\"1\":{\"523\":1}}],[\"此扩展允许您直接在\",{\"1\":{\"968\":1}}],[\"此命令会安装\",{\"1\":{\"862\":1}}],[\"此主机上启动的docker容器默认会连接到这个虚拟网桥上\",{\"1\":{\"839\":1}}],[\"此事件会在配置项目发生新增\",{\"1\":{\"661\":1}}],[\"此设置与private的效果相同\",{\"1\":{\"577\":1}}],[\"此选项将用于不提供版本的请求\",{\"1\":{\"494\":1,\"498\":1,\"638\":1,\"644\":1,\"650\":1}}],[\"此\",{\"1\":{\"446\":1}}],[\"此方法不同于actionfilter的是\",{\"1\":{\"403\":1}}],[\"此方法的作用与\",{\"1\":{\"117\":1}}],[\"此游戏使用网页前端技术进行开发\",{\"1\":{\"243\":1}}],[\"此处默认执行\",{\"1\":{\"865\":1}}],[\"此处基于\",{\"1\":{\"865\":1}}],[\"此处token是伪值\",{\"1\":{\"604\":1,\"609\":1,\"613\":1,\"622\":1,\"627\":1,\"632\":1}}],[\"此处\",{\"1\":{\"561\":1,\"563\":2,\"771\":1,\"1012\":1}}],[\"此处主要目的是在该middleware中\",{\"1\":{\"167\":1}}],[\"此处我删减了部分线程竞争代码\",{\"1\":{\"167\":1}}],[\"此处仅为演示\",{\"1\":{\"156\":1}}],[\"此时分区包含了\",{\"1\":{\"1110\":1}}],[\"此时只是一台裸机\",{\"1\":{\"1110\":1}}],[\"此时开启的第一个终端就实时输出事件消息\",{\"1\":{\"809\":1}}],[\"此时与我们本地\",{\"1\":{\"788\":1}}],[\"此时项目的目录结构为\",{\"1\":{\"553\":1}}],[\"此时导致\",{\"1\":{\"208\":1}}],[\"此时\",{\"1\":{\"161\":4}}],[\"此时如果项目\",{\"1\":{\"134\":1}}],[\"此时我们可以使用枚举中的flags特性\",{\"1\":{\"43\":1}}],[\"此时我们刷新远程仓库的页面\",{\"1\":{\"22\":1}}],[\"此当前实例位于排序顺序中由compareto方法自变量指定的对象之后\",{\"1\":{\"125\":1}}],[\"此当前实例在排序顺序中与compareto方法参数指定的对象出现在同一位置\",{\"1\":{\"125\":1}}],[\"此对象在排序顺序中位于compareto方法所指定的对象之前\",{\"1\":{\"125\":1}}],[\"与虚拟机网段一致\",{\"1\":{\"1110\":1}}],[\"与通用\",{\"1\":{\"1110\":1}}],[\"与制作容器时暴露的端口一致\",{\"1\":{\"923\":1}}],[\"与其后端\",{\"1\":{\"918\":1}}],[\"与持续部署\",{\"1\":{\"877\":1}}],[\"与dockerifle中的volume\",{\"1\":{\"852\":1}}],[\"与之对应的是detached模式\",{\"1\":{\"811\":1}}],[\"与工作区的文件内容进行对比而来的\",{\"1\":{\"780\":1}}],[\"与grpc客户端集成的httpclientfactory\",{\"1\":{\"668\":1}}],[\"与你的孩子开启另一趟徒步旅程\",{\"1\":{\"532\":1}}],[\"与firstordefaultasync\",{\"1\":{\"503\":1}}],[\"与软件系统中对象之间的耦合关系非常相似\",{\"1\":{\"435\":1}}],[\"与后台应用分开部署\",{\"1\":{\"207\":1}}],[\"与普通中间件不同的是\",{\"1\":{\"157\":1}}],[\"与此同时集群中所有节点都会配置相应的\",{\"1\":{\"945\":1}}],[\"与此同时\",{\"1\":{\"134\":1}}],[\"与\",{\"1\":{\"117\":1,\"457\":1,\"513\":1}}],[\"操作系统可在swap暂存一些内存中放不下的东西\",{\"1\":{\"1110\":1}}],[\"操作更方便哦\",{\"1\":{\"1110\":1}}],[\"操作键盘选择install\",{\"1\":{\"1104\":1}}],[\"操作win+v快捷键\",{\"1\":{\"1031\":1}}],[\"操作什么就是什么\",{\"1\":{\"826\":1}}],[\"操作之后\",{\"1\":{\"799\":1}}],[\"操作不会生成\",{\"1\":{\"782\":1}}],[\"操作不允许失误\",{\"1\":{\"133\":1}}],[\"操作方便\",{\"1\":{\"570\":1}}],[\"操作筛选器来执行自定义验证\",{\"1\":{\"477\":1}}],[\"操作实例\",{\"1\":{\"378\":1}}],[\"操作实例一\",{\"0\":{\"109\":1,\"112\":1,\"115\":1}}],[\"操作者单例\",{\"1\":{\"368\":1}}],[\"操作者模型\",{\"1\":{\"368\":1}}],[\"操作模型\",{\"1\":{\"368\":1}}],[\"操作string类型需要安装组件\",{\"1\":{\"366\":1}}],[\"操作linux\",{\"0\":{\"279\":1}}],[\"操作\",{\"0\":{\"155\":1,\"413\":1,\"416\":1,\"418\":1,\"421\":1,\"424\":1,\"427\":1,\"786\":1},\"1\":{\"802\":1}}],[\"操作缓存和写消息队列\",{\"1\":{\"134\":1}}],[\"操作失败\",{\"1\":{\"134\":1}}],[\"操作数据库和缓存的时间\",{\"1\":{\"134\":1}}],[\"操作示例二\",{\"0\":{\"106\":1}}],[\"操作示例一\",{\"0\":{\"98\":1,\"105\":1}}],[\"泛型类似c++中的模板\",{\"1\":{\"203\":1}}],[\"泛型类中的泛型参数与泛型方法的泛型参数不一致\",{\"1\":{\"106\":1}}],[\"泛型类中的泛型参数与泛型方法的泛型参数一致\",{\"1\":{\"106\":1}}],[\"泛型版本\",{\"1\":{\"120\":1}}],[\"泛型参数按从左到右顺序传入\",{\"1\":{\"106\":1}}],[\"泛型参数类型\",{\"1\":{\"97\":1}}],[\"个虚拟网卡适配器\",{\"1\":{\"1110\":1}}],[\"个为一组\",{\"1\":{\"1081\":1}}],[\"个字符表示的\",{\"1\":{\"1081\":1}}],[\"个变动时间\",{\"1\":{\"1077\":1}}],[\"个步骤是关键环节\",{\"1\":{\"941\":1}}],[\"个网站程序\",{\"1\":{\"689\":1}}],[\"个性化\",{\"0\":{\"339\":1}}],[\"个复制品\",{\"1\":{\"209\":1}}],[\"个哈希槽\",{\"1\":{\"209\":1}}],[\"个订单给查出来\",{\"1\":{\"208\":1}}],[\"个订单都丢了\",{\"1\":{\"208\":1}}],[\"个时\",{\"1\":{\"204\":1}}],[\"个选了另一个\",{\"1\":{\"204\":1}}],[\"个选了一个\",{\"1\":{\"204\":1}}],[\"个月工资\",{\"1\":{\"200\":1}}],[\"个人看法\",{\"1\":{\"697\":1}}],[\"个人感觉效果还是不错的\",{\"1\":{\"683\":1}}],[\"个人学习汇总\",{\"1\":{\"599\":1}}],[\"个人觉得\",{\"1\":{\"598\":1}}],[\"个人信息那里就放了一个在线的\",{\"1\":{\"338\":1}}],[\"个人项目\",{\"0\":{\"223\":1}}],[\"个人基本信息\",{\"1\":{\"178\":1}}],[\"个人照片\",{\"0\":{\"177\":1}}],[\"个人展示\",{\"1\":{\"10\":1}}],[\"个条件\",{\"1\":{\"134\":1}}],[\"个线程并发\",{\"1\":{\"134\":1}}],[\"个线程要并发\",{\"1\":{\"134\":2}}],[\"个\",{\"1\":{\"134\":1,\"204\":1,\"209\":1,\"1098\":1}}],[\"个问题的解决方案是这样的\",{\"1\":{\"134\":1}}],[\"个问题的核心在于\",{\"1\":{\"134\":1}}],[\"个问题呢\",{\"1\":{\"134\":1}}],[\"个问题\",{\"1\":{\"134\":2}}],[\"个数\",{\"1\":{\"105\":1,\"206\":1}}],[\"个数获取\",{\"1\":{\"99\":1}}],[\"获得最佳性能\",{\"1\":{\"666\":1}}],[\"获得当前对象所属的类所在的程序集\",{\"1\":{\"117\":1}}],[\"获得当前\",{\"1\":{\"117\":1}}],[\"获得实例的方法\",{\"1\":{\"98\":1}}],[\"获取资源的速度比较快\",{\"1\":{\"1110\":1}}],[\"获取当前进程信息\",{\"1\":{\"1101\":1}}],[\"获取进程信息\",{\"1\":{\"1101\":1}}],[\"获取连接字符串\",{\"1\":{\"1047\":1}}],[\"获取上传到oss的keyid和keysecret\",{\"1\":{\"954\":1}}],[\"获取上传头像接口返回url的值\",{\"1\":{\"745\":1}}],[\"获取后还需要从远程这个分支合并到本地这个分支\",{\"1\":{\"798\":1}}],[\"获取列表中最后一个元素\",{\"1\":{\"746\":1}}],[\"获取id的值\",{\"1\":{\"746\":1}}],[\"获取points中的第二个元素\",{\"1\":{\"746\":1}}],[\"获取json体数据\",{\"1\":{\"746\":3}}],[\"获取jsondata中键名为value的值\",{\"1\":{\"739\":1}}],[\"获取user\",{\"1\":{\"746\":3}}],[\"获取集合变量\",{\"1\":{\"743\":1}}],[\"获取全局变量\",{\"1\":{\"743\":1}}],[\"获取环境变量\",{\"1\":{\"743\":1}}],[\"获取不同类型的变量\",{\"1\":{\"743\":1}}],[\"获取不到抛出异常\",{\"1\":{\"352\":1}}],[\"获取不到为null\",{\"1\":{\"352\":1}}],[\"获取的方式都是一样的编写规则\",{\"1\":{\"743\":1}}],[\"获取变量\",{\"0\":{\"743\":1},\"1\":{\"740\":1,\"743\":1}}],[\"获取响应体\",{\"1\":{\"739\":1}}],[\"获取响应体等于response\",{\"1\":{\"739\":1}}],[\"获取响应文本中包含string\",{\"1\":{\"739\":1}}],[\"获取打印数据\",{\"1\":{\"693\":1}}],[\"获取用户设定的安装目标路径\",{\"1\":{\"692\":1}}],[\"获取用户信息返回类\",{\"1\":{\"671\":1}}],[\"获取用户信息请求类\",{\"1\":{\"671\":1}}],[\"获取用户信息\",{\"1\":{\"671\":1}}],[\"获取请求的用户id列表\",{\"1\":{\"677\":1,\"680\":1}}],[\"获取form服务\",{\"1\":{\"660\":2}}],[\"获取namespace中版本号部分\",{\"1\":{\"656\":1}}],[\"获取到文件列表\",{\"1\":{\"616\":1}}],[\"获取到body的请求字符串\",{\"1\":{\"402\":1}}],[\"获取文件的内容\",{\"1\":{\"580\":1}}],[\"获取插件加载的信息\",{\"1\":{\"574\":1}}],[\"获取天气\",{\"1\":{\"401\":1}}],[\"获取数组第一个\",{\"1\":{\"392\":1}}],[\"获取单个项\",{\"0\":{\"391\":1}}],[\"获取配置\",{\"0\":{\"390\":1}}],[\"获取缓存\",{\"1\":{\"381\":1,\"386\":1}}],[\"获取rediscache实例\",{\"1\":{\"381\":1,\"386\":1}}],[\"获取\",{\"1\":{\"366\":2,\"368\":1,\"746\":1,\"798\":3}}],[\"获取存入的名称信息\",{\"1\":{\"361\":1}}],[\"获取信息\",{\"0\":{\"361\":1}}],[\"获取swagger的json地址\",{\"1\":{\"232\":1}}],[\"获取主节点的核心入口为\",{\"1\":{\"204\":1}}],[\"获取终结点\",{\"0\":{\"157\":1}}],[\"获取值\",{\"1\":{\"115\":1}}],[\"获取字段\",{\"1\":{\"115\":1}}],[\"获取字段类型\",{\"1\":{\"114\":1}}],[\"获取字段是否为\",{\"1\":{\"114\":1}}],[\"获取字段名称\",{\"1\":{\"114\":1}}],[\"获取所有的用户信息\",{\"1\":{\"676\":1}}],[\"获取所有用户信息\",{\"1\":{\"675\":1}}],[\"获取所有信息\",{\"1\":{\"674\":1}}],[\"获取所有\",{\"1\":{\"112\":1}}],[\"获取所有公共构造函数\",{\"1\":{\"99\":1}}],[\"获取所有公共成员\",{\"1\":{\"99\":2}}],[\"获取所有公共接口\",{\"1\":{\"97\":1,\"99\":1}}],[\"获取所有公共属性\",{\"1\":{\"97\":1,\"99\":1}}],[\"获取所有公共字段\",{\"1\":{\"97\":1,\"99\":1}}],[\"获取所有公共方法\",{\"1\":{\"97\":1,\"99\":1}}],[\"获取对象属性值\",{\"1\":{\"111\":1}}],[\"获取对象类型是否公开\",{\"1\":{\"97\":1}}],[\"获取对象类型是否是枚举\",{\"1\":{\"97\":1}}],[\"获取对象类型是否是数组\",{\"1\":{\"97\":1}}],[\"获取对象类型是否是密封的\",{\"1\":{\"97\":1}}],[\"获取对象类型是否是抽象的\",{\"1\":{\"97\":1}}],[\"获取对象类型是否是接口\",{\"1\":{\"97\":1}}],[\"获取对象类型是否是类\",{\"1\":{\"97\":1}}],[\"获取属性值\",{\"1\":{\"112\":1}}],[\"获取属性\",{\"1\":{\"112\":1}}],[\"获取属性类型\",{\"1\":{\"111\":1}}],[\"获取属性是否可写\",{\"1\":{\"111\":1}}],[\"获取属性是否可读\",{\"1\":{\"111\":1}}],[\"获取属性名称\",{\"1\":{\"111\":1}}],[\"获取调用非泛型重载有参数方法\",{\"1\":{\"105\":1}}],[\"获取调用非泛型重载无参数方法\",{\"1\":{\"105\":1}}],[\"获取调用非泛型非重载无参数方法\",{\"1\":{\"105\":1}}],[\"获取指定服务\",{\"1\":{\"660\":1}}],[\"获取指定配置\",{\"1\":{\"583\":1}}],[\"获取指定的json值的json路径返回的所有json项\",{\"1\":{\"343\":1}}],[\"获取指定\",{\"1\":{\"112\":1}}],[\"获取指定特性\",{\"1\":{\"104\":1,\"108\":1,\"111\":1,\"114\":1}}],[\"获取指定类型的属性值\",{\"1\":{\"64\":1}}],[\"获取此字段指定特性数组\",{\"1\":{\"114\":1}}],[\"获取此字段是否继承指定特性\",{\"1\":{\"114\":1}}],[\"获取此属性指定特性数组\",{\"1\":{\"111\":1}}],[\"获取此属性是否继承指定特性\",{\"1\":{\"111\":1}}],[\"获取此构造函数指定特性数组\",{\"1\":{\"108\":1}}],[\"获取此构造函数是否继承指定特性\",{\"1\":{\"108\":1}}],[\"获取此方法指定特性数组\",{\"1\":{\"104\":1}}],[\"获取此方法是否继承指定特性\",{\"1\":{\"104\":1}}],[\"获取此类型指定特性\",{\"1\":{\"97\":1}}],[\"获取此类型指定特性数组\",{\"1\":{\"97\":1}}],[\"获取此类型是否继承指定特性\",{\"1\":{\"97\":1}}],[\"获取方法参数数组\",{\"1\":{\"104\":1}}],[\"获取方法返回值类型\",{\"1\":{\"104\":1}}],[\"获取特性\",{\"0\":{\"102\":1}}],[\"获取有一个泛型参数的类\",{\"1\":{\"101\":1}}],[\"获取泛型方法与获取普通方法一致\",{\"1\":{\"106\":1}}],[\"获取泛型方法\",{\"0\":{\"101\":1},\"1\":{\"101\":1,\"106\":1}}],[\"获取泛型类型\",{\"1\":{\"95\":1}}],[\"获取静态方法\",{\"0\":{\"100\":1}}],[\"获取公共重载方法\",{\"1\":{\"99\":1}}],[\"获取公共接口\",{\"1\":{\"97\":1}}],[\"获取公共属性\",{\"1\":{\"97\":1,\"112\":1}}],[\"获取公共字段\",{\"1\":{\"97\":1}}],[\"获取公共方法\",{\"0\":{\"99\":1},\"1\":{\"97\":2,\"99\":1}}],[\"获取公共成员\",{\"1\":{\"97\":1}}],[\"获取基类\",{\"1\":{\"97\":1}}],[\"获取类所在程序集名称\",{\"1\":{\"97\":1}}],[\"获取类所在的命名空间\",{\"1\":{\"97\":1}}],[\"获取类全名\",{\"1\":{\"97\":1}}],[\"获取类型公共属性\",{\"1\":{\"99\":1}}],[\"获取类型公共字段\",{\"1\":{\"99\":1}}],[\"获取类型中所有公共构造函数\",{\"1\":{\"97\":1}}],[\"获取类型中所有公共成员\",{\"1\":{\"97\":1}}],[\"获取类型名称\",{\"1\":{\"97\":1}}],[\"获取类型\",{\"0\":{\"95\":1}}],[\"获取普通类型\",{\"1\":{\"95\":1}}],[\"获取程序集中定义的所有公共类型\",{\"1\":{\"93\":1}}],[\"获取程序集中定义的类型\",{\"1\":{\"93\":1}}],[\"获取程序集中定义的类型数组\",{\"1\":{\"93\":1}}],[\"获取程序集的完整路径\",{\"1\":{\"93\":1}}],[\"获取程序集的显示名称\",{\"1\":{\"93\":1}}],[\"获取定义在程序集中模块集合\",{\"1\":{\"93\":1}}],[\"获取定义在程序集中类型集合\",{\"1\":{\"93\":1}}],[\"获取或设置属性值\",{\"1\":{\"87\":1}}],[\"获取自定义属性注解\",{\"1\":{\"47\":1}}],[\"获取自定义参数\",{\"1\":{\"46\":1}}],[\"获取customrabbitmqattribute注解\",{\"1\":{\"46\":1}}],[\"获取最新的远程分支内容\",{\"1\":{\"23\":1}}],[\"获取地址在\",{\"1\":{\"6\":1}}],[\"+q键\",{\"1\":{\"1024\":1}}],[\"+refs\",{\"1\":{\"788\":1}}],[\"+git\",{\"1\":{\"769\":1}}],[\"+1\",{\"1\":{\"769\":1}}],[\"+++\",{\"1\":{\"769\":1}}],[\"+i\",{\"1\":{\"688\":1,\"965\":1}}],[\"+id\",{\"1\":{\"120\":1}}],[\"+=\",{\"1\":{\"413\":1,\"477\":2,\"497\":1,\"661\":1}}],[\"+css3+移动端前端视频教程\",{\"1\":{\"330\":1}}],[\"+\",{\"1\":{\"98\":16,\"109\":1,\"118\":2,\"120\":1,\"134\":14,\"159\":1,\"167\":5,\"199\":1,\"204\":2,\"243\":2,\"394\":1,\"402\":3,\"404\":1,\"413\":1,\"421\":1,\"424\":2,\"427\":1,\"495\":1,\"499\":1,\"574\":1,\"600\":2,\"607\":2,\"620\":2,\"625\":2,\"672\":1,\"675\":2,\"684\":1,\"687\":4,\"688\":1,\"692\":9,\"693\":7,\"712\":1,\"735\":1,\"837\":1,\"838\":2,\"899\":1,\"965\":11,\"1084\":6,\"1110\":6,\"1111\":2,\"1113\":1}}],[\"+x\",{\"1\":{\"3\":1,\"847\":1}}],[\"多\",{\"1\":{\"1110\":1}}],[\"多线程处理\",{\"0\":{\"1045\":1}}],[\"多线程的线程池的设计一般也是采用单例模式\",{\"1\":{\"202\":1}}],[\"多行编辑\",{\"1\":{\"965\":1}}],[\"多出了\",{\"1\":{\"863\":1}}],[\"多层json嵌套\",{\"1\":{\"746\":1}}],[\"多通道\",{\"1\":{\"696\":1}}],[\"多语言混合开发\",{\"1\":{\"664\":1}}],[\"多语言配置\",{\"0\":{\"142\":1}}],[\"多年来\",{\"1\":{\"530\":1}}],[\"多人游戏\",{\"1\":{\"530\":1}}],[\"多带一个手机\",{\"1\":{\"433\":1}}],[\"多项目切换工具\",{\"1\":{\"321\":1}}],[\"多少有点卡顿\",{\"1\":{\"320\":1}}],[\"多风格\",{\"1\":{\"295\":1}}],[\"多种游戏引擎\",{\"1\":{\"243\":1}}],[\"多轮面试\",{\"1\":{\"201\":1}}],[\"多报了当前收入\",{\"1\":{\"195\":1}}],[\"多文字类\",{\"1\":{\"133\":1}}],[\"多个请求\",{\"1\":{\"679\":1}}],[\"多个请求对象\",{\"1\":{\"676\":1}}],[\"多个节点使用逗号分隔\",{\"1\":{\"661\":1}}],[\"多个from并联拼接\",{\"0\":{\"519\":1}}],[\"多个服务必须协同工作才能使业务成功\",{\"1\":{\"210\":1}}],[\"多个工作进程\",{\"1\":{\"207\":1}}],[\"多个线程尽量以相同的顺序去获取资源\",{\"1\":{\"206\":1}}],[\"多个内核提供的额外并发远胜过稍微快一点点的时钟频率\",{\"1\":{\"204\":1}}],[\"多个路由参数间必须通过文本或分隔符分隔\",{\"1\":{\"159\":1}}],[\"多个参数用逗号隔开\",{\"1\":{\"105\":1}}],[\"多个\",{\"1\":{\"97\":1,\"1126\":1}}],[\"多了get\",{\"1\":{\"59\":1}}],[\"下表说明了每个版本类型的版本号如何更改\",{\"1\":{\"1130\":1}}],[\"下可以有多个虚拟机\",{\"1\":{\"1110\":1}}],[\"下拉列表选择我们配置好的\",{\"1\":{\"1104\":1}}],[\"下以一个多级树状结构来组织目录和文件的\",{\"1\":{\"1071\":1}}],[\"下\",{\"1\":{\"965\":1}}],[\"下使用\",{\"1\":{\"868\":1}}],[\"下并不好使\",{\"1\":{\"868\":1}}],[\"下生成2个名为id\",{\"1\":{\"802\":1}}],[\"下一步\",{\"1\":{\"802\":10,\"1110\":12}}],[\"下划线\",{\"1\":{\"794\":1}}],[\"下述命令原理也是一样的\",{\"1\":{\"787\":1}}],[\"下下策\",{\"1\":{\"786\":1}}],[\"下来我们再来关注下body中的几个显示主题\",{\"1\":{\"735\":1}}],[\"下图所示的文件状态\",{\"1\":{\"782\":1}}],[\"下图\",{\"1\":{\"722\":1}}],[\"下载后通过命令检查安装包是否符合\",{\"1\":{\"1134\":1}}],[\"下载后就能使用\",{\"1\":{\"1031\":1}}],[\"下载jdk\",{\"0\":{\"1134\":1}}],[\"下载的版本是\",{\"1\":{\"1110\":1}}],[\"下载完成后镜像文件大小为\",{\"1\":{\"1110\":1}}],[\"下载完成后运行安装包\",{\"1\":{\"876\":1}}],[\"下载系统镜像\",{\"0\":{\"1103\":1}}],[\"下载链接\",{\"1\":{\"1012\":2}}],[\"下载时候要选择中文\",{\"1\":{\"1012\":1}}],[\"下载好net\",{\"1\":{\"1012\":1}}],[\"下载之后在开始菜单就可以看到安装好的ubuntu系统\",{\"1\":{\"1007\":1}}],[\"下载它们\",{\"1\":{\"964\":1}}],[\"下载引导程序\",{\"0\":{\"963\":1}}],[\"下载所需\",{\"1\":{\"962\":1}}],[\"下载合适系统的版本\",{\"1\":{\"951\":1}}],[\"下载安装\",{\"1\":{\"868\":1,\"951\":1}}],[\"下载rpm软件包并手动安装\",{\"1\":{\"862\":1}}],[\"下载下来的文件默认是没有执行权限的\",{\"1\":{\"847\":1}}],[\"下载docker\",{\"1\":{\"846\":1}}],[\"下载文件\",{\"0\":{\"846\":1}}],[\"下载\",{\"1\":{\"805\":1,\"1012\":1}}],[\"下载最新版本\",{\"1\":{\"722\":1}}],[\"下载与安装\",{\"0\":{\"722\":1}}],[\"下载客户端使用\",{\"1\":{\"708\":1}}],[\"下载并安装控件\",{\"1\":{\"693\":1}}],[\"下载地址已经失效\",{\"1\":{\"1134\":1}}],[\"下载地址是\",{\"1\":{\"561\":1}}],[\"下载地址\",{\"1\":{\"171\":1,\"172\":1,\"263\":1,\"265\":1,\"273\":1,\"274\":1,\"276\":1,\"278\":1,\"281\":1,\"283\":1,\"292\":1,\"293\":1,\"311\":1,\"802\":2,\"1012\":3,\"1035\":6,\"1106\":1}}],[\"下午五点半的时候\",{\"1\":{\"432\":1}}],[\"下边的例子介绍netcore中缓存的常用配置\",{\"1\":{\"373\":1}}],[\"下加入\",{\"1\":{\"325\":1}}],[\"下加载指定名称程序集文件\",{\"1\":{\"94\":3}}],[\"下的应用程序\",{\"1\":{\"139\":1}}],[\"下次就可以从数据库读取到最新值\",{\"1\":{\"134\":1}}],[\"下游从队列拉取消息\",{\"1\":{\"134\":1}}],[\"下面\",{\"1\":{\"1110\":1}}],[\"下面简单描述下如何使用\",{\"1\":{\"1106\":1}}],[\"下面姐介绍一下文件权限\",{\"1\":{\"1080\":1}}],[\"下面来简单介绍一下我的发布步骤吧\",{\"1\":{\"1037\":1}}],[\"下面包含通过docker部署netcore步骤\",{\"1\":{\"881\":1}}],[\"下面是这个演示的源代码\",{\"1\":{\"985\":1}}],[\"下面是一系列visual\",{\"1\":{\"974\":1}}],[\"下面是执行docker\",{\"1\":{\"852\":1}}],[\"下面是几个可以动态选择代理的方式\",{\"1\":{\"322\":1}}],[\"下面安装语言包\",{\"1\":{\"802\":1}}],[\"下面这种动图是nse在监视窗口的使用\",{\"1\":{\"984\":1}}],[\"下面这个实验\",{\"1\":{\"869\":1}}],[\"下面这个例子可以作为一个最基本的入门\",{\"1\":{\"724\":1}}],[\"下面这句默认不写也可以\",{\"1\":{\"638\":1}}],[\"下面就通过一张图来说明这些元素的含义\",{\"1\":{\"723\":1}}],[\"下面就以\",{\"1\":{\"721\":1}}],[\"下面先通过一张图来直观的来看下postman中所包含的功能\",{\"1\":{\"717\":1}}],[\"下面开始编写代码\",{\"1\":{\"694\":1}}],[\"下面模拟一个服务器告警来做一个演示消息通知\",{\"1\":{\"694\":1}}],[\"下面提供的2\",{\"1\":{\"693\":1}}],[\"下面其他的方法一样\",{\"1\":{\"604\":1}}],[\"下面在演示一个对用户添加的方法编写单元测试\",{\"1\":{\"591\":1}}],[\"下面说明下如何进行自定义获取配置\",{\"1\":{\"581\":1}}],[\"下面的步骤就是使用该工具来完成的\",{\"1\":{\"1104\":1}}],[\"下面的动图演示了如何跟踪作用域外对象的属性获取器的状态\",{\"1\":{\"981\":1}}],[\"下面的动图说明了这种可能性\",{\"1\":{\"980\":1,\"984\":1}}],[\"下面的动画说明了这个功能\",{\"1\":{\"978\":1}}],[\"下面的图中\",{\"1\":{\"942\":1}}],[\"下面的部分代码如上\",{\"1\":{\"673\":1}}],[\"下面的示例为毛坯房版本\",{\"1\":{\"571\":1}}],[\"下面的脚本只是测试使用\",{\"1\":{\"35\":1}}],[\"下面过滤器的顺序就是执行的顺序\",{\"1\":{\"400\":1}}],[\"下面我就来演示如何安装tortoisegit以及汉化\",{\"1\":{\"802\":1}}],[\"下面我就通过该sdk来实现两个简单的功能\",{\"1\":{\"710\":1}}],[\"下面我将简单了解一下朋友们推荐的服务\",{\"1\":{\"695\":1}}],[\"下面我通过几个示例来给你解释一下代理服务器都有哪些用途和作用\",{\"1\":{\"322\":1}}],[\"下面我们开始一步步优化\",{\"1\":{\"865\":1}}],[\"下面我们开始部署项目\",{\"1\":{\"539\":1}}],[\"下面我们使用gitee作为源代码仓库作为演示\",{\"1\":{\"802\":1}}],[\"下面我们来演示一下xunit测试框架的简单使用\",{\"1\":{\"584\":1}}],[\"下面我们就开始配置git的ssh\",{\"1\":{\"802\":1}}],[\"下面我们就开始随便创建一个类库然后打包推送\",{\"1\":{\"212\":1,\"1118\":1}}],[\"下面我们就从头开始部署下我们的程序到iis\",{\"1\":{\"559\":1}}],[\"下面我们可以直接通过容器访问上面的项目\",{\"1\":{\"554\":1}}],[\"下面我们需要在github中添加公开密钥\",{\"1\":{\"19\":1}}],[\"下面会贴一些常见功能的界面\",{\"1\":{\"312\":1}}],[\"下面由紧到松介绍一下几种常见的开源许可\",{\"1\":{\"247\":1}}],[\"下面只是关于dapper操作数据库读写分离的构思\",{\"1\":{\"1047\":1}}],[\"下面只对其中我个人习惯的方法做示例\",{\"1\":{\"213\":1,\"1119\":1}}],[\"下面只说常见的使用\",{\"1\":{\"145\":1}}],[\"下面罗列几种特殊情况\",{\"1\":{\"208\":1}}],[\"下面重点列举一些调优策略\",{\"1\":{\"204\":1}}],[\"下面列举其中一个\",{\"1\":{\"204\":1}}],[\"下面给大家说说经常被问到的问题\",{\"1\":{\"186\":1}}],[\"下面内容就说明下\",{\"1\":{\"41\":1}}],[\"路径\",{\"1\":{\"564\":1,\"1037\":1}}],[\"路径自动补全\",{\"1\":{\"321\":1}}],[\"路径处理是用来为进入的请求寻找处理函数的机制\",{\"1\":{\"203\":1}}],[\"路径+文件名\",{\"1\":{\"94\":3}}],[\"路由表接口状态等\",{\"1\":{\"1099\":1}}],[\"路由到节点缺省网关的数据包会通过\",{\"1\":{\"944\":1}}],[\"路由到提供服务的\",{\"1\":{\"930\":1}}],[\"路由等信息\",{\"1\":{\"839\":1}}],[\"路由数据\",{\"1\":{\"468\":1}}],[\"路由系统选择该action后\",{\"1\":{\"468\":1}}],[\"路由匹配\",{\"1\":{\"167\":1}}],[\"路由参数和该参数的约束名会传递给iinlineconstraintresolver服务\",{\"1\":{\"162\":1}}],[\"路由约束一般是用来消除路由歧义\",{\"1\":{\"162\":1}}],[\"路由约束\",{\"0\":{\"162\":1}}],[\"路由模板优先级\",{\"0\":{\"165\":1}}],[\"路由模板中的星号\",{\"1\":{\"160\":1}}],[\"路由模板\",{\"0\":{\"159\":1}}],[\"路由是通过userouting和useendpoints两个中间件配合在一起来完成注册的\",{\"1\":{\"156\":1}}],[\"路由\",{\"0\":{\"156\":1},\"1\":{\"156\":1,\"916\":1}}],[\"路由键\",{\"1\":{\"46\":1}}],[\"相加\",{\"1\":{\"1084\":1}}],[\"相当于一个精简版的resharper\",{\"1\":{\"968\":1}}],[\"相当于指令\",{\"1\":{\"865\":1}}],[\"相当于\",{\"1\":{\"798\":2,\"1079\":1}}],[\"相当于commit\",{\"1\":{\"798\":1}}],[\"相同方式共享\",{\"1\":{\"599\":1}}],[\"相对路径\",{\"1\":{\"1072\":1}}],[\"相对路径下加载指定名称程序集文件\",{\"1\":{\"94\":1}}],[\"相对以远程仓库根路径的dockerfile的路径\",{\"1\":{\"1070\":1}}],[\"相对于add关键字来说更加透明\",{\"1\":{\"826\":1}}],[\"相对maintainer\",{\"1\":{\"821\":1}}],[\"相对来说还是很简单的\",{\"1\":{\"818\":1}}],[\"相对过期时间\",{\"1\":{\"373\":1}}],[\"相比\",{\"1\":{\"598\":1}}],[\"相比之下节约了资源\",{\"1\":{\"532\":1}}],[\"相比其他许可\",{\"1\":{\"247\":1}}],[\"相比普通路由模板来说\",{\"1\":{\"161\":1,\"163\":1}}],[\"相互协调\",{\"1\":{\"210\":1}}],[\"相信自己值这个价钱\",{\"1\":{\"198\":1}}],[\"相信不远的将来\",{\"1\":{\"134\":1}}],[\"相关的源码可以研究一下\",{\"1\":{\"443\":1}}],[\"相关的项目\",{\"1\":{\"252\":1}}],[\"相关文章\",{\"1\":{\"180\":1}}],[\"相关联\",{\"1\":{\"41\":1}}],[\"相反\",{\"1\":{\"134\":1}}],[\"有其他用途\",{\"1\":{\"1110\":1}}],[\"有下面几种\",{\"1\":{\"1081\":1}}],[\"有点繁琐\",{\"1\":{\"1065\":1}}],[\"有点繁杂\",{\"1\":{\"171\":1}}],[\"有道词典\",{\"1\":{\"1014\":1}}],[\"有道词典chrome划词插件\",{\"0\":{\"993\":1}}],[\"有线网卡驱动\",{\"1\":{\"1013\":1}}],[\"有线程\",{\"1\":{\"134\":1}}],[\"有趣的是\",{\"1\":{\"944\":1}}],[\"有自己的\",{\"1\":{\"939\":1}}],[\"有如下三种类型\",{\"1\":{\"914\":1}}],[\"有如下四种类型\",{\"1\":{\"914\":1}}],[\"有序删除\",{\"1\":{\"914\":1}}],[\"有序收缩\",{\"1\":{\"914\":1}}],[\"有序扩展\",{\"1\":{\"914\":1}}],[\"有序部署\",{\"1\":{\"914\":1}}],[\"有以下两种类型\",{\"1\":{\"914\":1}}],[\"有以下五种filter\",{\"1\":{\"399\":1}}],[\"有很多文件的\",{\"1\":{\"835\":1}}],[\"有很好的管理控制台\",{\"1\":{\"208\":1}}],[\"有多少写多少\",{\"1\":{\"852\":1}}],[\"有多少个容器\",{\"1\":{\"809\":1}}],[\"有多少个镜像\",{\"1\":{\"809\":1}}],[\"有多种方法可以告诉程序需要使用哪一个语言文件\",{\"1\":{\"145\":1}}],[\"有大神将常用命令用一张图很好的展现出来\",{\"1\":{\"807\":1}}],[\"有着多层嵌套\",{\"1\":{\"746\":1}}],[\"有助于管理文档中的空白\",{\"1\":{\"968\":1}}],[\"有助于我们接下来制作精简镜像\",{\"1\":{\"864\":1}}],[\"有助于我们更快定位到错误\",{\"1\":{\"738\":1}}],[\"有助于保护原有系统\",{\"1\":{\"634\":1}}],[\"有了这个项目就可以一键启动了\",{\"1\":{\"851\":1}}],[\"有了这个功能才是postman学习的开始\",{\"1\":{\"736\":1}}],[\"有了上述基础\",{\"1\":{\"784\":1}}],[\"有了倒排索引\",{\"1\":{\"204\":1}}],[\"有关\",{\"1\":{\"955\":1}}],[\"有关自定义协议的内容\",{\"1\":{\"691\":1}}],[\"有关了\",{\"1\":{\"134\":1}}],[\"有几个特殊的测试方法\",{\"1\":{\"596\":1}}],[\"有几百万消息持续积压几小时\",{\"1\":{\"208\":1}}],[\"有利于程序的解耦和模块化\",{\"1\":{\"594\":1}}],[\"有读者就会问了\",{\"1\":{\"442\":1}}],[\"有界上下文是领域驱动设计的核心模式\",{\"1\":{\"210\":1}}],[\"有时\",{\"1\":{\"984\":1}}],[\"有时发现在\",{\"1\":{\"965\":1}}],[\"有时能达到意想不到的精简效果\",{\"1\":{\"867\":1}}],[\"有时也承载与tls\",{\"1\":{\"323\":1}}],[\"有时在各种环境中维护组件的配置会很困难\",{\"1\":{\"210\":1}}],[\"有时候忽略警告会为应用埋下安全隐患\",{\"1\":{\"965\":1}}],[\"有时候通过写单元测试能够更好的完善自己程序的逻辑\",{\"1\":{\"594\":1}}],[\"有时候\",{\"1\":{\"576\":1}}],[\"有时候不可以调整下顺序\",{\"1\":{\"155\":1}}],[\"有时候我们又想进行单个检查\",{\"1\":{\"151\":1}}],[\"有什么缺点\",{\"1\":{\"209\":1}}],[\"有哪些适合的场景\",{\"1\":{\"209\":1}}],[\"有哪几种数据淘汰策略\",{\"1\":{\"209\":1}}],[\"有三种\",{\"1\":{\"914\":1}}],[\"有三种模式\",{\"1\":{\"208\":1}}],[\"有三个数据属性可用以修饰我们的自定义的属性\",{\"1\":{\"42\":1}}],[\"有针对性的进行优化\",{\"1\":{\"206\":1}}],[\"有的接口的输入参数有一些随机数\",{\"1\":{\"744\":1}}],[\"有的面试官问问题\",{\"1\":{\"201\":1}}],[\"有的还配了夸张的封面\",{\"1\":{\"182\":1}}],[\"有一种称为\",{\"1\":{\"1130\":1}}],[\"有一点要注意\",{\"1\":{\"1064\":1}}],[\"有一个\",{\"1\":{\"781\":1}}],[\"有一个求职者谈好薪酬之后过了一天\",{\"1\":{\"201\":1}}],[\"有一些东西都已经封住在sdk里面\",{\"1\":{\"710\":1}}],[\"有一些是\",{\"1\":{\"597\":1}}],[\"有一些国外的网站在国内是访问不了的\",{\"1\":{\"322\":1}}],[\"有一次我面试一个新人\",{\"1\":{\"186\":1}}],[\"有没有培训等等这种是你看重的问题\",{\"1\":{\"191\":1}}],[\"有待加强\",{\"1\":{\"189\":1}}],[\"有些镜像都不是我们自己来打包的\",{\"1\":{\"863\":1}}],[\"有些时候需要将已更改的容器生成一个新的镜像给其他人用\",{\"1\":{\"811\":1}}],[\"有些时候我们需要对测试的方法用到的数据或配置进行初始化\",{\"1\":{\"596\":1}}],[\"有些时候公司或者个人不希望某一些包进行公开\",{\"1\":{\"211\":1,\"1117\":1}}],[\"有些是为了演示而写的单元测试\",{\"1\":{\"584\":1}}],[\"有些场景或许使用中间件处理更加合适\",{\"1\":{\"428\":1}}],[\"有些浏览器支持\",{\"1\":{\"322\":1}}],[\"有些请求是不需要经过后台处理的\",{\"1\":{\"207\":1}}],[\"有些请求是需要后台处理的\",{\"1\":{\"207\":1}}],[\"有些人毫不犹豫说\",{\"1\":{\"188\":1}}],[\"有些简历太花哨了\",{\"1\":{\"182\":1}}],[\"有备无患\",{\"1\":{\"184\":1}}],[\"有亮点的技能\",{\"1\":{\"180\":1}}],[\"有良好的编码习惯\",{\"1\":{\"179\":1}}],[\"有代码洁癖\",{\"1\":{\"179\":1}}],[\"有目标\",{\"1\":{\"179\":1}}],[\"有团队合作精神\",{\"1\":{\"179\":1}}],[\"有两种方式来指定pod只运行在指定的node节点上\",{\"1\":{\"914\":1}}],[\"有两个\",{\"1\":{\"1037\":1}}],[\"有两个优点\",{\"1\":{\"204\":1}}],[\"有两个路由模板\",{\"1\":{\"165\":1}}],[\"有两部分组成部分\",{\"1\":{\"139\":1}}],[\"有\",{\"1\":{\"134\":1,\"185\":1,\"209\":1}}],[\"有参构造函数\",{\"1\":{\"109\":1}}],[\"有参数私有方法\",{\"1\":{\"98\":1}}],[\"有参数重载实例方法\",{\"1\":{\"98\":1}}],[\"有引用关系\",{\"1\":{\"94\":1}}],[\"返回主页面\",{\"1\":{\"1110\":1}}],[\"返回到runner\",{\"1\":{\"737\":1}}],[\"返回用户id\",{\"1\":{\"680\":1}}],[\"返回多个信息\",{\"1\":{\"679\":1}}],[\"返回多个结果对象\",{\"1\":{\"667\":1}}],[\"返回一个返回对象\",{\"1\":{\"667\":1}}],[\"返回结果如下\",{\"1\":{\"605\":1}}],[\"返回结果\",{\"1\":{\"577\":1,\"676\":1,\"678\":1,\"681\":1}}],[\"返回类处理\",{\"1\":{\"416\":2}}],[\"返回类型\",{\"1\":{\"87\":1}}],[\"返回过滤器处理\",{\"1\":{\"416\":1}}],[\"返回\",{\"1\":{\"403\":1,\"674\":1}}],[\"返回下面的模型数据\",{\"1\":{\"364\":1}}],[\"返回响应报文\",{\"1\":{\"322\":1}}],[\"返回错误当内存限制达到\",{\"1\":{\"209\":1}}],[\"返回true表示满足约束\",{\"1\":{\"164\":1}}],[\"返回指定格式\",{\"1\":{\"151\":1}}],[\"返回有一个int类型参数的公共构造方法\",{\"1\":{\"99\":1}}],[\"返回无参公共构造方法\",{\"1\":{\"99\":1}}],[\"返回值\",{\"1\":{\"93\":1,\"104\":1}}],[\"返回值类型\",{\"1\":{\"92\":1,\"97\":1,\"108\":1,\"111\":1,\"114\":1}}],[\"成本\",{\"0\":{\"704\":1},\"1\":{\"704\":1}}],[\"成本也高\",{\"1\":{\"215\":1}}],[\"成为了经济方便的途径\",{\"1\":{\"215\":1}}],[\"成为它的\",{\"1\":{\"134\":1}}],[\"成功安装完成\",{\"1\":{\"1110\":1}}],[\"成功拉取项目\",{\"1\":{\"802\":1}}],[\"成功加载默认配置\",{\"1\":{\"546\":1}}],[\"成功解决问题\",{\"1\":{\"478\":1}}],[\"成功匹配的案例\",{\"1\":{\"161\":1}}],[\"成功\",{\"1\":{\"134\":1,\"416\":2,\"446\":1,\"447\":1,\"574\":1,\"576\":1,\"712\":1}}],[\"成功消费后才会删除消息\",{\"1\":{\"134\":1}}],[\"成功消费之前不会丢失\",{\"1\":{\"134\":1}}],[\"成功执行\",{\"1\":{\"134\":1}}],[\"成功显示swagger界面\",{\"1\":{\"8\":1}}],[\"成员变量\",{\"1\":{\"443\":1}}],[\"成员离职率远低于公司平均水平\",{\"1\":{\"179\":1}}],[\"成员类型\",{\"1\":{\"98\":1}}],[\"成员\",{\"1\":{\"91\":1,\"205\":1}}],[\"甚至将node已经存在的pod驱逐出去\",{\"1\":{\"914\":1}}],[\"甚至有的镜像可以精简\",{\"1\":{\"863\":1}}],[\"甚至可以在别人弄好的毛坯房基础上装修即可\",{\"1\":{\"820\":1}}],[\"甚至可能会生成分布在不同位置的多个物理文件\",{\"1\":{\"90\":1}}],[\"甚至为我们提供非常详细的日志信息\",{\"1\":{\"446\":1}}],[\"甚至是眼前一亮的照片\",{\"1\":{\"177\":1}}],[\"甚至url本身\",{\"1\":{\"175\":1}}],[\"甚至像笔者这样非开发者\",{\"1\":{\"10\":1}}],[\"等工作流跑结束后\",{\"1\":{\"1070\":1}}],[\"等8种常用图床\",{\"1\":{\"951\":1}}],[\"等同于在当前目录直接执行如下命令\",{\"1\":{\"838\":1}}],[\"等模式编写\",{\"1\":{\"467\":1}}],[\"等多种类型请求\",{\"1\":{\"322\":1}}],[\"等下次访问相同页面时\",{\"1\":{\"322\":1}}],[\"等类似许可\",{\"1\":{\"247\":1}}],[\"等等场景\",{\"1\":{\"240\":1}}],[\"等等\",{\"1\":{\"209\":2}}],[\"等快速消费完积压数据之后\",{\"1\":{\"208\":1}}],[\"等你通知人选的时候\",{\"1\":{\"201\":1}}],[\"等待下载安装\",{\"1\":{\"961\":1}}],[\"等待一段时间\",{\"1\":{\"914\":1}}],[\"等待一小时\",{\"1\":{\"201\":1}}],[\"等待安装完成\",{\"1\":{\"802\":1,\"1008\":1}}],[\"等待应用程序调用\",{\"1\":{\"443\":1}}],[\"等待几分钟后\",{\"1\":{\"312\":1}}],[\"等待连接的总数\",{\"1\":{\"207\":1}}],[\"等待\",{\"1\":{\"167\":1}}],[\"等程序集内部的信息\",{\"1\":{\"88\":1}}],[\"等\",{\"1\":{\"87\":3,\"206\":1,\"209\":1,\"210\":2,\"243\":1,\"405\":1,\"529\":1,\"597\":1,\"799\":1,\"863\":1}}],[\"等到输出true\",{\"1\":{\"40\":1}}],[\"审查元数据并收集关于它的类型信息的能力称为反射\",{\"1\":{\"86\":1}}],[\"基础操作\",{\"0\":{\"1048\":1}}],[\"基础镜像\",{\"1\":{\"866\":1,\"870\":1}}],[\"基础功能\",{\"0\":{\"718\":1}}],[\"基础知识\",{\"1\":{\"712\":1}}],[\"基础介绍\",{\"0\":{\"592\":1}}],[\"基础添加\",{\"0\":{\"526\":1}}],[\"基础查询\",{\"0\":{\"503\":1,\"1050\":1}}],[\"基础的配置swagger显示注释已经实现了\",{\"1\":{\"483\":1}}],[\"基础使用\",{\"0\":{\"479\":1}}],[\"基础视频\",{\"0\":{\"330\":1}}],[\"基础类库\",{\"1\":{\"139\":1}}],[\"基金会开发并维护\",{\"1\":{\"250\":1}}],[\"基本分区规划\",{\"1\":{\"1110\":1}}],[\"基本上平时能用到的镜像都可以找到\",{\"1\":{\"805\":1}}],[\"基本设置\",{\"0\":{\"578\":1}}],[\"基本原生sql查询\",{\"0\":{\"509\":1}}],[\"基本和\",{\"1\":{\"209\":1}}],[\"基本工资谈多点\",{\"1\":{\"199\":1}}],[\"基本常识里最基本的就是守时\",{\"1\":{\"184\":1}}],[\"基本信息\",{\"0\":{\"178\":1}}],[\"基本使用教程\",{\"1\":{\"712\":1}}],[\"基本使用\",{\"0\":{\"150\":1,\"153\":1}}],[\"基本了解\",{\"0\":{\"85\":1}}],[\"基类名\",{\"1\":{\"98\":1}}],[\"基于三层协议和路由\",{\"1\":{\"928\":1}}],[\"基于三层实现sdn网络\",{\"1\":{\"928\":1}}],[\"基于udp封装等数据包包装方式\",{\"1\":{\"928\":1}}],[\"基于包封装的overlay网络\",{\"1\":{\"928\":1}}],[\"基于隧道的overlay网络\",{\"1\":{\"928\":1}}],[\"基于init\",{\"1\":{\"914\":1}}],[\"基于headless\",{\"1\":{\"914\":1}}],[\"基于pvc来实现\",{\"1\":{\"914\":1}}],[\"基于容器的应用部署\",{\"1\":{\"913\":1}}],[\"基于一个官方的基础镜像\",{\"1\":{\"863\":1}}],[\"基于父镜像构建新的镜像时\",{\"1\":{\"832\":1}}],[\"基于netcore开发的轻量级配置中心\",{\"1\":{\"661\":1}}],[\"基于个人习惯的操作\",{\"1\":{\"552\":1}}],[\"基于aspnetcore框架整合的serilog日志记录程序包\",{\"1\":{\"457\":1}}],[\"基于此我们可以通过cancel方法灵活的实现自定义的缓存策略\",{\"1\":{\"376\":1}}],[\"基于约定的注册\",{\"1\":{\"344\":1}}],[\"基于名称的注入\",{\"1\":{\"344\":1}}],[\"基于原版素材\",{\"1\":{\"243\":1}}],[\"基于\",{\"1\":{\"243\":1,\"663\":1,\"806\":1}}],[\"基于数据+时间滚动创建索引\",{\"1\":{\"204\":1}}],[\"基于委托\",{\"1\":{\"68\":1}}],[\"基于linux\",{\"1\":{\"20\":1}}],[\"测试主机访问虚拟机\",{\"0\":{\"1113\":1}}],[\"测试虚拟机访问主机\",{\"0\":{\"1112\":1},\"1\":{\"1112\":1}}],[\"测试虚拟机访问外网\",{\"0\":{\"1111\":1}}],[\"测试商品\",{\"1\":{\"1042\":1}}],[\"测试店铺1\",{\"1\":{\"1043\":1}}],[\"测试店铺\",{\"1\":{\"1042\":1}}],[\"测试来源修改\",{\"1\":{\"1043\":2}}],[\"测试来源\",{\"1\":{\"1042\":1}}],[\"测试和部署\",{\"1\":{\"879\":1}}],[\"测试和部署软件\",{\"1\":{\"877\":1}}],[\"测试一下\",{\"1\":{\"870\":1}}],[\"测试一下配置是否更新\",{\"1\":{\"661\":1}}],[\"测试如下\",{\"1\":{\"838\":1}}],[\"测试访问看看\",{\"1\":{\"806\":1}}],[\"测试示例\",{\"1\":{\"599\":1}}],[\"测试更加简洁一些\",{\"1\":{\"598\":1}}],[\"测试框架使用方法与\",{\"1\":{\"597\":1}}],[\"测试方法标记为\",{\"1\":{\"596\":1}}],[\"测试方法\",{\"0\":{\"587\":1,\"591\":1},\"1\":{\"597\":1}}],[\"测试api\",{\"0\":{\"586\":1}}],[\"测试使用\",{\"1\":{\"585\":1}}],[\"测试是否可以开机自启\",{\"1\":{\"549\":1}}],[\"测试nginx是否可以访问\",{\"1\":{\"542\":1}}],[\"测试结果\",{\"1\":{\"503\":1}}],[\"测试文件\",{\"1\":{\"391\":1}}],[\"测试人员提供更优雅的接口管理服务\",{\"1\":{\"216\":1}}],[\"测试\",{\"1\":{\"83\":1,\"586\":1,\"1041\":4}}],[\"委托实现了回调方法的机制\",{\"1\":{\"203\":1}}],[\"委托实例字面上就是调用者的代理\",{\"1\":{\"83\":1}}],[\"委托是一类继承自system\",{\"1\":{\"203\":1}}],[\"委托是一种知道如何调用方法的对象\",{\"1\":{\"83\":1}}],[\"委托\",{\"0\":{\"83\":1},\"1\":{\"157\":1}}],[\"委托类型\",{\"1\":{\"68\":1}}],[\"接收返回结果\",{\"1\":{\"678\":1,\"681\":1}}],[\"接收到的用户id是\",{\"1\":{\"672\":1}}],[\"接收结果\",{\"1\":{\"471\":1}}],[\"接收人验证\",{\"1\":{\"364\":1}}],[\"接收方确认机制\",{\"1\":{\"208\":1}}],[\"接受更新应是安全的\",{\"1\":{\"1130\":1}}],[\"接受更新通常是安全的\",{\"1\":{\"1130\":1}}],[\"接受更改\",{\"1\":{\"1110\":1}}],[\"接受客户端请求\",{\"1\":{\"322\":1}}],[\"接受响应报文\",{\"1\":{\"322\":1}}],[\"接受和处理当前读\",{\"1\":{\"207\":1}}],[\"接入数据来消费\",{\"1\":{\"208\":1}}],[\"接着说拷贝数据\",{\"1\":{\"812\":1}}],[\"接着说说面试中的你要防备的坑\",{\"1\":{\"191\":1}}],[\"接着往下看\",{\"1\":{\"807\":1}}],[\"接着看网址\",{\"1\":{\"771\":1}}],[\"接着我们使用命令\",{\"1\":{\"753\":1}}],[\"接着我们分别实现\",{\"1\":{\"215\":1}}],[\"接着临时征用\",{\"1\":{\"208\":1}}],[\"接着返回文档给协调节点\",{\"1\":{\"204\":1}}],[\"接着\",{\"1\":{\"161\":4}}],[\"接口的关联的解决方案都是用的是变量中的知识\",{\"1\":{\"745\":1}}],[\"接口的适配器模式\",{\"1\":{\"202\":1}}],[\"接口文档等功能\",{\"1\":{\"736\":1}}],[\"接口响应数据解析\",{\"0\":{\"735\":1}}],[\"接口响应数据的解析\",{\"1\":{\"718\":1}}],[\"接口url中输入地址\",{\"1\":{\"730\":1}}],[\"接口关联\",{\"0\":{\"745\":1},\"1\":{\"718\":1}}],[\"接口管理\",{\"0\":{\"736\":1},\"1\":{\"718\":1}}],[\"接口代码示例\",{\"1\":{\"607\":1}}],[\"接口工具请求\",{\"0\":{\"605\":1,\"610\":1,\"614\":1,\"618\":1,\"623\":1,\"628\":1,\"633\":1}}],[\"接口地址\",{\"1\":{\"500\":1,\"744\":1}}],[\"接口幂等性处理\",{\"1\":{\"424\":1}}],[\"接口要求实现onactionexecuted\",{\"1\":{\"403\":1}}],[\"接口json调用\",{\"1\":{\"210\":1}}],[\"接口实现格式化输出\",{\"1\":{\"203\":1}}],[\"接口中的\",{\"1\":{\"203\":1}}],[\"接口可以多继承而类只能单继承\",{\"1\":{\"82\":1}}],[\"接口和类相似\",{\"1\":{\"82\":1}}],[\"接口\",{\"0\":{\"82\":1},\"1\":{\"93\":1,\"598\":1}}],[\"接下来聊聊服务发现\",{\"1\":{\"939\":1}}],[\"接下来感受一下数据同步\",{\"1\":{\"815\":1}}],[\"接下来通过拉取centos镜像\",{\"1\":{\"812\":1}}],[\"接下来通过一个案例来看下该功能是如何使用\",{\"1\":{\"744\":1}}],[\"接下来说说容器数据卷\",{\"1\":{\"811\":1}}],[\"接下来会演示\",{\"1\":{\"811\":1}}],[\"接下来会出现title和key两个输入框\",{\"1\":{\"19\":1}}],[\"接下来就请跟随我来学习怎么制作精简\",{\"1\":{\"863\":1}}],[\"接下来就可以使用变量了\",{\"1\":{\"743\":1}}],[\"接下来就让我们了解一些常用断言\",{\"1\":{\"739\":1}}],[\"接下来就来说说怎样在web环境下结合fastreport\",{\"1\":{\"690\":1}}],[\"接下来就是实现\",{\"1\":{\"215\":1}}],[\"接下来我们继续安装\",{\"1\":{\"1012\":1}}],[\"接下来我们将讲解kubernetes中涉及到的一些主要概念\",{\"1\":{\"914\":1}}],[\"接下来我们来看网站端是怎样使用的fastreport\",{\"1\":{\"692\":1}}],[\"接下来我们需要做的事情是如何在现有代码中快速且方便的情况下接入敏感词组件\",{\"1\":{\"215\":1}}],[\"接下来我要站在求职者的立场\",{\"1\":{\"201\":1}}],[\"接下来\",{\"1\":{\"161\":1}}],[\"接下来需要输入两次密码\",{\"1\":{\"19\":1}}],[\"数值范围\",{\"1\":{\"474\":1}}],[\"数字类型的权限属性\",{\"1\":{\"1084\":1}}],[\"数字越高\",{\"1\":{\"564\":1}}],[\"数字\",{\"1\":{\"179\":1}}],[\"数量\",{\"1\":{\"99\":1,\"208\":1,\"788\":1}}],[\"数组行内语法\",{\"1\":{\"850\":1}}],[\"数组语法\",{\"1\":{\"850\":2}}],[\"数组一旦创建完毕\",{\"1\":{\"81\":1}}],[\"数组通过索引从0开始获取数组中的元素\",{\"1\":{\"81\":1}}],[\"数组中的元素总是存储在连续的内存块中\",{\"1\":{\"81\":1}}],[\"数组是固定长度的特定类型的变量集合\",{\"1\":{\"81\":1}}],[\"数组\",{\"0\":{\"81\":1},\"1\":{\"850\":1}}],[\"数据文件等目录\",{\"1\":{\"1110\":1}}],[\"数据断点绑定到活动对象时\",{\"1\":{\"978\":1}}],[\"数据断点\",{\"0\":{\"978\":1},\"1\":{\"978\":1}}],[\"数据是否丢失取决于具体的volume类型\",{\"1\":{\"914\":1}}],[\"数据包转发功能\",{\"1\":{\"893\":1}}],[\"数据卷其实还可以通过容器继承方式进行挂载\",{\"1\":{\"816\":1}}],[\"数据卷完全独立于容器的生存周期\",{\"1\":{\"814\":1}}],[\"数据卷可以理解为目录或文件\",{\"1\":{\"814\":1}}],[\"数据还是在容器内\",{\"1\":{\"812\":1}}],[\"数据也应该正常存在\",{\"1\":{\"811\":1}}],[\"数据就应该和容器共存亡\",{\"1\":{\"811\":1}}],[\"数据不一样等\",{\"1\":{\"690\":1}}],[\"数据不一致\",{\"1\":{\"134\":1}}],[\"数据来源就是控制器里面的一个静态变量\",{\"1\":{\"600\":1}}],[\"数据压缩\",{\"1\":{\"536\":1}}],[\"数据如下\",{\"1\":{\"515\":1}}],[\"数据将在请求头中进行传输\",{\"1\":{\"484\":1}}],[\"数据源使用txt\",{\"1\":{\"448\":1}}],[\"数据校验参数验证或加密\",{\"1\":{\"403\":1}}],[\"数据权限\",{\"1\":{\"368\":2}}],[\"数据传输\",{\"1\":{\"325\":1}}],[\"数据导出导入\",{\"0\":{\"236\":1}}],[\"数据管理\",{\"0\":{\"235\":1}}],[\"数据流操作开发包\",{\"1\":{\"210\":1}}],[\"数据一致性\",{\"1\":{\"210\":1}}],[\"数据震荡后的自动脚本恢复\",{\"1\":{\"209\":1}}],[\"数据只会出现在新的分片里\",{\"1\":{\"205\":1}}],[\"数据在什么时候才会扩展到多个分片\",{\"1\":{\"205\":1}}],[\"数据结构\",{\"1\":{\"204\":1}}],[\"数据\",{\"1\":{\"134\":4,\"209\":1,\"591\":1}}],[\"数据才变更过来\",{\"1\":{\"134\":1}}],[\"数据类型出现隐式转化\",{\"1\":{\"206\":1}}],[\"数据类型\",{\"1\":{\"87\":2}}],[\"数据库中该表的字段和代码的字段有下面区别\",{\"1\":{\"1061\":1}}],[\"数据库操作sql日志\",{\"1\":{\"446\":1}}],[\"数据库转换工具\",{\"0\":{\"283\":1}}],[\"数据库表结构的优化\",{\"1\":{\"206\":1}}],[\"数据库连接不上\",{\"1\":{\"694\":1}}],[\"数据库连接池将尝试寻找在池中寻找具有相同的连接字符串的连接\",{\"1\":{\"203\":1}}],[\"数据库连接字符串查询网站\",{\"1\":{\"133\":1}}],[\"数据库调用\",{\"1\":{\"174\":1}}],[\"数据库一起成功问题\",{\"1\":{\"134\":1}}],[\"数据库的数据\",{\"1\":{\"134\":1}}],[\"数据库读写分离=\",{\"1\":{\"133\":1}}],[\"数据库介绍\",{\"0\":{\"132\":1}}],[\"数据库\",{\"0\":{\"282\":1},\"1\":{\"43\":2,\"134\":1,\"180\":1,\"209\":1,\"217\":1,\"448\":1,\"843\":1}}],[\"数据取得地方\",{\"1\":{\"43\":1}}],[\"字典\",{\"1\":{\"1009\":1}}],[\"字号\",{\"1\":{\"972\":1}}],[\"字体\",{\"1\":{\"972\":2}}],[\"字体和大小\",{\"0\":{\"972\":1}}],[\"字节的镜像\",{\"1\":{\"869\":1}}],[\"字节\",{\"1\":{\"863\":1}}],[\"字节数\",{\"1\":{\"829\":1}}],[\"字节流\",{\"1\":{\"327\":1}}],[\"字数\",{\"1\":{\"829\":1}}],[\"字母\",{\"1\":{\"125\":1}}],[\"字符对照表\",{\"1\":{\"1085\":1}}],[\"字符数\",{\"1\":{\"700\":1}}],[\"字符串等\",{\"1\":{\"203\":1}}],[\"字符串字面量应位于两个双引号\",{\"1\":{\"79\":1}}],[\"字符串\",{\"0\":{\"79\":1},\"1\":{\"569\":1}}],[\"字符\",{\"0\":{\"78\":1}}],[\"字段等目标对象的机制\",{\"1\":{\"203\":1}}],[\"字段和属性类型相同\",{\"1\":{\"62\":1}}],[\"字段不一定要初始化\",{\"1\":{\"57\":1}}],[\"字段初始化\",{\"0\":{\"57\":1}}],[\"字段可用以下修饰符进行修饰\",{\"1\":{\"56\":1}}],[\"字段属于类的成员\",{\"1\":{\"56\":1}}],[\"字段\",{\"0\":{\"56\":1,\"113\":1},\"1\":{\"88\":1,\"788\":1,\"942\":1}}],[\"单表查询可以随意排序\",{\"1\":{\"1041\":2}}],[\"单文件生成\",{\"1\":{\"968\":1}}],[\"单词拼写检查器\",{\"1\":{\"968\":1}}],[\"单节点通信\",{\"0\":{\"925\":1}}],[\"单击\",{\"1\":{\"1012\":2}}],[\"单击打开\",{\"1\":{\"1007\":1}}],[\"单击菜单\",{\"1\":{\"981\":1}}],[\"单击close\",{\"1\":{\"876\":1}}],[\"单击数据库=\",{\"1\":{\"133\":1}}],[\"单条消息最大发送topicids的数量<5\",{\"1\":{\"700\":1}}],[\"单条消息最大发送uid的数量<2000\",{\"1\":{\"700\":1}}],[\"单条消息的数据长度\",{\"1\":{\"700\":1}}],[\"单元就是人为规定的最小的被测功能模块\",{\"1\":{\"593\":1}}],[\"单元测试之道\",{\"1\":{\"599\":1}}],[\"单元测试的原则\",{\"0\":{\"595\":1}}],[\"单元测试的优点\",{\"1\":{\"594\":1,\"599\":1}}],[\"单元测试的好处\",{\"0\":{\"594\":1}}],[\"单元测试的定义\",{\"0\":{\"593\":1}}],[\"单元测试是在软件开发过程中要进行的最低级别的测试活动\",{\"1\":{\"593\":1}}],[\"单元测试\",{\"1\":{\"593\":2}}],[\"单元测试简单使用\",{\"0\":{\"589\":1}}],[\"单元测试成功\",{\"1\":{\"587\":1,\"591\":1}}],[\"单元测试项目创建完成\",{\"1\":{\"585\":1}}],[\"单元测试驱动开发的实践者\",{\"1\":{\"179\":1}}],[\"单例\",{\"0\":{\"345\":1}}],[\"单例模式\",{\"1\":{\"202\":1}}],[\"单位可以是kb\",{\"1\":{\"564\":4}}],[\"单位是kb\",{\"1\":{\"564\":4}}],[\"单位\",{\"1\":{\"447\":1}}],[\"单位一般是\",{\"1\":{\"254\":1}}],[\"单位与标尺=\",{\"1\":{\"254\":1}}],[\"单体应用类似于一个大容器\",{\"1\":{\"210\":1}}],[\"单体应用\",{\"1\":{\"210\":1}}],[\"单机模式\",{\"1\":{\"208\":3}}],[\"单\",{\"1\":{\"208\":1}}],[\"单播模块包含一个主机列表以控制哪些节点需要\",{\"1\":{\"204\":1}}],[\"单独使用时候\",{\"1\":{\"133\":1}}],[\"单独提交一个文件\",{\"1\":{\"22\":1}}],[\"单个对象也可以获得相同的行为\",{\"1\":{\"978\":1}}],[\"单个组件\",{\"0\":{\"959\":1}}],[\"单个日志文件最大数\",{\"1\":{\"564\":1}}],[\"单个文件大小\",{\"1\":{\"447\":1}}],[\"单个缓存项的配置\",{\"1\":{\"373\":1}}],[\"单个客户端专用的代理一般被称为私有代理\",{\"1\":{\"322\":1}}],[\"单个轻量级服务一般为一个单独微服务\",{\"1\":{\"210\":1}}],[\"单个线程可以提供数万个并发连接\",{\"1\":{\"207\":1}}],[\"单个检查\",{\"1\":{\"151\":1}}],[\"单个\",{\"1\":{\"97\":6,\"104\":1,\"108\":1,\"111\":1,\"114\":1,\"571\":1,\"1126\":1}}],[\"单精度浮点数\",{\"1\":{\"76\":1}}],[\"示例like\",{\"1\":{\"1053\":1}}],[\"示例程序\",{\"1\":{\"956\":1}}],[\"示例中提供了使用\",{\"1\":{\"666\":1}}],[\"示例包含以下代码\",{\"1\":{\"658\":1}}],[\"示例场景\",{\"1\":{\"472\":1}}],[\"示例代码环境\",{\"1\":{\"399\":1}}],[\"示例环境\",{\"1\":{\"364\":1}}],[\"示例五\",{\"0\":{\"102\":1}}],[\"示例四\",{\"0\":{\"101\":1},\"1\":{\"94\":1}}],[\"示例三\",{\"0\":{\"100\":1},\"1\":{\"94\":1}}],[\"示例二\",{\"0\":{\"99\":1},\"1\":{\"94\":1}}],[\"示例\",{\"0\":{\"94\":1},\"1\":{\"76\":1,\"331\":4,\"468\":2,\"679\":1,\"988\":1}}],[\"实操撸文件\",{\"0\":{\"851\":1}}],[\"实操演示\",{\"0\":{\"815\":1}}],[\"实战演示\",{\"0\":{\"833\":1}}],[\"实战纪实\",{\"1\":{\"430\":1}}],[\"实体类t4自动生成\",{\"0\":{\"1046\":1}}],[\"实体类型\",{\"1\":{\"501\":1}}],[\"实体框架ef是ado\",{\"1\":{\"529\":1}}],[\"实体属性\",{\"1\":{\"501\":1}}],[\"实际使用中这种更安全\",{\"1\":{\"798\":1}}],[\"实际\",{\"1\":{\"786\":1}}],[\"实际结果是请求返回结果\",{\"1\":{\"739\":1}}],[\"实际情况这里缓存应该加上过期时间\",{\"1\":{\"402\":1}}],[\"实际上也是同一个子网间通信\",{\"1\":{\"927\":1}}],[\"实际上它最终什么也没做\",{\"1\":{\"863\":1}}],[\"实际上如果连接到了另外一个实例\",{\"1\":{\"208\":1}}],[\"实际上花费在server机器上的时间片不多\",{\"1\":{\"207\":1}}],[\"实际上我们是在比较关系型和非关系型数据库\",{\"1\":{\"205\":1}}],[\"实际上是报名协议\",{\"1\":{\"194\":1}}],[\"实际上心怀鬼胎\",{\"1\":{\"191\":1}}],[\"实际上\",{\"1\":{\"86\":1,\"161\":1}}],[\"实现如下\",{\"1\":{\"1061\":1}}],[\"实现守护进程的功能\",{\"1\":{\"1019\":1}}],[\"实现不容器间的网络隔离\",{\"1\":{\"916\":1}}],[\"实现单个任务难以完成的复杂流程编排与可视化\",{\"1\":{\"879\":1}}],[\"实现思路\",{\"1\":{\"745\":1}}],[\"实现步骤\",{\"1\":{\"733\":1,\"734\":2,\"737\":1,\"744\":1,\"745\":1}}],[\"实现无预览直接打印功能\",{\"1\":{\"690\":1}}],[\"实现需求\",{\"1\":{\"671\":1}}],[\"实现一个可以动态加载\",{\"1\":{\"570\":1}}],[\"实现了虚拟机访问外网以及虚拟机和主机之间的相互访问\",{\"1\":{\"1113\":1}}],[\"实现了一个控制器\",{\"1\":{\"941\":1}}],[\"实现了对滚动文件的支持\",{\"1\":{\"457\":1}}],[\"实现了文件输出日志\",{\"1\":{\"457\":1}}],[\"实现了调试台输出日志\",{\"1\":{\"457\":1}}],[\"实现了控制台输出日志\",{\"1\":{\"457\":1}}],[\"实现了日志异步收集\",{\"1\":{\"457\":1}}],[\"实现中是以\",{\"1\":{\"443\":1}}],[\"实现具有依赖关系的对象之间的解耦\",{\"1\":{\"436\":1}}],[\"实现请求限制\",{\"1\":{\"428\":1}}],[\"实现幂等性校验\",{\"1\":{\"423\":1}}],[\"实现目的\",{\"1\":{\"418\":1,\"894\":1}}],[\"实现方法\",{\"1\":{\"404\":1}}],[\"实现这个接口需要实现onexception方法\",{\"1\":{\"404\":1}}],[\"实现效果\",{\"1\":{\"401\":1}}],[\"实现\",{\"1\":{\"243\":1,\"253\":1,\"477\":2,\"927\":1}}],[\"实现的在线迷宫游戏\",{\"1\":{\"243\":1}}],[\"实现的扫雷游戏\",{\"1\":{\"243\":1}}],[\"实现的\",{\"1\":{\"243\":2}}],[\"实现上\",{\"1\":{\"162\":1}}],[\"实践中如何优化mysql\",{\"1\":{\"206\":1}}],[\"实践活动\",{\"1\":{\"183\":1}}],[\"实话实说\",{\"1\":{\"194\":1}}],[\"实验上下文\",{\"1\":{\"870\":1}}],[\"实验\",{\"0\":{\"138\":1}}],[\"实时都可以找到的节点\",{\"1\":{\"789\":1}}],[\"实时信息推送平台\",{\"1\":{\"699\":1}}],[\"实时监控进程状态\",{\"1\":{\"544\":1}}],[\"实时股票更新\",{\"1\":{\"530\":1}}],[\"实时通信\",{\"0\":{\"530\":1}}],[\"实时协作\",{\"1\":{\"296\":1}}],[\"实时\",{\"1\":{\"134\":1}}],[\"实例解析程序集引用时\",{\"1\":{\"571\":1}}],[\"实例限制为每个简单程序集名称只加载\",{\"1\":{\"571\":1}}],[\"实例的\",{\"1\":{\"443\":1}}],[\"实例的监控\",{\"1\":{\"209\":1}}],[\"实例化bean\",{\"1\":{\"443\":1}}],[\"实例化一个具体的product对象\",{\"1\":{\"438\":1}}],[\"实例化返回类\",{\"1\":{\"364\":1}}],[\"实例操作数据\",{\"1\":{\"209\":1}}],[\"实例上\",{\"1\":{\"167\":1,\"208\":1}}],[\"实例\",{\"1\":{\"165\":2,\"208\":1,\"209\":1,\"443\":3,\"805\":2}}],[\"实例属性\",{\"0\":{\"97\":1,\"104\":1,\"108\":1,\"111\":1,\"114\":1},\"1\":{\"97\":1,\"104\":1,\"111\":1,\"114\":1}}],[\"实例方法\",{\"0\":{\"93\":1},\"1\":{\"97\":1,\"104\":1,\"108\":1,\"111\":1,\"114\":1}}],[\"实例构造器支持以下修饰符\",{\"1\":{\"69\":1}}],[\"实数\",{\"0\":{\"76\":1}}],[\"关键点就是选择了快速免费公有的cdn\",{\"1\":{\"953\":1}}],[\"关键命令解析\",{\"1\":{\"816\":1}}],[\"关键字功能一样\",{\"1\":{\"852\":3}}],[\"关键字约定都是大写\",{\"1\":{\"818\":1}}],[\"关键字\",{\"0\":{\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":1},\"1\":{\"75\":1,\"331\":5}}],[\"关联远程仓库\",{\"1\":{\"788\":2}}],[\"关注应用程序本身\",{\"1\":{\"399\":1}}],[\"关注的是某一个点\",{\"1\":{\"210\":1}}],[\"关机界面\",{\"0\":{\"320\":1}}],[\"关系\",{\"1\":{\"205\":1}}],[\"关闭防火墙\",{\"1\":{\"1109\":2}}],[\"关闭连接\",{\"1\":{\"1045\":1}}],[\"关闭\",{\"0\":{\"948\":1}}],[\"关闭全局变量注册\",{\"1\":{\"206\":1}}],[\"关闭副本\",{\"1\":{\"204\":1}}],[\"关闭缓存swap\",{\"1\":{\"204\":1}}],[\"关于阿里云centos服务器的一些安全性设置\",{\"1\":{\"1109\":1}}],[\"关于dapper实现读写分离的个人思考\",{\"1\":{\"1047\":1}}],[\"关于dockerfile中的内容这里就不细说了\",{\"1\":{\"851\":1}}],[\"关于dockerfile中的应用会在后续的章节中说到\",{\"1\":{\"815\":1}}],[\"关于docker\",{\"1\":{\"812\":1}}],[\"关于yaml文件内容中配置的命令和dockerfile的命令差不多是一一对应的\",{\"1\":{\"850\":1}}],[\"关于日常docker\",{\"1\":{\"850\":1}}],[\"关于步骤和效果\",{\"1\":{\"837\":1}}],[\"关于redis安装在docker中很简单\",{\"1\":{\"817\":1}}],[\"关于容器数据卷就说到这吧\",{\"1\":{\"816\":1}}],[\"关于senparcweixinsetting为何叫做这个名字\",{\"1\":{\"710\":1}}],[\"关于swagger的使用操作还有很多\",{\"1\":{\"484\":1}}],[\"关于swagger基础配置可以查看目录\",{\"1\":{\"231\":1}}],[\"关于核心代码我们是看不到了\",{\"1\":{\"683\":1}}],[\"关于该组件我摘抄一些介绍\",{\"1\":{\"682\":1}}],[\"关于这个columnmap\",{\"1\":{\"1061\":1}}],[\"关于这个操作pdf的组件\",{\"1\":{\"682\":1}}],[\"关于这个精度丢失的问题这次是第二次遇到了\",{\"1\":{\"478\":1}}],[\"关于grpc用法我只是基本的使用\",{\"1\":{\"662\":1}}],[\"关于依赖注入是什么\",{\"1\":{\"657\":1}}],[\"关于user控制器的单元测试我们就写在这个里面\",{\"1\":{\"585\":1}}],[\"关于两种托管方式的差异\",{\"1\":{\"563\":1}}],[\"关于连接数据库可以参考另一个文章\",{\"1\":{\"502\":1}}],[\"关于面向对象请查看\",{\"1\":{\"435\":1}}],[\"关于method\",{\"1\":{\"323\":1}}],[\"关于hyper\",{\"1\":{\"312\":1}}],[\"关于head\",{\"1\":{\"32\":1}}],[\"关于\",{\"1\":{\"204\":1,\"869\":2,\"956\":1}}],[\"关于简历里放不放照片的争论\",{\"1\":{\"177\":1}}],[\"关于windows系统下安装\",{\"1\":{\"16\":1}}],[\"关于我\",{\"0\":{\"0\":1}}],[\"$schema\",{\"1\":{\"1036\":1}}],[\"$3\",{\"1\":{\"981\":1}}],[\"$nodename\",{\"1\":{\"914\":2}}],[\"$cid\",{\"1\":{\"899\":4}}],[\"$1\",{\"1\":{\"899\":1}}],[\"$image\",{\"1\":{\"899\":3}}],[\"$tarball\",{\"1\":{\"865\":1,\"867\":1}}],[\"$temp\",{\"1\":{\"564\":1}}],[\"$ver\",{\"1\":{\"865\":3,\"867\":3}}],[\"$path\",{\"1\":{\"824\":1,\"1136\":1}}],[\"$pg\",{\"1\":{\"824\":1}}],[\"$options\",{\"1\":{\"549\":2}}],[\"$home\",{\"1\":{\"822\":2}}],[\"$host\",{\"1\":{\"543\":1}}],[\"$http\",{\"1\":{\"543\":2}}],[\"$myport\",{\"1\":{\"837\":2}}],[\"$max\",{\"1\":{\"343\":1}}],[\"$min\",{\"1\":{\"343\":1}}],[\"$\",{\"1\":{\"73\":1,\"123\":2,\"125\":2,\"157\":4,\"163\":2,\"167\":7,\"211\":1,\"342\":2,\"343\":3,\"364\":2,\"372\":6,\"373\":3,\"375\":1,\"403\":2,\"404\":2,\"405\":1,\"413\":1,\"418\":2,\"421\":3,\"427\":2,\"453\":13,\"459\":1,\"474\":2,\"483\":1,\"484\":1,\"494\":1,\"495\":1,\"499\":1,\"501\":1,\"513\":1,\"574\":2,\"575\":1,\"576\":1,\"582\":1,\"600\":1,\"603\":3,\"608\":2,\"612\":2,\"616\":4,\"621\":2,\"626\":2,\"631\":2,\"656\":1,\"660\":1,\"661\":1,\"684\":1,\"687\":2,\"691\":6,\"692\":3,\"694\":1,\"711\":1,\"777\":4,\"778\":10,\"780\":22,\"781\":9,\"782\":17,\"784\":4,\"785\":20,\"786\":9,\"787\":6,\"788\":5,\"810\":1,\"820\":1,\"846\":4,\"863\":6,\"865\":1,\"866\":1,\"867\":1,\"868\":3,\"870\":10,\"871\":2,\"911\":8,\"918\":2,\"1037\":2,\"1070\":31,\"1110\":1,\"1117\":1,\"1122\":6,\"1123\":5,\"1126\":2,\"1136\":2}}],[\"默认网关和\",{\"1\":{\"1110\":1}}],[\"默认提示符为\",{\"1\":{\"1110\":1}}],[\"默认图片存放地址\",{\"1\":{\"968\":1}}],[\"默认图片张数\",{\"1\":{\"684\":1}}],[\"默认包含你复制剪贴板的最后20项纪录\",{\"1\":{\"965\":1}}],[\"默认状态\",{\"1\":{\"947\":1}}],[\"默认策略\",{\"1\":{\"914\":1}}],[\"默认类型\",{\"1\":{\"914\":1}}],[\"默认运行在\",{\"1\":{\"911\":1}}],[\"默认安装后的端口绑定的是8080\",{\"1\":{\"905\":1}}],[\"默认工作目录\",{\"0\":{\"902\":1}}],[\"默认指令\",{\"1\":{\"868\":1}}],[\"默认就是bridge模式\",{\"1\":{\"839\":1}}],[\"默认就是采用bridge模式\",{\"1\":{\"839\":1}}],[\"默认就有构建时挂载的信息\",{\"1\":{\"827\":1}}],[\"默认就latest\",{\"1\":{\"810\":1,\"837\":1}}],[\"默认情况\",{\"1\":{\"815\":1,\"841\":1,\"970\":1}}],[\"默认情况下用于查看当前工作目录下的清单\",{\"1\":{\"1074\":1}}],[\"默认情况下容器的数据是非持久化的\",{\"1\":{\"914\":1}}],[\"默认情况下它不会向该组添加任何用户\",{\"1\":{\"862\":1}}],[\"默认情况下http2是使用了http的加密协议\",{\"1\":{\"666\":1}}],[\"默认情况下每一个测试类都是一个唯一的测试集合\",{\"1\":{\"588\":1}}],[\"默认情况下已为部署到\",{\"1\":{\"562\":1}}],[\"默认情况下假定api的版本为1\",{\"1\":{\"494\":1,\"498\":1,\"638\":1,\"644\":1,\"650\":1}}],[\"默认情况下\",{\"1\":{\"468\":1,\"811\":1,\"817\":1}}],[\"默认情况下这是最详细的日志\",{\"1\":{\"446\":1}}],[\"默认情况下这个暂存盘是在c盘\",{\"1\":{\"256\":1}}],[\"默认情况下读取配置configuration的默认优先级\",{\"1\":{\"389\":1}}],[\"默认情况下相等是基于引用的\",{\"1\":{\"77\":1}}],[\"默认过滤掉中间镜像层\",{\"1\":{\"810\":1}}],[\"默认都是直接回车加回车\",{\"1\":{\"802\":1}}],[\"默认标签是打在最新提交的commit上\",{\"1\":{\"763\":1}}],[\"默认导出的结果json文件\",{\"1\":{\"737\":1}}],[\"默认会把collection中的所有用例选中\",{\"1\":{\"737\":1}}],[\"默认消息\",{\"1\":{\"711\":1}}],[\"默认静态文件目录是wwwroot\",{\"1\":{\"579\":1}}],[\"默认目录是<content\",{\"1\":{\"578\":1}}],[\"默认程序集\",{\"1\":{\"573\":1}}],[\"默认最小为1024\",{\"1\":{\"564\":1}}],[\"默认10个\",{\"1\":{\"564\":1}}],[\"默认版本号\",{\"1\":{\"494\":1,\"498\":1,\"638\":1,\"644\":1,\"650\":1}}],[\"默认自带有400模型验证\",{\"1\":{\"477\":1}}],[\"默认是轮询方式\",{\"1\":{\"919\":1}}],[\"默认是clusterip\",{\"1\":{\"914\":1}}],[\"默认是default\",{\"1\":{\"914\":1}}],[\"默认是当前目录\",{\"1\":{\"802\":1}}],[\"默认是term信号\",{\"1\":{\"564\":2}}],[\"默认是0\",{\"1\":{\"564\":2}}],[\"默认是3\",{\"1\":{\"564\":2}}],[\"默认是10\",{\"1\":{\"564\":4}}],[\"默认是10秒\",{\"1\":{\"564\":1}}],[\"默认是1\",{\"1\":{\"564\":3}}],[\"默认是关闭的\",{\"1\":{\"564\":1}}],[\"默认是跟踪查询\",{\"1\":{\"504\":1}}],[\"默认是输出在控制台上\",{\"1\":{\"447\":1}}],[\"默认是每隔\",{\"1\":{\"204\":1}}],[\"默认应禁用\",{\"1\":{\"446\":1}}],[\"默认环境\",{\"1\":{\"389\":1}}],[\"默认配置\",{\"0\":{\"551\":1},\"1\":{\"669\":1,\"670\":1}}],[\"默认配置文件\",{\"1\":{\"389\":1}}],[\"默认配置是当检查器都返回健康时候才认为是健康\",{\"1\":{\"151\":1}}],[\"默认依赖注入\",{\"0\":{\"344\":1}}],[\"默认的源地址为\",{\"1\":{\"1125\":1}}],[\"默认的网络模式\",{\"1\":{\"839\":1}}],[\"默认的http端口是80\",{\"1\":{\"323\":1}}],[\"默认的管理员账号\",{\"1\":{\"218\":1}}],[\"默认格式化就行了\",{\"1\":{\"321\":1}}],[\"默认在\",{\"1\":{\"209\":1}}],[\"默认在60秒内\",{\"1\":{\"205\":1}}],[\"默认为root\",{\"1\":{\"564\":1}}],[\"默认为200\",{\"1\":{\"564\":1}}],[\"默认为false\",{\"1\":{\"483\":1,\"484\":1}}],[\"默认为quorum\",{\"1\":{\"204\":1}}],[\"默认为\",{\"1\":{\"204\":1}}],[\"默认使用本地主机的时区\",{\"1\":{\"809\":1}}],[\"默认使用\",{\"1\":{\"663\":1}}],[\"默认使用文档\",{\"1\":{\"204\":1}}],[\"默认使用cookie名称\",{\"1\":{\"147\":1}}],[\"默认输出\",{\"1\":{\"145\":1}}],[\"默认\",{\"1\":{\"124\":1,\"204\":2,\"1074\":1}}],[\"默认排序后\",{\"1\":{\"123\":1}}],[\"默认取首个\",{\"1\":{\"102\":1}}],[\"默认值\",{\"1\":{\"207\":1}}],[\"默认值初始化\",{\"1\":{\"81\":1}}],[\"默认值是999\",{\"1\":{\"564\":3}}],[\"默认值是\",{\"1\":{\"42\":1,\"564\":2}}],[\"默认编译器会为我们的类生成一个无参数公有的构造器\",{\"1\":{\"71\":1}}],[\"参见下图\",{\"1\":{\"942\":1}}],[\"参见下面这篇文章\",{\"1\":{\"691\":1}}],[\"参见vs2022\",{\"1\":{\"689\":1}}],[\"参考如下代码\",{\"1\":{\"1063\":1,\"1064\":1,\"1065\":1}}],[\"参考文章\",{\"0\":{\"970\":1}}],[\"参考文档里面有方法\",{\"1\":{\"898\":1}}],[\"参考文档\",{\"0\":{\"242\":1,\"1066\":1,\"1132\":1},\"1\":{\"477\":1,\"514\":1,\"629\":1,\"796\":1}}],[\"参考教程\",{\"0\":{\"912\":1}}],[\"参考参考\",{\"1\":{\"838\":1}}],[\"参考地址\",{\"1\":{\"712\":1}}],[\"参考上篇文章\",{\"1\":{\"590\":1}}],[\"参考自\",{\"1\":{\"583\":1}}],[\"参考\",{\"0\":{\"445\":1,\"873\":1},\"1\":{\"430\":1,\"468\":1}}],[\"参考资料\",{\"0\":{\"874\":1},\"1\":{\"68\":1,\"470\":1,\"472\":1}}],[\"参与计算\",{\"1\":{\"204\":1}}],[\"参与了京西公司海外电商项目\",{\"1\":{\"185\":1}}],[\"参数创建多级目录\",{\"1\":{\"1075\":1}}],[\"参数介绍\",{\"1\":{\"1037\":1}}],[\"参数表示安静进行\",{\"1\":{\"988\":1}}],[\"参数表示删除该文件夹及其下面的子目录和文件\",{\"1\":{\"988\":1}}],[\"参数t的值要求的规则是每次请求都必须是一个随机数\",{\"1\":{\"744\":1}}],[\"参数不区分是数据库列和代码列的先后关系\",{\"1\":{\"1061\":1}}],[\"参数不对\",{\"1\":{\"693\":1}}],[\"参数不能为空\",{\"1\":{\"620\":1}}],[\"参数传递\",{\"1\":{\"623\":1,\"633\":1}}],[\"参数在body\",{\"1\":{\"614\":1}}],[\"参数值是\",{\"1\":{\"569\":1}}],[\"参数化查询\",{\"0\":{\"510\":1,\"1051\":1},\"1\":{\"528\":1}}],[\"参数领域\",{\"1\":{\"477\":1}}],[\"参数必须包含token\",{\"1\":{\"472\":1}}],[\"参数dogsonly为true\",{\"1\":{\"468\":1}}],[\"参数id为2\",{\"1\":{\"468\":1}}],[\"参数类型\",{\"1\":{\"105\":1}}],[\"参数类型不同或者参数个数不同\",{\"1\":{\"54\":1}}],[\"参数个数\",{\"1\":{\"95\":1}}],[\"参数\",{\"1\":{\"31\":1,\"87\":2,\"1019\":1}}],[\"参数后面的信息\",{\"1\":{\"22\":1}}],[\"常常用在更改某一目录的情况\",{\"1\":{\"908\":1}}],[\"常规\",{\"0\":{\"895\":1}}],[\"常规的基本语法格式约定如下\",{\"1\":{\"850\":1}}],[\"常规路径处理就是用maproute的方式设定调用路径\",{\"1\":{\"203\":1}}],[\"常规路径处理和属性路径处理\",{\"1\":{\"203\":1}}],[\"常见目录文件命令\",{\"0\":{\"1071\":1}}],[\"常见名词解释\",{\"1\":{\"798\":1}}],[\"常见返回值获取\",{\"0\":{\"746\":1}}],[\"常见的ide支持\",{\"1\":{\"955\":1}}],[\"常见的pod\",{\"1\":{\"914\":1}}],[\"常见的拉取代码的方式分为https和git\",{\"1\":{\"802\":1}}],[\"常见的接口有如下四种类型\",{\"1\":{\"726\":1}}],[\"常见的返回值获取\",{\"1\":{\"718\":1}}],[\"常见的问题怎么回答\",{\"1\":{\"183\":1}}],[\"常见类型的接口请求\",{\"0\":{\"726\":1},\"1\":{\"718\":1}}],[\"常见开源协议\",{\"0\":{\"247\":1}}],[\"常见手段就是\",{\"1\":{\"134\":1}}],[\"常用linux命令\",{\"1\":{\"1109\":1}}],[\"常用\",{\"1\":{\"1079\":1}}],[\"常用数据库连接字符串\",{\"1\":{\"1048\":1}}],[\"常用来部署一些集群的日志采集\",{\"1\":{\"914\":1}}],[\"常用来初始化配置\",{\"1\":{\"914\":1}}],[\"常用node操作\",{\"1\":{\"914\":1}}],[\"常用namespace操作\",{\"1\":{\"914\":1}}],[\"常用概念\",{\"0\":{\"914\":1}}],[\"常用命令如下\",{\"1\":{\"914\":1}}],[\"常用命令\",{\"1\":{\"862\":1,\"1109\":1}}],[\"常用命令演示了一遍\",{\"1\":{\"811\":1}}],[\"常用命令实操\",{\"0\":{\"808\":1}}],[\"常用options如下\",{\"1\":{\"811\":1}}],[\"常用选项参数说明\",{\"1\":{\"811\":1}}],[\"常用功能简单说明\",{\"1\":{\"798\":1}}],[\"常用的ingress\",{\"1\":{\"914\":1}}],[\"常用的操作命令如下\",{\"1\":{\"914\":1}}],[\"常用的\",{\"1\":{\"866\":1}}],[\"常用的数据类型有如下\",{\"1\":{\"850\":1}}],[\"常用的参数指定如下\",{\"1\":{\"809\":1}}],[\"常用的客户端软件有tortoisegit\",{\"1\":{\"802\":1}}],[\"常用的单元测试是测试方法\",{\"1\":{\"584\":1}}],[\"常用的有\",{\"1\":{\"474\":1}}],[\"常用的类修饰符有public\",{\"1\":{\"49\":1}}],[\"常用场景\",{\"1\":{\"446\":1}}],[\"常用配置\",{\"0\":{\"373\":1,\"636\":1}}],[\"常用于提交表单\",{\"1\":{\"323\":1}}],[\"常用插件推荐\",{\"1\":{\"321\":1}}],[\"常用实例方法\",{\"1\":{\"93\":1}}],[\"常用实例属性\",{\"1\":{\"93\":1}}],[\"常用静态方法\",{\"1\":{\"92\":1}}],[\"常量用关键字const生命\",{\"1\":{\"67\":1}}],[\"常量会在编译时候静态赋值\",{\"1\":{\"67\":1}}],[\"常量\",{\"0\":{\"67\":1}}],[\"中管道的作用是将上一个命令的输出作为下一个命令的输入\",{\"1\":{\"1096\":1}}],[\"中可以使用\",{\"1\":{\"1081\":1}}],[\"中可以理解为一个类对应一个type对象\",{\"1\":{\"96\":1}}],[\"中使用事务\",{\"1\":{\"1066\":1}}],[\"中使用面向切面编程\",{\"1\":{\"215\":1}}],[\"中选择另一种语言\",{\"1\":{\"1012\":1}}],[\"中查看它们并评论或更新它们的状态\",{\"1\":{\"968\":1}}],[\"中创建代码审查并将其分配给用户\",{\"1\":{\"968\":1}}],[\"中定义的引导程序参数来安装\",{\"1\":{\"964\":1}}],[\"中换行需要使用\",{\"1\":{\"956\":1}}],[\"中右键单击项目\",{\"1\":{\"956\":1}}],[\"中打开项目或解决方案\",{\"1\":{\"956\":1}}],[\"中注册的名称就是\",{\"1\":{\"941\":1}}],[\"中体现为\",{\"1\":{\"939\":1}}],[\"中每台主机上的该指定端口都可以访问到该服务\",{\"1\":{\"930\":1}}],[\"中每一条指令都可能增加整体镜像的大小\",{\"1\":{\"863\":1}}],[\"中容器\",{\"1\":{\"927\":1}}],[\"中途修改忽略文件\",{\"0\":{\"801\":1}}],[\"中版本的概念\",{\"1\":{\"782\":1}}],[\"中空文件夹是不算在追踪范围内的\",{\"1\":{\"782\":1}}],[\"中某个键名对应的值\",{\"1\":{\"739\":1}}],[\"中则是\",{\"1\":{\"598\":1}}],[\"中运行测试项目以及使用\",{\"1\":{\"585\":1}}],[\"中不可用\",{\"1\":{\"570\":1}}],[\"中引入的\",{\"1\":{\"570\":1}}],[\"中将\",{\"1\":{\"563\":1}}],[\"中增加如下配置\",{\"1\":{\"562\":1}}],[\"中有许多的\",{\"1\":{\"443\":1}}],[\"中开发中应用广泛\",{\"1\":{\"438\":1}}],[\"中包括\",{\"1\":{\"247\":1}}],[\"中实践代码整洁\",{\"1\":{\"215\":1}}],[\"中只存\",{\"1\":{\"209\":1}}],[\"中积压超过一定的时间就会被\",{\"1\":{\"208\":1}}],[\"中负责处理所有写入操作的主要节点\",{\"1\":{\"205\":1}}],[\"中间的数字\",{\"1\":{\"1130\":1}}],[\"中间的myclass构造函数并没有被执行\",{\"1\":{\"977\":1}}],[\"中间用空格隔开\",{\"1\":{\"810\":1}}],[\"中间件都可以在请求之前和之后进行操作\",{\"1\":{\"399\":1}}],[\"中间件是没有这个能力的\",{\"1\":{\"399\":1}}],[\"中间件和过滤器的功能类似\",{\"1\":{\"399\":1}}],[\"中间件在这里是指注入到应用中处理请求和响应的组件\",{\"1\":{\"203\":1}}],[\"中间状态\",{\"1\":{\"134\":1}}],[\"中的快捷方式\",{\"1\":{\"1074\":1,\"1081\":1}}],[\"中的markdown工具\",{\"1\":{\"968\":1}}],[\"中的一些提示\",{\"1\":{\"965\":1}}],[\"中的目标\",{\"1\":{\"945\":1}}],[\"中的每个容器的\",{\"1\":{\"943\":1}}],[\"中的主机上通过一个指定端口暴露服务\",{\"1\":{\"930\":1}}],[\"中的代码\",{\"1\":{\"744\":1}}],[\"中的方法\",{\"1\":{\"593\":1}}],[\"中的nproc\",{\"1\":{\"564\":1}}],[\"中的nofile\",{\"1\":{\"564\":1}}],[\"中的过滤器\",{\"1\":{\"410\":1}}],[\"中的指定页面\",{\"1\":{\"322\":1}}],[\"中的检测类单例\",{\"1\":{\"215\":1}}],[\"中的数据都是热点数据\",{\"1\":{\"209\":1}}],[\"中的数据写入到磁盘中时\",{\"1\":{\"204\":1}}],[\"中的所有的对象都被存放到一个块\",{\"1\":{\"205\":1}}],[\"中的所有程序集\",{\"1\":{\"117\":1}}],[\"中的文档是不可变的\",{\"1\":{\"204\":1}}],[\"中的\",{\"1\":{\"159\":1,\"597\":1,\"598\":1,\"867\":1,\"943\":3,\"968\":1,\"1037\":1,\"1130\":3}}],[\"中添加\",{\"1\":{\"156\":1}}],[\"中\",{\"0\":{\"494\":1,\"498\":1},\"1\":{\"134\":2,\"204\":1,\"205\":1,\"209\":1,\"401\":1,\"784\":1,\"863\":1,\"908\":1,\"919\":1,\"920\":1,\"927\":1,\"945\":1}}],[\"中文文档\",{\"1\":{\"946\":1}}],[\"中文视图或者英文视图\",{\"1\":{\"405\":1}}],[\"中文教程地址\",{\"1\":{\"343\":1}}],[\"中文件处理重载事件\",{\"1\":{\"215\":1}}],[\"中文\",{\"1\":{\"124\":2,\"1110\":1}}],[\"中排序的简单用法\",{\"1\":{\"122\":1}}],[\"中程序集处处可见\",{\"1\":{\"90\":1}}],[\"中字符串类型标识不可变的unicode字符序列\",{\"1\":{\"79\":1}}],[\"中国移动网盘\",{\"1\":{\"1014\":1}}],[\"中国官方镜像源地址为\",{\"1\":{\"876\":1}}],[\"中国台湾省\",{\"1\":{\"72\":2}}],[\"中国\",{\"1\":{\"63\":1,\"124\":2,\"253\":1}}],[\"中以get和set访问器方法实现对可读可写属性的操作\",{\"1\":{\"41\":1}}],[\"编码规范\",{\"1\":{\"135\":1}}],[\"编写compose文件\",{\"1\":{\"851\":1}}],[\"编写了一个api接口testcache\",{\"1\":{\"851\":1}}],[\"编写例子\",{\"1\":{\"851\":1}}],[\"编写也比较简单\",{\"1\":{\"838\":1}}],[\"编写dockerfile文件\",{\"1\":{\"851\":1}}],[\"编写dockerfile\",{\"1\":{\"806\":1}}],[\"编写项目提交\",{\"1\":{\"793\":1}}],[\"编写不一样\",{\"1\":{\"742\":1}}],[\"编写打印语句如\",{\"1\":{\"738\":1}}],[\"编写的代码都不相同\",{\"1\":{\"743\":1}}],[\"编写的规则也是不一样的\",{\"1\":{\"743\":1}}],[\"编写的断言代码是javascript\",{\"1\":{\"739\":1}}],[\"编写的位置可以是pre\",{\"1\":{\"738\":1}}],[\"编写的免费沙盒塔防游戏\",{\"1\":{\"243\":1}}],[\"编写接口文档\",{\"1\":{\"720\":1}}],[\"编写安装程序类\",{\"0\":{\"692\":1}}],[\"编写客户端打印程序\",{\"0\":{\"691\":1}}],[\"编写用户id查询用户信息接口\",{\"1\":{\"602\":1}}],[\"编写完成之后\",{\"1\":{\"594\":1}}],[\"编写构造函数并赋值httpclient\",{\"1\":{\"586\":1}}],[\"编写方法\",{\"1\":{\"582\":1}}],[\"编写过滤器\",{\"1\":{\"418\":1,\"421\":1,\"424\":1}}],[\"编写sql如下\",{\"1\":{\"342\":1}}],[\"编写自定义比较器实现\",{\"1\":{\"125\":1}}],[\"编写索引器需要定义一个名为this的属性\",{\"1\":{\"66\":1}}],[\"编译时是否生成nuget包\",{\"1\":{\"1123\":1}}],[\"编译时候是否生成nuget包\",{\"1\":{\"1122\":1}}],[\"编译\",{\"1\":{\"879\":1}}],[\"编译工具\",{\"1\":{\"871\":1}}],[\"编译生成的文件\",{\"1\":{\"799\":1}}],[\"编译animal的公共属性\",{\"1\":{\"128\":1}}],[\"编译以后的最基本数据单元\",{\"1\":{\"86\":1}}],[\"编译器提供对proto文件的智能提示\",{\"1\":{\"666\":1}}],[\"编译器\",{\"1\":{\"140\":1}}],[\"编译器就不再自动生成无参数构造器\",{\"1\":{\"71\":1}}],[\"编译器会创建一个类定义表\",{\"1\":{\"86\":1}}],[\"编译器会在常量使用的地方上直接替换值\",{\"1\":{\"67\":1}}],[\"编译器会自动生成一个后台私有字段\",{\"1\":{\"62\":1}}],[\"编辑完成\",{\"1\":{\"1110\":1}}],[\"编辑网卡配置文件\",{\"1\":{\"1110\":2}}],[\"编辑虚拟机设置\",{\"1\":{\"1110\":1}}],[\"编辑该文件增加或者修改以下配置\",{\"1\":{\"1107\":1}}],[\"编辑配置文件\",{\"1\":{\"948\":1}}],[\"编辑deployment定义\",{\"1\":{\"914\":1}}],[\"编辑=\",{\"1\":{\"254\":1,\"256\":1}}],[\"编辑并重新请求\",{\"1\":{\"175\":1}}],[\"编辑器和库来构建\",{\"1\":{\"135\":1}}],[\"编辑\",{\"1\":{\"9\":1,\"1110\":1}}],[\"自身的不足\",{\"1\":{\"968\":1}}],[\"自此我们在picgo配置oss的全部步骤就已经全部完成\",{\"1\":{\"954\":1}}],[\"自行分配\",{\"1\":{\"941\":1}}],[\"自然也伴随着新的\",{\"1\":{\"936\":1}}],[\"自带的一些命令还能协助压缩镜像\",{\"1\":{\"868\":1}}],[\"自带的集群\",{\"1\":{\"209\":1}}],[\"自\",{\"1\":{\"562\":1}}],[\"自定存储恢复信息时间间隔\",{\"1\":{\"256\":1}}],[\"自定义选项可以自定义虚拟机属性\",{\"1\":{\"1110\":1}}],[\"自定义\",{\"1\":{\"1110\":1}}],[\"自定义配色方案\",{\"1\":{\"1036\":1}}],[\"自定义配置\",{\"1\":{\"669\":1,\"670\":1}}],[\"自定义的object\",{\"1\":{\"914\":1}}],[\"自定义的pod\",{\"1\":{\"914\":1}}],[\"自定义网络之所以能通过容器名ping通\",{\"1\":{\"843\":1}}],[\"自定义菜单\",{\"0\":{\"712\":1}}],[\"自定义消息处理器\",{\"1\":{\"711\":1}}],[\"自定义消息回复\",{\"0\":{\"711\":1}}],[\"自定义协议名称\",{\"1\":{\"692\":1}}],[\"自定义协议打开本地客户端程序遇上csp内容安全策略\",{\"1\":{\"689\":1}}],[\"自定义设置\",{\"0\":{\"581\":1}}],[\"自定义服务\",{\"1\":{\"575\":1}}],[\"自定义特性\",{\"0\":{\"475\":1}}],[\"自定义模型绑定器\",{\"1\":{\"472\":1}}],[\"自定义模型绑定\",{\"0\":{\"472\":1}}],[\"自定义全局异常过滤器\",{\"1\":{\"413\":1}}],[\"自定义身份验证\",{\"1\":{\"401\":1}}],[\"自定义读取\",{\"1\":{\"389\":1}}],[\"自定义授权封装等\",{\"1\":{\"364\":1}}],[\"自定义生命周期\",{\"1\":{\"344\":1}}],[\"自定义项目徽章\",{\"0\":{\"340\":1}}],[\"自定义画面质量且允许用户在客户端程序里调节bitrate和quantizer改变画面传输质量\",{\"1\":{\"288\":1}}],[\"自定义路由约束很少会用到\",{\"1\":{\"164\":1}}],[\"自定义路由约束\",{\"0\":{\"164\":1}}],[\"自定义终结点名称\",{\"1\":{\"157\":1}}],[\"自定义长度排序比较器\",{\"1\":{\"125\":1}}],[\"自定义排序\",{\"0\":{\"125\":1}}],[\"自定义属性\",{\"1\":{\"87\":1}}],[\"自定义rabbitmq队列注解\",{\"1\":{\"46\":1}}],[\"自由风格任务\",{\"0\":{\"894\":1}}],[\"自由门\",{\"1\":{\"309\":1}}],[\"自由修改\",{\"1\":{\"248\":1}}],[\"自由分发\",{\"1\":{\"248\":1}}],[\"自家的app\",{\"1\":{\"247\":1}}],[\"自欺欺人\",{\"1\":{\"204\":1}}],[\"自我介绍\",{\"0\":{\"185\":1}}],[\"自我评价一定要花时间认真写\",{\"1\":{\"179\":1}}],[\"自我评价\",{\"0\":{\"179\":1}}],[\"自认达到高级工程师的水平\",{\"1\":{\"179\":1}}],[\"自己一个一个看\",{\"1\":{\"786\":1}}],[\"自己从头开始走一遍docker部署\",{\"1\":{\"550\":1}}],[\"自己构建这种需要手动释放\",{\"1\":{\"354\":1}}],[\"自己搭建mongo\",{\"0\":{\"217\":1}}],[\"自己判断一下是否已经消费过了\",{\"1\":{\"208\":1}}],[\"自己又不甘心\",{\"1\":{\"197\":1}}],[\"自己的开发经验还可以\",{\"1\":{\"189\":1}}],[\"自己干\",{\"1\":{\"181\":1}}],[\"自己心里没底\",{\"1\":{\"180\":1}}],[\"自己写程序就可以订阅变更日志了\",{\"1\":{\"134\":1}}],[\"自己刚刚修改了数据\",{\"1\":{\"134\":1}}],[\"自动升级包版本是实现通过调整csproj文件的配置来实现的\",{\"1\":{\"1121\":1}}],[\"自动检测到的安装介质\",{\"1\":{\"1110\":1}}],[\"自动\",{\"1\":{\"1044\":1}}],[\"自动+生成\",{\"1\":{\"1044\":1}}],[\"自动为每个\",{\"1\":{\"942\":1}}],[\"自动删除旧的pod并创建新的pod\",{\"1\":{\"914\":1}}],[\"自动删除旧的pod并创建新pod替换\",{\"1\":{\"914\":1}}],[\"自动分配一个仅集群内部可以访问的虚拟ip\",{\"1\":{\"914\":1}}],[\"自动伸缩\",{\"1\":{\"913\":1}}],[\"自动调用\",{\"1\":{\"692\":1}}],[\"自动创建使用\",{\"1\":{\"666\":1}}],[\"自动重启\",{\"1\":{\"564\":1}}],[\"自动执行\",{\"1\":{\"543\":1}}],[\"自动生成数据库\",{\"1\":{\"501\":1}}],[\"自动释放对象\",{\"1\":{\"344\":2}}],[\"自动配置代理\",{\"1\":{\"322\":1}}],[\"自动帮你完成尾部闭合标签的同步修改\",{\"1\":{\"321\":1}}],[\"自动出来结束标签\",{\"1\":{\"321\":1}}],[\"自动将您的全部数据备份到多个目标位置\",{\"1\":{\"298\":1}}],[\"自动保存\",{\"1\":{\"256\":1}}],[\"自动化测试等\",{\"1\":{\"714\":1}}],[\"自动化运维工具\",{\"1\":{\"253\":1}}],[\"自动化组件\",{\"1\":{\"210\":1}}],[\"自动把数据库变更日志\",{\"1\":{\"134\":1}}],[\"自动投递到下游队列\",{\"1\":{\"134\":1}}],[\"自动属性\",{\"0\":{\"62\":1}}],[\"访问虚拟机\",{\"1\":{\"1110\":1}}],[\"访问我们项目的swagger\",{\"1\":{\"1070\":1}}],[\"访问速度快\",{\"1\":{\"952\":1}}],[\"访问另一个pod内的容器\",{\"1\":{\"927\":1}}],[\"访问模式\",{\"1\":{\"914\":1}}],[\"访问变量\",{\"1\":{\"740\":1}}],[\"访问postman官方网站\",{\"1\":{\"722\":1}}],[\"访问网址\",{\"1\":{\"694\":1}}],[\"访问该实例会出现管理界面\",{\"1\":{\"661\":1}}],[\"访问地址提示需要解锁\",{\"1\":{\"910\":1}}],[\"访问地址\",{\"0\":{\"642\":1,\"648\":1,\"654\":1},\"1\":{\"722\":1,\"887\":1}}],[\"访问版本信息\",{\"1\":{\"636\":1}}],[\"访问接口输出配置\",{\"1\":{\"661\":1}}],[\"访问接口\",{\"0\":{\"500\":1}}],[\"访问国外站点\",{\"1\":{\"322\":1}}],[\"访问\",{\"0\":{\"212\":1,\"1118\":1}}],[\"访问权限修饰符\",{\"1\":{\"59\":1}}],[\"访问修饰符\",{\"0\":{\"49\":1},\"1\":{\"51\":1,\"56\":1,\"69\":1,\"87\":3}}],[\"但只支持被单个pod挂载\",{\"1\":{\"914\":1}}],[\"但persistentvolumeclaim是属于某个特定namespace的\",{\"1\":{\"914\":1}}],[\"但麻烦的是需要先将容器运行起来\",{\"1\":{\"868\":1}}],[\"但当应用程序依赖的服务比较多\",{\"1\":{\"843\":1}}],[\"但两者稍有不同\",{\"1\":{\"838\":1}}],[\"但两种方式不能混用\",{\"1\":{\"811\":1}}],[\"但内部的语法和关键字并没有程序那么复杂和繁多\",{\"1\":{\"818\":1}}],[\"但很明显能感觉到不灵活\",{\"1\":{\"812\":1}}],[\"但很多人对这个问题\",{\"1\":{\"134\":1}}],[\"但有一点看着很不爽\",{\"1\":{\"1065\":1}}],[\"但有时需要进入容器内部进行相关配置的更改\",{\"1\":{\"811\":1}}],[\"但有了断言后\",{\"1\":{\"739\":1}}],[\"但并不能实现与主机的相互访问\",{\"1\":{\"1110\":1}}],[\"但并不明显\",{\"1\":{\"866\":1}}],[\"但并不会经过model\",{\"1\":{\"403\":1}}],[\"但并没有报端口被占用的错\",{\"1\":{\"811\":1}}],[\"但大家似乎更喜欢直接敲命令\",{\"1\":{\"807\":1}}],[\"但比复制粘贴优雅许多\",{\"1\":{\"781\":1}}],[\"但想想还是算了\",{\"1\":{\"693\":1}}],[\"但使用方式类似\",{\"1\":{\"693\":1}}],[\"但可能包含已知\",{\"1\":{\"1129\":1}}],[\"但可通过\",{\"1\":{\"578\":1}}],[\"但可以有一个空值\",{\"1\":{\"206\":1}}],[\"但适用于\",{\"1\":{\"577\":1}}],[\"但signalr还支持messagepack协议\",{\"1\":{\"535\":1}}],[\"但询问\",{\"1\":{\"531\":1}}],[\"但如果需要点出来右表的字段\",{\"1\":{\"521\":1}}],[\"但你可以借助它使用字符串内插语法\",{\"1\":{\"513\":1}}],[\"但无奈没有记住同学的手机号码\",{\"1\":{\"432\":1}}],[\"但未通过该资源的任何授权策略\",{\"1\":{\"359\":1}}],[\"但在实际用场景中\",{\"1\":{\"811\":1}}],[\"但在开发时会经常遇到一些挑战\",{\"1\":{\"210\":1}}],[\"但在物理储存上可以有多种存在形式\",{\"1\":{\"90\":1}}],[\"但却真得帮助我减轻了很多麻烦\",{\"1\":{\"968\":1}}],[\"但却保证了整个系统的稳定性和可用性\",{\"1\":{\"210\":1}}],[\"但却看不到变更\",{\"1\":{\"134\":1}}],[\"但通常而言\",{\"1\":{\"210\":1}}],[\"但它可以更方便地处理不包含敏感信息的字符串\",{\"1\":{\"914\":1}}],[\"但它不关心授权的问题\",{\"1\":{\"914\":1}}],[\"但它在对信息的存储和认知方式上却有很大差异\",{\"1\":{\"776\":1}}],[\"但它既支持表单请求\",{\"1\":{\"734\":1}}],[\"但它通常需要在服务器和客户端自定义编程才能成功实现\",{\"1\":{\"532\":1}}],[\"但它们却是存在\",{\"1\":{\"322\":1}}],[\"但它们的性能往往比较差\",{\"1\":{\"134\":1}}],[\"但它支持在节点数量改变情况下\",{\"1\":{\"209\":1}}],[\"但仅限于在过期集合的键\",{\"1\":{\"209\":2}}],[\"但绝对不能少于8g\",{\"1\":{\"204\":1}}],[\"但实际上是成对出现\",{\"1\":{\"926\":1}}],[\"但实际上\",{\"1\":{\"736\":1}}],[\"但实际上32gb和16gb机器用的比较多\",{\"1\":{\"204\":1}}],[\"但实际真的有可能发生吗\",{\"1\":{\"134\":1}}],[\"但即使大多数可用\",{\"1\":{\"204\":1}}],[\"但具备所有封闭类型的其他特性\",{\"1\":{\"203\":1}}],[\"但具体要怎么做呢\",{\"1\":{\"134\":1}}],[\"但我还倾向于放照片\",{\"1\":{\"177\":1}}],[\"但我们可以在pod上设置容忍\",{\"1\":{\"914\":1}}],[\"但我们选择了fastreport\",{\"1\":{\"690\":1}}],[\"但我们要付出的代价\",{\"1\":{\"134\":1}}],[\"但我们思考这样一个问题\",{\"1\":{\"134\":1}}],[\"但会拖慢启动时间\",{\"1\":{\"163\":1}}],[\"但还有剩余的url文本\",{\"1\":{\"161\":1}}],[\"但这样就可以执行\",{\"1\":{\"838\":1}}],[\"但这一次\",{\"1\":{\"532\":1}}],[\"但这为系统带来了安全上的隐患\",{\"1\":{\"203\":1}}],[\"但这个延迟时间很难评估\",{\"1\":{\"134\":1}}],[\"但这种\",{\"1\":{\"134\":1}}],[\"但问题来了\",{\"1\":{\"134\":1}}],[\"但凡后者执行失败了\",{\"1\":{\"134\":1}}],[\"但凡后者发生异常\",{\"1\":{\"134\":1}}],[\"但凡\",{\"1\":{\"134\":1}}],[\"但\",{\"1\":{\"134\":1,\"208\":1,\"250\":1,\"251\":1}}],[\"但缓存更新失败\",{\"1\":{\"134\":1}}],[\"但数据库中是\",{\"1\":{\"134\":1}}],[\"但数据库更新失败\",{\"1\":{\"134\":1}}],[\"但数据库和缓存都更新\",{\"1\":{\"134\":1}}],[\"但现在我们需要重点考虑\",{\"1\":{\"134\":1}}],[\"但缺点也很明显\",{\"1\":{\"134\":1}}],[\"但引入缓存之后\",{\"1\":{\"134\":1}}],[\"但随着业务量的增长\",{\"1\":{\"134\":1}}],[\"但不包括\",{\"1\":{\"1074\":1}}],[\"但不会启动\",{\"1\":{\"862\":1}}],[\"但不会载入程序的依赖项\",{\"1\":{\"117\":1}}],[\"但不需要指定后缀类型\",{\"1\":{\"818\":1}}],[\"但不存在向已注册连接广播消息的概念\",{\"1\":{\"665\":1}}],[\"但不是全程的处理\",{\"1\":{\"207\":1}}],[\"但不推荐\",{\"1\":{\"105\":2}}],[\"但不同之处在于\",{\"1\":{\"59\":1}}],[\"但是又希望你的虚拟机能够联网\",{\"1\":{\"1110\":1}}],[\"但是又想这个文件\",{\"1\":{\"799\":1}}],[\"但是里面会有很多东西\",{\"1\":{\"1103\":1}}],[\"但是推送到阿里云仓库有问题\",{\"1\":{\"1070\":1}}],[\"但是依然强烈建议\",{\"1\":{\"1047\":1}}],[\"但是依然没有引起手机厂商的重视\",{\"1\":{\"433\":1}}],[\"但是pod被删除或者迁移\",{\"1\":{\"914\":1}}],[\"但是并不为容器进行任何网络配置\",{\"1\":{\"839\":1}}],[\"但是并不是真正的单例\",{\"1\":{\"409\":1}}],[\"但是后来发现有一个文件已经上传了\",{\"1\":{\"799\":1}}],[\"但是实际上\",{\"1\":{\"798\":1}}],[\"但是没有合并到\",{\"1\":{\"786\":1}}],[\"但是该分支上一些特有的对象并不会被删除的\",{\"1\":{\"785\":1}}],[\"但是文件却只有两个\",{\"1\":{\"780\":1}}],[\"但是通过基本的输出\",{\"1\":{\"780\":1}}],[\"但是其存储的是文件的类容\",{\"1\":{\"780\":1}}],[\"但是为了明显\",{\"1\":{\"735\":1}}],[\"但是为了安全在浏览器实现都要求使用https\",{\"1\":{\"665\":1}}],[\"但是请控制在合理范围内\",{\"1\":{\"700\":1}}],[\"但是不要担心每月可能会赠送4元\",{\"1\":{\"694\":1}}],[\"但是满足我们的实际需求\",{\"1\":{\"661\":1}}],[\"但是在发包的过程中\",{\"1\":{\"1121\":1}}],[\"但是在winform中默认还是通过new的方式来进行操作的\",{\"1\":{\"657\":1}}],[\"但是在功能上做了增强\",{\"1\":{\"370\":1}}],[\"但是写的多了就会觉得\",{\"1\":{\"598\":1}}],[\"但是ms\",{\"1\":{\"597\":1}}],[\"但是经过同事的严厉批评\",{\"1\":{\"588\":1}}],[\"但是还没有准备提交\",{\"1\":{\"768\":1}}],[\"但是还存在着其他问题\",{\"1\":{\"543\":1}}],[\"但是还算靠谱\",{\"1\":{\"196\":1}}],[\"但是提供的值包装在dbparameter中\",{\"1\":{\"512\":1}}],[\"但是它有局限性\",{\"1\":{\"665\":1}}],[\"但是它并没有加密\",{\"1\":{\"484\":1}}],[\"但是它的主要用途是作为调试器\",{\"1\":{\"173\":1}}],[\"但是目的不是为了数据加密和保护\",{\"1\":{\"484\":1}}],[\"但是理论和时间成熟相对较晚\",{\"1\":{\"436\":1}}],[\"但是随着软件系统的规模越来越庞大\",{\"1\":{\"435\":1}}],[\"但是以上几种方式依然是成本较高的\",{\"1\":{\"433\":1}}],[\"但是尴尬地一幕发生了\",{\"1\":{\"432\":1}}],[\"但是伴随而来的便是手机的充电问题\",{\"1\":{\"432\":1}}],[\"但是必须注册服务\",{\"1\":{\"409\":1}}],[\"但是这里是十位\",{\"1\":{\"779\":1}}],[\"但是这种方式在不同的位置定义\",{\"1\":{\"742\":1}}],[\"但是这样做也是为了更好的体验\",{\"1\":{\"700\":1}}],[\"但是这是pgsql\",{\"1\":{\"342\":1}}],[\"但是这些字段类型必须一致\",{\"1\":{\"58\":1}}],[\"但是对于我来说还是不太方便\",{\"1\":{\"802\":1}}],[\"但是对于客户端而言\",{\"1\":{\"322\":1}}],[\"但是对应一个\",{\"1\":{\"208\":1}}],[\"但是网关和代理服务器确实完全不同的东西\",{\"1\":{\"322\":1}}],[\"但是共享也意味着风险\",{\"1\":{\"322\":1}}],[\"但是假如我们就想访问某同性交友网站改怎么办呢\",{\"1\":{\"322\":1}}],[\"但是需要找纯净不带广告的版本\",{\"1\":{\"310\":1}}],[\"但是需要保证修改后的项目以及派生作品也使用\",{\"1\":{\"248\":1}}],[\"但是端口会不定时更新\",{\"1\":{\"242\":1}}],[\"但是领导又会说swagger不能留档\",{\"1\":{\"216\":1}}],[\"但是问题是\",{\"1\":{\"208\":1}}],[\"但是你要是消费到第二次的时候\",{\"1\":{\"208\":1}}],[\"但是你有另外一些接口\",{\"1\":{\"202\":1}}],[\"但是因为网络传输等等故障\",{\"1\":{\"208\":1}}],[\"但是因为我们在代码里面配置了external\",{\"1\":{\"40\":1}}],[\"但是会在结果中被过滤掉\",{\"1\":{\"204\":2}}],[\"但是我们最终是需要将其提交到代码仓库\",{\"1\":{\"781\":1}}],[\"但是我们可以在同一次请求中去获取多次实例测试\",{\"1\":{\"203\":1}}],[\"但是我们可以继续分细一点\",{\"1\":{\"203\":1}}],[\"但是我可以搬砖呀\",{\"1\":{\"694\":1}}],[\"但是我也没有写校验token的代码\",{\"1\":{\"484\":1}}],[\"但是我正在网上学技术课程\",{\"1\":{\"189\":1}}],[\"但是适配器模式用于接口之间的转换\",{\"1\":{\"202\":1}}],[\"但是一年发\",{\"1\":{\"200\":1}}],[\"但是每个实例都同步\",{\"1\":{\"208\":1}}],[\"但是每个月每个人都有一个绩效系数\",{\"1\":{\"199\":1}}],[\"但是每种模式的出现意图不同\",{\"1\":{\"202\":1}}],[\"但是每次调用者都去构建一个list\",{\"1\":{\"43\":1}}],[\"但是现实中真有类似的事\",{\"1\":{\"192\":1}}],[\"但是大部分人都回答不好\",{\"1\":{\"190\":1}}],[\"但是产品思维还不够\",{\"1\":{\"189\":1}}],[\"但是有时缓存的过期与否和时间没有联系\",{\"1\":{\"374\":1}}],[\"但是有时候炫过了头\",{\"1\":{\"182\":1}}],[\"但是有部分数据还在memory\",{\"1\":{\"204\":1}}],[\"但是有些场景我又不需要查询数据库\",{\"1\":{\"43\":1}}],[\"但是鬼知道这是啥意思\",{\"1\":{\"181\":1}}],[\"但是别搞成了\",{\"1\":{\"177\":1}}],[\"但是仅用于开发类库\",{\"1\":{\"141\":1}}],[\"但是缓存中的数据不一定会被\",{\"1\":{\"134\":1}}],[\"但是\",{\"1\":{\"134\":3,\"186\":1,\"204\":1,\"247\":1,\"252\":1,\"322\":1,\"514\":1,\"778\":1,\"779\":1,\"786\":1,\"862\":1,\"964\":1,\"980\":1,\"981\":1,\"986\":1}}],[\"但是如果直接忽略静态文件的话\",{\"1\":{\"207\":1}}],[\"但是如果你还想将父类转为子类可以采用下面的方法\",{\"1\":{\"128\":1}}],[\"但是如果开发者所处的环境无法联网\",{\"1\":{\"12\":1}}],[\"但是她的相等运算法却遵守值类型的语义\",{\"1\":{\"77\":1}}],[\"但是string是一个例外\",{\"1\":{\"77\":1}}],[\"但是可以被多个类继承\",{\"1\":{\"73\":1}}],[\"但是属性内部可以像方法一样包含逻辑\",{\"1\":{\"59\":1}}],[\"比直接写\",{\"1\":{\"204\":1}}],[\"比\",{\"1\":{\"186\":1,\"1079\":1}}],[\"比如测试虚拟机是否能\",{\"1\":{\"1111\":1}}],[\"比如修改文件\",{\"1\":{\"1082\":1}}],[\"比如数据库的id映射不到代码的id上面\",{\"1\":{\"1061\":1}}],[\"比如数据库\",{\"1\":{\"1009\":1}}],[\"比如数据库备份需要临时迁移\",{\"1\":{\"841\":1}}],[\"比如联网搜索\",{\"1\":{\"968\":1}}],[\"比如其中的标记自动补全\",{\"1\":{\"968\":1}}],[\"比如我的主机内存为\",{\"1\":{\"1110\":1}}],[\"比如我的主机\",{\"1\":{\"1110\":1}}],[\"比如我想安装\",{\"1\":{\"959\":1}}],[\"比如我们进行\",{\"1\":{\"958\":1}}],[\"比如我们刚拉取下来的nginx镜像\",{\"1\":{\"810\":1}}],[\"比如我们后面要提到的接口关联\",{\"1\":{\"743\":1}}],[\"比如我们去对iuserservice里面的getlistasync做单元测试\",{\"1\":{\"587\":1,\"591\":1}}],[\"比如我们有一个接口为\",{\"1\":{\"468\":1}}],[\"比如我们的接口中经常有患者id字段\",{\"1\":{\"417\":1}}],[\"比如我们缓存一个文件的内容\",{\"1\":{\"374\":1}}],[\"比如loadbalancer\",{\"1\":{\"929\":1}}],[\"比如目前的\",{\"1\":{\"928\":1}}],[\"比如一个web应用需要被其他用户访问\",{\"1\":{\"922\":1}}],[\"比如一些镜像和容器有依赖\",{\"1\":{\"810\":1}}],[\"比如pod的cpu\",{\"1\":{\"914\":1}}],[\"比如prometheus\",{\"1\":{\"914\":1}}],[\"比如支持集合操作\",{\"1\":{\"914\":1}}],[\"比如kube\",{\"1\":{\"914\":1}}],[\"比如fluentd\",{\"1\":{\"914\":1}}],[\"比如emptydir的数据会丢失\",{\"1\":{\"914\":1}}],[\"比如elasticsearch\",{\"1\":{\"564\":1}}],[\"比如可以用来将系统内部的对象划分为不同的项目组或者用户组\",{\"1\":{\"914\":1}}],[\"比如c\",{\"1\":{\"869\":1}}],[\"比如构建一个包含所有库的二进制文件\",{\"1\":{\"869\":1}}],[\"比如文件系统\",{\"1\":{\"863\":1}}],[\"比如文本字段\",{\"1\":{\"206\":1}}],[\"比如下载公共镜像\",{\"1\":{\"863\":1}}],[\"比如下面的elasticsearch\",{\"1\":{\"564\":1}}],[\"比如下面是三种拥有不同访问控制权限的客户端\",{\"1\":{\"322\":1}}],[\"比如开发一个web项目\",{\"1\":{\"843\":1}}],[\"比如增加参数\",{\"1\":{\"838\":1}}],[\"比如在构建过程中需要执行一条命令下载对应的包\",{\"1\":{\"822\":1}}],[\"比如在容器内的挂载目录下\",{\"1\":{\"816\":1}}],[\"比如建房子\",{\"1\":{\"820\":1}}],[\"比如运行状态\",{\"1\":{\"811\":1}}],[\"比如对镜像\",{\"1\":{\"809\":1}}],[\"比如对某个\",{\"1\":{\"209\":1}}],[\"比如仓储信息\",{\"1\":{\"809\":1}}],[\"比如分支的删除\",{\"1\":{\"786\":1}}],[\"比如用例的批量执行\",{\"1\":{\"736\":1}}],[\"比如返回json\",{\"1\":{\"735\":1}}],[\"比如返回html页面\",{\"1\":{\"735\":1}}],[\"比如微信的更新头像\",{\"1\":{\"734\":1}}],[\"比如是付费接口\",{\"1\":{\"634\":1}}],[\"比如模拟数据\",{\"1\":{\"586\":1}}],[\"比如就注入我们根据id查询的语句\",{\"1\":{\"511\":1}}],[\"比如从cookie中获取会话状态\",{\"1\":{\"468\":1}}],[\"比如当前的\",{\"1\":{\"446\":1}}],[\"比如xmlbeanfactory\",{\"1\":{\"443\":1}}],[\"比如接口中的常用参数有患者id\",{\"1\":{\"418\":1}}],[\"比如根据返回的结果不同\",{\"1\":{\"405\":1}}],[\"比如说\",{\"1\":{\"744\":1}}],[\"比如说真实的数据库\",{\"1\":{\"595\":1}}],[\"比如说我们需要全局系统中的异常或者收集操作日志等\",{\"1\":{\"408\":1}}],[\"比如说第一次请求先到onresourceexecuting\",{\"1\":{\"402\":1}}],[\"比如说要求word或者excel等了\",{\"1\":{\"216\":1}}],[\"比如有状态的\",{\"1\":{\"345\":1}}],[\"比如客户端的\",{\"1\":{\"322\":1}}],[\"比如你去医院\",{\"1\":{\"210\":1}}],[\"比如你的\",{\"1\":{\"209\":1}}],[\"比如登录系统只专注于用户登录方面功能的实现\",{\"1\":{\"210\":1}}],[\"比如db\",{\"1\":{\"209\":1}}],[\"比如大家一起喝咖啡熬夜到晚上12点以后\",{\"1\":{\"208\":1}}],[\"比如向上游\",{\"1\":{\"207\":1}}],[\"比如图片盗链\",{\"1\":{\"206\":1}}],[\"比如memcached\",{\"1\":{\"206\":1}}],[\"比如最近3天或者一周的数据\",{\"1\":{\"204\":1}}],[\"比如1gb\",{\"1\":{\"204\":1}}],[\"比如日均1亿+数据的\",{\"1\":{\"204\":1}}],[\"比如共\",{\"1\":{\"204\":1}}],[\"比如\",{\"1\":{\"199\":1,\"205\":1,\"206\":1,\"208\":2,\"403\":1,\"471\":1,\"683\":1,\"728\":1,\"754\":1,\"781\":1,\"868\":2,\"869\":2}}],[\"比如userewriter\",{\"1\":{\"157\":1}}],[\"比如只允许部分域名访问\",{\"1\":{\"155\":1}}],[\"比如监控报警\",{\"1\":{\"149\":1}}],[\"比较对象\",{\"1\":{\"968\":1}}],[\"比较独立\",{\"1\":{\"843\":1}}],[\"比较适用于在同一docker\",{\"1\":{\"839\":1}}],[\"比较常用的是\",{\"1\":{\"914\":1}}],[\"比较常用的如下\",{\"1\":{\"810\":1}}],[\"比较常见的一种就是表单类型\",{\"1\":{\"732\":1}}],[\"比较容易理解的比喻\",{\"1\":{\"805\":1}}],[\"比较的值不能为null\",{\"1\":{\"125\":1}}],[\"比较\",{\"1\":{\"125\":1}}],[\"比较麻烦\",{\"1\":{\"43\":1}}],[\"比字段\",{\"1\":{\"59\":1}}],[\"声明测试类\",{\"1\":{\"597\":1}}],[\"声明类型\",{\"1\":{\"87\":1}}],[\"声明类型和反射类型等\",{\"1\":{\"87\":1}}],[\"声明事件\",{\"1\":{\"68\":1}}],[\"声明委托\",{\"1\":{\"68\":1}}],[\"声明多个字段\",{\"0\":{\"58\":1}}],[\"声明有效\",{\"1\":{\"46\":1}}],[\"级别的\",{\"1\":{\"208\":1}}],[\"级别\",{\"1\":{\"56\":1,\"58\":1}}],[\"或任何其他集合\",{\"1\":{\"1055\":1}}],[\"或带终止\",{\"1\":{\"980\":1}}],[\"或按\",{\"1\":{\"956\":1}}],[\"或是遇到一个大系统拆分的服务很多时\",{\"1\":{\"843\":1}}],[\"或是实现某个接口\",{\"1\":{\"131\":1}}],[\"或tests标签中\",{\"1\":{\"738\":1}}],[\"或更高版本\",{\"1\":{\"560\":2,\"956\":1}}],[\"或请求即将超时\",{\"1\":{\"532\":1}}],[\"或0\",{\"1\":{\"521\":1}}],[\"或其他界面进行混合\",{\"1\":{\"210\":1}}],[\"或写操作\",{\"1\":{\"205\":1}}],[\"或重现特定请求上发生的问题\",{\"1\":{\"175\":1}}],[\"或者下载阿里云的系统镜像\",{\"1\":{\"1114\":1}}],[\"或者paging\",{\"1\":{\"1041\":2}}],[\"或者node\",{\"1\":{\"1019\":1}}],[\"或者从\",{\"1\":{\"1012\":1}}],[\"或者有时这个值在调试时无法被显示的访问\",{\"1\":{\"982\":1}}],[\"或者在\",{\"1\":{\"956\":1}}],[\"或者命令\",{\"1\":{\"946\":1,\"1109\":1}}],[\"或者移除旧版本的旧\",{\"1\":{\"936\":1}}],[\"或者直接关闭防火墙\",{\"1\":{\"911\":1}}],[\"或者不进入容器\",{\"1\":{\"888\":1}}],[\"或者不熟悉\",{\"1\":{\"693\":1}}],[\"或者是slave\",{\"1\":{\"879\":1}}],[\"或者是master\",{\"1\":{\"879\":1}}],[\"或者是一个技术管理者\",{\"1\":{\"190\":1}}],[\"或者from\",{\"1\":{\"820\":1}}],[\"或者右键tortoisegit=>设置=>常规设置进行修改\",{\"1\":{\"802\":1}}],[\"或者文件夹\",{\"1\":{\"799\":1}}],[\"或者找到之前的文件数据等\",{\"1\":{\"786\":1}}],[\"或者使用阿里云镜像源\",{\"1\":{\"859\":1}}],[\"或者使用ls\",{\"1\":{\"752\":1}}],[\"或者使用数据驱动的\",{\"1\":{\"598\":1}}],[\"或者将proto文件放到一个共享目录\",{\"1\":{\"673\":1}}],[\"或者派生类\",{\"1\":{\"593\":1}}],[\"或者发脾气\",{\"1\":{\"532\":1}}],[\"或者循环获取xml文件配置\",{\"1\":{\"483\":1}}],[\"或者注解来描述类与类之间的关系\",{\"1\":{\"443\":1}}],[\"或者当我们在configureservices中指定创建某一实例并运行方法\",{\"1\":{\"345\":1}}],[\"或者导出数据\",{\"1\":{\"236\":1}}],[\"或者要重启维护了\",{\"1\":{\"209\":1}}],[\"或者该\",{\"1\":{\"209\":1}}],[\"或者消息被写入磁盘后\",{\"1\":{\"208\":1}}],[\"或者说\",{\"1\":{\"208\":1}}],[\"或者就一个\",{\"1\":{\"208\":1}}],[\"或者镀金的份上\",{\"1\":{\"188\":1}}],[\"或者啰嗦半天说不出重点\",{\"1\":{\"185\":1}}],[\"或者其他工具可以绕过\",{\"1\":{\"154\":1}}],[\"或者更直接的做法\",{\"1\":{\"134\":1}}],[\"或者类型转换的源对象为null\",{\"1\":{\"130\":1}}],[\"或者如果你使用的是docker\",{\"1\":{\"125\":1}}],[\"或者\",{\"1\":{\"125\":1,\"204\":1,\"404\":2,\"512\":1,\"655\":1,\"669\":1,\"748\":1,\"820\":1,\"835\":1,\"869\":1,\"944\":2,\"1008\":1,\"1060\":1,\"1081\":1}}],[\"或从现有对象中获取类型\",{\"1\":{\"90\":1}}],[\"或从现有对象获取类型并调用其方法或访问其字段和属性\",{\"1\":{\"86\":1}}],[\"或private\",{\"1\":{\"87\":2}}],[\"或\",{\"1\":{\"55\":1,\"88\":1,\"134\":2,\"159\":3,\"243\":1,\"352\":1,\"776\":1,\"870\":1,\"956\":2,\"1072\":2,\"1096\":1,\"1129\":1}}],[\"或许它能够让你受到招聘人员的青睐\",{\"1\":{\"10\":1}}],[\"部分\",{\"1\":{\"778\":2}}],[\"部分需要用到的如下\",{\"1\":{\"600\":1}}],[\"部分提供\",{\"1\":{\"446\":1}}],[\"部分header\",{\"1\":{\"155\":1}}],[\"部分请求方式\",{\"1\":{\"155\":1}}],[\"部分代码使用上述的例子\",{\"1\":{\"153\":1}}],[\"部分方法修饰符\",{\"1\":{\"51\":1}}],[\"部署\",{\"1\":{\"1068\":1}}],[\"部署服务\",{\"0\":{\"880\":1}}],[\"部署nginx\",{\"1\":{\"853\":1}}],[\"部署简答\",{\"1\":{\"661\":1}}],[\"部署简单\",{\"1\":{\"661\":1}}],[\"部署之supervisor基础\",{\"0\":{\"564\":1}}],[\"部署项目\",{\"0\":{\"540\":1}}],[\"部署无需服务器且自带cdn\",{\"1\":{\"336\":1}}],[\"部署软件\",{\"0\":{\"245\":1}}],[\"部署到容器中\",{\"1\":{\"210\":1}}],[\"部署复杂\",{\"1\":{\"210\":1}}],[\"部署层面\",{\"1\":{\"204\":1}}],[\"部署成功\",{\"1\":{\"8\":2}}],[\"部署gitlab的yaml脚本\",{\"1\":{\"3\":1}}],[\"表名\",{\"1\":{\"1046\":2}}],[\"表名没有返回值\",{\"1\":{\"51\":1}}],[\"表述型文字\",{\"1\":{\"952\":1}}],[\"表单类型的接口请求\",{\"0\":{\"731\":1}}],[\"表单类型的接口\",{\"1\":{\"726\":1}}],[\"表单域\",{\"1\":{\"468\":1}}],[\"表格来源\",{\"1\":{\"696\":1}}],[\"表结构如下\",{\"1\":{\"501\":1}}],[\"表情\",{\"0\":{\"341\":1}}],[\"表的外键是另一表的主键\",{\"1\":{\"206\":1}}],[\"表锁\",{\"1\":{\"206\":1}}],[\"表达式属性\",{\"0\":{\"61\":1}}],[\"表达式体方法\",{\"0\":{\"53\":1}}],[\"表示根分区\",{\"1\":{\"1110\":1}}],[\"表示其他用户只读\",{\"1\":{\"1081\":1}}],[\"表示同组用户只读\",{\"1\":{\"1081\":1}}],[\"表示文件所有者可读\",{\"1\":{\"1081\":1}}],[\"表示这是一个文件\",{\"1\":{\"1081\":1}}],[\"表示可执行\",{\"1\":{\"1081\":1}}],[\"表示可写入\",{\"1\":{\"1081\":1}}],[\"表示可读\",{\"1\":{\"1081\":1}}],[\"表示是设备文件里串行端口设备\",{\"1\":{\"1081\":1}}],[\"表示是设备文件里可供储存的接口设备\",{\"1\":{\"1081\":1}}],[\"表示是一个链接文件\",{\"1\":{\"1081\":1}}],[\"表示是一个文件\",{\"1\":{\"1081\":1}}],[\"表示是一个目录\",{\"1\":{\"1081\":1}}],[\"表示命令管道\",{\"1\":{\"1074\":1}}],[\"表示符号链接\",{\"1\":{\"1074\":1}}],[\"表示目前所在的目录\",{\"1\":{\"1110\":1}}],[\"表示目录\",{\"1\":{\"1074\":1}}],[\"表示目标\",{\"1\":{\"812\":1}}],[\"表示具有可执行权限的普通文件\",{\"1\":{\"1074\":1}}],[\"表示上一级目录\",{\"1\":{\"1072\":1}}],[\"表示\",{\"1\":{\"1071\":1,\"1074\":1,\"1081\":1}}],[\"表示字段必须同时拥有导入和手工或者自动和生成\",{\"1\":{\"1044\":1}}],[\"表示k8s将尽量避免将pod调度到具有该污点的node上\",{\"1\":{\"914\":1}}],[\"表示k8s将不会将pod调度到具有该污点的node上\",{\"1\":{\"914\":2}}],[\"表示注释\",{\"1\":{\"850\":1}}],[\"表示源头\",{\"1\":{\"812\":1}}],[\"表示匹配任意中间目录\",{\"1\":{\"800\":1}}],[\"表示不忽视\",{\"1\":{\"799\":1}}],[\"表示的是忽视目录\",{\"1\":{\"799\":1}}],[\"表示以daemon\",{\"1\":{\"564\":1}}],[\"表示对于引用类型将返回null\",{\"1\":{\"521\":1}}],[\"表示name的默认值是jjj\",{\"1\":{\"159\":1}}],[\"表示调用构造函数\",{\"1\":{\"119\":1}}],[\"表示忽略\",{\"1\":{\"119\":1}}],[\"表示一个方法\",{\"1\":{\"103\":1}}],[\"表示一个程序集\",{\"1\":{\"90\":1}}],[\"表示该特定只能标识在类上\",{\"1\":{\"42\":1}}],[\"表示当前路径\",{\"1\":{\"1072\":1}}],[\"表示当前版本\",{\"1\":{\"32\":2}}],[\"表示当前分支\",{\"1\":{\"26\":1}}],[\">$\",{\"1\":{\"1122\":2,\"1123\":2}}],[\">alpha\",{\"1\":{\"1122\":1,\"1123\":1}}],[\">appsetting\",{\"1\":{\"389\":1}}],[\">0\",{\"1\":{\"1047\":1}}],[\">操作<\",{\"1\":{\"1047\":2}}],[\">连接字符串<\",{\"1\":{\"1047\":3}}],[\">是否去读主库<\",{\"1\":{\"1047\":2}}],[\">是否选择读主库<\",{\"1\":{\"1047\":1}}],[\">参数<\",{\"1\":{\"1047\":4}}],[\">sql语句<\",{\"1\":{\"1047\":4}}],[\">主库连接字符串<\",{\"1\":{\"1047\":1}}],[\">自动窗口仅在visual\",{\"1\":{\"982\":1}}],[\">自动窗口中\",{\"1\":{\"982\":1}}],[\">窗口\",{\"1\":{\"982\":2}}],[\">下载claudiaide\",{\"1\":{\"968\":1}}],[\">扩展和更新\",{\"1\":{\"968\":1}}],[\">创建bucket\",{\"1\":{\"954\":1}}],[\">bucket列表\",{\"1\":{\"954\":1}}],[\">升级站点\",{\"1\":{\"892\":1}}],[\">高级\",{\"1\":{\"892\":1}}],[\">设置为始终复制\",{\"1\":{\"851\":2}}],[\">属性\",{\"1\":{\"851\":2}}],[\">插件配置<\",{\"1\":{\"573\":1}}],[\">ioc容器<\",{\"1\":{\"573\":1}}],[\">重试次数<\",{\"1\":{\"501\":1}}],[\">日志<\",{\"1\":{\"501\":1}}],[\">数据库上下文<\",{\"1\":{\"501\":1}}],[\">数量\",{\"1\":{\"331\":2}}],[\">限制时间<\",{\"1\":{\"427\":1}}],[\">限制的次数<\",{\"1\":{\"427\":1}}],[\">key<\",{\"1\":{\"427\":1}}],[\">usesetting的顺序\",{\"1\":{\"389\":1}}],[\">environment\",{\"1\":{\"389\":1}}],[\">commandline\",{\"1\":{\"389\":1}}],[\">=\",{\"1\":{\"343\":1,\"427\":1,\"1041\":4}}],[\">=yyyy\",{\"1\":{\"331\":2}}],[\">2020\",{\"1\":{\"331\":2}}],[\">2400\",{\"1\":{\"331\":1}}],[\">9000\",{\"1\":{\"331\":1}}],[\">\",{\"1\":{\"125\":2,\"138\":1,\"153\":3,\"343\":1,\"364\":3,\"371\":1,\"377\":1,\"378\":2,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"393\":1,\"400\":1,\"413\":1,\"416\":1,\"442\":2,\"443\":3,\"447\":39,\"452\":2,\"453\":15,\"475\":2,\"480\":1,\"486\":3,\"501\":5,\"546\":1,\"573\":1,\"577\":6,\"585\":7,\"600\":5,\"616\":1,\"635\":2,\"660\":1,\"661\":1,\"669\":1,\"670\":4,\"672\":3,\"673\":6,\"683\":2,\"693\":1,\"710\":4,\"733\":1,\"734\":2,\"778\":2,\"780\":3,\"782\":2,\"785\":1,\"787\":1,\"862\":1,\"956\":3,\"970\":5,\"1037\":9,\"1043\":1,\"1047\":2,\"1048\":1,\"1096\":2,\"1122\":5,\"1123\":6,\"1126\":11,\"1131\":2}}],[\"><\",{\"1\":{\"46\":1,\"125\":2,\"151\":2,\"402\":2,\"405\":2,\"472\":1,\"475\":1,\"478\":9,\"483\":2,\"501\":3,\"574\":2,\"577\":2,\"580\":2,\"583\":3,\"600\":1,\"660\":7,\"672\":2,\"675\":3,\"677\":2,\"678\":1,\"680\":3,\"681\":1,\"691\":4,\"1061\":2}}],[\">>来获取json对象\",{\"1\":{\"342\":1}}],[\">>\",{\"1\":{\"21\":1,\"22\":1,\"342\":1,\"343\":2}}],[\"qca61\",{\"1\":{\"1013\":1}}],[\"qvy3b\",{\"1\":{\"973\":2}}],[\"qiulin2018\",{\"1\":{\"954\":1}}],[\"qing\",{\"1\":{\"739\":1}}],[\"q\",{\"1\":{\"810\":2,\"988\":4}}],[\"qbittorrent\",{\"0\":{\"306\":1}}],[\"qualcomm\",{\"1\":{\"1013\":1}}],[\"quotas\",{\"1\":{\"914\":1}}],[\"quot\",{\"1\":{\"447\":2}}],[\"quotes\",{\"1\":{\"206\":2}}],[\"quiet\",{\"1\":{\"810\":1}}],[\"quit\",{\"1\":{\"243\":1,\"564\":4}}],[\"quickstart\",{\"1\":{\"591\":1,\"666\":1}}],[\"quickerlook\",{\"0\":{\"289\":1}}],[\"quick\",{\"1\":{\"66\":1}}],[\"question\",{\"1\":{\"691\":2}}],[\"questions\",{\"1\":{\"599\":1}}],[\"quedashi\",{\"1\":{\"302\":1}}],[\"queryasync<userinfo>\",{\"1\":{\"1053\":1,\"1055\":1,\"1058\":1,\"1060\":1}}],[\"queryasync<getimagereportdto>\",{\"1\":{\"1051\":1}}],[\"query<invoice>\",{\"1\":{\"1060\":1}}],[\"query<users>\",{\"1\":{\"1050\":1,\"1056\":1}}],[\"query<person>\",{\"1\":{\"1047\":1}}],[\"query<t>\",{\"1\":{\"1047\":4}}],[\"querypersonsql\",{\"1\":{\"1047\":2}}],[\"queryisearch\",{\"1\":{\"1044\":2}}],[\"queryisearch方法表示搜索里面空格表示或+表示且\",{\"1\":{\"1044\":1}}],[\"querying\",{\"1\":{\"514\":1,\"523\":1}}],[\"query中的无效\",{\"1\":{\"1043\":1,\"1044\":1}}],[\"queryfactory\",{\"1\":{\"1041\":4,\"1043\":1,\"1044\":1}}],[\"querystringorheaderapiversionreader\",{\"1\":{\"655\":1}}],[\"querystringapiversionreader\",{\"1\":{\"638\":1,\"655\":1}}],[\"querystring来实现版本控制\",{\"0\":{\"637\":1}}],[\"query格式\",{\"0\":{\"602\":1,\"625\":1}}],[\"queryurl\",{\"1\":{\"403\":6}}],[\"query来处理\",{\"1\":{\"342\":1}}],[\"query阶段\",{\"1\":{\"204\":1}}],[\"query\",{\"0\":{\"342\":1,\"343\":1},\"1\":{\"204\":1,\"342\":2,\"343\":4,\"403\":2,\"405\":1,\"418\":1,\"511\":2,\"512\":3,\"513\":2,\"693\":2,\"1041\":30}}],[\"queueuserworkitem\",{\"1\":{\"985\":1,\"1045\":3}}],[\"queue等等\",{\"1\":{\"204\":1}}],[\"queue\",{\"1\":{\"46\":8,\"152\":2,\"208\":34,\"564\":1}}],[\"qq\",{\"1\":{\"3\":4,\"8\":2,\"36\":4,\"125\":1,\"134\":1,\"214\":1,\"241\":1,\"242\":1,\"273\":1,\"529\":1,\"549\":1,\"577\":1,\"666\":2,\"681\":1,\"685\":1,\"712\":2,\"837\":1,\"968\":1,\"969\":1,\"1066\":1,\"1109\":1,\"1116\":1,\"1120\":1}}],[\"zi\",{\"1\":{\"1123\":1}}],[\"zipkin\",{\"1\":{\"210\":1}}],[\"z9c6uuriaozq\",{\"1\":{\"1066\":1}}],[\"ztvf\",{\"1\":{\"870\":1}}],[\"zxvf\",{\"1\":{\"1135\":1}}],[\"zxv\",{\"1\":{\"865\":1,\"867\":1}}],[\"zrng\",{\"1\":{\"859\":1,\"1069\":1,\"1070\":6}}],[\"zlib\",{\"1\":{\"779\":2}}],[\"zbz\",{\"1\":{\"746\":1}}],[\"zjiecode\",{\"1\":{\"702\":1}}],[\"znlive\",{\"1\":{\"693\":2}}],[\"znetcore3\",{\"1\":{\"660\":1}}],[\"zzz\",{\"1\":{\"453\":1,\"462\":1}}],[\"zyp\",{\"1\":{\"401\":2}}],[\"zmzl\",{\"1\":{\"273\":1}}],[\"zachlatta\",{\"1\":{\"243\":2}}],[\"zabbix\",{\"1\":{\"210\":1}}],[\"zookeeper等\",{\"1\":{\"210\":1}}],[\"zone=public\",{\"1\":{\"542\":1,\"911\":2,\"1108\":3,\"1109\":1}}],[\"zone\",{\"1\":{\"3\":1,\"36\":1}}],[\"zero\",{\"1\":{\"364\":1,\"577\":1,\"863\":1}}],[\"zeroturnaround\",{\"1\":{\"133\":1}}],[\"zen\",{\"1\":{\"204\":2}}],[\"zendiscovery\",{\"1\":{\"204\":1}}],[\"zuo\",{\"1\":{\"182\":1}}],[\"zhike\",{\"1\":{\"442\":4}}],[\"zhihu\",{\"1\":{\"238\":1,\"327\":1,\"666\":1,\"915\":1,\"968\":1,\"1036\":1}}],[\"zhangsan\",{\"1\":{\"343\":4}}],[\"zhuanlan\",{\"1\":{\"238\":1,\"327\":1,\"666\":1,\"915\":1,\"968\":1,\"1036\":1}}],[\"zh\",{\"1\":{\"46\":1,\"124\":2,\"125\":2,\"135\":2,\"136\":1,\"138\":1,\"144\":1,\"146\":1,\"148\":1,\"245\":1,\"284\":1,\"355\":1,\"382\":1,\"410\":1,\"467\":2,\"468\":1,\"470\":1,\"474\":2,\"477\":4,\"484\":1,\"501\":2,\"514\":1,\"523\":1,\"528\":1,\"549\":1,\"563\":1,\"577\":1,\"629\":1,\"666\":1,\"801\":1,\"802\":1,\"956\":1,\"957\":1,\"964\":2,\"973\":1,\"1012\":3,\"1031\":1,\"1036\":1,\"1037\":1,\"1108\":1,\"1130\":1,\"1132\":1}}],[\"加号可以插入文档\",{\"1\":{\"1031\":1}}],[\"加入新版本的新\",{\"1\":{\"936\":1}}],[\"加入开启启动项\",{\"0\":{\"907\":1}}],[\"加入了消息队列\",{\"1\":{\"208\":1}}],[\"加快传输等\",{\"1\":{\"863\":1}}],[\"加快访问速度\",{\"1\":{\"322\":1}}],[\"加深理解\",{\"0\":{\"782\":1}}],[\"加之一些其他操作\",{\"1\":{\"780\":1}}],[\"加速器url\",{\"1\":{\"862\":1}}],[\"加速器配置信息\",{\"1\":{\"809\":1}}],[\"加速下载\",{\"0\":{\"337\":1}}],[\"加速表和表之间的连接\",{\"1\":{\"206\":1}}],[\"加密形式发布\",{\"1\":{\"322\":1}}],[\"加分项\",{\"1\":{\"204\":1}}],[\"加薪幅度一般不超过\",{\"1\":{\"197\":1}}],[\"加一句说明\",{\"1\":{\"178\":1}}],[\"加锁\",{\"1\":{\"134\":1}}],[\"加载镜像\",{\"1\":{\"810\":2}}],[\"加载非托管的dll\",{\"1\":{\"577\":1}}],[\"加载插件\",{\"1\":{\"574\":1,\"576\":1}}],[\"加载程序集\",{\"0\":{\"94\":1,\"117\":1},\"1\":{\"118\":1,\"577\":1}}],[\"加载相对路径下指定名称程序集\",{\"1\":{\"92\":1}}],[\"加载在程序集清单中列出模块\",{\"1\":{\"87\":1}}],[\"加载配置文件\",{\"1\":{\"3\":1}}],[\"加上这个选项就可以强制删除\",{\"1\":{\"810\":1}}],[\"加上\",{\"1\":{\"46\":1,\"852\":1}}],[\"即对应dev环境的包\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"即对象是否从某个特定的类派生\",{\"1\":{\"131\":1}}],[\"即网络地址转换模式\",{\"1\":{\"1110\":1}}],[\"即时窗口\",{\"1\":{\"974\":1}}],[\"即表示只支持集群内部服务访问\",{\"1\":{\"923\":1}}],[\"即从n\",{\"1\":{\"914\":1}}],[\"即从0到n\",{\"1\":{\"914\":1}}],[\"即pod是有顺序的\",{\"1\":{\"914\":1}}],[\"即pod重新调度后其podname和hostname不变\",{\"1\":{\"914\":1}}],[\"即pod重新调度后还是能访问到相同的持久化数据\",{\"1\":{\"914\":1}}],[\"即没有cluster\",{\"1\":{\"914\":1}}],[\"即修改deployment下的pod实例个数\",{\"1\":{\"914\":1}}],[\"即连同子目录下的所有文件\",{\"1\":{\"908\":1}}],[\"即这个容器里面包含了web应用程序\",{\"1\":{\"843\":1}}],[\"即这里我们工作在\",{\"1\":{\"781\":1}}],[\"即在启动容器时使用\",{\"1\":{\"843\":1}}],[\"即容器没有网卡\",{\"1\":{\"839\":1}}],[\"即容器不会虚拟出自己的网卡和配置自己的ip等\",{\"1\":{\"839\":1}}],[\"即容器被删除\",{\"1\":{\"811\":1}}],[\"即根据镜像启动容器时\",{\"1\":{\"828\":1,\"829\":1}}],[\"即根据此镜像启动一个容器实例\",{\"1\":{\"806\":1}}],[\"即具名挂载\",{\"1\":{\"815\":1}}],[\"即拷到什么地方\",{\"1\":{\"812\":1}}],[\"即需要拷贝的目录或文件\",{\"1\":{\"812\":1}}],[\"即detached模式\",{\"1\":{\"811\":1}}],[\"即docker不在乎容器里的内容是什么\",{\"1\":{\"804\":1}}],[\"即前台运行\",{\"1\":{\"811\":1}}],[\"即指veth对的一端\",{\"1\":{\"926\":1}}],[\"即指定版本拉取\",{\"1\":{\"810\":1}}],[\"即指向\",{\"1\":{\"784\":1}}],[\"即启动我们的项目\",{\"1\":{\"806\":1}}],[\"即每个节点都是主节点\",{\"1\":{\"789\":1}}],[\"即当前\",{\"1\":{\"781\":1}}],[\"即获取打印数据的示例代码如下\",{\"1\":{\"693\":1}}],[\"即点一下按钮\",{\"1\":{\"689\":1}}],[\"即可结束输出\",{\"1\":{\"1111\":1}}],[\"即可创建的对象的个数\",{\"1\":{\"914\":1}}],[\"即可做到信息实时通知\",{\"1\":{\"699\":1}}],[\"即可在生产环境中的网页上提供下载功能\",{\"1\":{\"689\":1}}],[\"即可\",{\"1\":{\"484\":1,\"778\":1,\"806\":1,\"926\":1}}],[\"即值类型\",{\"1\":{\"400\":1}}],[\"即删除20份优先级低的缓存项\",{\"1\":{\"373\":1}}],[\"即三秒钟内被访问\",{\"1\":{\"372\":1}}],[\"即开即用\",{\"1\":{\"295\":1}}],[\"即使在引用对象仍处于活动状态时\",{\"1\":{\"981\":1}}],[\"即使它最终什么事情都没做\",{\"1\":{\"863\":1}}],[\"即使可以这样操作\",{\"1\":{\"786\":1}}],[\"即使我们删除了分支\",{\"1\":{\"785\":1}}],[\"即使rabbitmq挂了\",{\"1\":{\"208\":1}}],[\"即使同一个请求获取多次也会是不同的实例\",{\"1\":{\"203\":1}}],[\"即数据存储结构不同\",{\"1\":{\"205\":1}}],[\"即该字段的distinct或者unique值的数目\",{\"1\":{\"204\":1}}],[\"即只有当大多数分片可用时才允许写操作\",{\"1\":{\"204\":1}}],[\"即达到了你的心里预期\",{\"1\":{\"197\":1}}],[\"即私有成员和受保护的成员\",{\"1\":{\"119\":1}}],[\"即程序集在逻辑上是一个编译单元\",{\"1\":{\"90\":1}}],[\"即\",{\"1\":{\"46\":1,\"204\":1,\"207\":1,\"325\":1,\"782\":1,\"786\":2,\"799\":1,\"834\":1,\"914\":1}}],[\"即仓库\",{\"1\":{\"22\":1}}],[\"可写\",{\"1\":{\"1081\":1}}],[\"可随机存取装置\",{\"1\":{\"1081\":1}}],[\"可提升和增强软件开发的每个阶段\",{\"1\":{\"965\":1}}],[\"可读可写\",{\"1\":{\"914\":1}}],[\"可直接通过localhost通信\",{\"1\":{\"914\":1}}],[\"可独立运行的软件包\",{\"1\":{\"810\":1}}],[\"可实时扩展或拆除应用程序及相关服务\",{\"1\":{\"806\":1}}],[\"可让您将自定义通知推送到您的\",{\"1\":{\"708\":1}}],[\"可用\",{\"1\":{\"697\":1}}],[\"可用于\",{\"1\":{\"1102\":1}}],[\"可用于多种语言的工具\",{\"1\":{\"663\":1}}],[\"可用于替代\",{\"1\":{\"503\":1}}],[\"可在微信中直接收到消息\",{\"1\":{\"697\":1}}],[\"可为空性别\",{\"1\":{\"671\":1}}],[\"可重复运行的\",{\"1\":{\"595\":1}}],[\"可运行的实例\",{\"1\":{\"805\":1}}],[\"可运行的\",{\"1\":{\"594\":1}}],[\"可满足实时通信的需要\",{\"1\":{\"532\":1}}],[\"可使用\",{\"1\":{\"508\":1}}],[\"可供后续调查\",{\"1\":{\"446\":1}}],[\"可车票还在我同学那里\",{\"1\":{\"432\":1}}],[\"可是我不是用u盘装的咋拔出介质\",{\"1\":{\"312\":1}}],[\"可维护性\",{\"1\":{\"210\":1}}],[\"可测试性\",{\"1\":{\"210\":1}}],[\"可感知性\",{\"1\":{\"210\":1}}],[\"可能需要重写部分代码\",{\"1\":{\"1130\":1}}],[\"可能没有参数\",{\"1\":{\"1019\":1}}],[\"可能因为各种因素创建和销毁\",{\"1\":{\"939\":1}}],[\"可能有小伙伴说\",{\"1\":{\"806\":1}}],[\"可能被封号\",{\"1\":{\"700\":1}}],[\"可能大家都不知道这个东西\",{\"1\":{\"694\":1}}],[\"可能部分朋友在这一步会拉取官方镜像比较慢\",{\"1\":{\"554\":1}}],[\"可能会存在因为目录问题所以找不到配置文件的情况\",{\"1\":{\"583\":1}}],[\"可能会有一点效果\",{\"1\":{\"531\":1}}],[\"可能会发生以下场景\",{\"1\":{\"134\":2}}],[\"可能这种看着比较乱\",{\"1\":{\"501\":1}}],[\"可能很多同学会觉得这个很荒唐\",{\"1\":{\"432\":1}}],[\"可能导致软件无法使用等问题\",{\"1\":{\"247\":1}}],[\"可能存在消息重复消费的隐患\",{\"1\":{\"208\":1}}],[\"可持久化的消息\",{\"1\":{\"208\":1}}],[\"可配置的精度\",{\"1\":{\"204\":1}}],[\"可解析为\",{\"1\":{\"161\":2}}],[\"可枚举\",{\"1\":{\"156\":1}}],[\"可选设置\",{\"1\":{\"791\":1}}],[\"可选\",{\"1\":{\"711\":1}}],[\"可选值\",{\"1\":{\"447\":1}}],[\"可选的包含路由信息\",{\"1\":{\"156\":1}}],[\"可选的方案有\",{\"1\":{\"134\":1}}],[\"可选择\",{\"1\":{\"156\":1}}],[\"可扩展性的常见问题\",{\"1\":{\"585\":1}}],[\"可扩展\",{\"1\":{\"156\":1}}],[\"可执行\",{\"1\":{\"156\":1}}],[\"可执行文件\",{\"1\":{\"90\":1}}],[\"可见\",{\"1\":{\"134\":2}}],[\"可按照下面的方式使用特性\",{\"1\":{\"46\":1}}],[\"可快速轻松地识别元数据中的特性定义\",{\"1\":{\"46\":1}}],[\"可通过定义特性类创建自己的自定义特性\",{\"1\":{\"46\":1}}],[\"可以创建多个虚拟机\",{\"1\":{\"1110\":1}}],[\"可以安装图形界面\",{\"1\":{\"1110\":1}}],[\"可以正常访问\",{\"1\":{\"1107\":1}}],[\"可以表示为\",{\"1\":{\"1072\":1}}],[\"可以输入文字\",{\"1\":{\"1031\":1}}],[\"可以输入有意义的提交内容\",{\"1\":{\"754\":1}}],[\"可以点击此符号\",{\"1\":{\"976\":1}}],[\"可以打开剪贴板的历史记录\",{\"1\":{\"965\":1}}],[\"可以强制对使用该项目的所有人员实施一致的编码风格\",{\"1\":{\"955\":1}}],[\"可以完全抽离物理节点去理解\",{\"1\":{\"917\":1}}],[\"可以配合rbac\",{\"1\":{\"914\":1}}],[\"可以配置docker加速器使用\",{\"1\":{\"554\":1}}],[\"可以保证应用在升级期间\",{\"1\":{\"914\":1}}],[\"可以以只读的方式被多个pod挂载\",{\"1\":{\"914\":1}}],[\"可以挂载到pod中\",{\"1\":{\"914\":1}}],[\"可以被调度到存在污点的node上\",{\"1\":{\"914\":1}}],[\"可以被继承的应用类似apollo的公共\",{\"1\":{\"661\":1}}],[\"可以让你在你的电脑上以虚拟机的形式运行多个操作系统\",{\"1\":{\"1102\":1}}],[\"可以让node拒绝pod的调度执行\",{\"1\":{\"914\":1}}],[\"可以让我们调用非托管代码\",{\"1\":{\"44\":1}}],[\"可以借助freesshd这个免费工具来实现\",{\"1\":{\"880\":1}}],[\"可以跨多个node\",{\"1\":{\"879\":1}}],[\"可以跨平台实施备份操作并迁移数据\",{\"1\":{\"133\":1}}],[\"可以加载测试镜像来测试\",{\"1\":{\"876\":1}}],[\"可以加载依赖项的assemblyloadcontext\",{\"1\":{\"577\":1}}],[\"可以尝试如下办法\",{\"1\":{\"876\":1}}],[\"可以去查查对应的语法\",{\"1\":{\"850\":1}}],[\"可以去除方法和类上面的xml注释警告\",{\"1\":{\"483\":1}}],[\"可以有两种选择\",{\"1\":{\"843\":1}}],[\"可以有效地减少内存的消耗\",{\"1\":{\"203\":1}}],[\"可以有效地将元数据或声明性信息与代码\",{\"1\":{\"41\":1}}],[\"可以进入到容器测试\",{\"1\":{\"842\":1}}],[\"可以进入到容器看看ip分配情况\",{\"1\":{\"840\":1}}],[\"可以进行参考\",{\"1\":{\"985\":1}}],[\"可以进行快速查看\",{\"1\":{\"741\":1}}],[\"可以进行批量用例回归测试\",{\"1\":{\"736\":1}}],[\"可以进行注册\",{\"1\":{\"722\":1}}],[\"可以进行全局的异常日志收集等操作\",{\"1\":{\"404\":1}}],[\"可以追加命令\",{\"1\":{\"830\":1,\"838\":1}}],[\"可以from\",{\"1\":{\"820\":1}}],[\"可以限制容器内只读或可读写\",{\"1\":{\"816\":1}}],[\"可以增加\",{\"1\":{\"811\":1}}],[\"可以离线拷贝到其他主机上使用\",{\"1\":{\"810\":1}}],[\"可以显示所有镜像id\",{\"1\":{\"810\":1}}],[\"可以显著减少查询中分组和排序的时间\",{\"1\":{\"206\":1}}],[\"可以一下删除多个\",{\"1\":{\"810\":1}}],[\"可以基于基础镜像制作出各种具体的应用镜像\",{\"1\":{\"810\":1}}],[\"可以自己定义\",{\"1\":{\"811\":1}}],[\"可以自定义\",{\"1\":{\"806\":1}}],[\"可以自由使用\",{\"1\":{\"250\":1}}],[\"可以指定服务停止\",{\"1\":{\"852\":1}}],[\"可以指定选项\",{\"1\":{\"811\":1}}],[\"可以指定容器名称\",{\"1\":{\"811\":1}}],[\"可以指定条件进行搜索\",{\"1\":{\"810\":1}}],[\"可以指定参数\",{\"1\":{\"810\":1}}],[\"可以指定国内的一些仓储\",{\"1\":{\"805\":1}}],[\"可以指定回退到某个具体的历史版本\",{\"1\":{\"29\":1}}],[\"可以理解为一种轻量级\",{\"1\":{\"810\":1}}],[\"可以理解为结束时间\",{\"1\":{\"809\":1}}],[\"可以理解为开始时间\",{\"1\":{\"809\":1}}],[\"可以理解为容器\",{\"1\":{\"804\":1}}],[\"可以理解为证件用户\",{\"1\":{\"358\":1}}],[\"可以简单理解为\",{\"1\":{\"784\":1}}],[\"可以体会到\",{\"1\":{\"782\":1}}],[\"可以发现\",{\"1\":{\"782\":1}}],[\"可以查询自己主机配置\",{\"1\":{\"1110\":1}}],[\"可以查询log\",{\"1\":{\"738\":1}}],[\"可以查看断言的执行结果\",{\"1\":{\"735\":1}}],[\"可以查看已经连接的客户端\",{\"1\":{\"661\":1}}],[\"可以重新选择用例的组合\",{\"1\":{\"737\":1}}],[\"可以参考如下模板\",{\"1\":{\"931\":1}}],[\"可以参考下图\",{\"1\":{\"780\":1}}],[\"可以参考上图\",{\"1\":{\"733\":1}}],[\"可以参考这张很经典的图\",{\"1\":{\"247\":1}}],[\"可以帮我们建立一个初始印象\",{\"1\":{\"724\":1}}],[\"可以帮助开发者轻松创建\",{\"1\":{\"216\":1}}],[\"可以传入多个请求对象\",{\"1\":{\"667\":1}}],[\"可以回滚至任意版本\",{\"1\":{\"661\":1}}],[\"可以给这个大佬点个star\",{\"1\":{\"661\":1}}],[\"可以随时随地的快速运行测试\",{\"1\":{\"594\":1}}],[\"可以得到不同的测试类之间是并行执行的\",{\"1\":{\"588\":1}}],[\"可以将虚拟磁盘剩余空间都分到此分区\",{\"1\":{\"1110\":1}}],[\"可以将\",{\"1\":{\"1096\":1}}],[\"可以将一个网页上的图片批量保存本地\",{\"1\":{\"998\":1}}],[\"可以将两个网页都在一个界面展示\",{\"1\":{\"997\":1}}],[\"可以将条件附加到断点中\",{\"1\":{\"979\":1}}],[\"可以将敏感信息进行加密之后保存并挂载到pod中\",{\"1\":{\"914\":1}}],[\"可以将用户配置记录到本地代码仓库的配置文件中去\",{\"1\":{\"777\":1}}],[\"可以将多个服务名写到这里管理\",{\"1\":{\"564\":1}}],[\"可以将你的盘分析大小\",{\"1\":{\"264\":1}}],[\"可以控制程序启动和关闭时的顺序\",{\"1\":{\"564\":3}}],[\"可以运行在各种类unix的机器上\",{\"1\":{\"564\":1}}],[\"可以解决我们上述问题\",{\"1\":{\"543\":1}}],[\"可以直接在这里克隆项目以及操作项目\",{\"1\":{\"802\":1}}],[\"可以直接从官网下载安装程序\",{\"1\":{\"748\":1}}],[\"可以直接拷贝发布好的项目到服务器\",{\"1\":{\"539\":1}}],[\"可以直接搜索nuget包看源码\",{\"1\":{\"170\":1}}],[\"可以全双工通信\",{\"1\":{\"534\":1}}],[\"可以像操作对象一样从数据库获取数据\",{\"1\":{\"529\":1}}],[\"可以省略xx\",{\"1\":{\"521\":1}}],[\"可以防止sql注入\",{\"1\":{\"512\":1}}],[\"可以再次生成迁移文件然后生成数据库\",{\"1\":{\"501\":1}}],[\"可以做权限验证的工具\",{\"1\":{\"484\":1}}],[\"可以做缓存\",{\"1\":{\"402\":1}}],[\"可以标记不显示某一些接口\",{\"1\":{\"484\":1}}],[\"可以是物理机也可以是虚拟机\",{\"1\":{\"914\":1}}],[\"可以是绝对路径或者相对路径\",{\"1\":{\"564\":2}}],[\"可以是相对路径或绝对路径\",{\"1\":{\"447\":1}}],[\"可以是空值\",{\"1\":{\"206\":1}}],[\"可以调用任意一个对象的属性和方法\",{\"1\":{\"442\":1}}],[\"可以了解任意一个类的成员变量和方法\",{\"1\":{\"442\":1}}],[\"可以了解任意一个对象所属的类\",{\"1\":{\"442\":1}}],[\"可以构造任意一个类的对象\",{\"1\":{\"442\":1}}],[\"可以不填\",{\"1\":{\"952\":1}}],[\"可以不怕服务部署多个节点\",{\"1\":{\"424\":1}}],[\"可以不带\",{\"1\":{\"29\":1}}],[\"可以支持微博\",{\"1\":{\"951\":1}}],[\"可以支持依赖注入\",{\"1\":{\"409\":1,\"410\":1}}],[\"可以支持无参构造函数\",{\"1\":{\"409\":1,\"410\":1}}],[\"可以对httpclient进行一些自定请求头等操作\",{\"1\":{\"586\":1}}],[\"可以对结果进行格式化\",{\"1\":{\"405\":1}}],[\"可以对结构应用属性\",{\"1\":{\"400\":1}}],[\"可以对任何应用程序元素应用属性\",{\"1\":{\"400\":1}}],[\"可以对泛型参数应用属性\",{\"1\":{\"400\":1}}],[\"可以对返回值应用属性\",{\"1\":{\"400\":1}}],[\"可以对委托应用属性\",{\"1\":{\"400\":1}}],[\"可以对参数应用属性\",{\"1\":{\"400\":1}}],[\"可以对接口应用属性\",{\"1\":{\"400\":1}}],[\"可以对事件应用属性\",{\"1\":{\"400\":1}}],[\"可以对字段应用属性\",{\"1\":{\"400\":1}}],[\"可以对属性\",{\"1\":{\"400\":1}}],[\"可以对方法应用属性\",{\"1\":{\"400\":1}}],[\"可以对构造函数应用属性\",{\"1\":{\"400\":1}}],[\"可以对类应用属性\",{\"1\":{\"400\":1}}],[\"可以对模块应用属性\",{\"1\":{\"400\":1}}],[\"可以对程序集应用属性\",{\"1\":{\"400\":1}}],[\"可以对你请求的数据或者返回的结果进行处理操作\",{\"1\":{\"399\":1}}],[\"可以注册多个回调\",{\"1\":{\"373\":1}}],[\"可以注册一些用于提前处理路由结果的中间件\",{\"1\":{\"157\":1}}],[\"可以读缓存和单个缓存项的大小做限定\",{\"1\":{\"370\":1}}],[\"可以无限制的直接访问互联网\",{\"1\":{\"322\":1}}],[\"可以无限制的访问服务器\",{\"1\":{\"322\":1}}],[\"可以这么理解\",{\"1\":{\"322\":1}}],[\"可以这么说\",{\"1\":{\"189\":1}}],[\"可以免费使用的远程控制软件\",{\"1\":{\"309\":1}}],[\"可以找找哪些无用文件即大又没有什么用\",{\"1\":{\"264\":1}}],[\"可以找到\",{\"1\":{\"208\":1}}],[\"可以把\",{\"1\":{\"938\":1}}],[\"可以把容器看做是一个极简版的linux环境和在其中运行程序的组合\",{\"1\":{\"811\":1}}],[\"可以把android理解成是linux的一个发行版本吗\",{\"1\":{\"253\":1}}],[\"可以把所有的可能存在的\",{\"1\":{\"209\":1}}],[\"可以\",{\"1\":{\"210\":1}}],[\"可以灵活搭配技术\",{\"1\":{\"210\":1}}],[\"可以快速定位问题\",{\"1\":{\"210\":1}}],[\"可以看到一旦断点停止\",{\"1\":{\"979\":1}}],[\"可以看到容器内的应用进程是否正常运行\",{\"1\":{\"811\":1}}],[\"可以看到\",{\"1\":{\"799\":1}}],[\"可以看到配置文件中出现了\",{\"1\":{\"788\":1}}],[\"可以看到当提交之后\",{\"1\":{\"781\":1}}],[\"可以看看下面的这个提交流程图\",{\"1\":{\"782\":1}}],[\"可以看看我之前写的wpf程序打包教程\",{\"1\":{\"689\":1}}],[\"可以看出这个接口的url后半部分其实是上一个接口返回的url的值\",{\"1\":{\"745\":1}}],[\"可以看出\",{\"1\":{\"744\":1,\"745\":1}}],[\"可以看做是idea\",{\"1\":{\"210\":1}}],[\"可以看我的文章工厂模式得更详细的解释和和了解更多的好处\",{\"1\":{\"202\":1}}],[\"可以独立运行\",{\"1\":{\"210\":1}}],[\"可以实现虚拟机访问外部网络\",{\"1\":{\"1110\":1}}],[\"可以实现用户的私人定制\",{\"1\":{\"634\":1}}],[\"可以实现只要服务器端数据有更新\",{\"1\":{\"533\":1}}],[\"可以实现将传输的base64编码字符串转换为字节数组\",{\"1\":{\"471\":1}}],[\"可以实现请求地址入参等参数记录\",{\"1\":{\"422\":1}}],[\"可以实现url\",{\"1\":{\"419\":1}}],[\"可以实现多次读取body\",{\"1\":{\"402\":1}}],[\"可以实现\",{\"1\":{\"209\":1}}],[\"可以访问共享数据\",{\"1\":{\"914\":1}}],[\"可以访问\",{\"1\":{\"209\":1}}],[\"可以继续发送消息\",{\"1\":{\"208\":1}}],[\"可以确定是否需要添加索引\",{\"1\":{\"205\":1}}],[\"可以考虑定期force\",{\"1\":{\"204\":1}}],[\"可以考虑提高到100\",{\"1\":{\"204\":1}}],[\"可以采用scan\",{\"1\":{\"204\":2}}],[\"可以设置查询行数及开始行数\",{\"1\":{\"1041\":1}}],[\"可以设置指定间隔自动刷新网页\",{\"1\":{\"1003\":1}}],[\"可以设置request以及limit值\",{\"1\":{\"914\":1}}],[\"可以设置replication为sync\",{\"1\":{\"204\":1}}],[\"可以设置图片的质量来选择转换后图片的大小\",{\"1\":{\"684\":1}}],[\"可以设置多个\",{\"1\":{\"639\":1}}],[\"可以设置缓存的压缩比例\",{\"1\":{\"370\":1}}],[\"可以设置只读\",{\"1\":{\"56\":1}}],[\"可以没有iis\",{\"1\":{\"203\":1}}],[\"可以针对不同的路径添加不同的中间件\",{\"1\":{\"203\":1}}],[\"可以问问工作内容\",{\"1\":{\"191\":1}}],[\"可以适当美颜一下\",{\"1\":{\"177\":1}}],[\"可以选择语言版本\",{\"1\":{\"171\":1}}],[\"可以从候选终结点列表中查找到匹配度最高的那个终结点\",{\"1\":{\"167\":1}}],[\"可以匹配以\",{\"1\":{\"160\":1}}],[\"可以修改为类似\",{\"1\":{\"159\":1}}],[\"可以添加多个内联约束\",{\"1\":{\"159\":1}}],[\"可以先保存下来用于之后picgo配置\",{\"1\":{\"954\":1}}],[\"可以先尝试重启docker\",{\"1\":{\"893\":1}}],[\"可以先调整浏览器缩放再进行游戏\",{\"1\":{\"243\":1}}],[\"可以先看一下中间件\",{\"1\":{\"157\":1}}],[\"可以先提交一个修改\",{\"1\":{\"27\":1}}],[\"可以向该中间件的终结点列表中添加终结点\",{\"1\":{\"156\":1}}],[\"可以根据不同的\",{\"1\":{\"931\":1}}],[\"可以根据这两个参数来对所测接口的性能做一个简单的判断\",{\"1\":{\"735\":1}}],[\"可以根据个人或者公司需求采用\",{\"1\":{\"661\":1}}],[\"可以根据实际情况来修改\",{\"1\":{\"482\":1}}],[\"可以根据用户id或者请求地址标识当前用户\",{\"1\":{\"424\":1}}],[\"可以根据开源协议进行搜索\",{\"1\":{\"253\":1}}],[\"可以根据自身业务需要来调整\",{\"1\":{\"155\":1}}],[\"可以根据日志回滚到上一秒的操作\",{\"1\":{\"133\":1}}],[\"可以引入\",{\"1\":{\"134\":1}}],[\"可以生成一条\",{\"1\":{\"134\":1}}],[\"可以很好地满足我们的业务需求\",{\"1\":{\"134\":1}}],[\"可以利用反射对它们进行访问\",{\"1\":{\"86\":1}}],[\"可以通过该项目一键生成常用的文档格式\",{\"1\":{\"1009\":1}}],[\"可以通过这个入口地址访问其背后的一组由\",{\"1\":{\"918\":1}}],[\"可以通过如下命令创建hpa\",{\"1\":{\"914\":1}}],[\"可以通过进程间通信和文件共享这种简单高效的方式完成服务\",{\"1\":{\"914\":1}}],[\"可以通过下面的命令查看管理员密码\",{\"1\":{\"910\":1}}],[\"可以通过命令去查看docker日志\",{\"1\":{\"902\":1}}],[\"可以通过操作系统网络配置\",{\"1\":{\"839\":1}}],[\"可以通过在\",{\"1\":{\"838\":1}}],[\"可以通过docker\",{\"1\":{\"815\":2,\"852\":2}}],[\"可以通过\",{\"1\":{\"780\":1,\"914\":1}}],[\"可以通过以下三步完成这俩个接口的关联实现\",{\"1\":{\"745\":1}}],[\"可以通过以下方法将委托关联到终结点\",{\"1\":{\"158\":1}}],[\"可以通过通知栏提醒收到消息\",{\"1\":{\"698\":1}}],[\"可以通过可视化界面创建或者通过命令行创建\",{\"1\":{\"501\":1}}],[\"可以通过勾对选项\",{\"1\":{\"479\":1}}],[\"可以通过actionfilter拦截每个执行方法进行一系列的操作\",{\"1\":{\"403\":1}}],[\"可以通过authonization可以实现复杂的权限角色认证\",{\"1\":{\"401\":2}}],[\"可以通过右键属性进行修改包的参数\",{\"1\":{\"212\":1,\"1118\":1}}],[\"可以通过版本号使用乐观并发控制\",{\"1\":{\"204\":1}}],[\"可以通过设置最少投票通过数量\",{\"1\":{\"204\":1}}],[\"可以通过int索引访问每一个char值\",{\"1\":{\"65\":1}}],[\"可以通过git\",{\"1\":{\"32\":1}}],[\"可以同时声明多个字段\",{\"1\":{\"58\":1}}],[\"可以返回void类型\",{\"1\":{\"51\":1}}],[\"可以用\",{\"1\":{\"799\":1}}],[\"可以用来保存单个属性\",{\"1\":{\"914\":1}}],[\"可以用来减低计算机代码之间的耦合度\",{\"1\":{\"436\":1}}],[\"可以用来控制属性的访问级别\",{\"1\":{\"59\":1}}],[\"可以用过\",{\"1\":{\"43\":1}}],[\"可以用123456789密码登录进去了\",{\"1\":{\"40\":1}}],[\"可以在picgo上传图片试试\",{\"1\":{\"954\":1}}],[\"可以在不影响客户端的情况下对后端的服务部署进行调整\",{\"1\":{\"931\":1}}],[\"可以在不影响其他仓库的前提下对历史版本进行操作\",{\"1\":{\"27\":1}}],[\"可以在\",{\"1\":{\"930\":1}}],[\"可以在容器内执行如下命令进行安装\",{\"1\":{\"840\":1}}],[\"可以在构建过程中设置环境变量\",{\"1\":{\"824\":1}}],[\"可以在一块空地开始\",{\"1\":{\"820\":1}}],[\"可以在集合\",{\"1\":{\"740\":1}}],[\"可以在这里找找\",{\"1\":{\"341\":1}}],[\"可以在你看文件的时候给你提供预览\",{\"1\":{\"289\":1}}],[\"可以在简历里多写写在校期间的获奖\",{\"1\":{\"183\":1}}],[\"可以在路由匹配过程中\",{\"1\":{\"162\":1}}],[\"可以在调用构造器后直接通过对象初始化器设置对象的可访问字段或属性\",{\"1\":{\"72\":1}}],[\"可以在运行时使用\",{\"1\":{\"41\":1}}],[\"可以使用第三方终端工具\",{\"1\":{\"1105\":1}}],[\"可以使用放大镜对桌面任务区域进行放大\",{\"1\":{\"1027\":1}}],[\"可以使用它安装\",{\"1\":{\"962\":1}}],[\"可以使用chown命令来改变文件所有者\",{\"1\":{\"908\":1}}],[\"可以使用cors\",{\"1\":{\"155\":1}}],[\"可以使用命令删除\",{\"1\":{\"862\":1}}],[\"可以使用命令查看\",{\"1\":{\"862\":1}}],[\"可以使用lable替代maintainer\",{\"1\":{\"821\":1}}],[\"可以使用上述图片中提及的\",{\"1\":{\"786\":1}}],[\"可以使用反向代理来提高访问龟速\",{\"1\":{\"322\":1}}],[\"可以使用反射动态地创建类型的实例\",{\"1\":{\"90\":1}}],[\"可以使用反射动态创建类型的实例\",{\"1\":{\"86\":1}}],[\"可以使用代理服务器在大量的\",{\"1\":{\"322\":1}}],[\"可以使用类似于\",{\"1\":{\"242\":1}}],[\"可以使用memorymappedfile\",{\"1\":{\"203\":1}}],[\"可以使用\",{\"1\":{\"32\":1,\"399\":1,\"522\":1,\"599\":1,\"914\":1,\"1096\":1}}],[\"可以使用网站的昵称\",{\"1\":{\"17\":1}}],[\"可以说\",{\"1\":{\"10\":1}}],[\"来插入新行\",{\"1\":{\"956\":1}}],[\"来完成不同服务的转发\",{\"1\":{\"931\":1}}],[\"来访问服务\",{\"1\":{\"931\":1}}],[\"来访问该服务\",{\"1\":{\"914\":1}}],[\"来看看实际上这一过程如何实现\",{\"1\":{\"927\":1}}],[\"来为service\",{\"1\":{\"914\":1}}],[\"来选取后端pod\",{\"1\":{\"914\":1}}],[\"来介绍如何制作更精简的\",{\"1\":{\"864\":1}}],[\"来说比较灵活\",{\"1\":{\"821\":1}}],[\"来说是可能发生的\",{\"1\":{\"134\":1}}],[\"来了解远程仓库的服务器到底是如何存储\",{\"1\":{\"789\":1}}],[\"来了来了\",{\"1\":{\"322\":1}}],[\"来观察\",{\"1\":{\"778\":1}}],[\"来实现映射\",{\"1\":{\"918\":1}}],[\"来实现\",{\"1\":{\"914\":1}}],[\"来实现测试数据驱动测试\",{\"1\":{\"599\":1}}],[\"来实现替换的功能\",{\"1\":{\"575\":1}}],[\"来断言自己对结果的预期\",{\"1\":{\"599\":1}}],[\"来测试自己的代码\",{\"1\":{\"599\":1}}],[\"来写测试方法可以使得测试代码更为简洁\",{\"1\":{\"599\":1}}],[\"来进行正确性检验的测试工作\",{\"1\":{\"593\":1}}],[\"来创建webapi接口sendmsg\",{\"1\":{\"575\":1}}],[\"来初始化一个配置文件\",{\"1\":{\"546\":1}}],[\"来建立自己的\",{\"1\":{\"328\":1}}],[\"来替代网络实体完成它所无法完成的工作\",{\"1\":{\"322\":1}}],[\"来自微信公众号\",{\"1\":{\"852\":1,\"987\":1}}],[\"来自己指定一批数据来进行测试\",{\"1\":{\"599\":1}}],[\"来自戎码一生\",{\"1\":{\"445\":1}}],[\"来自\",{\"1\":{\"247\":1,\"704\":1,\"1035\":1}}],[\"来争抢锁\",{\"1\":{\"209\":1}}],[\"来处理\",{\"1\":{\"208\":1}}],[\"来设置去重需要的固定内存使用量\",{\"1\":{\"204\":1}}],[\"来设置正则表达式约束\",{\"1\":{\"163\":1}}],[\"来设置终结点\",{\"1\":{\"157\":1}}],[\"来举两个例子\",{\"1\":{\"161\":1}}],[\"来绑定路由参数\",{\"1\":{\"159\":1}}],[\"来解决\",{\"1\":{\"134\":1}}],[\"来操作数据库和缓存\",{\"1\":{\"134\":1}}],[\"来提高读性能\",{\"1\":{\"134\":1}}],[\"来指定一个方法来返回用于测试的数据\",{\"1\":{\"599\":1}}],[\"来指定\",{\"1\":{\"43\":1}}],[\"来源\",{\"1\":{\"9\":1,\"536\":1,\"746\":1,\"945\":1,\"1079\":1,\"1123\":1}}],[\"分区内的文件系统为\",{\"1\":{\"1110\":1}}],[\"分配ip\",{\"1\":{\"1107\":1}}],[\"分配内存大小\",{\"1\":{\"1104\":1}}],[\"分数则是\",{\"1\":{\"1084\":1}}],[\"分页查询\",{\"1\":{\"1041\":1}}],[\"分库分表\",{\"1\":{\"1046\":1}}],[\"分库分表字段是必须的\",{\"1\":{\"1042\":1}}],[\"分库分表+水平拆分+数据库集群\",{\"1\":{\"133\":1}}],[\"分库的传入sttime\",{\"1\":{\"1041\":2}}],[\"分屏浏览工具\",{\"0\":{\"997\":1}}],[\"分类显示所有的字段\",{\"1\":{\"968\":1}}],[\"分享人是苏老师和赵老师\",{\"1\":{\"710\":1}}],[\"分为\",{\"1\":{\"957\":1}}],[\"分为工作区\",{\"1\":{\"780\":1}}],[\"分为客户端和服务端\",{\"1\":{\"709\":1}}],[\"分为旧版本\",{\"1\":{\"696\":1}}],[\"分为隐式内连接和显式内连接\",{\"1\":{\"516\":1}}],[\"分段上传图片\",{\"1\":{\"676\":1}}],[\"分段加锁\",{\"1\":{\"206\":1}}],[\"分析器能够检测单元测试和\",{\"1\":{\"585\":1}}],[\"分析器在mongodb中的作用是什么\",{\"1\":{\"205\":1}}],[\"分割线\",{\"1\":{\"300\":1}}],[\"分辨率\",{\"1\":{\"254\":1}}],[\"分\",{\"1\":{\"243\":4}}],[\"分组操作\",{\"1\":{\"524\":1}}],[\"分组动态\",{\"0\":{\"229\":1}}],[\"分组成员\",{\"0\":{\"228\":1}}],[\"分组\",{\"0\":{\"226\":1}}],[\"分片可能由单一服务器或者集群组成\",{\"1\":{\"205\":1}}],[\"分片\",{\"1\":{\"205\":1}}],[\"分片是基于区域\",{\"1\":{\"205\":1}}],[\"分片有多少\",{\"1\":{\"204\":1}}],[\"分片将会在一个不同的节点上重建\",{\"1\":{\"204\":1}}],[\"分钟\",{\"1\":{\"204\":1}}],[\"分钟以内\",{\"1\":{\"185\":1}}],[\"分别对不同的版本引用不同的其他nuget组件\",{\"1\":{\"1126\":1}}],[\"分别是矩形\",{\"1\":{\"1025\":1}}],[\"分别是livenessprobe和redinessprobe\",{\"1\":{\"914\":1}}],[\"分别是定义变量和获取变量\",{\"1\":{\"740\":1}}],[\"分别是状态行\",{\"1\":{\"735\":1,\"739\":1}}],[\"分别是\",{\"1\":{\"733\":1,\"735\":1,\"778\":1,\"914\":2}}],[\"分别是含有查询参数的接口\",{\"1\":{\"726\":1}}],[\"分别是使用asp\",{\"1\":{\"689\":1}}],[\"分别是请求行\",{\"1\":{\"323\":1,\"732\":1}}],[\"分别在form1和form2进行注入\",{\"1\":{\"660\":1}}],[\"分别得到system\",{\"1\":{\"203\":1}}],[\"分别包含了一个指向类型\",{\"1\":{\"203\":1}}],[\"分红啥的都算上\",{\"1\":{\"197\":1}}],[\"分红\",{\"1\":{\"196\":1}}],[\"分布锁\",{\"1\":{\"134\":1}}],[\"分布式安全性更高\",{\"1\":{\"798\":1}}],[\"分布式版本控制也有一个电脑充当与中央服务器\",{\"1\":{\"798\":1}}],[\"分布式版本控制\",{\"1\":{\"798\":1}}],[\"分布式事务是单个事件导致两个或多个不能以原子方式提交的单独数据源的突变的情况\",{\"1\":{\"210\":1}}],[\"分布式锁么\",{\"1\":{\"209\":1}}],[\"分布式文件系统中\",{\"1\":{\"133\":1}}],[\"分布式缓存\",{\"0\":{\"383\":1,\"384\":1},\"1\":{\"43\":2}}],[\"分支所指向的一致\",{\"1\":{\"788\":1}}],[\"分支推送到远程\",{\"1\":{\"788\":1}}],[\"分支的那个\",{\"1\":{\"786\":1}}],[\"分支就直接删除了\",{\"1\":{\"786\":1}}],[\"分支就是指向最新的一次提交\",{\"1\":{\"784\":1}}],[\"分支就是一个有名字的\",{\"1\":{\"784\":1}}],[\"分支吗\",{\"1\":{\"786\":1}}],[\"分支到底是如何实现和工作的\",{\"1\":{\"784\":1}}],[\"分支切换又是怎么一回事\",{\"1\":{\"784\":1}}],[\"分支上\",{\"1\":{\"781\":1}}],[\"分支上面最新的提交就是这个\",{\"1\":{\"781\":1}}],[\"分支操作的背后逻辑\",{\"0\":{\"785\":1}}],[\"分支操作\",{\"0\":{\"755\":1}}],[\"分支名称\",{\"1\":{\"757\":1}}],[\"分支名\",{\"1\":{\"751\":1}}],[\"分支相关命令\",{\"0\":{\"26\":1}}],[\"分支\",{\"0\":{\"24\":1},\"1\":{\"788\":2,\"798\":1}}],[\"要改变的群组名必须在\",{\"1\":{\"1082\":1}}],[\"要看安装说明\",{\"1\":{\"1012\":1}}],[\"要看下生成的迁移文件是否是自己预期的那样子\",{\"1\":{\"501\":1}}],[\"要观看的obj项将被禁用\",{\"1\":{\"981\":1}}],[\"要创建完整的本地布局\",{\"1\":{\"964\":1}}],[\"要求同意许可条款和隐私条款\",{\"1\":{\"957\":1}}],[\"要求装饰对象和被装饰对象实现同一个接口\",{\"1\":{\"202\":1}}],[\"要使用服务发现功能\",{\"1\":{\"943\":1}}],[\"要使用没有被url编码的格式\",{\"1\":{\"159\":1}}],[\"要开始服务发现的探索之前\",{\"1\":{\"935\":1}}],[\"要了解服务发现\",{\"1\":{\"934\":1}}],[\"要不直接就在安装之前将服务器防火墙关闭\",{\"1\":{\"862\":1}}],[\"要不就是开放指定的端口\",{\"1\":{\"862\":1}}],[\"要不js请求会因为跨域问题而报错\",{\"1\":{\"600\":1}}],[\"要的就是这个思路\",{\"1\":{\"843\":1}}],[\"要申明环境变量\",{\"1\":{\"740\":1}}],[\"要用\",{\"1\":{\"728\":1}}],[\"要实现一个分支\",{\"1\":{\"784\":1}}],[\"要实现接受用户的消息\",{\"1\":{\"711\":1}}],[\"要实现fastreport浏览器静默打印功能\",{\"1\":{\"690\":1}}],[\"要对接微信公众号\",{\"1\":{\"710\":1}}],[\"要调用的grpc服务\",{\"1\":{\"670\":1}}],[\"要根据实际情况去判定其具体含义\",{\"1\":{\"593\":1}}],[\"要部署的程序test\",{\"1\":{\"564\":1}}],[\"要适当\",{\"1\":{\"209\":1}}],[\"要是\",{\"1\":{\"208\":1}}],[\"要是你一个消息重复两次\",{\"1\":{\"208\":1}}],[\"要多考虑很多方面的问题\",{\"1\":{\"208\":1}}],[\"要多花心思\",{\"1\":{\"183\":1}}],[\"要么使用非常快速的存储系统以支持全持久化\",{\"1\":{\"208\":1}}],[\"要在url中保留双斜线\",{\"1\":{\"207\":1}}],[\"要设置合理的大小\",{\"1\":{\"204\":1}}],[\"要获得一个内存映射文件对象\",{\"1\":{\"203\":1}}],[\"要问清楚月薪是怎么组成的\",{\"1\":{\"199\":1}}],[\"要少了\",{\"1\":{\"197\":1}}],[\"要高了\",{\"1\":{\"197\":1}}],[\"要先了解一下行业中和你职位相似的薪资水平\",{\"1\":{\"196\":1}}],[\"要有点用户思维\",{\"1\":{\"183\":1}}],[\"要控制项目数量\",{\"1\":{\"181\":1}}],[\"要想查看\",{\"1\":{\"780\":1}}],[\"要想做到强一致\",{\"1\":{\"134\":1}}],[\"要想保证缓存和数据库\",{\"1\":{\"134\":1}}],[\"要尽可能地保证\",{\"1\":{\"134\":1}}],[\"要比读数据库\",{\"1\":{\"134\":1}}],[\"要更新\",{\"1\":{\"134\":2}}],[\"要加上\",{\"1\":{\"43\":1}}],[\"要重返未来\",{\"1\":{\"33\":1}}],[\"从上图可知\",{\"1\":{\"1081\":1}}],[\"从上面可以看得出来\",{\"1\":{\"597\":1}}],[\"从反编译的il代码中调试源代码\",{\"0\":{\"986\":1},\"1\":{\"986\":1}}],[\"从visual\",{\"1\":{\"983\":1}}],[\"从被调试的已停止程序恢复执行\",{\"1\":{\"974\":1}}],[\"从代码中删除不必要的字符\",{\"1\":{\"968\":1}}],[\"从官网下载vs2019安装包\",{\"1\":{\"957\":1}}],[\"从菜单栏中\",{\"1\":{\"956\":1}}],[\"从github上下载picgo工具\",{\"1\":{\"951\":1}}],[\"从一个\",{\"1\":{\"932\":1}}],[\"从一步步试验\",{\"1\":{\"864\":1}}],[\"从集群外访问集群有多种方式\",{\"1\":{\"929\":1}}],[\"从这里看起来并没有太大作用\",{\"1\":{\"868\":1}}],[\"从这点看会发现这两个都一样\",{\"1\":{\"203\":1}}],[\"从隔离性的角度来看\",{\"1\":{\"811\":1}}],[\"从指定的时间戳后显示所有事件\",{\"1\":{\"809\":1}}],[\"从docker存储库中拉取进行安装\",{\"1\":{\"862\":1}}],[\"从docker\",{\"1\":{\"809\":1}}],[\"从db中获取\",{\"1\":{\"43\":2}}],[\"从远程仓储中拉取镜像\",{\"1\":{\"810\":1}}],[\"从远程仓储中搜索镜像\",{\"1\":{\"810\":1}}],[\"从远程仓储中\",{\"1\":{\"805\":1}}],[\"从远程版本库获得最新版本\",{\"1\":{\"798\":1}}],[\"从远程获取最新版本到本地\",{\"1\":{\"798\":1}}],[\"从远程拉取最新版本到本地自动合并\",{\"1\":{\"798\":1}}],[\"从远程存储库往本地同步\",{\"1\":{\"798\":1}}],[\"从a1分支合并\",{\"1\":{\"798\":1}}],[\"从命名上就已经区分了\",{\"1\":{\"689\":1}}],[\"从客户端发送请求消息开始\",{\"1\":{\"674\":1}}],[\"从本地布局安装\",{\"1\":{\"964\":1}}],[\"从本地配置里读取agileconfig的相关信息\",{\"1\":{\"661\":1}}],[\"从本地缓存中获取\",{\"1\":{\"43\":2}}],[\"从web服务检索数据\",{\"1\":{\"601\":1}}],[\"从而达成了容器数据的共享和实时同步\",{\"1\":{\"816\":1}}],[\"从而达到备份数据的作用\",{\"1\":{\"812\":1}}],[\"从而实现容器之间的数据共享\",{\"1\":{\"816\":1}}],[\"从而可以快速交付软件\",{\"1\":{\"804\":1}}],[\"从而导致应用无法访问\",{\"1\":{\"543\":1}}],[\"从而保证了数据的正确性\",{\"1\":{\"208\":1}}],[\"从应用程序代码调用\",{\"1\":{\"494\":1}}],[\"从请求正文获取值\",{\"1\":{\"468\":1}}],[\"从发布表单字段中获取值\",{\"1\":{\"468\":1}}],[\"从路由数据获取值\",{\"1\":{\"468\":1}}],[\"从查询字符串获取值\",{\"1\":{\"468\":1}}],[\"从结果来看\",{\"1\":{\"442\":1}}],[\"从结果我们可以得知\",{\"1\":{\"165\":1}}],[\"从字面意思也很好理解\",{\"1\":{\"409\":1}}],[\"从session\",{\"1\":{\"368\":1}}],[\"从国外的youtube\",{\"1\":{\"307\":1}}],[\"从1开始\",{\"1\":{\"208\":1}}],[\"从生产者弄丢数据这个角度来看\",{\"1\":{\"208\":1}}],[\"从默认的512mb到更大一些的值\",{\"1\":{\"204\":1}}],[\"从\",{\"1\":{\"204\":1,\"253\":1,\"468\":1,\"479\":1,\"804\":1}}],[\"从就从了吧\",{\"1\":{\"188\":1}}],[\"从来就没停过\",{\"1\":{\"177\":1}}],[\"从共享字典中取出来\",{\"1\":{\"167\":1}}],[\"从刚才停下的地方继续读取url\",{\"1\":{\"161\":2}}],[\"从右到左读取模板\",{\"1\":{\"161\":2}}],[\"从库连接字符串\",{\"1\":{\"1047\":1}}],[\"从库的数据来自主库的同步\",{\"1\":{\"1047\":1}}],[\"从库\",{\"1\":{\"134\":3}}],[\"从数据库中读取到旧值\",{\"1\":{\"134\":2}}],[\"从基类引用创建一个子类引用\",{\"1\":{\"128\":1}}],[\"从分布式缓存中获取\",{\"1\":{\"43\":2}}],[\"从下图中我们可以观察出来\",{\"1\":{\"13\":1}}],[\"找不到\",{\"1\":{\"1037\":1}}],[\"找不到然后从分布式缓存中查找\",{\"1\":{\"43\":1}}],[\"找一个变量挂载client实例\",{\"1\":{\"661\":1}}],[\"找路人借充电宝\",{\"1\":{\"433\":1}}],[\"找规律分表\",{\"1\":{\"206\":1}}],[\"找到之后\",{\"1\":{\"786\":1}}],[\"找到对应文件名称以及其内部引用的\",{\"1\":{\"780\":1}}],[\"找到一个合适的地方\",{\"1\":{\"752\":1}}],[\"找到我们想要的群发消息接口\",{\"1\":{\"694\":1}}],[\"找到该中间代码并且进行编译\",{\"1\":{\"203\":1}}],[\"找到的下一个文本为a\",{\"1\":{\"161\":2}}],[\"找到的第一个文本为c\",{\"1\":{\"161\":2}}],[\"找到root的用户\",{\"1\":{\"40\":1}}],[\"而$1仍然会获得更新\",{\"1\":{\"981\":1}}],[\"而obj1\",{\"1\":{\"978\":1}}],[\"而无需考虑使用的编辑器或\",{\"1\":{\"955\":1}}],[\"而无需考虑符号或者源代码\",{\"1\":{\"173\":1}}],[\"而无法从集群外部通过该端口访问服务\",{\"1\":{\"921\":1}}],[\"而pvc请求存储资源并将其挂载到pod中\",{\"1\":{\"914\":1}}],[\"而pv的数据则不会丢\",{\"1\":{\"914\":1}}],[\"而nfs中的数据是可以永久保存的\",{\"1\":{\"914\":1}}],[\"而node\",{\"1\":{\"914\":1}}],[\"而docker\",{\"1\":{\"843\":1}}],[\"而dockerfile就是专门做这个事的\",{\"1\":{\"817\":1}}],[\"而那个\",{\"1\":{\"786\":1}}],[\"而当我们通过\",{\"1\":{\"782\":1}}],[\"而当我们执行\",{\"1\":{\"778\":2,\"781\":1}}],[\"而对于理解的话\",{\"1\":{\"782\":1}}],[\"而对于值类型则返回0\",{\"1\":{\"521\":1}}],[\"而暂存区其实保存的是当前文件的一个状态\",{\"1\":{\"781\":1}}],[\"而这其中最重要的概念就是镜像层\",{\"1\":{\"863\":1}}],[\"而这些垃圾对象怎么清除和回收呢\",{\"1\":{\"785\":1}}],[\"而这个目录就是redis数据存放的目录\",{\"1\":{\"817\":1}}],[\"而这个\",{\"1\":{\"781\":1,\"784\":1}}],[\"而这个时候\",{\"1\":{\"780\":1}}],[\"而这一部分是由有键值对组成\",{\"1\":{\"728\":1}}],[\"而文件名称相关的信息就包含在生成的\",{\"1\":{\"780\":1}}],[\"而更加深层次的理解\",{\"1\":{\"780\":1}}],[\"而其用于表示远程仓库的当前版本\",{\"1\":{\"788\":1}}],[\"而其命令就是\",{\"1\":{\"781\":1}}],[\"而其名称的由来是因为\",{\"1\":{\"778\":1}}],[\"而其他类型都是引用类型\",{\"1\":{\"203\":1}}],[\"而工作区里面的修改不归\",{\"1\":{\"778\":1}}],[\"而图像预览接口url为\",{\"1\":{\"745\":1}}],[\"而它的请求方法是get\",{\"1\":{\"729\":1}}],[\"而正是各类系统和客户都有着各种不相同的打印需要\",{\"1\":{\"690\":1}}],[\"而web\",{\"1\":{\"689\":1}}],[\"而使用了system\",{\"1\":{\"600\":1}}],[\"而content\",{\"1\":{\"578\":1}}],[\"而要知道工厂是如何产生对象的\",{\"1\":{\"443\":1}}],[\"而只需要在shapefactory中通过\",{\"1\":{\"442\":1}}],[\"而以上这些不仅你的增加时间和金钱成本\",{\"1\":{\"433\":1}}],[\"而控制反转\",{\"1\":{\"344\":1}}],[\"而http层被称为\",{\"1\":{\"324\":1}}],[\"而代理\",{\"1\":{\"322\":1}}],[\"而代理层次结构把上下级都换成了代理服务器\",{\"1\":{\"322\":1}}],[\"而代理服务器的功能却有很多\",{\"1\":{\"322\":1}}],[\"而代理模式则是增加一个额外的中间层\",{\"1\":{\"202\":1}}],[\"而为大多数客户端服务的代理被称为公共代理\",{\"1\":{\"322\":1}}],[\"而像是律师事务所的大部分律师是则面向公众服务的\",{\"1\":{\"322\":1}}],[\"而非链接路径\",{\"1\":{\"1074\":1}}],[\"而非内核部分\",{\"1\":{\"247\":1}}],[\"而非单独的数值\",{\"1\":{\"43\":1}}],[\"而\",{\"1\":{\"247\":2,\"780\":1,\"781\":1,\"784\":2,\"789\":1,\"863\":1,\"937\":1,\"941\":1}}],[\"而最终结果将保持不变\",{\"1\":{\"210\":1}}],[\"而直接返回一个提前准备好的fallback\",{\"1\":{\"210\":1}}],[\"而已\",{\"1\":{\"208\":1,\"789\":1}}],[\"而一旦上游服务器返回了\",{\"1\":{\"207\":1}}],[\"而是使用一个静态\",{\"1\":{\"1110\":1}}],[\"而是使用宿主机的ip和端口\",{\"1\":{\"839\":1}}],[\"而是创建当前问阿金的软链接\",{\"1\":{\"1079\":1}}],[\"而是等待用户手动删除这些旧pod后自动创建新pod\",{\"1\":{\"914\":1}}],[\"而是采用更高一层的抽象或定义来管理pod\",{\"1\":{\"914\":1}}],[\"而是通过compose文件一起构建\",{\"1\":{\"851\":1}}],[\"而是由docker自动指定\",{\"1\":{\"815\":1}}],[\"而是给该属性设置默认值\",{\"1\":{\"468\":1}}],[\"而是一种设计思想\",{\"1\":{\"444\":1}}],[\"而是向工厂\",{\"1\":{\"438\":1}}],[\"而是直接通过microsoft\",{\"1\":{\"410\":1}}],[\"而是根据条件在当前方法中执行调用的\",{\"1\":{\"403\":1}}],[\"而是让\",{\"1\":{\"325\":1}}],[\"而是应该把这个用户的所有信息存储到一张散列表里面\",{\"1\":{\"209\":1}}],[\"而是引入了哈希槽的概念\",{\"1\":{\"209\":1}}],[\"而是\",{\"1\":{\"209\":1}}],[\"而是大量的数据会直接搞丢\",{\"1\":{\"208\":1}}],[\"而是在service创建好后手动为其添加endpoint\",{\"1\":{\"914\":1}}],[\"而是在\",{\"1\":{\"204\":1}}],[\"而是需要\",{\"1\":{\"134\":1}}],[\"而在windows\",{\"1\":{\"880\":1}}],[\"而在互联网中\",{\"1\":{\"322\":1}}],[\"而在这段时间内发送给该\",{\"1\":{\"208\":1}}],[\"而在哈希表中\",{\"1\":{\"203\":1}}],[\"而在数组中\",{\"1\":{\"203\":1}}],[\"而在实际需要用到这些信息时\",{\"1\":{\"203\":1}}],[\"而数组列表仅存储值\",{\"1\":{\"203\":1}}],[\"而通过添加带有serializationinfo\",{\"1\":{\"203\":1}}],[\"而比较两个引用类型时\",{\"1\":{\"203\":1}}],[\"而引用类型的对象分配在堆上\",{\"1\":{\"203\":1}}],[\"而引用类型的赋值则是赋值引用\",{\"1\":{\"203\":1}}],[\"而addtransient与addscoped的区别更不容易区别一点\",{\"1\":{\"203\":1}}],[\"而run不会\",{\"1\":{\"203\":1}}],[\"而装饰模式的目的是在不修改类的情况下给类增加新的功能\",{\"1\":{\"202\":1}}],[\"而应使用空格\",{\"1\":{\"159\":1}}],[\"而且可以t4生成实体类免去手写实体类的烦恼\",{\"1\":{\"1038\":1}}],[\"而且可以切换到指定的\",{\"1\":{\"786\":1}}],[\"而且配置nodeport=30001\",{\"1\":{\"922\":1}}],[\"而且这个过程中你会丢失镜像原有的一些信息\",{\"1\":{\"868\":1}}],[\"而且这些方案也比较复杂\",{\"1\":{\"134\":1}}],[\"而且够用\",{\"1\":{\"866\":1}}],[\"而且还能从远程宿主机中读取资源并拷贝到镜像中\",{\"1\":{\"825\":1}}],[\"而且还需要借助该打包程序往注册表写入自定义协议信息\",{\"1\":{\"689\":1}}],[\"而且体积很小\",{\"1\":{\"820\":1}}],[\"而且添加文件夹并不会增加\",{\"1\":{\"782\":1}}],[\"而且生产环境对这种情况是零容忍的\",{\"1\":{\"543\":1}}],[\"而且代理服务器内部会有一块大的缓冲区\",{\"1\":{\"322\":1}}],[\"而且各种3d\",{\"1\":{\"300\":1}}],[\"而且使用简单\",{\"1\":{\"267\":1}}],[\"而且不需要开源\",{\"1\":{\"247\":1}}],[\"而且解决了bson对象有限制的问题\",{\"1\":{\"205\":1}}],[\"而且是动态的\",{\"1\":{\"202\":1}}],[\"而且我也希望能完整经历海外电商从零到一的过程\",{\"1\":{\"185\":1}}],[\"而且你也不白写\",{\"1\":{\"179\":1}}],[\"而且免费使用\",{\"1\":{\"170\":1}}],[\"而且必须先调用userouting\",{\"1\":{\"156\":1}}],[\"而且必须关闭数据库\",{\"1\":{\"133\":1}}],[\"而且\",{\"1\":{\"134\":2}}],[\"而且很多情况下\",{\"1\":{\"134\":1}}],[\"而不进行排序\",{\"1\":{\"1074\":1}}],[\"而不列出目录下文件\",{\"1\":{\"1074\":1}}],[\"而不需要把这些敏感数据暴露到镜像或者pod\",{\"1\":{\"914\":1}}],[\"而不需要通过代码来逐一分析使用者的需求\",{\"1\":{\"203\":1}}],[\"而不要报太大期望\",{\"1\":{\"868\":1}}],[\"而不用从头重建索引\",{\"1\":{\"204\":1}}],[\"而不搜索被简单继承的成员\",{\"1\":{\"119\":1}}],[\"而不是\",{\"1\":{\"1110\":2}}],[\"而不是使用默认权限\",{\"1\":{\"1075\":1}}],[\"而不是文件名\",{\"1\":{\"1074\":2}}],[\"而不是默认的docker0子网范围\",{\"1\":{\"843\":1}}],[\"而不是像该文章一样\",{\"1\":{\"588\":1}}],[\"而不是像传统方式那样子必须制定一个物理文件\",{\"1\":{\"583\":1}}],[\"而不是null\",{\"1\":{\"503\":2}}],[\"而不是应用程序范围的故障\",{\"1\":{\"446\":1}}],[\"而不是from\",{\"1\":{\"204\":1}}],[\"而不是用来进行输入验证的\",{\"1\":{\"162\":1}}],[\"而不是一个物理单元\",{\"1\":{\"90\":1}}],[\"而不是底层对象的实际值\",{\"1\":{\"77\":1}}],[\"而每个项目就是一个程序集\",{\"1\":{\"90\":1}}],[\"而动态程序集是存在于内存中的\",{\"1\":{\"90\":1}}],[\"而可能会生成多个物理文件\",{\"1\":{\"90\":1}}],[\"而类型包含成员\",{\"1\":{\"90\":1}}],[\"而github则是在网络上提供git仓库的一项服务\",{\"1\":{\"14\":1}}],[\"定位到当前打开的文件所在目录\",{\"1\":{\"965\":1}}],[\"定期轮询确实会导致客户端\",{\"1\":{\"531\":1}}],[\"定期轮询\",{\"0\":{\"531\":1}}],[\"定制特定种类的日志收集级别\",{\"1\":{\"446\":1}}],[\"定制特性attribute\",{\"1\":{\"41\":1}}],[\"定义好属性\",{\"1\":{\"1110\":1}}],[\"定义好变量\",{\"1\":{\"743\":1}}],[\"定义通过\",{\"1\":{\"931\":1}}],[\"定义deployment来创建pod和replicaset\",{\"1\":{\"914\":1}}],[\"定义多个容器集合\",{\"1\":{\"852\":1}}],[\"定义就行啦\",{\"1\":{\"831\":1}}],[\"定义环境变量\",{\"1\":{\"742\":1}}],[\"定义全局变量\",{\"1\":{\"742\":1}}],[\"定义全局变量和环境变量\",{\"1\":{\"741\":1}}],[\"定义集合变量\",{\"0\":{\"742\":1},\"1\":{\"742\":1}}],[\"定义变量除了以上方式\",{\"1\":{\"742\":1}}],[\"定义变量\",{\"0\":{\"741\":1},\"1\":{\"740\":1,\"820\":1,\"837\":1}}],[\"定义jpeg转换设备\",{\"1\":{\"684\":1}}],[\"定义一个守护进程\",{\"1\":{\"564\":2}}],[\"定义一个key存储缓存\",{\"1\":{\"402\":1}}],[\"定义控制器提供哪个版本的api\",{\"1\":{\"488\":1,\"645\":1,\"651\":1}}],[\"定义token框架绑定器\",{\"1\":{\"472\":1}}],[\"定义\",{\"1\":{\"206\":1,\"941\":1}}],[\"定义了服务的访问入口地址\",{\"1\":{\"918\":1}}],[\"定义了如果没有带版本号的访问\",{\"1\":{\"494\":1,\"498\":1}}],[\"定义了版本号的格式化方式\",{\"1\":{\"494\":1,\"498\":1}}],[\"定义了eventinfo\",{\"1\":{\"88\":1}}],[\"定义了自定义属性的修饰是否可由被修饰类的派生类继承\",{\"1\":{\"42\":1}}],[\"定义了是否可在同一个程序实体上同时使用多个属性进行修饰\",{\"1\":{\"42\":1}}],[\"定时任务\",{\"1\":{\"208\":1}}],[\"定时\",{\"1\":{\"134\":1}}],[\"定时把数据库的数据\",{\"1\":{\"134\":1}}],[\"它无法用于家庭版\",{\"1\":{\"1102\":1}}],[\"它保留链接\",{\"1\":{\"1079\":1}}],[\"它几乎与原始的ado\",{\"1\":{\"1048\":1}}],[\"它在编辑器的左侧边栏引入标记图标\",{\"1\":{\"985\":1}}],[\"它在监视窗口的上下文也不安的毫无意义并且被禁用\",{\"1\":{\"981\":1}}],[\"它首先断言了量子力学的观察者效应\",{\"1\":{\"984\":1}}],[\"它很好地显示了当引用obj在fct\",{\"1\":{\"981\":1}}],[\"它与通过绿色箭头符号运行到这里不同\",{\"1\":{\"977\":1}}],[\"它介绍了设计orm模型的新方法\",{\"1\":{\"968\":1}}],[\"它所实现的控制器会监控\",{\"1\":{\"944\":1}}],[\"它工作在连接层面\",{\"1\":{\"938\":1}}],[\"它起到了七层负载均衡器和\",{\"1\":{\"931\":1}}],[\"它起到了一种类似\",{\"1\":{\"436\":1}}],[\"它旨在为容器平台提供网络的标准化\",{\"1\":{\"928\":1}}],[\"它旨在帮助开发人员排查项目运行中出现错误时快速查看日志排查问题\",{\"1\":{\"448\":1}}],[\"它仅对进群内容器提供访问权限\",{\"1\":{\"921\":1}}],[\"它监听ingress和service的变化\",{\"1\":{\"914\":1}}],[\"它最终的镜像大小只有\",{\"1\":{\"863\":1}}],[\"它只是删除了指向某个特定\",{\"1\":{\"786\":1}}],[\"它有一个非常特殊的\",{\"1\":{\"784\":1}}],[\"它并不会盲目地复制整个目录\",{\"1\":{\"781\":1}}],[\"它存储的是文件的内容和文件类型并不存储文件名称\",{\"1\":{\"778\":1}}],[\"它允许我们在脚本中编写打印语句\",{\"1\":{\"738\":1}}],[\"它也属于一种表单\",{\"1\":{\"734\":1}}],[\"它具有回归性自动化的单元测试避免了代码出现回归\",{\"1\":{\"594\":1}}],[\"它将仅查找不含前缀的\",{\"1\":{\"470\":1}}],[\"它将应用程序构建为以业务域为模型的小型自治服务集合\",{\"1\":{\"210\":1}}],[\"它易于设置\",{\"1\":{\"457\":1}}],[\"它定义了ioc容器的基本功能规范\",{\"1\":{\"443\":1}}],[\"它定义了net\",{\"1\":{\"141\":1}}],[\"它用来管理我们所有的对象以及依赖关系\",{\"1\":{\"443\":1}}],[\"它用于搜索和替换响应中的内容\",{\"1\":{\"207\":1}}],[\"它拥有多个独立的齿轮\",{\"1\":{\"435\":1}}],[\"它样服务器方就能为请求的回应对上号了\",{\"1\":{\"326\":1}}],[\"它采用的是多路复用的形式去解决这个问题\",{\"1\":{\"326\":1}}],[\"它分socks\",{\"1\":{\"322\":1}}],[\"它支持多种协议\",{\"1\":{\"322\":1}}],[\"它行使的功能就是帮助两个异构的网络进行通信\",{\"1\":{\"322\":1}}],[\"它能够处理异步操作\",{\"1\":{\"403\":1}}],[\"它能够突破自身\",{\"1\":{\"322\":1}}],[\"它能起到什么作用呢\",{\"1\":{\"322\":1}}],[\"它内置10w+\",{\"1\":{\"300\":1}}],[\"它可以被启动\",{\"1\":{\"811\":1}}],[\"它可以使进程脱离终端\",{\"1\":{\"544\":1}}],[\"它可以将日志分不同的等级\",{\"1\":{\"447\":1}}],[\"它可以实现将内网服务暴露到公网供自己或任何人访问\",{\"1\":{\"239\":1}}],[\"它可以直接导出文件进行存档\",{\"1\":{\"216\":1}}],[\"它可以运行在三大操作系统上面\",{\"1\":{\"203\":1}}],[\"它变得更加复杂\",{\"1\":{\"210\":1}}],[\"它需要在所有组件周围具有很好的感知能力\",{\"1\":{\"210\":1}}],[\"它提倡将单一应用程序划分成一组小的服务\",{\"1\":{\"210\":1}}],[\"它提供一个字段的基数\",{\"1\":{\"204\":1}}],[\"它还会创建一个\",{\"1\":{\"862\":1}}],[\"它还能够假扮服务器\",{\"1\":{\"322\":1}}],[\"它还能够将选定的富文本复制为\",{\"1\":{\"304\":1}}],[\"它还支持一键优化\",{\"1\":{\"300\":1}}],[\"它还可以作为负载均衡器\",{\"1\":{\"207\":1}}],[\"它还有助于处理难以重现的请求\",{\"1\":{\"175\":1}}],[\"它充当互联网云和web服务器之间的中间层\",{\"1\":{\"207\":1}}],[\"它合并这些值到自己的优先队列中来产生一个全局排序后的结果列表\",{\"1\":{\"204\":1}}],[\"它表示磁盘上文件中的持久性内存映射文件\",{\"1\":{\"203\":1}}],[\"它使你能够在同一台计算机上运行多个进程以彼此共享数据\",{\"1\":{\"203\":1}}],[\"它详细记录了程序集或模块内部的结构\",{\"1\":{\"203\":1}}],[\"它和封闭类型没有区别\",{\"1\":{\"203\":1}}],[\"它和net\",{\"1\":{\"140\":1}}],[\"它不能被实例化\",{\"1\":{\"203\":1}}],[\"它不仅性能非常高\",{\"1\":{\"134\":1}}],[\"它结合了两个独立接口的功能\",{\"1\":{\"202\":1}}],[\"它们每一位都是有含义的\",{\"1\":{\"1081\":1}}],[\"它们都是什么呢\",{\"1\":{\"788\":1}}],[\"它们都有一个共同的特性\",{\"1\":{\"322\":1}}],[\"它们分别是\",{\"1\":{\"717\":1}}],[\"它们分别都能干些什么\",{\"1\":{\"717\":1}}],[\"它们是一个路数\",{\"1\":{\"689\":1}}],[\"它们主要有以下特点\",{\"1\":{\"667\":1}}],[\"它们增强了\",{\"1\":{\"202\":1}}],[\"它们仅仅在使用linkgenerator时会有不同\",{\"1\":{\"160\":1}}],[\"它捕获所有http请求\",{\"1\":{\"175\":1}}],[\"它被称为http代理服务器\",{\"1\":{\"175\":1}}],[\"它轻巧\",{\"1\":{\"173\":1}}],[\"它的出现一定程度上弥补和完善了\",{\"1\":{\"968\":1}}],[\"它的出现为各种平台上开发的\",{\"1\":{\"141\":1}}],[\"它的工作不过是创建和管理\",{\"1\":{\"944\":1}}],[\"它的工作原理为\",{\"1\":{\"914\":1}}],[\"它的名称\",{\"1\":{\"938\":1}}],[\"它的作用是为\",{\"1\":{\"919\":1}}],[\"它的作用域是最大的\",{\"1\":{\"740\":1}}],[\"它的使用范围也只是针对这个集合有效\",{\"1\":{\"740\":1}}],[\"它的请求报文中数据往往是下面这样的\",{\"1\":{\"734\":1}}],[\"它的值如果是\",{\"1\":{\"732\":1}}],[\"它的子进程也会受到影响\",{\"1\":{\"564\":1}}],[\"它的底层实现都是由n个对象组成的\",{\"1\":{\"435\":1}}],[\"它的功能跟idm很像\",{\"1\":{\"308\":1}}],[\"它的实现依托于元数据\",{\"1\":{\"203\":1}}],[\"它的确很复杂\",{\"1\":{\"161\":1}}],[\"它会安装好几个插件\",{\"1\":{\"968\":1}}],[\"它会先对文件内容语法进行初步验证\",{\"1\":{\"818\":1}}],[\"它会将当前版本与仓库中的上一个版本进行对比\",{\"1\":{\"781\":1}}],[\"它会经过格式化成html格式后展示\",{\"1\":{\"735\":1}}],[\"它会自动的被操作系统的\",{\"1\":{\"692\":1}}],[\"它会返回false\",{\"1\":{\"129\":1}}],[\"它会删除回退点之前的所有信息\",{\"1\":{\"31\":1}}],[\"它是由微软与canonical公司合作开发\",{\"1\":{\"1007\":1}}],[\"它是特指kubernetes中service的port\",{\"1\":{\"921\":1}}],[\"它是\",{\"1\":{\"919\":1}}],[\"它是展示函数或类如何使用的最佳文档\",{\"1\":{\"594\":1}}],[\"它是一种编写文档的行为单元测试是一种无价的文档\",{\"1\":{\"594\":1}}],[\"它是一种设计行为编写单元测试将使我们从调用者观察\",{\"1\":{\"594\":1}}],[\"它是一种验证行为程序中的每一项功能都是测试来验证它的正确性\",{\"1\":{\"594\":1}}],[\"它是一个很好的反编译器\",{\"1\":{\"173\":1}}],[\"它是运行时的提供程序\",{\"1\":{\"570\":1}}],[\"它是用来方便\",{\"1\":{\"798\":1}}],[\"它是用\",{\"1\":{\"544\":1}}],[\"它是网络的入口和出口点\",{\"1\":{\"322\":1}}],[\"它是怎么实现的\",{\"1\":{\"209\":1}}],[\"它是javascript写的\",{\"1\":{\"205\":1}}],[\"它是当前备份集群\",{\"1\":{\"205\":1}}],[\"它是基于hll算法的\",{\"1\":{\"204\":1}}],[\"它是作用于对象层次还是类层次\",{\"1\":{\"202\":1}}],[\"它是根据以下规则来确定的\",{\"1\":{\"165\":1}}],[\"它是引用类型\",{\"1\":{\"77\":1}}],[\"它是枚举器\",{\"1\":{\"42\":1}}],[\"并复制目录下的所有内容\",{\"1\":{\"1079\":1}}],[\"并用缓存副本替换损坏的文件\",{\"1\":{\"1024\":1}}],[\"并用request\",{\"1\":{\"323\":1}}],[\"并最终切换到另一个线程\",{\"1\":{\"985\":1}}],[\"并建议将调试器重新附加到同一进程\",{\"1\":{\"983\":1}}],[\"并要在监视器中添加或者2\",{\"1\":{\"981\":1}}],[\"并促进了数据库应用程序的开发\",{\"1\":{\"968\":1}}],[\"并有助于保持制表符和空格使用的一致性\",{\"1\":{\"968\":1}}],[\"并非为负载均衡设计的\",{\"1\":{\"944\":1}}],[\"并根据\",{\"1\":{\"944\":1}}],[\"并根据规则配置负载均衡并提供访问入口\",{\"1\":{\"914\":1}}],[\"并转发给\",{\"1\":{\"944\":1}}],[\"并据此创建\",{\"1\":{\"944\":1}}],[\"并保存到集群数据仓库\",{\"1\":{\"941\":1}}],[\"并保证培训完立即上岗\",{\"1\":{\"194\":1}}],[\"并为这些\",{\"1\":{\"937\":1}}],[\"并为他们提供一个统一的入口\",{\"1\":{\"914\":1}}],[\"并管理一个健康\",{\"1\":{\"936\":1}}],[\"并管理docker的各种对象\",{\"1\":{\"805\":1}}],[\"并增加了后端实现和部署的灵活性\",{\"1\":{\"931\":1}}],[\"并进行永久保存\",{\"1\":{\"914\":2}}],[\"并实现后续的\",{\"1\":{\"941\":1}}],[\"并实现类似交换机那样的多对多的通信\",{\"1\":{\"916\":1}}],[\"并实现应用的零宕机升级\",{\"1\":{\"914\":1}}],[\"并实现validate方法\",{\"1\":{\"475\":1}}],[\"并给大家实际演示一个例子\",{\"1\":{\"871\":1}}],[\"并完全手动管理升级\",{\"1\":{\"862\":1}}],[\"并启动\",{\"1\":{\"852\":1}}],[\"并拷贝到对应的服务器上\",{\"1\":{\"852\":1}}],[\"并拷贝configurations\",{\"1\":{\"575\":1}}],[\"并命名为eth0\",{\"1\":{\"840\":1}}],[\"并设置docker0的ip地址为容器的默认网关\",{\"1\":{\"840\":1}}],[\"并设置了projectreference\",{\"1\":{\"577\":1}}],[\"并使用\",{\"1\":{\"964\":1}}],[\"并使用di注入到应用程序中\",{\"1\":{\"668\":1}}],[\"并使\",{\"1\":{\"839\":1}}],[\"并连同dockerfile拷贝到安装好docker的机器上进行构建\",{\"1\":{\"835\":1}}],[\"并指定redis的连接地址\",{\"1\":{\"851\":1}}],[\"并指定一个名字\",{\"1\":{\"815\":1}}],[\"并指出你的众多不足\",{\"1\":{\"194\":1}}],[\"并没有全部列出\",{\"1\":{\"811\":1}}],[\"并没有包含在gof中\",{\"1\":{\"436\":1}}],[\"并监听80端口\",{\"1\":{\"811\":1}}],[\"并监控进程状态\",{\"1\":{\"564\":1}}],[\"并下载到docker主机上\",{\"1\":{\"805\":1}}],[\"并把所有的差异打包到一起作为一个提交记录\",{\"1\":{\"781\":1}}],[\"并提供一个下载功能\",{\"1\":{\"692\":1}}],[\"并返回容器id\",{\"1\":{\"811\":1}}],[\"并返回用户id\",{\"1\":{\"679\":1}}],[\"并返回\",{\"1\":{\"678\":1,\"681\":1}}],[\"并简化了连接系统的构建\",{\"1\":{\"662\":1}}],[\"并及时修改问题\",{\"1\":{\"634\":1}}],[\"并行运行测试\",{\"0\":{\"588\":1},\"1\":{\"588\":1}}],[\"并按新的配置启动\",{\"1\":{\"564\":1}}],[\"并按其方式发送请求\",{\"1\":{\"175\":1}}],[\"并创建supervisord\",{\"1\":{\"549\":1}}],[\"并创建实例\",{\"1\":{\"442\":1}}],[\"并添加\",{\"1\":{\"537\":1}}],[\"并从配置中读取数据库连接字符串\",{\"1\":{\"502\":1}}],[\"并定义了版本号的格式化方式\",{\"1\":{\"494\":1,\"498\":1}}],[\"并构造出文件的路径\",{\"1\":{\"483\":1,\"484\":1}}],[\"并在事件发生时执行已注册的回调函数\",{\"1\":{\"914\":1}}],[\"并在查询字符串中查找\",{\"1\":{\"468\":1}}],[\"并在路由数据中查找\",{\"1\":{\"468\":1}}],[\"并在运行期以反射的方式来获取附加信息\",{\"1\":{\"41\":1}}],[\"并同时判断这个\",{\"1\":{\"443\":1}}],[\"并违背了软件设计的开闭原则\",{\"1\":{\"442\":1}}],[\"并运行它以决定是否应该使用代理\",{\"1\":{\"322\":1}}],[\"并可自由的重新发布\",{\"1\":{\"250\":1}}],[\"并显示swagger信息\",{\"1\":{\"232\":1}}],[\"并能够独立部署到生产环境等\",{\"1\":{\"210\":1}}],[\"并不立即删除旧的pod\",{\"1\":{\"914\":1}}],[\"并不包含文件名称的信息\",{\"1\":{\"780\":1}}],[\"并不会报错\",{\"1\":{\"468\":1}}],[\"并不是复制文件本身\",{\"1\":{\"1079\":1}}],[\"并不是一个普遍意义上的代理\",{\"1\":{\"944\":1}}],[\"并不是新协议\",{\"1\":{\"325\":1}}],[\"并不是与数据库中的值一一对应的\",{\"1\":{\"134\":1}}],[\"并不能保证数据的强一致性\",{\"1\":{\"209\":1}}],[\"并通过异步的方式将数据写入磁盘\",{\"1\":{\"209\":1}}],[\"并通过指定的输出类型将输出数据返回给调用者\",{\"1\":{\"51\":1}}],[\"并快速修复陈旧的数据\",{\"1\":{\"207\":1}}],[\"并等待请求返回\",{\"1\":{\"207\":1}}],[\"并对集群的heap使用情况做持续的监控\",{\"1\":{\"204\":1}}],[\"并删除那些旧的小段\",{\"1\":{\"204\":1}}],[\"并直接提供给用户\",{\"1\":{\"203\":1}}],[\"并具有完整的调试经验\",{\"1\":{\"173\":1}}],[\"并流转到下一个中间件\",{\"1\":{\"167\":2}}],[\"并配置这些终结点要执行的委托\",{\"1\":{\"156\":1}}],[\"并配合\",{\"1\":{\"134\":1}}],[\"并发时\",{\"1\":{\"134\":1}}],[\"并发\",{\"1\":{\"134\":4}}],[\"并发问题\",{\"1\":{\"134\":1}}],[\"并重建缓存\",{\"1\":{\"134\":1}}],[\"并获取程序集内部信息\",{\"1\":{\"88\":1}}],[\"并获取或设置字段值\",{\"1\":{\"87\":1}}],[\"并将项目文件配置为引用它\",{\"1\":{\"1037\":1}}],[\"并将调试器重新附加到该进程\",{\"1\":{\"983\":1}}],[\"并将请求转发到\",{\"1\":{\"914\":1}}],[\"并将这个网络设备加入到docker0网桥中\",{\"1\":{\"840\":1}}],[\"并将其复制到要用作本地布局源位置的目录中\",{\"1\":{\"962\":1}}],[\"并将其内容进行压缩\",{\"1\":{\"788\":1}}],[\"并将其添加到github\",{\"1\":{\"19\":1}}],[\"并将它集成到自己的项目中持续保证项目的高质量\",{\"1\":{\"599\":1}}],[\"并将车票交给了同学\",{\"1\":{\"432\":1}}],[\"并将\",{\"1\":{\"304\":1}}],[\"并将内容刷新到磁盘\",{\"1\":{\"204\":1}}],[\"并将参数定义放在一对方括号中\",{\"1\":{\"66\":1}}],[\"并且测试是否可以访问外网\",{\"1\":{\"1107\":1}}],[\"并且支持通配符\",{\"1\":{\"1078\":1}}],[\"并且支持导入本地图片和视频文件\",{\"1\":{\"276\":1}}],[\"并且根据映射规则返回实际要操作的字符串\",{\"1\":{\"1047\":1}}],[\"并且映像内的工具和实用工具能在此子系统上原生运行\",{\"1\":{\"1007\":1}}],[\"并且非常方便\",{\"1\":{\"983\":1}}],[\"并且还展示了\",{\"1\":{\"942\":1}}],[\"并且通过iptables实现网络的安全隔离\",{\"1\":{\"928\":1}}],[\"并且通过实验\",{\"1\":{\"872\":1}}],[\"并且每个namespace最多只能有一个\",{\"1\":{\"914\":1}}],[\"并且每个段会消耗\",{\"1\":{\"204\":1}}],[\"并且将其打进\",{\"1\":{\"871\":1}}],[\"并且不会丢失原有镜像的自带信息\",{\"1\":{\"868\":1}}],[\"并且会创建相关的\",{\"1\":{\"945\":1}}],[\"并且会自动挂载到pod的\",{\"1\":{\"914\":1}}],[\"并且会占用仓库的大小\",{\"1\":{\"863\":1}}],[\"并且会免费提供下去\",{\"1\":{\"704\":1}}],[\"并且参数还能生效\",{\"1\":{\"838\":1}}],[\"并且创建了一个远程的\",{\"1\":{\"788\":1}}],[\"并且做出回应\",{\"1\":{\"711\":1}}],[\"并且做成了一个公共类\",{\"1\":{\"600\":1}}],[\"并且提供下载功能\",{\"1\":{\"690\":1}}],[\"并且重写getuserinfo方法\",{\"1\":{\"672\":1}}],[\"并且再请求头增加\",{\"1\":{\"605\":1}}],[\"并且对于\",{\"1\":{\"598\":1}}],[\"并且返回一致的结果\",{\"1\":{\"595\":1}}],[\"并且它保持最新\",{\"1\":{\"594\":1}}],[\"并且要保证没有其他因素干扰的情况下去进行单元测试\",{\"1\":{\"589\":1}}],[\"并且要应该根据最坏的情况来看heap是否够用\",{\"1\":{\"204\":1}}],[\"并且宿主服务的plugins文件夹下新建defaultpluginsexternalprovider\",{\"1\":{\"575\":1}}],[\"并且默认应该包含以下文件\",{\"1\":{\"575\":1}}],[\"并且多了一个\",{\"1\":{\"569\":1}}],[\"并且需要重启多次\",{\"1\":{\"563\":1}}],[\"并且连接mysql数据库\",{\"1\":{\"561\":1}}],[\"并且我配置的该模式不显示swagger\",{\"1\":{\"540\":1}}],[\"并且都可以防止sql注入\",{\"1\":{\"513\":1}}],[\"并且可以设置默认打印机\",{\"1\":{\"690\":1}}],[\"并且可以减少测试人员的测试时间\",{\"1\":{\"594\":1}}],[\"并且可以在最新的\",{\"1\":{\"457\":1}}],[\"并且可能共享其中的字段或者属性\",{\"1\":{\"346\":1}}],[\"并且也要检验当前请求体的内容是不是也上一次也一样\",{\"1\":{\"424\":1}}],[\"并且注入到需要的地方\",{\"1\":{\"409\":1}}],[\"并且context\",{\"1\":{\"405\":1}}],[\"并且这个过滤器也需要进行注册\",{\"1\":{\"400\":1}}],[\"并且异常过滤器和方法过滤器设置了异步的使用方法\",{\"1\":{\"399\":1}}],[\"并且超过了这个值的大小的会自动销毁\",{\"1\":{\"373\":1}}],[\"并且运行时从服务容器中解析服务\",{\"1\":{\"348\":1}}],[\"并且保持开源\",{\"1\":{\"250\":1}}],[\"并且接口内容也可以通过swagger定时同步\",{\"1\":{\"216\":1}}],[\"并且显得不太正式\",{\"1\":{\"216\":1}}],[\"并且优先回收存活时间\",{\"1\":{\"209\":1}}],[\"并且客户端尝试执行会让更多内存被使用的命令\",{\"1\":{\"209\":1}}],[\"并且是确定性的\",{\"1\":{\"205\":1}}],[\"并且该版本号划分为以下部分\",{\"1\":{\"1130\":1}}],[\"并且该节点自己也选举自己\",{\"1\":{\"204\":1}}],[\"并且该正则表达式是\",{\"1\":{\"163\":1}}],[\"并且在线程结束为止调用dbtool\",{\"1\":{\"1045\":1}}],[\"并且在postman中的断言是非常方便和强大的\",{\"1\":{\"739\":1}}],[\"并且在load事件里面调用iuserservice的获取名称方法\",{\"1\":{\"659\":1}}],[\"并且在大多数情况下\",{\"1\":{\"210\":1}}],[\"并且在合适的场合使用存储过程\",{\"1\":{\"203\":1}}],[\"并且在具体使用时再生成具体的封闭类型\",{\"1\":{\"203\":1}}],[\"并且视该中间件为终端中间件\",{\"1\":{\"168\":1}}],[\"并且两步都可以\",{\"1\":{\"134\":1}}],[\"并且必须用值初始化\",{\"1\":{\"67\":1}}],[\"并且定义\",{\"1\":{\"43\":1}}],[\"并且自定义属性的修饰不能由修饰类的派生类继承\",{\"1\":{\"42\":1}}],[\"并且同一个类上只能用一个属性修饰\",{\"1\":{\"42\":1}}],[\"简体中文\",{\"1\":{\"1110\":1}}],[\"简化了客户端的访问\",{\"1\":{\"931\":1}}],[\"简化输出信息\",{\"1\":{\"810\":1}}],[\"简要介绍如下\",{\"1\":{\"865\":1}}],[\"简述上图的三个流程\",{\"1\":{\"805\":1}}],[\"简介就是为\",{\"1\":{\"871\":1}}],[\"简介\",{\"0\":{\"529\":1}}],[\"简称wsl\",{\"1\":{\"1007\":1}}],[\"简称\",{\"1\":{\"328\":1}}],[\"简称为svn\",{\"1\":{\"11\":1}}],[\"简历\",{\"0\":{\"338\":1},\"1\":{\"338\":2}}],[\"简历里要多摆事实\",{\"1\":{\"183\":1}}],[\"简历的页数\",{\"1\":{\"183\":1}}],[\"简历别弄虚作假\",{\"1\":{\"183\":1}}],[\"简历模板简约大方就行了\",{\"1\":{\"182\":1}}],[\"简历模板\",{\"0\":{\"182\":1}}],[\"简中\",{\"1\":{\"124\":1}}],[\"简易实现\",{\"1\":{\"120\":1}}],[\"简单回顾一下\",{\"1\":{\"945\":1}}],[\"简单理解容器数据卷\",{\"0\":{\"814\":1}}],[\"简单理解就是在请求头中查看content\",{\"1\":{\"732\":1}}],[\"简单地说\",{\"1\":{\"776\":1}}],[\"简单rpc\",{\"0\":{\"671\":1},\"1\":{\"672\":1}}],[\"简单\",{\"1\":{\"667\":2}}],[\"简单的事务方法\",{\"0\":{\"1063\":1}}],[\"简单的数据可以通过\",{\"1\":{\"599\":1}}],[\"简单的说就是为了更好的解耦\",{\"1\":{\"344\":1}}],[\"简单配置\",{\"0\":{\"579\":1}}],[\"简单动态加载示例\",{\"0\":{\"570\":1}}],[\"简单查询是否存在\",{\"1\":{\"525\":1}}],[\"简单模型绑定\",{\"0\":{\"469\":1}}],[\"简单封装自己用\",{\"1\":{\"377\":1}}],[\"简单入门\",{\"0\":{\"371\":1}}],[\"简单使用\",{\"0\":{\"366\":1,\"584\":1}}],[\"简单易用的快速启动工具\",{\"1\":{\"274\":1}}],[\"简单说来\",{\"1\":{\"928\":1}}],[\"简单说说语法\",{\"0\":{\"850\":1}}],[\"简单说\",{\"1\":{\"156\":2}}],[\"简单示例\",{\"1\":{\"68\":1}}],[\"简单总结\",{\"1\":{\"41\":1}}],[\"类似\",{\"1\":{\"597\":1,\"863\":1,\"1081\":1,\"1110\":1}}],[\"类似于\",{\"1\":{\"513\":1,\"1110\":1}}],[\"类似于容器\",{\"1\":{\"433\":1}}],[\"类是在\",{\"1\":{\"570\":1}}],[\"类是最常见的一种引用类型\",{\"1\":{\"48\":1}}],[\"类别在日志级别\",{\"1\":{\"446\":1}}],[\"类别更具体\",{\"1\":{\"446\":1}}],[\"类别比\",{\"1\":{\"446\":1}}],[\"类别适用于以\",{\"1\":{\"446\":1}}],[\"类和实例通俗理解\",{\"1\":{\"435\":1}}],[\"类库的dll\",{\"1\":{\"571\":1}}],[\"类库而不需要开源项目的代码\",{\"1\":{\"249\":1}}],[\"类库文件\",{\"1\":{\"90\":1}}],[\"类的名字可以自己定义\",{\"1\":{\"203\":1}}],[\"类的适配器模式\",{\"1\":{\"202\":1}}],[\"类的公共成员\",{\"1\":{\"98\":1}}],[\"类全名\",{\"1\":{\"98\":1}}],[\"类只支持单继承\",{\"1\":{\"73\":1}}],[\"类可以通过继承一个类来对自身进行扩展或者定制\",{\"1\":{\"73\":1}}],[\"类成员\",{\"0\":{\"50\":1}}],[\"类\",{\"0\":{\"48\":1,\"80\":1},\"1\":{\"88\":1,\"93\":1,\"399\":1,\"442\":1,\"968\":1}}],[\"类名等等等\",{\"1\":{\"443\":1}}],[\"类名\",{\"1\":{\"46\":2,\"97\":1,\"118\":1}}],[\"类等其他信息\",{\"1\":{\"41\":1}}],[\"类型来允许插件具有依赖项\",{\"1\":{\"577\":1}}],[\"类型来得到\",{\"1\":{\"443\":1}}],[\"类型的\",{\"1\":{\"569\":1,\"778\":1}}],[\"类型对象\",{\"1\":{\"203\":1}}],[\"类型是dfamatcher\",{\"1\":{\"167\":1}}],[\"类型检查并创建实例\",{\"1\":{\"131\":1}}],[\"类型转换\",{\"0\":{\"126\":1}}],[\"类型名\",{\"1\":{\"98\":1}}],[\"类型为动态类型\",{\"1\":{\"94\":1}}],[\"类型\",{\"0\":{\"96\":1},\"1\":{\"41\":1,\"76\":1,\"86\":1,\"88\":1,\"91\":1,\"99\":1,\"203\":1,\"204\":1,\"443\":1,\"777\":3,\"1130\":1}}],[\"描述一下依赖注入后的服务生命周期\",{\"1\":{\"203\":1}}],[\"描述\",{\"0\":{\"378\":1,\"663\":1},\"1\":{\"41\":1,\"75\":1,\"76\":1,\"88\":1,\"92\":1,\"93\":2,\"97\":2,\"104\":2,\"108\":1,\"111\":2,\"114\":2,\"119\":1,\"479\":1,\"515\":1,\"551\":1,\"573\":1,\"1131\":1}}],[\"反正最后建好房就行\",{\"1\":{\"820\":1}}],[\"反正我写本文之前我是迷了\",{\"1\":{\"41\":1}}],[\"反序列化工具集和语言\",{\"1\":{\"536\":1}}],[\"反序列化\",{\"1\":{\"535\":1}}],[\"反转什么\",{\"1\":{\"436\":2}}],[\"反向代理\",{\"1\":{\"322\":1}}],[\"反向代理服务器就相当于目标服务器\",{\"1\":{\"322\":1}}],[\"反向代理服务器可以隐藏源服务器的存在和特征\",{\"1\":{\"207\":1}}],[\"反向代理服务器\",{\"1\":{\"207\":1}}],[\"反编译菜单可以在模块窗口的组件右键菜单\",{\"1\":{\"986\":1}}],[\"反编译器\",{\"1\":{\"172\":1}}],[\"反编译\",{\"1\":{\"172\":1}}],[\"反射工厂模式具有灵活性高\",{\"1\":{\"203\":1}}],[\"反射赋值\",{\"1\":{\"128\":1}}],[\"反射提供封装程序集\",{\"1\":{\"90\":1}}],[\"反射提供了封装程序集\",{\"1\":{\"86\":1}}],[\"反射是一种动态分析程序集\",{\"1\":{\"203\":1}}],[\"反射是一个程序集发现及执行的过程\",{\"1\":{\"88\":1}}],[\"反射是微软封装的一个帮助类库\",{\"1\":{\"86\":1}}],[\"反射常用类\",{\"0\":{\"88\":1}}],[\"反射类型和只读或可写状态等\",{\"1\":{\"87\":1}}],[\"反射用途\",{\"0\":{\"87\":1}}],[\"反射概述\",{\"0\":{\"86\":1}}],[\"反射\",{\"0\":{\"84\":1},\"1\":{\"41\":1,\"438\":1,\"442\":1}}],[\"方向代理的作用\",{\"1\":{\"931\":1}}],[\"方式提交一个新的\",{\"1\":{\"941\":1}}],[\"方式\",{\"0\":{\"1065\":1},\"1\":{\"919\":1,\"1064\":1}}],[\"方式一\",{\"1\":{\"94\":1}}],[\"方块\",{\"1\":{\"804\":1}}],[\"方便图片在任何地方无需认证只需要url就可以访问到\",{\"1\":{\"954\":1}}],[\"方便访问\",{\"1\":{\"824\":1}}],[\"方便后续部署\",{\"1\":{\"817\":1}}],[\"方便后期维护\",{\"1\":{\"736\":1}}],[\"方便进行单元测试\",{\"1\":{\"344\":1}}],[\"方便使用\",{\"1\":{\"14\":1}}],[\"方案二\",{\"0\":{\"463\":1,\"496\":1},\"1\":{\"416\":1,\"475\":1}}],[\"方案一\",{\"0\":{\"462\":1,\"492\":1},\"1\":{\"416\":1,\"475\":1}}],[\"方案时会出现\",{\"1\":{\"208\":1}}],[\"方案下\",{\"1\":{\"134\":3}}],[\"方案\",{\"1\":{\"134\":2}}],[\"方案还是有的\",{\"1\":{\"134\":1}}],[\"方法二\",{\"1\":{\"1110\":1}}],[\"方法一\",{\"1\":{\"1110\":1}}],[\"方法中\",{\"1\":{\"691\":1,\"1063\":1}}],[\"方法中进行测试的清理工作即可\",{\"1\":{\"598\":1}}],[\"方法以返回关联数据\",{\"1\":{\"514\":1}}],[\"方法被弃用\",{\"1\":{\"497\":1}}],[\"方法等\",{\"1\":{\"399\":1}}],[\"方法和字段的信息描述对象\",{\"1\":{\"203\":1}}],[\"方法和字段描述的指针\",{\"1\":{\"203\":1}}],[\"方法可以实现自定义的序列化\",{\"1\":{\"203\":1}}],[\"方法可以用以下修饰符修饰\",{\"1\":{\"51\":1}}],[\"方法获取终结点\",{\"1\":{\"157\":1}}],[\"方法来选择最佳的终结点\",{\"1\":{\"156\":1}}],[\"方法不论好坏\",{\"1\":{\"128\":1}}],[\"方法用来载入和检查具有同样标识但位于不同路径中的程序集\",{\"1\":{\"117\":1}}],[\"方法参数类型与泛型参数类型一致\",{\"1\":{\"106\":1}}],[\"方法名称\",{\"1\":{\"104\":1}}],[\"方法名字相同\",{\"1\":{\"54\":1}}],[\"方法的返回值类型和params修饰符不属于判断是否重载的条件\",{\"1\":{\"54\":1}}],[\"方法是一组实现某个行为的语句\",{\"1\":{\"51\":1}}],[\"方法\",{\"0\":{\"51\":1,\"97\":1,\"103\":1,\"104\":1,\"108\":1,\"111\":1,\"114\":1},\"1\":{\"41\":2,\"88\":1,\"92\":1,\"93\":1,\"97\":1,\"104\":1,\"108\":1,\"111\":1,\"114\":1,\"155\":1,\"203\":2,\"403\":1,\"968\":1}}],[\"程序的main分支打包并部署到阿里云linux服务器\",{\"1\":{\"1070\":1}}],[\"程序的百分之一啊\",{\"1\":{\"871\":1}}],[\"程序异常中断后\",{\"1\":{\"1019\":1}}],[\"程序包管理器chocolatey\",{\"0\":{\"1008\":1}}],[\"程序和功能\",{\"1\":{\"876\":1}}],[\"程序代码\",{\"1\":{\"871\":1}}],[\"程序单元是应用的最小可测试部件\",{\"1\":{\"593\":1}}],[\"程序启动后等待多长时间后才认为程序启动成功\",{\"1\":{\"564\":2}}],[\"程序启动后再修改\",{\"1\":{\"398\":1}}],[\"程序执行结果如下\",{\"1\":{\"376\":1}}],[\"程序执行结果\",{\"1\":{\"373\":1}}],[\"程序运行结果如下\",{\"1\":{\"372\":1}}],[\"程序将会将请求重定向到这个相对路径\",{\"1\":{\"359\":1}}],[\"程序在启动时候我们预先将服务注册不同生命周期到servicecollection\",{\"1\":{\"344\":1}}],[\"程序在执行过程中发生异常\",{\"1\":{\"134\":1}}],[\"程序\",{\"0\":{\"449\":1},\"1\":{\"208\":1,\"546\":1}}],[\"程序开发过程中不注意规范书写sql语句和对特殊字符进行过滤\",{\"1\":{\"206\":1}}],[\"程序员提供更佳的编码体验和效率的\",{\"1\":{\"968\":1}}],[\"程序员在设计时需要考虑到注入式攻击的问题\",{\"1\":{\"203\":1}}],[\"程序员来自世界各地\",{\"1\":{\"17\":1}}],[\"程序集版本\",{\"1\":{\"573\":1}}],[\"程序集编辑\",{\"1\":{\"172\":1}}],[\"程序集模块\",{\"0\":{\"118\":1}}],[\"程序集名称\",{\"1\":{\"573\":1}}],[\"程序集名\",{\"1\":{\"98\":1}}],[\"程序集包含了两种文件\",{\"1\":{\"90\":1}}],[\"程序集包含模块\",{\"1\":{\"90\":1}}],[\"程序集是代码进行编译的一个逻辑单元\",{\"1\":{\"90\":1}}],[\"程序集对象\",{\"0\":{\"89\":1}}],[\"程序集\",{\"1\":{\"41\":1,\"91\":1,\"399\":1}}],[\"我要配置分区\",{\"1\":{\"1110\":1}}],[\"我要多少合适\",{\"0\":{\"197\":1}}],[\"我选择使用\",{\"1\":{\"1110\":1}}],[\"我选择\",{\"1\":{\"1110\":3}}],[\"我选择上海时间\",{\"1\":{\"1110\":1}}],[\"我选择下载\",{\"1\":{\"1110\":1}}],[\"我设置\",{\"1\":{\"1110\":1}}],[\"我安装的是\",{\"1\":{\"1110\":2}}],[\"我下载的版本是\",{\"1\":{\"1110\":1}}],[\"我在服务器的\",{\"1\":{\"1070\":1}}],[\"我在新创建的bucket上创建了markdown\",{\"1\":{\"954\":1}}],[\"我本来是按照上面这方案走的\",{\"1\":{\"1070\":1}}],[\"我本来是使用我自己公众号\",{\"1\":{\"710\":1}}],[\"我百度说是阿里云仓库必须写前面镜像地址等信息\",{\"1\":{\"1070\":1}}],[\"我记得是家庭版本是不支持的\",{\"1\":{\"1007\":1}}],[\"我试图选择一些既隐藏又经常有用的技巧\",{\"1\":{\"987\":1}}],[\"我主要是想保持文件最新\",{\"1\":{\"898\":1}}],[\"我用\",{\"1\":{\"863\":1}}],[\"我更喜欢可视化界面\",{\"1\":{\"802\":1}}],[\"我更想把它称之为\",{\"1\":{\"41\":1}}],[\"我将从以下三个维度来加以说明\",{\"1\":{\"717\":1}}],[\"我使用了内网穿透功能供微信访问该地址\",{\"1\":{\"711\":1}}],[\"我使用asp\",{\"1\":{\"693\":1}}],[\"我直接使用了postman生成的restsharp请求代码\",{\"1\":{\"710\":1}}],[\"我直接使用了自己学习使用的nuget包\",{\"1\":{\"694\":1}}],[\"我报名去参加了微软举办的一个线下分享的技术市集\",{\"1\":{\"710\":1}}],[\"我封装的客户端你可以自由的设置是否需要使用预览功能\",{\"1\":{\"690\":1}}],[\"我最近仔细自己找了可以使用的免费以及收费的组件\",{\"1\":{\"682\":1}}],[\"我最合适\",{\"1\":{\"185\":1}}],[\"我感觉有点像webservice\",{\"1\":{\"662\":1}}],[\"我感觉不对劲\",{\"1\":{\"193\":1}}],[\"我理解的大概就是这样子的\",{\"1\":{\"591\":1}}],[\"我知道了应该使用单一变量原则\",{\"1\":{\"588\":1}}],[\"我自己的是linux\",{\"1\":{\"563\":1}}],[\"我修改launchsettings\",{\"1\":{\"552\":1}}],[\"我基于个人习惯\",{\"1\":{\"552\":1}}],[\"我习惯于后期添加\",{\"1\":{\"550\":1}}],[\"我多创建几个控制器\",{\"1\":{\"479\":1}}],[\"我发现我用swagger调用接口返回的long类型的数据最后几位都变成了0\",{\"1\":{\"478\":1}}],[\"我想生活中很多人都有过这样的经历\",{\"1\":{\"432\":1}}],[\"我那同学突然从楼上冲下来\",{\"1\":{\"432\":1}}],[\"我也想像那些大佬一样为社区做出一些贡献\",{\"1\":{\"694\":1}}],[\"我也想起来借一个电话或者打公用电话\",{\"1\":{\"432\":1}}],[\"我也忘了我最开始是咋知道的\",{\"1\":{\"694\":1}}],[\"我也开心啊\",{\"1\":{\"190\":1}}],[\"我礼貌地请检票员想跳过我\",{\"1\":{\"432\":1}}],[\"我同学已经进站\",{\"1\":{\"432\":1}}],[\"我还是比较喜欢用界面\",{\"1\":{\"810\":1}}],[\"我还是建议你采用\",{\"1\":{\"134\":1}}],[\"我还这么处理\",{\"1\":{\"342\":1}}],[\"我需要查询type为2的里面的tablename字段\",{\"1\":{\"342\":1}}],[\"我需要取里面的一些列\",{\"1\":{\"342\":1}}],[\"我需要手动清除部分转移的文档吗\",{\"1\":{\"205\":1}}],[\"我一般桌面设置为透明\",{\"1\":{\"275\":1}}],[\"我司有多个es集群\",{\"1\":{\"204\":1}}],[\"我是一条日志\",{\"1\":{\"738\":1}}],[\"我是一个调试日志\",{\"1\":{\"466\":1}}],[\"我是一个错误日志\",{\"1\":{\"446\":1,\"466\":1}}],[\"我是一个警告日志\",{\"1\":{\"446\":1,\"466\":1}}],[\"我是一个info日志\",{\"1\":{\"446\":1,\"466\":1}}],[\"我是一个debug日志\",{\"1\":{\"446\":1}}],[\"我是直接使用的微信进行登录的\",{\"1\":{\"694\":1}}],[\"我是插件中新添加的控制器\",{\"1\":{\"576\":1}}],[\"我是新系统\",{\"1\":{\"538\":1}}],[\"我是管理员\",{\"1\":{\"527\":1}}],[\"我是使用的newtonsoft\",{\"1\":{\"478\":1}}],[\"我是面试官\",{\"1\":{\"201\":1}}],[\"我是谁\",{\"1\":{\"185\":1}}],[\"我去找那些\",{\"1\":{\"201\":1}}],[\"我请教周围好几位做\",{\"1\":{\"194\":1}}],[\"我非常不擅于谈薪酬\",{\"1\":{\"194\":1}}],[\"我当时做游戏的时候\",{\"1\":{\"193\":1}}],[\"我目前听说过的一个\",{\"1\":{\"191\":1}}],[\"我职位太低\",{\"1\":{\"191\":1}}],[\"我竟无言以对\",{\"1\":{\"191\":1}}],[\"我乐意在工作上给你提供点机会帮你实现目标\",{\"1\":{\"190\":1}}],[\"我清楚你的目标之后\",{\"1\":{\"190\":1}}],[\"我问这个问题就俩目的\",{\"1\":{\"190\":1}}],[\"我问你用过\",{\"1\":{\"186\":1}}],[\"我刚毕业一年\",{\"1\":{\"189\":1}}],[\"我告诉你怎么回答\",{\"1\":{\"189\":1}}],[\"我比较闷\",{\"1\":{\"189\":1}}],[\"我承认\",{\"1\":{\"188\":1}}],[\"我表示服气\",{\"1\":{\"188\":1}}],[\"我对他的回答很满意\",{\"1\":{\"186\":1}}],[\"我简单说完之后\",{\"1\":{\"186\":1}}],[\"我觉得在我们开发过程中测试是非常重要的一部分\",{\"1\":{\"599\":1}}],[\"我觉得\",{\"1\":{\"598\":1}}],[\"我觉得这样会让面试官感觉你是一个内行\",{\"1\":{\"338\":1}}],[\"我觉得他这个问题回答的还\",{\"1\":{\"186\":1}}],[\"我觉得我的经验能用得上\",{\"1\":{\"185\":1}}],[\"我平时喜欢看技术书籍\",{\"1\":{\"185\":1}}],[\"我从事\",{\"1\":{\"185\":1}}],[\"我的主机是\",{\"1\":{\"1110\":1}}],[\"我的本机操作系统是\",{\"1\":{\"1110\":1}}],[\"我的使用场景就是一个几百条数据的配置表中\",{\"1\":{\"342\":1}}],[\"我的缺点是追求极致\",{\"1\":{\"189\":1}}],[\"我的技能\",{\"1\":{\"185\":1}}],[\"我的观点\",{\"1\":{\"183\":1}}],[\"我叫\",{\"1\":{\"185\":1}}],[\"我走进面试房间的时候\",{\"1\":{\"184\":1}}],[\"我看出来了\",{\"1\":{\"189\":1}}],[\"我看过那么多简历里\",{\"1\":{\"182\":1}}],[\"我看到大部分的自我评价基本是这样\",{\"1\":{\"179\":1}}],[\"我真怀疑这是在网上搜了搜\",{\"1\":{\"179\":1}}],[\"我只提醒大家别漏了以下几个面试官眼中的加分项\",{\"1\":{\"178\":1}}],[\"我可能就会想\",{\"1\":{\"177\":1}}],[\"我都删除并进行了简化\",{\"1\":{\"168\":1}}],[\"我就想让缓存和数据库\",{\"1\":{\"134\":1}}],[\"我\",{\"1\":{\"124\":1,\"125\":1}}],[\"我们操作某个文件之前是需要先切换到对应的目录的\",{\"1\":{\"1073\":1}}],[\"我们项目是表的命名规则是\",{\"1\":{\"1046\":1}}],[\"我们项目中一般都会用到消息队列\",{\"1\":{\"134\":1}}],[\"我们找到这个文件夹\",{\"1\":{\"1012\":1}}],[\"我们没有源代码的组件\",{\"1\":{\"986\":1}}],[\"我们经常依赖一些黑盒组件\",{\"1\":{\"986\":1}}],[\"我们经常会遇到需要上传文件的接口\",{\"1\":{\"734\":1}}],[\"我们经常会听到某某明星又爆出什么猛料\",{\"1\":{\"322\":1}}],[\"我们经常会为该应用公布一个特殊的检测接口出来\",{\"1\":{\"149\":1}}],[\"我们想继续跟踪作用域外对象的状态\",{\"1\":{\"981\":1}}],[\"我们想取消缓存区的内容\",{\"1\":{\"32\":1}}],[\"我们假定读者了解vs基本的调试知识\",{\"1\":{\"974\":1}}],[\"我们将每次提交的项目生成测试镜像\",{\"1\":{\"1070\":1}}],[\"我们将封装一个dapperhelper的操作\",{\"1\":{\"1047\":1}}],[\"我们将其修改为\",{\"1\":{\"970\":1}}],[\"我们将上面的readme\",{\"1\":{\"22\":1}}],[\"我们用图说话\",{\"1\":{\"917\":1}}],[\"我们用一张图把ioc引入的过程串起来\",{\"1\":{\"436\":1}}],[\"我们访问我们的swagger地址\",{\"1\":{\"902\":1}}],[\"我们介绍了镜像层的知识\",{\"1\":{\"872\":1}}],[\"我们把它构建成镜像\",{\"1\":{\"863\":1}}],[\"我们的代码的\",{\"1\":{\"789\":1}}],[\"我们的业务应用在修改数据时\",{\"1\":{\"134\":1}}],[\"我们登陆\",{\"1\":{\"788\":1}}],[\"我们本地\",{\"1\":{\"788\":1}}],[\"我们使用上节的仓库\",{\"1\":{\"787\":1}}],[\"我们使用手动push的方式来添加\",{\"1\":{\"21\":1}}],[\"我们创建了该分支并有了一个新的提交\",{\"1\":{\"786\":1}}],[\"我们创建一个git\",{\"1\":{\"21\":1}}],[\"我们执行\",{\"1\":{\"786\":1}}],[\"我们一起聊一聊\",{\"1\":{\"786\":1}}],[\"我们一起看下面的代码\",{\"1\":{\"157\":1}}],[\"我们会涉及到的\",{\"1\":{\"785\":1}}],[\"我们最基本需要解决两个问题\",{\"1\":{\"784\":1}}],[\"我们通过查看\",{\"1\":{\"784\":1}}],[\"我们查看\",{\"1\":{\"781\":1}}],[\"我们查看项目目录为下\",{\"1\":{\"551\":1}}],[\"我们这次提交之后\",{\"1\":{\"781\":1}}],[\"我们这里一起来看看\",{\"1\":{\"787\":1}}],[\"我们这里一起总结一下\",{\"1\":{\"783\":1}}],[\"我们这里一年\",{\"1\":{\"200\":1}}],[\"我们这里也是可以通过\",{\"1\":{\"779\":1}}],[\"我们这里重点看下\",{\"1\":{\"778\":1}}],[\"我们这里可以一起看下生成的\",{\"1\":{\"777\":1}}],[\"我们这里并没有启动\",{\"1\":{\"547\":1}}],[\"我们再使用\",{\"1\":{\"780\":1}}],[\"我们再来个测试用例\",{\"1\":{\"442\":1}}],[\"我们算了下文件内容只有九位\",{\"1\":{\"779\":1}}],[\"我们发现压缩之后的内容反而比原始内容还大\",{\"1\":{\"779\":1}}],[\"我们发现\",{\"1\":{\"778\":1}}],[\"我们发现右侧新增了一个文件\",{\"1\":{\"778\":1}}],[\"我们现在执行的修改默认是放在工作区的\",{\"1\":{\"778\":1}}],[\"我们实现了一个最简单的demo模型\",{\"1\":{\"736\":1}}],[\"我们来通过collection来进行实现\",{\"1\":{\"736\":1}}],[\"我们来看下postman的响应数据展示\",{\"1\":{\"735\":1}}],[\"我们来看看\",{\"1\":{\"436\":1}}],[\"我们先创建好虚拟机\",{\"1\":{\"1110\":1}}],[\"我们先来了解下postman断言的一些特点\",{\"1\":{\"739\":1}}],[\"我们先分析需要填写的参数\",{\"1\":{\"734\":1}}],[\"我们先定义两个简单的模型来绑定输入参数\",{\"1\":{\"215\":1}}],[\"我们都可以通过其他节点来找到\",{\"1\":{\"789\":1}}],[\"我们都知道\",{\"1\":{\"732\":1}}],[\"我们都是通过ioc容器注册服务然后通过构造函数等来获取服务\",{\"1\":{\"575\":1}}],[\"我们都是凭借经验大致估算这个延迟时间\",{\"1\":{\"134\":1}}],[\"我们首先得有一个微信公众号\",{\"1\":{\"710\":1}}],[\"我们在输出窗口中跟踪i从0到9的值\",{\"1\":{\"980\":1}}],[\"我们在循环中定义条件i>6的断点\",{\"1\":{\"979\":1}}],[\"我们在初始化仓库的时候\",{\"1\":{\"784\":1}}],[\"我们在请求接口报错时\",{\"1\":{\"738\":1}}],[\"我们在postman只需要填写四个参数即可\",{\"1\":{\"734\":1}}],[\"我们在使用web技术开发管理系统\",{\"1\":{\"690\":1}}],[\"我们在项目目录下的upload文件夹下新建一个1\",{\"1\":{\"580\":1}}],[\"我们猜一下运行该测试类的话需要耗时多少\",{\"1\":{\"588\":1}}],[\"我们测试调用接口后是否返回状态码为200\",{\"1\":{\"586\":1}}],[\"我们正常的服务已经好了\",{\"1\":{\"575\":1}}],[\"我们引用框架\",{\"1\":{\"573\":1}}],[\"我们引入缓存的目的是什么\",{\"1\":{\"134\":1}}],[\"我们看下错误日志\",{\"1\":{\"563\":1}}],[\"我们已经用这个单词来形容应用的进程或组件了\",{\"1\":{\"936\":1}}],[\"我们已经基本理解了文件如何在工作区\",{\"1\":{\"783\":1}}],[\"我们已经把刚才的项目生成了容器\",{\"1\":{\"554\":1}}],[\"我们已经不需要使用dotnet命令运行程序\",{\"1\":{\"548\":1}}],[\"我们直接f5启动项目\",{\"1\":{\"551\":1}}],[\"我们要在回顾中发现他们各自在这一过程中的职责\",{\"1\":{\"944\":1}}],[\"我们要有个类似脚本命令一样\",{\"1\":{\"543\":1}}],[\"我们要实现的目的是我本地不断提交代码\",{\"1\":{\"3\":1}}],[\"我们输入如下命令看下是否安装成功\",{\"1\":{\"538\":1}}],[\"我们到了吗\",{\"1\":{\"531\":1,\"532\":1}}],[\"我们快速总结流行的几种技术\",{\"1\":{\"530\":1}}],[\"我们简单来看看实际spring\",{\"1\":{\"443\":1}}],[\"我们只需要填写四个参数\",{\"1\":{\"733\":1}}],[\"我们只需要对shapefactory进行改造\",{\"1\":{\"442\":1}}],[\"我们只能做接口的功能测试\",{\"1\":{\"739\":1}}],[\"我们只能去非常简单的使用该组件\",{\"1\":{\"683\":1}}],[\"我们只能尽可能地去降低问题出现的概率\",{\"1\":{\"134\":1}}],[\"我们也可以针对这个模板去修改成其他的类型\",{\"1\":{\"930\":1}}],[\"我们也可以通过这种方法免受网络攻击\",{\"1\":{\"322\":1}}],[\"我们也很少使用\",{\"1\":{\"786\":1}}],[\"我们也不用修改现有的架构\",{\"1\":{\"442\":1}}],[\"我们不喜欢自己指定主机目录\",{\"1\":{\"815\":1}}],[\"我们不会将对象创建逻辑暴露给客户端\",{\"1\":{\"438\":1}}],[\"我们不仅要操作数据库\",{\"1\":{\"134\":1}}],[\"我们还需要生成xml文档并且让swagger使用\",{\"1\":{\"483\":1}}],[\"我们还需要去获取里面的tablename字段\",{\"1\":{\"342\":1}}],[\"我们还需要对敏感词进行管理\",{\"1\":{\"215\":1}}],[\"我们后面会说到\",{\"1\":{\"322\":1}}],[\"我们见到的大部分代理服务器都是公共代理\",{\"1\":{\"322\":1}}],[\"我们大家知道\",{\"1\":{\"322\":2}}],[\"我们为自己的代码首选\",{\"1\":{\"247\":1}}],[\"我们更倾向于\",{\"1\":{\"247\":1}}],[\"我们当时就直接丢弃数据了\",{\"1\":{\"208\":1}}],[\"我们推荐为每一个分片\",{\"1\":{\"205\":1}}],[\"我们依旧有失效时间来兜底\",{\"1\":{\"134\":1}}],[\"我们需要让推送成功后\",{\"1\":{\"1070\":1}}],[\"我们需要继承messagehandler<defaultmpmessagecontext>\",{\"1\":{\"711\":1}}],[\"我们需要做两步工作\",{\"1\":{\"690\":1}}],[\"我们需要实现另外开放一些对外提供的webapi接口\",{\"1\":{\"576\":1}}],[\"我们需要有一个程序来监听asp\",{\"1\":{\"543\":1}}],[\"我们需要将\",{\"1\":{\"543\":1}}],[\"我们需要看具体的ioc容器实现\",{\"1\":{\"443\":1}}],[\"我们需要把他换到其他盘符\",{\"1\":{\"256\":1}}],[\"我们需要投入精力去维护\",{\"1\":{\"134\":1}}],[\"我们需要安装gitlab软件\",{\"1\":{\"3\":1}}],[\"我们可以在监视窗口中引用obj仍然为null\",{\"1\":{\"977\":1}}],[\"我们可以在上面创建文件夹\",{\"1\":{\"954\":1}}],[\"我们可以依据具体的业务需求选用不同的方式\",{\"1\":{\"929\":1}}],[\"我们可以理解网络模型时\",{\"1\":{\"917\":1}}],[\"我们可以稍后再重启\",{\"1\":{\"876\":1}}],[\"我们可以将配置文件放在已挂载的目录中\",{\"1\":{\"817\":1}}],[\"我们可以发现\",{\"1\":{\"788\":1}}],[\"我们可以查看到其提交的类型和对应内容\",{\"1\":{\"781\":1}}],[\"我们可以添加同样的内容到另一个文件\",{\"1\":{\"778\":1}}],[\"我们可以得到下图所示的内容\",{\"1\":{\"777\":1,\"778\":1}}],[\"我们可以得出结论\",{\"1\":{\"134\":1}}],[\"我们可以看见都一个\",{\"1\":{\"752\":1}}],[\"我们可以看到其文件名称\",{\"1\":{\"780\":1}}],[\"我们可以看到请求地址\",{\"1\":{\"483\":1}}],[\"我们可以看到\",{\"1\":{\"435\":1}}],[\"我们可以分析出\",{\"1\":{\"734\":1}}],[\"我们可以编写代码来动态去替换或者增加现有服务接口等\",{\"1\":{\"570\":1}}],[\"我们可以检测看一下\",{\"1\":{\"548\":1}}],[\"我们可以创建自定义验证特性\",{\"1\":{\"475\":1}}],[\"我们可以把ioc拿掉\",{\"1\":{\"436\":1}}],[\"我们可以把操作缓存这一步\",{\"1\":{\"134\":1}}],[\"我们可以写过滤器统一校验患者id是否有效\",{\"1\":{\"418\":1}}],[\"我们可以全局对该字段进行限制\",{\"1\":{\"417\":1}}],[\"我们可以知道它可以针对敏感词及其拼音\",{\"1\":{\"215\":1}}],[\"我们可以采取一个方案\",{\"1\":{\"208\":1}}],[\"我们可以通过微信申请测试号来学习使用\",{\"1\":{\"710\":1}}],[\"我们可以通过配置参数\",{\"1\":{\"204\":1}}],[\"我们可以通过httpcontext来检索终结点等信息\",{\"1\":{\"157\":1}}],[\"我们可以订阅这个日志\",{\"1\":{\"134\":1}}],[\"我们可以这样优化\",{\"1\":{\"134\":1}}],[\"我们\",{\"1\":{\"134\":1}}],[\"我们就需要考虑下\",{\"1\":{\"784\":1}}],[\"我们就必须要实现这么一个功能\",{\"1\":{\"543\":1}}],[\"我们就可以在上面继续工作\",{\"1\":{\"786\":1}}],[\"我们就可以通过这些配置信息和反射技术来构建出对应的对象和依赖关系了\",{\"1\":{\"443\":1}}],[\"我们就可以发起重试\",{\"1\":{\"134\":1}}],[\"我们就以\",{\"1\":{\"208\":1}}],[\"我们就不用通过中间件来拉取日志\",{\"1\":{\"134\":1}}],[\"我们就来把这些问题讲清楚\",{\"1\":{\"134\":1}}],[\"我们继续来看前面遗留的\",{\"1\":{\"134\":1}}],[\"我们继续分析\",{\"1\":{\"134\":1}}],[\"我们应该采用这种方案\",{\"1\":{\"134\":1}}],[\"我们从\",{\"1\":{\"134\":1}}],[\"我们从最简单的场景开始讲起\",{\"1\":{\"134\":1}}],[\"我们很容易想到的方案是\",{\"1\":{\"134\":1}}],[\"我们总结一下上面操作中几个重要的命令\",{\"1\":{\"23\":1}}],[\"对磁盘进行分区\",{\"1\":{\"1110\":1}}],[\"对防火墙规则进行保存时候提示错误\",{\"1\":{\"1109\":1}}],[\"对文件具有所有权\",{\"1\":{\"1081\":1}}],[\"对网页设置自定义样式\",{\"1\":{\"999\":1}}],[\"对网络带宽需求比json小\",{\"1\":{\"664\":1}}],[\"对整个网页进行长截图\",{\"1\":{\"995\":1}}],[\"对话框\",{\"1\":{\"983\":2}}],[\"对齐赋值语句\",{\"1\":{\"968\":1}}],[\"对此文件设置匿名可以访问的权限\",{\"1\":{\"954\":1}}],[\"对进行通讯\",{\"1\":{\"926\":1}}],[\"对外正常提供服务\",{\"1\":{\"914\":1}}],[\"对了\",{\"1\":{\"838\":1}}],[\"对比大小\",{\"1\":{\"868\":1}}],[\"对比如下\",{\"1\":{\"866\":1}}],[\"对比工具等\",{\"1\":{\"798\":1}}],[\"对比ms\",{\"1\":{\"599\":1}}],[\"对其进行了一个叫做\",{\"1\":{\"778\":1}}],[\"对其他功能影响并不是太大\",{\"1\":{\"210\":1}}],[\"对其他调用标志无效\",{\"1\":{\"119\":1}}],[\"对我们做接口测试来说\",{\"1\":{\"740\":1}}],[\"对我来说最明显的就是解决代码的耦合性\",{\"1\":{\"657\":1}}],[\"对上面的几个红框内的功能进行简单说明\",{\"1\":{\"737\":1}}],[\"对上层用户提供了数据库连接池的服务\",{\"1\":{\"203\":1}}],[\"对长整型做处理\",{\"1\":{\"478\":1}}],[\"对请求类的值做出修改\",{\"1\":{\"476\":1}}],[\"对请求类进行验证特性\",{\"1\":{\"476\":1}}],[\"对请求的发送者和接收者进行解耦\",{\"1\":{\"202\":1}}],[\"对对象的控制\",{\"1\":{\"444\":1}}],[\"对模型验证过滤器\",{\"1\":{\"418\":1}}],[\"对延缓初始化的func<t>\",{\"1\":{\"344\":1}}],[\"对消息头进行压缩传输\",{\"1\":{\"326\":1}}],[\"对下面的\",{\"1\":{\"210\":1}}],[\"对微服务进行管理整合应用的\",{\"1\":{\"210\":1}}],[\"对某些负荷会比较高的情况\",{\"1\":{\"210\":1}}],[\"对某个action限制跨域\",{\"1\":{\"155\":1}}],[\"对一些复杂的场景\",{\"1\":{\"744\":1}}],[\"对一些重要的字段根据程序的特点命名\",{\"1\":{\"206\":1}}],[\"对一定不存在的\",{\"1\":{\"209\":1}}],[\"对查询结果为空的情况也进行缓存\",{\"1\":{\"209\":1}}],[\"对\",{\"1\":{\"209\":1,\"336\":1,\"443\":1,\"926\":1,\"936\":1,\"1071\":1,\"1098\":1,\"1110\":1}}],[\"对机械磁盘应该是个不错的设置\",{\"1\":{\"204\":1}}],[\"对所有候选主节点根据nodeid字典排序\",{\"1\":{\"204\":1}}],[\"对之后的谈薪越有帮助\",{\"1\":{\"196\":1}}],[\"对方回答不了的不要问\",{\"1\":{\"191\":1}}],[\"对方会怀疑你的稳定性和对公司的忠诚度\",{\"1\":{\"187\":1}}],[\"对方简历写的\",{\"1\":{\"180\":1}}],[\"对业务也会有影响\",{\"1\":{\"134\":1}}],[\"对业务造成影响\",{\"1\":{\"134\":1}}],[\"对系统影响大\",{\"1\":{\"133\":1}}],[\"对应用进行签名\",{\"1\":{\"1037\":1}}],[\"对应挂载的数据卷不会被删除\",{\"1\":{\"814\":1}}],[\"对应系统的limit\",{\"1\":{\"564\":1}}],[\"对应系统limit\",{\"1\":{\"564\":1}}],[\"对应的getasync为\",{\"1\":{\"604\":1}}],[\"对应的数据文件就会跟着消失\",{\"1\":{\"811\":1}}],[\"对应的数据\",{\"1\":{\"209\":1}}],[\"对应的nuget包为\",{\"1\":{\"152\":1}}],[\"对应的是struct\",{\"1\":{\"78\":1}}],[\"对应\",{\"1\":{\"77\":1}}],[\"对象会向列表中的\",{\"1\":{\"945\":1}}],[\"对象会把流量分发给这些\",{\"1\":{\"942\":1}}],[\"对象用于保存符合标签条件的健康\",{\"1\":{\"945\":1}}],[\"对象中的健康\",{\"1\":{\"944\":1}}],[\"对象对应的\",{\"1\":{\"943\":1}}],[\"对象有一个\",{\"1\":{\"942\":1}}],[\"对象注册到集群\",{\"1\":{\"941\":1}}],[\"对象数\",{\"1\":{\"914\":1}}],[\"对象语法\",{\"1\":{\"850\":1}}],[\"对象也罢\",{\"1\":{\"786\":1}}],[\"对象指向一个该版本中的文件目录树的根\",{\"1\":{\"782\":1}}],[\"对象内容里面包含了一个\",{\"1\":{\"781\":1}}],[\"对象的配置\",{\"1\":{\"944\":1}}],[\"对象的配置是全集群范围有效的\",{\"1\":{\"944\":1}}],[\"对象的职责就是保存一个符合\",{\"1\":{\"942\":1}}],[\"对象的\",{\"1\":{\"786\":1}}],[\"对象的一个指针\",{\"1\":{\"784\":1}}],[\"对象的类型\",{\"1\":{\"781\":2}}],[\"对象的内容转发给对应的\",{\"1\":{\"944\":1}}],[\"对象的内容时\",{\"1\":{\"782\":1}}],[\"对象的内容\",{\"1\":{\"780\":1,\"781\":2}}],[\"对象的内容的\",{\"1\":{\"779\":1}}],[\"对象的引用值发生改变了\",{\"1\":{\"780\":1}}],[\"对象的适配器模式\",{\"1\":{\"202\":1}}],[\"对象里面有包含了一个目录的\",{\"1\":{\"782\":1}}],[\"对象里面则包含了这次我们提交版本里面的文件状态\",{\"1\":{\"781\":1}}],[\"对象里面\",{\"1\":{\"779\":1}}],[\"对象里面的内容的时候\",{\"1\":{\"779\":1}}],[\"对象和两个\",{\"1\":{\"782\":1}}],[\"对象和相关提交信息\",{\"1\":{\"781\":1}}],[\"对象和一个\",{\"1\":{\"781\":1}}],[\"对象和\",{\"0\":{\"779\":1},\"1\":{\"778\":2,\"779\":1}}],[\"对象和任何其他特性对象\",{\"1\":{\"46\":1}}],[\"对象关系映射\",{\"1\":{\"529\":1}}],[\"对象未找到\",{\"1\":{\"474\":1}}],[\"对象时\",{\"1\":{\"446\":1,\"945\":1}}],[\"对象在一组提供服务的\",{\"1\":{\"937\":1}}],[\"对象在\",{\"1\":{\"443\":1}}],[\"对象及其相互的关系\",{\"1\":{\"443\":1}}],[\"对象与对象之间会彼此失去联系\",{\"1\":{\"436\":1}}],[\"对象之间的依赖关系已经降低到了最低程度\",{\"1\":{\"436\":1}}],[\"对象之间的依赖关系也越来越复杂\",{\"1\":{\"435\":1}}],[\"对象之间的耦合关系是无法避免的\",{\"1\":{\"435\":1}}],[\"对象之间复杂的依赖关系\",{\"0\":{\"435\":1}}],[\"对象池\",{\"1\":{\"165\":1}}],[\"对象引用可以\",{\"1\":{\"126\":1}}],[\"对象实例\",{\"1\":{\"119\":1}}],[\"对象\",{\"0\":{\"942\":1},\"1\":{\"98\":1,\"202\":1,\"475\":1,\"780\":2,\"781\":5,\"782\":6,\"784\":1,\"786\":1,\"788\":1,\"850\":1,\"914\":1,\"919\":1,\"937\":1,\"941\":2,\"942\":3,\"943\":1,\"944\":2}}],[\"对象简介\",{\"0\":{\"90\":1}}],[\"对象初始化器\",{\"0\":{\"72\":1}}],[\"对于以后的维护修改都非常方便\",{\"1\":{\"1047\":1}}],[\"对于mvc每次请求都会在请求结束时将数据库连接关闭\",{\"1\":{\"1045\":1}}],[\"对于分库分表来说dbmodel\",{\"1\":{\"1044\":1}}],[\"对于那个一个一个赋值真是心有余悸\",{\"1\":{\"1009\":1}}],[\"对于\",{\"1\":{\"964\":1}}],[\"对于cmd而言\",{\"1\":{\"838\":1}}],[\"对于redis而言\",{\"1\":{\"817\":1}}],[\"对于搜索\",{\"1\":{\"810\":1}}],[\"对于我来说\",{\"1\":{\"694\":1}}],[\"对于我来说我常用的就是数据导出为html给留档使用\",{\"1\":{\"236\":1}}],[\"对于windows\",{\"1\":{\"665\":1}}],[\"对于部分公司来讲\",{\"1\":{\"661\":1}}],[\"对于现有属性\",{\"1\":{\"629\":1}}],[\"对于单元测试中单元的含义\",{\"1\":{\"593\":1}}],[\"对于结构体类型\",{\"1\":{\"521\":1}}],[\"对于内置验证特性无法处理的情况\",{\"1\":{\"475\":1}}],[\"对于复杂类型的每个属性\",{\"1\":{\"470\":1}}],[\"对于用户空间\",{\"1\":{\"247\":1}}],[\"对于新手来说是个很好的实践项目\",{\"1\":{\"243\":1}}],[\"对于每个参数\",{\"1\":{\"468\":1}}],[\"对于每个组件\",{\"1\":{\"210\":1}}],[\"对于每一个搜索请求而言\",{\"1\":{\"204\":1}}],[\"对于每一个请求\",{\"1\":{\"175\":1}}],[\"对于微服务业界并没有一个统一的\",{\"1\":{\"210\":1}}],[\"对于一些特殊的数据类型\",{\"1\":{\"206\":1}}],[\"对于查询中很少涉及的列或者重复值比较多的列\",{\"1\":{\"206\":1}}],[\"对于大流量的网站\",{\"1\":{\"206\":1}}],[\"对于冷数据不会再写入新数据\",{\"1\":{\"204\":1}}],[\"对于gc方面\",{\"1\":{\"204\":1}}],[\"对于读操作\",{\"1\":{\"204\":1}}],[\"对于调试\",{\"1\":{\"175\":1}}],[\"对于中间件还不熟悉的\",{\"1\":{\"157\":1}}],[\"对于静态程序集可以生成单个或多个文件\",{\"1\":{\"90\":1}}],[\"对于引用类型\",{\"1\":{\"77\":1}}],[\"对于属性和特性就是名称上有纠葛\",{\"1\":{\"41\":1}}],[\"对于该单词\",{\"1\":{\"41\":1}}],[\"对版本回溯命令的详解\",{\"1\":{\"29\":1}}],[\"为自定义参数\",{\"1\":{\"1122\":1,\"1123\":2}}],[\"为自定义处理方法\",{\"1\":{\"711\":1}}],[\"为包版本的后缀\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"为包版本的前缀\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"为此\",{\"1\":{\"981\":1}}],[\"为输出控制台的内容显示不同的颜色\",{\"1\":{\"968\":1}}],[\"为不同的解决方案设置不同的颜色\",{\"1\":{\"968\":1}}],[\"为在网络模型中区分各层级的通信端口\",{\"1\":{\"920\":1}}],[\"为描述其网络模型的\",{\"1\":{\"919\":1}}],[\"为屏蔽这些后端实例\",{\"1\":{\"918\":1}}],[\"为kube\",{\"1\":{\"914\":2}}],[\"为node0设置不可调度污点\",{\"1\":{\"914\":1}}],[\"为例\",{\"1\":{\"864\":1}}],[\"为例子讲解第一种\",{\"1\":{\"208\":1}}],[\"为容器重新分配一个伪输入终端\",{\"1\":{\"811\":1}}],[\"为容器指定一个名称\",{\"1\":{\"811\":1}}],[\"为我们创建的代码仓库\",{\"1\":{\"777\":1}}],[\"为我们部署的\",{\"0\":{\"547\":1}}],[\"为dotnet社区发展添砖加瓦\",{\"1\":{\"694\":1}}],[\"为成为一个优秀的工程师而努力~~\",{\"1\":{\"599\":1}}],[\"为每个提供程序选择一个规则\",{\"1\":{\"446\":1}}],[\"为每个微服务进行单独的构建\",{\"1\":{\"210\":1}}],[\"为每个微服务分开数据存储\",{\"1\":{\"210\":1}}],[\"为啥不用共享充电宝呢\",{\"1\":{\"432\":1}}],[\"为true时才会有效\",{\"1\":{\"374\":1}}],[\"为用户提供最终价值\",{\"1\":{\"210\":1}}],[\"为拷贝缓存\",{\"1\":{\"209\":1}}],[\"为原始缓存\",{\"1\":{\"209\":1}}],[\"为数据表建立索引的原则有哪些\",{\"1\":{\"206\":1}}],[\"为请求创建了一个接收者对象的链\",{\"1\":{\"202\":1}}],[\"为千八百块的至于么\",{\"1\":{\"195\":1}}],[\"为什么没有存储文件名称呢\",{\"1\":{\"778\":1}}],[\"为什么需要给分支起名字呢\",{\"1\":{\"784\":1}}],[\"为什么需要打包安装呢\",{\"1\":{\"689\":1}}],[\"为什么需要域驱动设计\",{\"1\":{\"210\":1}}],[\"为什么\",{\"1\":{\"209\":2,\"322\":1}}],[\"为什么不应该对所有的\",{\"1\":{\"208\":1}}],[\"为什么不使用多线程\",{\"1\":{\"207\":1}}],[\"为什么要做动\",{\"1\":{\"207\":1}}],[\"为什么要引入消息队列保证一致性\",{\"1\":{\"134\":1}}],[\"为什么从\",{\"0\":{\"187\":1}}],[\"为人吃苦耐劳\",{\"1\":{\"179\":1}}],[\"为\",{\"0\":{\"871\":1},\"1\":{\"164\":1,\"204\":1,\"467\":1,\"1084\":1,\"1110\":2,\"1113\":1}}],[\"为非路由参数文本\",{\"1\":{\"159\":1}}],[\"为路由参数\",{\"1\":{\"159\":1}}],[\"为了支持软件的版本生命周期\",{\"1\":{\"1129\":1}}],[\"为了支持该请求方式\",{\"1\":{\"629\":1}}],[\"为了体验和性能\",{\"1\":{\"1110\":1}}],[\"为了满足这一需要\",{\"1\":{\"941\":1}}],[\"为了详细描述这一过程\",{\"1\":{\"934\":1}}],[\"为了配置这些ingress规则\",{\"1\":{\"914\":1}}],[\"为了管理pod\",{\"1\":{\"914\":1}}],[\"为了提升拉取速度\",{\"1\":{\"805\":1}}],[\"为了提高该类库扩展性\",{\"1\":{\"573\":1}}],[\"为了提高数据库连接池的重用率\",{\"1\":{\"203\":1}}],[\"为了验证我们上述的说法\",{\"1\":{\"778\":1}}],[\"为了能更加全面的体现这款工具的特点\",{\"1\":{\"717\":1}}],[\"为了可以让微信发送消息到该代码\",{\"1\":{\"711\":1}}],[\"为了操作数据\",{\"1\":{\"677\":1}}],[\"为了简化部署\",{\"1\":{\"661\":1}}],[\"为了简化对象的初始化\",{\"1\":{\"72\":1}}],[\"为了省事\",{\"1\":{\"600\":1}}],[\"为了正确设置\",{\"1\":{\"561\":1}}],[\"为了测试效果\",{\"1\":{\"479\":1}}],[\"为了测试配置默认语言英文\",{\"1\":{\"144\":1}}],[\"为了更加直观的理解\",{\"1\":{\"436\":1}}],[\"为了解决这些问题\",{\"1\":{\"543\":1}}],[\"为了解决这个问题\",{\"1\":{\"204\":1}}],[\"为了解决对象之间的耦合度过高的问题\",{\"1\":{\"435\":1}}],[\"为了保护系统的安全性\",{\"1\":{\"1080\":1}}],[\"为了保护敏感数据在互联网传送中的安全性\",{\"1\":{\"322\":1}}],[\"为了保证两步都成功执行\",{\"1\":{\"134\":1}}],[\"为了服务的正常运行\",{\"1\":{\"215\":1}}],[\"为了预防某些功能\",{\"1\":{\"210\":1}}],[\"为了防止整个系统出现雪崩\",{\"1\":{\"210\":1}}],[\"为了防止没有成功覆盖所以我在这里进行配置\",{\"1\":{\"38\":1}}],[\"为了使在部分节点失败或者大部分节点无法通信的情况下集群仍然可用\",{\"1\":{\"209\":1}}],[\"为了使用享元模式\",{\"1\":{\"202\":1}}],[\"为了达到最快的读写速度将数据都读到内存中\",{\"1\":{\"209\":1}}],[\"为了写这部分内容\",{\"1\":{\"194\":1}}],[\"为了自己\",{\"1\":{\"190\":1}}],[\"为了加班而加班\",{\"1\":{\"188\":1}}],[\"为了方便\",{\"1\":{\"710\":1}}],[\"为了方便新读者\",{\"1\":{\"176\":1}}],[\"为了方便查看核心逻辑\",{\"1\":{\"168\":1}}],[\"为了性能考虑\",{\"1\":{\"134\":1}}],[\"为了避免更改任何状态\",{\"1\":{\"984\":1}}],[\"为了避免第二步执行失败\",{\"1\":{\"134\":1}}],[\"为了避免重复代码\",{\"1\":{\"70\":1}}],[\"为了实现高效访问\",{\"1\":{\"81\":1}}],[\"为了表示单个字符\",{\"1\":{\"78\":1}}],[\"为仓库设置单独的runner\",{\"0\":{\"7\":1}}],[\"因为公司有自己的私有包服务\",{\"1\":{\"1121\":1}}],[\"因为后面我会使用\",{\"1\":{\"1110\":1}}],[\"因为到会的安装过程中会有一步选择交换机\",{\"1\":{\"1013\":1}}],[\"因为一些笨笨的操作\",{\"1\":{\"1070\":1}}],[\"因为一些源代码信息在编译时丢失了\",{\"1\":{\"986\":1}}],[\"因为一次性提交多个文件\",{\"1\":{\"754\":1}}],[\"因为没有路由\",{\"1\":{\"944\":1}}],[\"因为没有设置认证提示错误\",{\"1\":{\"364\":1}}],[\"因为它是严格控制的\",{\"1\":{\"820\":1}}],[\"因为export导出的仅仅是容器快照\",{\"1\":{\"811\":1}}],[\"因为很多场景是不允许连外网的\",{\"1\":{\"810\":1}}],[\"因为很多功能都是基础这个功能的基础上进行的\",{\"1\":{\"736\":1}}],[\"因为在\",{\"1\":{\"938\":1}}],[\"因为在容器里面我们的项目是以80\",{\"1\":{\"806\":1}}],[\"因为在postman中默认的请求方法就是get\",{\"1\":{\"730\":1}}],[\"因为git已经开始管理这些文件了\",{\"1\":{\"799\":1}}],[\"因为gitlab\",{\"1\":{\"38\":1}}],[\"因为创建的都是vs项目\",{\"1\":{\"798\":1}}],[\"因为每个人的电脑里面都存在完整的版本库\",{\"1\":{\"798\":1}}],[\"因为每个服务都是一个工作单元\",{\"1\":{\"210\":1}}],[\"因为分支名称也是指向某个\",{\"1\":{\"786\":1}}],[\"因为postman已经给我们内置了一些常用的断言\",{\"1\":{\"739\":1}}],[\"因为支持多通道和客户端\",{\"1\":{\"696\":1}}],[\"因为工作中我也只用过简单rpc模式\",{\"1\":{\"670\":1}}],[\"因为仅仅作为演示\",{\"1\":{\"600\":1}}],[\"因为当前我并没有连接数据库\",{\"1\":{\"563\":1}}],[\"因为请求并不通过环回适配器进行代理\",{\"1\":{\"562\":1}}],[\"因为为了安全默认不允许发布后出来swagger文档\",{\"1\":{\"554\":1}}],[\"因为发布方式是release\",{\"1\":{\"540\":1}}],[\"因为我是创建一个新的虚拟机\",{\"1\":{\"1110\":1}}],[\"因为我没有企业微信等\",{\"1\":{\"698\":1}}],[\"因为我的就是\",{\"1\":{\"694\":1}}],[\"因为我使用apifox等工具可以在body中传值\",{\"1\":{\"601\":1}}],[\"因为我们依赖这三个东西\",{\"1\":{\"591\":1}}],[\"因为我们的插件基类已经引用了microsoft\",{\"1\":{\"576\":1}}],[\"因为我们要发送短信\",{\"1\":{\"575\":1}}],[\"因为我们要使用插件来替换默认实现\",{\"1\":{\"575\":1}}],[\"因为我们想是实现将容器内的80端口往外映射\",{\"1\":{\"40\":1}}],[\"因为我这是一台新的centos7服务器\",{\"1\":{\"537\":1}}],[\"因为用户和成绩一对多\",{\"1\":{\"522\":1}}],[\"因为如果使用\",{\"1\":{\"443\":1}}],[\"因为如果报错\",{\"1\":{\"130\":1}}],[\"因为大多数应用程序都是由两个或是更多的类通过彼此的合作来实现企业逻辑\",{\"1\":{\"436\":1}}],[\"因为手机厂商不同\",{\"1\":{\"433\":1}}],[\"因为手机没电且未带手机充电线出现的糗事其实不止这一件\",{\"1\":{\"432\":1}}],[\"因为本文使用到了imemorycache\",{\"1\":{\"424\":1}}],[\"因为涉及到读取请求体的操作\",{\"1\":{\"421\":1}}],[\"因为设计到读取请求体的操作\",{\"1\":{\"418\":1}}],[\"因为设置带密码的mongodb一直没成功\",{\"1\":{\"217\":1}}],[\"因为进这个过滤器的时候已经走过了model\",{\"1\":{\"403\":1}}],[\"因为使用了memorycache并且使用了懒锁来确保只会执行一次\",{\"1\":{\"378\":1}}],[\"因为session的服务端存储需要缓存\",{\"1\":{\"366\":1}}],[\"因为该字段的类型是text\",{\"1\":{\"342\":1}}],[\"因为所有数据在路由之前都必须通过网关或与网关通信\",{\"1\":{\"322\":1}}],[\"因为所有的依赖都跟程序本身在一起\",{\"1\":{\"203\":1}}],[\"因为只有单个客户端使用\",{\"1\":{\"322\":1}}],[\"因为日常的功能都有\",{\"1\":{\"320\":1}}],[\"因为这里有一个关于进程标识的启发式方法\",{\"1\":{\"983\":1}}],[\"因为这个没连上网\",{\"1\":{\"312\":1}}],[\"因为这不是我们讨论的重点\",{\"1\":{\"167\":1}}],[\"因为\",{\"1\":{\"247\":1,\"432\":1,\"782\":1}}],[\"因为有许多较小的组件\",{\"1\":{\"210\":1}}],[\"因为有可能导致运行时错误\",{\"1\":{\"128\":1}}],[\"因为写磁盘比写\",{\"1\":{\"208\":1}}],[\"因为写数据库一般会先\",{\"1\":{\"134\":1}}],[\"因为查询和索引性能将会得到显著提升\",{\"1\":{\"204\":1}}],[\"因为线程池要方便对池中的线程进行控制\",{\"1\":{\"202\":1}}],[\"因为各种不同的设备还有云计算的出现\",{\"1\":{\"140\":1}}],[\"因为操作分为两步\",{\"1\":{\"134\":1}}],[\"因为是极简版\",{\"1\":{\"811\":1}}],[\"因为是晚上6点半的火车票\",{\"1\":{\"432\":1}}],[\"因为是在创建控制器实例之前执行的\",{\"1\":{\"402\":1}}],[\"因为是基于主从\",{\"1\":{\"208\":1}}],[\"因为是\",{\"1\":{\"134\":1}}],[\"因为c\",{\"1\":{\"94\":1}}],[\"因为任何基于\",{\"1\":{\"90\":1}}],[\"因为可能在set时候被修改\",{\"1\":{\"59\":1}}],[\"因此能与基本代码一起移动\",{\"1\":{\"955\":1}}],[\"因此每个\",{\"1\":{\"943\":1}}],[\"因此对pod\",{\"1\":{\"927\":1}}],[\"因此请求经过\",{\"1\":{\"926\":1}}],[\"因此流量不会经过物理网卡进行转发\",{\"1\":{\"925\":1}}],[\"因此其类型type就是nodeport\",{\"1\":{\"923\":1}}],[\"因此可理解为nodeip就是物理机ip\",{\"1\":{\"919\":1}}],[\"因此在你每次进行提交时\",{\"1\":{\"781\":1}}],[\"因此装了该包\",{\"1\":{\"710\":1}}],[\"因此我们需要编写一个winform窗体程序\",{\"1\":{\"691\":1}}],[\"因此我们后台处理忽略静态文件\",{\"1\":{\"207\":1}}],[\"因此省略\",{\"1\":{\"673\":1}}],[\"因此依赖项标记为\",{\"1\":{\"668\":1}}],[\"因此效率很高\",{\"1\":{\"656\":1}}],[\"因此不经过eth0\",{\"1\":{\"926\":1}}],[\"因此不应该用于生产环境\",{\"1\":{\"446\":1}}],[\"因此不能被删除或者改动以展示其变更\",{\"1\":{\"204\":1}}],[\"因此加密的详细内容就需要\",{\"1\":{\"325\":1}}],[\"因此innodb建议为大部分表使用默认自增的主键作为主索引\",{\"1\":{\"206\":1}}],[\"因此结构是一致的\",{\"1\":{\"202\":1}}],[\"因此匹配不成功\",{\"1\":{\"161\":1}}],[\"因此匹配成功\",{\"1\":{\"161\":1}}],[\"因此编译器会将自动属性声明自动转换为在这种实现方式\",{\"1\":{\"62\":1}}],[\"因此它是一个自定义特性类\",{\"1\":{\"46\":1}}],[\"因此\",{\"1\":{\"33\":1,\"208\":2,\"446\":1,\"919\":1,\"977\":1,\"978\":1,\"986\":1}}],[\"因此github实际上是一个很好的展示个人实力的舞台\",{\"1\":{\"10\":1}}],[\"保留多少个日志文件\",{\"1\":{\"564\":1}}],[\"保护机制所导致\",{\"1\":{\"543\":1}}],[\"保持主分支是最新的\",{\"1\":{\"798\":1}}],[\"保持1\",{\"1\":{\"326\":1}}],[\"保持一致\",{\"1\":{\"29\":1}}],[\"保龄球水平\",{\"1\":{\"243\":1}}],[\"保证有一定的空间\",{\"1\":{\"1104\":1}}],[\"保证编译后的文件有最新文件\",{\"1\":{\"851\":2}}],[\"保证计算机正确的传输超文本文档\",{\"1\":{\"323\":1}}],[\"保证每条消息都有唯一编号且保证消息处理成功与去重表的日志同时出现\",{\"1\":{\"208\":1}}],[\"保证数据的最终一致性\",{\"1\":{\"208\":1}}],[\"保证数据库表中每一行数据的唯一性\",{\"1\":{\"206\":1}}],[\"保证消息等幂性\",{\"1\":{\"208\":1}}],[\"保证消息的唯一性\",{\"1\":{\"208\":1}}],[\"保证\",{\"1\":{\"134\":1}}],[\"保证第二步成功执行\",{\"1\":{\"134\":1}}],[\"保存好\",{\"1\":{\"1110\":1}}],[\"保存命令\",{\"1\":{\"1109\":1}}],[\"保存\",{\"1\":{\"1012\":1}}],[\"保存成word或者excel\",{\"1\":{\"1009\":1}}],[\"保存成功\",{\"1\":{\"684\":1}}],[\"保存用户获取到\",{\"1\":{\"954\":1}}],[\"保存插件加载信息\",{\"1\":{\"573\":1}}],[\"保存在安装目录\",{\"1\":{\"690\":1}}],[\"保存在文件存储等地方\",{\"1\":{\"571\":1}}],[\"保存在db\",{\"1\":{\"205\":1}}],[\"保存登陆用户必要信息\",{\"1\":{\"368\":1}}],[\"保存验证结果\",{\"1\":{\"358\":1}}],[\"保存修改\",{\"1\":{\"40\":1}}],[\"保存退出先按esc\",{\"1\":{\"1107\":1}}],[\"保存退出\",{\"1\":{\"38\":1}}],[\"保存并退出命令模式\",{\"1\":{\"1110\":1}}],[\"保存并退出\",{\"1\":{\"38\":1,\"543\":1}}],[\"该仓库的代码使用之前的代码\",{\"1\":{\"1070\":1}}],[\"该现象指出\",{\"1\":{\"984\":1}}],[\"该术语时物理学家werner\",{\"1\":{\"984\":1}}],[\"该属性获取器以字符串的形式返回实际的日期时间\",{\"1\":{\"981\":1}}],[\"该属性是否从存储层中删除\",{\"1\":{\"205\":1}}],[\"该过程并未跨节点\",{\"1\":{\"926\":1}}],[\"该veth对是由\",{\"1\":{\"926\":1}}],[\"该port非一般意义上的tcp\",{\"1\":{\"921\":1}}],[\"该工具生成\",{\"1\":{\"1037\":1}}],[\"该工具从最初支持chm文档格式开始\",{\"1\":{\"1009\":1}}],[\"该工具在\",{\"1\":{\"868\":1}}],[\"该工具的外观和感觉类似于visual\",{\"1\":{\"173\":1}}],[\"该解析器将请求转发到docker内部dns服务器当中\",{\"1\":{\"843\":1}}],[\"该命令的作用就是用于将我们之前的所有操作都记录下来\",{\"1\":{\"786\":1}}],[\"该响应体必须返会是的json\",{\"1\":{\"739\":1}}],[\"该测试号可以直接体验和测试公众平台的所有高级接口\",{\"1\":{\"710\":1}}],[\"该服务的优点是可以通过微信进行提醒\",{\"1\":{\"694\":1}}],[\"该服务是用\",{\"1\":{\"211\":1,\"1117\":1}}],[\"该窗体程序非常简单\",{\"1\":{\"691\":1}}],[\"该组件是一个收费的组件\",{\"1\":{\"682\":1}}],[\"该序列化始终小于等效的json消息\",{\"1\":{\"664\":1}}],[\"该名称用于查询时候使用\",{\"1\":{\"638\":1}}],[\"该coverlet\",{\"1\":{\"585\":1}}],[\"该xunit包引入了三个子包\",{\"1\":{\"585\":1}}],[\"该操作添加的配置项\",{\"1\":{\"582\":1}}],[\"该返回结构代表第三方包已经加载成功了\",{\"1\":{\"577\":1}}],[\"该图说明了\",{\"1\":{\"562\":1,\"563\":1}}],[\"该模块允许\",{\"1\":{\"561\":1}}],[\"该代码可以将pdf文件每页保存为一个图片\",{\"1\":{\"684\":1}}],[\"该代码会提示错误\",{\"1\":{\"523\":1}}],[\"该代码将没有作用\",{\"1\":{\"344\":1}}],[\"该示例代码配置的swagger只在development环境下显示\",{\"1\":{\"482\":1}}],[\"该方法部署的jenkins里面不包含netcore环境\",{\"1\":{\"881\":1}}],[\"该方法就是最终的调用fastreport\",{\"1\":{\"691\":1}}],[\"该方法故意为空\",{\"1\":{\"477\":1}}],[\"该方法可以是实例方法\",{\"1\":{\"203\":1}}],[\"该参数是一个名为\",{\"1\":{\"468\":2}}],[\"该参数可以作为路由参数的前缀\",{\"1\":{\"160\":1}}],[\"该配置要输出的日志最低级别和最高级别\",{\"1\":{\"447\":1}}],[\"该自由软件除了允许用户自由使用\",{\"1\":{\"248\":1}}],[\"该项目可使用\",{\"1\":{\"243\":1}}],[\"该项目在\",{\"1\":{\"243\":1}}],[\"该个人项目只能自己才看看到\",{\"1\":{\"225\":1}}],[\"该指令用于了解nginx当前状态的当前状态\",{\"1\":{\"207\":1}}],[\"该字段保存的数据格式如下\",{\"1\":{\"342\":1}}],[\"该字段没有重复值\",{\"1\":{\"206\":1}}],[\"该字段的名称由编译器生成且无法引用\",{\"1\":{\"62\":1}}],[\"该集群有20个节点\",{\"1\":{\"204\":1}}],[\"该文章再linux目录下有讲解\",{\"1\":{\"904\":1}}],[\"该文档甚至算不上是实现\",{\"1\":{\"577\":1}}],[\"该文档依然能匹配查询\",{\"1\":{\"204\":1}}],[\"该文件应与项目位于同一文件夹中\",{\"1\":{\"1037\":1}}],[\"该文件分配了100m大小\",{\"1\":{\"863\":1}}],[\"该文件会比较大\",{\"1\":{\"256\":1}}],[\"该文件要修改的配置是注释状态\",{\"1\":{\"38\":1}}],[\"该坚持就坚持\",{\"0\":{\"198\":1}}],[\"该接口不再使用\",{\"1\":{\"484\":1}}],[\"该接口仅有一个match方法\",{\"1\":{\"164\":1}}],[\"该接口的目的很简单\",{\"1\":{\"149\":1}}],[\"该中间件执行后即返回\",{\"1\":{\"157\":1}}],[\"该中间件用来执行所选择的终结点委托\",{\"1\":{\"156\":1}}],[\"该中间件会负责运行由endpointroutingmiddleware中间件选择的终结点所关联的委托\",{\"1\":{\"156\":1}}],[\"该中间件会检查应用中定义的终结点列表\",{\"1\":{\"156\":1}}],[\"该中间件的作用是根据一定规则来选择出终结点\",{\"1\":{\"156\":1}}],[\"该类中实现了网上说的价值一个亿的ai核心代码\",{\"1\":{\"711\":1}}],[\"该类用来映射上面iproviderbase实现类中配置的信息\",{\"1\":{\"573\":1}}],[\"该类库中包含一个插件服务基础类iproviderbase接口\",{\"1\":{\"573\":1}}],[\"该类库被插件服务所引用\",{\"1\":{\"573\":1}}],[\"该类能够使你能訪问多个程序集中的给定模块\",{\"1\":{\"88\":1}}],[\"该类是一个基类\",{\"1\":{\"88\":1}}],[\"该类保存给定的属性信息\",{\"1\":{\"88\":1}}],[\"该类保存给定的參数信息\",{\"1\":{\"88\":1}}],[\"该类保存给定的方法信息\",{\"1\":{\"88\":1}}],[\"该类保存给定的字段信息\",{\"1\":{\"88\":1}}],[\"该例子摘抄自\",{\"1\":{\"43\":1}}],[\"该分支的作业完成之后再和master分支合并\",{\"1\":{\"25\":1}}],[\"命中断点\",{\"1\":{\"978\":1}}],[\"命中\",{\"1\":{\"134\":1}}],[\"命名用以区分\",{\"1\":{\"1110\":1}}],[\"命名空间中用\",{\"1\":{\"941\":1}}],[\"命名空间不可删除\",{\"1\":{\"914\":1}}],[\"命名空间\",{\"1\":{\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1,\"914\":1}}],[\"命名空间名\",{\"1\":{\"98\":1}}],[\"命名空间+类名称\",{\"1\":{\"97\":1}}],[\"命名容器名称\",{\"1\":{\"37\":1,\"854\":1}}],[\"命令如下\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"命令默认不能复制目录\",{\"1\":{\"1079\":1}}],[\"命令用来复制文件或目录\",{\"1\":{\"1079\":1}}],[\"命令用于删除指定目录\",{\"1\":{\"1076\":1}}],[\"命令用于创建指定目录\",{\"1\":{\"1075\":1}}],[\"命令用于显示当前工作目录的完整路径\",{\"1\":{\"1074\":1}}],[\"命令用于切换工作目录\",{\"1\":{\"1073\":1}}],[\"命令用于回退版本\",{\"1\":{\"29\":1}}],[\"命令一定要小心\",{\"1\":{\"1078\":1}}],[\"命令显示的是文件的\",{\"1\":{\"1077\":1}}],[\"命令还可以修改目录或文件的时间\",{\"1\":{\"1077\":1}}],[\"命令可以测试虚拟机是否可以访问外网\",{\"1\":{\"1111\":1}}],[\"命令可以直接创建目录时设置文件的权限\",{\"1\":{\"1080\":1}}],[\"命令可以移动文件或目录到另一个文件后目录\",{\"1\":{\"1080\":1}}],[\"命令可以删除不需要的目录或文件\",{\"1\":{\"1078\":1}}],[\"命令可以创建一个新文件\",{\"1\":{\"1077\":1}}],[\"命令可以把这个目录变成git可以管理的仓库\",{\"1\":{\"752\":1}}],[\"命令是最常用的命令\",{\"1\":{\"1074\":1}}],[\"命令解析\",{\"1\":{\"843\":1}}],[\"命令解析如下图\",{\"1\":{\"815\":1}}],[\"命令会被docker\",{\"1\":{\"838\":1}}],[\"命令中testcommitimage\",{\"1\":{\"811\":1}}],[\"命令都输出了哪些内容呢\",{\"1\":{\"787\":1}}],[\"命令查看的话\",{\"1\":{\"786\":1}}],[\"命令创建新分支\",{\"1\":{\"786\":1}}],[\"命令所产生的也有垃圾对象\",{\"1\":{\"785\":1}}],[\"命令的帮助信息\",{\"1\":{\"1074\":1,\"1075\":1,\"1076\":1}}],[\"命令的意义一致\",{\"1\":{\"784\":1}}],[\"命令的时候\",{\"1\":{\"778\":1,\"780\":1,\"781\":1,\"786\":1}}],[\"命令提交之后\",{\"1\":{\"782\":1}}],[\"命令之后\",{\"1\":{\"781\":1,\"787\":1}}],[\"命令将工作区提交到暂存区\",{\"1\":{\"781\":1}}],[\"命令将其修改内容保存至暂存区的话\",{\"1\":{\"780\":1}}],[\"命令将新文件添加到暂存区的时候\",{\"1\":{\"780\":1}}],[\"命令将文件从工作区添加到暂存区里面\",{\"1\":{\"778\":1}}],[\"命令后生成相关的\",{\"1\":{\"780\":1}}],[\"命令来显示一个文件的属性以及文件所属的用户和组\",{\"1\":{\"1081\":1}}],[\"命令来启动\",{\"1\":{\"865\":1}}],[\"命令来创建新分支的\",{\"1\":{\"786\":1}}],[\"命令来查看\",{\"1\":{\"779\":1}}],[\"命令来拼装\",{\"1\":{\"779\":1}}],[\"命令来使新的配置生效\",{\"1\":{\"547\":1}}],[\"命令让\",{\"1\":{\"778\":1}}],[\"命令简述\",{\"1\":{\"554\":1,\"812\":1}}],[\"命令执行的中途停顿了\",{\"1\":{\"538\":1}}],[\"命令说明\",{\"1\":{\"380\":1,\"385\":1,\"811\":2,\"853\":1,\"856\":1}}],[\"命令行创建单元测试项目\",{\"1\":{\"588\":1}}],[\"命令行参数\",{\"1\":{\"389\":1}}],[\"命令行\",{\"0\":{\"277\":1}}],[\"命令需要在包的目录下执行\",{\"1\":{\"213\":1,\"1119\":1}}],[\"命令语法格式具体如下\",{\"1\":{\"29\":1}}],[\"命令\",{\"0\":{\"29\":1,\"1086\":1},\"1\":{\"254\":3,\"256\":1,\"501\":1,\"543\":1,\"752\":3,\"775\":1,\"777\":1,\"778\":1,\"781\":1,\"782\":1,\"784\":1,\"785\":1,\"797\":2,\"862\":2,\"872\":1,\"946\":1,\"1109\":2,\"1110\":1,\"1111\":1}}],[\"后一个段要不一样\",{\"1\":{\"1107\":1}}],[\"后接欲修改的时间\",{\"1\":{\"1077\":1}}],[\"后接欲修改的日期\",{\"1\":{\"1077\":1}}],[\"后者是在容器停止前执行\",{\"1\":{\"914\":1}}],[\"后者用于检查容器状态是否正常\",{\"1\":{\"914\":1}}],[\"后者接收到客户端指令并执行\",{\"1\":{\"805\":1}}],[\"后才强制停止依然还在运行的进程\",{\"1\":{\"914\":1}}],[\"后指定继承于哪个容器\",{\"1\":{\"816\":1}}],[\"后续的版本多少会有一些差异\",{\"1\":{\"957\":1}}],[\"后续用到查文档就行啦\",{\"1\":{\"849\":1}}],[\"后续需要执行\",{\"1\":{\"847\":1}}],[\"后续我们自己制作镜像的时候就明白了\",{\"1\":{\"810\":1}}],[\"后续其他环境直接根据镜像启动即可\",{\"1\":{\"806\":1}}],[\"后续其他操作也不再需要密码\",{\"1\":{\"802\":1}}],[\"后续会专门整理文章分享\",{\"1\":{\"805\":1}}],[\"后续\",{\"1\":{\"785\":1}}],[\"后续沟通就无障碍\",{\"1\":{\"534\":1}}],[\"后继承的应用的配置覆盖前面的应用\",{\"1\":{\"661\":1}}],[\"后台运\",{\"1\":{\"1012\":1}}],[\"后台运行容器\",{\"1\":{\"811\":1}}],[\"后台运行\",{\"1\":{\"37\":1,\"554\":1,\"853\":1,\"854\":1}}],[\"后台模式运行\",{\"1\":{\"806\":1}}],[\"后台处理打印请求\",{\"1\":{\"693\":1}}],[\"后台的请求次数就明显增多了\",{\"1\":{\"207\":1}}],[\"后端包含一个\",{\"1\":{\"942\":1}}],[\"后端是高度动态的\",{\"1\":{\"938\":1}}],[\"后端的实例提供统一的访问入口\",{\"1\":{\"919\":1}}],[\"后端代理了2个pod实例\",{\"1\":{\"918\":1}}],[\"后端httpclient请求成功后返回过来的结果\",{\"1\":{\"616\":1}}],[\"后端请求\",{\"0\":{\"604\":1,\"609\":1,\"613\":1,\"617\":1,\"622\":1,\"627\":1,\"632\":1}}],[\"后端请求的方法我使用的是httpclient\",{\"1\":{\"600\":1}}],[\"后端对这种类型的请求处理也复杂一些\",{\"1\":{\"569\":1}}],[\"后端\",{\"1\":{\"207\":1,\"938\":1}}],[\"后端框架\",{\"1\":{\"180\":1}}],[\"后到达磁盘\",{\"1\":{\"205\":1}}],[\"后来注册的会优先被读取到\",{\"1\":{\"389\":1}}],[\"后来终于反应过来\",{\"1\":{\"312\":1}}],[\"后来改为\",{\"1\":{\"268\":1}}],[\"后来明白了\",{\"1\":{\"195\":1}}],[\"后来找个借口就溜了\",{\"1\":{\"193\":1}}],[\"后来琢磨了一下\",{\"1\":{\"183\":1}}],[\"后删除缓存\",{\"1\":{\"134\":2}}],[\"后\",{\"1\":{\"134\":1}}],[\"后更新缓存\",{\"1\":{\"134\":2}}],[\"后更新数据库\",{\"1\":{\"134\":5}}],[\"后缀名为\",{\"1\":{\"849\":1}}],[\"后缀\",{\"1\":{\"46\":1,\"94\":3}}],[\"后面会介绍\",{\"1\":{\"1110\":1}}],[\"后面自定义的虚拟机属性不能超过这些限制\",{\"1\":{\"1110\":1}}],[\"后面指定参数\",{\"1\":{\"838\":1}}],[\"后面至少跟一个参数\",{\"1\":{\"818\":1}}],[\"后面可以跟一个或多个容器id\",{\"1\":{\"811\":2}}],[\"后面可以跟名称或镜像id\",{\"1\":{\"810\":1}}],[\"后面可以更改\",{\"1\":{\"22\":1}}],[\"后面跟镜像名和tag即可\",{\"1\":{\"810\":1}}],[\"后面跟着请求的uri和协议的版本号格式如下\",{\"1\":{\"323\":1}}],[\"后面直接根镜像名称即可\",{\"1\":{\"810\":1}}],[\"后面就是保存该值\",{\"1\":{\"745\":1}}],[\"后面的命令是自动确认的\",{\"1\":{\"1021\":1}}],[\"后面的部分就叫查询参数\",{\"1\":{\"728\":1}}],[\"后面的端口为镜像开放的端口\",{\"1\":{\"380\":1,\"385\":1,\"856\":1}}],[\"后面的面试过程也很顺利\",{\"1\":{\"186\":1}}],[\"后面让你提供银行流水\",{\"1\":{\"195\":1}}],[\"后面高潮就来了\",{\"1\":{\"193\":1}}],[\"后面追加\",{\"1\":{\"159\":1}}],[\"后面我会详细给出对应的解决方案\",{\"1\":{\"134\":1}}],[\"后面慢慢解释\",{\"1\":{\"21\":1}}],[\"挂载点\",{\"1\":{\"1110\":3}}],[\"挂载点就相当于\",{\"1\":{\"1110\":1}}],[\"挂载在\",{\"1\":{\"926\":1}}],[\"挂载到pod中\",{\"1\":{\"914\":1}}],[\"挂载数据卷\",{\"1\":{\"827\":2,\"837\":1}}],[\"挂载数据卷的容器\",{\"1\":{\"814\":1}}],[\"挂载卷继承于testvolumesfromcentos\",{\"1\":{\"816\":1}}],[\"挂载卷等操作\",{\"1\":{\"809\":1}}],[\"挂载的数据不会被删除\",{\"1\":{\"815\":1}}],[\"挂载的卷等信息都有\",{\"1\":{\"811\":1}}],[\"挂载\",{\"1\":{\"37\":1,\"854\":1}}],[\"用於目录的复制行为\",{\"1\":{\"1079\":1}}],[\"用一个对象完成了这个过程\",{\"1\":{\"936\":1}}],[\"用limitrange设置默认值\",{\"1\":{\"914\":1}}],[\"用到的都是常规的几个命令\",{\"1\":{\"865\":1}}],[\"用到的工具是finalshell\",{\"1\":{\"806\":1}}],[\"用明白了\",{\"1\":{\"806\":1}}],[\"用记事本打开id\",{\"1\":{\"802\":1}}],[\"用的正是\",{\"1\":{\"863\":1}}],[\"用的是正则\",{\"1\":{\"800\":1}}],[\"用的时候\",{\"1\":{\"739\":1}}],[\"用起来更简单方便\",{\"1\":{\"868\":1}}],[\"用起来与其它的版本控制系统非常相似\",{\"1\":{\"776\":1}}],[\"用起来就会知其所以然\",{\"1\":{\"776\":1}}],[\"用例分类管理\",{\"1\":{\"736\":1}}],[\"用\",{\"1\":{\"596\":4,\"850\":1,\"870\":1,\"941\":1}}],[\"用content\",{\"1\":{\"323\":1}}],[\"用管理员身份打开cmd\",{\"1\":{\"278\":1}}],[\"用它的实例来做\",{\"1\":{\"243\":1}}],[\"用法如下\",{\"1\":{\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1}}],[\"用法\",{\"1\":{\"210\":1}}],[\"用来存储私有docker\",{\"1\":{\"914\":1}}],[\"用来存储密码\",{\"1\":{\"914\":1}}],[\"用来访问kubernetes\",{\"1\":{\"914\":1}}],[\"用来实现从ci服务器发布release到物理服务器中的vm\",{\"1\":{\"880\":1}}],[\"用来实现对象之间的\",{\"1\":{\"435\":1}}],[\"用来生成\",{\"1\":{\"682\":1}}],[\"用来生成初始配置文件\",{\"1\":{\"546\":1}}],[\"用来将configurations的配置映射到模型\",{\"1\":{\"575\":1}}],[\"用来定位和加载依赖项\",{\"1\":{\"570\":1}}],[\"用来杀死进程的信号\",{\"1\":{\"564\":1}}],[\"用来表示supervisor进程启动的这个的名称\",{\"1\":{\"564\":2}}],[\"用来获取api版本信息\",{\"1\":{\"493\":1}}],[\"用来和其他表建立联系用的\",{\"1\":{\"206\":1}}],[\"用来保证数据完整性\",{\"1\":{\"206\":1}}],[\"用来控制内存的使用\",{\"1\":{\"204\":1}}],[\"用以缩小查询范围的字段上建立索引\",{\"1\":{\"206\":1}}],[\"用户超额后禁止创建新的资源\",{\"1\":{\"914\":1}}],[\"用户也可以自定义bridge网络\",{\"1\":{\"839\":1}}],[\"用户和docker主机交互的主要方式\",{\"1\":{\"805\":1}}],[\"用户上传头像功能\",{\"1\":{\"745\":1}}],[\"用户首次使用时先安装客户端\",{\"1\":{\"690\":1}}],[\"用户列表\",{\"1\":{\"676\":1}}],[\"用户头像不能为null\",{\"1\":{\"615\":1}}],[\"用户标识无效\",{\"1\":{\"630\":1}}],[\"用户标识不存在\",{\"1\":{\"611\":1,\"615\":1,\"620\":1,\"625\":1}}],[\"用户标识已经存在\",{\"1\":{\"607\":1}}],[\"用户名\",{\"1\":{\"564\":2,\"669\":1,\"671\":1,\"751\":1,\"802\":1,\"953\":1}}],[\"用户成绩表\",{\"1\":{\"515\":1}}],[\"用户表\",{\"1\":{\"515\":1}}],[\"用户控制器\",{\"1\":{\"483\":1}}],[\"用户只扫码支付即可使用\",{\"1\":{\"433\":1}}],[\"用户信息\",{\"1\":{\"401\":1,\"523\":1,\"674\":1}}],[\"用户身份是否被认证\",{\"1\":{\"401\":1}}],[\"用户登陆信息提供者\",{\"1\":{\"368\":1}}],[\"用户id\",{\"1\":{\"368\":1,\"671\":1,\"676\":1,\"677\":1,\"679\":1}}],[\"用户id可以存入nameidentifier\",{\"1\":{\"358\":1}}],[\"用户实现\",{\"1\":{\"347\":1,\"501\":1}}],[\"用户接口\",{\"1\":{\"347\":1,\"501\":1}}],[\"用户可以完全掌控数据\",{\"1\":{\"288\":1}}],[\"用户管理\",{\"0\":{\"220\":1}}],[\"用户都睡觉了\",{\"1\":{\"208\":1}}],[\"用户移除属性然后对象会重新保存\",{\"1\":{\"205\":1}}],[\"用户特征\",{\"1\":{\"193\":1}}],[\"用保存指针的方式来代替保存整个类型\",{\"1\":{\"203\":1}}],[\"用git\",{\"1\":{\"33\":2,\"799\":1}}],[\"用于指定生成包的最后一位版本号\",{\"1\":{\"1123\":1}}],[\"用于辅助生成对应环境的nuget包\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"用于为虚拟机配置虚拟网络连接\",{\"1\":{\"1110\":1}}],[\"用于登录docker以便我们后续上传镜像到自己的镜像仓库\",{\"1\":{\"1070\":1}}],[\"用于监听容器生命周期的特定事件\",{\"1\":{\"914\":1}}],[\"用于自动化各种任务\",{\"1\":{\"877\":1}}],[\"用于构建和发布nuget程序包\",{\"1\":{\"968\":1}}],[\"用于构建超少镜像\",{\"1\":{\"869\":1}}],[\"用于构建多种不同类型的应用程序\",{\"1\":{\"135\":1}}],[\"用于运行各种命令\",{\"1\":{\"865\":1}}],[\"用于各种镜像的存储\",{\"1\":{\"805\":1}}],[\"用于开发\",{\"1\":{\"804\":1}}],[\"用于和本地进行区别和校对的\",{\"1\":{\"788\":1}}],[\"用于\",{\"1\":{\"666\":1}}],[\"用于描述您的服务实现了哪些api版本\",{\"1\":{\"635\":1}}],[\"用于将持久化存储\",{\"1\":{\"914\":1}}],[\"用于将文件内容或者字符串变成这么一串加密的字符\",{\"1\":{\"778\":1}}],[\"用于将api版本控制语义添加到使用asp\",{\"1\":{\"635\":1}}],[\"用于将传出的网络流量返回给同一计算机\",{\"1\":{\"562\":1}}],[\"用于托管\",{\"1\":{\"559\":1}}],[\"用于在网络上声明某种主张的令牌\",{\"1\":{\"484\":1}}],[\"用于生成\",{\"1\":{\"479\":1,\"551\":1}}],[\"用于所有提供程序\",{\"1\":{\"446\":1}}],[\"用于降低代码之间的耦合度\",{\"1\":{\"434\":1}}],[\"用于安全的\",{\"1\":{\"325\":1}}],[\"用于减小图片的传输大小\",{\"1\":{\"322\":1}}],[\"用于限制\",{\"1\":{\"322\":1}}],[\"用于脚本的fastcgi处理程序\",{\"1\":{\"207\":1}}],[\"用于runtime\",{\"1\":{\"202\":1}}],[\"用于创建\",{\"1\":{\"165\":1}}],[\"用于根据\",{\"1\":{\"165\":1}}],[\"用于全局访问终结点列表\",{\"1\":{\"165\":1}}],[\"用于验证路由参数是否满足约束\",{\"1\":{\"164\":1}}],[\"用于向中间件管道添加终结点中间件\",{\"1\":{\"156\":1}}],[\"用于向中间件管道添加路由匹配中间件\",{\"1\":{\"156\":1}}],[\"用于条件编译\",{\"1\":{\"46\":1}}],[\"用于添加元数据\",{\"1\":{\"41\":1}}],[\"用于重置暂存区的文件与上一次的提交\",{\"1\":{\"29\":1}}],[\"用于进行打包部署\",{\"1\":{\"8\":1}}],[\"穿梭前\",{\"1\":{\"33\":1}}],[\"～数字表示\",{\"1\":{\"32\":1}}],[\"以字符形式修改文件权限\",{\"0\":{\"1085\":1}}],[\"以数字形式修改文件权限\",{\"0\":{\"1084\":1}}],[\"以一个例子说明\",{\"1\":{\"1081\":1}}],[\"以时间排序\",{\"1\":{\"1074\":1}}],[\"以选择\",{\"1\":{\"1031\":1}}],[\"以跟踪其他线程被暂停的位置\",{\"1\":{\"985\":1}}],[\"以方便查看最后一个函数调用的返回值\",{\"1\":{\"982\":1}}],[\"以后的nuget包将存放在这地址上\",{\"1\":{\"970\":1}}],[\"以后面试过程中的自我介绍也能用得上\",{\"1\":{\"179\":1}}],[\"以太网\",{\"1\":{\"950\":1}}],[\"以太坊的官方\",{\"1\":{\"253\":1}}],[\"以实现整个集群网络扁平化\",{\"1\":{\"917\":1}}],[\"以实现提升性能的\",{\"1\":{\"202\":1}}],[\"以原始值\",{\"1\":{\"914\":1}}],[\"以利用率的方式计算\",{\"1\":{\"914\":1}}],[\"以最常用的开源缓存软件\",{\"1\":{\"864\":1}}],[\"以简化安装和升级任务\",{\"1\":{\"862\":1}}],[\"以键值对的方式进行指定\",{\"1\":{\"821\":1}}],[\"以交互模式运行容器\",{\"1\":{\"811\":1}}],[\"以文件大小排序\",{\"1\":{\"1074\":1}}],[\"以文件的形式发布项目\",{\"1\":{\"835\":1}}],[\"以文件系统的形式发布项目\",{\"1\":{\"806\":1}}],[\"以文字类型消息回复\",{\"1\":{\"711\":1}}],[\"以分支的方式同时管理多个项目\",{\"1\":{\"801\":1}}],[\"以json显示\",{\"1\":{\"739\":1}}],[\"以生成强类型的服务器和客户端\",{\"1\":{\"663\":1}}],[\"以提高效率\",{\"1\":{\"535\":1}}],[\"以立即发起另一个请求\",{\"1\":{\"532\":1}}],[\"以公开交互文档\",{\"1\":{\"482\":1}}],[\"以不同的格式\",{\"1\":{\"447\":1}}],[\"以备不时之需\",{\"1\":{\"433\":1}}],[\"以text形式获取指定路径上的json对象\",{\"1\":{\"343\":1}}],[\"以空格分开\",{\"1\":{\"323\":1}}],[\"以游戏的方式开启你的\",{\"1\":{\"243\":1}}],[\"以正常的\",{\"1\":{\"208\":1}}],[\"以\",{\"1\":{\"206\":1,\"215\":1,\"799\":1,\"941\":1,\"1074\":2,\"1081\":1}}],[\"以下演示平台为linux\",{\"1\":{\"845\":1}}],[\"以下关于项目创建和发布的具体细节在第一篇最后就分享了\",{\"1\":{\"833\":1}}],[\"以下对容器的操作\",{\"1\":{\"811\":1}}],[\"以下就对这四种类型接口及如何在postman中请求进行说明\",{\"1\":{\"726\":1}}],[\"以下的文章是2年前和后来写的关于fastreport\",{\"1\":{\"689\":1}}],[\"以下的使用场景仅供参考\",{\"1\":{\"670\":1}}],[\"以下\",{\"1\":{\"666\":1}}],[\"以下示例引用nuget包\",{\"1\":{\"400\":1}}],[\"以下示例要求路由参数中必须包含字符串\",{\"1\":{\"164\":1}}],[\"以下特点使得mongodb成为最好的nosql数据库\",{\"1\":{\"205\":1}}],[\"以确保新版本不会被旧版本覆盖\",{\"1\":{\"204\":1}}],[\"以供下次使用\",{\"1\":{\"203\":1}}],[\"以允许类型的使用者提供格式化的方法\",{\"1\":{\"203\":1}}],[\"以便你可以运行\",{\"1\":{\"1037\":1}}],[\"以便尽在特定场景中触发中断\",{\"1\":{\"979\":1}}],[\"以便任何时刻都可以追踪历史或在将来的某一个时间可以还原\",{\"1\":{\"752\":1}}],[\"以便其他地方可以直接使用实例访问配置\",{\"1\":{\"661\":1}}],[\"以便它们将其所有依赖项复制到\",{\"1\":{\"577\":1}}],[\"以便让其它服务发现\",{\"1\":{\"941\":1}}],[\"以便让\",{\"1\":{\"546\":1}}],[\"以便于解释\",{\"1\":{\"530\":1}}],[\"以便替换依赖项注入容器中的默认\",{\"1\":{\"477\":1}}],[\"以便减少缓慢而且昂贵的因特网通信开销\",{\"1\":{\"322\":1}}],[\"以便当它多次接收指令时\",{\"1\":{\"210\":1}}],[\"以便支持分配\",{\"1\":{\"202\":1}}],[\"以便确定要回到未来的哪个版本\",{\"1\":{\"33\":1}}],[\"以便确定要回退到哪个版本\",{\"1\":{\"33\":1}}],[\"以上\",{\"1\":{\"863\":1}}],[\"以上是比较重要的\",{\"1\":{\"835\":1}}],[\"以上两种方式都不是很好的选择\",{\"1\":{\"812\":1}}],[\"以上只是总结了平时比较常用的命令\",{\"1\":{\"811\":1}}],[\"以上只是笔者个人对spring\",{\"1\":{\"444\":1}}],[\"以上功能也只是展示了postman的一部分功能\",{\"1\":{\"717\":1}}],[\"以上技术可以解决http障碍并促进实时通信\",{\"1\":{\"534\":1}}],[\"以上网站为演示站点\",{\"1\":{\"336\":1}}],[\"以上这些是我面试中经常碰到的现象\",{\"1\":{\"184\":1}}],[\"以上几部分最重要\",{\"1\":{\"183\":1}}],[\"以前写过一篇写简历技巧的文章\",{\"1\":{\"176\":1}}],[\"以针对url进行处理\",{\"1\":{\"162\":1}}],[\"以指示该参数是可选的\",{\"1\":{\"159\":1}}],[\"以商品为例\",{\"1\":{\"133\":1}}],[\"以及删除镜像拉取最新的镜像\",{\"1\":{\"1070\":1}}],[\"以及试着压缩你的镜像\",{\"1\":{\"872\":1}}],[\"以及如何进行状态切换的\",{\"1\":{\"783\":1}}],[\"以及其对应的大小和内容等信息\",{\"1\":{\"781\":1}}],[\"以及文件名的信息都存储到哪里去了\",{\"1\":{\"780\":1}}],[\"以及文件如何在工作区和缓存区之间同步的问题\",{\"1\":{\"780\":1}}],[\"以及需要一个gui包\",{\"1\":{\"683\":1}}],[\"以及后续会写一些在该基础之上的文章\",{\"1\":{\"550\":1}}],[\"以及进行扩展以处理增加的流量\",{\"1\":{\"535\":1}}],[\"以及兼容终结点上带版本号的方式\",{\"1\":{\"494\":1,\"498\":1}}],[\"以及项目文件进行加速\",{\"1\":{\"336\":1}}],[\"以及那部分内容首先显示等\",{\"1\":{\"323\":1}}],[\"以及将\",{\"1\":{\"304\":1}}],[\"以及\",{\"1\":{\"247\":1,\"944\":1}}],[\"以及支持外接游戏手柄\",{\"1\":{\"243\":1}}],[\"以及使用\",{\"1\":{\"243\":1}}],[\"以及自身支持节点设置从节点\",{\"1\":{\"209\":1}}],[\"以及可能遇到的问题\",{\"1\":{\"208\":1}}],[\"以及一些调优手段\",{\"1\":{\"204\":1}}],[\"以及查看每个版本的\",{\"1\":{\"170\":1}}],[\"以及参数在方法签名中的位置等\",{\"1\":{\"87\":1}}],[\"以及从此程序集中查找类型并创建该类型的实例\",{\"1\":{\"87\":1}}],[\"以及操作前后有怎样的差别\",{\"1\":{\"23\":1}}],[\"以flags特性来将枚举数值看作位标记\",{\"1\":{\"43\":1}}],[\"以此类推\",{\"1\":{\"32\":2}}],[\"上一步\",{\"1\":{\"1110\":1}}],[\"上一个接口的返回数据是下一个接口的输入参数\",{\"1\":{\"745\":1}}],[\"上一个版本是head\",{\"1\":{\"771\":1}}],[\"上一个版本\",{\"1\":{\"32\":2}}],[\"上两个选项的乘积\",{\"1\":{\"1110\":1}}],[\"上文中涉及的dockerfile文件内容如下\",{\"1\":{\"1070\":1}}],[\"上创建\",{\"1\":{\"1063\":1}}],[\"上图中可以看到\",{\"1\":{\"817\":1}}],[\"上图中的\",{\"1\":{\"810\":1}}],[\"上图中的mydockerdemo\",{\"1\":{\"806\":1}}],[\"上图中的齿轮组\",{\"1\":{\"435\":1}}],[\"上图简述\",{\"1\":{\"812\":1}}],[\"上图可以看到终端阻塞了\",{\"1\":{\"811\":1}}],[\"上图术语解释及作用\",{\"1\":{\"805\":1}}],[\"上继续修改代码提交的话\",{\"1\":{\"786\":1}}],[\"上例所示的比原始文件大\",{\"1\":{\"779\":1}}],[\"上线\",{\"1\":{\"661\":1}}],[\"上次是使用apifox升级之后就出现了这个问题\",{\"1\":{\"478\":1}}],[\"上传文件\",{\"1\":{\"954\":1}}],[\"上传文件的表单请求\",{\"0\":{\"734\":1}}],[\"上传后的图片显示在相册\",{\"1\":{\"952\":1}}],[\"上传图片结束\",{\"1\":{\"687\":1}}],[\"上传的文件\",{\"1\":{\"468\":1}}],[\"上传包时候使用\",{\"1\":{\"211\":1,\"1117\":1}}],[\"上海\",{\"1\":{\"381\":1,\"382\":2,\"386\":1,\"387\":2,\"694\":1}}],[\"上边我们已经简单了解了通过滑动过期时间和绝对过期时间来控制缓存的有效性\",{\"1\":{\"374\":1}}],[\"上下文中超出作用域时\",{\"1\":{\"981\":1}}],[\"上下文配置为使用mysql数据库提供程序\",{\"1\":{\"502\":1}}],[\"上下文\",{\"1\":{\"367\":1}}],[\"上下文集中\",{\"1\":{\"210\":1}}],[\"上看到的项目徽章都是通过\",{\"1\":{\"340\":1}}],[\"上收集数据\",{\"1\":{\"322\":1}}],[\"上的查询根上使用\",{\"1\":{\"508\":1}}],[\"上的开源驱动\",{\"1\":{\"247\":1}}],[\"上的核心代码就两个文件\",{\"1\":{\"243\":1}}],[\"上的文档时会发生什么\",{\"1\":{\"205\":1}}],[\"上重建\",{\"1\":{\"208\":1}}],[\"上\",{\"1\":{\"205\":1,\"208\":1,\"930\":1,\"944\":1,\"945\":1,\"965\":1}}],[\"上亿量级\",{\"1\":{\"204\":1}}],[\"上进这些优点\",{\"1\":{\"183\":1}}],[\"上述自定义设置完成\",{\"1\":{\"1110\":1}}],[\"上述三个因素结合起来\",{\"1\":{\"935\":1}}],[\"上述信息中该\",{\"1\":{\"918\":1}}],[\"上述操作有点类似xpath的用法省去了我查询到内存中再处理的复杂操作\",{\"1\":{\"342\":1}}],[\"上述代码的核心就是将\",{\"1\":{\"167\":1}}],[\"上述的ref和out代码不能同时出现一个类中\",{\"1\":{\"55\":1}}],[\"上声明的成员\",{\"1\":{\"119\":1}}],[\"上上上一个版本\",{\"1\":{\"32\":2}}],[\"上上一个版本是head^\",{\"1\":{\"771\":1}}],[\"上上一个版本\",{\"1\":{\"32\":2}}],[\"上面我设置的虚拟机静态\",{\"1\":{\"1113\":1}}],[\"上面我们已经安装了git并且配置了git的ssh\",{\"1\":{\"802\":1}}],[\"上面演示的软件是我学习使用的\",{\"1\":{\"1106\":1}}],[\"上面是有\",{\"1\":{\"1080\":1}}],[\"上面androidsigningstorepass项目设置的值\",{\"1\":{\"1037\":1}}],[\"上面androidsigningkeypass项目设置的值\",{\"1\":{\"1037\":1}}],[\"上面过程中\",{\"1\":{\"941\":1}}],[\"上面列出了一些比较常用的\",{\"1\":{\"852\":1}}],[\"上面构建出来的newimage镜像用到的是entrypoint\",{\"1\":{\"838\":1}}],[\"上面只是用三关键指令大概描述了从客户端到服务端的执行流程\",{\"1\":{\"805\":1}}],[\"上面只是列举了一部分使用场景\",{\"1\":{\"428\":1}}],[\"上面装满的每个集装箱\",{\"1\":{\"804\":1}}],[\"上面\",{\"1\":{\"786\":1}}],[\"上面配置好的服务名\",{\"1\":{\"564\":1}}],[\"上面那个写法会直接报错\",{\"1\":{\"522\":1}}],[\"上面有些配置也没有详细说到\",{\"1\":{\"484\":1}}],[\"上面这种方式工厂实现的方式原理是根据传入的某个参数获取一个对象\",{\"1\":{\"442\":1}}],[\"上面这段描述中的网关\",{\"1\":{\"322\":1}}],[\"上面的镜像就是一个克隆版的\",{\"1\":{\"335\":1}}],[\"上面的网络实体\",{\"1\":{\"322\":1}}],[\"上面提示安装成功点击立即重启并立即拔出安装介质\",{\"1\":{\"312\":1}}],[\"上面已经列举了什么是微服务\",{\"1\":{\"210\":1}}],[\"上面两个命令的合并\",{\"1\":{\"26\":1}}],[\"上面使用了markdown语法\",{\"1\":{\"22\":1}}],[\"当虚拟机启动时会在设置的范围内动态分配一个\",{\"1\":{\"1110\":1}}],[\"当复制多个文件时\",{\"1\":{\"1079\":1}}],[\"当文件内容被读取\",{\"1\":{\"1077\":1}}],[\"当文件内容发生变更\",{\"1\":{\"1077\":1}}],[\"当文件状态发生改变\",{\"1\":{\"1077\":1}}],[\"当文件为普通文件\",{\"1\":{\"1074\":1}}],[\"当业务逻辑处理完后\",{\"1\":{\"1063\":1}}],[\"当数据库里面的列和代码中模型的列命名不一致的时候\",{\"1\":{\"1061\":1}}],[\"当数据发生更新时\",{\"1\":{\"134\":1}}],[\"当这样的跟踪引用超出作用域时\",{\"1\":{\"981\":1}}],[\"当所有对象的属性的值发生更改时触发断点\",{\"1\":{\"978\":1}}],[\"当值发生变化时\",{\"0\":{\"978\":1}}],[\"当请求经过\",{\"1\":{\"926\":1}}],[\"当请求其它接口的时候\",{\"1\":{\"401\":1}}],[\"当ip层在处理数据发送或转发的时候\",{\"1\":{\"916\":1}}],[\"当执行更新操作时\",{\"1\":{\"914\":1}}],[\"当执行更新时\",{\"1\":{\"204\":1}}],[\"当启动容器时\",{\"1\":{\"840\":2}}],[\"当启动实例的时候用来计算numprocs的值\",{\"1\":{\"564\":1}}],[\"当docker进程启动时\",{\"1\":{\"839\":1}}],[\"当不配置直接使用右键git\",{\"1\":{\"802\":1}}],[\"当添加文件的时候\",{\"1\":{\"780\":1}}],[\"当在几个不同的范围内都申明了相同的变量时\",{\"1\":{\"740\":1}}],[\"当存在asp\",{\"1\":{\"666\":1}}],[\"当针对已加载同名程序集的\",{\"1\":{\"571\":1}}],[\"当程序退出时的退出码不是exitcodes中定义的时\",{\"1\":{\"564\":1}}],[\"当程序运行时clr会编译转换为机器代码\",{\"1\":{\"139\":1}}],[\"当进程在写它的stderr到文件描述符的时候\",{\"1\":{\"564\":3}}],[\"当进程在写它的stderr\",{\"1\":{\"564\":1}}],[\"当进程处于stderr\",{\"1\":{\"564\":4}}],[\"当进程中断的时候supervisor能自动重新启动它\",{\"1\":{\"564\":1}}],[\"当收到stop请求的时候\",{\"1\":{\"564\":2}}],[\"当supervisord启动的时候\",{\"1\":{\"564\":2}}],[\"当一个服务由自动启动修改为手动启动时执行一下就ok\",{\"1\":{\"564\":1}}],[\"当一条数据发生修改时\",{\"1\":{\"134\":1}}],[\"当初部署2\",{\"1\":{\"563\":1}}],[\"当孩子询问\",{\"1\":{\"532\":1}}],[\"当设置为true时候\",{\"1\":{\"494\":1,\"498\":1,\"638\":1,\"644\":1,\"650\":1}}],[\"当你设置一个非静态的设置器为断点时\",{\"1\":{\"978\":1}}],[\"当你安装客户端程序时\",{\"1\":{\"692\":1}}],[\"当你从github下载源码后\",{\"1\":{\"689\":1}}],[\"当你上传大于30000000字节长度的文件时候\",{\"1\":{\"615\":1}}],[\"当你在实现a的时候\",{\"1\":{\"436\":1}}],[\"当你开始调试没有符号或者源代码的\",{\"1\":{\"173\":1}}],[\"当action完成后\",{\"1\":{\"405\":2}}],[\"当系统发送未捕捉的异常时候就会触发这个方法\",{\"1\":{\"404\":1}}],[\"当传输了token\",{\"1\":{\"401\":1}}],[\"当有变化时触发回调\",{\"1\":{\"374\":1}}],[\"当缓存压缩时会优先清除优先级低的缓存项\",{\"1\":{\"373\":1}}],[\"当缓存服务器重启或者大量缓存集中在某一个时间段失效\",{\"1\":{\"209\":1}}],[\"当用户调用登录接口的时候\",{\"1\":{\"401\":1}}],[\"当用户试图访问资源时\",{\"1\":{\"359\":1}}],[\"当用户以某个连接字符串申请数据库连接时\",{\"1\":{\"203\":1}}],[\"当应用程序关闭并释放sericeprovider时候\",{\"1\":{\"345\":1}}],[\"当时我参加的校招的时候\",{\"1\":{\"338\":1}}],[\"当燃料值为\",{\"1\":{\"243\":1}}],[\"当前路径的相对位置\",{\"1\":{\"1072\":1}}],[\"当前taint\",{\"1\":{\"914\":1}}],[\"当前仓库的排除等信息\",{\"1\":{\"777\":1}}],[\"当前代码仓库的描述信息\",{\"1\":{\"777\":1}}],[\"当前代码仓库的头指针\",{\"1\":{\"777\":1}}],[\"当前代码仓库的分支指针\",{\"1\":{\"777\":1}}],[\"当前代码仓库默认钩子脚本\",{\"1\":{\"777\":1}}],[\"当前代码仓库代码的存储位置\",{\"1\":{\"777\":1}}],[\"当前代码仓库本地的配置文件\",{\"1\":{\"777\":1}}],[\"当前时间\",{\"1\":{\"694\":1}}],[\"当前服务\",{\"1\":{\"694\":1}}],[\"当前插件的配置文件\",{\"1\":{\"575\":1}}],[\"当前程序主要包含一个用户控制器\",{\"1\":{\"561\":1}}],[\"当前操作只能在控制器中使用session\",{\"1\":{\"366\":1}}],[\"当前我已经安装了mongodb\",{\"1\":{\"217\":1}}],[\"当前分支下的两个最新历史记录进行压缩\",{\"1\":{\"27\":1}}],[\"当下我们只是模拟swagger在header中传递值\",{\"1\":{\"484\":1}}],[\"当下稍微正式一点的公司都会要求前后端联调要求编写接口文档\",{\"1\":{\"216\":1}}],[\"当下优秀的缓存中间件\",{\"1\":{\"134\":1}}],[\"当某服务出现不可用或响应超时的情况时\",{\"1\":{\"210\":1}}],[\"当确认消息到达生产者应用程序\",{\"1\":{\"208\":1}}],[\"当对表进行增\",{\"1\":{\"206\":1}}],[\"当更新一个正在被迁移的块\",{\"1\":{\"205\":1}}],[\"当完成后\",{\"1\":{\"205\":1}}],[\"当失效备援\",{\"1\":{\"205\":1}}],[\"当段合并时\",{\"1\":{\"204\":1}}],[\"当删除请求发送后\",{\"1\":{\"204\":1}}],[\"当\",{\"1\":{\"204\":1,\"209\":1,\"914\":2}}],[\"当分片所在的节点接收到来自协调节点的请求后\",{\"1\":{\"204\":1}}],[\"当候选数量为两个时\",{\"1\":{\"204\":1}}],[\"当集群\",{\"1\":{\"204\":1}}],[\"当链表上的一个委托被回调时\",{\"1\":{\"203\":1}}],[\"当比较两个值类型时\",{\"1\":{\"203\":1}}],[\"当http请求到达时\",{\"1\":{\"162\":1}}],[\"当url为\",{\"1\":{\"161\":2,\"165\":1}}],[\"当未匹配到终结点时\",{\"1\":{\"157\":1}}],[\"当路由匹配到了终结点时\",{\"1\":{\"157\":1}}],[\"当访问了某些页面后\",{\"1\":{\"322\":1}}],[\"当访问其他不匹配的url时\",{\"1\":{\"157\":1}}],[\"当访问\",{\"1\":{\"157\":1,\"919\":1}}],[\"当做\",{\"1\":{\"134\":1}}],[\"当操作数据库和缓存完成之前\",{\"1\":{\"134\":1}}],[\"当然最好选择所处区域站点的镜像\",{\"1\":{\"1110\":1}}],[\"当然还有另外的写法\",{\"1\":{\"1061\":1}}],[\"当然容器内部也可以ping通主机\",{\"1\":{\"840\":1}}],[\"当然肯定不是一个一个的拷贝镜像id\",{\"1\":{\"810\":1}}],[\"当然也有一些界面管理工具\",{\"1\":{\"807\":1}}],[\"当然也可以把查询参数在params中输入\",{\"1\":{\"730\":1}}],[\"当然也可以根据地理位置的临近情况来选择父代理\",{\"1\":{\"322\":1}}],[\"当然钱能解决一切问题\",{\"1\":{\"693\":1}}],[\"当然需要你在打包项目中做一些设置\",{\"1\":{\"692\":1}}],[\"当然我放在github上的源码你\",{\"1\":{\"691\":1}}],[\"当然你也可以使用其他模式\",{\"1\":{\"1110\":1}}],[\"当然你也可以使用wpf来实现\",{\"1\":{\"691\":1}}],[\"当然你也可以根据需要选择其他语言\",{\"1\":{\"1110\":1}}],[\"当然你可以任意方式实现让打印机开始\",{\"1\":{\"689\":1}}],[\"当然这个只是基本的操作\",{\"1\":{\"364\":1}}],[\"当然在某些情况下\",{\"1\":{\"204\":1}}],[\"当然可以接受\",{\"1\":{\"188\":1}}],[\"当然\",{\"1\":{\"134\":1,\"188\":1,\"547\":1,\"690\":1,\"717\":1,\"1020\":1}}],[\"当发生\",{\"1\":{\"134\":1}}],[\"当属\",{\"1\":{\"134\":1}}],[\"当使用\",{\"1\":{\"160\":2}}],[\"当使用sortedlist的时候\",{\"1\":{\"125\":1}}],[\"当使用区域名称\",{\"1\":{\"124\":1}}],[\"当编译程序集或者模块时\",{\"1\":{\"86\":1}}],[\"当我们编写完代码之后\",{\"1\":{\"789\":1}}],[\"当我们通过命令查看\",{\"1\":{\"788\":1}}],[\"当我们切换到指定的\",{\"1\":{\"786\":1}}],[\"当我们切换分支的时候\",{\"1\":{\"781\":1}}],[\"当我们从\",{\"1\":{\"784\":1}}],[\"当我们查看\",{\"1\":{\"782\":1}}],[\"当我们再次对\",{\"1\":{\"782\":1}}],[\"当我们直接查看\",{\"1\":{\"780\":1}}],[\"当我们执行如下命令\",{\"1\":{\"788\":1}}],[\"当我们执行\",{\"1\":{\"780\":2,\"781\":1,\"787\":1}}],[\"当我们常见一个比较大的文件时\",{\"1\":{\"779\":1}}],[\"当我们使用上述命令来关联远程服务器仓库的时候\",{\"1\":{\"788\":1}}],[\"当我们使用命令去查看文件状态的时候\",{\"1\":{\"780\":1}}],[\"当我们使用\",{\"1\":{\"779\":1,\"780\":1,\"781\":1}}],[\"当我们使用工具对上述文件内容进行\",{\"1\":{\"779\":1}}],[\"当我们在一个collection中编写了很多的接口测试用例\",{\"1\":{\"737\":1}}],[\"当我们对一个或多个系统中的很多用例进行维护时\",{\"1\":{\"736\":1}}],[\"当我们对某个文件的内容进行了修改并且已经执行git\",{\"1\":{\"32\":1}}],[\"当我想要取得用户信息的时候\",{\"1\":{\"43\":1}}],[\"再执行service\",{\"1\":{\"1109\":1}}],[\"再使用systemctl\",{\"1\":{\"1109\":1}}],[\"再使用看下效果的第一条命令是扫描你全部系统文件并和官方系统文件对比\",{\"1\":{\"1024\":1}}],[\"再修改文件时间\",{\"1\":{\"1077\":1}}],[\"再修改dotnet\",{\"1\":{\"1070\":1}}],[\"再做\",{\"1\":{\"1063\":1}}],[\"再按上\",{\"1\":{\"965\":1}}],[\"再写到\",{\"1\":{\"931\":1}}],[\"再转发到后端endpoints\",{\"1\":{\"929\":1}}],[\"再制作成\",{\"1\":{\"870\":1}}],[\"再让我们来对比下原生的\",{\"1\":{\"863\":1}}],[\"再把这个大文件删除\",{\"1\":{\"863\":1}}],[\"再将本地库推送到远程库\",{\"1\":{\"798\":1}}],[\"再进行提交\",{\"1\":{\"786\":1}}],[\"再进行建仓\",{\"1\":{\"21\":1}}],[\"再比如说\",{\"1\":{\"744\":1}}],[\"再附上一个将pdf转图片的代码吧\",{\"1\":{\"684\":1}}],[\"再加上今天朋友发了一个pdf格式的文件需要我帮忙转换为word格式的文件\",{\"1\":{\"682\":1}}],[\"再通过配置文件\",{\"1\":{\"443\":1}}],[\"再通过git\",{\"1\":{\"27\":1}}],[\"再走onchallenge\",{\"1\":{\"364\":1}}],[\"再由\",{\"1\":{\"325\":1}}],[\"再到国内的爱奇艺\",{\"1\":{\"307\":1}}],[\"再谈android的许可证\",{\"1\":{\"253\":1}}],[\"再发布\",{\"1\":{\"251\":1}}],[\"再用\",{\"1\":{\"209\":1}}],[\"再次确认我们的安装信息\",{\"1\":{\"1104\":1}}],[\"再次提交\",{\"1\":{\"769\":1}}],[\"再次提交修改后的文件到仓库\",{\"1\":{\"769\":1}}],[\"再次感谢kklldog大佬的开源项目\",{\"1\":{\"661\":1}}],[\"再次启动调用接口可以看到日志中输出了\",{\"1\":{\"575\":1}}],[\"再次启动项目查看界面\",{\"1\":{\"483\":1}}],[\"再次运行查询接口数据已经为空了\",{\"1\":{\"558\":1}}],[\"再次运行asp\",{\"1\":{\"543\":1}}],[\"再次暂停2秒\",{\"1\":{\"372\":1}}],[\"再次请求\",{\"1\":{\"364\":1}}],[\"再次访问为403资源不可用\",{\"1\":{\"364\":1}}],[\"再次访问获取用户信息接口\",{\"1\":{\"364\":1}}],[\"再次创建\",{\"1\":{\"208\":1}}],[\"再次将消息分发给其他的消费者\",{\"1\":{\"208\":1}}],[\"再给生产者发送一个ack信号\",{\"1\":{\"208\":1}}],[\"再想想那么多10微秒的操作时延累加起来\",{\"1\":{\"204\":1}}],[\"再说了\",{\"1\":{\"201\":1}}],[\"再说一个技巧\",{\"1\":{\"178\":1}}],[\"再一方面\",{\"1\":{\"198\":1}}],[\"再报给\",{\"1\":{\"197\":1}}],[\"再放到简历中去\",{\"1\":{\"183\":1}}],[\"再额外说一下新人怎么写简历\",{\"1\":{\"183\":1}}],[\"再调用useendpoints\",{\"1\":{\"156\":1}}],[\"再\",{\"1\":{\"134\":1}}],[\"再操作缓存\",{\"1\":{\"134\":1}}],[\"再经过一系列\",{\"1\":{\"134\":1}}],[\"再更新缓存\",{\"1\":{\"134\":1}}],[\"再更新数据库\",{\"1\":{\"134\":4}}],[\"再来看数据一致性问题\",{\"1\":{\"134\":1}}],[\"再删除缓存\",{\"1\":{\"134\":8}}],[\"代表了三个不同的阶段\",{\"1\":{\"879\":1}}],[\"代表读写\",{\"1\":{\"816\":1}}],[\"代表只读\",{\"1\":{\"816\":1}}],[\"代表强制删除\",{\"1\":{\"810\":1}}],[\"代表某个时间点的状态\",{\"1\":{\"27\":1}}],[\"代理自动发现协议\",{\"1\":{\"322\":1}}],[\"代理发现\",{\"1\":{\"322\":1}}],[\"代理层次结构中的代理服务器被赋予了父和子的关系\",{\"1\":{\"322\":1}}],[\"代理其实也像\",{\"1\":{\"322\":1}}],[\"代理除了能够假扮客户端之外\",{\"1\":{\"322\":1}}],[\"代理缓存能够维护常用网站的本地副本\",{\"1\":{\"322\":1}}],[\"代理也叫做\",{\"1\":{\"322\":1}}],[\"代理的层次结构却不一定非得是静态的\",{\"1\":{\"322\":1}}],[\"代理的正是\",{\"1\":{\"322\":1}}],[\"代理的功能主要有下面几点\",{\"1\":{\"322\":1}}],[\"代理可以分为很多种\",{\"1\":{\"322\":1}}],[\"代理连接的是两个或者多个使用相同协议的应用程序\",{\"1\":{\"322\":1}}],[\"代理和网关最大的区别就是网关不会进行数据的过滤\",{\"1\":{\"322\":1}}],[\"代理还会隐藏你主机的真实\",{\"1\":{\"322\":1}}],[\"代理还能够提升网络带宽\",{\"1\":{\"322\":1}}],[\"代理服务器在将内容发送给客户端之前\",{\"1\":{\"322\":1}}],[\"代理服务器也可以充当防火墙的角色\",{\"1\":{\"322\":1}}],[\"代理服务器能够访问一些网站\",{\"1\":{\"322\":1}}],[\"代理服务器分别扮演不同的职责\",{\"1\":{\"322\":1}}],[\"代理服务器可以为许多客户端提供代理服务\",{\"1\":{\"322\":1}}],[\"代理服务器会直接返回缓冲区缓冲之后的页面\",{\"1\":{\"322\":1}}],[\"代理服务器会存储一部分带宽\",{\"1\":{\"322\":1}}],[\"代理服务器就会缓存这些页面\",{\"1\":{\"322\":1}}],[\"代理通常位于服务器和客户端之间\",{\"1\":{\"322\":1}}],[\"代理\",{\"1\":{\"322\":6}}],[\"代码国度\",{\"1\":{\"1085\":1,\"1113\":1}}],[\"代码对齐可帮助您精美地呈现代码\",{\"1\":{\"968\":1}}],[\"代码提示\",{\"1\":{\"968\":1}}],[\"代码重构提示插件\",{\"1\":{\"968\":1}}],[\"代码地址如下\",{\"1\":{\"852\":1}}],[\"代码来获取二进制\",{\"1\":{\"779\":1}}],[\"代码同步与分支管理\",{\"1\":{\"720\":1}}],[\"代码中发送请求\",{\"1\":{\"720\":1}}],[\"代码中使用\",{\"1\":{\"446\":1}}],[\"代码仓库地址\",{\"1\":{\"694\":1}}],[\"代码优先\",{\"1\":{\"501\":1}}],[\"代码检查\",{\"1\":{\"321\":1}}],[\"代码颜色主题\",{\"1\":{\"321\":1}}],[\"代码上开发商业软件发布和销售\",{\"1\":{\"252\":1}}],[\"代码简单易懂\",{\"1\":{\"243\":1}}],[\"代码有注释\",{\"1\":{\"243\":1}}],[\"代码如下\",{\"1\":{\"215\":1,\"406\":1}}],[\"代码\",{\"1\":{\"10\":1}}],[\"回顾一下前面的内容\",{\"1\":{\"944\":1}}],[\"回顾下整个操作的过程\",{\"1\":{\"22\":1}}],[\"回到用户的主目录\",{\"1\":{\"1073\":1}}],[\"回到今天的话题\",{\"1\":{\"812\":1}}],[\"回到主机\",{\"1\":{\"811\":2}}],[\"回到某个状态\",{\"1\":{\"27\":1}}],[\"回发现多了两行\",{\"1\":{\"775\":1}}],[\"回复以文字形式发送的信息\",{\"1\":{\"711\":1}}],[\"回滚操作\",{\"1\":{\"661\":1,\"914\":1}}],[\"回调函数\",{\"1\":{\"375\":1}}],[\"回调函数输出\",{\"1\":{\"373\":1}}],[\"回收进程如何工作的\",{\"1\":{\"209\":1}}],[\"回收在过期集合的键\",{\"1\":{\"209\":1}}],[\"回收随机的键使得新添加的数据有空间存放\",{\"1\":{\"209\":2}}],[\"回收站只维护一个实例\",{\"1\":{\"202\":1}}],[\"回收站\",{\"1\":{\"202\":1}}],[\"回答的时候\",{\"1\":{\"189\":1}}],[\"回退到git入门\",{\"1\":{\"32\":1}}],[\"回退到所有内容的上一个版本\",{\"1\":{\"32\":1}}],[\"回退到指定版本\",{\"1\":{\"31\":1,\"32\":1}}],[\"回退到上上上个版本\",{\"1\":{\"30\":1,\"31\":1}}],[\"回退到上个版本\",{\"1\":{\"30\":1}}],[\"回溯到指定状态\",{\"1\":{\"27\":1}}],[\"图床配置中添加如下自定义域名即可\",{\"1\":{\"953\":1}}],[\"图床工具\",{\"1\":{\"951\":1}}],[\"图中展示了使用flannel实现跨节点通信的方式\",{\"1\":{\"928\":1}}],[\"图中挂在eth0和ethx上\",{\"1\":{\"927\":1}}],[\"图中演示了\",{\"1\":{\"926\":1}}],[\"图中的\",{\"1\":{\"926\":1}}],[\"图上显示是容器中的eth0\",{\"1\":{\"926\":1}}],[\"图形化的软件中可以指一个窗口或一个菜单等\",{\"1\":{\"593\":1}}],[\"图吧工具箱\",{\"0\":{\"272\":1}}],[\"图的形式查看分支\",{\"1\":{\"26\":1}}],[\"图片图标可以插入图片\",{\"1\":{\"1031\":1}}],[\"图片助手\",{\"0\":{\"1002\":1},\"1\":{\"1002\":1}}],[\"图片来源于网络\",{\"1\":{\"807\":1}}],[\"图片来源自\",{\"1\":{\"345\":1,\"346\":1,\"347\":1}}],[\"图片文件流\",{\"1\":{\"616\":1}}],[\"图片时\",{\"1\":{\"322\":1}}],[\"图片\",{\"1\":{\"10\":1,\"12\":1,\"13\":1,\"18\":1,\"19\":2,\"21\":1,\"22\":4,\"25\":2,\"26\":1,\"27\":1,\"32\":1,\"134\":7,\"162\":1,\"163\":1,\"247\":1,\"322\":6,\"717\":1,\"722\":2,\"723\":1,\"724\":1,\"730\":1,\"732\":1,\"733\":1,\"734\":2,\"735\":3,\"736\":4,\"737\":3,\"738\":3,\"739\":2,\"741\":2,\"742\":2,\"743\":1,\"744\":2,\"745\":1,\"778\":3,\"779\":2,\"780\":4,\"781\":4,\"782\":3,\"783\":2,\"784\":3,\"785\":2,\"786\":4,\"787\":1,\"804\":1,\"806\":8,\"809\":6,\"810\":15,\"811\":20,\"812\":6,\"815\":9,\"816\":3,\"817\":2,\"818\":2,\"834\":1,\"835\":1,\"836\":2,\"837\":5,\"838\":4,\"839\":2,\"840\":7,\"841\":1,\"842\":3,\"843\":4,\"846\":1,\"847\":1,\"851\":7,\"852\":8,\"863\":1,\"917\":1,\"926\":1,\"927\":1,\"928\":1,\"930\":1,\"931\":1,\"935\":1,\"937\":1,\"938\":1,\"941\":2,\"942\":1,\"943\":1,\"945\":2,\"978\":1,\"979\":1,\"984\":1,\"1072\":1,\"1074\":1,\"1075\":2,\"1076\":1,\"1077\":2,\"1079\":1,\"1081\":2,\"1085\":1,\"1110\":49,\"1111\":3,\"1112\":2,\"1113\":1}}],[\"切记项目目录不要带中文\",{\"1\":{\"1037\":1}}],[\"切记\",{\"1\":{\"192\":1}}],[\"切到主分支\",{\"1\":{\"26\":1}}],[\"切换工作目录\",{\"0\":{\"1073\":1}}],[\"切换编程背景图\",{\"1\":{\"968\":1}}],[\"切换断点\",{\"1\":{\"965\":1}}],[\"切换一行执行命令\",{\"1\":{\"885\":1}}],[\"切换\",{\"1\":{\"766\":1}}],[\"切换标签\",{\"0\":{\"766\":1}}],[\"切换版本请点右上角版本切换\",{\"1\":{\"494\":1}}],[\"切换剪裁\",{\"1\":{\"254\":1}}],[\"切换到主分支master\",{\"1\":{\"759\":1}}],[\"切换到创建的新分支\",{\"1\":{\"26\":1}}],[\"切换到上一个分支\",{\"1\":{\"26\":1}}],[\"切换到master分支\",{\"1\":{\"26\":1}}],[\"切换到仓库中\",{\"1\":{\"22\":1}}],[\"切换分支到\",{\"1\":{\"784\":1}}],[\"切换分支\",{\"1\":{\"26\":1,\"798\":2}}],[\"养成习惯\",{\"1\":{\"23\":1}}],[\"什么都不做\",{\"1\":{\"806\":1}}],[\"什么\",{\"1\":{\"442\":1}}],[\"什么情况下不宜建立索引\",{\"1\":{\"206\":1}}],[\"什么情况下设置了索引但无法使用\",{\"1\":{\"206\":1}}],[\"什么时候使用享元模式\",{\"1\":{\"202\":1}}],[\"什么时候使用\",{\"1\":{\"202\":1}}],[\"什么是表单\",{\"0\":{\"732\":1}}],[\"什么是查询参数\",{\"0\":{\"728\":1}}],[\"什么是单元测试\",{\"1\":{\"592\":1}}],[\"什么是多路复用呢\",{\"1\":{\"326\":1}}],[\"什么是金丝雀发布\",{\"1\":{\"210\":1}}],[\"什么是有界上下文\",{\"1\":{\"210\":1}}],[\"什么是幂等性\",{\"1\":{\"210\":1}}],[\"什么是服务降级\",{\"1\":{\"210\":1}}],[\"什么是熔断\",{\"1\":{\"210\":1}}],[\"什么是微服务架构\",{\"1\":{\"210\":1}}],[\"什么是微服务\",{\"1\":{\"210\":1}}],[\"什么是缓存雪崩\",{\"1\":{\"209\":1}}],[\"什么是缓存穿透\",{\"1\":{\"209\":1}}],[\"什么是c10k问题\",{\"1\":{\"207\":1}}],[\"什么是master或primary\",{\"1\":{\"205\":1}}],[\"什么是内存映射文件\",{\"1\":{\"203\":1}}],[\"什么是链式委托\",{\"1\":{\"203\":1}}],[\"什么是中间件\",{\"1\":{\"203\":1}}],[\"什么是dot\",{\"1\":{\"203\":1}}],[\"什么是责任链设计模式\",{\"1\":{\"202\":1}}],[\"什么是异步重试\",{\"1\":{\"134\":1}}],[\"什么是特性\",{\"1\":{\"41\":1}}],[\"什么是属性\",{\"1\":{\"41\":1}}],[\"什么人在什么时候进行了提交或者合并等\",{\"1\":{\"23\":1}}],[\"什么github\",{\"0\":{\"14\":1}}],[\"重建策略\",{\"1\":{\"914\":1}}],[\"重建缓存也是这个旧值\",{\"1\":{\"134\":1}}],[\"重点学习发布了apk\",{\"1\":{\"1037\":1}}],[\"重点讲解以下几个关键抽象概念\",{\"1\":{\"917\":1}}],[\"重点\",{\"1\":{\"739\":1}}],[\"重点就是这一句\",{\"1\":{\"576\":1}}],[\"重点查看invoke\",{\"1\":{\"167\":1}}],[\"重定向stderr到stdout\",{\"1\":{\"564\":1}}],[\"重新查询ip\",{\"1\":{\"1107\":1}}],[\"重新附加到它\",{\"1\":{\"983\":1}}],[\"重新附加到进程也适用于涉及多个进程的调试会话\",{\"1\":{\"983\":1}}],[\"重新附加到进程shift+alt+p工具被提出\",{\"1\":{\"983\":1}}],[\"重新附加到进程\",{\"0\":{\"983\":1},\"1\":{\"983\":2}}],[\"重新运行\",{\"1\":{\"737\":1}}],[\"重新运行验证失败\",{\"1\":{\"476\":1}}],[\"重新传\",{\"1\":{\"693\":1}}],[\"重新发布\",{\"1\":{\"576\":1}}],[\"重新生成\",{\"1\":{\"553\":1}}],[\"重新通过本地访问服务器地址\",{\"1\":{\"543\":1}}],[\"重新加载配置\",{\"1\":{\"543\":1}}],[\"重新设置stream到起始位置\",{\"1\":{\"402\":2,\"418\":2,\"421\":2}}],[\"重新设置为3秒后\",{\"1\":{\"372\":1}}],[\"重新启动\",{\"1\":{\"243\":1}}],[\"重新用原先的\",{\"1\":{\"208\":1}}],[\"重新请求\",{\"1\":{\"175\":1}}],[\"重复问答\",{\"1\":{\"201\":1}}],[\"重试的方案依旧不严谨\",{\"1\":{\"134\":1}}],[\"重试会一直\",{\"1\":{\"134\":1}}],[\"重试次数\",{\"1\":{\"134\":1}}],[\"重试\",{\"1\":{\"134\":3}}],[\"重载方法\",{\"0\":{\"54\":1}}],[\"重启网卡命令\",{\"1\":{\"1110\":1}}],[\"重启网络服务\",{\"1\":{\"1107\":1}}],[\"重启完成\",{\"1\":{\"1110\":1}}],[\"重启iptables服务\",{\"1\":{\"1109\":1}}],[\"重启防火墙服务使配置生效\",{\"1\":{\"1108\":1,\"1109\":1}}],[\"重启防火墙以使配置即时生效\",{\"1\":{\"542\":1}}],[\"重启电脑\",{\"1\":{\"1024\":2}}],[\"重启vs生效\",{\"1\":{\"970\":1}}],[\"重启jenkins服务\",{\"0\":{\"909\":1}}],[\"重启docker\",{\"1\":{\"862\":1,\"876\":1}}],[\"重启docker容器服务\",{\"1\":{\"8\":1}}],[\"重启容器\",{\"1\":{\"811\":1}}],[\"重启的重试次数\",{\"1\":{\"564\":1}}],[\"重启而重启\",{\"1\":{\"564\":2}}],[\"重启所有属于名为groupworker这个分组的进程\",{\"1\":{\"564\":1}}],[\"重启某个进程\",{\"1\":{\"564\":1}}],[\"重启会自动运行nginx不需要连上去输入命令\",{\"1\":{\"541\":1}}],[\"重启后\",{\"1\":{\"208\":1}}],[\"重启后也能恢复数据\",{\"1\":{\"208\":1}}],[\"重启项目也不担心\",{\"1\":{\"134\":1}}],[\"重启\",{\"0\":{\"1020\":1},\"1\":{\"134\":1,\"549\":1,\"893\":1,\"1110\":1}}],[\"重启服务器\",{\"1\":{\"948\":1}}],[\"重启服务\",{\"1\":{\"38\":1,\"1020\":1}}],[\"重要命令\",{\"0\":{\"23\":1}}],[\"文本编辑器设置\",{\"1\":{\"955\":1}}],[\"文字检查\",{\"1\":{\"215\":1}}],[\"文字说明\",{\"1\":{\"86\":1}}],[\"文章链接\",{\"1\":{\"1123\":1}}],[\"文章作者\",{\"1\":{\"1123\":1}}],[\"文章目录\",{\"1\":{\"712\":1}}],[\"文章来自\",{\"1\":{\"915\":1}}],[\"文章来自黄庆兵老师的网易蜂巢\",{\"1\":{\"875\":1}}],[\"文章来自微信公众号\",{\"1\":{\"322\":1,\"914\":1,\"933\":1}}],[\"文章来源自\",{\"1\":{\"689\":1}}],[\"文章来源自微信公众号\",{\"1\":{\"247\":1}}],[\"文章\",{\"1\":{\"215\":1,\"968\":1}}],[\"文档而无需\",{\"1\":{\"682\":1}}],[\"文档访问控制\",{\"1\":{\"322\":1}}],[\"文档操作\",{\"1\":{\"286\":1}}],[\"文档转换器\",{\"1\":{\"284\":1,\"285\":1}}],[\"文档地址\",{\"0\":{\"790\":1},\"1\":{\"242\":1,\"798\":1,\"1038\":1}}],[\"文档\",{\"1\":{\"204\":1,\"242\":2,\"497\":1,\"956\":1,\"968\":1}}],[\"文档并没有真的被删除\",{\"1\":{\"204\":1}}],[\"文档提交到缓存区\",{\"1\":{\"22\":1}}],[\"文件系统为\",{\"1\":{\"1110\":6}}],[\"文件所有者同组用户和其他用户来规定了不同的文件访问权限\",{\"1\":{\"1081\":1}}],[\"文件属性\",{\"1\":{\"1079\":1}}],[\"文件一旦被删除就不能恢复了\",{\"1\":{\"1078\":1}}],[\"文件或目录\",{\"1\":{\"1078\":1,\"1084\":1}}],[\"文件或目录会从工作区流向暂存区\",{\"1\":{\"780\":1}}],[\"文件主要有\",{\"1\":{\"1077\":1}}],[\"文件管理包括文件的复制\",{\"1\":{\"1076\":1}}],[\"文件是\",{\"1\":{\"1076\":1}}],[\"文件是一个指针\",{\"1\":{\"784\":1}}],[\"文件权限对一个系统的安全是很重要的\",{\"1\":{\"1081\":1}}],[\"文件权限是类似\",{\"1\":{\"1081\":1}}],[\"文件权限下面会讲到\",{\"1\":{\"1075\":1}}],[\"文件权限\",{\"0\":{\"1081\":1},\"1\":{\"1074\":1}}],[\"文件类型\",{\"1\":{\"1074\":1,\"1081\":1}}],[\"文件类型等进行管理下载\",{\"1\":{\"308\":1}}],[\"文件目录操作的命令\",{\"1\":{\"1071\":1}}],[\"文件都在根目录下\",{\"1\":{\"1071\":1}}],[\"文件都被配置为使用集群\",{\"1\":{\"943\":1}}],[\"文件比较\",{\"1\":{\"968\":1}}],[\"文件可以设置诸如缩进样式\",{\"1\":{\"955\":1}}],[\"文件打包\",{\"1\":{\"870\":1}}],[\"文件来配置应用程序服务\",{\"1\":{\"844\":1}}],[\"文件来存储关卡数据信息\",{\"1\":{\"243\":1}}],[\"文件内容中from\",{\"1\":{\"818\":1}}],[\"文件内容如下\",{\"1\":{\"543\":1,\"837\":1}}],[\"文件指向的是分支名称也好\",{\"1\":{\"786\":1}}],[\"文件没有指向\",{\"1\":{\"786\":1}}],[\"文件会指向某个\",{\"1\":{\"786\":1}}],[\"文件也会随即切换\",{\"1\":{\"784\":1}}],[\"文件正好\",{\"1\":{\"784\":1}}],[\"文件里面的内容\",{\"1\":{\"780\":1}}],[\"文件校验\",{\"1\":{\"779\":1}}],[\"文件生成\",{\"1\":{\"668\":1}}],[\"文件路径\",{\"1\":{\"564\":1}}],[\"文件路径自动补全\",{\"1\":{\"321\":1}}],[\"文件必须存在于已部署应用的根路径中\",{\"1\":{\"561\":1}}],[\"文件输出\",{\"0\":{\"459\":1}}],[\"文件大小\",{\"1\":{\"447\":1}}],[\"文件名称\",{\"1\":{\"1035\":6}}],[\"文件名称和\",{\"1\":{\"781\":1}}],[\"文件名自定义\",{\"1\":{\"547\":1}}],[\"文件名可以自定义\",{\"1\":{\"546\":1}}],[\"文件名\",{\"1\":{\"447\":1,\"1077\":1,\"1082\":1,\"1083\":2,\"1116\":1}}],[\"文件的创建者\",{\"1\":{\"1081\":1}}],[\"文件的操作\",{\"1\":{\"1071\":1}}],[\"文件的第一行\",{\"1\":{\"956\":1}}],[\"文件的详细信息\",{\"1\":{\"955\":1}}],[\"文件的编译语言\",{\"1\":{\"869\":1}}],[\"文件的版本\",{\"1\":{\"852\":1}}],[\"文件的话\",{\"1\":{\"788\":1}}],[\"文件的可能状态有哪些\",{\"1\":{\"783\":1}}],[\"文件的生命周期状态\",{\"0\":{\"783\":1}}],[\"文件的内容进行变更\",{\"1\":{\"782\":1}}],[\"文件的内容\",{\"1\":{\"780\":2}}],[\"文件的权限\",{\"1\":{\"564\":1}}],[\"文件的\",{\"1\":{\"446\":2,\"668\":1}}],[\"文件的日志修改前后的改动\",{\"1\":{\"22\":1}}],[\"文件的日志\",{\"1\":{\"22\":1}}],[\"文件未找到\",{\"1\":{\"446\":1}}],[\"文件加速自行部署\",{\"1\":{\"336\":1}}],[\"文件加速\",{\"0\":{\"336\":1}}],[\"文件保存为\",{\"1\":{\"304\":1}}],[\"文件同步\",{\"0\":{\"297\":1}}],[\"文件夹名\",{\"1\":{\"1109\":1}}],[\"文件夹名字就是resourcespath的名字\",{\"1\":{\"145\":1}}],[\"文件夹\",{\"1\":{\"964\":1}}],[\"文件夹隐藏助手可以对文件夹进行隐藏和伪装\",{\"1\":{\"265\":1}}],[\"文件夹隐藏助手\",{\"0\":{\"265\":1}}],[\"文件处理=\",{\"1\":{\"256\":1}}],[\"文件即可运行游戏\",{\"1\":{\"243\":1}}],[\"文件中几乎所有的内容都是虚拟机数据\",{\"1\":{\"1110\":1}}],[\"文件中包含\",{\"1\":{\"1096\":1}}],[\"文件中添加\",{\"1\":{\"956\":1}}],[\"文件中\",{\"1\":{\"931\":1,\"1082\":3}}],[\"文件中的所有文字\",{\"1\":{\"685\":1}}],[\"文件中的数据块\",{\"1\":{\"203\":1}}],[\"文件中让\",{\"1\":{\"215\":1}}],[\"文件中被标记为删除的文档将不会被写入新段\",{\"1\":{\"204\":1}}],[\"文件中被标记为删除\",{\"1\":{\"204\":2}}],[\"文件\",{\"0\":{\"870\":1,\"1091\":1},\"1\":{\"204\":1,\"304\":2,\"322\":1,\"375\":1,\"451\":1,\"778\":1,\"780\":1,\"781\":1,\"782\":1,\"784\":1,\"817\":1,\"818\":1,\"870\":1,\"955\":1,\"956\":1,\"1034\":4,\"1037\":2}}],[\"文件句柄和内存\",{\"1\":{\"204\":1}}],[\"文件还没有被上传到git远程仓库中\",{\"1\":{\"22\":1}}],[\"推出了一个\",{\"1\":{\"253\":1}}],[\"推出\",{\"1\":{\"247\":1}}],[\"推荐选择\",{\"1\":{\"1110\":1}}],[\"推荐\",{\"1\":{\"862\":1}}],[\"推荐的操作方式\",{\"1\":{\"786\":1}}],[\"推荐场景\",{\"0\":{\"664\":1}}],[\"推荐使用movaxterm\",{\"1\":{\"1106\":1}}],[\"推荐使用alpine这种类型\",{\"1\":{\"820\":1}}],[\"推荐使用\",{\"1\":{\"599\":1}}],[\"推荐该网站\",{\"1\":{\"364\":1}}],[\"推荐引入iservicescopefactory创建范围\",{\"1\":{\"355\":1}}],[\"推荐阅读蒋金楠老师的asp\",{\"1\":{\"168\":1}}],[\"推荐采用\",{\"1\":{\"134\":1}}],[\"推到master分支\",{\"1\":{\"22\":1}}],[\"推送镜像到镜像仓库\",{\"1\":{\"1070\":1}}],[\"推送的分支\",{\"1\":{\"1070\":1}}],[\"推送的时候触发\",{\"1\":{\"1070\":1}}],[\"推送的时候是两个人吧各自的修改推送给对方\",{\"1\":{\"798\":1}}],[\"推送之后\",{\"1\":{\"788\":1}}],[\"推送本地分支\",{\"1\":{\"788\":2}}],[\"推送其他分支\",{\"1\":{\"774\":1}}],[\"推送主分支\",{\"1\":{\"774\":1}}],[\"推送全部标签至远程\",{\"1\":{\"765\":1}}],[\"推送指定标签至远程\",{\"1\":{\"765\":1}}],[\"推送标签到远程仓库\",{\"0\":{\"765\":1}}],[\"推送分支内容的时候\",{\"1\":{\"788\":1}}],[\"推送分支\",{\"0\":{\"761\":1}}],[\"推送结果示例\",{\"1\":{\"706\":1}}],[\"推送渠道\",{\"0\":{\"697\":1,\"701\":1,\"705\":1}}],[\"推送内容保留时间\",{\"1\":{\"696\":1}}],[\"推送到自己的docker镜像仓库\",{\"1\":{\"1070\":1}}],[\"推送到远程服务存储库\",{\"1\":{\"798\":1}}],[\"推送到远程仓库\",{\"1\":{\"23\":1}}],[\"推送到分支a\",{\"1\":{\"23\":1}}],[\"推送到master分支下\",{\"1\":{\"23\":1}}],[\"推送到master分支\",{\"1\":{\"22\":1}}],[\"推送\",{\"0\":{\"213\":1,\"1119\":1},\"1\":{\"21\":1,\"23\":1,\"798\":3}}],[\"8u171\",{\"1\":{\"1134\":2,\"1135\":1}}],[\"8g\",{\"1\":{\"1110\":1}}],[\"8gb\",{\"1\":{\"1034\":1}}],[\"8vf55\",{\"1\":{\"1110\":1}}],[\"8带签名\",{\"1\":{\"971\":1}}],[\"8228\",{\"1\":{\"931\":1}}],[\"8118\",{\"1\":{\"931\":1}}],[\"81667781\",{\"1\":{\"915\":1}}],[\"8192\",{\"1\":{\"400\":1}}],[\"84\",{\"1\":{\"866\":1}}],[\"849425\",{\"1\":{\"511\":1}}],[\"849376\",{\"1\":{\"511\":1}}],[\"896c63dbdb96\",{\"1\":{\"863\":1}}],[\"896043488029600\",{\"1\":{\"801\":1}}],[\"8974150586715897867\",{\"1\":{\"608\":1}}],[\"861832c\",{\"1\":{\"785\":2}}],[\"8670536\",{\"1\":{\"472\":1}}],[\"8ddab99d\",{\"1\":{\"1034\":2}}],[\"8d0e41234f24b6da002d962a26c2495ea16a425f\",{\"1\":{\"779\":1}}],[\"8d0e41\",{\"1\":{\"778\":3}}],[\"8d\",{\"1\":{\"702\":1,\"778\":2,\"779\":5}}],[\"8d87c2ca238fdc4a\",{\"1\":{\"474\":1}}],[\"8b4853cc1f0f\",{\"1\":{\"1043\":1,\"1044\":1}}],[\"8b\",{\"1\":{\"702\":1}}],[\"8e\",{\"1\":{\"700\":1}}],[\"88jwh\",{\"1\":{\"973\":1}}],[\"8827\",{\"1\":{\"874\":1}}],[\"88\",{\"1\":{\"700\":1}}],[\"8xja\",{\"1\":{\"666\":1}}],[\"85\",{\"1\":{\"666\":1}}],[\"8341843\",{\"1\":{\"362\":1}}],[\"8后的默认接口方法\",{\"1\":{\"82\":1}}],[\"8位无符号整数\",{\"1\":{\"75\":1}}],[\"8位有符号整数\",{\"1\":{\"75\":1}}],[\"8\",{\"0\":{\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"191\":1,\"309\":1,\"549\":1,\"744\":1,\"827\":1,\"844\":1,\"845\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"982\":1,\"1046\":1},\"1\":{\"22\":1,\"74\":1,\"125\":1,\"202\":1,\"203\":1,\"204\":2,\"205\":1,\"206\":1,\"207\":1,\"208\":2,\"209\":1,\"210\":1,\"364\":1,\"400\":1,\"403\":1,\"442\":1,\"447\":1,\"453\":2,\"661\":1,\"865\":1,\"866\":1,\"873\":1,\"874\":1,\"919\":1,\"970\":2,\"1012\":2,\"1019\":1,\"1081\":1,\"1107\":1,\"1136\":2}}],[\"80g\",{\"1\":{\"1110\":1}}],[\"8086\",{\"1\":{\"930\":1}}],[\"8080\",{\"1\":{\"852\":1,\"885\":2,\"886\":1,\"887\":1,\"911\":1}}],[\"8012\",{\"1\":{\"899\":1,\"902\":1}}],[\"8011\",{\"1\":{\"661\":3}}],[\"8002\",{\"1\":{\"1070\":3}}],[\"8001\",{\"1\":{\"580\":1}}],[\"8009\",{\"1\":{\"217\":1,\"218\":2,\"219\":1}}],[\"8000\",{\"1\":{\"199\":2}}],[\"80\",{\"1\":{\"8\":1,\"40\":1,\"198\":1,\"211\":2,\"543\":1,\"554\":1,\"806\":2,\"828\":2,\"834\":1,\"852\":2,\"854\":2,\"899\":1,\"918\":7,\"931\":2,\"971\":1,\"1070\":3,\"1117\":2}}],[\"8060\",{\"1\":{\"8\":2,\"554\":2}}],[\"只调度到匹配指定label的node上\",{\"1\":{\"914\":1}}],[\"只允许空格\",{\"1\":{\"850\":1}}],[\"只允许一个线程查询数据和写缓存\",{\"1\":{\"209\":1}}],[\"只支持读取构建所在宿主机的资源\",{\"1\":{\"826\":1}}],[\"只存储的是文件的内容\",{\"1\":{\"778\":1}}],[\"只查看输出日志\",{\"1\":{\"738\":1}}],[\"只是留下网上的代码\",{\"1\":{\"1061\":1}}],[\"只是通过docker\",{\"1\":{\"812\":1}}],[\"只是调换一下src\",{\"1\":{\"812\":1}}],[\"只是一些辅助功能而已\",{\"1\":{\"691\":1}}],[\"只是测试控制器api\",{\"1\":{\"585\":1}}],[\"只是提交到了缓存区域\",{\"1\":{\"22\":1}}],[\"只在startup范围生效\",{\"1\":{\"582\":1}}],[\"只说了一些功能性的操作\",{\"1\":{\"484\":1}}],[\"只不过\",{\"1\":{\"322\":1}}],[\"只处理一次\",{\"1\":{\"210\":1}}],[\"只专注于当前功能\",{\"1\":{\"210\":1}}],[\"只会放在一个\",{\"1\":{\"208\":1}}],[\"只会担心将来你是不是也会这么说他\",{\"1\":{\"187\":1}}],[\"只有安装系统后才能使用\",{\"1\":{\"1110\":1}}],[\"只有命令行界面\",{\"1\":{\"1110\":1}}],[\"只有手动删除了旧的pod后才会创建新的pod\",{\"1\":{\"914\":1}}],[\"只有nfs和hostpath支持\",{\"1\":{\"914\":1}}],[\"只有\",{\"1\":{\"866\":1,\"869\":1}}],[\"只有1m多\",{\"1\":{\"863\":1}}],[\"只有最后一个会生效\",{\"1\":{\"829\":1}}],[\"只有测试号或部署到正式环境的正式服务号可用此接口\",{\"1\":{\"711\":1}}],[\"只有更改设置时才使用\",{\"1\":{\"690\":1}}],[\"只有一个异步方法onactionexecutionasync\",{\"1\":{\"403\":1}}],[\"只有一个实例去操作才好\",{\"1\":{\"202\":1}}],[\"只有消费者确认了消息\",{\"1\":{\"208\":1}}],[\"只有是候选主节点\",{\"1\":{\"204\":1}}],[\"只有了解它的工作方式\",{\"1\":{\"161\":1}}],[\"只有当obj2\",{\"1\":{\"978\":1}}],[\"只有当存在多余一个块的时候\",{\"1\":{\"205\":1}}],[\"只有当路由没有匹配到终结点时\",{\"1\":{\"157\":1}}],[\"只有当所有的检查器都返回为healthy的时候\",{\"1\":{\"151\":1}}],[\"只有当缓存\",{\"1\":{\"134\":1}}],[\"只对某一些方法进行跨域\",{\"1\":{\"155\":1}}],[\"只对面某一些控制器进行跨域\",{\"1\":{\"155\":1}}],[\"只需从右侧点击其中一个断言\",{\"1\":{\"739\":1}}],[\"只需要宿主机器能访问互联网即可\",{\"1\":{\"1110\":1}}],[\"只需要只在我们\",{\"1\":{\"953\":1}}],[\"只需要接入到自定义网络就可以通过容器名ping通了\",{\"1\":{\"843\":1}}],[\"只需要在创建\",{\"1\":{\"914\":1}}],[\"只需要在主机上修改配置文件内容即可\",{\"1\":{\"817\":1}}],[\"只需要在测试方法上标记\",{\"1\":{\"598\":1}}],[\"只需要看看fastreport\",{\"1\":{\"693\":1}}],[\"只需要下载安装上该客户端即可\",{\"1\":{\"689\":1}}],[\"只需要往容器添加服务即可\",{\"1\":{\"657\":1}}],[\"只需要提供自己需要的对象的类型相关信息即可\",{\"1\":{\"438\":1}}],[\"只需要复制当前\",{\"1\":{\"337\":1}}],[\"只需要三步\",{\"1\":{\"300\":1}}],[\"只需要配置热重载就行了\",{\"1\":{\"215\":1}}],[\"只需运行如下命令即可开始游戏\",{\"1\":{\"243\":1}}],[\"只需将文件夹复制到任何生产机器上\",{\"1\":{\"173\":1}}],[\"只需\",{\"1\":{\"134\":1}}],[\"只要在\",{\"1\":{\"955\":1}}],[\"只要在合理范围内\",{\"1\":{\"700\":1}}],[\"只要相同层级的元素左对齐即可\",{\"1\":{\"850\":1}}],[\"只要容器名一样即可\",{\"1\":{\"841\":1}}],[\"只要生成了镜像\",{\"1\":{\"806\":1}}],[\"只要配置了云服务器的安全组和防火墙放开9999端口\",{\"1\":{\"806\":1}}],[\"只要加载了依赖项\",{\"1\":{\"570\":1}}],[\"只要是操作数据库\",{\"1\":{\"529\":1}}],[\"只要是用new实例化的都是存在依赖的\",{\"1\":{\"344\":1}}],[\"只要保持幂等性\",{\"1\":{\"208\":1}}],[\"只要连接不中断\",{\"1\":{\"208\":1}}],[\"只要投递简历\",{\"1\":{\"194\":1}}],[\"只要你长得对得起观众\",{\"1\":{\"177\":1}}],[\"只要有其它请求可以进来\",{\"1\":{\"134\":1}}],[\"只要写\",{\"1\":{\"134\":1}}],[\"只要执行失败\",{\"1\":{\"134\":1}}],[\"只要第二步发生失败\",{\"1\":{\"134\":1}}],[\"只能用于构建镜像\",{\"1\":{\"869\":1}}],[\"只能最后一个命令会生效\",{\"1\":{\"838\":1}}],[\"只能在查询根上使用\",{\"1\":{\"513\":1}}],[\"只能在直接位于\",{\"1\":{\"508\":1}}],[\"只能在声明时候或者在类的构造函数中赋值\",{\"1\":{\"56\":1}}],[\"只能捕捉action异常\",{\"1\":{\"404\":1}}],[\"只能等待其\",{\"1\":{\"208\":1}}],[\"只能修改为唯一的一个\",{\"1\":{\"204\":1}}],[\"只能尽可能地降低不一致的概率\",{\"1\":{\"134\":1}}],[\"只能提供到某一个时间点上的恢复\",{\"1\":{\"133\":1}}],[\"只能施加+=\",{\"1\":{\"68\":1}}],[\"只读属性\",{\"0\":{\"60\":1}}],[\"只读修饰符\",{\"1\":{\"56\":1}}],[\"只显示名称相同的进程\",{\"1\":{\"983\":1}}],[\"只显示镜像id\",{\"1\":{\"810\":1}}],[\"只显示提交信息的第一行\",{\"1\":{\"23\":1}}],[\"只显示指定目录\",{\"1\":{\"22\":2}}],[\"只显示一行简述信息\",{\"1\":{\"22\":1}}],[\"7+\",{\"1\":{\"1008\":1}}],[\"73\",{\"1\":{\"870\":1}}],[\"730425\",{\"1\":{\"501\":1}}],[\"730302\",{\"1\":{\"501\":1}}],[\"71b1c0ad0a2b\",{\"1\":{\"868\":1}}],[\"7102045930338428\",{\"1\":{\"744\":1}}],[\"7安装docker要求系统64位\",{\"1\":{\"862\":1}}],[\"7天以后不再提供可靠性保证\",{\"1\":{\"700\":1}}],[\"7天\",{\"1\":{\"696\":1}}],[\"777\",{\"1\":{\"1109\":2}}],[\"770\",{\"1\":{\"1084\":1}}],[\"77\",{\"1\":{\"870\":1}}],[\"7742282\",{\"1\":{\"682\":1}}],[\"778101\",{\"1\":{\"511\":1,\"512\":1,\"513\":1}}],[\"7484954\",{\"1\":{\"656\":1}}],[\"789\",{\"1\":{\"591\":4,\"1081\":1}}],[\"7和windows\",{\"1\":{\"311\":1}}],[\"72\",{\"1\":{\"256\":1}}],[\"7\",{\"0\":{\"113\":1,\"114\":1,\"115\":1,\"183\":1,\"190\":1,\"201\":1,\"271\":1,\"272\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":1,\"548\":1,\"740\":1,\"826\":1,\"839\":1,\"840\":1,\"841\":1,\"842\":1,\"843\":1,\"871\":1,\"981\":1,\"1045\":1},\"1\":{\"22\":1,\"76\":1,\"179\":1,\"202\":1,\"203\":1,\"204\":2,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"364\":2,\"403\":1,\"452\":1,\"459\":1,\"537\":2,\"541\":2,\"560\":1,\"710\":1,\"862\":1,\"866\":3,\"867\":1,\"868\":1,\"870\":2,\"873\":1,\"874\":1,\"938\":1,\"949\":2,\"956\":1,\"1081\":1,\"1084\":2,\"1103\":1,\"1109\":2,\"1110\":11}}],[\"61\",{\"1\":{\"1036\":1}}],[\"61c54bbd\",{\"1\":{\"1036\":2}}],[\"6bd82b569fb65a7fb17cf62c4873a107\",{\"1\":{\"1034\":1}}],[\"6b691ad7e400\",{\"1\":{\"712\":1}}],[\"6f4c4d4f3554af09f16d64d26e8d7bffc8475afe\",{\"1\":{\"1034\":1}}],[\"6fbdd13cd204\",{\"1\":{\"863\":1}}],[\"6后提示需要安装对应的kb2919355\",{\"1\":{\"1012\":1}}],[\"6jhcy\",{\"1\":{\"973\":1}}],[\"6q8qf\",{\"1\":{\"973\":1}}],[\"6版本的行为\",{\"1\":{\"914\":1}}],[\"680f6e9\",{\"1\":{\"785\":1}}],[\"6eab91c5\",{\"1\":{\"1034\":2}}],[\"6ee808b7e2851e9b98c3c78b80038353\",{\"1\":{\"1034\":1}}],[\"6ee9\",{\"1\":{\"501\":1}}],[\"6e4a70\",{\"1\":{\"781\":3}}],[\"6e4a700\",{\"1\":{\"781\":2,\"786\":1}}],[\"6a\",{\"1\":{\"779\":1}}],[\"638p6\",{\"1\":{\"973\":1}}],[\"6379\",{\"1\":{\"380\":2,\"381\":1,\"382\":1,\"385\":2,\"386\":1,\"387\":1,\"852\":2,\"856\":2,\"870\":1}}],[\"63edf12c\",{\"1\":{\"213\":1,\"1119\":1}}],[\"666666\",{\"1\":{\"1036\":1}}],[\"6666e9\",{\"1\":{\"1036\":1}}],[\"666\",{\"1\":{\"366\":2,\"850\":2}}],[\"660853738\",{\"1\":{\"137\":1}}],[\"690\",{\"1\":{\"1012\":1}}],[\"6974150586715897859\",{\"1\":{\"621\":1,\"622\":1,\"632\":1}}],[\"6974150586715897857\",{\"1\":{\"600\":1,\"603\":1,\"612\":1,\"613\":1,\"616\":1,\"617\":1,\"631\":1}}],[\"6974150586715898000\",{\"1\":{\"478\":1}}],[\"69\",{\"1\":{\"333\":1}}],[\"64消费者版\",{\"1\":{\"1034\":1}}],[\"64gb\",{\"1\":{\"1034\":1}}],[\"64商业版\",{\"1\":{\"1034\":1}}],[\"64d6ef5\",{\"1\":{\"781\":2}}],[\"64bit\",{\"1\":{\"802\":2}}],[\"64b\",{\"1\":{\"777\":4}}],[\"64\",{\"1\":{\"205\":1,\"400\":1,\"537\":1,\"870\":11,\"1079\":1,\"1102\":1,\"1103\":1,\"1110\":6}}],[\"64mb\",{\"1\":{\"205\":1}}],[\"64位\",{\"1\":{\"76\":1}}],[\"64位无符号整数\",{\"1\":{\"75\":1}}],[\"64位有符号整数\",{\"1\":{\"75\":1}}],[\"60000\",{\"1\":{\"985\":6}}],[\"6001\",{\"1\":{\"670\":1}}],[\"60\",{\"1\":{\"153\":1,\"580\":1}}],[\"650bc09c\",{\"1\":{\"1043\":1,\"1044\":1}}],[\"65ac835abc26ea04f0cbf4b8d18f99c5633f6df9\",{\"1\":{\"1034\":1}}],[\"6592a7f121fc2dfc31f6538d56573b86\",{\"1\":{\"1034\":1}}],[\"65688f7c61c4\",{\"1\":{\"866\":1}}],[\"65\",{\"1\":{\"123\":2,\"125\":3}}],[\"6\",{\"0\":{\"95\":1,\"102\":1,\"110\":1,\"111\":1,\"112\":1,\"182\":1,\"189\":1,\"200\":1,\"269\":1,\"270\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"294\":1,\"295\":1,\"296\":1,\"297\":1,\"298\":1,\"525\":1,\"543\":1,\"656\":1,\"739\":1,\"818\":1,\"819\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":2,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":1,\"833\":1,\"834\":1,\"835\":1,\"836\":1,\"837\":1,\"838\":1,\"870\":1,\"900\":1,\"980\":1,\"1044\":1},\"1\":{\"22\":1,\"23\":1,\"134\":1,\"185\":1,\"194\":1,\"202\":1,\"203\":1,\"204\":2,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"217\":1,\"343\":1,\"358\":1,\"364\":2,\"403\":1,\"410\":1,\"413\":1,\"442\":1,\"446\":1,\"452\":1,\"474\":3,\"475\":3,\"480\":1,\"486\":1,\"488\":1,\"500\":1,\"538\":1,\"600\":3,\"629\":1,\"639\":1,\"642\":1,\"645\":1,\"648\":1,\"651\":1,\"660\":1,\"683\":1,\"710\":1,\"866\":2,\"870\":6,\"873\":1,\"874\":1,\"974\":1,\"1012\":2,\"1044\":2,\"1070\":3,\"1081\":1,\"1126\":1,\"1127\":1,\"1129\":1,\"1131\":1}}],[\"执行安装\",{\"1\":{\"1110\":1}}],[\"执行安装出错\",{\"1\":{\"862\":1}}],[\"执行apt\",{\"1\":{\"1109\":1}}],[\"执行事务相关操作\",{\"1\":{\"1047\":2}}],[\"执行查询相关操作\",{\"1\":{\"1047\":2}}],[\"执行下面的步骤创建密钥存储文件\",{\"1\":{\"1037\":1}}],[\"执行构建\",{\"1\":{\"865\":1,\"866\":1,\"870\":1}}],[\"执行构造函数\",{\"1\":{\"108\":1}}],[\"执行顺序和依赖有关系\",{\"1\":{\"852\":1}}],[\"执行如下命令即可\",{\"1\":{\"847\":1,\"848\":1}}],[\"执行如下命令看详细\",{\"1\":{\"843\":1}}],[\"执行如下命令\",{\"1\":{\"837\":1,\"840\":1,\"846\":1}}],[\"执行相关命令\",{\"1\":{\"837\":1}}],[\"执行时机同cmd\",{\"1\":{\"830\":1}}],[\"执行时序发生\",{\"1\":{\"134\":1}}],[\"执行wc\",{\"1\":{\"829\":1}}],[\"执行命令生成容器\",{\"0\":{\"887\":1}}],[\"执行命令生成密钥\",{\"1\":{\"802\":1}}],[\"执行命令docker\",{\"1\":{\"837\":1}}],[\"执行命令统计\",{\"1\":{\"829\":1}}],[\"执行命令\",{\"0\":{\"1018\":1},\"1\":{\"822\":1,\"834\":1,\"837\":1,\"949\":1}}],[\"执行命令前\",{\"1\":{\"817\":1}}],[\"执行根据镜像运行容器的命令\",{\"1\":{\"809\":1}}],[\"执行docker\",{\"1\":{\"806\":1,\"886\":1}}],[\"执行完毕之后\",{\"1\":{\"1109\":1}}],[\"执行完访问\",{\"1\":{\"796\":1}}],[\"执行完成如下命令之后\",{\"1\":{\"777\":1,\"778\":1}}],[\"执行完成了\",{\"1\":{\"777\":1,\"778\":1,\"781\":1,\"782\":1,\"784\":1,\"785\":1}}],[\"执行\",{\"1\":{\"778\":1,\"936\":1,\"1113\":1}}],[\"执行启动命令\",{\"1\":{\"564\":1}}],[\"执行存储过程\",{\"1\":{\"509\":1}}],[\"执行后\",{\"1\":{\"403\":5}}],[\"执行前\",{\"1\":{\"403\":7}}],[\"执行日志\",{\"1\":{\"403\":1}}],[\"执行我们的单元测试并查看结果\",{\"1\":{\"321\":1}}],[\"执行以下命令\",{\"1\":{\"278\":1}}],[\"执行sql语句时使用addslashes进行sql语句转换\",{\"1\":{\"206\":1}}],[\"执行该终结点的委托\",{\"1\":{\"168\":1}}],[\"执行代码\",{\"1\":{\"156\":1}}],[\"执行效率高\",{\"1\":{\"133\":1}}],[\"执行gitlab\",{\"1\":{\"40\":1}}],[\"执行了add操作\",{\"1\":{\"22\":1}}],[\"执行者参考\",{\"1\":{\"6\":1}}],[\"注释格式\",{\"1\":{\"968\":1}}],[\"注解\",{\"1\":{\"739\":3}}],[\"注销用户\",{\"0\":{\"362\":1}}],[\"注入automapper\",{\"1\":{\"600\":1}}],[\"注入模型类\",{\"0\":{\"397\":1}}],[\"注入服务\",{\"1\":{\"382\":1,\"387\":1,\"660\":1}}],[\"注入到容器\",{\"1\":{\"371\":1,\"377\":1}}],[\"注入ihttpcontextaccessor\",{\"1\":{\"367\":1,\"368\":1}}],[\"注入上下文单例模式\",{\"1\":{\"359\":1}}],[\"注入式攻击时常见的一种攻击方法\",{\"1\":{\"203\":1}}],[\"注入\",{\"0\":{\"465\":1},\"1\":{\"150\":1,\"151\":1,\"153\":1,\"377\":1}}],[\"注入容器\",{\"0\":{\"143\":1}}],[\"注\",{\"1\":{\"137\":1,\"213\":1,\"366\":1,\"463\":1,\"483\":1,\"564\":1,\"589\":1,\"665\":1,\"810\":1,\"851\":2,\"865\":1,\"868\":1,\"876\":1,\"1007\":1,\"1109\":1,\"1119\":1}}],[\"注意如果是更新用的是实体类的dbmodel\",{\"1\":{\"1043\":1,\"1044\":1}}],[\"注意通过\",{\"1\":{\"930\":1}}],[\"注意大小写\",{\"1\":{\"923\":1}}],[\"注意看红框的内容\",{\"1\":{\"694\":1}}],[\"注意两者之间有空格\",{\"1\":{\"484\":1}}],[\"注意netcore中设置缓存和缓存项大小是没有单位的\",{\"1\":{\"373\":1}}],[\"注意数据库的地址信息\",{\"1\":{\"217\":1}}],[\"注意\",{\"1\":{\"22\":1,\"46\":1,\"156\":1,\"364\":1,\"404\":1,\"405\":1,\"446\":1,\"481\":1,\"494\":1,\"499\":1,\"543\":1,\"554\":1,\"571\":1,\"583\":1,\"600\":1,\"615\":1,\"692\":1,\"711\":1,\"734\":2,\"739\":1,\"748\":1,\"799\":1,\"862\":1,\"879\":1,\"885\":1,\"889\":1,\"964\":1,\"968\":1,\"974\":1,\"978\":1,\"980\":2,\"982\":1,\"985\":1,\"1012\":1,\"1061\":1,\"1109\":1}}],[\"注册码\",{\"1\":{\"1110\":1}}],[\"注册gitee时留的名字\",{\"1\":{\"952\":1}}],[\"注册过程大致如下\",{\"1\":{\"941\":1}}],[\"注册过滤器\",{\"1\":{\"477\":1}}],[\"注册用户\",{\"0\":{\"794\":1}}],[\"注册后使用账号可以加入团队工作区\",{\"1\":{\"722\":1}}],[\"注册配置项修改事件\",{\"1\":{\"661\":1}}],[\"注册控制器\",{\"1\":{\"576\":1}}],[\"注册当前宿主服务的服务\",{\"1\":{\"574\":1,\"575\":1,\"576\":1}}],[\"注册swagger服务\",{\"0\":{\"481\":1}}],[\"注册全局过滤器\",{\"1\":{\"416\":1}}],[\"注册一个回调函数\",{\"1\":{\"374\":1}}],[\"注册缓存项被清除时的回调\",{\"1\":{\"373\":1}}],[\"注册泛型模板\",{\"1\":{\"344\":1}}],[\"注册\",{\"1\":{\"344\":1,\"710\":2,\"802\":1}}],[\"注册群组runner\",{\"0\":{\"6\":1}}],[\"注册到gitlab\",{\"0\":{\"5\":1}}],[\"注册了gitlab\",{\"1\":{\"3\":1}}],[\"和最高版本\",{\"1\":{\"1131\":1}}],[\"和虚拟机\",{\"1\":{\"1110\":1}}],[\"和网关保持一致\",{\"1\":{\"1107\":1}}],[\"和本机保持一致\",{\"1\":{\"1107\":2}}],[\"和进程名称\",{\"1\":{\"1099\":1}}],[\"和端口\",{\"1\":{\"939\":1}}],[\"和端口在\",{\"1\":{\"938\":1}}],[\"和端口等不变的部分\",{\"1\":{\"938\":1}}],[\"和端口都不会发生变化\",{\"1\":{\"937\":1}}],[\"和persistentvolumeclaim\",{\"1\":{\"914\":1}}],[\"和一个文件\",{\"1\":{\"863\":1}}],[\"和一个方法定义表等\",{\"1\":{\"86\":1}}],[\"和redis没有关系\",{\"1\":{\"851\":1}}],[\"和宿主机共用一个network\",{\"1\":{\"839\":1}}],[\"和写代码时定义的变量一样\",{\"1\":{\"831\":1}}],[\"和dest\",{\"1\":{\"812\":1}}],[\"和dockerfile文件中的cmd命令一样\",{\"1\":{\"852\":1}}],[\"和dockerfile中的expose\",{\"1\":{\"852\":1}}],[\"和dockerfile中env\",{\"1\":{\"852\":1}}],[\"和docker\",{\"1\":{\"805\":1,\"852\":2}}],[\"和gogs之间的故事\",{\"1\":{\"794\":1}}],[\"和点\",{\"1\":{\"794\":1}}],[\"和版本区三类\",{\"1\":{\"780\":1}}],[\"和全局配置文件\",{\"1\":{\"777\":1}}],[\"和xunit\",{\"1\":{\"585\":1}}],[\"和model\",{\"1\":{\"467\":1}}],[\"和更高级别记录\",{\"1\":{\"446\":1}}],[\"和onactionexecuting\",{\"1\":{\"403\":1}}],[\"和完整性保护\",{\"1\":{\"325\":1}}],[\"和服务\",{\"1\":{\"247\":1}}],[\"和微服务架构有什么区别\",{\"1\":{\"210\":1}}],[\"和复制\",{\"1\":{\"205\":1}}],[\"和各个线程池的大小\",{\"1\":{\"204\":1}}],[\"和排序值\",{\"1\":{\"204\":1}}],[\"和source\",{\"1\":{\"986\":1}}],[\"和socks\",{\"1\":{\"322\":1}}],[\"和size\",{\"1\":{\"735\":1}}],[\"和system\",{\"1\":{\"203\":1}}],[\"和streamingcontext的参数的构造方法可以自定义反序列化的过程\",{\"1\":{\"203\":1}}],[\"和个人的发展方向不符\",{\"1\":{\"187\":1}}],[\"和其他简历与众不同\",{\"1\":{\"182\":1}}],[\"和双星号\",{\"1\":{\"160\":1}}],[\"和常见的请求一样添加accept\",{\"1\":{\"146\":1}}],[\"和线程\",{\"1\":{\"134\":1}}],[\"和笔画数排序\",{\"1\":{\"124\":1}}],[\"和实现详细信息\",{\"1\":{\"87\":3}}],[\"和\",{\"0\":{\"394\":1,\"784\":1,\"786\":1},\"1\":{\"22\":1,\"90\":1,\"134\":3,\"156\":1,\"160\":1,\"167\":1,\"183\":1,\"203\":2,\"204\":2,\"206\":1,\"209\":1,\"215\":2,\"243\":2,\"247\":1,\"322\":1,\"325\":1,\"467\":1,\"586\":1,\"597\":1,\"598\":1,\"682\":1,\"778\":1,\"781\":2,\"782\":1,\"786\":1,\"804\":1,\"865\":1,\"867\":1,\"868\":1,\"893\":1,\"914\":1,\"918\":1,\"919\":2,\"927\":1,\"928\":1,\"943\":1,\"965\":1,\"1074\":1,\"1096\":1,\"1110\":1,\"1127\":1}}],[\"同节点\",{\"1\":{\"927\":1}}],[\"同属于一个子网\",{\"1\":{\"926\":1}}],[\"同nfs一样是一种网络文件系统\",{\"1\":{\"914\":1}}],[\"同样使用\",{\"1\":{\"869\":1}}],[\"同样可以查看到api服务对应的容器也是用的composetest\",{\"1\":{\"852\":1}}],[\"同样可以将主机上的数据文件拷贝到指定容器中\",{\"1\":{\"812\":1}}],[\"同样可以访问我们部署的\",{\"1\":{\"548\":1}}],[\"同样有些单元测试是为了演示而写的单元测试\",{\"1\":{\"589\":1}}],[\"同样的这里我们还可以继承自resultfilterattribute\",{\"1\":{\"405\":1}}],[\"同样地\",{\"1\":{\"22\":1,\"134\":1}}],[\"同年\",{\"1\":{\"247\":1}}],[\"同一\",{\"1\":{\"927\":1}}],[\"同一个pod内共享网络命名空间\",{\"1\":{\"926\":1}}],[\"同一个\",{\"1\":{\"925\":1}}],[\"同一个测试类的测试不会彼此并行运行\",{\"1\":{\"588\":1}}],[\"同一个请求获取多次会得到相同的实例\",{\"1\":{\"203\":1}}],[\"同一条\",{\"1\":{\"134\":1}}],[\"同步方案\",{\"1\":{\"402\":1,\"403\":1,\"404\":1,\"405\":1}}],[\"同步验证iauthorizationfilter\",{\"1\":{\"401\":1}}],[\"同步通信\",{\"1\":{\"210\":1}}],[\"同步重试会影响吞吐量\",{\"1\":{\"134\":1}}],[\"同步\",{\"1\":{\"134\":2,\"402\":1,\"798\":4}}],[\"同时会为docker0和flannel\",{\"1\":{\"928\":1}}],[\"同时会将node上已经存在的pod驱逐出去\",{\"1\":{\"914\":1}}],[\"同时对不支持三层路由的环境\",{\"1\":{\"928\":1}}],[\"同时nfs支持同时写操作\",{\"1\":{\"914\":1}}],[\"同时使用\",{\"1\":{\"811\":2}}],[\"同时还希望对这批用例做回归测试\",{\"1\":{\"736\":1}}],[\"同时这个选项和浏览器抓包中的preview也是一样的\",{\"1\":{\"735\":1}}],[\"同时支持查询字符串和标头\",{\"1\":{\"655\":1}}],[\"同时支持多种模式\",{\"0\":{\"655\":1}}],[\"同时完善的测试对于项目重构也是非常有好处的\",{\"1\":{\"599\":1}}],[\"同时它是在模型绑定完成之后执行\",{\"1\":{\"403\":1}}],[\"同时它也有过滤功能\",{\"1\":{\"322\":1}}],[\"同时代理也可以只是某个客户端专用的\",{\"1\":{\"322\":1}}],[\"同时在系统设置里将状态栏设置为自动隐藏\",{\"1\":{\"275\":1}}],[\"同时也可以修改文件的属组\",{\"1\":{\"1083\":1}}],[\"同时也可以查看每个请求的日志信息\",{\"1\":{\"738\":1}}],[\"同时也在想办法联系我的同学\",{\"1\":{\"432\":1}}],[\"同时也减少了大量的cpu的上下文切换\",{\"1\":{\"207\":1}}],[\"同时也会写入到\",{\"1\":{\"204\":1}}],[\"同时也显得你对这份工作有兴趣\",{\"1\":{\"191\":1}}],[\"同时也要控制主从库延迟\",{\"1\":{\"134\":1}}],[\"同时我们也要知道\",{\"1\":{\"134\":1}}],[\"同时又可以保证一致性呢\",{\"1\":{\"134\":1}}],[\"同时失败\",{\"1\":{\"134\":1}}],[\"同时\",{\"1\":{\"134\":2,\"204\":1,\"208\":1,\"927\":1,\"937\":1}}],[\"同时将result置为0\",{\"1\":{\"129\":1}}],[\"同时确认当前所在的分支\",{\"1\":{\"26\":1}}],[\"同时写上备注\",{\"1\":{\"22\":2}}],[\"往上100个版本是head~100\",{\"1\":{\"771\":1}}],[\"往往这种操作都不够及时\",{\"1\":{\"543\":1}}],[\"往往带有贷款协议\",{\"1\":{\"194\":1}}],[\"往后排<\",{\"1\":{\"125\":1}}],[\"往前排\",{\"1\":{\"125\":1}}],[\"往文件中写入内容\",{\"1\":{\"22\":1}}],[\"往readme\",{\"1\":{\"21\":1}}],[\"其命令如下\",{\"1\":{\"1020\":1}}],[\"其目标是使纯正的ubuntu\",{\"1\":{\"1007\":1}}],[\"其性能和实现方式都比\",{\"1\":{\"944\":1}}],[\"其部署的\",{\"1\":{\"931\":1}}],[\"其部署在abcdocker的namespace中\",{\"1\":{\"923\":1}}],[\"其基本原理将外部流量转发到内部的service\",{\"1\":{\"929\":1}}],[\"其基本思想是借助第三方实现具有依赖关系的对象之间的解耦\",{\"1\":{\"434\":1}}],[\"其请求的地址是podip而非容器的ip\",{\"1\":{\"927\":1}}],[\"其没有实体对象所对应\",{\"1\":{\"919\":1}}],[\"其应用场景包括\",{\"1\":{\"914\":1}}],[\"其典型的应用场景包括\",{\"1\":{\"914\":1}}],[\"其存储结构和我们地址是一模一样的\",{\"1\":{\"789\":1}}],[\"其不光可以切换分支\",{\"1\":{\"786\":1}}],[\"其有一个特性就是总会指向当前分支的最新的一个\",{\"1\":{\"784\":1}}],[\"其里面包含对象文件内容\",{\"1\":{\"782\":1}}],[\"其包含有父节点的\",{\"1\":{\"782\":1}}],[\"其永远指向我们当前工作的分支\",{\"1\":{\"781\":1}}],[\"其主要特点就是功能强大\",{\"1\":{\"717\":1}}],[\"其继承体系如下\",{\"1\":{\"443\":1}}],[\"其相互关系如下\",{\"1\":{\"443\":1}}],[\"其后的每次请求将沿用已创建服务\",{\"1\":{\"345\":1}}],[\"其余为冷数据\",{\"1\":{\"204\":1}}],[\"其特点是\",{\"1\":{\"204\":1}}],[\"其特点是将仓库集中存放在服务器中\",{\"1\":{\"12\":1}}],[\"其关键在于动态地查找产品所包含的所有零件\",{\"1\":{\"203\":1}}],[\"其中dbhelper\",{\"1\":{\"1046\":1}}],[\"其中debian\",{\"1\":{\"866\":1}}],[\"其中就有挂载卷的详细信息\",{\"1\":{\"815\":1}}],[\"其中就包括\",{\"1\":{\"247\":1}}],[\"其中也提到容器的隔离性\",{\"1\":{\"811\":1}}],[\"其中调用上传头像接口成功后会返回如下信息\",{\"1\":{\"745\":1}}],[\"其中我们常断言的响应体包含和json这俩个断言又是重重之重\",{\"1\":{\"739\":1}}],[\"其中关于部署的示例代码是使用盛派微信sdk做了一个对接微信回复消息的动能\",{\"1\":{\"710\":1}}],[\"其中苏老师讲述了关于一些容器的部署等操作\",{\"1\":{\"710\":1}}],[\"其中包括一组符合标签选择条件的\",{\"1\":{\"938\":1}}],[\"其中包括有哪些目录和文件\",{\"1\":{\"781\":1}}],[\"其中包括大多数开发人员想要的功能\",{\"1\":{\"585\":1}}],[\"其中包含健康\",{\"1\":{\"944\":1}}],[\"其中包含它的\",{\"1\":{\"944\":1}}],[\"其中包含了用于版本管理所需要的内容\",{\"1\":{\"777\":1}}],[\"其中包含了具体的异常信息\",{\"1\":{\"404\":1}}],[\"其中包含\",{\"1\":{\"668\":1}}],[\"其中包含表单提交中的数据\",{\"1\":{\"475\":1}}],[\"其中两个用户在成绩表都有语文和数学的数据\",{\"1\":{\"515\":1}}],[\"其中可能包含一些敏感信息\",{\"1\":{\"446\":1}}],[\"其中key3的过期时间刷新了\",{\"1\":{\"372\":1}}],[\"其中再加入了\",{\"1\":{\"243\":1}}],[\"其中程序的所有组件都被组装在一起并紧密包装\",{\"1\":{\"210\":1}}],[\"其中\",{\"1\":{\"208\":1,\"215\":2,\"709\":1,\"740\":1,\"780\":1,\"781\":1,\"917\":1,\"931\":1,\"1110\":2,\"1122\":1,\"1123\":1}}],[\"其中的版本号包括语义化版本控制后缀\",{\"1\":{\"1129\":1}}],[\"其中的\",{\"1\":{\"204\":1}}],[\"其中词典中存储词元\",{\"1\":{\"204\":1}}],[\"其中addtransient与addsingleton比较好区别\",{\"1\":{\"203\":1}}],[\"其中元数据\",{\"1\":{\"86\":1}}],[\"其次要在config\",{\"1\":{\"203\":1}}],[\"其次\",{\"1\":{\"195\":1,\"201\":1,\"208\":1,\"322\":1}}],[\"其已在\",{\"1\":{\"156\":1}}],[\"其他用户权限\",{\"1\":{\"1081\":1}}],[\"其他平台请参照文档\",{\"1\":{\"845\":1}}],[\"其他模式后续根据应用场景再具体细说\",{\"1\":{\"840\":1}}],[\"其他选项参数小伙伴可以根据需要使用\",{\"1\":{\"835\":1}}],[\"其他编程语言的项目同理\",{\"1\":{\"833\":1}}],[\"其他位置的\",{\"1\":{\"799\":1}}],[\"其他通知\",{\"0\":{\"695\":1}}],[\"其他的窗体也可以注入在此处\",{\"1\":{\"660\":1}}],[\"其他的操作系统使用量也有所增加\",{\"1\":{\"140\":1}}],[\"其他变量保持相同\",{\"1\":{\"588\":1}}],[\"其他变种\",{\"1\":{\"215\":1}}],[\"其他配置保持默认\",{\"1\":{\"552\":1}}],[\"其他地方的诊断日志记录\",{\"1\":{\"457\":1}}],[\"其他线程等待\",{\"1\":{\"209\":1}}],[\"其他作为\",{\"1\":{\"204\":1}}],[\"其他优点\",{\"1\":{\"185\":1}}],[\"其他部分正常写就好了\",{\"1\":{\"183\":1}}],[\"其他\",{\"0\":{\"183\":1},\"1\":{\"1081\":1}}],[\"其他类似\",{\"1\":{\"158\":1}}],[\"其他所有的分支都是在这个分支的基础上进行的\",{\"1\":{\"25\":1}}],[\"其实现方式主要有两种\",{\"1\":{\"919\":1}}],[\"其实现机制是接收到请求后\",{\"1\":{\"204\":1}}],[\"其实docker\",{\"1\":{\"846\":1}}],[\"其实在指定挂载的时候还可以限制容器的操作权限\",{\"1\":{\"816\":1}}],[\"其实编写dockerfile\",{\"1\":{\"806\":1}}],[\"其实还有很多指令\",{\"1\":{\"805\":1}}],[\"其实本质都是一样的\",{\"1\":{\"786\":1}}],[\"其实质就是一个指针\",{\"1\":{\"781\":1}}],[\"其实\",{\"1\":{\"779\":1}}],[\"其实这是\",{\"1\":{\"779\":1}}],[\"其实这里我们也可以这样做\",{\"1\":{\"134\":1}}],[\"其实就扮演了一个代理的角色\",{\"1\":{\"322\":1}}],[\"其实就指的是客户端和服务器\",{\"1\":{\"322\":1}}],[\"其实就是对文件或目录的操作\",{\"1\":{\"816\":1}}],[\"其实就是url地址中问号\",{\"1\":{\"728\":1}}],[\"其实就是把重试请求写到\",{\"1\":{\"134\":1}}],[\"其实就是个文件夹\",{\"1\":{\"22\":1}}],[\"其实也很容易\",{\"1\":{\"208\":1}}],[\"其实也会导致不一致\",{\"1\":{\"134\":1}}],[\"其实很难\",{\"1\":{\"134\":1}}],[\"其实是很难评估的\",{\"1\":{\"134\":1}}],[\"其实概率\",{\"1\":{\"134\":1}}],[\"其它\",{\"0\":{\"1056\":1}}],[\"其它应用只要继承它就可以获得所有配置\",{\"1\":{\"661\":1}}],[\"其它机器\",{\"1\":{\"208\":1}}],[\"其它镜像可能会缺少库\",{\"1\":{\"125\":1}}],[\"其它文档\",{\"1\":{\"90\":1}}],[\"其为目标元素提供关联附加信息\",{\"1\":{\"41\":1}}],[\"笔者便早早地出发前往火车站\",{\"1\":{\"432\":1}}],[\"笔者和同学买好了回学校的火车票\",{\"1\":{\"432\":1}}],[\"笔者在本地建立了同样名字的本地仓库git\",{\"1\":{\"22\":1}}],[\"笔者直接fork或者clone下来学习\",{\"1\":{\"10\":1}}],[\"就显得比较麻烦\",{\"1\":{\"1121\":1}}],[\"就要求对数据库进行存档\",{\"1\":{\"1009\":1}}],[\"就要求保存文档\",{\"1\":{\"1009\":1}}],[\"就要从执行\",{\"1\":{\"780\":1}}],[\"就尝试向这个\",{\"1\":{\"944\":1}}],[\"就得向\",{\"1\":{\"943\":1}}],[\"就得在启动mynginx时通过\",{\"1\":{\"842\":1}}],[\"就创建一个从\",{\"1\":{\"941\":1}}],[\"就用默认的接口演示\",{\"1\":{\"834\":1}}],[\"就用下图这种试试\",{\"1\":{\"182\":1}}],[\"就构建出最终的镜像\",{\"1\":{\"818\":1}}],[\"就好像未拆的笔记本\",{\"1\":{\"1110\":1}}],[\"就好像它是本地对象一样\",{\"1\":{\"662\":1}}],[\"就好像它只做了一次的特性\",{\"1\":{\"210\":1}}],[\"就好比域名和ip的关系一样\",{\"1\":{\"841\":1}}],[\"就好比平时我们安装完程序\",{\"1\":{\"824\":1}}],[\"就好比开发中没有类\",{\"1\":{\"810\":1}}],[\"就在当前目录下\",{\"1\":{\"810\":1}}],[\"就在本节中中\",{\"1\":{\"787\":1}}],[\"就在这时\",{\"1\":{\"432\":1}}],[\"就像是把整个目录复制\",{\"1\":{\"781\":1}}],[\"就像教父中的汤姆军师只为柯里昂家族服务\",{\"1\":{\"322\":1}}],[\"就说明git安装成功了\",{\"1\":{\"748\":1}}],[\"就都可以使用这个功能\",{\"1\":{\"744\":1}}],[\"就为我们做自动化提供了条件\",{\"1\":{\"739\":1}}],[\"就能够被运行在集群中的其它\",{\"1\":{\"941\":1}}],[\"就能够直接通信\",{\"1\":{\"935\":1}}],[\"就能创建几\",{\"1\":{\"871\":1}}],[\"就能很轻松的找到问题原因了\",{\"1\":{\"738\":1}}],[\"就能实现文本编辑器设置\",{\"1\":{\"955\":1}}],[\"就能实现\",{\"1\":{\"204\":1}}],[\"就一个fastreport\",{\"1\":{\"691\":1}}],[\"就以演示获取用户信息为例\",{\"1\":{\"586\":1}}],[\"就修改shapefactory\",{\"1\":{\"442\":1}}],[\"就可能会影响到整个齿轮组的正常运转\",{\"1\":{\"435\":1}}],[\"就可以启动虚拟机\",{\"1\":{\"1110\":1}}],[\"就可以弹出剪贴板窗口\",{\"1\":{\"1030\":1}}],[\"就可以安装4\",{\"1\":{\"1012\":1}}],[\"就可以查看容器内的ip情况了\",{\"1\":{\"840\":1}}],[\"就可以将指定的文件构建为镜像啦\",{\"1\":{\"818\":1}}],[\"就可以让数据实时同步\",{\"1\":{\"814\":1}}],[\"就可以通过docker\",{\"1\":{\"806\":1}}],[\"就可以通过地址\",{\"1\":{\"580\":1}}],[\"就可以看到推送的文件及目录内容了\",{\"1\":{\"788\":1}}],[\"就可以看到依旧存在数据不一致的情况\",{\"1\":{\"134\":1}}],[\"就可以得到\",{\"1\":{\"784\":1}}],[\"就可以根据需求定义全局变量或者环境变量了\",{\"1\":{\"741\":1}}],[\"就可以马上发送到客户端\",{\"1\":{\"533\":1}}],[\"就可以做出来了\",{\"1\":{\"300\":1}}],[\"就可以在\",{\"1\":{\"930\":1}}],[\"就可以在前置脚本中编写生成随机数的代码\",{\"1\":{\"744\":1}}],[\"就可以在简历里放照片\",{\"1\":{\"177\":1}}],[\"就可以在gitlab中看到注册的runner了\",{\"1\":{\"6\":1}}],[\"就可以了呢\",{\"1\":{\"134\":1}}],[\"就开始漫长的安装步骤\",{\"1\":{\"312\":1}}],[\"就和我们常用的\",{\"1\":{\"215\":1}}],[\"就类似于linux系统的crontab\",{\"1\":{\"914\":1}}],[\"就类似于在linux系统的项目目录下执行\",{\"1\":{\"834\":1,\"837\":1}}],[\"就类似\",{\"1\":{\"210\":1}}],[\"就目前而言\",{\"1\":{\"210\":1}}],[\"就应该去后端系统查找\",{\"1\":{\"209\":1}}],[\"就下面两步\",{\"1\":{\"208\":1}}],[\"就必须写版本号\",{\"1\":{\"500\":1}}],[\"就必须向\",{\"1\":{\"247\":1}}],[\"就必须使用merge\",{\"1\":{\"207\":1}}],[\"就必须容忍\",{\"1\":{\"134\":1}}],[\"就早点通知\",{\"1\":{\"201\":1}}],[\"就算是多次传输\",{\"1\":{\"208\":1}}],[\"就算错过这家公司也不后悔\",{\"1\":{\"198\":1}}],[\"就算在这期间存在短期不一致\",{\"1\":{\"134\":1}}],[\"就不必自行向\",{\"1\":{\"941\":1}}],[\"就不需要一个一个action或者控制器进行注册\",{\"1\":{\"408\":1}}],[\"就不说了\",{\"1\":{\"184\":1}}],[\"就不符合规则\",{\"1\":{\"159\":1}}],[\"就花时间赶紧突击一下\",{\"1\":{\"183\":1}}],[\"就变成\",{\"1\":{\"182\":1}}],[\"就拿模板\",{\"1\":{\"161\":1}}],[\"就拿我们前面讲到的方案来说\",{\"1\":{\"134\":1}}],[\"就会出现\",{\"1\":{\"1081\":1}}],[\"就会被服务纳入到服务的负载均衡范围之中\",{\"1\":{\"942\":1}}],[\"就会在下面可以看到构建历史列表\",{\"1\":{\"900\":1}}],[\"就会在文本框中自动生成对应断言代码块\",{\"1\":{\"739\":1}}],[\"就会去远程仓库拉取\",{\"1\":{\"817\":1}}],[\"就会去远程仓库搜索并拉取到主机\",{\"1\":{\"812\":1}}],[\"就会记录对应的事件信息\",{\"1\":{\"809\":1}}],[\"就会从远程仓储中\",{\"1\":{\"805\":1}}],[\"就会从数据库中读取到\",{\"1\":{\"134\":1}}],[\"就会看到压缩之后的文件大小远小于原始文件的\",{\"1\":{\"779\":1}}],[\"就会调用它的示例来定位该依赖项目\",{\"1\":{\"570\":1}}],[\"就会对collection中选中的所有测试用例运行\",{\"1\":{\"737\":1}}],[\"就会对后端系统造成很大的压力\",{\"1\":{\"209\":1}}],[\"就会对业务造成影响\",{\"1\":{\"134\":1}}],[\"就会施行数据淘汰策略\",{\"1\":{\"209\":1}}],[\"就会自动将数据同步到其他的节点上去了\",{\"1\":{\"208\":1}}],[\"就会丢失该消息\",{\"1\":{\"208\":1}}],[\"就会将该消息从消息队列中删除\",{\"1\":{\"208\":1}}],[\"就会触发这个事件\",{\"1\":{\"207\":1}}],[\"就会发现其实很多数据库都逐渐开始提供\",{\"1\":{\"134\":1}}],[\"就会产生一条变更日志\",{\"1\":{\"134\":1}}],[\"就是实现\",{\"1\":{\"1110\":1}}],[\"就是main\",{\"1\":{\"1019\":1}}],[\"就是发布后的dll\",{\"1\":{\"1019\":1}}],[\"就是dll的路径\",{\"1\":{\"1019\":1}}],[\"就是安装软件包的\",{\"1\":{\"1008\":1}}],[\"就是自动把本地图片转成连接的一款工具\",{\"1\":{\"951\":1}}],[\"就是用到了该原理\",{\"1\":{\"869\":1}}],[\"就是用于给镜像打标签\",{\"1\":{\"821\":1}}],[\"就是用来发指令请求的\",{\"1\":{\"805\":1}}],[\"就是新镜像是基于哪个镜像构建的\",{\"1\":{\"820\":1}}],[\"就是故意留到这里单独分享\",{\"1\":{\"815\":1}}],[\"就是找出所有镜像id\",{\"1\":{\"810\":1}}],[\"就是镜像\",{\"1\":{\"805\":1}}],[\"就是为了方便我们使用和记忆\",{\"1\":{\"784\":1}}],[\"就是通过查找\",{\"1\":{\"780\":1}}],[\"就是文件名的信息都存储到哪里去了呢\",{\"1\":{\"778\":1}}],[\"就是collection\",{\"1\":{\"736\":1}}],[\"就是把调用目标方法返回的值和预期的值进行比较\",{\"1\":{\"586\":1}}],[\"就是是否可重用的意思\",{\"1\":{\"409\":1}}],[\"就是这样的原则的其中一个实现思路\",{\"1\":{\"344\":1}}],[\"就是在已存在的\",{\"1\":{\"1063\":1}}],[\"就是在请求接口之前对我们的请求数据进行进一步加工处理的都可以使用前置脚本这个功能\",{\"1\":{\"744\":1}}],[\"就是在特殊场景下有其对应的好处\",{\"1\":{\"208\":1}}],[\"就是在后台新增一个策略\",{\"1\":{\"208\":1}}],[\"就是大量积压的时候\",{\"1\":{\"208\":1}}],[\"就是批量重导\",{\"1\":{\"208\":1}}],[\"就是说\",{\"1\":{\"208\":1}}],[\"就是说让集群中多个节点来服务某个\",{\"1\":{\"208\":1}}],[\"就是\",{\"1\":{\"208\":1,\"210\":2,\"781\":1,\"943\":1}}],[\"就是多一些\",{\"1\":{\"208\":1}}],[\"就是很典型的单例模式\",{\"1\":{\"202\":1}}],[\"就是姓名\",{\"1\":{\"178\":1}}],[\"就是一种为了解决面向对象与关系数据库互不匹配现象的技术\",{\"1\":{\"529\":1}}],[\"就是一个通道可以让多条线路同时占用而不搞混\",{\"1\":{\"326\":1}}],[\"就是一个微服务\",{\"1\":{\"210\":1}}],[\"就是一个复杂段\",{\"1\":{\"161\":1}}],[\"就是一大堆的表\",{\"1\":{\"86\":1}}],[\"就是解决问题的关键\",{\"1\":{\"134\":1}}],[\"就是你自己电脑客户端的仓库\",{\"1\":{\"22\":1}}],[\"所观察的项中有refresh评估按钮\",{\"1\":{\"984\":1}}],[\"所在节点的网卡\",{\"1\":{\"945\":1}}],[\"所在节点的网卡上\",{\"1\":{\"944\":1}}],[\"所在的网络被称为\",{\"1\":{\"944\":1}}],[\"所在实例上拉取数据过来\",{\"1\":{\"208\":1}}],[\"所在实例\",{\"1\":{\"208\":1}}],[\"所属用户及组\",{\"1\":{\"564\":1}}],[\"所要处理的职责不同\",{\"1\":{\"399\":1}}],[\"所贡献的代码\",{\"1\":{\"247\":1}}],[\"所支持的僵尸类型\",{\"1\":{\"243\":1}}],[\"所支持的植物类型\",{\"1\":{\"243\":1}}],[\"所谓的查询参数\",{\"1\":{\"728\":1}}],[\"所谓的本地仓库\",{\"1\":{\"22\":1}}],[\"所谓集群脑裂\",{\"1\":{\"204\":1}}],[\"所有者\",{\"1\":{\"1074\":1}}],[\"所有更新包安装完成后\",{\"1\":{\"1012\":1}}],[\"所有补丁\",{\"1\":{\"1012\":1}}],[\"所有功能\",{\"1\":{\"964\":1}}],[\"所有容器把发现这种地址的流量都发送到了缺省网关\",{\"1\":{\"944\":1}}],[\"所有它们之间应当是能直接通信的\",{\"1\":{\"927\":1}}],[\"所有pod内容器都可以访问共享的volume\",{\"1\":{\"914\":1}}],[\"所有所有节点都故障\",{\"1\":{\"661\":1}}],[\"所有在该信道上发布的消息都将会被指派一个唯一的id\",{\"1\":{\"208\":1}}],[\"所有这一切都需要足够的文件描述符\",{\"1\":{\"204\":1}}],[\"所有文档的\",{\"1\":{\"204\":1}}],[\"所有链表上该委托的后续委托将会被顺序执行\",{\"1\":{\"203\":1}}],[\"所有带泛型参数的类型都是一个开放式类型\",{\"1\":{\"203\":1}}],[\"所有继承自system\",{\"1\":{\"203\":1}}],[\"所有的节点都是平行的\",{\"1\":{\"661\":1}}],[\"所有的对象通过彼此的合作\",{\"1\":{\"435\":1}}],[\"所有的路径在函数运行开始时进行注册\",{\"1\":{\"203\":1}}],[\"所有的dot\",{\"1\":{\"203\":1}}],[\"所有读请求都可以直接\",{\"1\":{\"134\":1}}],[\"所有\",{\"1\":{\"90\":1}}],[\"所有公共读写字段或属性都是命名参数\",{\"1\":{\"46\":1}}],[\"所以对应的包版本标识也应该有四个\",{\"1\":{\"1121\":1}}],[\"所以对于\",{\"1\":{\"938\":1}}],[\"所以对于测试非常有必要了解一下\",{\"1\":{\"599\":1}}],[\"所以虚拟网卡的\",{\"1\":{\"1110\":1}}],[\"所以其他的都可以设置\",{\"1\":{\"1110\":1}}],[\"所以其存储的目录结构都是一直的\",{\"1\":{\"789\":1}}],[\"所以指定的就是虚拟磁盘的存储位置\",{\"1\":{\"1110\":1}}],[\"所以指定tar的文件时\",{\"1\":{\"810\":1}}],[\"所以选择创建新的虚拟磁盘\",{\"1\":{\"1110\":1}}],[\"所以硬件兼容性选择\",{\"1\":{\"1110\":1}}],[\"所以能不装其他我就先不装其他试试\",{\"1\":{\"1102\":1}}],[\"所以变更权限语句为\",{\"1\":{\"1084\":1}}],[\"所以换用其他方式来实现\",{\"1\":{\"1070\":1}}],[\"所以没成功\",{\"1\":{\"1070\":1}}],[\"所以没有镜像就没法启动容器\",{\"1\":{\"810\":1}}],[\"所以项目文件直接使用之前示例代码\",{\"1\":{\"1070\":1}}],[\"所以项目中的地址要重新配置\",{\"1\":{\"841\":1}}],[\"所以t4也是根据这个规则生成的\",{\"1\":{\"1046\":1}}],[\"所以导致部署不了netcore项目\",{\"1\":{\"1012\":1}}],[\"所以导致商业软件无法将\",{\"1\":{\"249\":1}}],[\"所以此示例比前一个示例更简单\",{\"1\":{\"984\":1}}],[\"所以此时我们需要考虑另外一种方案\",{\"1\":{\"134\":1}}],[\"所以只能发送到自己的缺省网关\",{\"1\":{\"944\":1}}],[\"所以只存在一个仓库\",{\"1\":{\"12\":1}}],[\"所以同一个连接里发起的所有请求都会进入同一个\",{\"1\":{\"938\":1}}],[\"所以同时可运行很多个容器\",{\"1\":{\"806\":1}}],[\"所以本质上也是同节点容器间的通信\",{\"1\":{\"927\":1}}],[\"所以docker提供了volume机制以便将数据持久化存储\",{\"1\":{\"914\":1}}],[\"所以docker上运行的多个容器是相互不影响的\",{\"1\":{\"804\":1}}],[\"所以一般通过命令行来精简镜像都是实验性的\",{\"1\":{\"868\":1}}],[\"所以一个集合\",{\"1\":{\"205\":1}}],[\"所以在进行实操前\",{\"1\":{\"849\":1}}],[\"所以得授予执行权限\",{\"1\":{\"847\":1}}],[\"所以安装docker\",{\"1\":{\"845\":1}}],[\"所以报错\",{\"1\":{\"838\":1}}],[\"所以千万不要指定\",{\"1\":{\"835\":1}}],[\"所以必须学起来\",{\"1\":{\"817\":1}}],[\"所以必须把自动安排起来\",{\"1\":{\"812\":1}}],[\"所以更多时候都会在挂载的时候指定一个名称\",{\"1\":{\"815\":1}}],[\"所以容器删除时\",{\"1\":{\"814\":1}}],[\"所以容器之间是互不影响的\",{\"1\":{\"811\":1}}],[\"所以内部只包含重要的功能\",{\"1\":{\"811\":1}}],[\"所以可以指定为后台模式运行\",{\"1\":{\"811\":1}}],[\"所以两个命令结合用即可\",{\"1\":{\"810\":1}}],[\"所以操作命令不多\",{\"1\":{\"810\":1}}],[\"所以分别是一个\",{\"1\":{\"782\":1}}],[\"所以取什么名称都是无所谓的\",{\"1\":{\"778\":1}}],[\"所以每个机器都必须自报家门\",{\"1\":{\"748\":1}}],[\"所以每个值类型都拥有一个数据副本\",{\"1\":{\"203\":1}}],[\"所以postman默认展示的也是这个选项\",{\"1\":{\"735\":1}}],[\"所以这一块还是可以再封装一下的\",{\"1\":{\"1065\":1}}],[\"所以这一步可以忽略\",{\"1\":{\"730\":1}}],[\"所以这里的docker0工作方式和物理交换机很像\",{\"1\":{\"839\":1}}],[\"所以这个对我们也很有用\",{\"1\":{\"735\":1}}],[\"所以现在的http\",{\"1\":{\"665\":1}}],[\"所以依赖于newtonsoft\",{\"1\":{\"600\":1}}],[\"所以需要先下载安装\",{\"1\":{\"1110\":1}}],[\"所以需要使用where\",{\"1\":{\"1055\":1}}],[\"所以需要安装以下补丁才可以\",{\"1\":{\"1012\":1}}],[\"所以需要给物理机配置freesshd\",{\"1\":{\"880\":1}}],[\"所以需要将对应的数据拷贝到主机上\",{\"1\":{\"812\":1}}],[\"所以需要将接口类放在一个共享的类库中\",{\"1\":{\"575\":1}}],[\"所以需要引入net\",{\"1\":{\"366\":1}}],[\"所以asp\",{\"1\":{\"563\":1}}],[\"所以直接就是命令找不到\",{\"1\":{\"538\":1}}],[\"所以直接可以在文件头部增加配置\",{\"1\":{\"38\":1}}],[\"所以会出现多条数据\",{\"1\":{\"522\":1}}],[\"所以会建立下面的这种模型\",{\"1\":{\"43\":1}}],[\"所以修改默认的解析\",{\"1\":{\"478\":1}}],[\"所以除非为了临时排除生产环境的\",{\"1\":{\"446\":1}}],[\"所以应该避免在\",{\"1\":{\"446\":1}}],[\"所以通常我们只指定容器内目录\",{\"1\":{\"815\":1}}],[\"所以通常手机没电你大概率只能通过以下但是充电\",{\"1\":{\"433\":1}}],[\"所以通常会采用异步重试的方案\",{\"1\":{\"134\":1}}],[\"所以笔者就想时间还早\",{\"1\":{\"432\":1}}],[\"所以还需要注入该服务\",{\"1\":{\"424\":1}}],[\"所以再次暂停2秒后\",{\"1\":{\"372\":1}}],[\"所以首先要将类型转为jsonb形式然后筛选type为2的\",{\"1\":{\"342\":1}}],[\"所以也不能装个应用玩\",{\"1\":{\"312\":1}}],[\"所以4\",{\"1\":{\"267\":1}}],[\"所以不是\",{\"1\":{\"1110\":1}}],[\"所以不用指定\",{\"1\":{\"835\":1}}],[\"所以不需要这一步\",{\"1\":{\"547\":1}}],[\"所以不会出现慢的情况\",{\"1\":{\"342\":1}}],[\"所以不能存储到内存中\",{\"1\":{\"256\":1}}],[\"所以不必在执行此命令\",{\"1\":{\"22\":1}}],[\"所以商业公司比较喜欢选择\",{\"1\":{\"252\":1}}],[\"所以就直接启动容器了\",{\"1\":{\"817\":1}}],[\"所以就不再创建控制器实例\",{\"1\":{\"402\":1}}],[\"所以就有了gnu\",{\"1\":{\"249\":1}}],[\"所以就去修改dockerfile文件\",{\"1\":{\"125\":1}}],[\"所以任何人都可以基于\",{\"1\":{\"247\":1}}],[\"所以思科迫于压力\",{\"1\":{\"247\":1}}],[\"所以采用了无密码的\",{\"1\":{\"217\":1}}],[\"所以集群使用了主从复制模型\",{\"1\":{\"209\":1}}],[\"所以解决这个问题的办法就是绕过这个问题\",{\"1\":{\"208\":1}}],[\"所以才使得nginx支持更高的并发\",{\"1\":{\"207\":1}}],[\"所以你可以多次add不同的文件\",{\"1\":{\"754\":1}}],[\"所以你应该尽可能的将你的数据模型抽象到一个散列表里面\",{\"1\":{\"209\":1}}],[\"所以你需要至少\",{\"1\":{\"205\":1}}],[\"所以你看\",{\"1\":{\"134\":1}}],[\"所以要提前考虑+及早避免\",{\"1\":{\"204\":1}}],[\"所以搜索是近实时的\",{\"1\":{\"204\":1}}],[\"所以提醒大家注意一下\",{\"1\":{\"184\":1}}],[\"所以我索性直接使用docker\",{\"1\":{\"1070\":1}}],[\"所以我做了一个映射\",{\"1\":{\"1061\":1}}],[\"所以我只能说试着\",{\"1\":{\"868\":1}}],[\"所以我只是新增一个控制器\",{\"1\":{\"600\":1}}],[\"所以我的可选项就只有下载app了\",{\"1\":{\"698\":1}}],[\"所以我个人还是挺推荐这个的\",{\"1\":{\"661\":1}}],[\"所以我个人建议\",{\"1\":{\"177\":1}}],[\"所以我先手动将\",{\"1\":{\"537\":1}}],[\"所以我们需要掌握常见的对\",{\"1\":{\"1071\":1}}],[\"所以我们现在开始下载更新包\",{\"1\":{\"1012\":1}}],[\"所以我们先来测试一下entrypoint\",{\"1\":{\"838\":1}}],[\"所以我们直接在插件中创建控制器就可以了\",{\"1\":{\"576\":1}}],[\"所以我们直接使用控制器注册方式\",{\"1\":{\"407\":1}}],[\"所以我们就暂且看为一个头部传递的工具使用\",{\"1\":{\"484\":1}}],[\"所以我们的filterinjectattribute不需要提前注册到di容器中\",{\"1\":{\"410\":1}}],[\"所以我们只要再多一层抽象就可以了\",{\"1\":{\"215\":1}}],[\"所以我们不断地穿越内存限制的边界\",{\"1\":{\"209\":1}}],[\"所以我们可以使用dllimport特性引入对win32\",{\"1\":{\"44\":1}}],[\"所以我们可以先通过git\",{\"1\":{\"27\":1}}],[\"所以我们在docker\",{\"1\":{\"40\":1}}],[\"所以推荐用\",{\"1\":{\"134\":1}}],[\"所以如果非要追求强一致\",{\"1\":{\"134\":1}}],[\"所以实际使用中\",{\"1\":{\"134\":1}}],[\"所以写数据库\",{\"1\":{\"134\":1}}],[\"所以\",{\"1\":{\"134\":6,\"208\":1,\"209\":1,\"215\":1,\"247\":2,\"322\":2,\"433\":1,\"436\":1,\"546\":1,\"721\":1,\"945\":1}}],[\"所以程序集是一个逻辑单元\",{\"1\":{\"90\":1}}],[\"所以请不要使用不便公开的隐私信息\",{\"1\":{\"17\":1}}],[\"会一直输出\",{\"1\":{\"1111\":1}}],[\"会设置一个\",{\"1\":{\"1110\":1}}],[\"会询问是否覆盖\",{\"1\":{\"1080\":1}}],[\"会更改\",{\"1\":{\"1077\":1}}],[\"会更新\",{\"1\":{\"1077\":3}}],[\"会自带主题\",{\"1\":{\"968\":1}}],[\"会自动匹配并选中所有相同的单词\",{\"1\":{\"965\":1}}],[\"会自动解压缩\",{\"1\":{\"825\":1}}],[\"会自动生成一个名称\",{\"1\":{\"815\":1}}],[\"会自动回复rabbitmq已收到消息\",{\"1\":{\"208\":1}}],[\"会创建\",{\"1\":{\"944\":1}}],[\"会创建一个新的replicaset\",{\"1\":{\"914\":1}}],[\"会得到一个虚拟\",{\"1\":{\"945\":1}}],[\"会得到\",{\"1\":{\"943\":1}}],[\"会选择两个\",{\"1\":{\"942\":1}}],[\"会选择哪个呢\",{\"1\":{\"165\":1}}],[\"会对\",{\"1\":{\"941\":1}}],[\"会对这些变化进行跟踪\",{\"1\":{\"937\":1}}],[\"会通过负载均衡的方式进行访问\",{\"1\":{\"938\":1}}],[\"会因为伸缩\",{\"1\":{\"937\":1}}],[\"会删除其现存\",{\"1\":{\"936\":1}}],[\"会加入新\",{\"1\":{\"936\":1}}],[\"会被删除\",{\"1\":{\"936\":1}}],[\"会被问到\",{\"1\":{\"187\":1}}],[\"会使用路由表来决定发往哪里\",{\"1\":{\"916\":1}}],[\"会使工作区和暂存区和的内容不一致了\",{\"1\":{\"780\":1}}],[\"会经常用到\",{\"1\":{\"914\":1}}],[\"会保存每一次提交的文件版本\",{\"1\":{\"863\":1}}],[\"会新增四个目录和两个文件\",{\"1\":{\"788\":1}}],[\"会列举推送的\",{\"1\":{\"788\":1}}],[\"会把指定的这个目录下的文件发送给docker\",{\"1\":{\"835\":1}}],[\"会把帮助我们生成一些\",{\"1\":{\"778\":1}}],[\"会把里面用到的所有程序集再你查看的时候显示到左侧\",{\"1\":{\"171\":1}}],[\"会调用到俩个接口\",{\"1\":{\"745\":1}}],[\"会不定时清理历史消息\",{\"1\":{\"700\":1}}],[\"会遇到很多的问题\",{\"1\":{\"693\":1}}],[\"会开发winform程序但不熟悉怎样打包安装程序\",{\"1\":{\"689\":1}}],[\"会实时推送给客户端\",{\"1\":{\"661\":1}}],[\"会清除所有配置提供程序\",{\"1\":{\"583\":1}}],[\"会导致工作区和暂存区是会有一定差别的\",{\"1\":{\"780\":1}}],[\"会导致找不到iproviderbase\",{\"1\":{\"577\":1}}],[\"会导致创建单一实例服务的其他副本\",{\"1\":{\"494\":1}}],[\"会重启原来已运行的程序\",{\"1\":{\"564\":1}}],[\"会牺牲程序的执行效率\",{\"1\":{\"529\":1}}],[\"会返回该实体且不向\",{\"1\":{\"503\":1}}],[\"会返回具有指定子节键的配置子节\",{\"1\":{\"393\":1}}],[\"会提示报错并退出\",{\"1\":{\"1075\":1}}],[\"会提示不能直接删除\",{\"1\":{\"810\":1}}],[\"会提示\",{\"1\":{\"494\":1}}],[\"会提高一些印象分\",{\"1\":{\"338\":1}}],[\"会默认访问v1\",{\"1\":{\"494\":1,\"498\":1}}],[\"会继续在arguments参数列表里按顺序获取\",{\"1\":{\"410\":1}}],[\"会继续执行后面的中间件\",{\"1\":{\"157\":1}}],[\"会进该方法\",{\"1\":{\"403\":2}}],[\"会在主机上安装\",{\"1\":{\"1110\":1}}],[\"会在主机上创建一个名为docker0的虚拟网桥\",{\"1\":{\"839\":1}}],[\"会在当前目录下生成\",{\"1\":{\"802\":1}}],[\"会在删除前检查merge状态\",{\"1\":{\"773\":1}}],[\"会在\",{\"1\":{\"666\":1,\"936\":1}}],[\"会在authorization之后\",{\"1\":{\"402\":1}}],[\"会在我们的邮箱中收到一封提示\",{\"1\":{\"19\":1}}],[\"会查询数据库并且将该用户信息存入redis\",{\"1\":{\"401\":1}}],[\"会给返回头增加标识\",{\"1\":{\"364\":1}}],[\"会给后端系统带来很大压力\",{\"1\":{\"209\":1}}],[\"会释放单例服务\",{\"1\":{\"345\":1}}],[\"会将请求的版本与加载的版本进行比较\",{\"1\":{\"571\":1}}],[\"会将请求写入到\",{\"1\":{\"204\":1}}],[\"会将报文在代理之间传递\",{\"1\":{\"322\":1}}],[\"会话缓存\",{\"1\":{\"209\":1}}],[\"会认为消息没有被分发\",{\"1\":{\"208\":1}}],[\"会造成性能瓶颈\",{\"1\":{\"208\":1}}],[\"会造成更加昂贵的性能影响\",{\"1\":{\"161\":1,\"163\":1}}],[\"会先将虚拟机在局域网中的\",{\"1\":{\"1110\":1}}],[\"会先从本地查找镜像\",{\"1\":{\"812\":1}}],[\"会先从本地缓存中查找\",{\"1\":{\"43\":1}}],[\"会先显示符合条件的事件信息\",{\"1\":{\"809\":1}}],[\"会先去执行pre\",{\"1\":{\"744\":1}}],[\"会先对我们的输入作哈希运算\",{\"1\":{\"204\":1}}],[\"会为该文档指定一个版本号\",{\"1\":{\"204\":1}}],[\"会合并小段到一个较大的段\",{\"1\":{\"204\":1}}],[\"会寻找方法的本机机器代码缓存并且判断其是否可用\",{\"1\":{\"203\":1}}],[\"会引起对方反感\",{\"1\":{\"195\":1}}],[\"会有一个worker进程去处理\",{\"1\":{\"207\":1}}],[\"会有一些人伪装成部门经理对你的技术进行打压\",{\"1\":{\"194\":1}}],[\"会有其他文章单独说明\",{\"1\":{\"80\":1}}],[\"会主动重构代码\",{\"1\":{\"179\":1}}],[\"会生成一个\",{\"1\":{\"781\":1}}],[\"会生成\",{\"1\":{\"160\":2}}],[\"会发送到整个进程组\",{\"1\":{\"564\":1}}],[\"会发送一条\",{\"1\":{\"208\":1}}],[\"会发送一个确认消息给消息队列\",{\"1\":{\"208\":1}}],[\"会发现其也是一个\",{\"1\":{\"788\":1}}],[\"会发现生成了三个\",{\"1\":{\"782\":1}}],[\"会发现文件名称是包含相对路径的\",{\"1\":{\"782\":1}}],[\"会发现对应文件的\",{\"1\":{\"780\":1}}],[\"会发现这下就一致了\",{\"1\":{\"780\":1}}],[\"会发现并没有我们在\",{\"1\":{\"779\":1}}],[\"会发现需要在现有的代码中进行大量重构的操作\",{\"1\":{\"215\":1}}],[\"会发现页面更新了\",{\"1\":{\"22\":1}}],[\"会发生这样的场景\",{\"1\":{\"134\":1}}],[\"会抛出更清晰的异常\",{\"1\":{\"130\":1}}],[\"会以数组形式返回\",{\"1\":{\"46\":1}}],[\"会出现红色\",{\"1\":{\"23\":1}}],[\"会出现如下的内容\",{\"1\":{\"21\":1}}],[\"远程控制\",{\"1\":{\"1110\":1}}],[\"远程仓储\",{\"1\":{\"805\":1}}],[\"远程仓库存储代码\",{\"0\":{\"789\":1}}],[\"远程仓库\",{\"0\":{\"21\":1},\"1\":{\"20\":1}}],[\"远程的已经删除了\",{\"1\":{\"799\":1}}],[\"远程删除\",{\"1\":{\"799\":1}}],[\"远程地址\",{\"1\":{\"798\":1}}],[\"远程git存储库与本地git存储库操作\",{\"1\":{\"798\":1}}],[\"远程桌面\",{\"1\":{\"240\":1}}],[\"远程过程调用或者通过\",{\"1\":{\"210\":1}}],[\"远程在github上的仓库\",{\"1\":{\"20\":1}}],[\"验证时visual\",{\"1\":{\"974\":1}}],[\"验证启动状态\",{\"1\":{\"909\":1}}],[\"验证成功\",{\"1\":{\"476\":1}}],[\"验证特性\",{\"0\":{\"473\":1}}],[\"验证请求头中是否传输了authorization\",{\"1\":{\"401\":1}}],[\"验证失败\",{\"1\":{\"364\":1}}],[\"验证失败自定义返回类\",{\"1\":{\"364\":1}}],[\"验证人\",{\"1\":{\"364\":1}}],[\"验证一下是否为开机启动\",{\"1\":{\"549\":1}}],[\"验证一下\",{\"1\":{\"19\":1}}],[\"验证是否可以通过gitlab\",{\"1\":{\"8\":1}}],[\"添加软链接\",{\"1\":{\"1136\":1}}],[\"添加映射的值\",{\"1\":{\"1061\":1}}],[\"添加数关系映射\",{\"1\":{\"1047\":1}}],[\"添加数据种子\",{\"1\":{\"501\":1}}],[\"添加支持以html格式将选定的编辑器文本复制到剪贴板\",{\"1\":{\"968\":1}}],[\"添加命名空间引用\",{\"1\":{\"965\":1}}],[\"添加完成后在\",{\"1\":{\"956\":1}}],[\"添加完成之后\",{\"1\":{\"19\":1}}],[\"添加oss所有权限\",{\"1\":{\"954\":1}}],[\"添加selinux配置\",{\"1\":{\"949\":1}}],[\"添加swagger文档\",{\"1\":{\"550\":1}}],[\"添加下面一行\",{\"1\":{\"893\":1}}],[\"添加了又删除\",{\"1\":{\"863\":1}}],[\"添加了新的数据\",{\"1\":{\"209\":1}}],[\"添加\",{\"0\":{\"956\":1,\"1042\":1},\"1\":{\"798\":1,\"956\":1,\"1110\":1}}],[\"添加以及提交之后\",{\"1\":{\"782\":1}}],[\"添加关联\",{\"1\":{\"774\":1}}],[\"添加配置\",{\"0\":{\"949\":1},\"1\":{\"710\":1}}],[\"添加服务注册\",{\"1\":{\"660\":1}}],[\"添加属性或数组元素\",{\"1\":{\"629\":1}}],[\"添加自定义文件的目录要注意\",{\"1\":{\"583\":1}}],[\"添加自定义路由约束\",{\"1\":{\"164\":1}}],[\"添加dockerfile\",{\"0\":{\"553\":1}}],[\"添加至\",{\"1\":{\"543\":1,\"949\":1}}],[\"添加etc\",{\"1\":{\"502\":1}}],[\"添加扩展类\",{\"0\":{\"497\":1}}],[\"添加新项\",{\"1\":{\"956\":1}}],[\"添加新的控制器usercontroller\",{\"1\":{\"552\":1}}],[\"添加新的ssh\",{\"1\":{\"19\":1}}],[\"添加新成员\",{\"0\":{\"493\":1}}],[\"添加全局过滤器\",{\"1\":{\"413\":1,\"418\":1,\"421\":1,\"424\":1}}],[\"添加nuget包\",{\"1\":{\"381\":1,\"386\":1}}],[\"添加缓存\",{\"1\":{\"375\":1}}],[\"添加缓存配置\",{\"1\":{\"371\":1}}],[\"添加缓存机制\",{\"1\":{\"206\":1}}],[\"添加接口\",{\"0\":{\"230\":1}}],[\"添加用户时候\",{\"1\":{\"475\":1}}],[\"添加用户\",{\"0\":{\"222\":1,\"556\":1}}],[\"添加程序包源\",{\"1\":{\"214\":1,\"1120\":1}}],[\"添加内联约束\",{\"1\":{\"159\":1}}],[\"添加routing相关服务\",{\"1\":{\"156\":1}}],[\"添加或移除事件处理程序\",{\"1\":{\"87\":1}}],[\"添加提交一次完成\",{\"1\":{\"27\":1}}],[\"添加指定的哈希值\",{\"1\":{\"27\":1}}],[\"添加远程仓库\",{\"1\":{\"23\":1}}],[\"添加文件头\",{\"1\":{\"956\":2}}],[\"添加文件\",{\"1\":{\"21\":1}}],[\"添加gitlab\",{\"1\":{\"8\":1}}],[\"公司\",{\"1\":{\"247\":1}}],[\"公司发多发少就看公司的良心和盈利情况了\",{\"1\":{\"200\":1}}],[\"公司没人能搞得定\",{\"1\":{\"192\":1}}],[\"公司把研发部门迁到其他城市\",{\"1\":{\"187\":1}}],[\"公司方向调整\",{\"1\":{\"187\":1}}],[\"公司离职\",{\"0\":{\"187\":1}}],[\"公共的配置可以提取到可继承应用中\",{\"1\":{\"661\":1}}],[\"公共代理最大的特点就是共享\",{\"1\":{\"322\":1}}],[\"公共语言运行时\",{\"1\":{\"139\":1}}],[\"公共\",{\"1\":{\"103\":1}}],[\"公共泛型有参方法\",{\"1\":{\"98\":1}}],[\"公共泛型无参方法\",{\"1\":{\"98\":2}}],[\"公共泛型方法\",{\"1\":{\"98\":1}}],[\"公共静态方法\",{\"1\":{\"98\":1}}],[\"公共方法\",{\"1\":{\"98\":1}}],[\"公共属性\",{\"1\":{\"98\":1}}],[\"公共字段\",{\"1\":{\"98\":1}}],[\"公共构造函数\",{\"1\":{\"98\":1}}],[\"公\",{\"1\":{\"73\":1,\"127\":1,\"128\":2,\"131\":3}}],[\"公开密钥添加完成\",{\"1\":{\"19\":1}}],[\"公开密钥\",{\"1\":{\"19\":1}}],[\"公众号\",{\"1\":{\"9\":1,\"125\":2,\"178\":1}}],[\"最高版本\",{\"1\":{\"1131\":2}}],[\"最右边的数字\",{\"1\":{\"1130\":1}}],[\"最左边的数字\",{\"1\":{\"1130\":1}}],[\"最顶层目录就是根目录\",{\"1\":{\"1071\":1}}],[\"最顶层的就是根目录\",{\"1\":{\"1071\":1}}],[\"最推荐的方式\",{\"1\":{\"1065\":1}}],[\"最实用的数据库文档\",{\"1\":{\"1009\":1}}],[\"最根本的端口入口\",{\"1\":{\"923\":1}}],[\"最神奇的是\",{\"1\":{\"863\":1}}],[\"最底层肯定有一个最基础的镜像\",{\"1\":{\"820\":1}}],[\"最想要的还是自己构建镜像\",{\"1\":{\"817\":1}}],[\"最多能返回最近的1000条日志信息\",{\"1\":{\"809\":1}}],[\"最多保留的文件数\",{\"1\":{\"447\":1}}],[\"最快速和最轻松的方式搭建自助\",{\"1\":{\"795\":1}}],[\"最少只需要一个数据节点\",{\"1\":{\"661\":1}}],[\"最下面有反转\",{\"1\":{\"584\":1}}],[\"最下面找到如下文本片段\",{\"1\":{\"546\":1}}],[\"最下面是提交信息\",{\"1\":{\"22\":1}}],[\"最小安装\",{\"1\":{\"1110\":2}}],[\"最小单元就是方法\",{\"1\":{\"593\":1}}],[\"最小的进程打开数\",{\"1\":{\"564\":1}}],[\"最小文件打开数\",{\"1\":{\"564\":1}}],[\"最小长度校验\",{\"1\":{\"474\":1}}],[\"最小主节点数\",{\"1\":{\"204\":1}}],[\"最全源码详解之bean实例化过程\",{\"1\":{\"445\":1}}],[\"最常用的\",{\"1\":{\"865\":1}}],[\"最常见的一种post请求\",{\"0\":{\"568\":1}}],[\"最常见的方案是\",{\"1\":{\"134\":1}}],[\"最常使用的filter\",{\"1\":{\"403\":1}}],[\"最低版本\",{\"1\":{\"1131\":2}}],[\"最低16位\",{\"1\":{\"364\":1}}],[\"最低期望\",{\"1\":{\"197\":1}}],[\"最近看到另外一种写法\",{\"1\":{\"1061\":1}}],[\"最近在写关于操作pdf的代码\",{\"1\":{\"682\":1}}],[\"最近在把一个开源项目进行增加自用的功能\",{\"1\":{\"657\":1}}],[\"最近在看\",{\"1\":{\"179\":1,\"185\":1}}],[\"最近两天在给朋友讲解如何使用ajax调用接口时候\",{\"1\":{\"478\":1}}],[\"最近一个有个场景是这样子的\",{\"1\":{\"342\":1}}],[\"最纯净的硬件工具箱\",{\"1\":{\"272\":1}}],[\"最流行的开源协议什么\",{\"1\":{\"253\":1}}],[\"最大实例数量以及目标cpu使用率\",{\"1\":{\"914\":1}}],[\"最大的缺点就是必须联网才可以使用\",{\"1\":{\"798\":1}}],[\"最大请求次数\",{\"1\":{\"696\":1}}],[\"最大请求\",{\"1\":{\"669\":1,\"670\":1,\"672\":1}}],[\"最大接受\",{\"1\":{\"669\":1,\"670\":1,\"672\":1}}],[\"最大为4096\",{\"1\":{\"564\":1}}],[\"最大长度校验\",{\"1\":{\"474\":1}}],[\"最大值为\",{\"1\":{\"243\":1}}],[\"最大带宽1m\",{\"1\":{\"242\":1}}],[\"最大区别就在锁的级别上\",{\"1\":{\"206\":1}}],[\"最大化\",{\"1\":{\"134\":1}}],[\"最好是64gb内存的物理机器\",{\"1\":{\"204\":1}}],[\"最好能了解一下公司的奖金\",{\"1\":{\"196\":1}}],[\"最好也别说\",{\"1\":{\"187\":1}}],[\"最基本的测试\",{\"1\":{\"599\":1}}],[\"最基本的ioc容器接口beanfactory\",{\"1\":{\"443\":1}}],[\"最基本的\",{\"0\":{\"184\":1,\"195\":1}}],[\"最后执行一个\",{\"1\":{\"1064\":1}}],[\"最后点击确定\",{\"1\":{\"1028\":1}}],[\"最后运行下面命令\",{\"1\":{\"1008\":1}}],[\"最后启动我们的程序\",{\"1\":{\"852\":1}}],[\"最后面的点\",{\"1\":{\"835\":1}}],[\"最后通过docker\",{\"1\":{\"818\":1}}],[\"最后通过编译打包生成对应的可执行文件或是类库\",{\"1\":{\"818\":1}}],[\"最后一个参数\",{\"1\":{\"1080\":1}}],[\"最后一个参数是上一步生成的镜像名称\",{\"1\":{\"806\":1}}],[\"最后一条loglevel\",{\"1\":{\"446\":1}}],[\"最后提示\",{\"1\":{\"693\":1}}],[\"最后选择了aspose\",{\"1\":{\"682\":1}}],[\"最后再次使用swagger界面调用返回值已经变成了6974150586715897857\",{\"1\":{\"478\":1}}],[\"最后会调用getbyid方法\",{\"1\":{\"468\":1}}],[\"最后编辑时间\",{\"1\":{\"365\":1,\"877\":1}}],[\"最后是在\",{\"1\":{\"215\":1}}],[\"最后处理的结果都一样\",{\"1\":{\"208\":1}}],[\"最后给大家总结了三张uml类图\",{\"1\":{\"168\":1}}],[\"最后你就可以类似如下进行使用了\",{\"1\":{\"164\":1}}],[\"最后\",{\"1\":{\"161\":2,\"436\":1,\"1109\":1}}],[\"最后找不到再从数据库中查询\",{\"1\":{\"43\":1}}],[\"最有效的办法就是\",{\"1\":{\"134\":1}}],[\"最为合适\",{\"1\":{\"134\":1}}],[\"最终就可以构建出属于自己的镜像\",{\"1\":{\"817\":1}}],[\"最终实现系统的业务逻辑\",{\"1\":{\"435\":1}}],[\"最终会经过的filter\",{\"1\":{\"405\":1}}],[\"最终会生成两个文件\",{\"1\":{\"19\":1}}],[\"最终在\",{\"1\":{\"197\":1}}],[\"最终录取了他\",{\"1\":{\"186\":1}}],[\"最终一致性\",{\"1\":{\"134\":1}}],[\"最终这条数据结果是不符合预期的\",{\"1\":{\"134\":1}}],[\"最终\",{\"1\":{\"134\":5}}],[\"最终缓存中保留的\",{\"1\":{\"134\":1}}],[\"最简单使用方式\",{\"1\":{\"372\":1}}],[\"最简单的解决办法是什么\",{\"1\":{\"134\":1}}],[\"最简单的声明如下\",{\"1\":{\"48\":1}}],[\"最简单直接的方案是\",{\"1\":{\"134\":1}}],[\"最新的\",{\"1\":{\"810\":1}}],[\"最新版界面风格也变了\",{\"1\":{\"693\":1}}],[\"最新版本需要手动查询一下\",{\"1\":{\"3\":1}}],[\"最新提交之间的差别\",{\"1\":{\"23\":1}}],[\"创建安装目录\",{\"1\":{\"1135\":1}}],[\"创建用户\",{\"1\":{\"1110\":1}}],[\"创建虚拟机分配了一个虚拟磁盘\",{\"1\":{\"1110\":1}}],[\"创建新虚拟磁盘\",{\"1\":{\"1110\":1}}],[\"创建新的虚拟机\",{\"1\":{\"1110\":1}}],[\"创建新的\",{\"1\":{\"945\":1}}],[\"创建新的分支并切换到新的分支\",{\"1\":{\"26\":1}}],[\"创建好连接上linux系统\",{\"1\":{\"1109\":1}}],[\"创建好应用后我们可以点击列表的配置该应用的配置项\",{\"1\":{\"661\":1}}],[\"创建文件\",{\"1\":{\"1092\":1,\"1116\":1}}],[\"创建文件或修改文件时间\",{\"0\":{\"1077\":1}}],[\"创建文件夹\",{\"1\":{\"22\":1}}],[\"创建多级目录\",{\"1\":{\"1075\":1}}],[\"创建目录时当前用户对需要操作的目录有读写权限\",{\"1\":{\"1075\":1}}],[\"创建目录\",{\"0\":{\"1075\":1},\"1\":{\"1089\":2}}],[\"创建镜像仓库\",{\"0\":{\"1069\":1}}],[\"创建之前创建\",{\"1\":{\"1064\":1}}],[\"创建irepository<productsalebydayentity>\",{\"1\":{\"1040\":1}}],[\"创建密钥存储文件时提供的密码\",{\"1\":{\"1037\":2}}],[\"创建密码\",{\"1\":{\"802\":1}}],[\"创建对应的网卡\",{\"1\":{\"1013\":1}}],[\"创建对象id\",{\"1\":{\"981\":1}}],[\"创建本地布局\",{\"0\":{\"964\":1}}],[\"创建布局后\",{\"1\":{\"962\":1}}],[\"创建访问oss用户\",{\"1\":{\"954\":1}}],[\"创建容器时必须配置计算资源请求或限制\",{\"1\":{\"914\":1}}],[\"创建并等待pod变成ready状态才进行下一个pod的更新\",{\"1\":{\"914\":1}}],[\"创建namespace\",{\"1\":{\"914\":1}}],[\"创建nlog配置文件\",{\"0\":{\"453\":1}}],[\"创建管理员用户密码\",{\"1\":{\"890\":1}}],[\"创建工作目录\",{\"1\":{\"882\":1}}],[\"创建工厂根据给定的信息生成具体类的对象\",{\"1\":{\"441\":1}}],[\"创建jenkins的工作目录\",{\"0\":{\"882\":1}}],[\"创建一个非管理用户\",{\"1\":{\"1110\":1}}],[\"创建一个\",{\"1\":{\"1110\":1}}],[\"创建一个镜像仓库用来存储我们测试的镜像\",{\"1\":{\"1069\":1}}],[\"创建一个bucket用于存储图片\",{\"1\":{\"954\":1}}],[\"创建一个公开的仓库用户存储图片\",{\"1\":{\"952\":1}}],[\"创建一个文件夹\",{\"1\":{\"863\":1}}],[\"创建一个接口\",{\"1\":{\"439\":1}}],[\"创建的一个bucket有点类似于我们的一块磁盘\",{\"1\":{\"954\":1}}],[\"创建的网络名\",{\"1\":{\"843\":1}}],[\"创建的时候有个\",{\"1\":{\"798\":1}}],[\"创建和部署的应用程序更快\",{\"1\":{\"806\":1}}],[\"创建了一个\",{\"1\":{\"799\":1}}],[\"创建完项目之后\",{\"1\":{\"798\":1}}],[\"创建完成后\",{\"1\":{\"551\":1}}],[\"创建git项目\",{\"1\":{\"798\":1}}],[\"创建标签\",{\"0\":{\"763\":1}}],[\"创建dev分支\",{\"1\":{\"756\":1}}],[\"创建版本库\",{\"1\":{\"752\":1}}],[\"创建仓库\",{\"0\":{\"750\":1,\"793\":1}}],[\"创建pdf\",{\"0\":{\"688\":1}}],[\"创建服务容器\",{\"1\":{\"660\":1}}],[\"创建基类文件basetest\",{\"1\":{\"585\":1}}],[\"创建单元测试\",{\"1\":{\"585\":1}}],[\"创建单元测试项目\",{\"0\":{\"585\":1,\"590\":1}}],[\"创建带依赖项的插件\",{\"0\":{\"577\":1}}],[\"创建宿主程序\",{\"0\":{\"574\":1}}],[\"创建插件基础类库\",{\"0\":{\"573\":1}}],[\"创建配置文件netbydocker\",{\"1\":{\"547\":1}}],[\"创建配置文件baget\",{\"1\":{\"211\":1,\"1117\":1}}],[\"创建数据库并初始化数据库架构\",{\"1\":{\"502\":1}}],[\"创建人\",{\"1\":{\"501\":1}}],[\"创建不会将任何字段标记为无效的\",{\"1\":{\"477\":1}}],[\"创建日志文件的方式\",{\"1\":{\"447\":1}}],[\"创建实现相同接口的具体类\",{\"1\":{\"440\":1}}],[\"创建实例对象\",{\"1\":{\"117\":1}}],[\"创建时间\",{\"1\":{\"331\":1,\"501\":1}}],[\"创建项目\",{\"0\":{\"232\":1},\"1\":{\"851\":1}}],[\"创建分组\",{\"0\":{\"227\":1}}],[\"创建分支\",{\"0\":{\"756\":1},\"1\":{\"26\":1}}],[\"创建索引和维护索引需要耗费时间\",{\"1\":{\"206\":1}}],[\"创建索引的过程\",{\"1\":{\"204\":1}}],[\"创建唯一性索引\",{\"1\":{\"206\":1}}],[\"创建matcher\",{\"1\":{\"167\":1}}],[\"创建\",{\"0\":{\"224\":1},\"1\":{\"165\":1,\"446\":1,\"501\":1,\"914\":1,\"942\":1}}],[\"创建cultureinfo的时候\",{\"1\":{\"124\":1}}],[\"创建ssh\",{\"1\":{\"19\":1}}],[\"创建账户\",{\"0\":{\"18\":1}}],[\"将主机虚拟机适配器连接到此网络\",{\"1\":{\"1110\":1}}],[\"将此用户做为管理员\",{\"1\":{\"1110\":1}}],[\"将虚拟磁盘存储为单个文件\",{\"1\":{\"1110\":1}}],[\"将我们的movaxterm连接配置修改为我们修改后的ip地址重新连接\",{\"1\":{\"1107\":1}}],[\"将hello\",{\"1\":{\"1096\":1}}],[\"将命令的输出重定向到一个文件中\",{\"1\":{\"1096\":1}}],[\"将子目录及子目录中文件删除\",{\"1\":{\"1078\":1}}],[\"将排序结果方向输出\",{\"1\":{\"1074\":1}}],[\"将asp\",{\"1\":{\"1070\":1}}],[\"将远程仓库中的源代码领取到workfile自动化构建脚本运行的服务器\",{\"1\":{\"1070\":1}}],[\"将远程版本库合并到本地版本库\",{\"1\":{\"798\":1}}],[\"将它添加到项目中\",{\"1\":{\"1037\":1}}],[\"将下载文件复制到您的计算机上供以后安装\",{\"1\":{\"1012\":1}}],[\"将仓库文件显示为侧边栏目录展示\",{\"1\":{\"1005\":1}}],[\"将il代码反编译为源代码不可能是完美的\",{\"1\":{\"986\":1}}],[\"将调试器附加到某个进程后\",{\"1\":{\"983\":1}}],[\"将中文翻译英文\",{\"1\":{\"968\":1}}],[\"将光标置于任意\",{\"1\":{\"956\":1}}],[\"将如上获取到的\",{\"1\":{\"954\":1}}],[\"将接收来自\",{\"1\":{\"942\":1}}],[\"将请求二次封装为udp包\",{\"1\":{\"928\":1}}],[\"将请求路径作为缓存的key\",{\"1\":{\"402\":1}}],[\"将独立的网络协议栈隔离到不同的命名空间中\",{\"1\":{\"916\":1}}],[\"将node0上key值为key1的污点移除\",{\"1\":{\"914\":1}}],[\"将node标志为可调度\",{\"1\":{\"914\":1}}],[\"将node标志为不可调度\",{\"1\":{\"914\":1}}],[\"将原本独立运行于单个或者多个节点的任务连接起来\",{\"1\":{\"879\":1}}],[\"将所有依赖压缩成\",{\"1\":{\"870\":1}}],[\"将所有需要的\",{\"1\":{\"870\":1}}],[\"将所做的更改\",{\"1\":{\"798\":2}}],[\"将docker服务设置为开机启动\",{\"1\":{\"862\":1}}],[\"将项目先发布\",{\"1\":{\"852\":1}}],[\"将项目进行发布\",{\"1\":{\"563\":1,\"806\":1}}],[\"将entrypoint\",{\"1\":{\"838\":1}}],[\"将构建上下文目录下的文件拷贝到容器中的工作目录中\",{\"1\":{\"837\":1}}],[\"将构建上下文目录下的文件拷贝到容器的当前工作目录中\",{\"1\":{\"834\":1}}],[\"将宿主机的资源拷贝到镜像中\",{\"1\":{\"826\":1}}],[\"将宿主机的资源拷贝进镜像中\",{\"1\":{\"825\":1}}],[\"将自己的程序\",{\"1\":{\"817\":1}}],[\"将容器提交为镜像的方式\",{\"1\":{\"812\":1}}],[\"将容器导出为tar文件\",{\"1\":{\"811\":1}}],[\"将容器方便离线导出和导入\",{\"1\":{\"811\":1}}],[\"将容器内数据文件夹或者日志\",{\"1\":{\"37\":1,\"854\":1}}],[\"将容器内部端口向外映射\",{\"1\":{\"37\":1,\"854\":1}}],[\"将发布文件打包为一个镜像\",{\"1\":{\"806\":1}}],[\"将发布之后的文件拷贝到装有docker的主机上\",{\"1\":{\"806\":1}}],[\"将两个版本库进行合并操作\",{\"1\":{\"798\":1}}],[\"将本地\",{\"1\":{\"788\":1}}],[\"将本地一个文件夹变为git可以管理的仓库\",{\"1\":{\"750\":1}}],[\"将对应文件打包生成为镜像\",{\"1\":{\"805\":1}}],[\"将对应状态的\",{\"1\":{\"780\":1}}],[\"将对象自身从其依赖关系的管理中解放出来\",{\"1\":{\"430\":1}}],[\"将参数t的值替换成环境变量的值\",{\"1\":{\"744\":1}}],[\"将目录切换到静态文件所在目录\",{\"1\":{\"580\":1}}],[\"将刚创建的配置文件netbydocker\",{\"1\":{\"547\":1}}],[\"将程序中的对象自动持久化到关系数据库中\",{\"1\":{\"529\":1}}],[\"将引发异常\",{\"1\":{\"503\":1}}],[\"将名为\",{\"1\":{\"502\":1}}],[\"将使用公共默认构造函数来实例化类\",{\"1\":{\"470\":1}}],[\"将字符串\",{\"1\":{\"468\":2}}],[\"将创建\",{\"1\":{\"446\":1}}],[\"将创建一个新的提交点\",{\"1\":{\"204\":1}}],[\"将这个值保存成全局变量\",{\"1\":{\"745\":1}}],[\"将这个值保存成环境变量\",{\"1\":{\"744\":1}}],[\"将这个数据值保存到环境变量或全局变量中\",{\"1\":{\"745\":1}}],[\"将这个管理工作的责任交给第三方来完成\",{\"1\":{\"430\":1}}],[\"将这些准备就绪的bean放到map缓存池中\",{\"1\":{\"443\":1}}],[\"将这里修改为无\",{\"1\":{\"312\":1}}],[\"将不带幂等性的接口\",{\"1\":{\"425\":1}}],[\"将不会给该消费者分发更多的消息\",{\"1\":{\"208\":1}}],[\"将要用的actionfilter本身注册为一个service注册到di容器中\",{\"1\":{\"409\":1}}],[\"将服务通过dns\",{\"1\":{\"914\":1}}],[\"将服务生命期的范围限定为单个请求的生命期\",{\"1\":{\"349\":1}}],[\"将服务注入到使用到它的类的构造函数中\",{\"1\":{\"344\":1}}],[\"将服务器视为无状态的\",{\"1\":{\"210\":1}}],[\"将报文转发到不同的父代理或者原始服务器上去\",{\"1\":{\"322\":1}}],[\"将其提交到对应的远程服务器上面\",{\"1\":{\"789\":1}}],[\"将其转换为\",{\"1\":{\"322\":1}}],[\"将其继承\",{\"1\":{\"215\":1}}],[\"将vs快捷键映射到vscode\",{\"1\":{\"321\":1}}],[\"将各类素材封装为对应的组件\",{\"1\":{\"243\":1}}],[\"将业务和服务结合在一起\",{\"1\":{\"210\":1}}],[\"将大量组件维持在一起会带来难以部署\",{\"1\":{\"210\":1}}],[\"将代码保持在类似的成熟度等级上\",{\"1\":{\"210\":1}}],[\"将会越来越受欢迎\",{\"1\":{\"209\":1}}],[\"将会变的很简单\",{\"1\":{\"140\":1}}],[\"将丢失的那批数据\",{\"1\":{\"208\":1}}],[\"将被\",{\"1\":{\"208\":2}}],[\"将被删除并开始一个新的\",{\"1\":{\"204\":1}}],[\"将queue的持久化标识durable设置为true\",{\"1\":{\"208\":1}}],[\"将信道设置成\",{\"1\":{\"208\":1}}],[\"将错误信息写到日志文件中\",{\"1\":{\"206\":1}}],[\"将新的文档增量地添加到索引中\",{\"1\":{\"204\":1}}],[\"将新值写入数据库\",{\"1\":{\"134\":2}}],[\"将一个类的接口\",{\"1\":{\"202\":1}}],[\"将该目录的dll文件拷贝到插件文件夹下\",{\"1\":{\"577\":1}}],[\"将该正则表达式编译为程序集\",{\"1\":{\"163\":1}}],[\"将该用户添加到docker组中\",{\"1\":{\"8\":1}}],[\"将\",{\"1\":{\"134\":1,\"159\":1,\"166\":2,\"167\":1,\"668\":2,\"786\":1,\"1079\":1}}],[\"将旧值写入缓存\",{\"1\":{\"134\":3}}],[\"将上面的例子中一个代码写到控制台中发布成镜像运行\",{\"1\":{\"125\":1}}],[\"将类型绑定到现有对象\",{\"1\":{\"86\":1,\"90\":1}}],[\"将特性与程序实体相关联后\",{\"1\":{\"41\":1}}],[\"将分支名列表显示出来\",{\"1\":{\"26\":1}}],[\"将某个远程仓库的内容复制到本地\",{\"1\":{\"23\":1}}],[\"将来运行git\",{\"1\":{\"23\":1}}],[\"将暂存区中的文件保存仓库的历史记录中\",{\"1\":{\"23\":1}}],[\"将文件从缓存区提交到远程\",{\"1\":{\"22\":1}}],[\"将color\",{\"1\":{\"17\":1}}],[\"不传默认为是alpha\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"不妨看一下\",{\"1\":{\"1110\":1}}],[\"不勾选\",{\"1\":{\"1110\":1}}],[\"不添加无法上外网\",{\"1\":{\"1107\":1}}],[\"不包括子目录\",{\"1\":{\"1096\":1}}],[\"不\",{\"1\":{\"1074\":1}}],[\"不输出任何标识符\",{\"1\":{\"1074\":1}}],[\"不再推送镜像仓库\",{\"1\":{\"1070\":1}}],[\"不再详细描述\",{\"1\":{\"1061\":1}}],[\"不再重复截图\",{\"1\":{\"811\":1}}],[\"不断改进\",{\"1\":{\"1009\":1}}],[\"不设置任何规则\",{\"1\":{\"947\":1}}],[\"不设置失效时间\",{\"1\":{\"134\":1}}],[\"不清理保留volume\",{\"1\":{\"914\":1}}],[\"不可再分的值\",{\"1\":{\"850\":1}}],[\"不可传null\",{\"1\":{\"99\":1}}],[\"不指定\",{\"1\":{\"839\":1}}],[\"不指定主机目录\",{\"1\":{\"815\":1}}],[\"不加选项默认只列出运行中的容器\",{\"1\":{\"811\":1}}],[\"不加查询课程\",{\"1\":{\"520\":1}}],[\"不显示具体加载过程\",{\"1\":{\"810\":1}}],[\"不显示某些接口\",{\"0\":{\"484\":1}}],[\"不熟悉docker的小伙伴可能看见这图直接懵圈了\",{\"1\":{\"807\":1}}],[\"不像传统的虚拟机那样\",{\"1\":{\"806\":1}}],[\"不一样的话才见怪了\",{\"1\":{\"789\":1}}],[\"不一定全面\",{\"1\":{\"204\":1}}],[\"不愧是鬼才\",{\"1\":{\"784\":1}}],[\"不安全\",{\"1\":{\"779\":2}}],[\"不排除后期做频率限制的可能\",{\"1\":{\"700\":1}}],[\"不建议使用\",{\"1\":{\"697\":1}}],[\"不建议场景\",{\"0\":{\"665\":1}}],[\"不建议生产使用\",{\"1\":{\"35\":1}}],[\"不借助包\",{\"0\":{\"656\":1}}],[\"不受影响\",{\"1\":{\"634\":1}}],[\"不受版本控制\",{\"1\":{\"488\":1,\"500\":1,\"648\":1,\"654\":1}}],[\"不是每一种存储都支持这三种方式\",{\"1\":{\"914\":1}}],[\"不是实时更新\",{\"1\":{\"661\":1}}],[\"不是成功就返回具体错误信息\",{\"1\":{\"600\":1}}],[\"不是我们想要的格式\",{\"1\":{\"321\":1}}],[\"不写版本号的话走的是默认的版本号\",{\"1\":{\"642\":1}}],[\"不写单元测试的程序员不是优秀的工程师\",{\"1\":{\"592\":1}}],[\"不写毕业院校\",{\"1\":{\"178\":1}}],[\"不兼容于当前版本\",{\"1\":{\"574\":1}}],[\"不配置https\",{\"1\":{\"550\":1}}],[\"不支持任何版本的\",{\"1\":{\"544\":1}}],[\"不支持异步方案\",{\"0\":{\"506\":1}}],[\"不跟踪没有主键的实体类型\",{\"1\":{\"504\":1}}],[\"不引发异常\",{\"1\":{\"503\":1}}],[\"不直接返回实体类\",{\"1\":{\"501\":1}}],[\"不适合存储机密信息\",{\"1\":{\"484\":1}}],[\"不做处理那么就跳过\",{\"1\":{\"403\":2}}],[\"不做准备工作吗\",{\"1\":{\"191\":1}}],[\"不自动释放对象\",{\"1\":{\"344\":2}}],[\"不应该依赖于具体的实现\",{\"1\":{\"344\":1}}],[\"不应使用\",{\"1\":{\"159\":1}}],[\"不验证通信方的身份\",{\"1\":{\"323\":1}}],[\"不论是公共代理还是私有代理\",{\"1\":{\"322\":1}}],[\"不允许重复提交\",{\"1\":{\"424\":1}}],[\"不允许同步读取\",{\"1\":{\"402\":2}}],[\"不允许使用开源代码的作者\",{\"1\":{\"252\":1}}],[\"不允许为空\",{\"1\":{\"206\":1}}],[\"不经过修改无法直接用在\",{\"1\":{\"247\":1}}],[\"不经常改动的页面\",{\"1\":{\"206\":1}}],[\"不经常访问的数据\",{\"1\":{\"134\":1}}],[\"不局限以上\",{\"1\":{\"240\":1}}],[\"不算是计算密集型\",{\"1\":{\"207\":1}}],[\"不宜建立索引\",{\"1\":{\"206\":2}}],[\"不光是表需要占用数据空间\",{\"1\":{\"206\":1}}],[\"不会询问直接覆盖\",{\"1\":{\"1079\":1,\"1080\":1}}],[\"不会出现警告信息\",{\"1\":{\"1078\":1}}],[\"不会出现死锁\",{\"1\":{\"206\":1}}],[\"不会启动新的进程\",{\"1\":{\"811\":1}}],[\"不会自动合并\",{\"1\":{\"798\":1}}],[\"不会受到影响\",{\"1\":{\"700\":1}}],[\"不会写单元测试的程序员不是合格的程序员\",{\"1\":{\"592\":1}}],[\"不会重启原来已运行的程序\",{\"1\":{\"564\":1}}],[\"不会和\",{\"1\":{\"210\":1}}],[\"不会为每个请求分配cpu和内存资源\",{\"1\":{\"207\":1}}],[\"不会\",{\"1\":{\"205\":1}}],[\"不会调用后面的中间件\",{\"1\":{\"157\":1}}],[\"不难看出swapping对于性能是多么可怕\",{\"1\":{\"204\":1}}],[\"不负责文档级别的管理\",{\"1\":{\"204\":1}}],[\"不通过不通知也就算了\",{\"1\":{\"201\":1}}],[\"不管咋样\",{\"1\":{\"820\":1}}],[\"不管是在主机还是在容器中修改数据\",{\"1\":{\"815\":1}}],[\"不管是主机改动\",{\"1\":{\"814\":1}}],[\"不管集装箱里面装的什么\",{\"1\":{\"804\":1}}],[\"不管哪一个节点的内容发生丢失或缺失的话\",{\"1\":{\"789\":1}}],[\"不管缓存多久只要文件没有发生变化缓存都是有效的\",{\"1\":{\"374\":1}}],[\"不管来多少条重复消息\",{\"1\":{\"208\":1}}],[\"不管对方怎么口头承诺\",{\"1\":{\"200\":1}}],[\"不管他能不能答出来\",{\"1\":{\"192\":1}}],[\"不管你有多少委屈都不要吐槽\",{\"1\":{\"187\":1}}],[\"不管你经历了啥\",{\"1\":{\"187\":1}}],[\"不为了面试\",{\"1\":{\"190\":1}}],[\"不擅长和人沟通\",{\"1\":{\"189\":1}}],[\"不用在线拉取\",{\"1\":{\"810\":1}}],[\"不用再单独安装\",{\"1\":{\"806\":1}}],[\"不用担心\",{\"1\":{\"739\":1}}],[\"不用担心安全问题\",{\"1\":{\"288\":1}}],[\"不用sql直接编码\",{\"1\":{\"529\":1}}],[\"不用多久内存限制就会被这个内存使用量超越\",{\"1\":{\"209\":1}}],[\"不用把优点包装成缺点\",{\"1\":{\"189\":1}}],[\"不用的协议之间请求都会出现跨域问题\",{\"1\":{\"154\":1}}],[\"不用的端口\",{\"1\":{\"154\":1}}],[\"不怕累\",{\"1\":{\"188\":1}}],[\"不同命名空间下可以存在相同的控制器\",{\"1\":{\"639\":1,\"645\":1,\"651\":1}}],[\"不同水平\",{\"1\":{\"183\":1}}],[\"不同的字符表示不同的文件类型\",{\"1\":{\"1081\":1}}],[\"不同的用户处于不同的地位\",{\"1\":{\"1080\":1}}],[\"不同的公司或者组织有不同的实现方案\",{\"1\":{\"928\":1}}],[\"不同的容器平台\",{\"1\":{\"928\":1}}],[\"不同的接口\",{\"1\":{\"732\":1}}],[\"不同的\",{\"1\":{\"209\":1}}],[\"不同的域名\",{\"1\":{\"154\":1}}],[\"不同的分支单独进行各自的作业\",{\"1\":{\"25\":1}}],[\"不符合的直接赶出去\",{\"1\":{\"155\":1}}],[\"不发生改变也就意味着市场将会越来越小\",{\"1\":{\"140\":1}}],[\"不存在的连接字符串\",{\"1\":{\"1047\":1}}],[\"不存在请求和响应的区别\",{\"1\":{\"534\":1}}],[\"不存在\",{\"1\":{\"134\":1}}],[\"不仅仅有内置的验证特性\",{\"1\":{\"473\":1}}],[\"不仅效率低\",{\"1\":{\"215\":1}}],[\"不仅缓存利用率不高\",{\"1\":{\"134\":1}}],[\"不仅要更新数据库\",{\"1\":{\"134\":1}}],[\"不需要确认\",{\"1\":{\"988\":1}}],[\"不需要我们再进行那些繁琐的操作\",{\"1\":{\"710\":1}}],[\"不需要任何配置\",{\"1\":{\"666\":1}}],[\"不需要对测试方法所在类型标记\",{\"1\":{\"598\":1}}],[\"不需要模拟直接传null\",{\"1\":{\"591\":1}}],[\"不需要了解多有业务\",{\"1\":{\"210\":1}}],[\"不需要\",{\"1\":{\"205\":1}}],[\"不需要再查数据库\",{\"1\":{\"134\":1}}],[\"不需要添加其他的参数\",{\"1\":{\"23\":1}}],[\"不更新缓存\",{\"1\":{\"134\":1}}],[\"不灵活\",{\"1\":{\"133\":1}}],[\"不能忍\",{\"1\":{\"865\":1}}],[\"不能在mynginx内部通过容器名mynginx3访问\",{\"1\":{\"842\":1}}],[\"不能通过容器名访问\",{\"1\":{\"841\":1}}],[\"不能拼接\",{\"1\":{\"838\":1}}],[\"不能加载带依赖项的\",{\"1\":{\"577\":1}}],[\"不能使用\",{\"1\":{\"522\":1}}],[\"不能为空\",{\"1\":{\"474\":3,\"475\":3}}],[\"不能拦截处理action以外的错误\",{\"1\":{\"414\":1}}],[\"不能选择语言版本\",{\"1\":{\"170\":1}}],[\"不能有重复的\",{\"1\":{\"206\":1}}],[\"不能有\",{\"1\":{\"134\":1}}],[\"不能立即删\",{\"1\":{\"134\":1}}],[\"不能按照表\",{\"1\":{\"133\":1}}],[\"不能用于载入标识同样但路径不同的程序集\",{\"1\":{\"117\":1}}],[\"不才老黄\",{\"1\":{\"125\":2}}],[\"不常用\",{\"1\":{\"97\":1,\"99\":1}}],[\"不过特殊的需求也可以通过这里安装\",{\"1\":{\"959\":1}}],[\"不过貌似如何使用阿里云docker仓库好像不需要配置网速都不差\",{\"1\":{\"862\":1}}],[\"不过这里不是通过执行命令构建\",{\"1\":{\"851\":1}}],[\"不过每次回车的意思我也搜索出来了\",{\"1\":{\"802\":1}}],[\"不过每条需要收费0\",{\"1\":{\"694\":1}}],[\"不过还需要在微信平台进行配置\",{\"1\":{\"711\":1}}],[\"不过还是有些服务是部署在windows服务器下的\",{\"1\":{\"559\":1}}],[\"不过还是感觉不错的\",{\"1\":{\"320\":1}}],[\"不过免费的已经够我用了\",{\"1\":{\"694\":1}}],[\"不过对于公司来说\",{\"1\":{\"690\":1}}],[\"不过该接口有些依赖项用不到\",{\"1\":{\"591\":1}}],[\"不过一般我们使用都是进行完全匹配\",{\"1\":{\"470\":1}}],[\"不过本文内容已经够为下次文章铺垫\",{\"1\":{\"364\":1}}],[\"不过我们常用的一般就下面三种代理方式\",{\"1\":{\"322\":1}}],[\"不过\",{\"1\":{\"322\":2}}],[\"不过公共代理却有他自己独有的优点\",{\"1\":{\"322\":1}}],[\"不过它还有一种特殊的叫法\",{\"1\":{\"322\":1}}],[\"不过接口只能为成员提供定义而不能提供实现\",{\"1\":{\"82\":1}}],[\"不过如果你显式定义了构造器\",{\"1\":{\"71\":1}}],[\"不过构造器的名字和返回值只能和封装它的类型相同\",{\"1\":{\"69\":1}}],[\"不知道你们迷不迷\",{\"1\":{\"41\":1}}],[\"不挂载\",{\"1\":{\"37\":1,\"854\":1}}],[\"不要是中文\",{\"1\":{\"952\":1}}],[\"不要慌\",{\"1\":{\"849\":1}}],[\"不要嘲笑\",{\"1\":{\"377\":1}}],[\"不要使用箭头键\",{\"1\":{\"243\":1}}],[\"不要使用汉字\",{\"1\":{\"17\":1}}],[\"不要为这个用户的名称\",{\"1\":{\"209\":1}}],[\"不要让消息的多次消费带来影响\",{\"1\":{\"208\":1}}],[\"不要在浏览器上输出错误信息\",{\"1\":{\"206\":1}}],[\"不要在远程仓库添加readme\",{\"1\":{\"21\":1}}],[\"不要随意修改垃圾回收器\",{\"1\":{\"204\":1}}],[\"不要超过32gb\",{\"1\":{\"204\":1}}],[\"不要打听求职者隐私\",{\"1\":{\"201\":1}}],[\"不要再涨价\",{\"0\":{\"201\":1}}],[\"不要不好意思提这种要求\",{\"1\":{\"200\":1}}],[\"不要根据月工资去谈薪酬\",{\"1\":{\"197\":1}}],[\"不要虚报当前收入\",{\"1\":{\"195\":1}}],[\"不要抱怨前公司\",{\"1\":{\"187\":1}}],[\"不要书写过于复杂的正则表达式\",{\"1\":{\"163\":1}}],[\"不要有太大延迟\",{\"1\":{\"134\":1}}],[\"不使用docker安装gitlab\",{\"1\":{\"4\":1}}],[\"请将\",{\"1\":{\"1037\":1}}],[\"请将密码留空\",{\"1\":{\"964\":1}}],[\"请检查\",{\"1\":{\"1037\":1}}],[\"请检查是否按上面的配置匿名访问配置了文件夹的匿名访问权限\",{\"1\":{\"954\":1}}],[\"请单击\",{\"1\":{\"1012\":1}}],[\"请尽情学习吧\",{\"1\":{\"1007\":1}}],[\"请尽量理清你对其它版本管理系统已有的认识\",{\"1\":{\"776\":1}}],[\"请在监视窗口中右键单击此类引用\",{\"1\":{\"981\":1}}],[\"请在\",{\"1\":{\"868\":1}}],[\"请问\",{\"1\":{\"863\":1}}],[\"请工程师尽快查看\",{\"1\":{\"694\":1}}],[\"请先做打印设置\",{\"1\":{\"691\":2}}],[\"请直接使用任意一个节点作为控制台\",{\"1\":{\"661\":1}}],[\"请升级到该插件的最新版本\",{\"1\":{\"574\":1}}],[\"请叫我头头哥\",{\"1\":{\"564\":1}}],[\"请参阅\",{\"1\":{\"955\":1}}],[\"请参阅包含关联数据\",{\"1\":{\"514\":1}}],[\"请参见上面打开github的方法解决\",{\"1\":{\"693\":1}}],[\"请参考下文\",{\"1\":{\"20\":1}}],[\"请参考如下文章\",{\"1\":{\"16\":1}}],[\"请联系管理员\",{\"1\":{\"413\":1}}],[\"请使用\",{\"1\":{\"398\":1,\"596\":1}}],[\"请使用英文\",{\"1\":{\"17\":1}}],[\"请和我的代理人去说\",{\"1\":{\"322\":1}}],[\"请移步\",{\"1\":{\"215\":1}}],[\"请陈述stub\",{\"1\":{\"207\":1}}],[\"请求将被转发到后端的实例上\",{\"1\":{\"919\":1}}],[\"请求将被重定向到这个相对路径\",{\"1\":{\"359\":1}}],[\"请求成功\",{\"1\":{\"746\":3}}],[\"请求的登录接口url\",{\"1\":{\"744\":1}}],[\"请求的节点扮演协调节点的角色\",{\"1\":{\"204\":1}}],[\"请求地址\",{\"1\":{\"734\":1}}],[\"请求地址传入空值\",{\"1\":{\"474\":1}}],[\"请求url\",{\"1\":{\"733\":1,\"734\":1}}],[\"请求方法\",{\"1\":{\"733\":1,\"734\":2}}],[\"请求方式\",{\"1\":{\"483\":1}}],[\"请求体数据\",{\"1\":{\"734\":1}}],[\"请求体类型\",{\"1\":{\"734\":1}}],[\"请求体的数据类型是不一样的\",{\"1\":{\"732\":1}}],[\"请求体\",{\"1\":{\"732\":1,\"733\":1,\"734\":1}}],[\"请求体中参数校验\",{\"1\":{\"419\":1}}],[\"请求前置脚本都会使用到变量\",{\"1\":{\"743\":1}}],[\"请求前置脚本\",{\"0\":{\"744\":1},\"1\":{\"718\":1}}],[\"请求返回参数\",{\"1\":{\"694\":1}}],[\"请求和响应都通过流的方式进行交互\",{\"1\":{\"679\":1}}],[\"请求和返回都会经过它\",{\"1\":{\"403\":1}}],[\"请求格式如下\",{\"1\":{\"629\":1}}],[\"请求类型\",{\"1\":{\"734\":1}}],[\"请求类\",{\"1\":{\"607\":1}}],[\"请求类似\",{\"1\":{\"569\":1}}],[\"请求时候参数放在参数frombody传递\",{\"1\":{\"606\":1}}],[\"请求头\",{\"1\":{\"732\":1,\"733\":1}}],[\"请求头部默认添加\",{\"1\":{\"610\":1}}],[\"请求头传递token只是为了演示请求头传递参数的写法\",{\"1\":{\"600\":1}}],[\"请求头中\",{\"1\":{\"484\":1}}],[\"请求参数指的是\",{\"1\":{\"743\":1}}],[\"请求参数\",{\"1\":{\"475\":1}}],[\"请求里传递参数token\",{\"1\":{\"472\":1}}],[\"请求示例\",{\"1\":{\"471\":1,\"472\":1}}],[\"请求中的可用源\",{\"1\":{\"468\":1}}],[\"请求限制属性\",{\"1\":{\"427\":1}}],[\"请求完成之后传递给下一个请求\",{\"1\":{\"399\":1}}],[\"请求接口返回的数据都是很复杂的json数据\",{\"1\":{\"746\":1}}],[\"请求接口重新获取最近配置\",{\"1\":{\"661\":1}}],[\"请求接口示例\",{\"1\":{\"472\":1}}],[\"请求接口\",{\"1\":{\"364\":1,\"694\":1}}],[\"请求结束时候会释放服务\",{\"1\":{\"347\":1}}],[\"请求结束时候会释放有作用域的服务\",{\"1\":{\"346\":1}}],[\"请求服务器存储一个资源\",{\"1\":{\"323\":1}}],[\"请求获取由request\",{\"1\":{\"323\":1}}],[\"请求获取request\",{\"1\":{\"323\":1}}],[\"请求行以一个方法符号开头\",{\"1\":{\"323\":1}}],[\"请求正文\",{\"1\":{\"323\":1,\"468\":1}}],[\"请求量很大\",{\"1\":{\"209\":1}}],[\"请求削峰\",{\"1\":{\"208\":1}}],[\"请求\",{\"1\":{\"204\":1,\"446\":1}}],[\"请简要叙述数据库连接池的机制\",{\"1\":{\"203\":1}}],[\"请解释反射的基本原理和其实现的基石\",{\"1\":{\"203\":1}}],[\"请解释委托的基本原理\",{\"1\":{\"203\":1}}],[\"请注意接下来的内容非常重要\",{\"1\":{\"776\":1}}],[\"请注意\",{\"1\":{\"46\":1}}],[\"请往下看\",{\"1\":{\"37\":1}}],[\"~\",{\"1\":{\"17\":1,\"19\":1,\"404\":1,\"405\":1,\"564\":1,\"777\":2,\"797\":1,\"1092\":1,\"1095\":1,\"1096\":1,\"1110\":1}}],[\"名为\",{\"1\":{\"943\":1,\"944\":1}}],[\"名词解释\",{\"0\":{\"916\":1}}],[\"名片等印刷物\",{\"1\":{\"256\":1}}],[\"名字得到\",{\"1\":{\"443\":1}}],[\"名字和邮箱会一同被公开\",{\"1\":{\"17\":1}}],[\"名字需要使用英文\",{\"1\":{\"17\":1}}],[\"名称必须记录在\",{\"1\":{\"1082\":1}}],[\"名称解析为\",{\"1\":{\"945\":1}}],[\"名称映射到\",{\"1\":{\"941\":1}}],[\"名称不直观\",{\"1\":{\"815\":1}}],[\"名称不能为空|名称不能小于6位\",{\"1\":{\"477\":1}}],[\"名称不能为空\",{\"1\":{\"474\":1}}],[\"名称不能小于6位\",{\"1\":{\"474\":2,\"475\":1}}],[\"名称和工号不能一样\",{\"1\":{\"475\":4}}],[\"名称匹配不区分大小写\",{\"1\":{\"468\":1}}],[\"名称\",{\"1\":{\"17\":1,\"474\":1,\"475\":1,\"573\":1,\"938\":1,\"952\":1}}],[\"名言\",{\"1\":{\"0\":1}}],[\"xian\",{\"1\":{\"1123\":1}}],[\"xiaoxiaotank\",{\"1\":{\"168\":2,\"893\":2,\"899\":1,\"902\":2}}],[\"xfs\",{\"1\":{\"1110\":5}}],[\"xf5k2u3ohf7i9mogmeoibw\",{\"1\":{\"214\":1,\"1120\":1}}],[\"xt=urn\",{\"1\":{\"1034\":4}}],[\"xen的基于hypervisor的技术\",{\"1\":{\"1013\":1}}],[\"x64\",{\"1\":{\"1012\":10,\"1034\":6,\"1035\":6,\"1134\":1,\"1135\":1}}],[\"x4v3y\",{\"1\":{\"973\":1}}],[\"xz\",{\"1\":{\"825\":1}}],[\"xkor04`hwh\",{\"1\":{\"779\":1}}],[\"xr\",{\"1\":{\"777\":4,\"1085\":1}}],[\"x射線髮射器\",{\"1\":{\"693\":1}}],[\"xl=4549830656\",{\"1\":{\"1034\":1}}],[\"xl=4439019520\",{\"1\":{\"1034\":1}}],[\"xl=6223781888\",{\"1\":{\"1034\":1}}],[\"xl=6060609536\",{\"1\":{\"1034\":1}}],[\"xlh\",{\"1\":{\"693\":1}}],[\"xljiulang\",{\"1\":{\"332\":1}}],[\"xh34534\",{\"1\":{\"693\":1}}],[\"x版本以后支持并行运行测试\",{\"1\":{\"588\":1}}],[\"xunit\",{\"0\":{\"598\":1,\"599\":1},\"1\":{\"585\":6,\"588\":3,\"589\":1,\"595\":1,\"598\":7,\"599\":4}}],[\"xueweisuoyong\",{\"1\":{\"16\":1}}],[\"x86\",{\"1\":{\"537\":1,\"870\":11,\"1034\":6,\"1035\":6,\"1079\":1,\"1103\":1,\"1110\":3}}],[\"x使用executesqlraw方法\",{\"1\":{\"528\":1}}],[\"x使用executesqlcommand\",{\"1\":{\"528\":1}}],[\"x里面使用fromsqlrow方法\",{\"1\":{\"509\":1}}],[\"x里面使用fromsql\",{\"1\":{\"509\":1}}],[\"xa5300\",{\"1\":{\"1037\":1}}],[\"xamarin\",{\"1\":{\"467\":2}}],[\"xabaril\",{\"1\":{\"152\":1}}],[\"xsi\",{\"1\":{\"453\":2}}],[\"xsi=\",{\"1\":{\"453\":1}}],[\"xsd\",{\"1\":{\"453\":1}}],[\"xshell\",{\"0\":{\"280\":1},\"1\":{\"1110\":1}}],[\"xyz\",{\"1\":{\"336\":1,\"1084\":2}}],[\"xotcyj3shs13ju9nklxavg\",{\"1\":{\"242\":1}}],[\"xmind\",{\"1\":{\"1014\":1}}],[\"xmlhelper\",{\"1\":{\"691\":2}}],[\"xmlpath\",{\"1\":{\"483\":2,\"484\":2,\"494\":2}}],[\"xmlfile\",{\"1\":{\"483\":2,\"484\":2}}],[\"xmlschema\",{\"1\":{\"453\":1}}],[\"xmlns\",{\"1\":{\"453\":1}}],[\"xmlns=\",{\"1\":{\"453\":1}}],[\"xml解析\",{\"1\":{\"438\":1,\"442\":1}}],[\"xml\",{\"1\":{\"321\":2,\"375\":1,\"443\":1,\"447\":1,\"453\":1,\"483\":2,\"484\":1,\"494\":1,\"970\":2,\"1009\":1}}],[\"xms32g更好一点\",{\"1\":{\"204\":1}}],[\"xmx32g\",{\"1\":{\"204\":1}}],[\"xx\",{\"0\":{\"187\":1}}],[\"xxx为\",{\"1\":{\"564\":1}}],[\"xxx\",{\"1\":{\"180\":9,\"185\":2,\"342\":7,\"540\":1,\"564\":4,\"694\":3,\"734\":1,\"802\":1,\"1127\":1}}],[\"xxxxx\",{\"1\":{\"791\":1}}],[\"xxxxxx\",{\"1\":{\"684\":1}}],[\"xxxx\",{\"1\":{\"43\":8,\"605\":1,\"949\":1,\"1048\":1}}],[\"x\",{\"0\":{\"567\":1,\"611\":1},\"1\":{\"52\":2,\"54\":4,\"55\":3,\"82\":1,\"125\":11,\"134\":29,\"155\":1,\"447\":1,\"501\":3,\"506\":5,\"507\":3,\"567\":1,\"569\":2,\"574\":2,\"655\":1,\"656\":4,\"691\":12,\"732\":1,\"733\":2,\"777\":4,\"1081\":1,\"1084\":1,\"1085\":1,\"1110\":1,\"1131\":8}}],[\"xcag\",{\"1\":{\"8\":1}}],[\"xccqh\",{\"1\":{\"3\":1,\"36\":1}}],[\"详解\",{\"1\":{\"932\":1}}],[\"详解git安装过程\",{\"1\":{\"16\":1}}],[\"详见\",{\"1\":{\"778\":2}}],[\"详细查看百度百科\",{\"1\":{\"436\":1}}],[\"详细配置还得看github文档介绍\",{\"1\":{\"217\":1}}],[\"详细阅读\",{\"1\":{\"205\":1}}],[\"详细描述一下es搜索的过程\",{\"1\":{\"204\":1}}],[\"详细描述一下es更新和删除文档的过程\",{\"1\":{\"204\":1}}],[\"详细描述一下es索引文档的过程\",{\"1\":{\"204\":1}}],[\"详细步骤如下\",{\"1\":{\"124\":1}}],[\"详细步骤如图\",{\"1\":{\"7\":1}}],[\"详情看此处\",{\"1\":{\"600\":1}}],[\"详情看参考文档\",{\"1\":{\"501\":1}}],[\"详情\",{\"1\":{\"41\":1}}],[\"wvrv0\",{\"1\":{\"1110\":1}}],[\"wq\",{\"1\":{\"1107\":1,\"1110\":1}}],[\"wucy\",{\"1\":{\"1047\":1}}],[\"wupeixuan\",{\"1\":{\"801\":1}}],[\"wfgwx\",{\"1\":{\"1035\":1}}],[\"w269n\",{\"1\":{\"1035\":1}}],[\"wps或者office\",{\"1\":{\"1014\":1}}],[\"wpad\",{\"1\":{\"322\":2}}],[\"w4wjm\",{\"1\":{\"973\":1}}],[\"wmjordan\",{\"1\":{\"968\":1}}],[\"wget\",{\"1\":{\"905\":1,\"1134\":1}}],[\"wc\",{\"1\":{\"829\":2}}],[\"wolfogre\",{\"1\":{\"794\":1}}],[\"would\",{\"1\":{\"777\":1,\"1061\":1}}],[\"workflows\",{\"1\":{\"1070\":2}}],[\"workload\",{\"1\":{\"964\":6}}],[\"workstation\",{\"1\":{\"1110\":3}}],[\"workspace\",{\"1\":{\"902\":1}}],[\"workshop\",{\"1\":{\"467\":1}}],[\"workdir\",{\"0\":{\"823\":1},\"1\":{\"806\":1,\"818\":1,\"823\":1,\"834\":1,\"837\":1,\"865\":3,\"1070\":4}}],[\"working\",{\"1\":{\"768\":1,\"769\":1,\"1074\":1}}],[\"work\",{\"1\":{\"564\":1,\"684\":1}}],[\"workers\",{\"1\":{\"336\":1}}],[\"worker\",{\"1\":{\"208\":1}}],[\"worker进程\",{\"1\":{\"207\":1}}],[\"worker才会来接手\",{\"1\":{\"207\":1}}],[\"world相关的事件信息\",{\"1\":{\"809\":1}}],[\"world\",{\"1\":{\"156\":1,\"569\":1,\"862\":1,\"871\":1,\"876\":1,\"1096\":2}}],[\"word镜像\",{\"1\":{\"862\":1}}],[\"word\",{\"1\":{\"304\":1,\"1061\":2}}],[\"wordnum\",{\"1\":{\"66\":3}}],[\"wordshelper\",{\"1\":{\"215\":3}}],[\"words\",{\"1\":{\"66\":3,\"215\":4}}],[\"wxpusher\",{\"1\":{\"700\":1,\"702\":1}}],[\"wxpusher推送的是实时消息\",{\"1\":{\"700\":1}}],[\"wl\",{\"1\":{\"666\":1}}],[\"w3cnote\",{\"1\":{\"850\":1}}],[\"w3\",{\"1\":{\"453\":1}}],[\"wyy1234\",{\"1\":{\"382\":1}}],[\"wrong\",{\"1\":{\"949\":1}}],[\"wrappers\",{\"1\":{\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"writage\",{\"0\":{\"304\":1},\"1\":{\"304\":2}}],[\"write技术\",{\"1\":{\"863\":1}}],[\"writelog\",{\"1\":{\"691\":7}}],[\"writeline\",{\"1\":{\"66\":1,\"68\":1,\"73\":1,\"79\":1,\"81\":3,\"83\":1,\"98\":19,\"99\":12,\"102\":1,\"109\":3,\"112\":1,\"115\":1,\"118\":2,\"123\":4,\"124\":4,\"125\":3,\"127\":1,\"128\":3,\"131\":1,\"157\":4,\"372\":8,\"373\":4,\"375\":2,\"376\":2,\"381\":1,\"386\":1,\"405\":4,\"472\":1,\"511\":1,\"512\":1,\"513\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":1,\"523\":1,\"524\":2,\"574\":2,\"576\":1,\"586\":1,\"587\":1,\"591\":2,\"607\":1,\"615\":1,\"620\":1,\"625\":1,\"661\":1,\"672\":1,\"684\":2,\"687\":2,\"692\":1,\"1053\":1,\"1058\":1,\"1127\":3}}],[\"writes\",{\"1\":{\"564\":2}}],[\"writevalue\",{\"1\":{\"478\":2}}],[\"writejson\",{\"1\":{\"478\":1}}],[\"writer\",{\"1\":{\"478\":4,\"949\":1}}],[\"writeresponse\",{\"1\":{\"151\":3}}],[\"writeallbytes\",{\"1\":{\"471\":1}}],[\"writeasync\",{\"1\":{\"151\":1,\"156\":1,\"158\":4,\"163\":1,\"364\":2,\"404\":1,\"675\":1,\"678\":1,\"680\":1,\"681\":1}}],[\"writeto\",{\"1\":{\"458\":1,\"459\":1,\"462\":1,\"463\":2}}],[\"writeto=\",{\"1\":{\"453\":2}}],[\"writetoken\",{\"1\":{\"364\":1}}],[\"writehealthcheckuiresponse\",{\"1\":{\"153\":2}}],[\"write\",{\"1\":{\"99\":6,\"123\":2,\"124\":3,\"125\":3,\"167\":1,\"863\":1,\"1070\":2,\"1081\":1}}],[\"wrt\",{\"1\":{\"247\":2}}],[\"way\",{\"1\":{\"949\":1}}],[\"want\",{\"1\":{\"739\":1,\"777\":1}}],[\"wang\",{\"1\":{\"500\":1}}],[\"watchman\",{\"1\":{\"777\":1}}],[\"watch\",{\"1\":{\"687\":2,\"777\":1,\"778\":2,\"780\":4,\"781\":2,\"782\":2}}],[\"wait\",{\"1\":{\"564\":1}}],[\"warn\",{\"1\":{\"447\":2,\"456\":1,\"564\":1}}],[\"warning\",{\"1\":{\"153\":1,\"391\":1,\"446\":6,\"447\":3,\"455\":1,\"462\":1,\"738\":1}}],[\"wallnut\",{\"1\":{\"243\":1}}],[\"w\",{\"1\":{\"243\":3,\"1081\":1,\"1084\":1}}],[\"wsgi应用程序服务器\",{\"1\":{\"207\":1}}],[\"wish\",{\"1\":{\"774\":1}}],[\"width2\",{\"1\":{\"688\":3}}],[\"width\",{\"1\":{\"688\":5}}],[\"wilder\",{\"1\":{\"873\":1}}],[\"wildcards\",{\"1\":{\"564\":1}}],[\"will\",{\"1\":{\"768\":1}}],[\"willick\",{\"1\":{\"588\":1}}],[\"wikipedia\",{\"1\":{\"874\":1}}],[\"wiki\",{\"1\":{\"456\":1,\"466\":1,\"591\":1,\"801\":1,\"874\":1}}],[\"winform\",{\"0\":{\"1167\":1}}],[\"winform使用依赖注入\",{\"0\":{\"657\":1}}],[\"win10专业版密钥\",{\"1\":{\"1035\":1}}],[\"win10教育版\",{\"1\":{\"1035\":1}}],[\"win10企业版\",{\"1\":{\"1035\":1}}],[\"win10\",{\"1\":{\"1031\":1,\"1035\":1}}],[\"win10商店里可以直接下载translucenttb汉化版\",{\"1\":{\"275\":1}}],[\"win+v\",{\"1\":{\"1030\":1}}],[\"win+r\",{\"1\":{\"1028\":1,\"1029\":1,\"1112\":1}}],[\"win++\",{\"1\":{\"1027\":1}}],[\"win+g\",{\"1\":{\"1026\":1}}],[\"win+shift+s\",{\"1\":{\"1025\":1}}],[\"win\",{\"1\":{\"739\":3,\"965\":1,\"1111\":2,\"1113\":1}}],[\"win32\",{\"1\":{\"692\":1}}],[\"window\",{\"1\":{\"544\":1}}],[\"windows10\",{\"1\":{\"1031\":1}}],[\"windows下由nssm守护进程\",{\"1\":{\"1019\":1}}],[\"windows下的写法\",{\"1\":{\"211\":1,\"1117\":1}}],[\"windows8\",{\"1\":{\"1012\":7}}],[\"windows快捷方式\",{\"1\":{\"876\":1}}],[\"windows安装docker\",{\"0\":{\"876\":1}}],[\"windows安装git\",{\"0\":{\"802\":1}}],[\"windowstate\",{\"1\":{\"691\":2}}],[\"windows的\",{\"1\":{\"202\":2}}],[\"windows\",{\"0\":{\"1182\":1},\"1\":{\"152\":1,\"203\":1,\"211\":1,\"243\":1,\"333\":1,\"467\":1,\"559\":1,\"560\":2,\"563\":1,\"691\":1,\"721\":1,\"965\":1,\"1007\":2,\"1008\":2,\"1012\":5,\"1034\":12,\"1035\":12,\"1036\":3,\"1074\":1,\"1081\":1,\"1102\":1,\"1108\":1,\"1110\":4,\"1117\":1}}],[\"windows挂载\",{\"1\":{\"37\":1}}],[\"windows系统git安装教程\",{\"1\":{\"16\":1}}],[\"with\",{\"1\":{\"167\":1,\"442\":1,\"456\":1,\"577\":1,\"588\":1,\"599\":1,\"601\":1,\"774\":1,\"777\":1,\"804\":1,\"853\":1,\"873\":1,\"1070\":5}}],[\"withdisplayname\",{\"1\":{\"157\":1}}],[\"withheaders\",{\"1\":{\"155\":1}}],[\"withmethods\",{\"1\":{\"155\":1}}],[\"withorigins\",{\"1\":{\"155\":1}}],[\"whuanle\",{\"1\":{\"913\":1}}],[\"when\",{\"1\":{\"1070\":1}}],[\"wheezy\",{\"1\":{\"866\":1}}],[\"where是更新条件\",{\"1\":{\"1043\":1}}],[\"where\",{\"1\":{\"40\":1,\"120\":3,\"503\":7,\"506\":1,\"507\":1,\"511\":2,\"512\":3,\"513\":2,\"518\":4,\"519\":2,\"520\":3,\"522\":2,\"523\":1,\"525\":3,\"574\":1,\"600\":1,\"660\":1,\"677\":1,\"1043\":2,\"1044\":5,\"1047\":1,\"1050\":1,\"1053\":1,\"1055\":1,\"1056\":1,\"1058\":1,\"1060\":2}}],[\"white\",{\"1\":{\"1036\":1}}],[\"whitespace\",{\"1\":{\"564\":1}}],[\"which\",{\"1\":{\"949\":1}}],[\"while\",{\"1\":{\"575\":1,\"676\":1,\"677\":1,\"680\":1,\"681\":1,\"986\":1}}],[\"what\",{\"1\":{\"141\":1,\"949\":3,\"1132\":1}}],[\"wwwroot\",{\"1\":{\"578\":1,\"693\":1}}],[\"www\",{\"0\":{\"567\":1,\"611\":1},\"1\":{\"16\":1,\"20\":1,\"40\":1,\"43\":1,\"46\":2,\"68\":1,\"121\":1,\"136\":1,\"141\":1,\"155\":1,\"170\":1,\"212\":1,\"215\":1,\"242\":3,\"243\":1,\"259\":1,\"262\":1,\"265\":1,\"267\":1,\"268\":1,\"272\":1,\"283\":1,\"286\":1,\"287\":1,\"292\":1,\"293\":1,\"296\":1,\"298\":1,\"302\":1,\"304\":1,\"309\":1,\"311\":1,\"329\":1,\"330\":3,\"341\":2,\"362\":1,\"364\":1,\"382\":1,\"445\":1,\"453\":2,\"467\":3,\"472\":1,\"477\":1,\"484\":1,\"500\":1,\"536\":1,\"549\":1,\"564\":1,\"569\":1,\"575\":2,\"588\":1,\"591\":1,\"599\":1,\"614\":1,\"656\":1,\"660\":1,\"661\":1,\"662\":1,\"666\":3,\"682\":1,\"685\":1,\"709\":1,\"712\":3,\"714\":1,\"715\":1,\"722\":1,\"724\":1,\"732\":1,\"733\":2,\"746\":1,\"790\":1,\"798\":1,\"801\":3,\"804\":1,\"850\":1,\"862\":1,\"874\":2,\"876\":1,\"893\":2,\"899\":1,\"902\":2,\"912\":1,\"914\":6,\"946\":3,\"949\":1,\"954\":1,\"1012\":5,\"1031\":1,\"1035\":1,\"1038\":1,\"1046\":1,\"1047\":1,\"1055\":1,\"1109\":2,\"1110\":1,\"1111\":1,\"1118\":1,\"1134\":1}}],[\"we\",{\"1\":{\"949\":2}}],[\"weeks\",{\"1\":{\"863\":1}}],[\"wea\",{\"1\":{\"739\":2}}],[\"weather\",{\"1\":{\"724\":1}}],[\"weatherforecast\",{\"1\":{\"401\":1,\"421\":1,\"500\":1,\"642\":1,\"648\":1,\"654\":1}}],[\"weatherforecastcontroller\",{\"1\":{\"382\":1,\"387\":1,\"398\":1,\"447\":1,\"472\":1,\"488\":1,\"490\":1,\"641\":1,\"647\":1,\"653\":1}}],[\"wechat\",{\"0\":{\"1173\":1},\"1\":{\"712\":1}}],[\"wepe\",{\"1\":{\"267\":1}}],[\"webclient\",{\"1\":{\"1008\":1}}],[\"web和\",{\"1\":{\"964\":1}}],[\"web打印页面代码\",{\"0\":{\"693\":1}}],[\"web打印功能的\",{\"1\":{\"692\":1}}],[\"web打印客户端安装后会在桌面生成一个快捷方式\",{\"1\":{\"692\":1}}],[\"webform技术编写和asp\",{\"1\":{\"689\":1}}],[\"webfx\",{\"1\":{\"341\":1}}],[\"web项目网页支持直接打印\",{\"1\":{\"689\":1}}],[\"web项目网页支持直接打印这篇文章留下的坑\",{\"1\":{\"689\":1}}],[\"web可以提供浏览器支持\",{\"1\":{\"665\":1}}],[\"webhost\",{\"1\":{\"585\":1}}],[\"webhooks\",{\"1\":{\"153\":1}}],[\"web根目录中\",{\"1\":{\"578\":1}}],[\"websockets握手阶段需要http\",{\"1\":{\"534\":1}}],[\"websockets依赖于http1\",{\"1\":{\"534\":1}}],[\"websockets\",{\"0\":{\"534\":1}}],[\"webbuilder\",{\"1\":{\"215\":2,\"447\":2,\"454\":2,\"462\":2,\"463\":2,\"583\":4,\"585\":2,\"661\":2}}],[\"webapplication\",{\"1\":{\"574\":1}}],[\"webapplication7\",{\"1\":{\"151\":1}}],[\"webapi调用示例\",{\"0\":{\"600\":1}}],[\"webapi程序\",{\"1\":{\"561\":1,\"600\":1,\"710\":1}}],[\"webapi\",{\"0\":{\"1166\":1},\"1\":{\"364\":1,\"481\":2,\"482\":1,\"483\":1,\"484\":1,\"501\":1}}],[\"webapi等\",{\"1\":{\"210\":1}}],[\"web\",{\"0\":{\"382\":1,\"387\":1,\"1146\":1},\"1\":{\"135\":1,\"209\":1,\"322\":5,\"328\":1,\"382\":1,\"387\":1,\"449\":1,\"452\":1,\"454\":1,\"463\":1,\"477\":2,\"479\":1,\"484\":1,\"501\":1,\"550\":1,\"551\":1,\"559\":2,\"561\":1,\"564\":1,\"577\":1,\"629\":1,\"689\":1,\"937\":1,\"1110\":1}}],[\"web站点访问地址\",{\"1\":{\"3\":1}}],[\"weihanli\",{\"1\":{\"599\":2}}],[\"weiyongguang\",{\"1\":{\"121\":1}}],[\"wei\",{\"1\":{\"121\":1}}],[\"weixinmpsdk\",{\"1\":{\"712\":1}}],[\"weixinmsg\",{\"1\":{\"711\":1}}],[\"weixinregister\",{\"1\":{\"710\":2}}],[\"weixinappsecret\",{\"1\":{\"710\":1}}],[\"weixinappid\",{\"1\":{\"710\":2,\"711\":1,\"712\":1}}],[\"weixin\",{\"1\":{\"8\":1,\"40\":1,\"125\":1,\"134\":1,\"214\":1,\"241\":1,\"242\":1,\"345\":1,\"346\":1,\"347\":1,\"529\":1,\"549\":1,\"577\":1,\"666\":2,\"681\":1,\"685\":1,\"710\":6,\"711\":1,\"712\":3,\"953\":1,\"969\":1,\"1066\":1,\"1109\":1,\"1120\":1}}],[\"是输出\",{\"1\":{\"1111\":1}}],[\"是输入参数还是输出参数\",{\"1\":{\"87\":1}}],[\"是主机名称\",{\"1\":{\"1110\":1}}],[\"是磁盘仿真成为内存\",{\"1\":{\"1110\":1}}],[\"是双核\",{\"1\":{\"1110\":1}}],[\"是属于\",{\"1\":{\"1110\":1}}],[\"是属于copyleft\",{\"1\":{\"248\":1}}],[\"是所有用户都拥有最高权限\",{\"1\":{\"1109\":1}}],[\"是目录并且该目录存在\",{\"1\":{\"1080\":1}}],[\"是映射不上的比如create\",{\"1\":{\"1061\":1}}],[\"是微软第一个采用类似vmware\",{\"1\":{\"1013\":1}}],[\"是微软的一个orm框架\",{\"1\":{\"529\":1}}],[\"是解决方案中的所有项目还是其中一个项目\",{\"1\":{\"956\":1}}],[\"是帮助跨多个编辑器和\",{\"1\":{\"955\":1}}],[\"是个坏主意\",{\"1\":{\"936\":1}}],[\"是个什么协议呢\",{\"1\":{\"322\":1}}],[\"是推荐在生产环境使用的方式\",{\"1\":{\"931\":1}}],[\"是将service直接对外暴露的方式\",{\"1\":{\"929\":1}}],[\"是service间的访问端口\",{\"1\":{\"921\":1}}],[\"是最基本的方式\",{\"1\":{\"914\":1}}],[\"是最宽松的开源协议之一\",{\"1\":{\"253\":1}}],[\"是集群之中的一块网络存储\",{\"1\":{\"914\":1}}],[\"是对一组资源和对象的抽象集合\",{\"1\":{\"914\":1}}],[\"是kubernetes调度的基本单位\",{\"1\":{\"914\":1}}],[\"是google多年⼤规模容器管理技术borg的开源版本\",{\"1\":{\"913\":1}}],[\"是git上的注释说明\",{\"1\":{\"799\":1}}],[\"是执行step的具体运行期环境\",{\"1\":{\"879\":1}}],[\"是镜像名\",{\"1\":{\"806\":1}}],[\"是在\",{\"1\":{\"791\":1}}],[\"是在微服务基础之上的\",{\"1\":{\"210\":1}}],[\"是看不到了\",{\"1\":{\"786\":1}}],[\"是怎么知道的呢\",{\"1\":{\"780\":1}}],[\"是怎样工作的\",{\"1\":{\"205\":1}}],[\"是使用类型\",{\"1\":{\"779\":1}}],[\"是因为我们创建的内容实在是太小了\",{\"1\":{\"779\":1}}],[\"是因为配置中写死的\",{\"1\":{\"710\":1}}],[\"是因为在两年前首发在\",{\"1\":{\"689\":1}}],[\"是由盛派网络\",{\"1\":{\"710\":1}}],[\"是另一个测试框架\",{\"1\":{\"598\":1}}],[\"是很类似的\",{\"1\":{\"597\":1}}],[\"是很常见一个开源协议\",{\"1\":{\"248\":1}}],[\"是针对程序模块\",{\"1\":{\"593\":1}}],[\"是断定阶段\",{\"1\":{\"586\":1}}],[\"是行为阶段\",{\"1\":{\"586\":1}}],[\"是准备阶段\",{\"1\":{\"586\":1}}],[\"是能够在\",{\"1\":{\"585\":1}}],[\"是获取默认的appsettings\",{\"1\":{\"581\":1}}],[\"是如何定义怎样加载的\",{\"1\":{\"443\":1}}],[\"是面向对象编程中的一种设计原则\",{\"1\":{\"436\":1}}],[\"是完整同步的镜像\",{\"1\":{\"335\":1}}],[\"是实实在在存在的人\",{\"1\":{\"322\":1}}],[\"是闭源的\",{\"1\":{\"247\":1}}],[\"是开源的\",{\"1\":{\"247\":1}}],[\"是用户名\",{\"1\":{\"1110\":1}}],[\"是用来限制用户资源用量的一种机制\",{\"1\":{\"914\":1}}],[\"是用go语言开发的\",{\"1\":{\"804\":1}}],[\"是用\",{\"1\":{\"243\":1}}],[\"是用于\",{\"1\":{\"173\":1}}],[\"是基于\",{\"1\":{\"243\":1}}],[\"是基本工资\",{\"1\":{\"199\":1}}],[\"是高效\",{\"1\":{\"216\":1}}],[\"是我们做性能测试时\",{\"1\":{\"735\":1}}],[\"是我们编写断言后\",{\"1\":{\"735\":1}}],[\"是我们最常见到的一种代理方式\",{\"1\":{\"322\":1}}],[\"是我们定义的特性标记\",{\"1\":{\"215\":1}}],[\"是我们没有重点分析过的\",{\"1\":{\"134\":1}}],[\"是说散列表里面存储的数少\",{\"1\":{\"209\":1}}],[\"是可以设置过期时间的\",{\"1\":{\"208\":1}}],[\"是可以保证数据一致性的\",{\"1\":{\"134\":1}}],[\"是原来的\",{\"1\":{\"208\":1}}],[\"是比较有代表性的\",{\"1\":{\"208\":1}}],[\"是比较合适的\",{\"1\":{\"134\":1}}],[\"是提高查询排序的速度\",{\"1\":{\"206\":1}}],[\"是非事务的存储引擎\",{\"1\":{\"206\":1}}],[\"是指级联应用到目录里的所有子目录和文件\",{\"1\":{\"1109\":1}}],[\"是指对软件中的最小可测试单元进行检查和验证\",{\"1\":{\"593\":1}}],[\"是指\",{\"1\":{\"204\":1}}],[\"是通过pod\",{\"1\":{\"919\":1}}],[\"是通过\",{\"1\":{\"204\":1}}],[\"是通过分词策略\",{\"1\":{\"204\":1}}],[\"是通过使用了ssh的公开密钥认证方式进行的\",{\"1\":{\"19\":1}}],[\"是作为两个不兼容的接口之间的桥梁\",{\"1\":{\"202\":1}}],[\"是作为字典使用的网站\",{\"1\":{\"0\":1}}],[\"是绩效\",{\"1\":{\"199\":1}}],[\"是这么问的\",{\"1\":{\"191\":1}}],[\"是成为一个架构师\",{\"1\":{\"190\":1}}],[\"是模板\",{\"1\":{\"165\":1}}],[\"是不同的\",{\"1\":{\"1111\":1}}],[\"是不稳定的\",{\"1\":{\"939\":1}}],[\"是不是可以少加会班了\",{\"1\":{\"1009\":1}}],[\"是不是听起来名字高大上\",{\"1\":{\"816\":1}}],[\"是不是很简单呢\",{\"1\":{\"693\":1}}],[\"是不是很多人的绩效系数都低于\",{\"1\":{\"199\":1}}],[\"是不是单例\",{\"1\":{\"443\":1}}],[\"是不是这家公司有压绩效的习惯\",{\"1\":{\"199\":1}}],[\"是不分区大小写的\",{\"1\":{\"159\":1}}],[\"是不可变的\",{\"1\":{\"157\":1}}],[\"是\",{\"1\":{\"140\":1,\"170\":2,\"215\":1,\"467\":1,\"786\":1,\"918\":1,\"919\":1,\"1012\":2}}],[\"是net的一种实现\",{\"1\":{\"139\":1}}],[\"是什么\",{\"0\":{\"139\":1,\"140\":1,\"141\":1}}],[\"是一样的\",{\"1\":{\"834\":1,\"837\":1}}],[\"是一款流行的开源持续集成\",{\"1\":{\"877\":1}}],[\"是一款极易搭建的自助\",{\"1\":{\"795\":1}}],[\"是一款\",{\"1\":{\"708\":1}}],[\"是一款ppt\",{\"1\":{\"300\":1}}],[\"是一款通过\",{\"1\":{\"243\":1}}],[\"是一个linux操作系统\",{\"1\":{\"1114\":1}}],[\"是一个对数据库文档生成工具\",{\"1\":{\"1009\":1}}],[\"是一个在windows\",{\"1\":{\"1007\":1}}],[\"是一个致力于为\",{\"1\":{\"968\":1}}],[\"是一个包过滤器\",{\"1\":{\"944\":1}}],[\"是一个虚拟的二层网络\",{\"1\":{\"919\":1}}],[\"是一个启动容器\",{\"1\":{\"805\":1}}],[\"是一个开源的应用容器引擎\",{\"1\":{\"804\":1}}],[\"是一个\",{\"1\":{\"682\":1,\"944\":1}}],[\"是一个枚举\",{\"1\":{\"400\":1}}],[\"是一个基于内存的易于使用并且线程安全的缓存组件\",{\"1\":{\"378\":1}}],[\"是一个标准的客户端服务器模型\",{\"1\":{\"323\":1}}],[\"是一个极简\",{\"1\":{\"290\":1}}],[\"是一个可以玩各种复古游戏的游戏机\",{\"1\":{\"243\":1}}],[\"是一个使用微信公众号作为通道的\",{\"1\":{\"699\":1}}],[\"是一个使用\",{\"1\":{\"243\":1}}],[\"是一个分区数据的逻辑集合\",{\"1\":{\"205\":1}}],[\"是一个用于定义和运行多个容器服务的\",{\"1\":{\"844\":1}}],[\"是一个用于\",{\"1\":{\"152\":1}}],[\"是一个规范和完整的框架\",{\"1\":{\"479\":1,\"551\":1}}],[\"是一个规范\",{\"1\":{\"141\":1}}],[\"是一个免费的\",{\"1\":{\"135\":1}}],[\"是一种多用户系统\",{\"1\":{\"1080\":1}}],[\"是一种标准\",{\"1\":{\"928\":1}}],[\"是一种人类友好的数据序列化语言\",{\"1\":{\"849\":1}}],[\"是一种分层\",{\"1\":{\"810\":1}}],[\"是一种灵活\",{\"1\":{\"559\":1}}],[\"是一种用于创建网页的标准标记语言\",{\"1\":{\"328\":1}}],[\"是一种被称为\",{\"1\":{\"167\":1}}],[\"是一种特殊的受限制的委托\",{\"1\":{\"68\":1}}],[\"是一种永远不会改变的静态字段\",{\"1\":{\"67\":1}}],[\"是关于\",{\"1\":{\"134\":1}}],[\"是的\",{\"1\":{\"134\":1,\"205\":1}}],[\"是按照ascii排序\",{\"1\":{\"123\":1}}],[\"是否\",{\"1\":{\"1080\":1}}],[\"是否走主库\",{\"1\":{\"1047\":1}}],[\"是否启用毛玻璃\",{\"1\":{\"1036\":1}}],[\"是否启用直接打印功能\",{\"1\":{\"691\":1}}],[\"是否启用\",{\"1\":{\"671\":1}}],[\"是否启用服务\",{\"1\":{\"564\":1}}],[\"是否使用api行为\",{\"1\":{\"650\":1}}],[\"是否允许子进程和内部的http服务通讯\",{\"1\":{\"564\":2}}],[\"是否删除\",{\"1\":{\"501\":1}}],[\"是否可以转换\",{\"1\":{\"478\":1}}],[\"是否可以查看所有数据\",{\"1\":{\"368\":1}}],[\"是否到底这一步的都应该是已经经过身份认证的用户\",{\"1\":{\"401\":1}}],[\"是否有变化发生\",{\"1\":{\"374\":1}}],[\"是否有更简单的方案\",{\"1\":{\"134\":1}}],[\"是否开启签名认证\",{\"1\":{\"364\":1}}],[\"是否要对\",{\"1\":{\"208\":1}}],[\"是否为泛型方法\",{\"1\":{\"104\":1}}],[\"是否为虚方法\",{\"1\":{\"104\":1}}],[\"是否为静态方法\",{\"1\":{\"104\":1}}],[\"是否为公共方法\",{\"1\":{\"104\":1}}],[\"是否为私有方法\",{\"1\":{\"104\":1}}],[\"是否为抽象方法\",{\"1\":{\"104\":1}}],[\"是否是构造方法\",{\"1\":{\"104\":1}}],[\"是否类\",{\"1\":{\"98\":1}}],[\"是强类型语言\",{\"1\":{\"94\":1}}],[\"是类或者对象向其他类或对象通知发生的事情的一种委托\",{\"1\":{\"68\":1}}],[\"是唯一的命名参数\",{\"1\":{\"46\":1}}],[\"是位置参数\",{\"1\":{\"46\":1}}],[\"是该特性的名称\",{\"1\":{\"46\":1}}],[\"是自带git的\",{\"1\":{\"16\":1}}],[\"的行业标准\",{\"1\":{\"1130\":1}}],[\"的分区挂载到\",{\"1\":{\"1110\":1}}],[\"的分支\",{\"1\":{\"784\":1}}],[\"的存储路径\",{\"1\":{\"1110\":1}}],[\"的存储引擎\",{\"1\":{\"206\":1}}],[\"的线程数\",{\"1\":{\"1110\":1}}],[\"的颗数\",{\"1\":{\"1110\":1}}],[\"的核数\",{\"1\":{\"1110\":2}}],[\"的记录\",{\"1\":{\"1096\":2}}],[\"的属组修改成\",{\"1\":{\"1082\":1}}],[\"的位置是不变的\",{\"1\":{\"1081\":1}}],[\"的位置才能使用它\",{\"1\":{\"943\":1}}],[\"的权限做了不同的规定\",{\"1\":{\"1080\":1}}],[\"的意思\",{\"1\":{\"1078\":1,\"1079\":1}}],[\"的意义\",{\"0\":{\"784\":1}}],[\"的kb2919442补丁\",{\"1\":{\"1012\":1}}],[\"的兼容层\",{\"1\":{\"1007\":1}}],[\"的二头肌语言支持\",{\"1\":{\"968\":1}}],[\"的磁盘空间\",{\"1\":{\"964\":1}}],[\"的完整本地布局至少需要\",{\"1\":{\"964\":1}}],[\"的完整数据\",{\"1\":{\"208\":2}}],[\"的从事同一项目的多个开发人员保持一致性编码风格的一个文本文件\",{\"1\":{\"955\":1}}],[\"的白名单\",{\"1\":{\"949\":1}}],[\"的白名单或者直接关闭selinux\",{\"1\":{\"543\":1}}],[\"的变化\",{\"1\":{\"944\":1}}],[\"的系统服务\",{\"1\":{\"944\":1}}],[\"的过程\",{\"1\":{\"942\":1}}],[\"的过程就叫做\",{\"1\":{\"204\":1}}],[\"的流量并转发给真实的\",{\"1\":{\"945\":1}}],[\"的流量\",{\"1\":{\"942\":1,\"944\":1}}],[\"的前端是一个\",{\"1\":{\"943\":1}}],[\"的前端创建成功并注册到服务注册表\",{\"1\":{\"942\":1}}],[\"的前提下\",{\"1\":{\"134\":1}}],[\"的域名记录\",{\"1\":{\"941\":1}}],[\"的创建\",{\"1\":{\"941\":1}}],[\"的创建是典型的工厂模式\",{\"1\":{\"443\":1}}],[\"的整个生命周期中都不会改变\",{\"1\":{\"938\":1}}],[\"的整数\",{\"1\":{\"468\":1}}],[\"的列表\",{\"1\":{\"936\":1,\"944\":1,\"945\":1}}],[\"的实现方式\",{\"1\":{\"931\":1}}],[\"的实体正在由上下文跟踪\",{\"1\":{\"503\":1}}],[\"的实体\",{\"1\":{\"503\":1}}],[\"的例子\",{\"1\":{\"930\":1}}],[\"的地址\",{\"1\":{\"927\":1}}],[\"的默认路由都是\",{\"1\":{\"927\":1}}],[\"的动态变化和对多实例的负载均衡而引入的资源对象\",{\"1\":{\"918\":1}}],[\"的各种规则表\",{\"1\":{\"916\":1}}],[\"的持续更改\",{\"1\":{\"908\":1}}],[\"的持久化机制用在\",{\"1\":{\"208\":1}}],[\"的缩写\",{\"1\":{\"908\":1,\"1073\":1,\"1074\":2,\"1075\":1,\"1076\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1082\":1}}],[\"的大小\",{\"1\":{\"865\":1,\"869\":1}}],[\"的大小写\",{\"1\":{\"119\":1}}],[\"的镜像\",{\"1\":{\"863\":1}}],[\"的选项在上次没说\",{\"1\":{\"815\":1}}],[\"的选主是\",{\"1\":{\"204\":1}}],[\"的只读模板\",{\"1\":{\"805\":1}}],[\"的logo图\",{\"1\":{\"804\":1}}],[\"的项目选择visualstudio\",{\"1\":{\"798\":1}}],[\"的基本组成部分\",{\"1\":{\"1071\":1,\"1076\":1}}],[\"的基本使用\",{\"0\":{\"599\":1}}],[\"的基础上新开一个发行分支\",{\"1\":{\"791\":1}}],[\"的逻辑它们是怎么对比出来的呢\",{\"1\":{\"787\":1}}],[\"的执行逻辑\",{\"0\":{\"787\":1}}],[\"的指针引用而已\",{\"1\":{\"786\":1}}],[\"的指向\",{\"1\":{\"781\":1}}],[\"的这个现象称之为\",{\"1\":{\"786\":1}}],[\"的官方文档\",{\"1\":{\"784\":1}}],[\"的目录\",{\"1\":{\"1096\":1}}],[\"的目录有所变化\",{\"1\":{\"781\":1}}],[\"的目标是打造一个最简单\",{\"1\":{\"795\":1}}],[\"的目的是防止脑裂\",{\"1\":{\"204\":1}}],[\"的结果就是两者的差别\",{\"1\":{\"780\":1}}],[\"的对象\",{\"1\":{\"778\":1}}],[\"的文件大小\",{\"1\":{\"778\":1}}],[\"的文件内容\",{\"1\":{\"778\":1}}],[\"的文件类型\",{\"1\":{\"778\":1}}],[\"的思想和基本工作原理\",{\"1\":{\"776\":1}}],[\"的概念\",{\"1\":{\"661\":1}}],[\"的概率其实是很小的\",{\"1\":{\"134\":1}}],[\"的话可以使用宏来区分不同的测试框架\",{\"1\":{\"597\":1}}],[\"的输出中\",{\"1\":{\"577\":1}}],[\"的用户\",{\"1\":{\"564\":1}}],[\"的所有应用启用进程内托管\",{\"1\":{\"562\":1}}],[\"的原因是\",{\"1\":{\"538\":1}}],[\"的多路复用特性支撑了grpc的流式传输能力\",{\"1\":{\"536\":1}}],[\"的查询\",{\"1\":{\"943\":1}}],[\"的查询模式的实现\",{\"1\":{\"518\":1}}],[\"的查询时间复杂度\",{\"1\":{\"204\":1}}],[\"的上下文配置传递到\",{\"1\":{\"502\":1}}],[\"的全部过程\",{\"1\":{\"501\":1}}],[\"的全部数据的意思\",{\"1\":{\"208\":1}}],[\"的参数\",{\"1\":{\"494\":1}}],[\"的源\",{\"1\":{\"470\":1}}],[\"的源码\",{\"1\":{\"247\":1}}],[\"的布尔值\",{\"1\":{\"468\":1}}],[\"的下一个参数\",{\"1\":{\"468\":1}}],[\"的第一个参数\",{\"1\":{\"468\":1}}],[\"的第13篇\",{\"1\":{\"430\":1}}],[\"的进化\",{\"1\":{\"467\":1}}],[\"的灵活\",{\"1\":{\"451\":1}}],[\"的别名\",{\"1\":{\"443\":1}}],[\"的检索\",{\"1\":{\"443\":1}}],[\"的名字和\",{\"1\":{\"443\":1}}],[\"的名字\",{\"1\":{\"443\":1,\"937\":1}}],[\"的名字检索\",{\"1\":{\"443\":1}}],[\"的转义定义\",{\"1\":{\"443\":1}}],[\"的反射技术来实现的\",{\"1\":{\"443\":1}}],[\"的由来\",{\"1\":{\"436\":1}}],[\"的作用\",{\"1\":{\"436\":1}}],[\"的引用\",{\"1\":{\"436\":1}}],[\"的支持\",{\"1\":{\"344\":1}}],[\"的技术\",{\"1\":{\"344\":1}}],[\"的安全基础是\",{\"1\":{\"325\":1}}],[\"的会话\",{\"1\":{\"322\":1}}],[\"的加密数据之前需要输入密码或者凭证\",{\"1\":{\"322\":1}}],[\"的同一色彩还可以一键修改\",{\"1\":{\"300\":1}}],[\"的网桥\",{\"1\":{\"944\":1}}],[\"的网络模型\",{\"1\":{\"932\":1}}],[\"的网络套接字\",{\"1\":{\"207\":1}}],[\"的网站\",{\"1\":{\"253\":1}}],[\"的开源协议\",{\"1\":{\"247\":1}}],[\"的固件\",{\"1\":{\"247\":1}}],[\"的吃豆人游戏\",{\"1\":{\"243\":1}}],[\"的经典坦克大战\",{\"1\":{\"243\":1}}],[\"的功能\",{\"1\":{\"215\":2}}],[\"的功能了\",{\"1\":{\"134\":1}}],[\"的消息队列\",{\"1\":{\"209\":1}}],[\"的限制\",{\"1\":{\"209\":1}}],[\"的性能\",{\"1\":{\"209\":1}}],[\"的读写操作\",{\"1\":{\"208\":1}}],[\"的一种\",{\"1\":{\"1110\":1}}],[\"的一个版本\",{\"1\":{\"571\":1}}],[\"的一个完整镜像\",{\"1\":{\"208\":1}}],[\"的一个简单流程\",{\"1\":{\"3\":1}}],[\"的一些配置信息\",{\"1\":{\"208\":1}}],[\"的元数据\",{\"1\":{\"208\":1}}],[\"的高可用模式\",{\"1\":{\"208\":1}}],[\"的高可用性怎么实现\",{\"1\":{\"208\":1}}],[\"的高可用和稳定性\",{\"1\":{\"134\":1}}],[\"的集群\",{\"1\":{\"208\":1}}],[\"的可靠\",{\"1\":{\"208\":1}}],[\"的使用场景\",{\"1\":{\"208\":1}}],[\"的使用\",{\"1\":{\"208\":1}}],[\"的内置\",{\"1\":{\"208\":1}}],[\"的吞吐量可能有\",{\"1\":{\"208\":1}}],[\"的连接中断来确认是否需要重新发送消息\",{\"1\":{\"208\":1}}],[\"的优点是什么\",{\"1\":{\"207\":1}}],[\"的优先队列\",{\"1\":{\"204\":1}}],[\"的聚合如何实现\",{\"1\":{\"204\":1}}],[\"的时候不指定label\",{\"1\":{\"914\":1}}],[\"的时候\",{\"1\":{\"208\":2,\"596\":1,\"784\":1,\"786\":1}}],[\"的时候索引也要动态维护\",{\"1\":{\"206\":1}}],[\"的时钟周\",{\"1\":{\"204\":1}}],[\"的时间短\",{\"1\":{\"134\":1}}],[\"的机制来保证数据的可靠性的\",{\"1\":{\"204\":1}}],[\"的情况\",{\"1\":{\"204\":1}}],[\"的情况发生\",{\"1\":{\"134\":2}}],[\"的节点才能成为主节点\",{\"1\":{\"204\":1}}],[\"的tostring方法接受一个代表格式的字符串参数\",{\"1\":{\"203\":1}}],[\"的重要职责\",{\"1\":{\"195\":1}}],[\"的朋友\",{\"1\":{\"194\":1}}],[\"的问题\",{\"1\":{\"191\":1,\"208\":1}}],[\"的操作归根结底就是对\",{\"1\":{\"1071\":1}}],[\"的操作中\",{\"1\":{\"783\":1}}],[\"的操作\",{\"1\":{\"186\":1,\"786\":1}}],[\"的算法\",{\"1\":{\"167\":1}}],[\"的形式运行一个\",{\"1\":{\"941\":1}}],[\"的形式\",{\"1\":{\"159\":1,\"939\":1}}],[\"的配置中新增另外的路由映射规则\",{\"1\":{\"151\":1}}],[\"的出现就是为了适应软件开发的趋势\",{\"1\":{\"140\":1}}],[\"的\",{\"1\":{\"134\":1,\"204\":1,\"205\":1,\"208\":4,\"243\":1,\"253\":1,\"599\":1,\"666\":1,\"668\":1,\"778\":2,\"779\":1,\"780\":1,\"781\":1,\"866\":1,\"919\":1,\"923\":1,\"931\":1,\"942\":2,\"943\":3,\"944\":2,\"1012\":2,\"1067\":1,\"1081\":1}}],[\"的数据都是放在一个节点里的\",{\"1\":{\"208\":1}}],[\"的数据可能会丢失\",{\"1\":{\"204\":1}}],[\"的数据\",{\"1\":{\"134\":1,\"208\":1,\"209\":1}}],[\"的延迟时间\",{\"1\":{\"134\":1}}],[\"的方法\",{\"1\":{\"158\":1}}],[\"的方式计算\",{\"1\":{\"914\":1}}],[\"的方式启动\",{\"1\":{\"564\":1}}],[\"的方式\",{\"1\":{\"502\":1}}],[\"的方式去优化处理\",{\"1\":{\"215\":1}}],[\"的方式发送给消费者\",{\"1\":{\"208\":1}}],[\"的方式保证数据一致性\",{\"1\":{\"134\":1}}],[\"的方式来释放内存\",{\"1\":{\"204\":1}}],[\"的方式来实现\",{\"1\":{\"134\":1}}],[\"的方式来做\",{\"1\":{\"134\":1}}],[\"的方案来做\",{\"1\":{\"134\":1}}],[\"的方案\",{\"1\":{\"134\":7}}],[\"的角度来评估这个方案\",{\"1\":{\"134\":1}}],[\"的值在缓存中是\",{\"1\":{\"134\":5}}],[\"的值的组合\",{\"1\":{\"42\":1}}],[\"的类型设置为\",{\"1\":{\"930\":1}}],[\"的类型\",{\"1\":{\"203\":1}}],[\"的类型是值类型\",{\"1\":{\"203\":1}}],[\"的类\",{\"1\":{\"46\":1}}],[\"的邮件\",{\"1\":{\"19\":1}}],[\"的资料库中\",{\"1\":{\"14\":1}}],[\"到会安装时直接选择\",{\"1\":{\"1013\":1}}],[\"到98\",{\"1\":{\"872\":1}}],[\"到这有很多小伙伴会说\",{\"1\":{\"843\":1}}],[\"到这里基本完成了部署\",{\"1\":{\"543\":1}}],[\"到这里我们的nginx已经安装好了\",{\"1\":{\"542\":1}}],[\"到这里\",{\"1\":{\"134\":1}}],[\"到这里你可能会问\",{\"1\":{\"134\":1}}],[\"到这里已经注册成功了\",{\"1\":{\"6\":1}}],[\"到此\",{\"1\":{\"575\":1,\"1107\":1}}],[\"到此为止\",{\"1\":{\"186\":1}}],[\"到了这里\",{\"1\":{\"442\":1}}],[\"到了晚上再补数据吧\",{\"1\":{\"208\":1}}],[\"到站之后正好赶上排队检票\",{\"1\":{\"432\":1}}],[\"到\",{\"1\":{\"204\":1,\"936\":1}}],[\"到处都使用了装饰模式\",{\"1\":{\"202\":1}}],[\"到队列中\",{\"1\":{\"134\":1}}],[\"到底什么是分支\",{\"1\":{\"784\":1}}],[\"到底能不能做到呢\",{\"1\":{\"134\":1}}],[\"到底要不要用\",{\"1\":{\"134\":1}}],[\"到底选择先更新数据库\",{\"1\":{\"134\":1}}],[\"到底是更新缓存还是删缓存\",{\"1\":{\"134\":1}}],[\"到底git和github有什么区别呢\",{\"1\":{\"14\":1}}],[\"也能窥见一二\",{\"1\":{\"925\":1}}],[\"也能扮演服务器\",{\"1\":{\"322\":1}}],[\"也叫虚拟网络接口对\",{\"1\":{\"916\":1}}],[\"也挺麻烦的\",{\"1\":{\"806\":1}}],[\"也就没有什么用了\",{\"1\":{\"799\":1}}],[\"也就是创建密钥文件时候的密码\",{\"1\":{\"1037\":2}}],[\"也就是构建的镜像是由谁构建的\",{\"1\":{\"821\":1}}],[\"也就是原始数据\",{\"1\":{\"735\":1}}],[\"也就是ioc容器\",{\"1\":{\"436\":1}}],[\"也就是它所依赖的对象\",{\"1\":{\"436\":1}}],[\"也就是\",{\"1\":{\"208\":1}}],[\"也就是各类缓存全部占满的时候\",{\"1\":{\"204\":1}}],[\"也就是说每次节点内核处理到目标为\",{\"1\":{\"944\":1}}],[\"也就是说只要你明确了要提取的值\",{\"1\":{\"745\":1}}],[\"也就是说申明的变量必须基于某个集合\",{\"1\":{\"740\":1}}],[\"也就是说postman中的任何集合\",{\"1\":{\"740\":1}}],[\"也就是说返回的body数据在这个标签中查看\",{\"1\":{\"735\":1}}],[\"也就是说\",{\"1\":{\"134\":1,\"208\":1,\"325\":1,\"812\":1}}],[\"也就是说仓库的代码必须是公开的\",{\"1\":{\"14\":1}}],[\"也支持文件上传\",{\"1\":{\"734\":1}}],[\"也支持通过\",{\"1\":{\"204\":1}}],[\"也提供了下载功能\",{\"1\":{\"693\":1}}],[\"也即\",{\"1\":{\"443\":1}}],[\"也即检查和替换功能\",{\"1\":{\"215\":1}}],[\"也存在着一种实体\",{\"1\":{\"322\":1}}],[\"也广受好评\",{\"1\":{\"267\":1}}],[\"也允许使用或在\",{\"1\":{\"252\":1}}],[\"也只能是这样了\",{\"1\":{\"208\":1}}],[\"也只是尽可能保证一致性而已\",{\"1\":{\"134\":1}}],[\"也设置了\",{\"1\":{\"208\":1}}],[\"也可称为索引区\",{\"1\":{\"780\":1}}],[\"也可能存在因为网络等原因导致写入副本失败\",{\"1\":{\"204\":1}}],[\"也可以下载我分享的\",{\"1\":{\"1110\":1}}],[\"也可以创建多级目录\",{\"1\":{\"1075\":1}}],[\"也可以自定义分库分表方法\",{\"1\":{\"1038\":1}}],[\"也可以自定义一个继承于\",{\"1\":{\"599\":1}}],[\"也可以暴露到集群外部\",{\"1\":{\"918\":1}}],[\"也可以\",{\"1\":{\"914\":1}}],[\"也可以用来保存配置文件\",{\"1\":{\"914\":1}}],[\"也可以用来盈利\",{\"1\":{\"248\":1}}],[\"也可以将已有的服务以service的形式加入到kubernetes集群中来\",{\"1\":{\"914\":1}}],[\"也可以将proto都存放在同一个固定位置让不同的程序引用\",{\"1\":{\"672\":1}}],[\"也可以让docker\",{\"1\":{\"839\":1}}],[\"也可以在actions选项卡中新建\",{\"1\":{\"1070\":1}}],[\"也可以在别人打好的基石基础上开始\",{\"1\":{\"820\":1}}],[\"也可以在这一步就生成数据库\",{\"1\":{\"501\":1}}],[\"也可以另外针对配置文件再加一个挂载\",{\"1\":{\"817\":1}}],[\"也可以指定容器id\",{\"1\":{\"811\":1}}],[\"也可以对每个仓库指定不同的名称和email地址\",{\"1\":{\"748\":1}}],[\"也可以对其进行压缩等\",{\"1\":{\"322\":1}}],[\"也可以理解为测试用例\",{\"1\":{\"736\":1}}],[\"也可以采用redis等其他方法存储配置信息等\",{\"1\":{\"710\":1}}],[\"也可以观看我的历史文章\",{\"1\":{\"710\":1}}],[\"也可以直接选择典型选项\",{\"1\":{\"1110\":1}}],[\"也可以直接调用api进行发送消息\",{\"1\":{\"698\":1}}],[\"也可以直接指定源\",{\"1\":{\"468\":1}}],[\"也可以启动客户端将预览功能开启\",{\"1\":{\"690\":1}}],[\"也可以使用系统自带的服务管理器操作和使用系统的命令\",{\"1\":{\"1020\":1}}],[\"也可以使用overlay模式\",{\"1\":{\"839\":1}}],[\"也可以使用\",{\"1\":{\"599\":1,\"1077\":1}}],[\"也可以是\",{\"1\":{\"564\":2}}],[\"也可以是静态方法\",{\"1\":{\"203\":1}}],[\"也可以不删除默认控制器\",{\"1\":{\"552\":1}}],[\"也可以编写自定义的值提供程序\",{\"1\":{\"468\":1}}],[\"也可以涉及两个或多个协调某些活动的服务\",{\"1\":{\"210\":1}}],[\"也可以要求同步到指定数量的节点\",{\"1\":{\"208\":1}}],[\"也可以通过以下命令拉取到\",{\"1\":{\"1070\":1}}],[\"也可以通过\",{\"1\":{\"914\":1}}],[\"也可以通过docker\",{\"1\":{\"837\":2}}],[\"也可以通过接口添加删除用户\",{\"1\":{\"694\":1}}],[\"也可以通过设置搜索请求参数\",{\"1\":{\"204\":1}}],[\"也可以通过ref\",{\"1\":{\"51\":1}}],[\"也可以来指定特殊的排序顺序\",{\"1\":{\"124\":1}}],[\"也称倒排表\",{\"1\":{\"204\":1}}],[\"也称为\",{\"1\":{\"161\":1}}],[\"也有三种\",{\"1\":{\"914\":1}}],[\"也有一些独特的优势\",{\"1\":{\"322\":1}}],[\"也有招聘指标\",{\"1\":{\"198\":1}}],[\"也有了内容\",{\"1\":{\"22\":1}}],[\"也满足了\",{\"1\":{\"197\":1}}],[\"也是我们刚刚推送的镜像\",{\"1\":{\"1070\":1}}],[\"也是集群的资源\",{\"1\":{\"914\":1}}],[\"也是为了填一下2次封装fastreport\",{\"1\":{\"689\":1}}],[\"也是必要的\",{\"1\":{\"435\":1}}],[\"也是每个节点都放这个\",{\"1\":{\"208\":1}}],[\"也是典型的单例应用\",{\"1\":{\"202\":1}}],[\"也是求职者\",{\"1\":{\"201\":1}}],[\"也是她们的绩效\",{\"1\":{\"195\":1}}],[\"也是不太推荐的\",{\"1\":{\"134\":1}}],[\"也建议大家认真想想这个问题\",{\"1\":{\"190\":1}}],[\"也不便于我们替换为其他的敏感词组件或服务\",{\"1\":{\"215\":1}}],[\"也不要说因为薪资低\",{\"1\":{\"187\":1}}],[\"也不是其派生类型\",{\"1\":{\"130\":1}}],[\"也写在这里\",{\"1\":{\"178\":1}}],[\"也没有剩余的url文本\",{\"1\":{\"161\":1}}],[\"也会导致缓存和数据库不一致\",{\"1\":{\"134\":1}}],[\"也会有类似问题\",{\"1\":{\"134\":1}}],[\"也发生不一致\",{\"1\":{\"134\":2}}],[\"也要连带缓存一起更新\",{\"1\":{\"134\":1}}],[\"也欢迎各位大佬去公众号联系我一起搭建\",{\"1\":{\"0\":1}}],[\"进程信息\",{\"1\":{\"1101\":1}}],[\"进程\",{\"0\":{\"1100\":1},\"1\":{\"944\":1}}],[\"进程必须承载http\",{\"1\":{\"665\":1}}],[\"进程间通信管道是一种更快速的方法\",{\"1\":{\"665\":1}}],[\"进程间通信\",{\"1\":{\"665\":1}}],[\"进程会无条件重启当退出的时候\",{\"1\":{\"564\":1}}],[\"进程会重启\",{\"1\":{\"564\":1}}],[\"进程会自动重启\",{\"1\":{\"564\":1}}],[\"进程会自动启动\",{\"1\":{\"564\":1}}],[\"进程则会把标准错误输出到supervisord后台的标准输出文件描述符\",{\"1\":{\"564\":2}}],[\"进程不会自动重启\",{\"1\":{\"564\":2}}],[\"进程与\",{\"1\":{\"563\":1}}],[\"进程外托管配置\",{\"1\":{\"563\":1}}],[\"进程外托管\",{\"0\":{\"563\":1}}],[\"进程内承载相较进程外承载提供更优的性能\",{\"1\":{\"562\":1}}],[\"进程内托管在与其\",{\"1\":{\"562\":1}}],[\"进程内托管\",{\"0\":{\"562\":1}}],[\"进度条\",{\"1\":{\"530\":1}}],[\"进一步验证了我们设想\",{\"1\":{\"442\":1}}],[\"进而发往目的pod中的容器\",{\"1\":{\"928\":1}}],[\"进而促成了各种相关开源项目的繁荣\",{\"1\":{\"247\":1}}],[\"进而无法进行开发工作\",{\"1\":{\"12\":1}}],[\"进行虚拟机新建引导\",{\"1\":{\"1110\":1}}],[\"进行连接\",{\"1\":{\"1105\":1}}],[\"进行改写\",{\"1\":{\"944\":1}}],[\"进行解析\",{\"1\":{\"943\":1}}],[\"进行注册\",{\"1\":{\"941\":1}}],[\"进行监听\",{\"1\":{\"941\":1}}],[\"进行负载分配\",{\"1\":{\"937\":1}}],[\"进行配置验证保存access\",{\"1\":{\"710\":1}}],[\"进行保护的\",{\"1\":{\"666\":1}}],[\"进行保护的终结点\",{\"1\":{\"666\":1}}],[\"进行保护\",{\"1\":{\"666\":1}}],[\"进行传输\",{\"1\":{\"663\":1}}],[\"进行模型绑定时候\",{\"1\":{\"470\":1}}],[\"进行扩展\",{\"1\":{\"399\":1,\"442\":1}}],[\"进行请求\",{\"1\":{\"364\":1}}],[\"进行安全性检查等\",{\"1\":{\"322\":1}}],[\"进行安全性检查\",{\"1\":{\"322\":1}}],[\"进行页面展现\",{\"1\":{\"243\":1}}],[\"进行渲染以展现游戏的像素风\",{\"1\":{\"243\":1}}],[\"进行过滤\",{\"1\":{\"209\":1}}],[\"进行\",{\"1\":{\"209\":1}}],[\"进行持久化\",{\"1\":{\"208\":1}}],[\"进行的是引用比较\",{\"1\":{\"203\":1}}],[\"进行的是内容比较\",{\"1\":{\"203\":1}}],[\"进行匹配\",{\"1\":{\"167\":1}}],[\"进行转义\",{\"1\":{\"159\":1}}],[\"进行访问\",{\"1\":{\"150\":1}}],[\"进行程序编写\",{\"1\":{\"139\":1}}],[\"进行完作业之后的合并操作\",{\"1\":{\"25\":1}}],[\"进来\",{\"1\":{\"134\":1}}],[\"进入控制台\",{\"1\":{\"1111\":2,\"1112\":1}}],[\"进入编辑模式\",{\"1\":{\"1110\":1}}],[\"进入命令模式\",{\"1\":{\"1110\":1}}],[\"进入网络编辑界面\",{\"1\":{\"1110\":1}}],[\"进入系统设置\",{\"1\":{\"1110\":1}}],[\"进入下载页面\",{\"1\":{\"1110\":1}}],[\"进入要修改权限的文件夹所在目录\",{\"1\":{\"1109\":1}}],[\"进入指定目录修改配置\",{\"1\":{\"1107\":1}}],[\"进入安装界面\",{\"1\":{\"1104\":1}}],[\"进入文件=>偏好设置=>图像\",{\"1\":{\"954\":1}}],[\"进入个人设置配置私人令牌\",{\"1\":{\"952\":1}}],[\"进入稳定期\",{\"1\":{\"944\":1}}],[\"进入jenkins\",{\"0\":{\"889\":1}}],[\"进入容器\",{\"1\":{\"837\":1,\"842\":1,\"888\":2}}],[\"进入容器时目录\",{\"1\":{\"834\":1,\"837\":1}}],[\"进入容器正在执行的终端\",{\"1\":{\"811\":1}}],[\"进入容器后开启一个新的终端\",{\"1\":{\"811\":1}}],[\"进入容器内去编辑配置或者编辑挂载目录的文件\",{\"1\":{\"38\":1}}],[\"进入发布文件目录\",{\"1\":{\"806\":1}}],[\"进入这个目录\",{\"1\":{\"752\":1}}],[\"进入到安装界面\",{\"1\":{\"722\":1}}],[\"进入到下载页面\",{\"1\":{\"722\":1}}],[\"进入到这个目录中\",{\"1\":{\"564\":1}}],[\"进入打印方法\",{\"1\":{\"691\":1}}],[\"进入\",{\"1\":{\"549\":1,\"1110\":2}}],[\"进入授权过滤器\",{\"1\":{\"401\":2}}],[\"进入主界面\",{\"1\":{\"212\":1,\"1118\":1}}],[\"进入settings之后\",{\"1\":{\"19\":1}}],[\"进入创建用户的页面\",{\"1\":{\"18\":1}}],[\"进入该服务器查看容器信息\",{\"1\":{\"8\":1}}],[\"人员开发费用\",{\"1\":{\"704\":1}}],[\"人力资源增多\",{\"1\":{\"210\":1}}],[\"人都以为你这个请求就成功了\",{\"1\":{\"208\":1}}],[\"人\",{\"1\":{\"179\":1}}],[\"人们主要是使用subversion\",{\"1\":{\"11\":1}}],[\"人总是在正确的事情和容易做的事情之间做选择\",{\"1\":{\"0\":1}}],[\"作\",{\"1\":{\"564\":1}}],[\"作用范围\",{\"0\":{\"400\":1}}],[\"作用域内做你想做的sql操作\",{\"1\":{\"1064\":1}}],[\"作用域\",{\"0\":{\"346\":1}}],[\"作用\",{\"1\":{\"206\":1,\"952\":1}}],[\"作为参数\",{\"1\":{\"1055\":1}}],[\"作为参数后缀\",{\"1\":{\"159\":1}}],[\"作为服务注册表\",{\"1\":{\"941\":1}}],[\"作为基础镜像\",{\"1\":{\"869\":1}}],[\"作为我们的基础镜像\",{\"1\":{\"866\":1}}],[\"作为奖励\",{\"1\":{\"694\":1}}],[\"作为描述语言\",{\"1\":{\"663\":1}}],[\"作为一种学习总结\",{\"1\":{\"550\":1}}],[\"作为最顶层的一个接口类\",{\"1\":{\"443\":1}}],[\"作为数据结构工具库\",{\"1\":{\"243\":1}}],[\"作为你的上级\",{\"1\":{\"190\":1}}],[\"作为面试官我遇到过不少这种现象\",{\"1\":{\"184\":1}}],[\"作为构造函数参数传入\",{\"1\":{\"166\":1}}],[\"作为类的成员\",{\"1\":{\"68\":1}}],[\"作为版本控制的工具\",{\"1\":{\"11\":1}}],[\"作为互联网界的一员\",{\"1\":{\"10\":1}}],[\"作者推荐使用新版\",{\"1\":{\"696\":1}}],[\"作者把通用pe工具箱\",{\"1\":{\"267\":1}}],[\"作者\",{\"1\":{\"9\":1,\"215\":1,\"382\":1,\"599\":1}}],[\"如网络连接\",{\"1\":{\"1099\":1}}],[\"如拿掉全部人的可执行权限\",{\"1\":{\"1085\":1}}],[\"如将文件权限设置为\",{\"1\":{\"1085\":1}}],[\"如权限\",{\"1\":{\"1084\":1}}],[\"如权限或属性被更改\",{\"1\":{\"1077\":1}}],[\"如键盘\",{\"1\":{\"1081\":1}}],[\"如不加任何参数\",{\"1\":{\"1078\":1}}],[\"如使用cat读取\",{\"1\":{\"1077\":1}}],[\"如使用模型绑定\",{\"1\":{\"164\":1}}],[\"如当前目录\",{\"1\":{\"1072\":1}}],[\"如当前的活动连接\",{\"1\":{\"207\":1}}],[\"如空格代码整理\",{\"1\":{\"968\":1}}],[\"如空格会被编码为\",{\"1\":{\"159\":1}}],[\"如500gi\",{\"1\":{\"914\":1}}],[\"如上图中的\",{\"1\":{\"1081\":1}}],[\"如上图所示\",{\"1\":{\"879\":1}}],[\"如上图\",{\"1\":{\"838\":1,\"927\":1}}],[\"如上图指定的是镜像为hello\",{\"1\":{\"809\":1}}],[\"如图\",{\"1\":{\"812\":1,\"876\":3,\"956\":1,\"1012\":1}}],[\"如图所示\",{\"1\":{\"575\":1,\"809\":1}}],[\"如运行时\",{\"1\":{\"810\":1}}],[\"如开发电脑\",{\"1\":{\"806\":1}}],[\"如镜像拉取\",{\"1\":{\"809\":1}}],[\"如镜像\",{\"1\":{\"805\":1}}],[\"如需要则手动拷贝到其他目录后再覆盖\",{\"1\":{\"802\":1}}],[\"如请求百度后返回结果\",{\"1\":{\"735\":1}}],[\"如更换默认打印机\",{\"1\":{\"690\":1}}],[\"如医疗领域的his系统\",{\"1\":{\"690\":1}}],[\"如有不对\",{\"1\":{\"657\":1}}],[\"如有其它建议或者补充欢迎留言\",{\"1\":{\"204\":1}}],[\"如c语言中单元指一个函数\",{\"1\":{\"593\":1}}],[\"如斐波那契数列算法\",{\"1\":{\"593\":1}}],[\"如下面的动图所示\",{\"1\":{\"986\":1}}],[\"如下命令\",{\"1\":{\"816\":2}}],[\"如下部分截图\",{\"1\":{\"815\":1}}],[\"如下所示\",{\"1\":{\"788\":1}}],[\"如下所示几个类\",{\"1\":{\"440\":1}}],[\"如下\",{\"1\":{\"442\":1,\"552\":1,\"806\":6,\"809\":2,\"810\":6,\"811\":10,\"812\":4,\"815\":4,\"816\":2,\"817\":2,\"834\":1,\"836\":1,\"837\":2,\"838\":5,\"839\":1,\"840\":2,\"842\":1,\"843\":2,\"851\":3,\"852\":3,\"1012\":2,\"1061\":1}}],[\"如下图所示\",{\"1\":{\"926\":1}}],[\"如下图\",{\"1\":{\"436\":1,\"735\":1,\"818\":1,\"839\":1,\"846\":1}}],[\"如下表所示\",{\"1\":{\"75\":1,\"125\":1}}],[\"如无法打开可以查看开源项目\",{\"1\":{\"336\":1}}],[\"如ip地址\",{\"1\":{\"327\":1}}],[\"如id\",{\"1\":{\"160\":1}}],[\"如varchar不加单引号的话可能会自动转换为int型\",{\"1\":{\"206\":1}}],[\"如65535\",{\"1\":{\"204\":1}}],[\"如\",{\"1\":{\"159\":5,\"160\":2,\"207\":2,\"210\":1,\"442\":1,\"668\":1,\"776\":1,\"974\":1,\"1044\":1,\"1072\":1,\"1081\":1,\"1129\":1}}],[\"如useauthentication\",{\"1\":{\"157\":1}}],[\"如何在\",{\"1\":{\"1066\":1}}],[\"如何在dot\",{\"1\":{\"203\":1}}],[\"如何对外提供服务\",{\"1\":{\"918\":1}}],[\"如何优化就要用到我们开头说到的\",{\"1\":{\"866\":1}}],[\"如何能通过容器名进行访问\",{\"0\":{\"841\":1}}],[\"如何将我们本地的仓库和远程服务器上面的仓库关联起来呢\",{\"1\":{\"788\":1}}],[\"如何添加远程仓库\",{\"0\":{\"788\":1}}],[\"如何让忘记密码再次输入密码\",{\"1\":{\"775\":1}}],[\"如何实现这种关联关系呢\",{\"1\":{\"745\":1}}],[\"如何继承集合认证\",{\"1\":{\"719\":1}}],[\"如何使grpc\",{\"1\":{\"666\":1}}],[\"如何使用\",{\"1\":{\"203\":1}}],[\"如何做单元测试\",{\"1\":{\"592\":1}}],[\"如何做内存优化\",{\"1\":{\"209\":1}}],[\"如何选择合适的开源协议\",{\"1\":{\"253\":1}}],[\"如何选择许可证\",{\"1\":{\"253\":1}}],[\"如何选择开源许可证\",{\"1\":{\"247\":1}}],[\"如何避免\",{\"1\":{\"209\":3}}],[\"如何解决消息队列的延时以及过期失效问题\",{\"1\":{\"208\":1}}],[\"如何解决es集群的脑裂问题\",{\"1\":{\"204\":1}}],[\"如何确保消息接收方消费了消息\",{\"1\":{\"208\":1}}],[\"如何确保消息正确地发送至\",{\"1\":{\"208\":1}}],[\"如何保证\",{\"1\":{\"209\":1}}],[\"如何保证高可用的\",{\"1\":{\"208\":1}}],[\"如何保证rabbitmq消息的可靠传输\",{\"1\":{\"208\":1}}],[\"如何保证rabbitmq消息的顺序性\",{\"1\":{\"208\":1}}],[\"如何保证消息可靠性传输等\",{\"1\":{\"208\":1}}],[\"如何保证消息消费时的幂等性\",{\"1\":{\"208\":1}}],[\"如何保证消息不被重复消费\",{\"1\":{\"208\":2}}],[\"如何保证缓存和数据库一致性\",{\"1\":{\"134\":1}}],[\"如何理解mongodb中的gridfs机制\",{\"1\":{\"205\":1}}],[\"如何防止\",{\"1\":{\"203\":1,\"206\":1}}],[\"如何以较小的内存代价保存\",{\"1\":{\"203\":1}}],[\"如何利用反射来实现工厂模式\",{\"1\":{\"203\":1}}],[\"如何自定义序列化和反序列化的过程\",{\"1\":{\"203\":1}}],[\"如何突破这种限制\",{\"1\":{\"155\":1}}],[\"如何提高连接池内连接的重用率\",{\"1\":{\"203\":1}}],[\"如何提高缓存利用率\",{\"1\":{\"134\":1}}],[\"如何提高命令输出的可读性\",{\"1\":{\"17\":1}}],[\"如何提问\",{\"0\":{\"1\":1}}],[\"如static\",{\"1\":{\"87\":1}}],[\"如public或private\",{\"1\":{\"87\":1}}],[\"如pulic\",{\"1\":{\"87\":2}}],[\"如abstract或virtual\",{\"1\":{\"87\":2}}],[\"如编译器指令和注释\",{\"1\":{\"41\":1}}],[\"如果虚拟机和主机相互无法访问\",{\"1\":{\"1110\":1}}],[\"如果每次启动的\",{\"1\":{\"1110\":1}}],[\"如果每个容器都这样的显示指定的话\",{\"1\":{\"842\":1}}],[\"如果觉得去官网下载很麻烦\",{\"1\":{\"1110\":1}}],[\"如果提示没有yum\",{\"1\":{\"1109\":1}}],[\"如果加上\",{\"1\":{\"1082\":1,\"1083\":1}}],[\"如果目标文件已存在\",{\"1\":{\"1079\":1,\"1080\":3}}],[\"如果目录内存在文件\",{\"1\":{\"1076\":1}}],[\"如果目录已存在\",{\"1\":{\"1075\":1}}],[\"如果环境安装不清楚可以查看之前的文章\",{\"1\":{\"1068\":1}}],[\"如果新增主键是自增列会自动赋值自增列值到主键\",{\"1\":{\"1042\":1}}],[\"如果新到的消息\",{\"1\":{\"208\":1}}],[\"如果打包的时候遇到\",{\"1\":{\"1037\":1}}],[\"如果打开github有问题\",{\"1\":{\"689\":1}}],[\"如果返回的是restricted\",{\"1\":{\"1008\":1}}],[\"如果至少两个线程在同一位置暂停\",{\"1\":{\"985\":1}}],[\"如果当前程序指针指向一个函数\",{\"1\":{\"974\":2}}],[\"如果当前数据库不存在按照当前\",{\"1\":{\"501\":2}}],[\"如果安装在固态盘上运行会更流畅\",{\"1\":{\"961\":1}}],[\"如果安装就需要卸载它们以及相关的依赖项\",{\"1\":{\"862\":1}}],[\"如果英文不错的可以考虑使用英语操作\",{\"1\":{\"960\":1}}],[\"如果此处出现访问失败\",{\"1\":{\"954\":1}}],[\"如果读者熟知这一部分\",{\"1\":{\"934\":1}}],[\"如果检查容器状态不正常\",{\"1\":{\"914\":1}}],[\"如果探测失败\",{\"1\":{\"914\":1}}],[\"如果出现错误\",{\"1\":{\"892\":1}}],[\"如果出现了错误可以查看点此处查看常见错误解决方案\",{\"1\":{\"563\":1}}],[\"如果系统管理里面有错误\",{\"1\":{\"891\":1}}],[\"如果系数是低于\",{\"1\":{\"199\":1}}],[\"如果docker还不能启动\",{\"1\":{\"876\":1}}],[\"如果本机没有\",{\"1\":{\"862\":1}}],[\"如果本地没有镜像\",{\"1\":{\"805\":1,\"817\":1}}],[\"如果本地存在\",{\"1\":{\"805\":1}}],[\"如果能配上一个批量操作那就完美了\",{\"1\":{\"843\":1}}],[\"如果能通过容器名访问\",{\"1\":{\"841\":1}}],[\"如果将其进行容器化\",{\"1\":{\"843\":1}}],[\"如果还一个一个的根据镜像启动容器\",{\"1\":{\"843\":1}}],[\"如果ip\",{\"1\":{\"840\":1}}],[\"如果远程仓库也没有找到镜像\",{\"1\":{\"812\":1}}],[\"如果容器被删除\",{\"1\":{\"811\":1}}],[\"如果对应用进行缩容\",{\"1\":{\"936\":1}}],[\"如果对服务端有操作\",{\"1\":{\"809\":1}}],[\"如果对某个节点的投票数达到一定的值\",{\"1\":{\"204\":1}}],[\"如果都没找到\",{\"1\":{\"805\":1}}],[\"如果之前的秘钥不再需要则直接回车覆盖\",{\"1\":{\"802\":1}}],[\"如果上一步置顶的保存路径下已经有秘钥文件\",{\"1\":{\"802\":1}}],[\"如果运行指令\",{\"1\":{\"799\":1}}],[\"如果前面的规则匹配的范围更大\",{\"1\":{\"799\":1}}],[\"如果文件夹的父目录被忽略了\",{\"1\":{\"799\":1}}],[\"如果文件中的内容发生改变\",{\"1\":{\"375\":1}}],[\"如果忽视某些文件\",{\"1\":{\"799\":1}}],[\"如果a接着开发\",{\"1\":{\"798\":1}}],[\"如果asp\",{\"1\":{\"543\":2}}],[\"如果两个文件的内容一致的话\",{\"1\":{\"778\":1}}],[\"如果修改关联地址后出来呢问题\",{\"1\":{\"774\":1}}],[\"如果用这句话来确定是那个库表\",{\"1\":{\"1043\":1}}],[\"如果用postman做接口测试\",{\"1\":{\"739\":1}}],[\"如果用户移除对象的属性\",{\"1\":{\"205\":1}}],[\"如果习惯看原始请求报文的话\",{\"1\":{\"738\":1}}],[\"如果下载不了\",{\"1\":{\"693\":1}}],[\"如果我用的方式不对\",{\"1\":{\"662\":1}}],[\"如果我们仔细想想的话\",{\"1\":{\"789\":1}}],[\"如果我们这里去修改一个文件的话\",{\"1\":{\"780\":1}}],[\"如果我们接口是需要传递token才可以访问\",{\"1\":{\"484\":1}}],[\"如果我们按照组件写的示例去操作\",{\"1\":{\"215\":1}}],[\"如果多个应用之间发生重复键\",{\"1\":{\"661\":1}}],[\"如果子应用跟被继承应用之间的配置键发生重复\",{\"1\":{\"661\":1}}],[\"如果为true则启用控制台功能\",{\"1\":{\"661\":1}}],[\"如果可以确定统计时间也可以查指定的库表\",{\"1\":{\"1041\":1}}],[\"如果可以确定统计时间也可以查指定的库表进行单表查询\",{\"1\":{\"1041\":1}}],[\"如果可以多次操作不报错就是成功\",{\"1\":{\"659\":1}}],[\"如果可用则直接加载\",{\"1\":{\"203\":1}}],[\"如果和预期一致说明测试通过\",{\"1\":{\"586\":1}}],[\"如果您不打算收集代码覆盖率\",{\"1\":{\"585\":1}}],[\"如果pluginbase引用其他包\",{\"1\":{\"577\":1}}],[\"如果输出那么就不是从上下文继承iproviderbase\",{\"1\":{\"577\":1}}],[\"如果statisticaldate赋值了则根据statisticaldate找库表\",{\"1\":{\"1043\":1}}],[\"如果stdout\",{\"1\":{\"564\":2}}],[\"如果supervisord以root运行\",{\"1\":{\"564\":2}}],[\"如果numprocs>1\",{\"1\":{\"564\":3}}],[\"如果net\",{\"1\":{\"140\":1}}],[\"如果后续使用该方式部署生产环境的东西\",{\"1\":{\"549\":1}}],[\"如果后期数据库字段或者结构有变动\",{\"1\":{\"501\":1}}],[\"如果服务已经启动\",{\"1\":{\"547\":1}}],[\"如果服务器服务器重启后\",{\"1\":{\"543\":1}}],[\"如果服务器宕机或需要重启我们则还是需要连入shell进行启动\",{\"1\":{\"543\":1}}],[\"如果关闭shell则会发现asp\",{\"1\":{\"543\":1}}],[\"如果轮询间隔足够短\",{\"1\":{\"531\":1}}],[\"如果仅需要统计右表的个数或者其它属性\",{\"1\":{\"521\":1}}],[\"如果已附加的进程仍然运行着\",{\"1\":{\"983\":1}}],[\"如果已经安装sdk或者运行时\",{\"1\":{\"538\":1}}],[\"如果已经使用\",{\"1\":{\"476\":1}}],[\"如果已跟踪某个实体\",{\"1\":{\"504\":1}}],[\"如果具有\",{\"1\":{\"503\":1}}],[\"如果数据库不存在\",{\"1\":{\"502\":1}}],[\"如果数据库更新成功了\",{\"1\":{\"134\":1}}],[\"如果实体类不在当前程序集下\",{\"1\":{\"483\":1}}],[\"如果未找到\",{\"1\":{\"470\":1}}],[\"如果根据别名检索\",{\"1\":{\"443\":1}}],[\"如果需要打包其他环境的包或者指定版本号的包可以通过打包命令去生成\",{\"1\":{\"1123\":1}}],[\"如果需要打包其他环境的包可以通过打包命令去生成\",{\"1\":{\"1122\":1}}],[\"如果需要卸载\",{\"1\":{\"848\":1}}],[\"如果需要不同docker主机进行通信\",{\"1\":{\"839\":1}}],[\"如果需要修改配置文件\",{\"1\":{\"817\":1}}],[\"如果需要其他功能可以自己安装扩展\",{\"1\":{\"811\":1}}],[\"如果需要通过主机能访问到容器里面的nginx\",{\"1\":{\"811\":1}}],[\"如果需要在对应的\",{\"1\":{\"786\":1}}],[\"如果需要针对测试中的所有虚拟用户迭代仅执行一次初始化操作\",{\"1\":{\"596\":1}}],[\"如果需要自定义模型验证\",{\"1\":{\"477\":1}}],[\"如果需要得到工厂本身\",{\"1\":{\"443\":1}}],[\"如果需要录制游戏视频\",{\"1\":{\"293\":1}}],[\"如果异常没有处理\",{\"1\":{\"413\":1}}],[\"如果它的构造器中的参数类型在di容器中找不到\",{\"1\":{\"410\":1}}],[\"如果要更新statisticaldate则可以用这句话替代上面那句话\",{\"1\":{\"1043\":1}}],[\"如果要求输入密码\",{\"1\":{\"964\":1}}],[\"如果要达到同样的效果\",{\"1\":{\"842\":1}}],[\"如果要执行其他命令\",{\"1\":{\"840\":1}}],[\"如果要建房的话\",{\"1\":{\"820\":1}}],[\"如果要想使用环境变量\",{\"1\":{\"740\":1}}],[\"如果要查询成绩\",{\"1\":{\"522\":1}}],[\"如果要传递参数\",{\"1\":{\"407\":1}}],[\"如果要匹配\",{\"1\":{\"159\":1}}],[\"如果使用\",{\"1\":{\"1110\":1}}],[\"如果使用默认的界面不习惯\",{\"1\":{\"1105\":1}}],[\"如果使用了自定义映射\",{\"1\":{\"1061\":1}}],[\"如果使用的是\",{\"1\":{\"964\":1}}],[\"如果使用apollo进行部署做配置中心\",{\"1\":{\"661\":1}}],[\"如果使用action方式\",{\"1\":{\"407\":1}}],[\"如果使用到可变集合需要使用list或者字典\",{\"1\":{\"81\":1}}],[\"如果标记有允许所有\",{\"1\":{\"403\":2}}],[\"如果存在任何表\",{\"1\":{\"502\":1}}],[\"如果存在\",{\"1\":{\"502\":1}}],[\"如果存在则不管了\",{\"1\":{\"501\":1}}],[\"如果存在则将数据库调整到和当前\",{\"1\":{\"501\":1}}],[\"如果存在id\",{\"1\":{\"402\":1}}],[\"如果存在并发\",{\"1\":{\"134\":1}}],[\"如果查询到上面传输的信息\",{\"1\":{\"401\":2}}],[\"如果没安装\",{\"1\":{\"1008\":1}}],[\"如果没传直接返回401\",{\"1\":{\"401\":1}}],[\"如果没有使用\",{\"1\":{\"1111\":1}}],[\"如果没有高级保存选项需要去配置\",{\"1\":{\"971\":1}}],[\"如果没有其它因素\",{\"1\":{\"936\":1}}],[\"如果没有作用可以修改下面配置\",{\"1\":{\"893\":1}}],[\"如果没有断言\",{\"1\":{\"739\":1}}],[\"如果没有编写断言默认都为0\",{\"1\":{\"737\":1}}],[\"如果没有传输版本号\",{\"1\":{\"650\":1}}],[\"如果没有权限\",{\"1\":{\"502\":1,\"1081\":1}}],[\"如果没有这个\",{\"1\":{\"436\":1}}],[\"如果没有处理过那么就进行处理\",{\"1\":{\"404\":1}}],[\"如果没有缓存就接着运行\",{\"1\":{\"402\":1}}],[\"如果没有代理\",{\"1\":{\"322\":1}}],[\"如果没有指定路由\",{\"1\":{\"204\":1}}],[\"如果没有\",{\"1\":{\"167\":1,\"812\":1}}],[\"如果过滤器中使用了构造函数注入\",{\"1\":{\"400\":1}}],[\"如果过了\",{\"1\":{\"201\":1}}],[\"如果同步过滤器和异步的都设置了\",{\"1\":{\"399\":1}}],[\"如果jwt过期\",{\"1\":{\"364\":1}}],[\"如果该service在一次请求中只使用一次\",{\"1\":{\"347\":1}}],[\"如果该service在一个请求过程中多次被用到\",{\"1\":{\"346\":1}}],[\"如果该imessagewriter已经注册实现\",{\"1\":{\"344\":1}}],[\"如果该基类是从dog子类转过来的\",{\"1\":{\"128\":1}}],[\"如果找到几个使用此名称的进程\",{\"1\":{\"983\":1}}],[\"如果找不到具有此名称的进程\",{\"1\":{\"983\":1}}],[\"如果找不到就报错\",{\"1\":{\"805\":1}}],[\"如果找不到模型属性的值\",{\"1\":{\"468\":1}}],[\"如果找不到匹配的节\",{\"1\":{\"393\":1}}],[\"如果找不到succeed的本地化值\",{\"1\":{\"145\":1}}],[\"如果找回这个长请求呢\",{\"1\":{\"326\":1}}],[\"如果手机厂商想要使用\",{\"1\":{\"247\":1}}],[\"如果看过我写过的\",{\"1\":{\"215\":1}}],[\"如果看到一个小伙子的照片很精神\",{\"1\":{\"177\":1}}],[\"如果想在每次dev提交代码后自动生成服务\",{\"1\":{\"1070\":1}}],[\"如果想在其他层获取当前用户信息\",{\"1\":{\"363\":1}}],[\"如果想使用mstest框架\",{\"1\":{\"585\":1}}],[\"如果想了解更多\",{\"1\":{\"215\":1}}],[\"如果想找不到工作\",{\"1\":{\"182\":1}}],[\"如果人工做这样的工作\",{\"1\":{\"215\":1}}],[\"如果在安装期间选择不在布局中的组件\",{\"1\":{\"964\":1}}],[\"如果在当前构建的上下文目录中不想要一些文件参与构建\",{\"1\":{\"838\":1}}],[\"如果在运行容器时\",{\"1\":{\"838\":1}}],[\"如果在请求参数中获取变量\",{\"1\":{\"743\":1}}],[\"如果在postman请求上图的接口\",{\"1\":{\"733\":1}}],[\"如果在\",{\"1\":{\"209\":1}}],[\"如果在执行失败的线程中一直重试\",{\"1\":{\"134\":1}}],[\"如果大于\",{\"1\":{\"209\":1}}],[\"如果节点\",{\"1\":{\"209\":1}}],[\"如果设置的超过\",{\"1\":{\"1110\":1}}],[\"如果设置为\",{\"1\":{\"1036\":2}}],[\"如果设置为auto\",{\"1\":{\"564\":2}}],[\"如果设置为0\",{\"1\":{\"564\":4}}],[\"如果设置为0则表示不限制日志文件大小\",{\"1\":{\"564\":4}}],[\"如果设置为true\",{\"1\":{\"564\":10}}],[\"如果设置了该值\",{\"1\":{\"373\":1}}],[\"如果设置了最大使用的内存\",{\"1\":{\"209\":1}}],[\"如果设置replication为async时\",{\"1\":{\"204\":1}}],[\"如果消费端收到两条一样的消息\",{\"1\":{\"208\":1}}],[\"如果消费者接收到消息却没有确认消息\",{\"1\":{\"208\":1}}],[\"如果消费者接收到消息\",{\"1\":{\"208\":1}}],[\"如果消息积压在\",{\"1\":{\"208\":1}}],[\"如果消息在\",{\"1\":{\"208\":1}}],[\"如果消息持久化磁盘之前\",{\"1\":{\"208\":1}}],[\"如果rabbitmq没能处理该消息\",{\"1\":{\"208\":1}}],[\"如果发送成功则提交事务\",{\"1\":{\"208\":1}}],[\"如果发送过程中出现什么异常\",{\"1\":{\"208\":1}}],[\"如果发现已经提交的内容中有拼写等错误\",{\"1\":{\"27\":1}}],[\"如果支持的话\",{\"1\":{\"205\":1}}],[\"如果块移动操作\",{\"1\":{\"205\":1}}],[\"如果一秒内数据库收到一千个对一个对象递增的操作\",{\"1\":{\"205\":1}}],[\"如果一个控制器中的好几个action方式都使用了这个过滤器\",{\"1\":{\"407\":1}}],[\"如果一个请求时间过长\",{\"1\":{\"326\":1}}],[\"如果一个命令的结果导致大量内存被使用\",{\"1\":{\"209\":1}}],[\"如果一个分片响应很慢\",{\"1\":{\"205\":1}}],[\"如果一个分片停止了\",{\"1\":{\"205\":1}}],[\"如果一个分片\",{\"1\":{\"205\":1}}],[\"如果一个对象不能处理该请求\",{\"1\":{\"202\":1}}],[\"如果一个程序员在github上有一个很好的开源项目\",{\"1\":{\"10\":1}}],[\"如果内存交换到磁盘上\",{\"1\":{\"204\":1}}],[\"如果元素多于8个\",{\"1\":{\"203\":1}}],[\"如果\",{\"1\":{\"202\":1,\"208\":1,\"943\":1,\"1019\":1}}],[\"如果认为写的不好\",{\"1\":{\"201\":1}}],[\"如果包括了绩效\",{\"1\":{\"199\":1}}],[\"如果被问到这个问题\",{\"1\":{\"191\":1}}],[\"如果这里有问题\",{\"1\":{\"902\":1}}],[\"如果这是你写的接口\",{\"1\":{\"483\":1}}],[\"如果这个分支已经在本地也创建那么删除不掉\",{\"1\":{\"772\":1}}],[\"如果这个时候提供502错误\",{\"1\":{\"543\":1}}],[\"如果这个获取过程要靠自身实现\",{\"1\":{\"436\":1}}],[\"如果这个目标不清晰\",{\"1\":{\"190\":1}}],[\"如果这时处理消息失败\",{\"1\":{\"208\":1}}],[\"如果这家公司你非常想去\",{\"1\":{\"188\":1}}],[\"如果公司以加班为荣\",{\"1\":{\"188\":1}}],[\"如果工作需要的合理加班\",{\"1\":{\"188\":1}}],[\"如果问\",{\"1\":{\"188\":1}}],[\"如果把自己看成一个产品\",{\"1\":{\"176\":1,\"194\":1}}],[\"如果路由匹配到了终结点\",{\"1\":{\"157\":1}}],[\"如果你虚拟机里面要跑的东西比较大\",{\"1\":{\"1104\":1}}],[\"如果你喜欢用\",{\"1\":{\"1064\":1}}],[\"如果你遇到签名无效的错误\",{\"1\":{\"964\":1}}],[\"如果你使用的是root用户\",{\"1\":{\"905\":1}}],[\"如果你想演示它\",{\"1\":{\"985\":1}}],[\"如果你想更改请进入文件编辑jenkins\",{\"1\":{\"905\":1}}],[\"如果你想要在\",{\"1\":{\"341\":1}}],[\"如果你想要从\",{\"1\":{\"322\":1}}],[\"如果你想要进行更加深入透彻的了解\",{\"1\":{\"168\":1}}],[\"如果你提交时候发现对方已经提交到远程\",{\"1\":{\"798\":1}}],[\"如果你修改接口配置信息\",{\"1\":{\"711\":1}}],[\"如果你首次打开时jhrs\",{\"1\":{\"689\":1}}],[\"如果你是第一次使用postman发送请求\",{\"1\":{\"724\":1}}],[\"如果你是一个新手\",{\"1\":{\"693\":1}}],[\"如果你是c\",{\"1\":{\"689\":1}}],[\"如果你是个工作\",{\"1\":{\"189\":1}}],[\"如果你所在公司需要部署\",{\"1\":{\"563\":1}}],[\"如果你已经存在需要的版本就不用再安装了\",{\"1\":{\"538\":1}}],[\"如果你在做大批量导入\",{\"1\":{\"204\":1}}],[\"如果你在做批量导入\",{\"1\":{\"204\":1}}],[\"如果你用的是ssd\",{\"1\":{\"204\":1}}],[\"如果你现在的工作是\",{\"1\":{\"198\":1}}],[\"如果你感觉自己面试表现好\",{\"1\":{\"198\":1}}],[\"如果你觉得将来太久远\",{\"1\":{\"190\":1}}],[\"如果你不甘心说不懂怎么办\",{\"1\":{\"186\":1}}],[\"如果你不会\",{\"1\":{\"183\":1}}],[\"如果你写个\",{\"1\":{\"181\":1}}],[\"如果你做过的项目很多\",{\"1\":{\"181\":1}}],[\"如果你会的技能有一大堆\",{\"1\":{\"180\":1}}],[\"如果你比较高产\",{\"1\":{\"178\":1}}],[\"如果你有任何疑问和不满\",{\"1\":{\"322\":1}}],[\"如果你有公网服务器\",{\"1\":{\"242\":1}}],[\"如果你有一个和岗位相关的的博客\",{\"1\":{\"178\":1}}],[\"如果你有留意观察很多数据库的特性\",{\"1\":{\"134\":1}}],[\"如果你的网络\",{\"1\":{\"1110\":1}}],[\"如果你的使用场景数据量大\",{\"1\":{\"342\":1}}],[\"如果你的搜索结果不需要近实时的准确度\",{\"1\":{\"204\":1}}],[\"如果你的客户端使用某些接口\",{\"1\":{\"202\":1}}],[\"如果你的学校名气大\",{\"1\":{\"178\":1}}],[\"如果你的业务处于起步阶段\",{\"1\":{\"134\":1}}],[\"如果你要重现有问题的请求\",{\"1\":{\"175\":1}}],[\"如果缓存有内容就直接返回\",{\"1\":{\"402\":2}}],[\"如果缓存更新成功了\",{\"1\":{\"134\":1}}],[\"如果缓存不存在\",{\"1\":{\"134\":1}}],[\"如果不带参数\",{\"1\":{\"1073\":1}}],[\"如果不想更新statisticaldate字段则用这句话来确定是那个库及表\",{\"1\":{\"1043\":1}}],[\"如果不想更新statisticaldate可以用下面这句话\",{\"1\":{\"1043\":1}}],[\"如果不想使用真名\",{\"1\":{\"17\":1}}],[\"如果不是请先升级\",{\"1\":{\"956\":1}}],[\"如果不指定\",{\"1\":{\"839\":1}}],[\"如果不指定tag\",{\"1\":{\"810\":1}}],[\"如果不需要密码则直接回车\",{\"1\":{\"802\":1}}],[\"如果不需要改路径则直接回车\",{\"1\":{\"802\":1}}],[\"如果不存在数据返回空字符串\",{\"1\":{\"503\":1}}],[\"如果不存在数据返回空对象\",{\"1\":{\"503\":1}}],[\"如果不存在对应的\",{\"1\":{\"209\":1}}],[\"如果不写也没有设置不受版本控制\",{\"1\":{\"500\":1}}],[\"如果不符合要求自动触发http400错误响应\",{\"1\":{\"472\":1}}],[\"如果不将数据放在内存中\",{\"1\":{\"209\":1}}],[\"如果不可用\",{\"1\":{\"203\":1,\"1110\":1}}],[\"如果不能写到合同里\",{\"1\":{\"200\":1}}],[\"如果不用判断结果是否为null那么推荐使用类型转换\",{\"1\":{\"130\":1}}],[\"如果类型不匹配\",{\"1\":{\"130\":1}}],[\"如果字符串格式不满足转换的要求\",{\"1\":{\"129\":1}}],[\"如果有需要可以去网上找汉化版\",{\"1\":{\"1106\":1}}],[\"如果有需要进阶的\",{\"1\":{\"850\":1}}],[\"如果有需要的话\",{\"1\":{\"204\":1}}],[\"如果有修改\",{\"1\":{\"798\":1}}],[\"如果有多组键值对\",{\"1\":{\"728\":1}}],[\"如果有多个实体符合筛选部分\",{\"1\":{\"503\":2}}],[\"如果有多个相同特性\",{\"1\":{\"102\":1}}],[\"如果有哪里不对的地方\",{\"1\":{\"591\":1}}],[\"如果有一些框架可以消除通信的复杂性\",{\"1\":{\"534\":1}}],[\"如果有一个齿轮出了问题\",{\"1\":{\"435\":1}}],[\"如果有\",{\"1\":{\"134\":1}}],[\"如果有新的文件或者原来的文件有修改过\",{\"1\":{\"23\":1}}],[\"如果代码中使用了属性\",{\"1\":{\"86\":1}}],[\"如果只定义了set访问器\",{\"1\":{\"60\":1}}],[\"如果只定义了get访问器\",{\"1\":{\"60\":1}}],[\"如果是新建线程则需要在线程开始调用dbtool\",{\"1\":{\"1045\":1}}],[\"如果是新人\",{\"1\":{\"180\":1}}],[\"如果是查多个库表必须按分库分表的字段降序排列\",{\"1\":{\"1041\":2}}],[\"如果是python或node\",{\"1\":{\"1019\":1}}],[\"如果是\",{\"1\":{\"1019\":1}}],[\"如果是exe\",{\"1\":{\"1019\":2}}],[\"如果是其他脚本python脚本\",{\"1\":{\"1019\":1}}],[\"如果是vs2019\",{\"1\":{\"956\":1}}],[\"如果是之后创建的\",{\"1\":{\"799\":1}}],[\"如果是在互联网上\",{\"1\":{\"798\":1}}],[\"如果是在编写代码的位置\",{\"1\":{\"743\":1}}],[\"如果是局域网的话宽带大\",{\"1\":{\"798\":1}}],[\"如果是测试环境或者特殊情况可以通过调整swagger配置位置来显示文档\",{\"1\":{\"554\":1}}],[\"如果是mvc使用\",{\"1\":{\"404\":1}}],[\"如果是要做全局异常捕捉还是建议去使用中间件\",{\"1\":{\"404\":1}}],[\"如果是修改或者衍生\",{\"1\":{\"249\":1}}],[\"如果是我的话会这么回答\",{\"1\":{\"204\":1}}],[\"如果是想学习windows下的仓库创建\",{\"1\":{\"20\":1}}],[\"如果是付费用户可以建立自己的私人仓库\",{\"1\":{\"14\":1}}],[\"查出所需的\",{\"1\":{\"870\":1}}],[\"查\",{\"1\":{\"810\":1}}],[\"查询发行版本号\",{\"1\":{\"1115\":1}}],[\"查询主机ip为\",{\"1\":{\"1112\":1}}],[\"查询映射\",{\"0\":{\"1061\":1}}],[\"查询所有node\",{\"1\":{\"914\":1}}],[\"查询所有namespace\",{\"1\":{\"914\":1}}],[\"查询所有用户对应的班级\",{\"1\":{\"522\":1}}],[\"查询docker版本\",{\"1\":{\"862\":1}}],[\"查询是否安装成功\",{\"1\":{\"797\":1}}],[\"查询是否存在\",{\"0\":{\"525\":1}}],[\"查询关联\",{\"1\":{\"774\":1}}],[\"查询参数的url一般直接拷贝到输入的url地址栏中就可以了\",{\"1\":{\"730\":1}}],[\"查询参数的接口请求\",{\"0\":{\"727\":1}}],[\"查询参数就是\",{\"1\":{\"728\":1}}],[\"查询课程\",{\"1\":{\"520\":1}}],[\"查询开始\",{\"1\":{\"508\":1}}],[\"查询指定列\",{\"1\":{\"503\":2}}],[\"查询单个\",{\"1\":{\"503\":1}}],[\"查询表达式\",{\"1\":{\"503\":1}}],[\"查询结果\",{\"1\":{\"501\":1}}],[\"查询用户\",{\"0\":{\"557\":1}}],[\"查询用户信息\",{\"1\":{\"501\":1}}],[\"查询用户详情\",{\"1\":{\"483\":1,\"501\":1}}],[\"查询用户列表\",{\"1\":{\"483\":1}}],[\"查询字符串参数\",{\"1\":{\"468\":1}}],[\"查询时通过该\",{\"1\":{\"209\":1}}],[\"查询会广播到索引中每一个分片拷贝\",{\"1\":{\"204\":1}}],[\"查询速度快\",{\"1\":{\"204\":1}}],[\"查询\",{\"0\":{\"1041\":1,\"1049\":1},\"1\":{\"134\":1,\"205\":1,\"508\":1,\"1111\":1}}],[\"查询缓存\",{\"1\":{\"134\":1}}],[\"查找deployment\",{\"1\":{\"914\":1}}],[\"查找具有主键\",{\"1\":{\"503\":1}}],[\"查找源\",{\"1\":{\"468\":1}}],[\"查找\",{\"1\":{\"468\":3,\"965\":1}}],[\"查找endpointdatasource来展示终结点集合\",{\"1\":{\"156\":1}}],[\"查找密码\",{\"0\":{\"39\":1}}],[\"查找资料\",{\"1\":{\"10\":1}}],[\"查看网络配置信息\",{\"0\":{\"1105\":1}}],[\"查看已经创建的虚拟机\",{\"1\":{\"1104\":1}}],[\"查看操作历史文件的内容\",{\"1\":{\"1095\":1}}],[\"查看文件内容\",{\"1\":{\"1095\":1}}],[\"查看文件状态\",{\"1\":{\"769\":1}}],[\"查看指定目录文件\",{\"1\":{\"1088\":1}}],[\"查看指定容器的详细信息\",{\"1\":{\"811\":1}}],[\"查看指定容器的日志\",{\"1\":{\"811\":1}}],[\"查看目录下文件\",{\"1\":{\"1088\":1}}],[\"查看服务状态\",{\"1\":{\"1020\":1}}],[\"查看命令功能解释\",{\"1\":{\"1008\":1}}],[\"查看函数返回的值\",{\"0\":{\"982\":1},\"1\":{\"982\":1}}],[\"查看定义\",{\"1\":{\"965\":1}}],[\"查看单个组件\",{\"1\":{\"959\":1}}],[\"查看您的ide版本是否是\",{\"1\":{\"956\":1}}],[\"查看回滚进度\",{\"1\":{\"914\":1}}],[\"查看某个deployment\",{\"1\":{\"914\":1}}],[\"查看某个文件的提交信息\",{\"1\":{\"23\":1}}],[\"查看防火墙状态\",{\"1\":{\"911\":1,\"1108\":1,\"1109\":2}}],[\"查看输出\",{\"0\":{\"901\":1}}],[\"查看输出的dll已经不包含项目引用的dll文件\",{\"1\":{\"577\":1}}],[\"查看密码\",{\"1\":{\"888\":1}}],[\"查看性能\",{\"1\":{\"876\":1}}],[\"查看大小\",{\"1\":{\"865\":1,\"866\":1,\"867\":1,\"870\":1}}],[\"查看博客\",{\"1\":{\"862\":1}}],[\"查看镜像大小\",{\"1\":{\"871\":1}}],[\"查看镜像\",{\"1\":{\"859\":1}}],[\"查看最近启动的容器\",{\"1\":{\"852\":1}}],[\"查看需要的日志\",{\"1\":{\"811\":1}}],[\"查看docker服务状态\",{\"1\":{\"862\":1}}],[\"查看docker详情信息\",{\"1\":{\"809\":1}}],[\"查看docker版本信息\",{\"1\":{\"809\":1,\"862\":1}}],[\"查看docker组是否已经添加用户成功\",{\"1\":{\"8\":1}}],[\"查看名字已经变成了中文\",{\"1\":{\"802\":1}}],[\"查看忽视文件夹\",{\"1\":{\"799\":1}}],[\"查看忽视文件和文件夹\",{\"1\":{\"799\":1}}],[\"查看下项目有没有问题\",{\"1\":{\"798\":1}}],[\"查看系统存储的用户名个密码\",{\"1\":{\"797\":1}}],[\"查看的\",{\"1\":{\"782\":1}}],[\"查看\",{\"1\":{\"778\":3,\"781\":4,\"1074\":1,\"1075\":1,\"1076\":1}}],[\"查看所有的端口信息\",{\"1\":{\"1099\":1}}],[\"查看所有的数据\",{\"1\":{\"368\":2}}],[\"查看所有分支\",{\"1\":{\"774\":1}}],[\"查看提交的历史记录\",{\"0\":{\"770\":1}}],[\"查看提交日志\",{\"1\":{\"22\":2}}],[\"查看上次的修改\",{\"0\":{\"769\":1}}],[\"查看仓库当前状态\",{\"0\":{\"768\":1}}],[\"查看仓库中文件的状态\",{\"1\":{\"23\":1}}],[\"查看原始报文\",{\"1\":{\"738\":1}}],[\"查看打印的结果\",{\"1\":{\"738\":1}}],[\"查看响应数据\",{\"1\":{\"733\":1,\"734\":2}}],[\"查看手机收到的消息\",{\"1\":{\"698\":1}}],[\"查看微信是否有消息通知\",{\"1\":{\"694\":1}}],[\"查看接口文档\",{\"1\":{\"694\":1}}],[\"查看supervisorctl支持的命令\",{\"1\":{\"564\":1}}],[\"查看我们的项目\",{\"1\":{\"540\":1}}],[\"查看发布后的目录\",{\"1\":{\"539\":1}}],[\"查看界面\",{\"1\":{\"484\":1}}],[\"查看每行代码是谁编写的\",{\"1\":{\"321\":1}}],[\"查看同步数据\",{\"0\":{\"234\":1}}],[\"查看用户\",{\"0\":{\"221\":1}}],[\"查看源码操作快捷键更熟悉\",{\"1\":{\"170\":1}}],[\"查看redis连接状态\",{\"1\":{\"151\":1}}],[\"查看mysql连接状态\",{\"1\":{\"151\":1}}],[\"查看以当前状态为终点的历史日志\",{\"1\":{\"27\":1}}],[\"查看以往提交日志信息\",{\"1\":{\"23\":1}}],[\"查看当前开启的端口号\",{\"1\":{\"1108\":1,\"1109\":1}}],[\"查看当前目录文件\",{\"1\":{\"1088\":1}}],[\"查看当前工作目录文件\",{\"1\":{\"1074\":1}}],[\"查看当前工作树和暂存区的差别\",{\"1\":{\"23\":1}}],[\"查看当前运行的进程列表\",{\"1\":{\"564\":1}}],[\"查看当前仓库的全部执行过的操作日志\",{\"1\":{\"27\":1}}],[\"查看当前分支的相关信息\",{\"1\":{\"26\":1}}],[\"查看本次提交和上次提交的差别\",{\"1\":{\"23\":1}}],[\"查看工作树\",{\"1\":{\"23\":1}}],[\"查看日志文件\",{\"1\":{\"456\":1}}],[\"查看日志\",{\"1\":{\"23\":1}}],[\"查看待提交的文档\",{\"1\":{\"22\":1}}],[\"查看待提交文档\",{\"1\":{\"22\":1}}],[\"查看内容果然被还原了\",{\"1\":{\"771\":1}}],[\"查看内容\",{\"1\":{\"19\":1,\"22\":1}}],[\"查看详细信息\",{\"1\":{\"8\":1}}],[\"目录操作\",{\"0\":{\"1116\":1}}],[\"目录和文件基本常见命令介绍到此\",{\"1\":{\"1085\":1}}],[\"目录管理包括目录的复制\",{\"1\":{\"1071\":1}}],[\"目录是\",{\"1\":{\"1071\":1}}],[\"目录或者key\",{\"1\":{\"914\":1}}],[\"目录中名字包含\",{\"1\":{\"1096\":1}}],[\"目录中包含\",{\"1\":{\"1096\":1}}],[\"目录中存在其他文件会递归删除\",{\"1\":{\"1078\":1}}],[\"目录中\",{\"1\":{\"914\":1}}],[\"目录中生成了两个信息的\",{\"1\":{\"781\":1}}],[\"目录都更新成为这个用户组\",{\"1\":{\"908\":1}}],[\"目录都有新的文件生成\",{\"1\":{\"781\":1}}],[\"目录名称\",{\"1\":{\"1074\":3,\"1075\":1,\"1076\":1}}],[\"目录名\",{\"1\":{\"852\":1}}],[\"目录也是会发生改变的\",{\"1\":{\"788\":1}}],[\"目录发生变动之外\",{\"1\":{\"781\":1}}],[\"目录下\",{\"1\":{\"1072\":1,\"1079\":1}}],[\"目录下面\",{\"1\":{\"786\":1}}],[\"目录下面有三个对象了\",{\"1\":{\"780\":1}}],[\"目录下的\",{\"1\":{\"781\":1}}],[\"目录下创建一个文件夹conf\",{\"1\":{\"547\":1}}],[\"目录里面的内容\",{\"1\":{\"781\":1}}],[\"目录里面的内容丝毫没有变化\",{\"1\":{\"778\":1}}],[\"目录里面看到的那样\",{\"1\":{\"779\":1}}],[\"目录并没有新增目录和文件\",{\"1\":{\"778\":1}}],[\"目录的变化\",{\"1\":{\"778\":1}}],[\"目录的结构如何\",{\"1\":{\"777\":1}}],[\"目录去管理\",{\"1\":{\"778\":1}}],[\"目录\",{\"0\":{\"1087\":1},\"1\":{\"549\":1,\"778\":1,\"782\":1,\"1037\":1,\"1070\":2,\"1071\":1}}],[\"目录创建成功后\",{\"1\":{\"546\":1}}],[\"目录路径\",{\"1\":{\"447\":1}}],[\"目的就是启动我们的项目\",{\"1\":{\"836\":1}}],[\"目的\",{\"0\":{\"412\":1,\"415\":1,\"417\":1,\"420\":1,\"423\":1,\"426\":1},\"1\":{\"421\":1}}],[\"目的是对部署流程的一次熟悉以及对守护进程的一次学习\",{\"1\":{\"537\":1}}],[\"目的是可以让全局都可以获取到上下文\",{\"1\":{\"367\":1}}],[\"目的是消除由于接口不匹配所造成的类的兼容性问题\",{\"1\":{\"202\":1}}],[\"目的性检查\",{\"0\":{\"151\":1}}],[\"目的主要有\",{\"1\":{\"10\":1}}],[\"目前这个主机的硬件等级为\",{\"1\":{\"1110\":1}}],[\"目前这个理论已经被成功地应用到实践当中\",{\"1\":{\"435\":1}}],[\"目前使用ubuntu的人也不少\",{\"1\":{\"1007\":1}}],[\"目前kubernetes支持的cni组件种类很多\",{\"1\":{\"928\":1}}],[\"目前kubernetes主要支持以下volume类型\",{\"1\":{\"914\":1}}],[\"目前可以正常操作的拉取方式\",{\"1\":{\"798\":1}}],[\"目前wxpusher会为你保留7天的数据\",{\"1\":{\"700\":1}}],[\"目前程序支持\",{\"1\":{\"661\":1}}],[\"目前支持两种策略\",{\"1\":{\"914\":1}}],[\"目前支持的还比较少\",{\"1\":{\"914\":1}}],[\"目前支持sqlserver\",{\"1\":{\"661\":1}}],[\"目前支持在个人主页自定义展示一些内容\",{\"1\":{\"339\":1}}],[\"目前发现的用途\",{\"1\":{\"583\":1}}],[\"目前我已知有node\",{\"1\":{\"535\":1}}],[\"目前我并不知道找个方法适合做什么\",{\"1\":{\"405\":1}}],[\"目前仅提供windows版\",{\"1\":{\"311\":1}}],[\"目前用的最多的集群方案\",{\"1\":{\"209\":1}}],[\"目前就职于京西公司\",{\"1\":{\"185\":1}}],[\"目前也有了比较成熟的开源中间件\",{\"1\":{\"134\":1}}],[\"目前是没有任何内容\",{\"1\":{\"22\":1}}],[\"目标参数必须为已经存在的目录\",{\"1\":{\"1079\":1}}],[\"目标框架的预处理器符号的完整列表如下\",{\"1\":{\"1127\":1}}],[\"目标框架\",{\"1\":{\"1037\":1,\"1127\":1}}],[\"目标框架是\",{\"1\":{\"550\":1}}],[\"目标\",{\"1\":{\"0\":1,\"179\":1,\"1079\":2}}],[\"杰哥的it之旅\",{\"1\":{\"9\":1,\"914\":1,\"933\":1}}],[\"jre\",{\"1\":{\"1136\":3}}],[\"jdk1\",{\"1\":{\"1136\":2}}],[\"jdk\",{\"1\":{\"1134\":2,\"1135\":1}}],[\"jdk8\",{\"1\":{\"1134\":1}}],[\"j\",{\"1\":{\"985\":4}}],[\"jwilder\",{\"1\":{\"868\":1,\"874\":1}}],[\"jwttoken\",{\"1\":{\"600\":3,\"604\":2,\"609\":2,\"613\":2,\"622\":2,\"627\":2,\"632\":2}}],[\"jwt具体使用后续再讲\",{\"1\":{\"484\":1}}],[\"jwt默认存放authorization信息的位置\",{\"1\":{\"484\":1}}],[\"jwt默认的参数名称\",{\"1\":{\"484\":1}}],[\"jwt授权\",{\"1\":{\"484\":1}}],[\"jwt是一个基于json的\",{\"1\":{\"484\":1}}],[\"jwtsecuritytokenhandler\",{\"1\":{\"364\":1}}],[\"jwtsecuritytoken\",{\"1\":{\"364\":1}}],[\"jwtconfig\",{\"1\":{\"364\":7}}],[\"jwt\",{\"1\":{\"364\":1}}],[\"jwtbearerevents\",{\"1\":{\"364\":1}}],[\"jwtbearerdefaults\",{\"1\":{\"364\":2}}],[\"jwtbearer\",{\"1\":{\"364\":1}}],[\"jwt使用\",{\"0\":{\"364\":1}}],[\"jenkinsci\",{\"1\":{\"884\":1,\"885\":2,\"886\":1}}],[\"jenkins\",{\"0\":{\"877\":1,\"1177\":1},\"1\":{\"877\":1,\"882\":2,\"885\":4,\"886\":4,\"887\":1,\"888\":2,\"892\":1,\"893\":1,\"902\":1,\"905\":7,\"907\":2,\"908\":3,\"909\":4,\"910\":1,\"911\":1}}],[\"jessie\",{\"1\":{\"866\":3,\"867\":1}}],[\"jeffreysu\",{\"1\":{\"712\":1}}],[\"jetbrains\",{\"1\":{\"170\":2}}],[\"jy\",{\"1\":{\"694\":2}}],[\"jyzhu\",{\"1\":{\"472\":1}}],[\"jhrsprint自定义协议\",{\"1\":{\"692\":1}}],[\"jhrsprint\",{\"1\":{\"691\":2,\"692\":1}}],[\"jhrscom\",{\"1\":{\"689\":1}}],[\"jhrs\",{\"1\":{\"689\":6,\"691\":3,\"692\":2,\"693\":2}}],[\"jvm\",{\"1\":{\"442\":1}}],[\"jq提示\",{\"1\":{\"321\":1}}],[\"jquery\",{\"1\":{\"253\":1,\"321\":1}}],[\"just\",{\"1\":{\"564\":1}}],[\"julianhuang\",{\"1\":{\"536\":1}}],[\"jupyter\",{\"1\":{\"253\":1}}],[\"jumper\",{\"1\":{\"243\":1}}],[\"jpegdevice\",{\"1\":{\"684\":1}}],[\"jpeg\",{\"1\":{\"322\":1,\"687\":1}}],[\"jpg\",{\"1\":{\"207\":1,\"616\":1,\"617\":2,\"684\":1,\"687\":1,\"688\":2,\"734\":2,\"745\":2,\"1036\":1}}],[\"jproperty\",{\"1\":{\"151\":7}}],[\"jsdelivr\",{\"1\":{\"953\":2}}],[\"js开发\",{\"1\":{\"716\":1}}],[\"jssdk\",{\"1\":{\"710\":1}}],[\"js\",{\"1\":{\"243\":3,\"322\":2,\"330\":1,\"801\":1,\"1019\":3}}],[\"js等等\",{\"1\":{\"207\":1}}],[\"jsp\",{\"1\":{\"207\":1}}],[\"js表中\",{\"1\":{\"205\":1}}],[\"json中存在列表\",{\"1\":{\"746\":1}}],[\"json中读取配置\",{\"1\":{\"457\":1}}],[\"json类型的接口以及含有上传文件的接口\",{\"1\":{\"726\":1}}],[\"jsondata\",{\"1\":{\"609\":2,\"622\":2,\"632\":2,\"739\":4,\"746\":6}}],[\"json格式\",{\"0\":{\"607\":1,\"620\":1,\"630\":1}}],[\"json的组件将不可用\",{\"1\":{\"600\":1}}],[\"json配置文件的配置\",{\"1\":{\"581\":1}}],[\"jsonpatchdocument<userdto>\",{\"1\":{\"630\":1}}],[\"jsonpatch\",{\"1\":{\"629\":1,\"630\":2}}],[\"jsonpath\",{\"1\":{\"343\":1}}],[\"jsonpropertyname\",{\"1\":{\"573\":3}}],[\"json文件将程序集和本机库解析为他们的相对路径\",{\"1\":{\"577\":1}}],[\"json文件\",{\"1\":{\"552\":1,\"575\":1}}],[\"json终结点\",{\"1\":{\"482\":1}}],[\"jsonwriter\",{\"1\":{\"478\":1}}],[\"jsonserializer\",{\"1\":{\"478\":2}}],[\"jsonserializersettings\",{\"1\":{\"404\":1,\"585\":2}}],[\"jsonreader\",{\"1\":{\"478\":1}}],[\"jsonresult\",{\"1\":{\"401\":4,\"404\":2,\"405\":2,\"413\":1}}],[\"json做解析json的\",{\"1\":{\"478\":1}}],[\"json写入\",{\"1\":{\"343\":1}}],[\"json和jsonb从用户操作角度来说是没有区别的\",{\"1\":{\"343\":1}}],[\"jsonb写入慢\",{\"1\":{\"343\":1}}],[\"jsonb\",{\"0\":{\"343\":1},\"1\":{\"342\":4,\"343\":6}}],[\"jsonconverterlong内容如下\",{\"1\":{\"478\":1}}],[\"jsonconverterlong\",{\"1\":{\"478\":2}}],[\"jsonconverter\",{\"1\":{\"478\":2}}],[\"jsonconvert\",{\"1\":{\"128\":2,\"394\":1,\"404\":1,\"511\":1,\"512\":1,\"513\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":1,\"523\":1,\"524\":2,\"585\":1,\"587\":1,\"591\":1,\"600\":1,\"609\":1,\"622\":2,\"632\":1,\"691\":1,\"1053\":1,\"1058\":1}}],[\"json\",{\"0\":{\"569\":1},\"1\":{\"3\":2,\"151\":4,\"203\":1,\"213\":1,\"215\":3,\"243\":1,\"343\":2,\"364\":1,\"389\":1,\"398\":1,\"404\":1,\"446\":3,\"463\":1,\"474\":2,\"482\":1,\"495\":1,\"499\":1,\"501\":1,\"569\":4,\"574\":3,\"575\":2,\"576\":1,\"582\":3,\"583\":2,\"600\":2,\"603\":3,\"608\":4,\"609\":1,\"610\":1,\"612\":1,\"621\":4,\"622\":1,\"626\":1,\"631\":2,\"632\":1,\"661\":1,\"666\":1,\"691\":1,\"734\":2,\"739\":4,\"746\":3,\"850\":6,\"862\":1,\"892\":1,\"970\":2,\"1036\":2,\"1119\":1,\"1125\":2,\"1126\":2}}],[\"ji\",{\"1\":{\"1123\":1}}],[\"jingyan\",{\"1\":{\"594\":1}}],[\"jit\",{\"1\":{\"203\":2}}],[\"jit是如何工作的\",{\"1\":{\"203\":1}}],[\"jianshu\",{\"1\":{\"20\":1,\"709\":1}}],[\"jammy\",{\"1\":{\"1114\":1}}],[\"jasonwilder\",{\"1\":{\"874\":1}}],[\"jason\",{\"1\":{\"873\":1}}],[\"jasondun\",{\"1\":{\"467\":2}}],[\"jar\",{\"1\":{\"564\":2}}],[\"jack\",{\"1\":{\"381\":1,\"386\":1}}],[\"jacktian\",{\"1\":{\"9\":1}}],[\"jakesgordon\",{\"1\":{\"243\":1}}],[\"jayfong\",{\"1\":{\"217\":2,\"218\":2}}],[\"javase\",{\"1\":{\"1134\":2}}],[\"javascript基础语法\",{\"1\":{\"330\":1}}],[\"javascript\",{\"1\":{\"207\":1,\"243\":4,\"739\":1}}],[\"java里单元指一个类\",{\"1\":{\"593\":1}}],[\"java反射机制\",{\"1\":{\"442\":1}}],[\"java的反射\",{\"1\":{\"442\":1}}],[\"javaguide\",{\"1\":{\"341\":1}}],[\"java\",{\"1\":{\"179\":1,\"185\":2,\"243\":1,\"439\":1,\"440\":3,\"441\":1,\"442\":1,\"443\":1,\"682\":1,\"798\":1,\"1037\":2,\"1134\":2,\"1135\":2,\"1136\":9}}],[\"john\",{\"1\":{\"1063\":1,\"1064\":1,\"1065\":1}}],[\"jobs\",{\"1\":{\"1070\":1}}],[\"job负责批量处理短暂的一次性任务\",{\"1\":{\"914\":1}}],[\"jobject\",{\"1\":{\"151\":4,\"402\":8,\"418\":4}}],[\"joydip\",{\"1\":{\"583\":2}}],[\"join\",{\"0\":{\"518\":1},\"1\":{\"18\":1,\"518\":4,\"519\":1,\"520\":3,\"522\":3,\"574\":2,\"583\":2,\"693\":1}}],[\"fww5t\",{\"1\":{\"1110\":1}}],[\"fq\",{\"1\":{\"1110\":1}}],[\"fc5275\",{\"1\":{\"1036\":1}}],[\"f3aca74fa2177c06eff3c1f8feb1b4f26bea880b文件大小\",{\"1\":{\"1035\":1}}],[\"f9\",{\"1\":{\"965\":1,\"974\":1}}],[\"f4\",{\"1\":{\"965\":1}}],[\"f12\",{\"1\":{\"965\":1}}],[\"f11\",{\"1\":{\"965\":1,\"974\":1}}],[\"f10\",{\"1\":{\"965\":1,\"974\":2}}],[\"f5\",{\"1\":{\"965\":1,\"974\":2}}],[\"f53c9f791e26\",{\"1\":{\"211\":1,\"213\":1,\"1117\":1,\"1119\":1}}],[\"fmt\",{\"1\":{\"871\":2}}],[\"f6808a3e4d9e\",{\"1\":{\"866\":1}}],[\"f选项\",{\"1\":{\"811\":1}}],[\"ftqq\",{\"1\":{\"696\":1,\"698\":1}}],[\"ftp协议\",{\"1\":{\"308\":1}}],[\"ftp\",{\"1\":{\"152\":1,\"322\":1}}],[\"fdsly\",{\"1\":{\"577\":1}}],[\"fg\",{\"1\":{\"564\":1}}],[\"fff\",{\"1\":{\"453\":1,\"462\":1}}],[\"fjc0k\",{\"1\":{\"216\":1}}],[\"fpc\",{\"1\":{\"209\":1}}],[\"feb\",{\"1\":{\"1034\":12}}],[\"fehelper\",{\"0\":{\"1006\":1}}],[\"fea29920\",{\"1\":{\"968\":1}}],[\"feature\",{\"1\":{\"23\":1,\"26\":6}}],[\"fetch+meger\",{\"1\":{\"798\":1}}],[\"fetch阶段\",{\"1\":{\"204\":1}}],[\"fetch\",{\"1\":{\"204\":1,\"772\":1,\"788\":1,\"798\":1}}],[\"fsmonitor\",{\"1\":{\"777\":1}}],[\"fs\",{\"1\":{\"684\":4,\"693\":4}}],[\"fservice\",{\"1\":{\"660\":2}}],[\"fsync\",{\"1\":{\"204\":1}}],[\"fst\",{\"1\":{\"204\":3}}],[\"family\",{\"1\":{\"1013\":1}}],[\"failed\",{\"1\":{\"949\":1}}],[\"fail\",{\"1\":{\"599\":1}}],[\"failtest\",{\"1\":{\"599\":1}}],[\"failures\",{\"1\":{\"564\":1}}],[\"failure\",{\"1\":{\"549\":1}}],[\"failover\",{\"1\":{\"205\":1}}],[\"fatkun图片批量下载\",{\"0\":{\"998\":1}}],[\"fatal\",{\"1\":{\"447\":1,\"463\":1}}],[\"fatedier\",{\"1\":{\"242\":1}}],[\"fastreport\",{\"0\":{\"693\":1},\"1\":{\"689\":1,\"693\":2}}],[\"fastreport浏览器直接打印无须预览\",{\"0\":{\"689\":1,\"690\":1},\"1\":{\"691\":1,\"692\":1}}],[\"fastgit\",{\"1\":{\"335\":1,\"968\":1}}],[\"fastgithub\",{\"1\":{\"332\":1}}],[\"fastly\",{\"1\":{\"333\":1}}],[\"fasttunnel\",{\"1\":{\"239\":2,\"241\":1}}],[\"fasttunnel是用\",{\"1\":{\"239\":1}}],[\"fact\",{\"1\":{\"586\":1,\"587\":1,\"588\":4,\"591\":2,\"598\":1,\"599\":2}}],[\"factorybean\",{\"1\":{\"443\":2}}],[\"factorypatterndemo\",{\"1\":{\"442\":2}}],[\"factory\",{\"1\":{\"202\":1,\"367\":2,\"438\":2,\"443\":1,\"445\":1,\"564\":1}}],[\"facebook上的音视频下载\",{\"1\":{\"307\":1}}],[\"false则表示不满足约束\",{\"1\":{\"164\":1}}],[\"false和true\",{\"1\":{\"77\":1}}],[\"false\",{\"1\":{\"42\":2,\"46\":1,\"81\":2,\"129\":1,\"131\":1,\"151\":2,\"164\":2,\"215\":2,\"364\":1,\"404\":2,\"413\":1,\"447\":1,\"475\":1,\"501\":12,\"503\":1,\"511\":3,\"512\":1,\"513\":1,\"518\":1,\"525\":1,\"564\":7,\"582\":3,\"583\":1,\"591\":2,\"604\":2,\"609\":2,\"613\":2,\"616\":2,\"617\":1,\"622\":2,\"627\":2,\"632\":2,\"650\":1,\"674\":1,\"675\":1,\"680\":1,\"691\":5,\"693\":2,\"694\":1,\"710\":1,\"711\":1,\"712\":1,\"777\":1,\"788\":1,\"1036\":6,\"1047\":1,\"1061\":2}}],[\"frx\",{\"1\":{\"693\":1}}],[\"frxfile\",{\"1\":{\"691\":2,\"693\":1}}],[\"friendlyname\",{\"1\":{\"494\":1,\"692\":3}}],[\"freesql\",{\"1\":{\"529\":1}}],[\"freesky\",{\"1\":{\"309\":1}}],[\"free\",{\"1\":{\"243\":1,\"769\":1}}],[\"frp\",{\"1\":{\"242\":2}}],[\"framewoek也可以是net\",{\"1\":{\"141\":1}}],[\"framewoek和net\",{\"1\":{\"141\":1}}],[\"framework4\",{\"1\":{\"1008\":1}}],[\"framework源码\",{\"1\":{\"443\":1}}],[\"framework中我们可以通过cachedependency来控制\",{\"1\":{\"374\":1}}],[\"framework从业者转到net\",{\"1\":{\"140\":1}}],[\"framework有很多共同的特性\",{\"1\":{\"140\":1}}],[\"framework\",{\"0\":{\"139\":1},\"1\":{\"139\":2,\"253\":1,\"570\":1,\"597\":7,\"1008\":1,\"1024\":1,\"1127\":6}}],[\"from=publish\",{\"1\":{\"1070\":1}}],[\"from=\",{\"1\":{\"777\":1}}],[\"from=noscript\",{\"1\":{\"259\":1}}],[\"fromfile\",{\"1\":{\"688\":2}}],[\"fromform\",{\"1\":{\"468\":2,\"471\":1,\"611\":2,\"615\":2}}],[\"fromdatetime\",{\"1\":{\"672\":1}}],[\"fromsqlinterpolated\",{\"1\":{\"513\":3}}],[\"fromsqlinterpolated参数化\",{\"0\":{\"513\":1}}],[\"fromsqlraw参数化\",{\"0\":{\"512\":1}}],[\"fromsqlraw\",{\"1\":{\"508\":2,\"509\":2,\"511\":1,\"512\":2,\"513\":2}}],[\"fromseconds\",{\"1\":{\"369\":1,\"372\":2,\"373\":3,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"424\":1,\"427\":1,\"580\":1,\"675\":1}}],[\"fromservices\",{\"1\":{\"349\":1,\"630\":1}}],[\"fromservices注入\",{\"0\":{\"349\":1}}],[\"fromheader\",{\"1\":{\"468\":2}}],[\"frombody\",{\"1\":{\"468\":2,\"476\":1,\"552\":1,\"607\":1}}],[\"fromroute\",{\"1\":{\"468\":2,\"630\":1}}],[\"fromresult\",{\"1\":{\"151\":3,\"167\":1,\"672\":1}}],[\"fromquery\",{\"1\":{\"468\":2}}],[\"fromlogcontext\",{\"1\":{\"462\":1,\"463\":1}}],[\"from\",{\"0\":{\"820\":1},\"1\":{\"3\":1,\"36\":1,\"120\":2,\"151\":1,\"204\":1,\"206\":2,\"243\":1,\"322\":1,\"342\":2,\"343\":2,\"503\":1,\"509\":1,\"511\":2,\"512\":3,\"513\":2,\"518\":3,\"519\":3,\"520\":3,\"522\":5,\"524\":3,\"525\":2,\"785\":1,\"806\":1,\"816\":2,\"820\":3,\"834\":1,\"837\":1,\"862\":1,\"863\":1,\"865\":2,\"866\":1,\"867\":1,\"869\":1,\"870\":1,\"871\":1,\"873\":1,\"874\":1,\"949\":1,\"986\":1,\"1036\":1,\"1047\":1,\"1050\":1,\"1053\":1,\"1055\":1,\"1056\":1,\"1058\":1,\"1060\":2,\"1070\":4}}],[\"full\",{\"1\":{\"1074\":2}}],[\"fullname\",{\"1\":{\"93\":1,\"97\":1,\"98\":1,\"660\":1}}],[\"fulcio\",{\"1\":{\"1070\":1}}],[\"func<idbconnection\",{\"1\":{\"1047\":2}}],[\"func<user\",{\"1\":{\"506\":1}}],[\"func\",{\"1\":{\"871\":1,\"1047\":6}}],[\"function\",{\"1\":{\"603\":3,\"608\":2,\"612\":2,\"616\":3,\"621\":2,\"626\":2,\"631\":2,\"739\":7}}],[\"functions\",{\"1\":{\"343\":1,\"1055\":2}}],[\"fundamentals\",{\"1\":{\"135\":1,\"148\":1,\"956\":1}}],[\"f=1\",{\"1\":{\"76\":1}}],[\"flight\",{\"1\":{\"801\":1}}],[\"floder1\",{\"1\":{\"782\":3}}],[\"float\",{\"1\":{\"76\":2,\"469\":1,\"688\":4}}],[\"flg\",{\"1\":{\"528\":1}}],[\"flutter\",{\"1\":{\"253\":1}}],[\"flush\",{\"1\":{\"204\":4}}],[\"flanneld解包并发往docker0\",{\"1\":{\"928\":1}}],[\"flanneld维护了一份全局node的网络表\",{\"1\":{\"928\":1}}],[\"flannel的用户态进程flanneld会为每个node节点创建一个flannel\",{\"1\":{\"928\":1}}],[\"flannel的早期版本\",{\"1\":{\"928\":1}}],[\"flannel最新版本也开始默认基于vxlan实现overlay网络\",{\"1\":{\"928\":1}}],[\"flannel\",{\"1\":{\"925\":4,\"928\":1}}],[\"flask\",{\"1\":{\"253\":1}}],[\"flag\",{\"1\":{\"131\":1,\"366\":1}}],[\"flag3\",{\"1\":{\"131\":1}}],[\"flag2\",{\"1\":{\"131\":1}}],[\"flag2=dog\",{\"1\":{\"130\":1}}],[\"flag1\",{\"1\":{\"130\":1,\"131\":1}}],[\"flags\",{\"0\":{\"43\":1},\"1\":{\"43\":2,\"400\":1,\"925\":1}}],[\"flattenhierarchy\",{\"1\":{\"119\":1}}],[\"focal\",{\"1\":{\"1114\":1}}],[\"focused\",{\"1\":{\"1036\":1}}],[\"fontface\",{\"1\":{\"1036\":1}}],[\"found或no\",{\"1\":{\"986\":1}}],[\"foo\",{\"1\":{\"863\":4,\"931\":3}}],[\"folder\",{\"1\":{\"736\":1}}],[\"following\",{\"1\":{\"211\":1,\"777\":1,\"1117\":1}}],[\"follower\",{\"1\":{\"134\":2}}],[\"fowler就提出了\",{\"1\":{\"436\":1}}],[\"fowler\",{\"1\":{\"210\":1}}],[\"foreground\",{\"1\":{\"1036\":1}}],[\"foreach\",{\"1\":{\"98\":1,\"118\":1,\"120\":2,\"123\":2,\"124\":3,\"125\":3,\"128\":1,\"167\":1,\"215\":1,\"394\":1,\"477\":2,\"483\":1,\"494\":1,\"495\":1,\"497\":2,\"499\":1,\"574\":2,\"576\":1,\"600\":1,\"656\":1,\"677\":1,\"678\":1,\"680\":1,\"681\":1,\"691\":1}}],[\"force\",{\"1\":{\"1008\":1,\"1078\":1,\"1079\":1,\"1109\":1}}],[\"forward\",{\"1\":{\"1061\":4}}],[\"forward=1\",{\"1\":{\"893\":1}}],[\"forwarding\",{\"0\":{\"893\":1}}],[\"forname0\",{\"1\":{\"442\":1}}],[\"forname去看看吧\",{\"1\":{\"442\":1}}],[\"forname\",{\"1\":{\"442\":2}}],[\"forks\",{\"1\":{\"331\":2}}],[\"fork数量搜索\",{\"1\":{\"331\":1}}],[\"fork的过程其实就是将某个仓库复制到自己的账户下\",{\"1\":{\"13\":1}}],[\"fork的仓库和原始的仓库是两个不同的仓库\",{\"1\":{\"13\":1}}],[\"formwindowstate\",{\"1\":{\"691\":2}}],[\"formclosingeventargs\",{\"1\":{\"691\":1}}],[\"formclosing\",{\"1\":{\"691\":1}}],[\"form2中通过依赖注入了iorderservice在load事件里面调用iorderservice的获取名称方法\",{\"1\":{\"659\":1}}],[\"form2\",{\"1\":{\"658\":1,\"660\":5}}],[\"form1\",{\"1\":{\"658\":1,\"660\":2}}],[\"formdata\",{\"1\":{\"616\":6,\"617\":5}}],[\"formurlencodedcontent\",{\"1\":{\"613\":1}}],[\"form\",{\"0\":{\"567\":1,\"568\":1,\"611\":1,\"615\":1},\"1\":{\"569\":1,\"614\":1,\"616\":1,\"617\":2,\"660\":3,\"691\":1,\"732\":1,\"733\":2,\"734\":4}}],[\"formstartposition\",{\"1\":{\"691\":1}}],[\"forms\",{\"1\":{\"467\":2,\"691\":1}}],[\"form=behptb\",{\"1\":{\"258\":1}}],[\"formats\",{\"1\":{\"683\":1}}],[\"formatting\",{\"1\":{\"585\":2}}],[\"formatter\",{\"1\":{\"133\":1}}],[\"format语法\",{\"1\":{\"512\":1}}],[\"format\",{\"1\":{\"511\":1,\"656\":1}}],[\"format=yyyy\",{\"1\":{\"453\":2}}],[\"format=tostring\",{\"1\":{\"453\":2}}],[\"formatunabletofindservices\",{\"1\":{\"166\":1}}],[\"for\",{\"1\":{\"125\":2,\"167\":1,\"253\":1,\"321\":3,\"442\":1,\"459\":1,\"564\":7,\"575\":1,\"660\":1,\"675\":1,\"684\":1,\"687\":1,\"688\":1,\"693\":1,\"768\":1,\"774\":2,\"777\":1,\"873\":2,\"874\":4,\"876\":1,\"965\":1,\"968\":2,\"985\":1,\"1007\":2,\"1061\":1,\"1109\":1}}],[\"fox\",{\"1\":{\"66\":2}}],[\"fiu\",{\"1\":{\"1080\":1}}],[\"fifo\",{\"1\":{\"1074\":1}}],[\"fixmixedtabs\",{\"1\":{\"968\":1}}],[\"fixme\",{\"1\":{\"949\":1}}],[\"fix\",{\"1\":{\"968\":1}}],[\"fixformat代码格式化\",{\"1\":{\"321\":1}}],[\"figure\",{\"1\":{\"949\":1}}],[\"fi\",{\"1\":{\"899\":1}}],[\"fiddlehelper\",{\"1\":{\"1063\":1,\"1065\":1}}],[\"fiddler允许我们修改请求\",{\"1\":{\"175\":1}}],[\"fiddler可以避免在客户端上重新运行方案以再次发送相同请求的麻烦\",{\"1\":{\"175\":1}}],[\"fiddler具有两个有用功能\",{\"1\":{\"175\":1}}],[\"fiddler是progress\",{\"1\":{\"175\":1}}],[\"fiddler\",{\"0\":{\"175\":1}}],[\"fido\",{\"0\":{\"270\":1},\"1\":{\"270\":1}}],[\"final\",{\"1\":{\"1070\":1}}],[\"finally\",{\"1\":{\"454\":1,\"463\":1,\"1045\":1}}],[\"finb\",{\"1\":{\"708\":1}}],[\"finished\",{\"1\":{\"442\":1}}],[\"finite\",{\"1\":{\"167\":1,\"204\":1}}],[\"findasync\",{\"1\":{\"503\":3}}],[\"findfirst\",{\"1\":{\"361\":1}}],[\"findmaster\",{\"1\":{\"204\":1}}],[\"find<t>\",{\"1\":{\"120\":1}}],[\"find\",{\"1\":{\"120\":1,\"363\":1,\"602\":1,\"611\":1,\"615\":1,\"620\":1,\"625\":1,\"630\":2,\"777\":1,\"778\":2,\"1008\":1,\"1036\":1}}],[\"findtypes\",{\"1\":{\"118\":1}}],[\"fir\",{\"1\":{\"1078\":1}}],[\"firefox\",{\"1\":{\"690\":1}}],[\"firewalld\",{\"1\":{\"542\":1,\"911\":4,\"1108\":2,\"1109\":6}}],[\"firewall\",{\"1\":{\"542\":1,\"911\":4,\"1108\":5,\"1109\":5}}],[\"firestore\",{\"1\":{\"152\":1}}],[\"firstcontroller\",{\"1\":{\"407\":2}}],[\"firstordefault\",{\"1\":{\"364\":3,\"401\":1,\"418\":1,\"503\":5,\"506\":1,\"574\":1,\"607\":1,\"615\":1,\"620\":1,\"625\":1,\"656\":1,\"691\":3,\"1047\":1,\"1061\":2}}],[\"firstordefaultasync\",{\"1\":{\"363\":1,\"501\":1,\"503\":6,\"528\":2}}],[\"first\",{\"1\":{\"21\":1,\"40\":1,\"401\":1,\"497\":1,\"594\":1,\"694\":1,\"788\":1}}],[\"firstname\",{\"1\":{\"17\":2,\"583\":2}}],[\"filter>\",{\"1\":{\"447\":1}}],[\"filterinjectattribute\",{\"1\":{\"409\":2}}],[\"filters\",{\"1\":{\"408\":4,\"410\":1,\"413\":1,\"416\":1,\"418\":1,\"421\":1,\"424\":1,\"477\":1}}],[\"filter很类似\",{\"1\":{\"403\":1}}],[\"filter指令\",{\"1\":{\"207\":1}}],[\"filter指令的作用是什么\",{\"1\":{\"207\":1}}],[\"filter\",{\"0\":{\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"1153\":1},\"1\":{\"204\":1,\"363\":3,\"403\":1,\"447\":1,\"810\":1}}],[\"filtertypename\",{\"1\":{\"118\":1}}],[\"filediffer\",{\"1\":{\"968\":2}}],[\"fileheader\",{\"1\":{\"956\":1}}],[\"file3\",{\"1\":{\"754\":1,\"782\":2}}],[\"file2\",{\"1\":{\"754\":1,\"780\":3,\"782\":4}}],[\"file1\",{\"1\":{\"754\":1,\"780\":6,\"787\":1}}],[\"file中要选择file类型\",{\"1\":{\"734\":1}}],[\"fileaccess\",{\"1\":{\"693\":1}}],[\"fileoperation\",{\"1\":{\"687\":1}}],[\"filemode\",{\"1\":{\"684\":1,\"693\":1,\"777\":1,\"788\":1}}],[\"file>\",{\"1\":{\"666\":1}}],[\"fileupload\",{\"1\":{\"580\":2}}],[\"file=a1\",{\"1\":{\"734\":2}}],[\"file=~\",{\"1\":{\"564\":1}}],[\"file=\",{\"1\":{\"564\":1}}],[\"filestream\",{\"1\":{\"684\":2,\"693\":2}}],[\"files\",{\"1\":{\"546\":2,\"564\":5,\"616\":3,\"754\":1,\"777\":1,\"780\":7,\"782\":2,\"876\":1,\"970\":1,\"1019\":2}}],[\"filesystems\",{\"1\":{\"863\":1}}],[\"filesystem\",{\"1\":{\"204\":3}}],[\"fileprovider\",{\"1\":{\"580\":1}}],[\"fileproviders\",{\"1\":{\"375\":2}}],[\"filepathoutput\",{\"1\":{\"684\":3}}],[\"filepath\",{\"1\":{\"471\":3}}],[\"fileinfo\",{\"1\":{\"375\":5}}],[\"file\",{\"1\":{\"211\":2,\"375\":1,\"447\":1,\"453\":3,\"457\":1,\"461\":1,\"463\":1,\"471\":4,\"483\":2,\"564\":4,\"574\":3,\"577\":1,\"616\":1,\"617\":1,\"683\":1,\"684\":1,\"687\":1,\"688\":1,\"754\":1,\"769\":1,\"777\":1,\"778\":3,\"779\":2,\"780\":1,\"781\":4,\"782\":5,\"784\":1,\"785\":4,\"787\":2,\"852\":2,\"863\":3,\"914\":1,\"956\":2,\"1070\":2,\"1081\":1,\"1117\":2}}],[\"file来配置工程\",{\"1\":{\"203\":1}}],[\"filenames\",{\"1\":{\"564\":1}}],[\"filename=\",{\"1\":{\"453\":1}}],[\"filename\",{\"1\":{\"32\":1,\"375\":3,\"471\":1,\"615\":1,\"617\":1,\"672\":1,\"673\":1}}],[\"fieldname\",{\"1\":{\"525\":2}}],[\"fieldtype\",{\"1\":{\"114\":1}}],[\"field\",{\"1\":{\"114\":6,\"115\":4,\"203\":1,\"204\":1,\"206\":3,\"400\":1,\"477\":4,\"518\":2,\"525\":3}}],[\"fields\",{\"1\":{\"99\":2,\"115\":1,\"474\":1}}],[\"fieldinfo1\",{\"1\":{\"99\":2}}],[\"fieldinfo\",{\"0\":{\"113\":1},\"1\":{\"88\":2,\"91\":1,\"97\":2,\"99\":2,\"115\":3,\"203\":1}}],[\"f\",{\"1\":{\"8\":2,\"139\":1,\"140\":1,\"206\":2,\"554\":1,\"568\":2,\"809\":1,\"810\":2,\"811\":1,\"835\":1,\"870\":2,\"887\":1,\"899\":1,\"914\":1,\"945\":1,\"1037\":3,\"1074\":2,\"1078\":1,\"1079\":1,\"1080\":1,\"1082\":1,\"1094\":1}}],[\"nssm守护nginx\",{\"0\":{\"1023\":1}}],[\"nssm\",{\"1\":{\"1016\":1,\"1018\":1,\"1020\":4,\"1021\":2}}],[\"nxbbb\",{\"1\":{\"973\":1}}],[\"nxhk6\",{\"1\":{\"973\":1}}],[\"nywvh\",{\"1\":{\"973\":1}}],[\"njvyc\",{\"1\":{\"973\":1}}],[\"nhibernate\",{\"1\":{\"968\":1}}],[\"nfs\",{\"1\":{\"914\":2}}],[\"nigelpoulton\",{\"1\":{\"945\":1}}],[\"night\",{\"1\":{\"739\":1}}],[\"nick\",{\"1\":{\"671\":1}}],[\"nickname\",{\"1\":{\"368\":2,\"672\":1}}],[\"n你的openid\",{\"1\":{\"711\":1}}],[\"nrt\",{\"1\":{\"501\":1}}],[\"nlogbuilder\",{\"1\":{\"454\":1}}],[\"nlogdemo\",{\"1\":{\"454\":1}}],[\"nlog>\",{\"1\":{\"453\":1}}],[\"nlog是适用于各种\",{\"1\":{\"451\":1}}],[\"nlog\",{\"0\":{\"451\":1},\"1\":{\"448\":1,\"452\":2,\"453\":2,\"454\":4,\"456\":3}}],[\"nmsg\",{\"1\":{\"447\":1}}],[\"ngrok\",{\"1\":{\"242\":1}}],[\"ngx\",{\"1\":{\"207\":1,\"541\":1}}],[\"nginx=nginx\",{\"1\":{\"914\":1}}],[\"nginxwebui\",{\"1\":{\"853\":5}}],[\"nginx等\",{\"1\":{\"210\":1}}],[\"nginx\",{\"1\":{\"207\":1,\"541\":7,\"543\":3,\"839\":1,\"842\":1,\"914\":7,\"918\":3,\"923\":1,\"931\":3,\"949\":2,\"1019\":2}}],[\"nginx服务器上的master和worker进程分别是什么\",{\"1\":{\"207\":1}}],[\"nginx服务器的最佳用法是在网络上部署动态http内容\",{\"1\":{\"207\":1}}],[\"nginx使用反应器模式\",{\"1\":{\"207\":1}}],[\"nginx如何处理http请求\",{\"1\":{\"207\":1}}],[\"nginx是如何实现高并发的\",{\"1\":{\"207\":1}}],[\"nginx面试题\",{\"0\":{\"207\":1}}],[\"nbsp\",{\"1\":{\"777\":6,\"788\":26}}],[\"nb\",{\"1\":{\"191\":1}}],[\"npgsql\",{\"1\":{\"152\":1}}],[\"navicat\",{\"1\":{\"1014\":1}}],[\"nat\",{\"1\":{\"935\":1,\"1110\":14}}],[\"native\",{\"1\":{\"585\":1,\"670\":1,\"673\":1}}],[\"nativename\",{\"1\":{\"124\":2,\"125\":1}}],[\"natapp\",{\"1\":{\"242\":1}}],[\"nagios\",{\"1\":{\"210\":1}}],[\"nack\",{\"1\":{\"208\":1}}],[\"name2\",{\"1\":{\"1061\":1}}],[\"name1\",{\"1\":{\"1061\":1}}],[\"name被分发到后端服务s2\",{\"1\":{\"931\":1}}],[\"name或\",{\"1\":{\"843\":1}}],[\"name是\",{\"1\":{\"692\":1}}],[\"name的表达式必须包含\",{\"1\":{\"564\":3}}],[\"nameidentifier\",{\"1\":{\"358\":1,\"361\":1,\"364\":2,\"401\":2}}],[\"nameof\",{\"1\":{\"166\":2,\"167\":17,\"168\":3,\"472\":1,\"475\":3,\"660\":1,\"1061\":10}}],[\"names=1\",{\"1\":{\"857\":1}}],[\"names\",{\"1\":{\"321\":1}}],[\"namespace的容器\",{\"1\":{\"914\":1}}],[\"namespaces\",{\"1\":{\"656\":2,\"914\":1}}],[\"namespaceversionroutingconvention\",{\"1\":{\"656\":2}}],[\"namespace\",{\"1\":{\"94\":4,\"97\":1,\"98\":1,\"378\":1,\"454\":1,\"488\":3,\"639\":2,\"645\":2,\"651\":2,\"656\":1,\"661\":1,\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1,\"691\":1,\"692\":1,\"839\":2,\"914\":1,\"918\":1,\"923\":1}}],[\"names2\",{\"1\":{\"81\":3}}],[\"names1\",{\"1\":{\"81\":5}}],[\"name=gitea\",{\"1\":{\"791\":2,\"855\":2}}],[\"name=3\",{\"1\":{\"674\":1,\"676\":1}}],[\"name=2\",{\"1\":{\"671\":1,\"679\":1}}],[\"name=1\",{\"1\":{\"669\":1,\"671\":1}}],[\"name=jjj\",{\"1\":{\"159\":1}}],[\"name=\",{\"1\":{\"46\":1,\"125\":2,\"151\":2,\"402\":2,\"405\":2,\"427\":3,\"447\":6,\"453\":11,\"472\":1,\"475\":1,\"478\":9,\"483\":2,\"501\":6,\"528\":1,\"564\":2,\"573\":2,\"574\":1,\"577\":2,\"580\":2,\"583\":3,\"600\":1,\"660\":4,\"672\":2,\"675\":3,\"677\":2,\"678\":1,\"680\":3,\"681\":1,\"691\":4,\"811\":1,\"812\":1,\"815\":2,\"816\":2,\"870\":1,\"1047\":17,\"1061\":2}}],[\"name\",{\"1\":{\"3\":2,\"8\":1,\"17\":2,\"36\":2,\"37\":4,\"46\":8,\"47\":1,\"53\":1,\"59\":4,\"64\":3,\"67\":1,\"69\":4,\"70\":4,\"72\":5,\"73\":3,\"79\":1,\"81\":1,\"97\":1,\"98\":2,\"99\":4,\"104\":1,\"111\":1,\"114\":1,\"115\":4,\"118\":2,\"119\":2,\"120\":6,\"125\":1,\"127\":2,\"128\":6,\"130\":1,\"131\":4,\"151\":2,\"153\":5,\"157\":3,\"159\":2,\"163\":1,\"211\":2,\"215\":2,\"217\":2,\"218\":1,\"243\":1,\"331\":4,\"343\":4,\"358\":1,\"361\":2,\"364\":5,\"368\":2,\"369\":1,\"375\":2,\"380\":2,\"381\":2,\"385\":2,\"386\":2,\"403\":8,\"427\":6,\"443\":11,\"462\":2,\"468\":1,\"470\":2,\"474\":3,\"475\":3,\"483\":1,\"484\":2,\"497\":2,\"501\":6,\"503\":4,\"522\":1,\"554\":2,\"564\":7,\"573\":3,\"574\":4,\"575\":1,\"576\":1,\"600\":2,\"607\":1,\"608\":1,\"609\":1,\"611\":3,\"612\":1,\"613\":1,\"617\":3,\"620\":2,\"621\":1,\"622\":1,\"631\":1,\"632\":1,\"661\":1,\"672\":1,\"675\":1,\"677\":7,\"680\":2,\"681\":6,\"692\":1,\"712\":3,\"739\":3,\"748\":2,\"777\":3,\"796\":1,\"802\":1,\"806\":2,\"817\":1,\"835\":2,\"839\":1,\"842\":1,\"853\":5,\"854\":3,\"856\":2,\"857\":1,\"858\":1,\"859\":2,\"870\":1,\"886\":1,\"899\":1,\"914\":2,\"918\":2,\"923\":1,\"930\":2,\"931\":6,\"941\":1,\"1019\":1,\"1036\":5,\"1047\":1,\"1053\":3,\"1061\":1,\"1070\":17,\"1117\":2}}],[\"n\",{\"1\":{\"109\":2,\"209\":2,\"447\":2,\"528\":1,\"691\":4,\"692\":1,\"711\":1,\"777\":1,\"778\":2,\"780\":4,\"781\":2,\"782\":2,\"811\":1,\"852\":1,\"925\":1,\"956\":2,\"1111\":2}}],[\"nupack\",{\"1\":{\"968\":2}}],[\"nupkg\",{\"1\":{\"213\":1,\"1119\":1}}],[\"nunit\",{\"0\":{\"597\":1},\"1\":{\"595\":1,\"597\":12,\"598\":1,\"599\":1}}],[\"nuget包\",{\"0\":{\"1124\":1}}],[\"nuget包自动升级\",{\"0\":{\"1121\":1}}],[\"nuget包管理\",{\"1\":{\"321\":1}}],[\"nuget地址\",{\"1\":{\"1038\":1}}],[\"nugetpackages\",{\"1\":{\"970\":1}}],[\"nuget下载的包就回慢慢的变多\",{\"1\":{\"970\":1}}],[\"nuget默认的全局包下载地址一般为\",{\"1\":{\"970\":1}}],[\"nuget\",{\"0\":{\"1189\":1},\"1\":{\"211\":4,\"212\":1,\"213\":1,\"321\":1,\"970\":5,\"1038\":1,\"1117\":4,\"1118\":1,\"1119\":1,\"1123\":1,\"1125\":2,\"1129\":1,\"1131\":1,\"1132\":2}}],[\"nullobjectmodelvalidator>\",{\"1\":{\"477\":1}}],[\"nullobjectmodelvalidator\",{\"1\":{\"477\":1}}],[\"nullable>\",{\"1\":{\"577\":1,\"1122\":1,\"1123\":1}}],[\"nullable\",{\"1\":{\"443\":2,\"522\":1}}],[\"null\",{\"1\":{\"105\":5,\"106\":1,\"109\":1,\"125\":2,\"130\":1,\"157\":12,\"166\":1,\"167\":3,\"168\":1,\"204\":1,\"215\":2,\"363\":2,\"373\":1,\"393\":1,\"402\":4,\"424\":1,\"441\":3,\"442\":1,\"472\":2,\"478\":5,\"497\":4,\"503\":5,\"520\":1,\"522\":2,\"523\":1,\"574\":1,\"577\":3,\"591\":2,\"598\":3,\"599\":1,\"604\":1,\"609\":1,\"611\":1,\"613\":1,\"615\":2,\"617\":1,\"620\":2,\"622\":1,\"625\":1,\"627\":1,\"630\":1,\"632\":1,\"656\":1,\"660\":1,\"672\":1,\"691\":7,\"711\":2,\"746\":1,\"1047\":3,\"1061\":4}}],[\"numprocs\",{\"1\":{\"564\":2}}],[\"numprocs=1\",{\"1\":{\"564\":4}}],[\"number=13012345678\",{\"1\":{\"728\":2}}],[\"number\",{\"1\":{\"204\":1,\"564\":2,\"1070\":4}}],[\"num3=0\",{\"1\":{\"129\":1}}],[\"num3\",{\"1\":{\"129\":1}}],[\"num2\",{\"1\":{\"129\":1}}],[\"num\",{\"1\":{\"61\":4,\"129\":2,\"564\":4}}],[\"noexecute和pod之间产生互斥的关系\",{\"1\":{\"914\":1}}],[\"noexecute\",{\"1\":{\"914\":1}}],[\"noeviction\",{\"1\":{\"209\":1}}],[\"noshedule\",{\"1\":{\"914\":1}}],[\"noschedule\",{\"1\":{\"914\":3}}],[\"nosuchbeandefinitionexception\",{\"1\":{\"443\":6}}],[\"nov\",{\"1\":{\"777\":4,\"779\":2}}],[\"nopermission\",{\"1\":{\"599\":1}}],[\"nocleanup=true\",{\"1\":{\"564\":1}}],[\"nodaemon=false\",{\"1\":{\"564\":1}}],[\"nodejs\",{\"1\":{\"951\":1,\"1019\":1}}],[\"nodeaffinity\",{\"1\":{\"914\":1}}],[\"nodeip\",{\"1\":{\"914\":2}}],[\"nodeport和loadbalancer是service的两个基本类型\",{\"1\":{\"929\":1}}],[\"nodeport为外部机器提供了访问集群内服务的方式\",{\"1\":{\"922\":1}}],[\"nodeports\",{\"1\":{\"914\":1}}],[\"nodeport\",{\"0\":{\"922\":1,\"930\":1},\"1\":{\"914\":3,\"918\":1,\"923\":2,\"929\":1,\"930\":3}}],[\"node1\",{\"1\":{\"914\":2}}],[\"node0\",{\"1\":{\"914\":2}}],[\"node被设置上污点之后就和pod之间存在了一种相斥的关系\",{\"1\":{\"914\":1}}],[\"node本质上不是kubernetes来创建的\",{\"1\":{\"914\":1}}],[\"node是pod真正运行的主机\",{\"1\":{\"914\":1}}],[\"node\",{\"1\":{\"208\":4,\"243\":1,\"879\":1,\"914\":8,\"919\":1,\"922\":2,\"925\":1,\"927\":1,\"944\":1,\"1019\":1}}],[\"node连接\",{\"1\":{\"204\":1}}],[\"node上segment\",{\"1\":{\"204\":1}}],[\"nodeselector\",{\"1\":{\"914\":1}}],[\"nodes\",{\"1\":{\"204\":5,\"661\":4}}],[\"nogroup\",{\"1\":{\"564\":1}}],[\"noarch\",{\"1\":{\"541\":2}}],[\"none模式\",{\"1\":{\"839\":1}}],[\"none\",{\"1\":{\"446\":1,\"564\":6,\"918\":1}}],[\"nonpublic\",{\"1\":{\"119\":1}}],[\"normal\",{\"1\":{\"373\":1}}],[\"normalization\",{\"1\":{\"205\":1}}],[\"noweb\",{\"1\":{\"964\":2}}],[\"now\",{\"1\":{\"358\":1,\"364\":2,\"372\":1,\"373\":1,\"378\":1,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"421\":1,\"475\":2,\"501\":2,\"607\":1,\"620\":1,\"625\":1,\"692\":1,\"693\":2,\"694\":1,\"1042\":1,\"1122\":2,\"1123\":1}}],[\"notation\",{\"1\":{\"1131\":1}}],[\"notacknowledged\",{\"1\":{\"208\":1}}],[\"notnull\",{\"1\":{\"587\":1}}],[\"notimplemented\",{\"1\":{\"599\":1}}],[\"notimplementedexception\",{\"1\":{\"215\":1}}],[\"notifyicon\",{\"1\":{\"691\":1}}],[\"notifyicon1\",{\"1\":{\"691\":1}}],[\"notif\",{\"1\":{\"564\":1}}],[\"notifications\",{\"0\":{\"1172\":1},\"1\":{\"564\":1}}],[\"notepad++\",{\"1\":{\"1014\":1}}],[\"notempty\",{\"1\":{\"591\":1}}],[\"note\",{\"1\":{\"435\":1,\"436\":1,\"442\":1,\"1061\":1}}],[\"not\",{\"0\":{\"1057\":1},\"1\":{\"394\":1,\"660\":1,\"768\":1,\"779\":1,\"986\":1}}],[\"notbefore\",{\"1\":{\"364\":1}}],[\"no\",{\"0\":{\"984\":1},\"1\":{\"26\":1,\"112\":3,\"120\":2,\"564\":1,\"574\":1,\"768\":1,\"769\":1,\"873\":1,\"874\":1,\"984\":1,\"1061\":1}}],[\"never\",{\"1\":{\"914\":2,\"1074\":1}}],[\"neverremove\",{\"1\":{\"373\":1}}],[\"nested\",{\"1\":{\"368\":3}}],[\"neat\",{\"0\":{\"308\":1},\"1\":{\"308\":1}}],[\"next\",{\"1\":{\"157\":6,\"167\":7,\"168\":6,\"403\":7,\"405\":2,\"418\":2,\"421\":2,\"1047\":1}}],[\"net20\",{\"1\":{\"1127\":1}}],[\"net35\",{\"1\":{\"1127\":1}}],[\"net46\",{\"1\":{\"1127\":1}}],[\"net461\",{\"1\":{\"1127\":1}}],[\"net462\",{\"1\":{\"1127\":1}}],[\"net47\",{\"1\":{\"1127\":1}}],[\"net471\",{\"1\":{\"1127\":1}}],[\"net472\",{\"1\":{\"1127\":1}}],[\"net48\",{\"1\":{\"1127\":1}}],[\"net451\",{\"1\":{\"1127\":1}}],[\"net452\",{\"1\":{\"1127\":1}}],[\"net45\",{\"1\":{\"1127\":2}}],[\"net45<\",{\"1\":{\"1126\":1}}],[\"net40\",{\"1\":{\"1126\":1,\"1127\":2}}],[\"netmask=255\",{\"1\":{\"1107\":1,\"1110\":1}}],[\"netstandard1\",{\"1\":{\"1127\":7}}],[\"netstandard\",{\"1\":{\"1127\":1}}],[\"netstandard2\",{\"1\":{\"1126\":2,\"1127\":4}}],[\"netstat\",{\"0\":{\"1099\":1},\"1\":{\"1099\":2}}],[\"netsample\",{\"1\":{\"1070\":3}}],[\"net目录\",{\"1\":{\"1070\":1}}],[\"net服务到阿里云服务器\",{\"1\":{\"1068\":1}}],[\"net数据操作读取一样快是一个用来执行sql并映射模型的轻量级orm框架\",{\"1\":{\"1048\":1}}],[\"net7\",{\"1\":{\"1037\":3}}],[\"net命令行来发布\",{\"1\":{\"1037\":1}}],[\"net实体框架\",{\"1\":{\"968\":1}}],[\"net实现无须预览直接打印功能\",{\"1\":{\"689\":1}}],[\"netweb\",{\"1\":{\"964\":3}}],[\"networks\",{\"1\":{\"1070\":2}}],[\"networksettings\",{\"1\":{\"870\":2}}],[\"network和utc\",{\"1\":{\"914\":1}}],[\"network\",{\"1\":{\"152\":2,\"262\":1,\"738\":1,\"843\":2,\"852\":1,\"893\":2,\"914\":1,\"944\":2,\"1107\":2,\"1110\":7}}],[\"net桌面开发\",{\"1\":{\"964\":1}}],[\"net开发\",{\"1\":{\"958\":1}}],[\"net=host\",{\"1\":{\"853\":1}}],[\"net指定网络模式\",{\"1\":{\"839\":1}}],[\"net来学习\",{\"1\":{\"693\":1}}],[\"net提供的demo程序就明白了\",{\"1\":{\"693\":1}}],[\"net没有过多的了解\",{\"1\":{\"693\":1}}],[\"net组件在\",{\"1\":{\"691\":1}}],[\"net是使用的来自网上的古老的\",{\"1\":{\"690\":1}}],[\"net做为解决打印需求的第三方组件\",{\"1\":{\"690\":1}}],[\"net相关dll文件\",{\"1\":{\"689\":1}}],[\"net封装的客户端软件\",{\"1\":{\"689\":1}}],[\"net支持情况\",{\"0\":{\"666\":1}}],[\"net构建的新的和现有的rest服务中\",{\"1\":{\"635\":1}}],[\"net应用程序\",{\"1\":{\"577\":1}}],[\"net类库的路径构建的\",{\"1\":{\"577\":1}}],[\"net类型为struct\",{\"1\":{\"77\":1}}],[\"net版本是5\",{\"1\":{\"561\":1}}],[\"net技术栈成熟的实时通信框架\",{\"0\":{\"535\":1}}],[\"net之生成数据库全流程\",{\"1\":{\"502\":1}}],[\"net标准\",{\"1\":{\"451\":1}}],[\"net平台之间移植\",{\"1\":{\"457\":1}}],[\"net平台\",{\"1\":{\"451\":1}}],[\"net下一个非常优秀的开源日志记录组件\",{\"1\":{\"447\":1}}],[\"net6写法\",{\"1\":{\"660\":1}}],[\"net6的文章\",{\"1\":{\"537\":1}}],[\"net6\",{\"1\":{\"210\":1,\"399\":1,\"537\":1,\"538\":1,\"571\":1,\"600\":1,\"657\":2}}],[\"net中的一组支持开发面向数据的软件应用程序的技术\",{\"1\":{\"529\":1}}],[\"net中实现singleton的首选方法\",{\"1\":{\"368\":1}}],[\"net中实施垃圾收集\",{\"1\":{\"203\":1}}],[\"net中有两种类型的内存\",{\"1\":{\"203\":1}}],[\"net中有两种类型的索引\",{\"1\":{\"203\":1}}],[\"net中有几种类型的内存\",{\"1\":{\"203\":1}}],[\"net中有哪些不同类型的索引\",{\"1\":{\"203\":1}}],[\"net比较有哪些更好的地方\",{\"1\":{\"203\":1}}],[\"net进程时\",{\"1\":{\"173\":1}}],[\"net程序\",{\"1\":{\"232\":1,\"894\":1}}],[\"net程序你\",{\"1\":{\"173\":1}}],[\"net程序集的编辑\",{\"1\":{\"172\":1}}],[\"net工具套件中的一个\",{\"1\":{\"170\":1}}],[\"net反编译工具\",{\"1\":{\"170\":1}}],[\"net5的webapi应用程序\",{\"1\":{\"661\":1}}],[\"net5+和\",{\"1\":{\"570\":1}}],[\"net5sampleone\",{\"1\":{\"554\":1}}],[\"net5sample\",{\"1\":{\"554\":2}}],[\"net5bydocker\",{\"1\":{\"501\":1,\"552\":1,\"554\":1,\"585\":2,\"591\":2,\"899\":7}}],[\"net5开始\",{\"1\":{\"479\":1}}],[\"net5通过\",{\"1\":{\"210\":1}}],[\"net5中使用的设计模式吗\",{\"1\":{\"202\":1}}],[\"net5中\",{\"1\":{\"202\":1}}],[\"net5中实现的装饰模式\",{\"1\":{\"202\":1}}],[\"net5\",{\"1\":{\"142\":1,\"202\":2,\"210\":1,\"364\":1,\"449\":1,\"479\":1,\"501\":1,\"550\":2,\"559\":1,\"682\":1,\"710\":1,\"1126\":2,\"1127\":1}}],[\"netframework\",{\"1\":{\"1127\":1}}],[\"netframework下载\",{\"1\":{\"1024\":1}}],[\"netfilter\",{\"1\":{\"916\":3}}],[\"netf\",{\"1\":{\"141\":1}}],[\"net人员解决了代码共享问题\",{\"1\":{\"141\":1}}],[\"net的一些系列文章\",{\"1\":{\"689\":1}}],[\"net的流程\",{\"1\":{\"550\":1}}],[\"net的许多其他库一样\",{\"1\":{\"457\":1}}],[\"net的跨平台的实现\",{\"1\":{\"140\":1}}],[\"net的代码在编译时都至少存在一个程序集\",{\"1\":{\"90\":1}}],[\"netcore项目\",{\"1\":{\"899\":1}}],[\"netcore项目构建镜像为例\",{\"1\":{\"833\":1}}],[\"netcore的镜像列表可以参照这个地址\",{\"1\":{\"838\":1}}],[\"netcore的应用程序中均隐式使用它\",{\"1\":{\"570\":1}}],[\"netcore运行时等基础设施了\",{\"1\":{\"806\":1}}],[\"netcore单元测试\",{\"1\":{\"591\":1}}],[\"netcoreapp1\",{\"1\":{\"1127\":2}}],[\"netcoreapp2\",{\"1\":{\"1127\":3}}],[\"netcoreapp3\",{\"1\":{\"1127\":2}}],[\"netcoreapp\",{\"1\":{\"585\":1,\"1127\":1}}],[\"netcore服务中来实现一个发送消息通知的接口\",{\"1\":{\"575\":1}}],[\"netcorewebapi程序defaultsample\",{\"1\":{\"574\":1}}],[\"netcore应用程序运行在shell之中\",{\"1\":{\"543\":1}}],[\"netcore3\",{\"1\":{\"481\":1,\"660\":1,\"806\":1}}],[\"netcorefiltersample\",{\"1\":{\"421\":3}}],[\"netcore和net相比增加了资源过滤器和结果过滤器\",{\"1\":{\"399\":1}}],[\"netcore中本身容器容器已经创建好了\",{\"1\":{\"657\":1}}],[\"netcore中\",{\"1\":{\"575\":1}}],[\"netcore中缓存相关的类库都在\",{\"1\":{\"371\":1}}],[\"netcore中的缓存和system\",{\"1\":{\"370\":1}}],[\"netcore进行编写的\",{\"1\":{\"211\":1,\"1117\":1}}],[\"netcore健康检查的包\",{\"1\":{\"152\":1}}],[\"netcore\",{\"1\":{\"141\":1,\"488\":3,\"588\":1,\"639\":2,\"645\":2,\"651\":2}}],[\"netcore是一个全新的框架\",{\"1\":{\"140\":1}}],[\"netcore配置gitlab\",{\"1\":{\"40\":1}}],[\"net编写的代码将会编译成一种称为中间语音\",{\"1\":{\"139\":1}}],[\"net文档\",{\"1\":{\"135\":1}}],[\"net项目都会默认引用mscorlib程序集\",{\"1\":{\"90\":1}}],[\"net\",{\"0\":{\"139\":1,\"140\":1,\"141\":1,\"547\":1,\"561\":1},\"1\":{\"8\":2,\"40\":1,\"41\":1,\"75\":1,\"76\":1,\"135\":2,\"139\":2,\"140\":4,\"141\":2,\"142\":1,\"167\":1,\"168\":1,\"173\":1,\"203\":11,\"213\":1,\"239\":1,\"253\":1,\"268\":1,\"321\":1,\"333\":1,\"336\":1,\"345\":1,\"346\":1,\"347\":1,\"349\":1,\"374\":1,\"399\":1,\"410\":1,\"446\":2,\"448\":1,\"449\":1,\"456\":1,\"457\":1,\"467\":1,\"477\":1,\"501\":1,\"543\":5,\"548\":1,\"549\":1,\"550\":1,\"559\":1,\"561\":6,\"562\":3,\"563\":4,\"570\":2,\"577\":1,\"585\":5,\"586\":1,\"588\":3,\"599\":2,\"600\":2,\"617\":2,\"635\":1,\"661\":1,\"666\":3,\"668\":5,\"670\":2,\"673\":2,\"682\":1,\"685\":1,\"689\":5,\"690\":1,\"691\":1,\"693\":4,\"839\":2,\"843\":4,\"853\":1,\"893\":1,\"953\":2,\"959\":1,\"964\":1,\"965\":2,\"968\":1,\"986\":1,\"1008\":5,\"1019\":2,\"1066\":1,\"1067\":1,\"1070\":2,\"1106\":1,\"1109\":1,\"1116\":1,\"1119\":1,\"1122\":1,\"1123\":2,\"1127\":8}}],[\"netbydocker\",{\"1\":{\"8\":1,\"547\":4,\"548\":1,\"1070\":11}}],[\"newer\",{\"1\":{\"968\":1}}],[\"newimage如下\",{\"1\":{\"837\":1}}],[\"newimage\",{\"1\":{\"837\":1}}],[\"newinstance\",{\"1\":{\"442\":1}}],[\"new出来的实例\",{\"1\":{\"805\":1}}],[\"new一个client实例\",{\"1\":{\"661\":1}}],[\"newtemplateid\",{\"1\":{\"518\":1}}],[\"newtonsoftjson\",{\"1\":{\"600\":2,\"629\":1}}],[\"newtonsoft包默认的解析处理defaultcontractresolver\",{\"1\":{\"478\":1}}],[\"newtonsoft\",{\"1\":{\"404\":1,\"501\":1,\"600\":1,\"691\":1,\"1126\":2}}],[\"newguid\",{\"1\":{\"501\":1,\"577\":1,\"680\":1,\"687\":1,\"1042\":5}}],[\"newlines\",{\"1\":{\"564\":1}}],[\"newline\",{\"1\":{\"462\":1,\"769\":1}}],[\"new\",{\"1\":{\"8\":1,\"43\":2,\"46\":1,\"51\":1,\"56\":3,\"57\":1,\"59\":1,\"66\":1,\"68\":1,\"72\":2,\"73\":1,\"81\":4,\"99\":4,\"101\":1,\"105\":5,\"106\":8,\"109\":3,\"117\":1,\"120\":4,\"123\":1,\"124\":4,\"125\":5,\"127\":1,\"128\":4,\"130\":2,\"131\":2,\"144\":5,\"151\":13,\"153\":2,\"163\":2,\"165\":6,\"166\":2,\"167\":7,\"168\":3,\"215\":6,\"344\":2,\"354\":1,\"358\":8,\"359\":2,\"364\":13,\"368\":2,\"372\":2,\"373\":4,\"375\":5,\"376\":5,\"381\":3,\"382\":1,\"386\":3,\"387\":1,\"394\":2,\"396\":2,\"401\":19,\"402\":3,\"403\":1,\"404\":8,\"405\":5,\"408\":1,\"410\":1,\"413\":2,\"416\":8,\"418\":4,\"421\":1,\"424\":1,\"427\":3,\"441\":3,\"442\":1,\"458\":1,\"459\":1,\"463\":1,\"472\":6,\"475\":6,\"477\":4,\"478\":3,\"481\":2,\"483\":2,\"484\":7,\"494\":2,\"497\":2,\"498\":1,\"501\":3,\"502\":2,\"503\":4,\"512\":2,\"518\":2,\"519\":1,\"520\":1,\"522\":2,\"523\":1,\"524\":2,\"525\":1,\"527\":1,\"528\":4,\"552\":1,\"574\":7,\"576\":1,\"577\":4,\"579\":1,\"580\":3,\"582\":1,\"583\":6,\"585\":4,\"586\":1,\"591\":22,\"600\":3,\"602\":1,\"607\":1,\"609\":2,\"611\":1,\"613\":2,\"615\":2,\"616\":1,\"617\":7,\"620\":2,\"622\":2,\"625\":1,\"630\":1,\"632\":1,\"638\":2,\"644\":1,\"650\":3,\"655\":4,\"656\":1,\"660\":2,\"661\":2,\"670\":1,\"672\":1,\"673\":2,\"675\":2,\"676\":3,\"677\":8,\"678\":1,\"680\":3,\"681\":8,\"683\":1,\"684\":3,\"687\":1,\"688\":5,\"691\":6,\"692\":1,\"693\":7,\"694\":7,\"711\":1,\"712\":5,\"737\":1,\"1008\":1,\"1036\":2,\"1041\":12,\"1042\":1,\"1043\":5,\"1044\":3,\"1047\":6,\"1050\":2,\"1051\":1,\"1053\":1,\"1055\":2,\"1056\":1,\"1058\":2,\"1060\":3,\"1061\":7,\"1063\":4,\"1064\":4,\"1065\":5}}],[\"提示文件修复成功后\",{\"1\":{\"1024\":2}}],[\"提示信息如下图所示\",{\"1\":{\"909\":1}}],[\"提示\",{\"1\":{\"689\":1}}],[\"提取码\",{\"1\":{\"1110\":1}}],[\"提取接口\",{\"1\":{\"965\":2}}],[\"提取方法\",{\"1\":{\"965\":1}}],[\"提取动态链接的\",{\"0\":{\"870\":1}}],[\"提取上一个接口的返回数据值\",{\"1\":{\"745\":1}}],[\"提取\",{\"1\":{\"685\":1}}],[\"提高了生产力\",{\"1\":{\"968\":1}}],[\"提高了开发效率\",{\"1\":{\"529\":1}}],[\"提高清晰度和可读性\",{\"1\":{\"968\":1}}],[\"提高私密性和安全性\",{\"1\":{\"322\":1}}],[\"提高用户访问静态代码的速度\",{\"1\":{\"207\":1}}],[\"提高检索速度\",{\"1\":{\"206\":1}}],[\"提高数据库表和字段的命名技巧\",{\"1\":{\"206\":1}}],[\"提高效率\",{\"1\":{\"206\":1}}],[\"提高点效率\",{\"1\":{\"201\":1}}],[\"提前拉取好项目的目录\",{\"1\":{\"1070\":1}}],[\"提前安装\",{\"1\":{\"1037\":1}}],[\"提前创建交换机是\",{\"1\":{\"1013\":1}}],[\"提前了解行情\",{\"0\":{\"196\":1}}],[\"提前练习\",{\"1\":{\"185\":1}}],[\"提供接近ide般操作体验\",{\"1\":{\"1004\":1}}],[\"提供两种健康检查探针\",{\"1\":{\"914\":1}}],[\"提供会默认给我们分配一个叫做\",{\"1\":{\"784\":1}}],[\"提供\",{\"1\":{\"682\":1,\"1110\":1}}],[\"提供完整的代码生成工具\",{\"1\":{\"666\":1}}],[\"提供原生的asp\",{\"1\":{\"666\":1}}],[\"提供与服务器相同的方法\",{\"1\":{\"662\":1}}],[\"提供api\",{\"1\":{\"535\":1}}],[\"提供给第三方调用api日志\",{\"1\":{\"446\":1}}],[\"提供对\",{\"1\":{\"443\":1}}],[\"提供的\",{\"1\":{\"786\":1,\"931\":1}}],[\"提供的相关命令进行查看\",{\"1\":{\"780\":1}}],[\"提供的首个近似聚合是cardinality\",{\"1\":{\"204\":1}}],[\"提供的服务和中间件可将网站本地化为不同的语言\",{\"1\":{\"142\":1}}],[\"提供多主题\",{\"1\":{\"172\":1}}],[\"提供了稳定的名称\",{\"1\":{\"939\":1}}],[\"提供了稳定的网络端点\",{\"1\":{\"939\":1}}],[\"提供了方便的持久化卷\",{\"1\":{\"914\":1}}],[\"提供了基于httpclient的原生框架实现\",{\"1\":{\"666\":1}}],[\"提供了对基本的结构化日志的功能支持\",{\"1\":{\"457\":1}}],[\"提供了对私有字段的访问封装\",{\"1\":{\"41\":1}}],[\"提供了许多\",{\"1\":{\"443\":1}}],[\"提供了泛型支持\",{\"1\":{\"370\":1}}],[\"提供了一个内置的服务容器iserviceprovider\",{\"1\":{\"344\":1}}],[\"提供了char类型\",{\"1\":{\"78\":1}}],[\"提供了安全和灵活的数据访问封装\",{\"1\":{\"41\":1}}],[\"提交即可\",{\"1\":{\"1064\":1}}],[\"提交时的说明文字\",{\"1\":{\"811\":1}}],[\"提交的镜像作者\",{\"1\":{\"811\":1}}],[\"提交和同步\",{\"1\":{\"798\":1}}],[\"提交和推送\",{\"1\":{\"798\":1}}],[\"提交非常慢\",{\"1\":{\"798\":1}}],[\"提交还是在的\",{\"1\":{\"786\":1}}],[\"提交\",{\"0\":{\"782\":1},\"1\":{\"798\":3,\"1063\":1}}],[\"提交原理\",{\"0\":{\"781\":1}}],[\"提交成功说明微信可以调通该接口\",{\"1\":{\"711\":1}}],[\"提交新的合并段到磁盘\",{\"1\":{\"204\":1}}],[\"提交到本地存储库\",{\"1\":{\"798\":1}}],[\"提交到缓存区\",{\"1\":{\"22\":1}}],[\"提交到gitlab上\",{\"1\":{\"8\":1}}],[\"提交全部文件\",{\"1\":{\"22\":1}}],[\"提交文档\",{\"1\":{\"22\":1}}],[\"提交分支\",{\"1\":{\"21\":1}}],[\"提交并注释\",{\"1\":{\"21\":1}}],[\"提交推送代码\",{\"1\":{\"8\":1}}],[\"提问前为确定问题而采取的诊断步骤\",{\"1\":{\"2\":1}}],[\"提问前做过的调查研究及对其的理解\",{\"1\":{\"2\":1}}],[\"提问前先试试自己解决\",{\"1\":{\"2\":1}}],[\"提问前先搜一搜\",{\"1\":{\"2\":1}}],[\"提问的智慧\",{\"0\":{\"2\":1}}],[\"hpa\",{\"1\":{\"914\":1}}],[\"hxtrip\",{\"1\":{\"703\":1,\"704\":1}}],[\"hyper\",{\"0\":{\"1013\":1,\"1102\":1},\"1\":{\"1013\":1,\"1102\":1,\"1108\":2}}],[\"hypertext\",{\"1\":{\"328\":1}}],[\"hyderabad\",{\"1\":{\"583\":2}}],[\"hidden\",{\"1\":{\"1036\":4}}],[\"hide\",{\"1\":{\"738\":1}}],[\"history\",{\"1\":{\"564\":3,\"1095\":1}}],[\"high\",{\"1\":{\"373\":1}}],[\"hh\",{\"1\":{\"421\":1,\"453\":1,\"462\":1,\"478\":1,\"692\":1,\"694\":1}}],[\"hmacsha256\",{\"1\":{\"364\":1}}],[\"huangtailang\",{\"1\":{\"801\":1}}],[\"hup\",{\"1\":{\"564\":2}}],[\"hu\",{\"1\":{\"445\":1}}],[\"hunsh\",{\"1\":{\"336\":1}}],[\"huoyu\",{\"1\":{\"276\":1}}],[\"hue\",{\"1\":{\"243\":1}}],[\"huejumper2k\",{\"1\":{\"243\":1}}],[\"hub是最大的镜像存储库\",{\"1\":{\"805\":1}}],[\"hub\",{\"1\":{\"152\":1,\"335\":1,\"838\":1,\"863\":2,\"873\":1,\"874\":2,\"968\":1}}],[\"hgui\",{\"1\":{\"239\":1}}],[\"hll\",{\"1\":{\"204\":1}}],[\"href=\",{\"1\":{\"693\":1}}],[\"hr\",{\"1\":{\"183\":1,\"185\":1,\"192\":1,\"194\":1,\"195\":2,\"197\":4,\"198\":1,\"200\":1,\"201\":1}}],[\"happens\",{\"1\":{\"949\":1}}],[\"have\",{\"1\":{\"522\":1,\"601\":1,\"739\":5,\"949\":1}}],[\"hans\",{\"1\":{\"957\":1,\"973\":1}}],[\"hanker\",{\"1\":{\"914\":1}}],[\"hangzhou\",{\"1\":{\"859\":1,\"1069\":1,\"1070\":7}}],[\"hangfire\",{\"1\":{\"152\":2}}],[\"handler=download\",{\"1\":{\"693\":1}}],[\"handleresponse\",{\"1\":{\"364\":1}}],[\"handle\",{\"1\":{\"564\":1}}],[\"hander\",{\"1\":{\"355\":1}}],[\"has\",{\"1\":{\"739\":2}}],[\"hasrouteattribute\",{\"1\":{\"656\":2}}],[\"hasdata\",{\"1\":{\"502\":1}}],[\"hascomment\",{\"1\":{\"502\":1}}],[\"haschanged\",{\"1\":{\"374\":1}}],[\"hasmaxlength\",{\"1\":{\"502\":1}}],[\"hashes\",{\"1\":{\"209\":1}}],[\"hash\",{\"1\":{\"209\":7,\"778\":2,\"779\":2}}],[\"hasflags\",{\"1\":{\"43\":3}}],[\"hard⚠️\",{\"0\":{\"31\":1}}],[\"hard\",{\"1\":{\"27\":2,\"29\":1,\"31\":4,\"33\":1}}],[\"heisenberg的双关语\",{\"1\":{\"984\":1}}],[\"height2\",{\"1\":{\"688\":3}}],[\"height\",{\"1\":{\"688\":5}}],[\"here拉取项目的话会提示如下错误\",{\"1\":{\"802\":1}}],[\"here中输入命令\",{\"1\":{\"774\":1}}],[\"here\",{\"1\":{\"752\":1,\"775\":1,\"1036\":2}}],[\"heterogeneous\",{\"1\":{\"564\":1}}],[\"henrydavidzhu\",{\"1\":{\"243\":1}}],[\"heapster和自定义的rest\",{\"1\":{\"914\":1}}],[\"heap\",{\"1\":{\"204\":1}}],[\"healthreport\",{\"1\":{\"151\":1}}],[\"healthy\",{\"1\":{\"151\":2}}],[\"healthchecksui\",{\"1\":{\"153\":1}}],[\"healthchecks\",{\"1\":{\"152\":35,\"153\":5,\"158\":1}}],[\"healthcheckoptions\",{\"1\":{\"151\":2,\"153\":2}}],[\"healthcheckresult\",{\"1\":{\"151\":3}}],[\"healthcheckcontext\",{\"1\":{\"151\":2}}],[\"health\",{\"1\":{\"150\":2}}],[\"heads\",{\"1\":{\"777\":4,\"781\":1,\"784\":1,\"785\":3,\"788\":3}}],[\"head头部传递\",{\"1\":{\"601\":1}}],[\"headerapiversionreader\",{\"1\":{\"650\":1,\"655\":1}}],[\"header传递版本信息\",{\"1\":{\"650\":1}}],[\"headerdic\",{\"1\":{\"617\":2}}],[\"headers来实现版本控制\",{\"0\":{\"649\":1}}],[\"headers\",{\"1\":{\"175\":1,\"364\":1,\"401\":4,\"405\":1,\"472\":2,\"484\":1,\"580\":2,\"586\":1,\"600\":3,\"603\":2,\"604\":2,\"607\":1,\"608\":1,\"609\":2,\"612\":1,\"613\":2,\"615\":1,\"616\":1,\"617\":6,\"620\":1,\"621\":1,\"622\":2,\"625\":1,\"626\":1,\"627\":2,\"631\":1,\"632\":2,\"735\":1,\"739\":1,\"742\":1,\"743\":1}}],[\"header\",{\"1\":{\"155\":1,\"484\":1,\"543\":3,\"569\":1,\"739\":2,\"944\":1,\"945\":1,\"956\":2}}],[\"headernames\",{\"1\":{\"155\":1,\"655\":1}}],[\"head指向的版本就是当前版本\",{\"1\":{\"33\":1}}],[\"head指向当前分支中最新的一次提交的指针\",{\"1\":{\"23\":1}}],[\"head指向当前分支中的最新一次提交的指针\",{\"1\":{\"23\":1}}],[\"head还能取消已缓存的内容\",{\"1\":{\"32\":1}}],[\"head^3\",{\"1\":{\"32\":1}}],[\"head^2\",{\"1\":{\"32\":1}}],[\"head^^^\",{\"1\":{\"32\":1}}],[\"head^^\",{\"1\":{\"32\":1}}],[\"head^\",{\"1\":{\"32\":3}}],[\"head~1\",{\"1\":{\"32\":1}}],[\"head~0\",{\"1\":{\"32\":1}}],[\"head~3\",{\"1\":{\"30\":1,\"31\":1}}],[\"head~2\",{\"1\":{\"27\":1}}],[\"head命令来查看本次提交与上次提交之间的差别\",{\"1\":{\"23\":1}}],[\"head\",{\"0\":{\"32\":1,\"784\":1},\"1\":{\"23\":1,\"29\":1,\"30\":1,\"32\":2,\"323\":1,\"601\":1,\"734\":2,\"745\":2,\"777\":3,\"781\":3,\"784\":5,\"785\":3,\"786\":4,\"787\":1,\"788\":1}}],[\"helle\",{\"1\":{\"778\":1}}],[\"hello=world\",{\"1\":{\"567\":1,\"568\":1}}],[\"hello\",{\"1\":{\"156\":1,\"569\":1,\"778\":4,\"779\":3,\"787\":1,\"822\":1,\"862\":2,\"871\":5,\"876\":1,\"1096\":1}}],[\"hellotim\",{\"1\":{\"40\":1}}],[\"help命令\",{\"1\":{\"829\":1}}],[\"help\",{\"1\":{\"484\":1,\"564\":2,\"829\":1,\"968\":1,\"1008\":1}}],[\"helper\",{\"1\":{\"94\":3,\"585\":4,\"586\":2,\"587\":2,\"591\":2,\"775\":2,\"797\":1,\"865\":1,\"867\":1}}],[\"helpattribute\",{\"1\":{\"42\":1}}],[\"horizontal\",{\"1\":{\"914\":3}}],[\"hooks\",{\"1\":{\"777\":15}}],[\"hoppscotch是一种可以通过web服务的方式构建api访问的工具\",{\"1\":{\"716\":1}}],[\"hoppscotch\",{\"0\":{\"716\":1},\"1\":{\"716\":1}}],[\"hostpath允许挂载node上的文件系统到pod里面去\",{\"1\":{\"914\":1}}],[\"hostpath\",{\"1\":{\"914\":1}}],[\"host模式\",{\"1\":{\"839\":1}}],[\"hostenvironment\",{\"1\":{\"413\":5}}],[\"hosts\",{\"1\":{\"333\":1,\"391\":1,\"392\":1,\"393\":1,\"395\":2}}],[\"host文件所在位置\",{\"1\":{\"333\":1}}],[\"hostmatcherpolicy>\",{\"1\":{\"165\":1}}],[\"hostingenvironment\",{\"1\":{\"583\":1}}],[\"hostingcontext\",{\"1\":{\"462\":2,\"583\":3}}],[\"hosting\",{\"1\":{\"153\":1,\"391\":1,\"446\":4,\"447\":1,\"454\":2,\"455\":1}}],[\"host\",{\"1\":{\"38\":3,\"215\":1,\"421\":4,\"447\":1,\"454\":1,\"462\":1,\"463\":3,\"501\":3,\"543\":1,\"563\":1,\"583\":2,\"585\":1,\"661\":1,\"805\":1,\"839\":1,\"928\":1,\"931\":2,\"1070\":2,\"1110\":1}}],[\"home=$\",{\"1\":{\"1136\":1}}],[\"home=\",{\"1\":{\"564\":1,\"1136\":1}}],[\"homebrew\",{\"1\":{\"253\":1,\"1036\":3}}],[\"homecontroller\",{\"1\":{\"145\":2,\"350\":1,\"371\":1,\"377\":1,\"446\":1,\"456\":2,\"458\":1,\"459\":1,\"661\":1,\"673\":2}}],[\"home\",{\"1\":{\"37\":3,\"259\":1,\"564\":1,\"734\":2,\"853\":2,\"854\":3,\"882\":2,\"885\":4,\"886\":2,\"888\":2,\"902\":1,\"1110\":1,\"1136\":4}}],[\"h3w7ltj4xl1tzdeia\",{\"1\":{\"8\":1}}],[\"h\",{\"1\":{\"8\":1,\"739\":1,\"870\":2,\"899\":1}}],[\"ht4xc\",{\"1\":{\"973\":1}}],[\"htl\",{\"1\":{\"801\":1}}],[\"htm\",{\"1\":{\"265\":1,\"292\":1,\"293\":1,\"593\":1}}],[\"html>\",{\"1\":{\"1035\":1}}],[\"html等文件合并\",{\"1\":{\"685\":1}}],[\"html介绍\",{\"0\":{\"328\":1}}],[\"html代码高亮显示\",{\"1\":{\"321\":1}}],[\"htmlhint\",{\"1\":{\"321\":1}}],[\"html5标准\",{\"1\":{\"533\":1}}],[\"html5代码提示\",{\"1\":{\"321\":1}}],[\"html5\",{\"1\":{\"243\":2,\"330\":1}}],[\"html\",{\"1\":{\"6\":1,\"8\":1,\"16\":1,\"40\":1,\"43\":1,\"46\":2,\"68\":1,\"121\":1,\"141\":1,\"168\":1,\"207\":2,\"210\":1,\"215\":1,\"232\":1,\"243\":1,\"259\":1,\"262\":1,\"321\":3,\"328\":3,\"329\":3,\"341\":1,\"343\":1,\"362\":1,\"382\":1,\"445\":1,\"467\":1,\"472\":1,\"474\":1,\"475\":1,\"477\":1,\"484\":1,\"500\":1,\"536\":1,\"549\":1,\"558\":1,\"588\":1,\"591\":1,\"594\":1,\"599\":1,\"656\":1,\"660\":1,\"661\":1,\"666\":2,\"682\":1,\"683\":2,\"685\":1,\"689\":1,\"712\":3,\"724\":1,\"734\":2,\"790\":1,\"798\":1,\"801\":2,\"804\":1,\"850\":1,\"862\":1,\"874\":1,\"893\":1,\"899\":1,\"902\":3,\"912\":1,\"946\":2,\"949\":1,\"954\":1,\"968\":1,\"1009\":1,\"1046\":1,\"1047\":1,\"1055\":1,\"1070\":1,\"1109\":2,\"1134\":1}}],[\"http路由等\",{\"1\":{\"914\":1}}],[\"httppatch\",{\"1\":{\"630\":1}}],[\"httpput\",{\"1\":{\"620\":1}}],[\"httppost\",{\"1\":{\"468\":1,\"471\":1,\"476\":1,\"552\":1,\"607\":1,\"611\":1,\"615\":1,\"678\":1}}],[\"httphelper是注入的ihttphelper\",{\"1\":{\"604\":1}}],[\"httphelper\",{\"1\":{\"604\":1,\"609\":1,\"613\":1,\"617\":1,\"622\":1,\"627\":1,\"632\":1}}],[\"httpresponse\",{\"1\":{\"600\":3}}],[\"httpresponsemessage\",{\"1\":{\"600\":1,\"691\":1}}],[\"http通信的核心一直没变\",{\"1\":{\"530\":1}}],[\"httpdelete\",{\"1\":{\"483\":1,\"552\":1,\"625\":1}}],[\"http错误400\",{\"1\":{\"474\":1}}],[\"httpcontent\",{\"1\":{\"613\":2}}],[\"httpcontextaccessor>\",{\"1\":{\"359\":1,\"367\":1,\"368\":1,\"369\":1}}],[\"httpcontext对象包含了相关信息\",{\"1\":{\"167\":1}}],[\"httpcontext\",{\"1\":{\"151\":1,\"164\":2,\"167\":21,\"168\":5,\"358\":1,\"361\":1,\"362\":1,\"363\":1,\"364\":3,\"366\":5,\"367\":2,\"368\":1,\"401\":6,\"402\":13,\"403\":6,\"404\":1,\"405\":3,\"418\":8,\"421\":7,\"424\":2,\"427\":3,\"472\":2,\"484\":1,\"607\":1,\"615\":1,\"620\":1,\"625\":1,\"636\":1}}],[\"httpclientfactory\",{\"1\":{\"600\":3}}],[\"httpclienthelper\",{\"1\":{\"600\":2,\"694\":5}}],[\"httpclient\",{\"1\":{\"446\":1,\"586\":1,\"600\":1,\"691\":2}}],[\"httponly\",{\"1\":{\"369\":1}}],[\"http2\",{\"0\":{\"326\":1},\"1\":{\"666\":1}}],[\"http+ssl\",{\"1\":{\"325\":1}}],[\"http请求\",{\"0\":{\"565\":1}}],[\"http请求由三个部分组成\",{\"1\":{\"323\":1}}],[\"http请求以及垃圾回收期间花费的时间等等\",{\"1\":{\"174\":1}}],[\"http是一个应用层协议\",{\"1\":{\"323\":1}}],[\"http协议漫谈\",{\"1\":{\"327\":1}}],[\"http协议需要依靠tcp协议来传输数据\",{\"1\":{\"324\":1}}],[\"http协议基于tcp协议\",{\"1\":{\"324\":1}}],[\"http协议永远都是客户端发起请求\",{\"1\":{\"323\":1}}],[\"http协议通常承载于tcp协议之上\",{\"1\":{\"323\":1}}],[\"http协议是用于从www服务器传输超文本到本地浏览器的传送协议\",{\"1\":{\"323\":1}}],[\"http协议\",{\"0\":{\"323\":1}}],[\"http代理\",{\"0\":{\"322\":1},\"1\":{\"308\":1}}],[\"httpmethodmatcherpolicy>\",{\"1\":{\"165\":1}}],[\"http报文\",{\"0\":{\"146\":1}}],[\"httpget\",{\"1\":{\"145\":1,\"164\":1,\"348\":1,\"349\":1,\"351\":1,\"364\":2,\"371\":2,\"373\":2,\"382\":1,\"387\":1,\"400\":1,\"401\":1,\"427\":1,\"446\":1,\"447\":1,\"456\":1,\"468\":4,\"472\":1,\"483\":2,\"489\":1,\"501\":1,\"552\":1,\"575\":1,\"576\":1,\"602\":1,\"640\":1,\"646\":1,\"652\":1,\"661\":1,\"673\":1,\"676\":1,\"681\":1,\"712\":1}}],[\"httpsinlinecertfile\",{\"1\":{\"666\":1}}],[\"https证书费用\",{\"1\":{\"704\":1}}],[\"https证书\",{\"1\":{\"662\":1}}],[\"httpsample\",{\"1\":{\"603\":2,\"604\":1,\"605\":1,\"608\":1,\"609\":1,\"612\":1,\"613\":1,\"616\":1,\"617\":1,\"621\":1,\"622\":1,\"623\":1,\"626\":1,\"627\":1,\"628\":1,\"631\":1,\"632\":1}}],[\"httpstatuscode\",{\"1\":{\"427\":1,\"586\":1}}],[\"https可以理解为\",{\"1\":{\"325\":1}}],[\"https的端口号为443\",{\"1\":{\"323\":1}}],[\"https\",{\"0\":{\"325\":1},\"1\":{\"3\":2,\"4\":1,\"6\":1,\"8\":3,\"16\":1,\"20\":1,\"40\":2,\"43\":1,\"46\":3,\"68\":1,\"121\":1,\"125\":2,\"133\":2,\"134\":1,\"135\":3,\"136\":2,\"137\":9,\"138\":3,\"141\":2,\"148\":1,\"152\":1,\"155\":1,\"170\":1,\"171\":2,\"172\":1,\"211\":2,\"212\":1,\"214\":1,\"215\":1,\"216\":2,\"238\":1,\"239\":3,\"241\":1,\"242\":9,\"243\":19,\"245\":1,\"258\":1,\"259\":2,\"263\":1,\"270\":1,\"273\":1,\"274\":1,\"276\":1,\"278\":1,\"281\":1,\"283\":1,\"284\":1,\"285\":1,\"287\":1,\"288\":1,\"290\":1,\"296\":1,\"298\":1,\"302\":1,\"304\":1,\"308\":1,\"309\":2,\"311\":2,\"322\":1,\"325\":4,\"327\":1,\"329\":1,\"330\":3,\"332\":1,\"334\":1,\"335\":2,\"336\":3,\"340\":1,\"341\":1,\"345\":1,\"346\":1,\"347\":1,\"355\":1,\"362\":1,\"364\":1,\"382\":2,\"399\":1,\"410\":1,\"445\":1,\"448\":2,\"456\":1,\"457\":2,\"466\":1,\"467\":7,\"468\":1,\"470\":1,\"472\":1,\"474\":3,\"475\":1,\"477\":5,\"484\":2,\"500\":1,\"501\":2,\"514\":1,\"523\":1,\"528\":1,\"529\":1,\"536\":1,\"537\":2,\"549\":3,\"558\":1,\"561\":1,\"563\":1,\"574\":1,\"576\":1,\"577\":2,\"583\":1,\"588\":3,\"591\":2,\"599\":4,\"629\":1,\"656\":2,\"661\":3,\"662\":1,\"666\":10,\"670\":1,\"673\":1,\"681\":1,\"682\":1,\"685\":2,\"689\":3,\"693\":2,\"694\":1,\"696\":1,\"698\":1,\"700\":1,\"702\":1,\"708\":1,\"709\":1,\"712\":6,\"714\":1,\"715\":1,\"716\":1,\"722\":1,\"748\":2,\"751\":2,\"790\":1,\"791\":1,\"794\":1,\"796\":1,\"798\":1,\"801\":5,\"802\":3,\"804\":2,\"811\":1,\"825\":1,\"838\":1,\"845\":1,\"846\":2,\"850\":2,\"852\":2,\"853\":1,\"862\":4,\"868\":1,\"874\":7,\"876\":2,\"892\":1,\"893\":2,\"899\":1,\"902\":2,\"905\":2,\"912\":1,\"913\":1,\"915\":1,\"945\":1,\"946\":4,\"949\":1,\"951\":3,\"953\":2,\"954\":1,\"955\":1,\"956\":2,\"957\":1,\"964\":1,\"967\":2,\"968\":25,\"969\":1,\"970\":3,\"973\":1,\"985\":1,\"986\":2,\"1008\":1,\"1009\":1,\"1012\":3,\"1024\":1,\"1031\":2,\"1036\":6,\"1037\":2,\"1038\":3,\"1046\":1,\"1047\":1,\"1055\":1,\"1066\":1,\"1067\":1,\"1070\":5,\"1106\":1,\"1108\":1,\"1109\":4,\"1110\":3,\"1114\":3,\"1116\":1,\"1117\":2,\"1118\":1,\"1120\":1,\"1123\":1,\"1125\":2,\"1130\":1,\"1132\":1,\"1134\":1}}],[\"http\",{\"0\":{\"562\":1,\"649\":1},\"1\":{\"3\":2,\"6\":1,\"8\":1,\"18\":1,\"36\":1,\"38\":1,\"40\":1,\"151\":2,\"153\":2,\"156\":1,\"204\":1,\"207\":2,\"213\":1,\"219\":1,\"232\":1,\"242\":3,\"243\":3,\"262\":1,\"265\":1,\"272\":2,\"286\":1,\"292\":1,\"293\":1,\"322\":10,\"323\":1,\"325\":3,\"327\":1,\"337\":1,\"338\":1,\"343\":1,\"366\":1,\"446\":2,\"453\":2,\"468\":3,\"472\":1,\"500\":4,\"536\":1,\"541\":1,\"543\":2,\"552\":1,\"564\":6,\"575\":2,\"580\":1,\"586\":1,\"593\":1,\"594\":1,\"600\":1,\"603\":2,\"604\":1,\"605\":1,\"608\":1,\"609\":1,\"612\":1,\"613\":1,\"616\":1,\"617\":3,\"621\":1,\"622\":1,\"623\":1,\"626\":1,\"627\":1,\"628\":1,\"631\":1,\"632\":1,\"642\":4,\"648\":4,\"654\":2,\"660\":1,\"661\":2,\"663\":1,\"666\":1,\"691\":1,\"694\":2,\"703\":1,\"704\":1,\"724\":1,\"728\":1,\"733\":1,\"734\":4,\"744\":1,\"745\":1,\"796\":1,\"838\":2,\"862\":1,\"865\":1,\"867\":1,\"874\":5,\"887\":1,\"902\":1,\"923\":1,\"931\":5,\"938\":1,\"946\":1,\"949\":1,\"1012\":2,\"1070\":1,\"1103\":1,\"1109\":1,\"1119\":1,\"1126\":2,\"1134\":1}}],[\"v自带界面运行的\",{\"1\":{\"1107\":1}}],[\"v安装centos7\",{\"0\":{\"1102\":1}}],[\"v是微软的一款虚拟化产品\",{\"1\":{\"1013\":1}}],[\"vhf9h\",{\"1\":{\"973\":1}}],[\"vhost=customer\",{\"1\":{\"853\":1}}],[\"vhost\",{\"1\":{\"242\":1}}],[\"vxlan\",{\"1\":{\"935\":1}}],[\"vlan\",{\"1\":{\"928\":1}}],[\"v已经启用\",{\"1\":{\"876\":1}}],[\"vdso\",{\"1\":{\"870\":1,\"873\":1,\"874\":2}}],[\"veth对\",{\"1\":{\"927\":1}}],[\"veth设备对的引入是为了实现在不同网络命名空间的通信\",{\"1\":{\"916\":1}}],[\"veth\",{\"1\":{\"916\":1,\"926\":2}}],[\"vendor1=\",{\"1\":{\"821\":1}}],[\"verbose\",{\"1\":{\"868\":1}}],[\"ver\",{\"1\":{\"865\":2,\"867\":1}}],[\"very\",{\"1\":{\"863\":3}}],[\"verify\",{\"1\":{\"733\":1}}],[\"verifyparam\",{\"1\":{\"600\":1,\"604\":1,\"609\":1,\"613\":1,\"617\":1,\"622\":1,\"627\":1,\"632\":1}}],[\"verifyphone\",{\"1\":{\"474\":1}}],[\"verifyid\",{\"1\":{\"474\":3}}],[\"verifyendpointroutingmiddlewareisregistered\",{\"1\":{\"167\":2}}],[\"verifyroutingservicesareregistered\",{\"1\":{\"166\":2,\"167\":1}}],[\"version>\",{\"1\":{\"1123\":2}}],[\"version><\",{\"1\":{\"1123\":2}}],[\"versionprefix\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"versionprefix>\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"version可以查看当前docker版本号\",{\"1\":{\"876\":1}}],[\"versioning为您提供了一种功能强大但易于使用的方法\",{\"1\":{\"635\":1}}],[\"versioning用来实现api的版本控制\",{\"1\":{\"494\":1,\"498\":1,\"638\":1,\"644\":1,\"650\":1}}],[\"versioning\",{\"1\":{\"486\":2,\"494\":1,\"498\":1,\"635\":2,\"656\":1}}],[\"version等\",{\"1\":{\"469\":1}}],[\"version=alpha\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"version=latest\",{\"1\":{\"820\":1}}],[\"version=2\",{\"1\":{\"642\":1}}],[\"version=11\",{\"1\":{\"1123\":1}}],[\"version=1\",{\"1\":{\"642\":2}}],[\"version=v5\",{\"1\":{\"585\":1}}],[\"version=\",{\"1\":{\"153\":3,\"364\":3,\"371\":1,\"377\":1,\"378\":2,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"400\":1,\"413\":1,\"416\":1,\"447\":3,\"452\":2,\"453\":1,\"480\":1,\"486\":3,\"501\":4,\"577\":1,\"585\":5,\"600\":4,\"635\":2,\"660\":1,\"661\":1,\"669\":1,\"670\":4,\"672\":1,\"673\":4,\"683\":2,\"710\":4,\"821\":1,\"870\":1,\"970\":2,\"1048\":1,\"1126\":7,\"1131\":1}}],[\"versionsuffix\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"versionsuffix>\",{\"1\":{\"1122\":3,\"1123\":3}}],[\"versionsuffix顺序不能乱\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"versions\",{\"1\":{\"125\":1}}],[\"version\",{\"0\":{\"1175\":1},\"1\":{\"3\":2,\"36\":1,\"46\":5,\"125\":1,\"323\":1,\"481\":2,\"483\":1,\"484\":1,\"488\":2,\"494\":1,\"495\":1,\"497\":1,\"499\":1,\"543\":1,\"564\":1,\"573\":1,\"574\":3,\"576\":1,\"600\":1,\"638\":1,\"645\":2,\"650\":1,\"654\":1,\"655\":5,\"656\":3,\"769\":2,\"779\":1,\"796\":1,\"797\":1,\"809\":1,\"820\":1,\"852\":1,\"862\":2,\"876\":1,\"886\":1,\"1034\":12,\"1035\":12,\"1070\":2,\"1122\":5,\"1123\":8,\"1136\":1}}],[\"v0\",{\"1\":{\"764\":3,\"765\":1}}],[\"vpn\",{\"1\":{\"693\":1}}],[\"vm安装教程\",{\"1\":{\"1116\":1}}],[\"vm安装centos\",{\"0\":{\"1110\":1}}],[\"vmnet8\",{\"1\":{\"1110\":4}}],[\"vmware安装包\",{\"1\":{\"1110\":1}}],[\"vmware\",{\"1\":{\"1110\":19}}],[\"vm\",{\"1\":{\"591\":5}}],[\"v对的list列表\",{\"1\":{\"564\":2}}],[\"v启动的虚拟机\",{\"1\":{\"537\":1}}],[\"vvv\",{\"1\":{\"494\":1,\"498\":1}}],[\"v2+\",{\"1\":{\"1008\":1}}],[\"v2\",{\"1\":{\"488\":1,\"500\":1,\"639\":1,\"645\":1,\"648\":1,\"651\":1,\"811\":2}}],[\"v管理器\",{\"1\":{\"312\":1,\"1104\":2}}],[\"v的基本用法可以看另一个文章\",{\"1\":{\"312\":1}}],[\"v创建虚拟机安装uos系统\",{\"1\":{\"312\":1}}],[\"vue\",{\"1\":{\"253\":1}}],[\"vs默认格式为\",{\"1\":{\"971\":1}}],[\"vsthememidnightdeep\",{\"1\":{\"968\":1}}],[\"vscoloroutput64\",{\"1\":{\"968\":2}}],[\"vscode等\",{\"1\":{\"955\":1}}],[\"vscode\",{\"0\":{\"321\":1},\"1\":{\"321\":2,\"1014\":1}}],[\"vsversion=\",{\"1\":{\"967\":1}}],[\"vs每行代码前面出现了虚线\",{\"1\":{\"965\":1}}],[\"vs概述\",{\"0\":{\"965\":1}}],[\"vs自带的\",{\"1\":{\"802\":1}}],[\"vs单元测试的主要类\",{\"1\":{\"596\":1}}],[\"vs2017\",{\"1\":{\"973\":2}}],[\"vs2012\",{\"1\":{\"599\":1}}],[\"vs2019打包wpf安装程序最新教程\",{\"1\":{\"689\":1}}],[\"vs2019\",{\"1\":{\"142\":1,\"479\":1,\"501\":1,\"550\":1,\"559\":1,\"968\":1}}],[\"vs2022激活码\",{\"1\":{\"973\":1}}],[\"vs2022\",{\"1\":{\"364\":1,\"399\":1,\"537\":1,\"571\":1,\"600\":1,\"657\":1,\"964\":3,\"1014\":1}}],[\"vs\",{\"1\":{\"215\":1,\"595\":1,\"596\":1,\"597\":2,\"598\":1,\"599\":3,\"794\":1,\"955\":1,\"957\":1,\"963\":4,\"964\":4,\"967\":1,\"973\":1}}],[\"v3\",{\"1\":{\"213\":1,\"852\":1,\"970\":2,\"1070\":1,\"1119\":1,\"1125\":2}}],[\"v7\",{\"1\":{\"171\":1}}],[\"v1beta1\",{\"1\":{\"931\":2}}],[\"v1是自定义的镜像名和tag\",{\"1\":{\"811\":1}}],[\"v1\",{\"1\":{\"151\":2,\"481\":4,\"482\":2,\"483\":2,\"484\":2,\"488\":1,\"500\":2,\"600\":2,\"639\":1,\"645\":1,\"648\":2,\"651\":1,\"763\":1,\"835\":2,\"923\":1,\"930\":1}}],[\"vbird\",{\"1\":{\"946\":1}}],[\"vb\",{\"1\":{\"139\":1,\"140\":1}}],[\"v=msdn\",{\"1\":{\"125\":1}}],[\"volume才会清理\",{\"1\":{\"914\":1}}],[\"volume的数据依然还在\",{\"1\":{\"914\":1}}],[\"volume\",{\"0\":{\"827\":1},\"1\":{\"815\":1,\"827\":2,\"837\":1}}],[\"volumes\",{\"1\":{\"3\":1,\"36\":1,\"796\":1,\"816\":2,\"852\":2,\"886\":1}}],[\"volatile\",{\"1\":{\"56\":1,\"209\":3}}],[\"void\",{\"1\":{\"44\":1,\"52\":2,\"54\":4,\"55\":3,\"68\":3,\"73\":1,\"82\":1,\"83\":1,\"94\":4,\"98\":9,\"99\":1,\"102\":2,\"106\":2,\"109\":1,\"111\":1,\"112\":1,\"115\":2,\"150\":2,\"151\":2,\"153\":2,\"155\":2,\"156\":2,\"157\":1,\"158\":1,\"164\":1,\"166\":1,\"167\":1,\"215\":1,\"349\":1,\"368\":2,\"371\":1,\"373\":1,\"375\":1,\"376\":1,\"377\":1,\"378\":3,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"401\":1,\"402\":2,\"403\":6,\"404\":1,\"405\":2,\"413\":1,\"416\":3,\"418\":1,\"421\":1,\"424\":2,\"427\":1,\"439\":1,\"440\":3,\"442\":2,\"454\":1,\"462\":1,\"463\":1,\"468\":1,\"471\":1,\"477\":3,\"478\":1,\"481\":1,\"482\":1,\"483\":1,\"495\":1,\"497\":2,\"499\":1,\"501\":2,\"502\":3,\"573\":1,\"575\":1,\"580\":1,\"588\":4,\"599\":2,\"600\":2,\"656\":1,\"660\":4,\"661\":2,\"691\":10,\"692\":6,\"985\":2,\"1045\":1,\"1061\":2}}],[\"vax\",{\"1\":{\"779\":1}}],[\"vault\",{\"1\":{\"152\":1}}],[\"validity\",{\"1\":{\"1037\":1}}],[\"validissuer\",{\"1\":{\"364\":1}}],[\"validaudience\",{\"1\":{\"364\":1}}],[\"validate\",{\"1\":{\"475\":1,\"477\":1}}],[\"validatelifetime\",{\"1\":{\"364\":1}}],[\"validateaudience\",{\"1\":{\"364\":1}}],[\"validateissuer\",{\"1\":{\"364\":1}}],[\"validateissuersigningkey\",{\"1\":{\"364\":1}}],[\"validationstate\",{\"1\":{\"477\":1}}],[\"validationstatedictionary\",{\"1\":{\"477\":1}}],[\"validation\",{\"1\":{\"474\":3,\"475\":1,\"477\":2}}],[\"validationcontext\",{\"1\":{\"215\":20,\"475\":6}}],[\"validationresult\",{\"1\":{\"215\":10,\"475\":6}}],[\"validationattribute\",{\"1\":{\"215\":4,\"475\":1}}],[\"validon\",{\"1\":{\"42\":2}}],[\"value字符串创建等创建\",{\"1\":{\"914\":1}}],[\"value>\",{\"1\":{\"831\":1}}],[\"value属性提供新值\",{\"1\":{\"629\":1}}],[\"value=\",{\"1\":{\"447\":13,\"693\":1,\"970\":3}}],[\"value50\",{\"1\":{\"391\":1}}],[\"value40\",{\"1\":{\"391\":1}}],[\"value00\",{\"1\":{\"391\":1,\"393\":1}}],[\"value为文件内容\",{\"1\":{\"375\":1}}],[\"value3\",{\"1\":{\"372\":1,\"850\":2}}],[\"value20\",{\"1\":{\"391\":1}}],[\"value2\",{\"1\":{\"372\":1,\"483\":1,\"850\":4}}],[\"value10\",{\"1\":{\"391\":1}}],[\"value1\",{\"1\":{\"372\":1,\"483\":1,\"850\":4}}],[\"valuetype\",{\"1\":{\"203\":1,\"478\":2}}],[\"valuestr\",{\"1\":{\"164\":2}}],[\"values\",{\"1\":{\"164\":2,\"528\":1,\"564\":3,\"1063\":1,\"1064\":1,\"1065\":1}}],[\"value\",{\"1\":{\"59\":1,\"66\":1,\"112\":2,\"115\":2,\"125\":2,\"145\":1,\"151\":4,\"164\":2,\"167\":1,\"168\":1,\"209\":1,\"211\":1,\"215\":12,\"361\":1,\"364\":3,\"371\":1,\"373\":2,\"375\":1,\"378\":1,\"398\":1,\"401\":3,\"416\":2,\"475\":2,\"477\":1,\"478\":10,\"483\":1,\"501\":1,\"522\":2,\"552\":3,\"564\":1,\"575\":1,\"600\":2,\"629\":1,\"631\":1,\"632\":1,\"694\":5,\"710\":3,\"711\":1,\"739\":3,\"914\":2,\"1061\":1,\"1117\":1}}],[\"variable\",{\"1\":{\"985\":1}}],[\"variables\",{\"1\":{\"742\":1}}],[\"vars\",{\"1\":{\"343\":1}}],[\"var\",{\"1\":{\"8\":1,\"36\":2,\"37\":2,\"43\":3,\"46\":3,\"47\":1,\"56\":2,\"57\":2,\"64\":3,\"65\":1,\"66\":1,\"68\":1,\"73\":1,\"81\":1,\"83\":1,\"98\":1,\"112\":1,\"115\":1,\"118\":1,\"120\":2,\"123\":3,\"124\":4,\"125\":8,\"127\":1,\"128\":7,\"129\":2,\"130\":4,\"131\":6,\"144\":1,\"151\":1,\"164\":1,\"165\":5,\"166\":1,\"167\":13,\"168\":2,\"211\":3,\"215\":5,\"350\":1,\"351\":1,\"352\":3,\"353\":2,\"354\":2,\"355\":2,\"358\":3,\"361\":1,\"363\":2,\"364\":8,\"366\":3,\"367\":2,\"368\":1,\"371\":1,\"373\":2,\"375\":1,\"378\":1,\"382\":2,\"387\":2,\"392\":4,\"393\":2,\"394\":5,\"396\":3,\"401\":6,\"402\":4,\"403\":2,\"404\":4,\"405\":3,\"413\":1,\"418\":1,\"421\":2,\"424\":5,\"427\":3,\"454\":1,\"458\":1,\"459\":1,\"471\":2,\"472\":4,\"475\":2,\"477\":4,\"483\":2,\"484\":4,\"494\":2,\"495\":1,\"497\":5,\"499\":1,\"501\":9,\"503\":9,\"506\":1,\"507\":1,\"509\":2,\"511\":2,\"512\":5,\"513\":1,\"518\":2,\"519\":1,\"520\":1,\"522\":2,\"523\":1,\"524\":2,\"525\":2,\"527\":1,\"528\":5,\"547\":2,\"564\":4,\"574\":18,\"576\":7,\"577\":4,\"580\":1,\"583\":6,\"585\":1,\"586\":2,\"587\":1,\"591\":16,\"599\":2,\"600\":2,\"603\":1,\"604\":3,\"608\":1,\"609\":7,\"611\":1,\"612\":1,\"613\":6,\"615\":1,\"616\":2,\"617\":8,\"620\":1,\"621\":1,\"622\":7,\"625\":1,\"627\":4,\"630\":3,\"631\":1,\"632\":7,\"656\":4,\"660\":4,\"661\":5,\"672\":1,\"673\":1,\"676\":4,\"677\":6,\"678\":4,\"680\":3,\"681\":6,\"683\":2,\"684\":3,\"687\":2,\"691\":8,\"692\":3,\"693\":2,\"694\":2,\"710\":1,\"711\":2,\"712\":4,\"739\":2,\"746\":6,\"791\":2,\"852\":2,\"853\":3,\"854\":2,\"855\":2,\"862\":2,\"865\":1,\"867\":1,\"871\":2,\"882\":2,\"885\":8,\"886\":4,\"888\":2,\"902\":1,\"908\":3,\"910\":1,\"949\":1,\"1041\":26,\"1042\":2,\"1043\":5,\"1044\":4,\"1047\":5,\"1050\":3,\"1051\":2,\"1053\":3,\"1055\":4,\"1058\":4,\"1060\":5,\"1061\":4,\"1063\":2,\"1064\":3,\"1065\":2,\"1088\":1,\"1090\":2,\"1096\":2,\"1117\":3}}],[\"vi基本用法\",{\"1\":{\"1107\":1}}],[\"visit\",{\"1\":{\"1036\":3}}],[\"visual\",{\"1\":{\"321\":2,\"585\":1,\"955\":1,\"956\":2,\"957\":1,\"962\":3,\"963\":4,\"964\":7,\"965\":1,\"968\":8,\"970\":1,\"973\":2,\"974\":1,\"983\":3,\"985\":1,\"986\":1,\"987\":1,\"1012\":1,\"1037\":1}}],[\"visualstudiobicep\",{\"1\":{\"968\":1}}],[\"visualstudiospellcheckervs2022andlater\",{\"1\":{\"968\":2}}],[\"visualstudio和microsoft\",{\"1\":{\"585\":1}}],[\"visualstudio\",{\"0\":{\"1181\":1},\"1\":{\"241\":1,\"585\":1,\"597\":2,\"599\":1,\"957\":1,\"964\":7,\"967\":2,\"968\":19,\"973\":1,\"985\":1,\"986\":1}}],[\"viasfora\",{\"1\":{\"968\":3}}],[\"video\",{\"1\":{\"330\":2}}],[\"view=vs\",{\"1\":{\"964\":1,\"985\":1,\"986\":1}}],[\"view=aspnetcore\",{\"1\":{\"148\":1,\"382\":1,\"410\":1,\"468\":1,\"470\":1,\"474\":2,\"477\":4,\"484\":1,\"563\":1,\"629\":1,\"666\":1}}],[\"viewmodel\",{\"1\":{\"467\":1}}],[\"viewfeatures\",{\"1\":{\"404\":1,\"405\":1}}],[\"viewdatadictionary\",{\"1\":{\"404\":1,\"405\":1}}],[\"viewdata\",{\"1\":{\"404\":1,\"405\":1}}],[\"views\",{\"1\":{\"404\":1,\"405\":1}}],[\"viewname\",{\"1\":{\"404\":1,\"405\":1}}],[\"viewresult\",{\"1\":{\"404\":1,\"405\":1}}],[\"view\",{\"1\":{\"321\":1,\"350\":1,\"405\":1,\"406\":1,\"407\":1,\"467\":2,\"593\":1,\"738\":1}}],[\"vip\",{\"1\":{\"245\":1,\"943\":1}}],[\"vim\",{\"1\":{\"243\":1,\"893\":1,\"905\":1,\"948\":1,\"1109\":1,\"1136\":1}}],[\"virtualization\",{\"1\":{\"1108\":1}}],[\"virtualhost\",{\"1\":{\"391\":1,\"395\":2}}],[\"virtual\",{\"1\":{\"51\":1,\"52\":1,\"59\":1,\"152\":1,\"866\":1,\"871\":1,\"873\":1,\"874\":1}}],[\"vi\",{\"1\":{\"38\":2,\"543\":1,\"546\":1,\"549\":1,\"949\":1,\"1107\":1,\"1110\":2}}],[\"v\",{\"0\":{\"1013\":1,\"1104\":1},\"1\":{\"8\":1,\"37\":5,\"211\":2,\"215\":9,\"488\":2,\"494\":1,\"498\":1,\"645\":2,\"774\":1,\"791\":2,\"799\":1,\"815\":6,\"816\":1,\"817\":1,\"853\":3,\"854\":4,\"855\":2,\"871\":2,\"876\":1,\"885\":8,\"1037\":1,\"1070\":1,\"1102\":1,\"1108\":2,\"1117\":2}}],[\"4g\",{\"1\":{\"1110\":3}}],[\"47b9\",{\"1\":{\"1037\":1}}],[\"47\",{\"1\":{\"1036\":1}}],[\"4748075\",{\"1\":{\"801\":1}}],[\"47498376\",{\"1\":{\"345\":1,\"346\":1,\"347\":1}}],[\"4a2a\",{\"1\":{\"1036\":1}}],[\"4ark\",{\"1\":{\"243\":1}}],[\"4e06a4d17c6c1dbfb8440352e19dd2ae\",{\"1\":{\"1134\":1}}],[\"4e3d\",{\"1\":{\"1036\":1}}],[\"4e2e\",{\"1\":{\"501\":1}}],[\"4j6c9\",{\"1\":{\"1035\":1}}],[\"4xjmr\",{\"1\":{\"973\":1}}],[\"467b\",{\"1\":{\"1043\":1,\"1044\":1}}],[\"46\",{\"1\":{\"870\":1}}],[\"46522803\",{\"1\":{\"953\":1}}],[\"465\",{\"1\":{\"3\":1,\"36\":1}}],[\"42351033\",{\"1\":{\"968\":1}}],[\"42d9955\",{\"1\":{\"787\":1}}],[\"42\",{\"1\":{\"670\":1,\"673\":1,\"949\":1}}],[\"42799562\",{\"1\":{\"8\":1}}],[\"4dgzqtcm0doxrrm8nna\",{\"1\":{\"666\":1,\"681\":1}}],[\"4485167\",{\"1\":{\"870\":1}}],[\"44698\",{\"1\":{\"689\":1}}],[\"44\",{\"1\":{\"511\":3,\"512\":1,\"513\":1,\"677\":1,\"681\":1}}],[\"444\",{\"1\":{\"503\":1}}],[\"443\",{\"1\":{\"3\":2,\"36\":2,\"37\":5,\"854\":4}}],[\"48小时\",{\"1\":{\"696\":1}}],[\"48\",{\"1\":{\"501\":2,\"1012\":1}}],[\"486134845\",{\"1\":{\"137\":1}}],[\"486478189\",{\"1\":{\"137\":1}}],[\"41004932\",{\"1\":{\"1116\":1}}],[\"41c7\",{\"1\":{\"712\":1}}],[\"41\",{\"1\":{\"442\":1}}],[\"403等错误\",{\"1\":{\"954\":1}}],[\"40位\",{\"1\":{\"779\":1}}],[\"40\",{\"1\":{\"670\":2,\"672\":1,\"673\":2}}],[\"400\",{\"1\":{\"474\":1,\"475\":1,\"477\":2}}],[\"401\",{\"1\":{\"401\":4}}],[\"40960m\",{\"1\":{\"1110\":1}}],[\"4096m\",{\"1\":{\"1110\":1}}],[\"4096\",{\"1\":{\"400\":1}}],[\"404714235\",{\"1\":{\"238\":1}}],[\"4无连接\",{\"1\":{\"323\":1}}],[\"4只支持\",{\"1\":{\"322\":1}}],[\"454551215781234\",{\"1\":{\"661\":1}}],[\"4545478244\",{\"1\":{\"371\":1}}],[\"455\",{\"1\":{\"591\":4}}],[\"456\",{\"1\":{\"591\":2,\"1081\":1}}],[\"45649746\",{\"1\":{\"40\":1}}],[\"45\",{\"1\":{\"501\":2,\"964\":1}}],[\"45c7\",{\"1\":{\"211\":1,\"213\":1,\"1117\":1,\"1119\":1}}],[\"4+\",{\"1\":{\"204\":1,\"1008\":1}}],[\"4\",{\"0\":{\"93\":1,\"100\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"120\":1,\"180\":1,\"187\":1,\"198\":1,\"265\":1,\"276\":1,\"284\":1,\"285\":1,\"286\":1,\"294\":1,\"295\":1,\"296\":1,\"308\":1,\"341\":1,\"361\":1,\"369\":1,\"377\":1,\"455\":1,\"483\":1,\"500\":1,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"513\":1,\"514\":1,\"524\":1,\"526\":1,\"527\":1,\"528\":1,\"541\":1,\"548\":1,\"641\":1,\"647\":1,\"649\":1,\"650\":1,\"651\":1,\"652\":1,\"653\":2,\"654\":1,\"737\":1,\"807\":1,\"808\":1,\"809\":1,\"810\":1,\"811\":1,\"817\":1,\"823\":1,\"837\":1,\"868\":1,\"891\":1,\"898\":1,\"902\":1,\"910\":1,\"978\":1,\"1042\":1},\"1\":{\"22\":1,\"23\":1,\"26\":1,\"27\":1,\"43\":1,\"74\":1,\"134\":4,\"157\":2,\"163\":2,\"172\":1,\"194\":1,\"202\":1,\"203\":1,\"204\":4,\"205\":1,\"206\":1,\"207\":1,\"208\":2,\"209\":1,\"210\":1,\"267\":1,\"322\":1,\"327\":1,\"343\":4,\"372\":1,\"391\":1,\"394\":1,\"400\":1,\"403\":1,\"416\":1,\"446\":3,\"452\":2,\"466\":1,\"474\":1,\"486\":2,\"585\":3,\"599\":1,\"635\":2,\"688\":1,\"698\":1,\"799\":2,\"867\":1,\"868\":4,\"870\":2,\"871\":2,\"873\":1,\"874\":1,\"886\":1,\"916\":1,\"938\":2,\"944\":1,\"985\":1,\"988\":1,\"1012\":2,\"1034\":2,\"1035\":3,\"1070\":1,\"1079\":1,\"1081\":1,\"1084\":3,\"1098\":2,\"1110\":2,\"1111\":1,\"1112\":1,\"1126\":1,\"1127\":4}}],[\"pdr\",{\"1\":{\"1079\":1}}],[\"pdfmargins\",{\"1\":{\"688\":2}}],[\"pdfpagebase\",{\"1\":{\"688\":2}}],[\"pdfimage\",{\"1\":{\"688\":4}}],[\"pdf转图片\",{\"0\":{\"684\":1,\"687\":1}}],[\"pdf转word\",{\"0\":{\"683\":1}}],[\"pdf\",{\"0\":{\"682\":1,\"686\":1},\"1\":{\"682\":4,\"683\":3,\"684\":2,\"685\":1,\"687\":1,\"688\":2,\"1009\":1}}],[\"pdfdocument\",{\"1\":{\"687\":2,\"688\":2}}],[\"pdfdo\",{\"0\":{\"286\":1},\"1\":{\"286\":1}}],[\"pcie\",{\"1\":{\"1013\":1}}],[\"p4nb7\",{\"1\":{\"973\":1}}],[\"pp\",{\"1\":{\"949\":1}}],[\"pptx\",{\"1\":{\"685\":1}}],[\"ppt\",{\"1\":{\"300\":4}}],[\"ppt插件\",{\"0\":{\"299\":1}}],[\"ptp\",{\"1\":{\"928\":1}}],[\"pv的回收策略\",{\"1\":{\"914\":1}}],[\"pv的访问模式\",{\"1\":{\"914\":1}}],[\"pv提供网络存储资源\",{\"1\":{\"914\":1}}],[\"pvc的个数\",{\"1\":{\"914\":1}}],[\"pvc\",{\"1\":{\"914\":1}}],[\"pv\",{\"1\":{\"914\":2}}],[\"p一样功效\",{\"1\":{\"852\":1}}],[\"pm\",{\"1\":{\"739\":22,\"742\":3,\"743\":4,\"746\":3}}],[\"pfile\",{\"1\":{\"683\":3}}],[\"pfx\",{\"1\":{\"666\":1}}],[\"png\",{\"1\":{\"550\":2,\"551\":2,\"552\":1,\"553\":2,\"554\":6,\"556\":1,\"557\":1,\"558\":1,\"561\":5,\"563\":5}}],[\"p0\",{\"1\":{\"512\":1,\"513\":1}}],[\"pkg\",{\"1\":{\"905\":2}}],[\"pk\",{\"1\":{\"503\":2}}],[\"phonearea\",{\"1\":{\"728\":1}}],[\"phone\",{\"1\":{\"474\":1}}],[\"physicalfileprovider\",{\"1\":{\"580\":1}}],[\"physical\",{\"1\":{\"375\":2}}],[\"php\",{\"1\":{\"309\":1,\"728\":1,\"733\":1,\"734\":2,\"744\":1,\"914\":1,\"946\":1}}],[\"php配置文件中设置register\",{\"1\":{\"206\":1}}],[\"pbatard\",{\"1\":{\"270\":1}}],[\"pgsql\",{\"0\":{\"1148\":1}}],[\"pgsql小知识之jsonb\",{\"0\":{\"342\":1}}],[\"pg\",{\"1\":{\"243\":2}}],[\"py或者index\",{\"1\":{\"1019\":1}}],[\"pycurl\",{\"1\":{\"949\":2}}],[\"pygame\",{\"1\":{\"243\":1}}],[\"py\",{\"1\":{\"243\":2,\"949\":2}}],[\"python2\",{\"1\":{\"949\":2}}],[\"python等\",{\"1\":{\"798\":1}}],[\"python\",{\"1\":{\"243\":5,\"331\":4,\"543\":1,\"544\":1,\"545\":1,\"779\":1,\"949\":1}}],[\"pythonplantsvszombies\",{\"1\":{\"243\":2}}],[\"pw\",{\"1\":{\"243\":1}}],[\"pwd=1\",{\"1\":{\"1047\":2}}],[\"pwd=123456\",{\"1\":{\"661\":1,\"1048\":1}}],[\"pwd\",{\"0\":{\"1074\":1},\"1\":{\"8\":1,\"211\":1,\"752\":1,\"871\":1,\"1074\":5,\"1117\":1}}],[\"pl\",{\"1\":{\"868\":1,\"870\":1}}],[\"plugin提供\",{\"1\":{\"879\":1}}],[\"pluginbase\",{\"1\":{\"577\":1}}],[\"pluginlocation\",{\"1\":{\"577\":5}}],[\"pluginloadcontext\",{\"1\":{\"577\":3}}],[\"pluginpath\",{\"1\":{\"577\":2}}],[\"pluginprovider\",{\"1\":{\"575\":2}}],[\"plugininstance\",{\"1\":{\"574\":2,\"576\":2}}],[\"plugindll\",{\"1\":{\"574\":4,\"577\":1}}],[\"pluginhelper\",{\"1\":{\"574\":2,\"576\":1}}],[\"pluginmatadata\",{\"1\":{\"573\":2,\"574\":1}}],[\"plugin\",{\"1\":{\"573\":1,\"574\":9,\"577\":1}}],[\"pluginsdir\",{\"1\":{\"574\":2}}],[\"plugins\",{\"1\":{\"574\":2}}],[\"pluginsconfigureservice\",{\"1\":{\"573\":1,\"574\":1,\"575\":1,\"576\":1}}],[\"plugins=\",{\"1\":{\"218\":1}}],[\"plus\",{\"0\":{\"990\":1},\"1\":{\"245\":1}}],[\"platform=<platform>\",{\"1\":{\"820\":1}}],[\"plantsvszombies\",{\"1\":{\"243\":2}}],[\"play\",{\"1\":{\"218\":2,\"804\":1,\"853\":1,\"874\":1,\"875\":1}}],[\"please\",{\"1\":{\"167\":1,\"1109\":1}}],[\"pipe\",{\"1\":{\"1096\":1}}],[\"pipeline\",{\"1\":{\"167\":2}}],[\"picgo\",{\"1\":{\"951\":2,\"953\":1}}],[\"picgo就是一款比较优秀的图床工具\",{\"1\":{\"951\":1}}],[\"picgo图床\",{\"0\":{\"951\":1}}],[\"pictitle\",{\"1\":{\"734\":2}}],[\"pic\",{\"1\":{\"734\":2,\"745\":2}}],[\"picbytes\",{\"1\":{\"687\":1}}],[\"pidfile=\",{\"1\":{\"564\":1}}],[\"pid\",{\"1\":{\"564\":3,\"1099\":1}}],[\"pidada\",{\"1\":{\"21\":1}}],[\"ping\",{\"0\":{\"1098\":1},\"1\":{\"204\":2,\"840\":1,\"842\":1,\"1098\":2,\"1104\":1,\"1111\":6,\"1112\":1,\"1113\":1}}],[\"pengyunjing\",{\"1\":{\"1109\":1}}],[\"penetration\",{\"1\":{\"242\":1}}],[\"peek\",{\"1\":{\"968\":1}}],[\"pesistentvolume\",{\"1\":{\"914\":1}}],[\"pets\",{\"1\":{\"468\":1}}],[\"peter\",{\"1\":{\"9\":1,\"22\":2,\"23\":1}}],[\"person\",{\"1\":{\"1047\":2}}],[\"persistentvolumereclaimpolicy\",{\"1\":{\"914\":1}}],[\"persistentvolume\",{\"1\":{\"914\":2}}],[\"persistentvolumeclaims\",{\"1\":{\"914\":3}}],[\"persistentvolumeclaim\",{\"1\":{\"914\":1}}],[\"persistentvolumes是不属于任何namespace的\",{\"1\":{\"914\":1}}],[\"persistentvolumes等则不属于任何namespace\",{\"1\":{\"914\":1}}],[\"persistent\",{\"1\":{\"208\":2}}],[\"permissions\",{\"1\":{\"1070\":1}}],[\"permissive\",{\"1\":{\"947\":1}}],[\"permanent\",{\"1\":{\"542\":1,\"911\":2,\"1108\":3,\"1109\":2}}],[\"percent=50\",{\"1\":{\"914\":1}}],[\"percent=80\",{\"1\":{\"914\":1}}],[\"period\",{\"1\":{\"914\":2}}],[\"perforce\",{\"1\":{\"776\":1}}],[\"performance\",{\"1\":{\"382\":1}}],[\"people\",{\"1\":{\"163\":3}}],[\"powershell\",{\"1\":{\"1008\":1,\"1036\":3}}],[\"power\",{\"1\":{\"968\":2}}],[\"policycoreutils\",{\"1\":{\"949\":1}}],[\"pollingfilechangetoken通过轮询来监控文件有没有发生变化\",{\"1\":{\"375\":1}}],[\"pollingfilechangetoken\",{\"1\":{\"375\":1}}],[\"pollingfilechangetoken是ichangetoken的实现类\",{\"1\":{\"375\":1}}],[\"polly\",{\"1\":{\"210\":1}}],[\"pod1\",{\"1\":{\"927\":2}}],[\"pods\",{\"1\":{\"914\":1}}],[\"podaffinity\",{\"1\":{\"914\":1}}],[\"pod\",{\"0\":{\"926\":1,\"927\":1},\"1\":{\"914\":2,\"918\":4,\"919\":4,\"920\":1,\"925\":2,\"927\":3,\"930\":1,\"931\":2,\"935\":5,\"936\":11,\"937\":8,\"938\":3,\"939\":7,\"941\":2,\"942\":9,\"943\":8,\"944\":7,\"945\":8}}],[\"pod的多个容器使用同一个volume时\",{\"1\":{\"914\":1}}],[\"pod的设计理念是每个pod都有一个唯一的ip\",{\"1\":{\"914\":1}}],[\"pod存在\",{\"1\":{\"914\":1}}],[\"pod删除时\",{\"1\":{\"914\":1}}],[\"pod删除的时候先给其内的进程发送sigterm\",{\"1\":{\"914\":1}}],[\"pod将在一定程度上不会被调度到node上\",{\"1\":{\"914\":1}}],[\"pod具有如下特征\",{\"1\":{\"914\":1}}],[\"pod是一组紧密关联的容器集合\",{\"1\":{\"914\":1}}],[\"points\",{\"1\":{\"746\":2}}],[\"point\",{\"1\":{\"660\":1,\"746\":3}}],[\"pomelo\",{\"1\":{\"501\":2}}],[\"possible\",{\"1\":{\"564\":3}}],[\"position\",{\"1\":{\"402\":2}}],[\"postmodel\",{\"1\":{\"711\":5}}],[\"postman也提供了这样的功能\",{\"1\":{\"738\":1}}],[\"postman中如何请求\",{\"0\":{\"733\":1}}],[\"postman如何请求\",{\"0\":{\"729\":1}}],[\"postman基础功能\",{\"0\":{\"725\":1}}],[\"postman安装步骤\",{\"1\":{\"722\":1}}],[\"postman安装说明\",{\"0\":{\"721\":1}}],[\"postman都是我们的首选工具之一\",{\"1\":{\"717\":1}}],[\"postman是一款支持http协议的接口调试与测试工具\",{\"1\":{\"717\":1}}],[\"postman使用教程\",{\"0\":{\"717\":1}}],[\"postman\",{\"1\":{\"550\":1,\"721\":1,\"738\":1,\"1014\":1}}],[\"postformdataasync<resultmodel<string>>\",{\"1\":{\"617\":1}}],[\"postformdataasync<resultmodel<bool>>\",{\"1\":{\"613\":1}}],[\"postformdataasync<t>\",{\"1\":{\"613\":1,\"617\":1}}],[\"postasync\",{\"1\":{\"609\":1,\"613\":1,\"617\":1}}],[\"postasync<string>\",{\"1\":{\"694\":1}}],[\"postasync<t>\",{\"1\":{\"609\":1}}],[\"postasync<resultmodel<bool>>\",{\"1\":{\"609\":1}}],[\"postdata\",{\"1\":{\"603\":2,\"612\":2}}],[\"post请求\",{\"0\":{\"566\":1}}],[\"poststart和prestop\",{\"1\":{\"914\":1}}],[\"posts\",{\"1\":{\"503\":2,\"790\":1,\"794\":1}}],[\"post方法要求被请求服务器接受附在请求后面的数据\",{\"1\":{\"323\":1}}],[\"post\",{\"0\":{\"606\":1},\"1\":{\"155\":2,\"158\":1,\"323\":1,\"418\":1,\"421\":1,\"424\":1,\"425\":1,\"471\":1,\"474\":1,\"503\":2,\"552\":1,\"567\":1,\"569\":2,\"600\":1,\"608\":1,\"612\":1,\"616\":1,\"733\":1,\"734\":3,\"777\":1,\"941\":1}}],[\"postgresql\",{\"0\":{\"860\":1,\"1053\":1,\"1055\":1,\"1058\":1,\"1060\":1},\"1\":{\"661\":1,\"1009\":1,\"1055\":2}}],[\"postgres\",{\"1\":{\"152\":1,\"343\":1,\"824\":1,\"860\":2}}],[\"pong\",{\"1\":{\"243\":1}}],[\"portmap\",{\"1\":{\"928\":1}}],[\"port属性项\",{\"1\":{\"905\":1}}],[\"portainer\",{\"1\":{\"853\":3}}],[\"port=5000\",{\"1\":{\"1109\":2}}],[\"port=21\",{\"1\":{\"1108\":1}}],[\"port=22\",{\"1\":{\"1108\":1}}],[\"port=27017\",{\"1\":{\"217\":1}}],[\"port=9008\",{\"1\":{\"853\":1}}],[\"port=3306\",{\"1\":{\"661\":1}}],[\"port=127\",{\"1\":{\"564\":1}}],[\"port=8080\",{\"1\":{\"911\":1,\"914\":1}}],[\"port=80\",{\"1\":{\"542\":1,\"1108\":1}}],[\"ports\",{\"1\":{\"3\":1,\"36\":1,\"796\":1,\"852\":2,\"886\":1,\"923\":1,\"930\":1,\"1070\":1}}],[\"port\",{\"0\":{\"920\":1,\"921\":1},\"1\":{\"3\":2,\"36\":2,\"38\":3,\"152\":1,\"391\":1,\"392\":1,\"395\":2,\"918\":2,\"923\":2,\"930\":1,\"932\":1,\"1070\":2,\"1108\":1,\"1109\":1}}],[\"prs\",{\"1\":{\"1070\":1}}],[\"pr\",{\"1\":{\"1031\":1,\"1070\":1}}],[\"practices\",{\"1\":{\"873\":1,\"874\":2}}],[\"prtainer\",{\"1\":{\"853\":1}}],[\"press\",{\"1\":{\"1036\":2}}],[\"present\",{\"1\":{\"739\":1}}],[\"precise\",{\"1\":{\"866\":1}}],[\"precomposeunicode\",{\"1\":{\"777\":1,\"788\":1}}],[\"pre\",{\"1\":{\"742\":1,\"743\":1,\"777\":6}}],[\"pretty\",{\"1\":{\"735\":2}}],[\"pretty=short\",{\"1\":{\"22\":1,\"23\":1}}],[\"prepare\",{\"1\":{\"691\":1,\"777\":1}}],[\"prefernoschedule\",{\"1\":{\"914\":2}}],[\"preference为primary来查询主分片\",{\"1\":{\"204\":1}}],[\"prefix\",{\"1\":{\"443\":1,\"470\":1,\"477\":1}}],[\"preview2\",{\"1\":{\"710\":2}}],[\"preview\",{\"1\":{\"691\":2,\"735\":2}}],[\"previewcontrol1\",{\"1\":{\"691\":1}}],[\"previewcontrol控件\",{\"1\":{\"691\":1}}],[\"previewcontrol\",{\"1\":{\"691\":1}}],[\"previous\",{\"1\":{\"125\":1}}],[\"prevreqcount\",{\"1\":{\"427\":3}}],[\"predicate\",{\"1\":{\"151\":2,\"153\":2}}],[\"privileged=true\",{\"1\":{\"791\":1,\"853\":1,\"855\":1}}],[\"privateassets=\",{\"1\":{\"668\":1}}],[\"privateassets>\",{\"1\":{\"585\":1,\"670\":1,\"673\":1}}],[\"private>\",{\"1\":{\"577\":2}}],[\"privateprotected\",{\"1\":{\"59\":1}}],[\"private\",{\"1\":{\"49\":1,\"51\":1,\"56\":1,\"59\":1,\"61\":1,\"66\":1,\"68\":1,\"69\":1,\"83\":1,\"98\":4,\"145\":1,\"151\":1,\"152\":1,\"166\":2,\"167\":10,\"168\":3,\"348\":1,\"350\":1,\"351\":1,\"355\":1,\"363\":2,\"368\":3,\"371\":1,\"375\":1,\"377\":1,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"398\":1,\"401\":2,\"402\":2,\"403\":3,\"404\":3,\"405\":1,\"407\":1,\"413\":2,\"418\":1,\"421\":1,\"424\":1,\"427\":4,\"442\":1,\"446\":1,\"447\":1,\"456\":1,\"465\":1,\"493\":1,\"497\":2,\"501\":9,\"575\":4,\"576\":2,\"577\":2,\"580\":1,\"582\":1,\"583\":1,\"587\":1,\"591\":3,\"600\":4,\"656\":2,\"660\":5,\"661\":2,\"673\":1,\"691\":12,\"694\":1,\"1047\":2,\"1061\":2}}],[\"priority=\",{\"1\":{\"564\":1}}],[\"priority=1\",{\"1\":{\"564\":2}}],[\"priority=999\",{\"1\":{\"564\":2}}],[\"priority\",{\"1\":{\"373\":1,\"564\":3}}],[\"printinstall\",{\"1\":{\"692\":2}}],[\"printer\",{\"1\":{\"691\":1}}],[\"printdataentity<list<sbentity>>\",{\"1\":{\"693\":1}}],[\"printdata\",{\"1\":{\"691\":5}}],[\"printsettings\",{\"1\":{\"691\":2}}],[\"printset\",{\"1\":{\"691\":2}}],[\"printstacktrace\",{\"1\":{\"442\":3}}],[\"printconfig\",{\"1\":{\"691\":10}}],[\"printclient\",{\"1\":{\"689\":1,\"691\":3,\"692\":2}}],[\"printclientsetup是打包安装程序\",{\"1\":{\"689\":1}}],[\"printclientsetup不能正常加载\",{\"1\":{\"689\":1}}],[\"printclient是基于fastreport\",{\"1\":{\"689\":1}}],[\"println\",{\"1\":{\"440\":3,\"871\":1}}],[\"print\",{\"0\":{\"1171\":1},\"1\":{\"98\":1,\"99\":1,\"105\":1,\"691\":4,\"693\":4,\"899\":1,\"1074\":1}}],[\"price\",{\"1\":{\"61\":4,\"63\":1}}],[\"professional\",{\"1\":{\"963\":2,\"973\":2}}],[\"profile\",{\"1\":{\"600\":1,\"1036\":3,\"1136\":2}}],[\"profilecollection\",{\"1\":{\"583\":4}}],[\"profiles\",{\"1\":{\"552\":1,\"1036\":2}}],[\"probably\",{\"1\":{\"949\":1}}],[\"proto文件\",{\"1\":{\"674\":1,\"679\":1}}],[\"protos\",{\"1\":{\"670\":1,\"672\":1,\"673\":1}}],[\"proto3\",{\"1\":{\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"proto\",{\"1\":{\"668\":1,\"669\":1,\"671\":4,\"672\":3,\"673\":3,\"674\":3,\"676\":3,\"679\":3}}],[\"protobuf\",{\"1\":{\"668\":3,\"670\":1,\"671\":4,\"673\":1,\"674\":2,\"676\":2,\"679\":2}}],[\"protocolversion=\",{\"1\":{\"970\":2}}],[\"protocols\",{\"1\":{\"666\":1}}],[\"protocol\",{\"1\":{\"663\":1,\"664\":1,\"692\":1,\"923\":1}}],[\"protected\",{\"1\":{\"49\":1,\"51\":1,\"56\":1,\"69\":1,\"215\":4,\"475\":1,\"478\":1,\"502\":2,\"577\":2,\"585\":3,\"692\":2}}],[\"provides\",{\"1\":{\"1036\":1}}],[\"provideinstance\",{\"1\":{\"573\":1,\"574\":2,\"576\":1}}],[\"provider创建一个外部的负载均衡器\",{\"1\":{\"914\":1}}],[\"provider=sqlite\",{\"1\":{\"661\":1}}],[\"provider\",{\"1\":{\"165\":2,\"352\":3,\"493\":1,\"494\":3,\"495\":1,\"497\":5,\"499\":3,\"599\":1,\"661\":1}}],[\"proc\",{\"1\":{\"564\":1}}],[\"processdata\",{\"1\":{\"616\":1}}],[\"processes\",{\"1\":{\"564\":1}}],[\"processon\",{\"0\":{\"296\":1},\"1\":{\"296\":1}}],[\"process\",{\"1\":{\"152\":1,\"442\":1,\"564\":17,\"684\":1,\"949\":1,\"1008\":2}}],[\"progname2\",{\"1\":{\"564\":1}}],[\"prog\",{\"1\":{\"564\":1}}],[\"programs=progname1\",{\"1\":{\"564\":1}}],[\"program中修改\",{\"0\":{\"454\":1}}],[\"program\",{\"1\":{\"68\":2,\"83\":1,\"94\":4,\"95\":2,\"101\":1,\"106\":2,\"109\":1,\"112\":2,\"115\":4,\"215\":1,\"375\":1,\"376\":1,\"454\":2,\"462\":1,\"463\":1,\"547\":1,\"564\":14,\"660\":1,\"661\":1,\"876\":1,\"970\":1,\"985\":1,\"1019\":2}}],[\"programming\",{\"1\":{\"46\":1}}],[\"prompt\",{\"1\":{\"564\":1,\"1036\":1}}],[\"prompt=mysupervisor\",{\"1\":{\"564\":1}}],[\"prod\",{\"1\":{\"537\":1,\"862\":3,\"1109\":1}}],[\"productname\",{\"1\":{\"1042\":1}}],[\"productid\",{\"1\":{\"1042\":1}}],[\"productivity\",{\"1\":{\"968\":2}}],[\"production\",{\"1\":{\"389\":1}}],[\"productsalebydayentity\",{\"1\":{\"1041\":1,\"1042\":1,\"1043\":2,\"1044\":1}}],[\"productsalebydayrepository\",{\"1\":{\"1040\":2}}],[\"products\",{\"1\":{\"876\":1}}],[\"products=dotnet\",{\"1\":{\"467\":1}}],[\"product\",{\"1\":{\"273\":1}}],[\"proxy通过边缘路由器将其转发到相关的pod\",{\"1\":{\"914\":1}}],[\"proxy负责将service请求负载均衡到后端的pod中\",{\"1\":{\"914\":1}}],[\"proxy服务\",{\"1\":{\"914\":1}}],[\"proxy\",{\"1\":{\"322\":1,\"336\":1,\"543\":6,\"914\":1,\"919\":1,\"944\":4}}],[\"projects这篇文章解决即可\",{\"1\":{\"689\":1}}],[\"projects\",{\"1\":{\"689\":1}}],[\"project>\",{\"1\":{\"585\":1,\"1122\":1,\"1123\":1}}],[\"projectreference>\",{\"1\":{\"577\":2}}],[\"project\",{\"1\":{\"321\":1,\"453\":1,\"552\":1,\"777\":1,\"928\":1}}],[\"pro\",{\"1\":{\"321\":1,\"968\":1,\"973\":1,\"1110\":2}}],[\"prop发生变化时没有命中断点\",{\"1\":{\"978\":1}}],[\"prop发生变化时\",{\"1\":{\"978\":1}}],[\"propjockey\",{\"1\":{\"243\":2}}],[\"prop\",{\"1\":{\"120\":6,\"215\":4,\"616\":1,\"1061\":4}}],[\"properties\",{\"1\":{\"99\":2,\"166\":1,\"167\":1,\"470\":1,\"501\":1}}],[\"propertygroup>\",{\"1\":{\"562\":1,\"563\":1,\"577\":1,\"585\":1,\"1037\":1,\"1122\":2,\"1123\":2,\"1126\":1,\"1129\":1}}],[\"propertys\",{\"1\":{\"112\":1}}],[\"propertytype\",{\"1\":{\"111\":1}}],[\"propertyinfo1\",{\"1\":{\"99\":2}}],[\"propertyinfo\",{\"0\":{\"110\":1},\"1\":{\"88\":1,\"91\":1,\"97\":2,\"99\":2,\"112\":3}}],[\"propertyinfo的多个公用行为\",{\"1\":{\"88\":1}}],[\"property\",{\"1\":{\"64\":3,\"111\":9,\"112\":4,\"215\":2,\"400\":2,\"470\":1,\"502\":1}}],[\"p参数只查看提交的改动部分\",{\"1\":{\"23\":1}}],[\"purple\",{\"1\":{\"1036\":1}}],[\"putasync\",{\"1\":{\"622\":1}}],[\"putasync<t>\",{\"1\":{\"622\":1}}],[\"putasync<resultmodel<bool>>\",{\"1\":{\"622\":1}}],[\"put\",{\"0\":{\"619\":1},\"1\":{\"155\":1,\"158\":1,\"323\":1,\"418\":1,\"424\":1,\"425\":1,\"600\":1,\"621\":1}}],[\"pull指令\",{\"1\":{\"805\":1}}],[\"pull+push\",{\"1\":{\"798\":2}}],[\"pull\",{\"1\":{\"23\":1,\"774\":2,\"797\":1,\"798\":1,\"810\":2,\"859\":1,\"874\":1,\"884\":1,\"1070\":5}}],[\"pull命令从远程仓库获取内容时\",{\"1\":{\"23\":1}}],[\"push来推送\",{\"1\":{\"1070\":1}}],[\"push时候就不用输入用户名和密码了\",{\"1\":{\"775\":1}}],[\"push到远程仓库\",{\"1\":{\"775\":1}}],[\"pushplus\",{\"1\":{\"703\":1,\"704\":1}}],[\"pushplus集成了微信\",{\"1\":{\"703\":1}}],[\"pushed\",{\"1\":{\"331\":2}}],[\"push\",{\"1\":{\"21\":1,\"22\":2,\"23\":4,\"213\":1,\"761\":1,\"764\":1,\"765\":2,\"774\":2,\"777\":1,\"788\":1,\"798\":1,\"1070\":8,\"1119\":1}}],[\"pub拷贝内容到gitee平台的设置=>ssh公钥\",{\"1\":{\"802\":1}}],[\"pub的文件\",{\"1\":{\"802\":1}}],[\"publish\",{\"1\":{\"211\":1,\"547\":2,\"577\":1,\"1037\":4,\"1070\":6,\"1117\":1}}],[\"public\",{\"1\":{\"42\":1,\"43\":3,\"45\":1,\"46\":14,\"47\":4,\"48\":5,\"51\":1,\"52\":4,\"56\":7,\"57\":2,\"58\":2,\"59\":6,\"60\":2,\"61\":5,\"62\":2,\"63\":3,\"64\":1,\"66\":2,\"67\":2,\"68\":3,\"69\":4,\"70\":4,\"72\":6,\"73\":5,\"82\":1,\"83\":1,\"98\":15,\"102\":3,\"109\":3,\"112\":2,\"115\":4,\"119\":1,\"120\":11,\"125\":2,\"127\":4,\"128\":4,\"129\":2,\"130\":4,\"131\":4,\"145\":3,\"150\":2,\"151\":6,\"153\":2,\"155\":2,\"156\":9,\"157\":1,\"158\":1,\"164\":4,\"165\":3,\"166\":2,\"167\":4,\"168\":2,\"215\":12,\"248\":1,\"249\":1,\"250\":1,\"342\":2,\"347\":3,\"348\":2,\"349\":2,\"350\":2,\"351\":2,\"355\":2,\"363\":3,\"364\":2,\"367\":3,\"368\":14,\"371\":4,\"373\":3,\"374\":1,\"377\":2,\"378\":1,\"382\":3,\"387\":3,\"395\":7,\"398\":1,\"400\":3,\"401\":7,\"402\":5,\"403\":15,\"404\":6,\"405\":6,\"406\":1,\"407\":3,\"413\":3,\"416\":6,\"418\":3,\"421\":3,\"424\":4,\"427\":4,\"439\":1,\"440\":6,\"441\":2,\"442\":5,\"443\":1,\"446\":2,\"447\":3,\"454\":3,\"456\":2,\"458\":1,\"459\":1,\"462\":3,\"463\":3,\"468\":6,\"471\":1,\"472\":9,\"474\":7,\"475\":8,\"476\":1,\"477\":8,\"478\":5,\"481\":1,\"482\":1,\"483\":4,\"488\":3,\"489\":1,\"490\":1,\"495\":1,\"497\":3,\"499\":1,\"501\":27,\"502\":5,\"552\":5,\"573\":14,\"574\":2,\"575\":17,\"576\":3,\"577\":2,\"582\":2,\"583\":6,\"585\":7,\"586\":3,\"587\":3,\"588\":7,\"591\":5,\"599\":3,\"600\":7,\"602\":1,\"604\":1,\"607\":5,\"609\":1,\"611\":1,\"613\":1,\"615\":1,\"617\":1,\"620\":1,\"622\":1,\"625\":1,\"627\":1,\"630\":1,\"632\":1,\"639\":2,\"640\":1,\"641\":1,\"645\":2,\"646\":1,\"647\":1,\"651\":2,\"652\":1,\"653\":1,\"656\":3,\"658\":6,\"660\":8,\"661\":6,\"672\":2,\"673\":3,\"675\":2,\"676\":1,\"677\":7,\"678\":1,\"680\":2,\"681\":1,\"691\":8,\"692\":6,\"693\":1,\"694\":1,\"711\":4,\"712\":1,\"745\":2,\"863\":2,\"1040\":2,\"1045\":2,\"1047\":13,\"1061\":11}}],[\"pub文件中的内容\",{\"1\":{\"19\":1}}],[\"pub\",{\"1\":{\"19\":2,\"209\":1,\"1134\":1}}],[\"psr\",{\"1\":{\"1029\":1}}],[\"ps1\",{\"1\":{\"1008\":1}}],[\"ps命令看运行的容器\",{\"1\":{\"811\":1}}],[\"ps正常使用时候会创建一个临时文件\",{\"1\":{\"256\":1}}],[\"psp\",{\"1\":{\"243\":1}}],[\"ps\",{\"0\":{\"1101\":1},\"1\":{\"8\":1,\"204\":1,\"548\":1,\"811\":1,\"852\":2,\"899\":2,\"909\":2,\"1101\":2}}],[\"p\",{\"1\":{\"8\":1,\"16\":1,\"20\":1,\"22\":1,\"23\":1,\"37\":11,\"40\":3,\"43\":1,\"46\":1,\"68\":4,\"121\":1,\"141\":1,\"151\":3,\"155\":4,\"168\":1,\"211\":2,\"215\":1,\"217\":2,\"218\":2,\"238\":1,\"243\":1,\"327\":1,\"341\":1,\"362\":1,\"380\":2,\"382\":1,\"385\":2,\"445\":1,\"467\":1,\"477\":1,\"484\":1,\"497\":2,\"500\":1,\"536\":1,\"549\":1,\"554\":2,\"574\":6,\"576\":7,\"588\":1,\"591\":1,\"599\":1,\"656\":1,\"661\":2,\"666\":3,\"682\":1,\"709\":1,\"712\":2,\"772\":1,\"778\":1,\"781\":2,\"782\":5,\"785\":3,\"787\":2,\"791\":4,\"798\":1,\"801\":2,\"804\":1,\"806\":2,\"811\":3,\"852\":1,\"853\":4,\"854\":7,\"855\":4,\"856\":2,\"857\":1,\"858\":1,\"859\":2,\"860\":1,\"861\":1,\"862\":2,\"885\":4,\"893\":1,\"899\":2,\"902\":2,\"912\":1,\"915\":1,\"949\":1,\"954\":1,\"968\":1,\"1036\":1,\"1037\":7,\"1046\":1,\"1047\":1,\"1070\":1,\"1074\":2,\"1075\":2,\"1076\":2,\"1079\":1,\"1109\":1,\"1117\":2,\"1122\":1,\"1123\":2}}],[\"paging=\",{\"1\":{\"1041\":1}}],[\"paging\",{\"1\":{\"1041\":5}}],[\"page来编写的\",{\"1\":{\"693\":1}}],[\"page编写\",{\"1\":{\"689\":1}}],[\"page2\",{\"1\":{\"688\":2}}],[\"page\",{\"1\":{\"688\":2}}],[\"pages\",{\"1\":{\"484\":1,\"684\":3,\"687\":1,\"688\":2}}],[\"paste\",{\"1\":{\"1036\":2}}],[\"passwd\",{\"1\":{\"1096\":3}}],[\"password>\",{\"1\":{\"666\":1}}],[\"password=$\",{\"1\":{\"1070\":1}}],[\"password=sql987654\",{\"1\":{\"859\":2}}],[\"password=2\",{\"1\":{\"669\":1}}],[\"password=123\",{\"1\":{\"564\":3}}],[\"password=123456\",{\"1\":{\"217\":1,\"219\":1,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"733\":1,\"857\":1,\"858\":1,\"860\":1,\"1048\":1,\"1050\":1}}],[\"password=\",{\"1\":{\"40\":2}}],[\"password\",{\"1\":{\"3\":1,\"36\":1,\"39\":1,\"40\":1,\"48\":1,\"59\":1,\"391\":1,\"395\":2,\"474\":2,\"475\":2,\"477\":1,\"501\":5,\"503\":1,\"511\":3,\"512\":1,\"513\":1,\"518\":1,\"519\":1,\"520\":1,\"523\":1,\"528\":2,\"564\":1,\"591\":8,\"629\":1,\"666\":1,\"734\":1,\"1061\":2,\"1070\":9}}],[\"passed\",{\"1\":{\"1061\":1}}],[\"passer\",{\"1\":{\"243\":1}}],[\"pass=123456\",{\"1\":{\"853\":1}}],[\"pass\",{\"1\":{\"543\":1,\"1061\":2}}],[\"pause\",{\"1\":{\"914\":1,\"927\":1,\"1020\":1}}],[\"panes\",{\"1\":{\"1036\":2}}],[\"pane\",{\"1\":{\"1036\":4}}],[\"pan\",{\"1\":{\"272\":1,\"1110\":1}}],[\"pacsviewdapperrepository\",{\"1\":{\"1051\":1}}],[\"pacs\",{\"1\":{\"687\":1}}],[\"pack\",{\"1\":{\"321\":1,\"777\":3}}],[\"packageversion>\",{\"1\":{\"1122\":1,\"1129\":1}}],[\"packagename\",{\"1\":{\"1008\":2}}],[\"packagereference>\",{\"1\":{\"585\":1,\"670\":1,\"673\":1}}],[\"package\",{\"1\":{\"152\":34,\"321\":1,\"871\":1,\"1122\":6,\"1123\":7}}],[\"packagesources>\",{\"1\":{\"970\":2}}],[\"packages\",{\"1\":{\"4\":1,\"211\":1,\"537\":2,\"541\":1,\"862\":1,\"949\":2,\"1038\":1,\"1070\":1,\"1109\":2,\"1117\":1}}],[\"pacman\",{\"1\":{\"243\":3}}],[\"patchasync\",{\"1\":{\"632\":1}}],[\"patchasync<t>\",{\"1\":{\"632\":1}}],[\"patchasync<resultmodel<userdto>>\",{\"1\":{\"632\":1}}],[\"patch\",{\"0\":{\"629\":1},\"1\":{\"600\":1,\"631\":1}}],[\"patientidvalue\",{\"1\":{\"418\":2}}],[\"patientid\",{\"1\":{\"418\":6,\"421\":1}}],[\"paths\",{\"1\":{\"931\":2}}],[\"pathstring\",{\"1\":{\"359\":2,\"580\":1}}],[\"path=$\",{\"1\":{\"1136\":1}}],[\"path=\",{\"1\":{\"824\":1}}],[\"path=e\",{\"1\":{\"211\":1,\"1117\":1}}],[\"path的位置即可\",{\"1\":{\"812\":1}}],[\"path属性指示要更新的元素\",{\"1\":{\"629\":1}}],[\"pathformat\",{\"1\":{\"462\":1}}],[\"path\",{\"0\":{\"342\":1,\"343\":1,\"643\":1},\"1\":{\"321\":2,\"342\":3,\"343\":5,\"375\":1,\"402\":5,\"403\":8,\"405\":4,\"413\":1,\"418\":2,\"421\":1,\"424\":3,\"471\":2,\"483\":1,\"484\":1,\"494\":1,\"564\":7,\"573\":1,\"574\":8,\"576\":1,\"577\":1,\"580\":1,\"629\":1,\"631\":1,\"632\":1,\"666\":1,\"683\":2,\"684\":2,\"692\":4,\"693\":3,\"745\":1,\"812\":5,\"823\":1,\"931\":4,\"952\":1,\"1019\":1}}],[\"patterns\",{\"1\":{\"777\":1}}],[\"patternlayout\",{\"1\":{\"447\":1}}],[\"pattern\",{\"1\":{\"163\":1,\"202\":7,\"445\":1}}],[\"payload\",{\"1\":{\"153\":1,\"175\":1}}],[\"pair设备的一端配置在新启动的容器中\",{\"1\":{\"840\":1}}],[\"pair设备接口\",{\"1\":{\"840\":1}}],[\"pairs\",{\"1\":{\"564\":1}}],[\"pair\",{\"1\":{\"151\":5,\"321\":1}}],[\"paxos\",{\"1\":{\"134\":1}}],[\"par1\",{\"1\":{\"693\":1}}],[\"par\",{\"1\":{\"631\":2}}],[\"parallel\",{\"1\":{\"588\":1}}],[\"para\",{\"1\":{\"528\":1}}],[\"param=null\",{\"1\":{\"1047\":1}}],[\"param2\",{\"1\":{\"822\":1,\"829\":2,\"830\":2}}],[\"param1\",{\"1\":{\"822\":1,\"829\":2,\"830\":2}}],[\"params\",{\"1\":{\"583\":2,\"742\":1,\"743\":1}}],[\"param\",{\"1\":{\"405\":2,\"608\":2,\"621\":2,\"1047\":11}}],[\"parametername\",{\"1\":{\"655\":1}}],[\"parameternames\",{\"1\":{\"638\":1}}],[\"parameter2\",{\"1\":{\"528\":2}}],[\"parameterdescriptions\",{\"1\":{\"497\":1}}],[\"parameterlocation\",{\"1\":{\"484\":1}}],[\"parameterexception\",{\"1\":{\"424\":1,\"602\":1,\"607\":1,\"611\":1,\"615\":2,\"620\":2,\"625\":1,\"630\":1}}],[\"parameter\",{\"1\":{\"400\":1,\"497\":7,\"512\":2}}],[\"parameters=\",{\"1\":{\"524\":2}}],[\"parameters\",{\"1\":{\"109\":2,\"497\":2,\"692\":1,\"1051\":4,\"1053\":3,\"1055\":3,\"1058\":3,\"1060\":3}}],[\"parameterinfo\",{\"1\":{\"88\":1,\"104\":1,\"109\":1}}],[\"param>\",{\"1\":{\"46\":1,\"125\":2,\"151\":2,\"402\":2,\"405\":2,\"427\":3,\"472\":1,\"475\":1,\"478\":9,\"483\":2,\"501\":6,\"573\":2,\"574\":1,\"577\":2,\"580\":2,\"583\":2,\"600\":1,\"660\":4,\"672\":2,\"675\":3,\"677\":2,\"678\":1,\"680\":3,\"681\":1,\"691\":4,\"1047\":17,\"1061\":2}}],[\"partition\",{\"1\":{\"208\":1}}],[\"partial\",{\"1\":{\"49\":1,\"51\":1,\"205\":1,\"691\":1,\"692\":1}}],[\"parse方法将会引发一个异常\",{\"1\":{\"129\":1}}],[\"parse\",{\"0\":{\"129\":1},\"1\":{\"129\":2,\"402\":2,\"418\":1,\"691\":1,\"1043\":1,\"1044\":1,\"1122\":1}}],[\"parentform\",{\"1\":{\"691\":1}}],[\"parent\",{\"1\":{\"97\":1}}],[\"<build\",{\"1\":{\"1123\":1}}],[\"<branch>\",{\"1\":{\"774\":2}}],[\"<branchname>\",{\"1\":{\"773\":1}}],[\"<versionsuffix\",{\"1\":{\"1122\":3,\"1123\":3}}],[\"<versionprefix>1\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"<generatepackageonbuild>true<\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"<group>\",{\"1\":{\"825\":2,\"826\":2}}],[\"<>\",{\"0\":{\"1059\":1},\"1\":{\"1060\":1}}],[\"<https\",{\"1\":{\"1035\":1}}],[\"<unset>\",{\"1\":{\"918\":1}}],[\"<目标地址>\",{\"1\":{\"826\":2}}],[\"<源地址>\",{\"1\":{\"826\":2}}],[\"<dest>\",{\"1\":{\"825\":2}}],[\"<key>=<value>\",{\"1\":{\"821\":3,\"824\":1}}],[\"<config>\",{\"1\":{\"970\":1}}],[\"<configuration>\",{\"1\":{\"970\":2}}],[\"<conversionpattern\",{\"1\":{\"447\":1}}],[\"<command>\",{\"1\":{\"822\":1}}],[\"<certificate\",{\"1\":{\"666\":1}}],[\"<excludeassets>runtime<\",{\"1\":{\"577\":2}}],[\"<exception\",{\"1\":{\"574\":1,\"660\":3}}],[\"<enabledynamicloading>true<\",{\"1\":{\"577\":1}}],[\"<none>\",{\"1\":{\"918\":3}}],[\"<name>\",{\"1\":{\"820\":1,\"831\":1}}],[\"<nullable>enable<\",{\"1\":{\"577\":1,\"1122\":1,\"1123\":1}}],[\"<nlog\",{\"1\":{\"453\":1}}],[\"<file>\",{\"1\":{\"768\":2}}],[\"<filter\",{\"1\":{\"447\":1}}],[\"<frameworkreference\",{\"1\":{\"573\":1}}],[\"<itemgroup\",{\"1\":{\"1126\":2}}],[\"<itemgroup>\",{\"1\":{\"364\":1,\"480\":1,\"573\":1,\"577\":2,\"585\":2,\"600\":1,\"661\":1,\"670\":1,\"672\":3,\"673\":3}}],[\"<image>\",{\"1\":{\"820\":1}}],[\"<implicitusings>enable<\",{\"1\":{\"577\":1,\"1122\":1,\"1123\":1}}],[\"<input\",{\"1\":{\"693\":1}}],[\"<includeassets>runtime\",{\"1\":{\"585\":1,\"670\":1,\"673\":1}}],[\"<inheritdoc\",{\"1\":{\"501\":1}}],[\"<ispackable>false<\",{\"1\":{\"585\":1}}],[\"<androidsigningstorepass>1234567<\",{\"1\":{\"1037\":1}}],[\"<androidsigningkeypass>1234567<\",{\"1\":{\"1037\":1}}],[\"<androidsigningkeyalias>key<\",{\"1\":{\"1037\":1}}],[\"<androidsigningkeystore>myapp\",{\"1\":{\"1037\":1}}],[\"<androidkeystore>true<\",{\"1\":{\"1037\":1}}],[\"<applicationversion>1<\",{\"1\":{\"1037\":1}}],[\"<applicationdisplayversion>1\",{\"1\":{\"1037\":1}}],[\"<applicationidguid>48cf021d\",{\"1\":{\"1037\":1}}],[\"<applicationid>com\",{\"1\":{\"1037\":1}}],[\"<applicationtitle>mauiappblazor<\",{\"1\":{\"1037\":1}}],[\"<appendtofile\",{\"1\":{\"447\":1}}],[\"<appender\",{\"1\":{\"447\":2}}],[\"<add\",{\"1\":{\"970\":3}}],[\"<aspnetcorehostingmodel>outofprocess<\",{\"1\":{\"563\":1}}],[\"<aspnetcorehostingmodel>\",{\"1\":{\"563\":1}}],[\"<aspnetcorehostingmodel>inprocess<\",{\"1\":{\"562\":1}}],[\"<attribute\",{\"1\":{\"453\":7}}],[\"<tag>\",{\"1\":{\"820\":1}}],[\"<targetframeworks>netstandard1\",{\"1\":{\"1126\":1}}],[\"<targetframework>netstandard2\",{\"1\":{\"1126\":1}}],[\"<targetframework>net7\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"<targetframework>net6\",{\"1\":{\"577\":1}}],[\"<targetframework>\",{\"1\":{\"585\":1}}],[\"<target\",{\"1\":{\"453\":2}}],[\"<targets\",{\"1\":{\"453\":1}}],[\"<typeparam\",{\"1\":{\"583\":1}}],[\"<topic>\",{\"1\":{\"564\":1}}],[\"<t>\",{\"1\":{\"443\":5}}],[\"<port>\",{\"1\":{\"828\":2}}],[\"<privateassets>all<\",{\"1\":{\"585\":1,\"670\":1,\"673\":1}}],[\"<private>false<\",{\"1\":{\"577\":2}}],[\"<priority\",{\"1\":{\"447\":1}}],[\"<propertygroup\",{\"1\":{\"1037\":1}}],[\"<propertygroup>\",{\"1\":{\"562\":1,\"563\":1,\"577\":1,\"585\":1,\"1122\":2,\"1123\":2,\"1126\":1,\"1129\":1}}],[\"<protocol>\",{\"1\":{\"828\":1}}],[\"<protobuf\",{\"1\":{\"672\":2,\"673\":2}}],[\"<project\",{\"1\":{\"585\":1,\"1122\":1,\"1123\":1}}],[\"<projectreference\",{\"1\":{\"577\":2,\"585\":1}}],[\"<packageversion>1\",{\"1\":{\"1129\":1}}],[\"<packageversion><\",{\"1\":{\"1122\":1}}],[\"<package\",{\"1\":{\"1123\":1}}],[\"<packagesources>\",{\"1\":{\"970\":2}}],[\"<packagereference\",{\"1\":{\"153\":3,\"364\":3,\"371\":1,\"377\":1,\"378\":2,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"400\":1,\"413\":1,\"416\":1,\"447\":2,\"452\":2,\"480\":1,\"486\":3,\"501\":4,\"577\":1,\"585\":5,\"600\":4,\"635\":2,\"660\":1,\"661\":1,\"669\":1,\"670\":4,\"672\":1,\"673\":4,\"683\":2,\"710\":4,\"1048\":1,\"1126\":7,\"1131\":1}}],[\"<path\",{\"1\":{\"666\":1}}],[\"<param\",{\"1\":{\"46\":1,\"125\":2,\"151\":2,\"402\":2,\"405\":2,\"427\":3,\"447\":5,\"472\":1,\"475\":1,\"478\":9,\"483\":2,\"501\":6,\"573\":2,\"574\":1,\"577\":2,\"580\":2,\"583\":2,\"600\":1,\"660\":4,\"672\":2,\"675\":3,\"677\":2,\"678\":1,\"680\":3,\"681\":1,\"691\":4,\"1047\":17,\"1061\":2}}],[\"<logger\",{\"1\":{\"453\":2}}],[\"<log4net>\",{\"1\":{\"447\":1}}],[\"<level\",{\"1\":{\"447\":1}}],[\"<layout\",{\"1\":{\"447\":1}}],[\"<maxsizerollbackups\",{\"1\":{\"447\":1}}],[\"<maximumfilesize\",{\"1\":{\"447\":1}}],[\"<servicename>\",{\"1\":{\"1020\":2,\"1021\":2}}],[\"<servicename>``nssm\",{\"1\":{\"1020\":1}}],[\"<src>\",{\"1\":{\"825\":2}}],[\"<staticlogfilename\",{\"1\":{\"447\":1}}],[\"<summary>\",{\"1\":{\"43\":4,\"46\":7,\"48\":3,\"56\":3,\"57\":1,\"58\":1,\"125\":2,\"151\":3,\"215\":2,\"347\":2,\"367\":2,\"368\":12,\"401\":1,\"402\":3,\"405\":2,\"413\":1,\"416\":2,\"418\":1,\"421\":1,\"424\":1,\"427\":2,\"472\":1,\"474\":1,\"475\":3,\"477\":3,\"478\":5,\"483\":4,\"488\":2,\"493\":1,\"497\":1,\"501\":6,\"573\":18,\"574\":2,\"575\":5,\"576\":1,\"577\":3,\"580\":1,\"583\":2,\"585\":2,\"600\":1,\"639\":2,\"645\":2,\"651\":2,\"660\":6,\"661\":1,\"672\":1,\"675\":1,\"676\":1,\"677\":5,\"678\":1,\"680\":1,\"681\":1,\"691\":8,\"693\":1,\"711\":3,\"1047\":9,\"1061\":5}}],[\"<remote>\",{\"1\":{\"774\":1}}],[\"<returns>小于零\",{\"1\":{\"125\":1}}],[\"<returns><\",{\"1\":{\"46\":1,\"151\":1,\"401\":1,\"472\":1,\"475\":1,\"478\":3,\"483\":2,\"501\":4,\"574\":1,\"575\":2,\"576\":1,\"577\":2,\"580\":1,\"583\":2,\"660\":2,\"672\":1,\"675\":1,\"676\":1,\"677\":1,\"678\":1,\"680\":1,\"681\":1,\"693\":1,\"1047\":7}}],[\"<rules>\",{\"1\":{\"453\":1}}],[\"<root>\",{\"1\":{\"447\":1}}],[\"<rollingstyle\",{\"1\":{\"447\":1}}],[\"<=\",{\"1\":{\"343\":1,\"684\":1}}],[\"<\",{\"1\":{\"43\":4,\"46\":7,\"48\":3,\"56\":3,\"57\":1,\"58\":1,\"125\":7,\"151\":3,\"215\":2,\"347\":2,\"364\":1,\"367\":2,\"368\":12,\"401\":1,\"402\":3,\"405\":2,\"413\":1,\"416\":2,\"418\":1,\"421\":1,\"424\":1,\"427\":2,\"446\":6,\"447\":19,\"453\":6,\"459\":1,\"472\":1,\"474\":1,\"475\":3,\"477\":3,\"478\":5,\"480\":1,\"483\":4,\"488\":2,\"493\":1,\"497\":1,\"501\":7,\"562\":1,\"563\":1,\"573\":19,\"574\":2,\"575\":5,\"576\":1,\"577\":11,\"580\":1,\"583\":2,\"585\":7,\"600\":2,\"639\":2,\"645\":2,\"651\":2,\"660\":6,\"661\":2,\"670\":2,\"672\":4,\"673\":4,\"675\":2,\"676\":1,\"677\":5,\"678\":1,\"680\":1,\"681\":1,\"687\":1,\"688\":1,\"691\":8,\"693\":2,\"711\":3,\"970\":7,\"1037\":9,\"1041\":4,\"1047\":9,\"1061\":5,\"1096\":1,\"1122\":10,\"1123\":11,\"1126\":5,\"1129\":1,\"1131\":4}}],[\"<your\",{\"1\":{\"3\":2,\"36\":2}}],[\"<<\",{\"1\":{\"3\":1,\"862\":1}}],[\"端口的方式访问到服务\",{\"1\":{\"930\":1}}],[\"端口启动的\",{\"1\":{\"806\":1}}],[\"端口映射\",{\"1\":{\"554\":1}}],[\"端口等变量\",{\"1\":{\"1070\":1}}],[\"端口等\",{\"1\":{\"327\":1}}],[\"端口转发\",{\"1\":{\"240\":1}}],[\"端口\",{\"1\":{\"3\":1,\"217\":1,\"911\":1,\"926\":1}}],[\"=await\",{\"1\":{\"1060\":1}}],[\"=any\",{\"1\":{\"1058\":1}}],[\"=<default\",{\"1\":{\"831\":1}}],[\"=new\",{\"1\":{\"580\":1}}],[\"=null\",{\"1\":{\"215\":1}}],[\"=true\",{\"1\":{\"484\":1}}],[\"=操作符\",{\"1\":{\"68\":1}}],[\"=>\",{\"1\":{\"53\":1,\"61\":2,\"123\":11,\"125\":7,\"143\":1,\"150\":1,\"151\":6,\"153\":3,\"155\":5,\"156\":2,\"157\":8,\"158\":5,\"163\":3,\"164\":1,\"165\":5,\"215\":5,\"344\":1,\"359\":1,\"361\":1,\"364\":6,\"369\":1,\"373\":2,\"375\":1,\"382\":1,\"387\":1,\"401\":4,\"402\":2,\"403\":2,\"408\":1,\"413\":1,\"416\":1,\"418\":2,\"421\":2,\"424\":1,\"447\":3,\"454\":3,\"462\":3,\"463\":2,\"472\":1,\"477\":2,\"478\":1,\"481\":1,\"482\":2,\"483\":2,\"484\":1,\"494\":3,\"495\":2,\"497\":2,\"498\":3,\"499\":2,\"501\":3,\"502\":2,\"503\":17,\"506\":3,\"507\":2,\"518\":2,\"520\":5,\"523\":4,\"524\":2,\"525\":3,\"528\":2,\"574\":2,\"575\":4,\"580\":1,\"583\":6,\"585\":1,\"591\":10,\"600\":4,\"602\":2,\"607\":1,\"611\":1,\"615\":1,\"620\":1,\"625\":1,\"630\":2,\"638\":1,\"644\":1,\"650\":1,\"655\":1,\"656\":2,\"661\":3,\"669\":2,\"670\":2,\"672\":2,\"673\":1,\"677\":1,\"691\":6,\"710\":2,\"711\":3,\"870\":4,\"1041\":16,\"1043\":1,\"1044\":2,\"1061\":6}}],[\"==>\",{\"1\":{\"865\":3,\"867\":3}}],[\"=====================================\",{\"1\":{\"564\":1}}],[\"===\",{\"1\":{\"442\":1}}],[\"==\",{\"1\":{\"46\":1,\"79\":1,\"81\":1,\"125\":2,\"128\":2,\"166\":1,\"167\":1,\"215\":1,\"243\":1,\"361\":1,\"363\":1,\"364\":4,\"401\":4,\"402\":6,\"403\":2,\"405\":1,\"418\":4,\"424\":2,\"441\":1,\"472\":2,\"475\":2,\"478\":5,\"497\":4,\"501\":1,\"503\":9,\"506\":2,\"507\":1,\"518\":2,\"519\":2,\"520\":1,\"522\":4,\"525\":4,\"528\":2,\"574\":1,\"598\":2,\"600\":1,\"602\":2,\"603\":2,\"607\":1,\"608\":1,\"611\":1,\"612\":1,\"615\":1,\"620\":1,\"621\":1,\"625\":1,\"626\":1,\"630\":2,\"691\":12,\"949\":1,\"985\":1,\"1037\":1,\"1043\":1,\"1047\":1,\"1061\":4,\"1122\":2,\"1123\":2,\"1126\":2,\"1131\":1}}],[\"=\",{\"1\":{\"3\":12,\"17\":2,\"36\":12,\"38\":3,\"42\":2,\"43\":6,\"46\":19,\"47\":1,\"56\":5,\"57\":2,\"58\":2,\"59\":1,\"63\":2,\"64\":3,\"65\":1,\"66\":3,\"67\":1,\"68\":2,\"69\":1,\"70\":1,\"72\":6,\"73\":3,\"79\":3,\"81\":5,\"83\":2,\"94\":6,\"95\":4,\"98\":6,\"99\":16,\"101\":4,\"102\":3,\"105\":12,\"106\":15,\"109\":6,\"112\":7,\"115\":10,\"117\":2,\"118\":3,\"120\":14,\"123\":2,\"124\":4,\"125\":6,\"127\":4,\"128\":14,\"129\":6,\"130\":3,\"131\":8,\"134\":23,\"143\":1,\"144\":4,\"145\":1,\"151\":8,\"153\":4,\"160\":1,\"163\":3,\"164\":2,\"165\":5,\"166\":3,\"167\":20,\"168\":8,\"215\":4,\"243\":5,\"348\":1,\"350\":2,\"351\":2,\"352\":3,\"353\":2,\"354\":2,\"355\":3,\"358\":4,\"359\":3,\"361\":1,\"363\":4,\"364\":29,\"366\":4,\"367\":3,\"368\":12,\"369\":3,\"371\":2,\"372\":1,\"373\":12,\"375\":4,\"376\":3,\"377\":1,\"378\":1,\"381\":5,\"382\":7,\"386\":5,\"387\":7,\"392\":4,\"393\":2,\"394\":4,\"395\":1,\"396\":3,\"398\":1,\"400\":18,\"401\":23,\"402\":20,\"403\":10,\"404\":21,\"405\":9,\"407\":1,\"409\":1,\"410\":1,\"413\":8,\"416\":16,\"418\":7,\"421\":3,\"424\":7,\"427\":12,\"442\":10,\"443\":1,\"446\":7,\"447\":1,\"454\":1,\"456\":1,\"458\":2,\"459\":2,\"463\":1,\"468\":2,\"471\":2,\"472\":9,\"474\":11,\"475\":14,\"476\":1,\"477\":7,\"478\":4,\"481\":4,\"483\":4,\"484\":13,\"494\":11,\"497\":10,\"498\":5,\"501\":22,\"503\":11,\"506\":5,\"507\":3,\"509\":2,\"511\":5,\"512\":5,\"513\":1,\"518\":4,\"519\":3,\"520\":5,\"522\":8,\"523\":3,\"524\":4,\"525\":2,\"527\":5,\"528\":6,\"546\":2,\"552\":1,\"564\":2,\"574\":28,\"575\":4,\"576\":8,\"577\":9,\"579\":1,\"580\":6,\"582\":1,\"583\":9,\"585\":7,\"586\":4,\"587\":2,\"591\":43,\"597\":8,\"599\":2,\"600\":8,\"603\":1,\"604\":5,\"608\":1,\"609\":12,\"611\":2,\"612\":1,\"613\":8,\"615\":1,\"616\":2,\"617\":14,\"620\":3,\"621\":1,\"622\":12,\"625\":1,\"627\":6,\"630\":3,\"631\":1,\"632\":9,\"636\":1,\"638\":4,\"644\":3,\"650\":6,\"655\":6,\"656\":10,\"660\":8,\"661\":7,\"669\":5,\"670\":4,\"671\":2,\"672\":9,\"673\":4,\"674\":2,\"675\":5,\"676\":8,\"677\":25,\"678\":4,\"679\":2,\"680\":7,\"681\":24,\"683\":2,\"684\":6,\"687\":3,\"688\":10,\"691\":38,\"692\":9,\"693\":25,\"694\":17,\"710\":1,\"711\":8,\"712\":10,\"739\":2,\"746\":6,\"777\":8,\"779\":1,\"784\":1,\"785\":2,\"786\":2,\"788\":8,\"899\":1,\"956\":1,\"985\":2,\"1008\":1,\"1041\":36,\"1042\":11,\"1043\":13,\"1044\":7,\"1047\":19,\"1050\":4,\"1051\":3,\"1053\":3,\"1055\":5,\"1056\":1,\"1058\":4,\"1060\":6,\"1061\":6,\"1063\":6,\"1064\":6,\"1065\":6,\"1070\":2,\"1074\":1,\"1084\":9,\"1122\":1,\"1123\":1}}],[\"9b8ba09ec4fc35d67baa756e01d2cc563b856026\",{\"1\":{\"1034\":1}}],[\"9y3cm\",{\"1\":{\"973\":1}}],[\"96e7\",{\"1\":{\"1036\":2}}],[\"96\",{\"1\":{\"866\":1}}],[\"965\",{\"1\":{\"198\":1}}],[\"9c5e4be642b7\",{\"1\":{\"866\":1}}],[\"9488\",{\"1\":{\"1109\":1}}],[\"9497096\",{\"1\":{\"798\":1}}],[\"9443\",{\"1\":{\"37\":3}}],[\"9fb7a14\",{\"1\":{\"786\":1}}],[\"9ab67f8\",{\"1\":{\"782\":1}}],[\"9aed821e\",{\"1\":{\"712\":1}}],[\"98\",{\"1\":{\"700\":1,\"863\":1}}],[\"987654321\",{\"1\":{\"364\":1}}],[\"9txqipoxljy72ukpcta\",{\"1\":{\"529\":1}}],[\"9907984\",{\"1\":{\"949\":1}}],[\"99\",{\"1\":{\"700\":1}}],[\"999900\",{\"1\":{\"1036\":1}}],[\"9999\",{\"1\":{\"806\":1,\"838\":2,\"852\":1}}],[\"999\",{\"1\":{\"564\":1}}],[\"99988866\",{\"1\":{\"336\":1}}],[\"996\",{\"1\":{\"198\":1}}],[\"9500\",{\"1\":{\"331\":1}}],[\"9\",{\"0\":{\"192\":1,\"745\":1,\"828\":1,\"983\":1},\"1\":{\"202\":1,\"203\":1,\"204\":2,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"452\":1,\"585\":1,\"739\":1,\"764\":2,\"802\":2,\"863\":1,\"866\":1,\"873\":1,\"874\":1,\"914\":1,\"1081\":3,\"1126\":2}}],[\"93\",{\"1\":{\"123\":2,\"125\":3}}],[\"930094\",{\"1\":{\"46\":1}}],[\"9115\",{\"1\":{\"712\":1}}],[\"91\",{\"1\":{\"123\":2,\"125\":3,\"1110\":10,\"1113\":2}}],[\"97\",{\"1\":{\"123\":2,\"125\":3}}],[\"90\",{\"1\":{\"700\":1}}],[\"900m最小安装\",{\"1\":{\"1103\":1}}],[\"9003\",{\"1\":{\"885\":2,\"886\":1}}],[\"9005\",{\"1\":{\"853\":1}}],[\"9004\",{\"1\":{\"791\":3,\"855\":2}}],[\"9001\",{\"1\":{\"564\":2}}],[\"9000\",{\"1\":{\"331\":1,\"853\":2}}],[\"9002\",{\"1\":{\"211\":2,\"212\":1,\"213\":1,\"1117\":2,\"1118\":1,\"1119\":1}}],[\"9006否则一直访问不到\",{\"1\":{\"40\":1}}],[\"9006后就应该使用\",{\"1\":{\"40\":1}}],[\"9006是因为external\",{\"1\":{\"37\":1}}],[\"9006\",{\"1\":{\"3\":3,\"6\":1,\"36\":3,\"37\":6,\"38\":2,\"40\":2,\"854\":2}}],[\"9022\",{\"1\":{\"3\":2,\"36\":2,\"37\":3,\"38\":2}}],[\"9215572\",{\"1\":{\"467\":1}}],[\"92\",{\"1\":{\"3\":1,\"6\":1}}],[\"2b9c\",{\"1\":{\"1043\":1,\"1044\":1}}],[\"2b8fd9751c4c\",{\"1\":{\"863\":1}}],[\"2运行时\",{\"1\":{\"959\":1}}],[\"29\",{\"1\":{\"846\":2}}],[\"2954671\",{\"1\":{\"137\":1}}],[\"2f07720\",{\"1\":{\"782\":1}}],[\"2fdef\",{\"1\":{\"160\":1}}],[\"2nd\",{\"1\":{\"782\":1}}],[\"26f4\",{\"1\":{\"1036\":1}}],[\"262866034\",{\"1\":{\"968\":1}}],[\"26b\",{\"1\":{\"779\":1}}],[\"261139\",{\"1\":{\"599\":1}}],[\"2108211138\",{\"1\":{\"1121\":1}}],[\"2108211137\",{\"1\":{\"1121\":1}}],[\"2108211136\",{\"1\":{\"1121\":1}}],[\"215\",{\"1\":{\"866\":1}}],[\"214a4932132a\",{\"1\":{\"866\":1}}],[\"21\",{\"1\":{\"779\":2,\"870\":1}}],[\"21942974229794432\",{\"1\":{\"733\":1}}],[\"24gb\",{\"1\":{\"1034\":1}}],[\"24\",{\"1\":{\"746\":1,\"871\":1}}],[\"2次封装fastreport\",{\"1\":{\"689\":1}}],[\"2女\",{\"1\":{\"671\":1}}],[\"2m\",{\"1\":{\"669\":1,\"670\":1,\"672\":1}}],[\"2话题https基本上是一对\",{\"1\":{\"665\":1}}],[\"2协议没有明确规定需要使用https\",{\"1\":{\"665\":1}}],[\"2协议实现的高性能通用rpc框架\",{\"1\":{\"536\":1}}],[\"2才能接受传入的grpc调用\",{\"1\":{\"665\":1}}],[\"2作为通信协议\",{\"1\":{\"662\":1}}],[\"2s\",{\"1\":{\"588\":1}}],[\"2分钟就问\",{\"1\":{\"531\":1}}],[\"2cwithout\",{\"1\":{\"501\":1}}],[\"2秒后第一次访问key1\",{\"1\":{\"372\":1}}],[\"23026\",{\"1\":{\"1012\":1}}],[\"23\",{\"1\":{\"336\":1,\"777\":4,\"779\":2,\"799\":1,\"870\":1,\"925\":1}}],[\"239\",{\"1\":{\"333\":1}}],[\"231\",{\"1\":{\"3\":1,\"6\":1}}],[\"2简单快速\",{\"1\":{\"323\":1}}],[\"2kb\",{\"1\":{\"243\":1}}],[\"2+1\",{\"1\":{\"204\":1}}],[\"27gb发布时间\",{\"1\":{\"1035\":1}}],[\"27017\",{\"1\":{\"217\":3,\"858\":2}}],[\"27\",{\"1\":{\"197\":1}}],[\"27948784\",{\"1\":{\"137\":1}}],[\"2pc\",{\"1\":{\"134\":1}}],[\"28218f9b04b4f3f62068d7b6ce6ca5b26e35336c\",{\"1\":{\"1070\":1}}],[\"283033\",{\"1\":{\"1036\":1}}],[\"28\",{\"1\":{\"76\":1,\"873\":1}}],[\"2的n次方\",{\"1\":{\"43\":1}}],[\"20h2\",{\"0\":{\"1034\":1},\"1\":{\"1034\":12}}],[\"2014\",{\"1\":{\"873\":3,\"874\":1}}],[\"2015\",{\"1\":{\"870\":6,\"1012\":1}}],[\"2015年推出的基于http\",{\"1\":{\"536\":1}}],[\"2015年\",{\"1\":{\"267\":1}}],[\"2019可以从编译好的程序中生成一些源代码\",{\"1\":{\"986\":1}}],[\"2019企业版\",{\"1\":{\"973\":1}}],[\"2019\",{\"1\":{\"859\":1,\"973\":2,\"974\":1,\"985\":1,\"986\":1,\"1041\":11,\"1043\":4,\"1044\":2}}],[\"2017开始\",{\"1\":{\"983\":1}}],[\"2017\",{\"1\":{\"859\":2,\"1035\":18}}],[\"2018\",{\"1\":{\"721\":1}}],[\"2012因为没有更新的问题\",{\"1\":{\"1012\":1}}],[\"2012r2需要打好几个补丁\",{\"1\":{\"563\":1}}],[\"2012\",{\"1\":{\"559\":1,\"560\":2,\"1012\":5}}],[\"20101\",{\"1\":{\"524\":2}}],[\"20t22\",{\"1\":{\"511\":3,\"512\":1,\"513\":1}}],[\"2048\",{\"1\":{\"400\":1,\"1037\":1}}],[\"20w\",{\"1\":{\"209\":1}}],[\"200ms\",{\"1\":{\"739\":2}}],[\"200mb\",{\"1\":{\"204\":1,\"447\":1}}],[\"2009\",{\"1\":{\"537\":1}}],[\"2001\",{\"1\":{\"453\":1}}],[\"2003+\",{\"1\":{\"1008\":1}}],[\"2003\",{\"1\":{\"247\":1}}],[\"200\",{\"1\":{\"243\":1,\"256\":1,\"416\":4,\"577\":1,\"735\":1,\"739\":4}}],[\"2000w\",{\"1\":{\"209\":1}}],[\"2000\",{\"1\":{\"199\":2,\"201\":1,\"372\":2,\"588\":2}}],[\"2007\",{\"1\":{\"46\":1}}],[\"20\",{\"1\":{\"159\":2,\"197\":1,\"204\":1,\"381\":1,\"386\":1,\"501\":2,\"502\":1,\"739\":1,\"777\":4,\"943\":1,\"1041\":4}}],[\"202\",{\"1\":{\"866\":1}}],[\"2020\",{\"1\":{\"739\":1}}],[\"2022终版\",{\"1\":{\"692\":1}}],[\"2022最终版fastreport浏览器直接打印无须预览\",{\"1\":{\"689\":1}}],[\"2022\",{\"1\":{\"421\":1,\"963\":4,\"964\":1,\"965\":1}}],[\"202212101835404\",{\"1\":{\"135\":1}}],[\"2021年1月22日\",{\"1\":{\"877\":1}}],[\"2021年1月24日\",{\"1\":{\"365\":1}}],[\"20211007165313310\",{\"1\":{\"852\":1}}],[\"20210825175448280\",{\"1\":{\"815\":1}}],[\"20210915\",{\"1\":{\"684\":1}}],[\"2021\",{\"1\":{\"22\":4,\"442\":1,\"475\":1,\"501\":2,\"511\":3,\"512\":1,\"513\":1,\"689\":1,\"1034\":12,\"1122\":1,\"1123\":1}}],[\"2052\",{\"1\":{\"124\":1}}],[\"206\",{\"1\":{\"8\":1}}],[\"2\",{\"0\":{\"87\":1,\"89\":1,\"90\":1,\"91\":2,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"98\":1,\"105\":1,\"109\":1,\"112\":1,\"115\":1,\"118\":1,\"150\":1,\"151\":2,\"153\":1,\"178\":1,\"184\":1,\"185\":2,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"196\":1,\"213\":1,\"251\":1,\"263\":1,\"268\":1,\"273\":1,\"274\":2,\"275\":1,\"276\":1,\"279\":1,\"280\":1,\"281\":2,\"285\":1,\"290\":1,\"293\":1,\"296\":1,\"306\":1,\"311\":1,\"339\":1,\"359\":1,\"367\":1,\"372\":1,\"373\":1,\"376\":1,\"378\":1,\"379\":1,\"380\":1,\"381\":2,\"382\":1,\"386\":1,\"387\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":2,\"394\":1,\"395\":2,\"396\":2,\"397\":3,\"398\":2,\"452\":1,\"453\":2,\"454\":1,\"455\":1,\"456\":1,\"459\":1,\"462\":1,\"463\":1,\"466\":1,\"481\":1,\"487\":1,\"488\":1,\"489\":2,\"490\":1,\"494\":1,\"495\":1,\"496\":1,\"497\":1,\"498\":2,\"499\":1,\"504\":1,\"507\":1,\"510\":1,\"511\":1,\"512\":2,\"513\":1,\"520\":1,\"521\":1,\"522\":1,\"527\":1,\"539\":1,\"546\":1,\"583\":1,\"635\":1,\"636\":1,\"637\":2,\"638\":2,\"639\":3,\"640\":2,\"641\":2,\"642\":1,\"643\":1,\"644\":1,\"645\":2,\"646\":1,\"647\":1,\"648\":1,\"649\":1,\"650\":1,\"651\":2,\"652\":1,\"653\":1,\"654\":1,\"655\":1,\"656\":1,\"723\":1,\"731\":1,\"735\":1,\"805\":1,\"808\":1,\"809\":1,\"810\":2,\"811\":1,\"813\":1,\"814\":1,\"815\":2,\"816\":1,\"817\":1,\"819\":1,\"820\":1,\"821\":2,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":1,\"835\":1,\"840\":1,\"843\":1,\"845\":1,\"846\":1,\"847\":2,\"848\":1,\"851\":1,\"866\":1,\"883\":1,\"884\":1,\"885\":2,\"888\":1,\"889\":2,\"890\":1,\"891\":1,\"892\":1,\"895\":1,\"896\":2,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"905\":1,\"908\":1,\"976\":1,\"1017\":1,\"1018\":1,\"1019\":2,\"1020\":1,\"1021\":1,\"1040\":1,\"1119\":1,\"1135\":1},\"1\":{\"21\":1,\"22\":1,\"23\":1,\"26\":1,\"27\":1,\"43\":1,\"46\":1,\"74\":1,\"99\":1,\"106\":1,\"134\":30,\"152\":2,\"157\":3,\"163\":2,\"171\":1,\"172\":1,\"179\":1,\"183\":1,\"194\":1,\"202\":1,\"203\":1,\"204\":8,\"205\":1,\"206\":3,\"207\":2,\"208\":2,\"209\":3,\"210\":1,\"213\":1,\"247\":3,\"253\":1,\"322\":2,\"323\":1,\"327\":1,\"342\":4,\"343\":5,\"372\":1,\"373\":4,\"378\":2,\"391\":1,\"394\":1,\"400\":2,\"403\":1,\"413\":1,\"416\":1,\"424\":1,\"443\":1,\"446\":2,\"447\":1,\"466\":1,\"468\":4,\"486\":2,\"488\":1,\"501\":1,\"509\":1,\"524\":4,\"528\":1,\"536\":2,\"564\":5,\"585\":3,\"635\":2,\"639\":2,\"642\":1,\"645\":1,\"651\":1,\"656\":1,\"662\":1,\"663\":1,\"666\":1,\"669\":2,\"670\":4,\"672\":2,\"673\":3,\"689\":1,\"690\":1,\"693\":1,\"698\":1,\"722\":1,\"724\":1,\"730\":1,\"736\":1,\"737\":1,\"742\":1,\"754\":1,\"769\":2,\"777\":4,\"799\":2,\"802\":2,\"846\":2,\"850\":2,\"852\":1,\"862\":1,\"863\":2,\"866\":1,\"870\":4,\"873\":1,\"874\":3,\"876\":1,\"893\":1,\"916\":1,\"918\":4,\"927\":1,\"928\":1,\"931\":1,\"959\":1,\"985\":2,\"1008\":1,\"1012\":1,\"1037\":1,\"1041\":3,\"1043\":1,\"1044\":1,\"1048\":1,\"1055\":1,\"1058\":1,\"1077\":1,\"1081\":1,\"1084\":3,\"1110\":6,\"1119\":1,\"1121\":1,\"1127\":2,\"1130\":6,\"1131\":6,\"1135\":1}}],[\"22gb发布时间\",{\"1\":{\"1035\":1}}],[\"222\",{\"1\":{\"854\":2}}],[\"2222\",{\"1\":{\"528\":1}}],[\"222222\",{\"1\":{\"629\":1}}],[\"22222\",{\"1\":{\"373\":1,\"528\":1}}],[\"229\",{\"1\":{\"8\":1,\"918\":2}}],[\"22\",{\"1\":{\"3\":1,\"36\":1,\"37\":3,\"442\":1,\"528\":1,\"677\":1,\"681\":1,\"791\":2,\"796\":1,\"854\":2,\"855\":2,\"870\":1,\"1123\":1}}],[\"255\",{\"1\":{\"925\":5,\"1036\":1,\"1107\":2,\"1110\":7}}],[\"2546\",{\"1\":{\"685\":1}}],[\"256bit\",{\"1\":{\"779\":1}}],[\"256\",{\"1\":{\"400\":1}}],[\"253\",{\"1\":{\"333\":2}}],[\"25h\",{\"1\":{\"274\":1}}],[\"25\",{\"1\":{\"3\":1,\"197\":2,\"256\":1,\"870\":4}}],[\"|file|cn\",{\"1\":{\"1035\":6}}],[\"|=\",{\"1\":{\"497\":2}}],[\"|用于辅助展示算法的解析方式\",{\"1\":{\"161\":2}}],[\"||\",{\"1\":{\"125\":1,\"215\":1,\"418\":1,\"424\":1,\"478\":1,\"522\":1,\"691\":1}}],[\"|grep\",{\"1\":{\"8\":1}}],[\"|\",{\"1\":{\"3\":1,\"4\":1,\"29\":2,\"36\":1,\"43\":2,\"46\":1,\"215\":1,\"400\":1,\"477\":1,\"529\":1,\"548\":1,\"685\":2,\"779\":2,\"801\":1,\"829\":1,\"863\":2,\"865\":1,\"867\":1,\"868\":3,\"899\":2,\"909\":1,\"949\":3,\"1047\":1,\"1066\":1,\"1070\":1,\"1074\":4,\"1096\":3,\"1101\":1}}],[\"354603010\",{\"1\":{\"1036\":1}}],[\"35be\",{\"1\":{\"1036\":1}}],[\"359\",{\"1\":{\"442\":1}}],[\"31112\",{\"1\":{\"930\":1}}],[\"31122\",{\"1\":{\"923\":1}}],[\"319\",{\"1\":{\"262\":1}}],[\"3rd\",{\"1\":{\"782\":1}}],[\"39431\",{\"1\":{\"946\":1}}],[\"39\",{\"1\":{\"777\":4,\"870\":1}}],[\"3级\",{\"1\":{\"739\":1}}],[\"33577\",{\"1\":{\"1035\":1}}],[\"3306\",{\"1\":{\"857\":2}}],[\"33\",{\"1\":{\"677\":1,\"681\":1}}],[\"33m\",{\"1\":{\"3\":8}}],[\"38f8e88\",{\"1\":{\"785\":1}}],[\"38\",{\"1\":{\"669\":1,\"1012\":1}}],[\"387802716\",{\"1\":{\"137\":1}}],[\"3s\",{\"1\":{\"588\":1}}],[\"360极速浏览器x\",{\"1\":{\"1014\":1}}],[\"360\",{\"1\":{\"728\":1}}],[\"36\",{\"1\":{\"501\":3,\"779\":1}}],[\"361469957\",{\"1\":{\"137\":1}}],[\"347\",{\"1\":{\"865\":1,\"866\":1,\"867\":1,\"868\":1,\"870\":1}}],[\"3414732\",{\"1\":{\"712\":1}}],[\"3452\",{\"1\":{\"693\":1}}],[\"34\",{\"1\":{\"475\":1}}],[\"3秒后\",{\"1\":{\"372\":1}}],[\"3秒后过期\",{\"1\":{\"372\":1}}],[\"3+2\",{\"1\":{\"364\":1}}],[\"3灵活\",{\"1\":{\"323\":1}}],[\"3端到端加密协议保护用户的通信安全\",{\"1\":{\"288\":1}}],[\"32消费者版\",{\"1\":{\"1034\":1}}],[\"32商业版\",{\"1\":{\"1034\":1}}],[\"32767\",{\"1\":{\"400\":1}}],[\"32\",{\"1\":{\"400\":1}}],[\"32x\",{\"1\":{\"243\":1}}],[\"32位\",{\"1\":{\"76\":1}}],[\"32位无符号整数\",{\"1\":{\"75\":1}}],[\"32位有符号整数\",{\"1\":{\"75\":1}}],[\"3d\",{\"1\":{\"243\":1}}],[\"3框架揭秘的路由部分\",{\"1\":{\"168\":1}}],[\"3pc\",{\"1\":{\"134\":1}}],[\"303\",{\"1\":{\"1012\":1}}],[\"3072\",{\"1\":{\"1008\":1}}],[\"3017\",{\"1\":{\"923\":1}}],[\"305\",{\"1\":{\"866\":2,\"867\":1,\"868\":1,\"870\":1}}],[\"300m\",{\"1\":{\"872\":1}}],[\"300多\",{\"1\":{\"865\":1}}],[\"300\",{\"1\":{\"256\":1,\"1110\":1}}],[\"300或者以上\",{\"1\":{\"256\":1}}],[\"30001\",{\"1\":{\"922\":1}}],[\"30001访问到该服务\",{\"1\":{\"922\":1}}],[\"3000\",{\"1\":{\"217\":1,\"218\":2,\"373\":1,\"567\":1,\"568\":1,\"569\":1,\"588\":2,\"791\":2,\"796\":1,\"852\":1,\"855\":2,\"861\":2}}],[\"30\",{\"1\":{\"36\":1,\"38\":4,\"40\":1,\"197\":1,\"204\":1,\"243\":2,\"333\":2,\"427\":1,\"524\":2,\"964\":1}}],[\"3\",{\"0\":{\"88\":1,\"92\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":2,\"100\":1,\"101\":1,\"102\":1,\"106\":1,\"119\":1,\"152\":1,\"153\":1,\"179\":1,\"186\":1,\"195\":1,\"196\":1,\"197\":2,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"212\":1,\"213\":1,\"214\":2,\"264\":1,\"275\":1,\"277\":1,\"278\":1,\"279\":1,\"280\":1,\"281\":1,\"282\":2,\"283\":2,\"286\":1,\"291\":1,\"292\":1,\"293\":1,\"307\":1,\"340\":1,\"360\":1,\"368\":1,\"374\":1,\"375\":1,\"376\":1,\"382\":1,\"394\":1,\"398\":1,\"454\":1,\"458\":1,\"459\":1,\"460\":2,\"461\":2,\"462\":2,\"463\":2,\"464\":3,\"465\":3,\"466\":3,\"482\":1,\"490\":1,\"491\":1,\"492\":1,\"493\":1,\"494\":1,\"495\":2,\"496\":1,\"497\":1,\"498\":1,\"499\":2,\"503\":1,\"504\":1,\"505\":2,\"506\":2,\"507\":2,\"508\":1,\"509\":1,\"510\":1,\"511\":1,\"512\":1,\"513\":2,\"514\":2,\"515\":1,\"516\":1,\"517\":1,\"520\":1,\"521\":1,\"522\":1,\"523\":2,\"524\":1,\"525\":1,\"528\":1,\"538\":1,\"539\":1,\"540\":2,\"541\":1,\"542\":1,\"543\":1,\"544\":1,\"545\":1,\"546\":1,\"547\":2,\"548\":1,\"549\":1,\"640\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":2,\"647\":1,\"648\":1,\"652\":1,\"724\":1,\"734\":1,\"736\":1,\"806\":1,\"811\":1,\"816\":1,\"822\":1,\"833\":1,\"834\":1,\"835\":1,\"836\":2,\"837\":1,\"838\":1,\"841\":1,\"842\":1,\"843\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":2,\"867\":1,\"886\":1,\"887\":1,\"890\":1,\"893\":1,\"897\":1,\"901\":1,\"906\":1,\"907\":1,\"908\":1,\"909\":2,\"977\":1,\"1020\":1,\"1021\":1,\"1022\":1,\"1041\":1,\"1118\":1,\"1119\":1,\"1120\":2,\"1136\":1},\"1\":{\"3\":1,\"21\":1,\"22\":1,\"23\":1,\"26\":1,\"27\":1,\"36\":1,\"66\":1,\"125\":2,\"134\":6,\"152\":2,\"157\":2,\"163\":2,\"172\":1,\"180\":1,\"183\":1,\"185\":2,\"194\":1,\"201\":3,\"202\":1,\"203\":1,\"204\":5,\"205\":1,\"206\":2,\"207\":1,\"208\":2,\"209\":2,\"210\":1,\"213\":1,\"247\":1,\"322\":1,\"323\":1,\"327\":1,\"342\":1,\"343\":4,\"372\":4,\"373\":4,\"378\":2,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"403\":1,\"446\":2,\"452\":1,\"466\":1,\"474\":2,\"480\":1,\"486\":1,\"501\":1,\"528\":1,\"562\":1,\"564\":1,\"577\":1,\"585\":2,\"600\":2,\"666\":1,\"670\":1,\"673\":1,\"698\":1,\"710\":2,\"722\":1,\"724\":1,\"730\":1,\"736\":1,\"737\":1,\"754\":1,\"796\":1,\"799\":2,\"806\":1,\"834\":1,\"837\":1,\"852\":1,\"853\":1,\"865\":2,\"866\":2,\"867\":3,\"868\":4,\"870\":3,\"874\":1,\"876\":1,\"886\":1,\"893\":1,\"916\":1,\"928\":1,\"970\":2,\"985\":1,\"1035\":3,\"1041\":4,\"1055\":2,\"1058\":2,\"1070\":1,\"1077\":1,\"1079\":1,\"1081\":2,\"1109\":1,\"1110\":3,\"1113\":2,\"1119\":1,\"1126\":3,\"1127\":1,\"1130\":2}}],[\"o=r\",{\"1\":{\"1085\":1}}],[\"ozcodereview\",{\"1\":{\"968\":2}}],[\"ozcode允许搜索性能\",{\"1\":{\"968\":1}}],[\"ozcode\",{\"1\":{\"968\":1}}],[\"ovn则需要通过geneve或者stt隧道来实现的\",{\"1\":{\"928\":1}}],[\"overlay模式\",{\"1\":{\"839\":1}}],[\"overview\",{\"1\":{\"304\":1,\"712\":1,\"968\":2}}],[\"overridesealed\",{\"1\":{\"59\":1}}],[\"override\",{\"1\":{\"51\":1,\"52\":1,\"156\":1,\"215\":4,\"403\":6,\"416\":1,\"418\":1,\"421\":1,\"427\":1,\"440\":3,\"462\":1,\"463\":1,\"475\":1,\"477\":2,\"478\":4,\"502\":2,\"564\":1,\"577\":2,\"672\":1,\"675\":1,\"677\":1,\"680\":1,\"692\":5,\"711\":2}}],[\"od\",{\"1\":{\"914\":1}}],[\"osk\",{\"1\":{\"1028\":1}}],[\"oss\",{\"1\":{\"986\":1}}],[\"os\",{\"1\":{\"870\":1}}],[\"o代表的就是实体\",{\"1\":{\"529\":1}}],[\"ocid=wip\",{\"1\":{\"1031\":1}}],[\"octotree\",{\"0\":{\"1005\":1}}],[\"occurred\",{\"1\":{\"474\":1,\"475\":1}}],[\"ocelot等\",{\"1\":{\"210\":1}}],[\"otn\",{\"1\":{\"1134\":1}}],[\"other\",{\"1\":{\"1084\":2,\"1085\":2,\"1109\":1}}],[\"others\",{\"1\":{\"564\":1,\"777\":1}}],[\"otp\",{\"1\":{\"245\":1}}],[\"otype\",{\"1\":{\"101\":1,\"105\":8,\"106\":6,\"109\":3,\"112\":3,\"115\":4}}],[\"oa\",{\"1\":{\"777\":1}}],[\"oauth2\",{\"1\":{\"218\":1}}],[\"oattrbute\",{\"1\":{\"102\":2}}],[\"owner的缩写\",{\"1\":{\"1083\":1}}],[\"owner\",{\"1\":{\"208\":3,\"908\":1,\"952\":1,\"1084\":2,\"1085\":2}}],[\"okcancel\",{\"1\":{\"691\":2}}],[\"okobjectresult\",{\"1\":{\"416\":4}}],[\"okhttp\",{\"1\":{\"253\":1}}],[\"ok\",{\"1\":{\"186\":1,\"348\":1,\"349\":1,\"351\":1,\"364\":1,\"472\":1,\"476\":3,\"586\":1,\"676\":1,\"678\":1,\"681\":1,\"691\":4,\"735\":1,\"739\":1}}],[\"obsolete\",{\"1\":{\"484\":1,\"1128\":1}}],[\"observer\",{\"1\":{\"202\":1}}],[\"observablecollection<endpointdatasource>\",{\"1\":{\"165\":1}}],[\"obj\",{\"1\":{\"167\":2,\"215\":3,\"585\":2,\"661\":4}}],[\"objecttype\",{\"1\":{\"478\":8}}],[\"objectprovider<t>\",{\"1\":{\"443\":2}}],[\"objectpool\",{\"1\":{\"165\":2}}],[\"objectfactory来实例化对象\",{\"1\":{\"410\":1}}],[\"objectresult\",{\"1\":{\"403\":1,\"405\":2,\"416\":2}}],[\"object>\",{\"1\":{\"402\":2}}],[\"objectinstance\",{\"1\":{\"215\":1,\"475\":1}}],[\"object类型识别不出show方法\",{\"1\":{\"94\":1}}],[\"object\",{\"1\":{\"93\":1,\"94\":1,\"97\":2,\"101\":1,\"102\":1,\"104\":2,\"105\":6,\"106\":5,\"108\":2,\"109\":2,\"111\":2,\"112\":1,\"114\":1,\"115\":2,\"120\":2,\"164\":1,\"167\":1,\"215\":8,\"374\":1,\"410\":1,\"441\":1,\"442\":3,\"443\":4,\"475\":1,\"477\":1,\"478\":3,\"522\":1,\"585\":1,\"591\":4,\"597\":1,\"609\":1,\"622\":1,\"632\":1,\"660\":1,\"691\":7,\"778\":3,\"779\":3,\"780\":3,\"781\":1,\"782\":2,\"873\":1,\"874\":1,\"981\":1,\"1008\":1,\"1047\":4,\"1048\":1}}],[\"objects\",{\"1\":{\"45\":1,\"777\":5,\"778\":4,\"779\":5,\"780\":1,\"781\":1,\"786\":1,\"788\":1}}],[\"opaque\",{\"1\":{\"914\":1}}],[\"op属性指示操作的类型\",{\"1\":{\"629\":1}}],[\"op\",{\"1\":{\"629\":1,\"631\":1,\"632\":1}}],[\"operationfilter<swaggerdefaultvalues>\",{\"1\":{\"498\":1}}],[\"operationfiltercontext\",{\"1\":{\"497\":1}}],[\"operation\",{\"1\":{\"497\":4}}],[\"operatorprovider\",{\"1\":{\"368\":8}}],[\"operator\",{\"1\":{\"368\":3}}],[\"openresty\",{\"1\":{\"914\":1}}],[\"openread\",{\"1\":{\"574\":1,\"577\":1}}],[\"openid\",{\"1\":{\"711\":2}}],[\"openidconnectserver\",{\"1\":{\"152\":1}}],[\"openorcreate\",{\"1\":{\"684\":1}}],[\"openconnection\",{\"1\":{\"527\":1}}],[\"opencontext\",{\"1\":{\"501\":2}}],[\"opencoder\",{\"1\":{\"362\":1}}],[\"opendbsend\",{\"1\":{\"501\":2}}],[\"opendbcontext类必须公开具有\",{\"1\":{\"502\":1}}],[\"opendbcontext的\",{\"1\":{\"502\":1}}],[\"opendbcontext\",{\"1\":{\"501\":6,\"502\":2}}],[\"openapi\",{\"0\":{\"1158\":1},\"1\":{\"574\":1,\"576\":1}}],[\"openapistring\",{\"1\":{\"497\":1}}],[\"openapisecurityrequirement\",{\"1\":{\"484\":1}}],[\"openapisecurityscheme\",{\"1\":{\"484\":2}}],[\"openapioperation\",{\"1\":{\"497\":1}}],[\"openapireference\",{\"1\":{\"484\":1}}],[\"openapiinfo\",{\"1\":{\"481\":1,\"483\":1,\"484\":1,\"494\":1,\"497\":2,\"600\":1}}],[\"openwrt\",{\"1\":{\"247\":1,\"253\":1}}],[\"openemu\",{\"1\":{\"243\":3}}],[\"openstack\",{\"1\":{\"210\":1}}],[\"open\",{\"1\":{\"120\":2,\"242\":1,\"321\":1,\"564\":1,\"692\":1,\"693\":1,\"779\":1,\"1036\":3,\"1063\":1,\"1064\":1,\"1065\":2}}],[\"optimizing\",{\"1\":{\"873\":1,\"874\":3}}],[\"option\",{\"1\":{\"359\":3,\"413\":2,\"416\":1,\"418\":2,\"421\":2,\"424\":2,\"501\":2,\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"optional\",{\"1\":{\"215\":1,\"582\":3,\"583\":1}}],[\"options=\",{\"1\":{\"853\":1}}],[\"optionsbuilder\",{\"1\":{\"502\":3}}],[\"options\",{\"1\":{\"155\":4,\"164\":2,\"369\":4,\"373\":4,\"378\":1,\"382\":3,\"387\":3,\"398\":2,\"408\":5,\"416\":1,\"472\":2,\"477\":4,\"478\":4,\"494\":7,\"497\":2,\"498\":9,\"501\":2,\"502\":4,\"575\":5,\"638\":5,\"644\":4,\"650\":8,\"669\":4,\"670\":4,\"672\":4,\"711\":2,\"811\":3,\"1079\":1,\"1080\":1}}],[\"opt\",{\"1\":{\"36\":1,\"37\":1,\"38\":1,\"40\":1,\"852\":1,\"854\":1,\"925\":1}}],[\"oorder\",{\"1\":{\"120\":6}}],[\"or\",{\"1\":{\"396\":2,\"474\":1,\"475\":1,\"511\":3,\"526\":1,\"564\":6,\"768\":1,\"1044\":1}}],[\"org\",{\"1\":{\"212\":1,\"242\":1,\"335\":2,\"453\":2,\"466\":1,\"474\":1,\"475\":1,\"541\":1,\"748\":1,\"801\":1,\"802\":1,\"850\":1,\"874\":1,\"946\":2,\"951\":1,\"955\":2,\"968\":1,\"970\":5,\"1008\":1,\"1038\":1,\"1055\":1,\"1110\":1,\"1118\":1,\"1125\":1,\"1130\":1}}],[\"or语句前后没有同时使用索引\",{\"1\":{\"206\":1}}],[\"oracle\",{\"1\":{\"132\":1,\"152\":2,\"661\":1,\"1009\":1,\"1134\":2}}],[\"orm提供了对数据库的映射\",{\"1\":{\"529\":1}}],[\"orm的思想就是把表实体和数据库表直接相互转换\",{\"1\":{\"529\":1}}],[\"orm\",{\"0\":{\"120\":1,\"1159\":1},\"1\":{\"529\":2,\"1048\":1}}],[\"orderclient>\",{\"1\":{\"670\":1}}],[\"orderservice>\",{\"1\":{\"660\":1}}],[\"orderservice\",{\"1\":{\"658\":1,\"660\":4}}],[\"orderhander\",{\"1\":{\"355\":1}}],[\"orderbydescing\",{\"1\":{\"1041\":4}}],[\"orderby\",{\"1\":{\"123\":1,\"503\":1,\"522\":1}}],[\"order\",{\"1\":{\"112\":2,\"115\":4,\"120\":7,\"670\":1}}],[\"original\",{\"1\":{\"745\":1}}],[\"origin\",{\"1\":{\"21\":2,\"22\":4,\"23\":3,\"31\":1,\"761\":1,\"764\":1,\"765\":2,\"774\":4,\"788\":8}}],[\"o是否是type类的对象\",{\"1\":{\"97\":1}}],[\"outproductid\",{\"1\":{\"1042\":1}}],[\"output\",{\"1\":{\"585\":4,\"586\":1,\"587\":1,\"591\":2,\"683\":2}}],[\"outputtemplate\",{\"1\":{\"462\":1}}],[\"outside\",{\"1\":{\"949\":1,\"1070\":1}}],[\"outofprocess\",{\"1\":{\"563\":1}}],[\"out\",{\"1\":{\"55\":1,\"129\":2,\"164\":1,\"167\":3,\"366\":1,\"418\":3,\"440\":3,\"478\":1,\"547\":1,\"876\":1,\"949\":1}}],[\"out参数返回输出数据\",{\"1\":{\"51\":1}}],[\"oftype<columnattribute>\",{\"1\":{\"1061\":1}}],[\"of=\",{\"1\":{\"863\":1}}],[\"of\",{\"1\":{\"45\":1,\"167\":1,\"202\":1,\"204\":1,\"434\":1,\"436\":1,\"441\":1,\"442\":6,\"454\":1,\"564\":5,\"769\":1,\"777\":1,\"949\":1,\"964\":1,\"1070\":1}}],[\"offline\",{\"1\":{\"964\":1}}],[\"official表示是否为官方的\",{\"1\":{\"810\":1}}],[\"office\",{\"0\":{\"244\":1,\"1170\":1}}],[\"offiaccount\",{\"1\":{\"712\":1}}],[\"offile\",{\"1\":{\"245\":1}}],[\"off\",{\"1\":{\"26\":1,\"207\":2,\"447\":1,\"527\":1}}],[\"old\",{\"1\":{\"8\":1}}],[\"omnibus\",{\"1\":{\"3\":1,\"36\":1}}],[\"o\",{\"1\":{\"3\":1,\"97\":1,\"204\":2,\"209\":1,\"364\":5,\"501\":1,\"541\":1,\"655\":6,\"670\":2,\"673\":2,\"811\":2,\"846\":2,\"905\":1,\"965\":1,\"1070\":2}}],[\"only\",{\"1\":{\"1109\":1,\"1110\":1}}],[\"online\",{\"1\":{\"1024\":2}}],[\"ondelete\",{\"1\":{\"914\":2}}],[\"onfailure\",{\"1\":{\"914\":1}}],[\"onboot=yes\",{\"1\":{\"1110\":1}}],[\"onboot=\",{\"1\":{\"1107\":1}}],[\"onbuild\",{\"0\":{\"832\":1}}],[\"onbeforeinstall\",{\"1\":{\"692\":3}}],[\"ontextrequestasync\",{\"1\":{\"711\":1}}],[\"onprepareresponse\",{\"1\":{\"580\":1}}],[\"on拼接\",{\"0\":{\"518\":1}}],[\"onmodelcreating\",{\"1\":{\"502\":2}}],[\"onclick=\",{\"1\":{\"693\":1}}],[\"onconfiguring\",{\"1\":{\"502\":1}}],[\"onchallenge\",{\"1\":{\"364\":1}}],[\"onchange\",{\"1\":{\"215\":1}}],[\"ongetprintdata\",{\"1\":{\"693\":1}}],[\"onget\",{\"1\":{\"468\":1}}],[\"onresultexecutionasync\",{\"1\":{\"403\":4,\"405\":1}}],[\"onresultexecuting方法并不会直接触发\",{\"1\":{\"403\":1}}],[\"onresultexecuting\",{\"1\":{\"403\":3,\"405\":2,\"416\":1}}],[\"onresultexecuted\",{\"1\":{\"403\":4,\"405\":2,\"416\":1}}],[\"onresourceexecuted\",{\"1\":{\"402\":2}}],[\"onresourceexecuting\",{\"1\":{\"402\":2}}],[\"onresourceexecuting直接就赋值result\",{\"1\":{\"402\":1}}],[\"onafterinstall\",{\"1\":{\"692\":2}}],[\"onactionexecutionasync\",{\"1\":{\"403\":4}}],[\"onactionexecuting方法我理解是应该在这里根据条件判断去调用上面的方法\",{\"1\":{\"403\":1}}],[\"onactionexecuting\",{\"1\":{\"403\":4,\"418\":1,\"421\":1,\"424\":1,\"427\":1,\"477\":1}}],[\"onactionexecuted\",{\"1\":{\"403\":5,\"416\":1,\"424\":1,\"477\":1}}],[\"onauthorizationasync\",{\"1\":{\"401\":1}}],[\"onauthorization\",{\"1\":{\"401\":1}}],[\"onauthenticationfailed\",{\"1\":{\"364\":1}}],[\"onetab\",{\"0\":{\"991\":1}}],[\"onesubbutton\",{\"1\":{\"712\":2}}],[\"one配置文件\",{\"1\":{\"564\":1}}],[\"onexceptionasync\",{\"1\":{\"404\":1}}],[\"onexception\",{\"1\":{\"404\":1,\"413\":1}}],[\"one\",{\"1\":{\"204\":1,\"321\":2,\"474\":1,\"475\":1,\"564\":4,\"968\":1}}],[\"on\",{\"1\":{\"3\":1,\"207\":2,\"518\":4,\"520\":2,\"522\":3,\"527\":1,\"564\":2,\"768\":1,\"863\":2,\"949\":2,\"985\":1,\"1070\":3,\"1108\":1}}],[\"5e58\",{\"1\":{\"1036\":1}}],[\"5f56\",{\"1\":{\"1036\":1}}],[\"57759d60ed27d2df459571a5592f5b703f74f80e文件大小\",{\"1\":{\"1035\":1}}],[\"5版本开始\",{\"1\":{\"986\":1}}],[\"59\",{\"1\":{\"871\":1}}],[\"585\",{\"1\":{\"863\":2,\"869\":1}}],[\"54\",{\"1\":{\"870\":1}}],[\"5432\",{\"1\":{\"860\":2}}],[\"54g\",{\"1\":{\"247\":2}}],[\"5m\",{\"1\":{\"669\":1,\"670\":1,\"672\":1}}],[\"53\",{\"1\":{\"511\":3,\"512\":1,\"513\":1}}],[\"53374516\",{\"1\":{\"327\":1}}],[\"55555\",{\"1\":{\"503\":4}}],[\"5271\",{\"1\":{\"1036\":2}}],[\"52\",{\"1\":{\"475\":1}}],[\"525836469\",{\"1\":{\"137\":1}}],[\"5p\",{\"1\":{\"447\":1}}],[\"5无状态\",{\"1\":{\"323\":1}}],[\"5支持\",{\"1\":{\"322\":1}}],[\"5两种类型\",{\"1\":{\"322\":1}}],[\"50mb\",{\"1\":{\"564\":2}}],[\"500m\",{\"1\":{\"1110\":2}}],[\"5003\",{\"1\":{\"923\":1}}],[\"5001\",{\"1\":{\"666\":2,\"673\":2}}],[\"500\",{\"1\":{\"404\":2,\"413\":1,\"696\":1,\"1110\":1}}],[\"50000\",{\"1\":{\"885\":4,\"886\":2}}],[\"5000\",{\"1\":{\"151\":2,\"468\":1,\"472\":1,\"500\":4,\"540\":1,\"543\":1,\"552\":1,\"603\":2,\"604\":1,\"605\":1,\"608\":1,\"609\":1,\"612\":1,\"613\":1,\"616\":1,\"617\":1,\"621\":1,\"622\":1,\"623\":1,\"626\":1,\"627\":1,\"628\":1,\"631\":1,\"632\":1,\"642\":4,\"648\":4,\"654\":2,\"661\":1,\"914\":1}}],[\"50\",{\"1\":{\"178\":1,\"256\":1,\"442\":1,\"564\":1,\"739\":1,\"867\":1}}],[\"5skfaq6xpuarpkfw\",{\"1\":{\"577\":1}}],[\"5s\",{\"1\":{\"134\":1}}],[\"51ed\",{\"1\":{\"1037\":1}}],[\"514\",{\"1\":{\"442\":1}}],[\"512cd62ec5174c3487ac17c61aaa89e8\",{\"1\":{\"1134\":1}}],[\"512bit\",{\"1\":{\"779\":1}}],[\"512m\",{\"1\":{\"209\":1}}],[\"512\",{\"1\":{\"204\":1,\"400\":1}}],[\"51\",{\"1\":{\"125\":1}}],[\"5672\",{\"1\":{\"391\":1,\"395\":1,\"853\":2}}],[\"56\",{\"1\":{\"125\":1,\"870\":4}}],[\"5\",{\"0\":{\"94\":1,\"101\":1,\"107\":1,\"108\":1,\"109\":1,\"181\":1,\"188\":1,\"199\":1,\"266\":1,\"267\":1,\"268\":1,\"297\":1,\"298\":1,\"362\":1,\"456\":1,\"484\":1,\"515\":1,\"516\":1,\"517\":1,\"520\":1,\"521\":1,\"522\":1,\"523\":1,\"524\":1,\"542\":1,\"642\":1,\"648\":1,\"654\":1,\"655\":1,\"738\":1,\"812\":1,\"813\":1,\"814\":1,\"815\":1,\"816\":1,\"817\":1,\"824\":1,\"838\":1,\"869\":1,\"892\":1,\"899\":1,\"911\":1,\"979\":1,\"1043\":1},\"1\":{\"3\":1,\"22\":1,\"23\":1,\"26\":1,\"27\":1,\"58\":1,\"134\":2,\"148\":1,\"152\":1,\"153\":3,\"172\":1,\"179\":2,\"180\":1,\"189\":1,\"194\":1,\"202\":1,\"203\":1,\"204\":5,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"243\":1,\"327\":1,\"343\":4,\"364\":1,\"371\":1,\"381\":1,\"382\":2,\"386\":1,\"387\":1,\"391\":1,\"394\":1,\"400\":1,\"403\":1,\"427\":2,\"446\":2,\"447\":1,\"456\":1,\"466\":1,\"468\":1,\"470\":1,\"474\":3,\"475\":1,\"477\":4,\"480\":1,\"484\":1,\"486\":1,\"501\":6,\"563\":1,\"585\":2,\"661\":1,\"666\":1,\"669\":1,\"670\":1,\"672\":1,\"675\":1,\"710\":1,\"799\":1,\"873\":1,\"874\":1,\"916\":1,\"941\":1,\"985\":1,\"1034\":2,\"1043\":2,\"1081\":1,\"1126\":4,\"1127\":3,\"1131\":2}}],[\"1值\",{\"1\":{\"1035\":6}}],[\"1f8990b94aaed46303dd1cf082c949489da1928e\",{\"1\":{\"1034\":1}}],[\"1fe6e85b727b\",{\"1\":{\"501\":1}}],[\"1了\",{\"1\":{\"1012\":1}}],[\"1接收到请求后\",{\"1\":{\"928\":1}}],[\"1创建veth对\",{\"1\":{\"928\":1}}],[\"1和容器\",{\"1\":{\"927\":1}}],[\"1m\",{\"1\":{\"918\":1}}],[\"1ms\",{\"1\":{\"524\":1}}],[\"1到0\",{\"1\":{\"914\":1}}],[\"1更新镜像\",{\"1\":{\"914\":1}}],[\"1a42948d3224\",{\"1\":{\"871\":1}}],[\"1~5m\",{\"1\":{\"869\":1}}],[\"1查看容器详情\",{\"1\":{\"852\":1}}],[\"1st\",{\"1\":{\"781\":1,\"785\":1}}],[\"1sjywinformsxylzrsl\",{\"1\":{\"660\":1}}],[\"1男\",{\"1\":{\"671\":1}}],[\"1w\",{\"1\":{\"666\":1,\"681\":1}}],[\"1上基于winform实现依赖注入实例\",{\"1\":{\"660\":1}}],[\"1版本时候\",{\"1\":{\"563\":1}}],[\"1版本的兼容性\",{\"1\":{\"326\":1}}],[\"1x4cstex3aigsl9hvjhycw\",{\"1\":{\"549\":1}}],[\"1是文本格式\",{\"1\":{\"326\":1}}],[\"1的网桥\",{\"1\":{\"928\":1}}],[\"1的持久连接机制\",{\"1\":{\"534\":1}}],[\"1的长连接会遇到阻塞的问题\",{\"1\":{\"326\":1}}],[\"1的升级版\",{\"1\":{\"326\":1}}],[\"14cc045f0c885cbed0ae0b9ea4b8c6f2ff7dd854文件大小\",{\"1\":{\"1035\":1}}],[\"1402b453\",{\"1\":{\"1034\":2}}],[\"1407875772521123840\",{\"1\":{\"503\":1}}],[\"14802594\",{\"1\":{\"954\":1}}],[\"148139089\",{\"1\":{\"666\":1}}],[\"14792898\",{\"1\":{\"1046\":1}}],[\"14770969\",{\"1\":{\"912\":1}}],[\"14762665\",{\"1\":{\"893\":1,\"899\":1,\"902\":1}}],[\"149120\",{\"1\":{\"870\":1}}],[\"141574\",{\"1\":{\"870\":1}}],[\"14167625\",{\"1\":{\"500\":1}}],[\"1433\",{\"1\":{\"859\":4}}],[\"14316093\",{\"1\":{\"599\":1}}],[\"14500273\",{\"1\":{\"591\":1}}],[\"14\",{\"1\":{\"203\":1,\"209\":1,\"210\":1,\"870\":1,\"902\":1,\"1012\":1,\"1110\":4}}],[\"13485508\",{\"1\":{\"1047\":1}}],[\"13476831\",{\"1\":{\"484\":1}}],[\"13gb\",{\"1\":{\"1034\":1}}],[\"131\",{\"1\":{\"866\":1}}],[\"13523679872\",{\"1\":{\"746\":1}}],[\"1395392303090110467\",{\"1\":{\"511\":1}}],[\"1395392303090110464\",{\"1\":{\"511\":1,\"524\":2}}],[\"1395392302788120576\",{\"1\":{\"511\":1,\"512\":3,\"513\":2,\"524\":2}}],[\"13948501\",{\"1\":{\"341\":1}}],[\"13\",{\"0\":{\"832\":1},\"1\":{\"203\":1,\"205\":1,\"206\":1,\"209\":1,\"210\":1,\"870\":1,\"1126\":1}}],[\"133\",{\"1\":{\"333\":14,\"442\":1}}],[\"133124\",{\"1\":{\"124\":1}}],[\"13382565\",{\"1\":{\"40\":1}}],[\"17gb发布时间\",{\"1\":{\"1035\":1}}],[\"1703\",{\"1\":{\"1035\":12}}],[\"1703版本\",{\"0\":{\"1035\":1}}],[\"1782\",{\"1\":{\"970\":1}}],[\"1711e01\",{\"1\":{\"782\":1,\"784\":1}}],[\"171\",{\"1\":{\"333\":1,\"1136\":2}}],[\"17rd\",{\"1\":{\"265\":1,\"292\":1,\"293\":1}}],[\"17\",{\"1\":{\"203\":1,\"209\":1,\"739\":2,\"804\":1,\"1019\":1}}],[\"1755\",{\"1\":{\"135\":1}}],[\"172\",{\"1\":{\"3\":1,\"6\":1,\"8\":1,\"36\":1,\"38\":4,\"40\":1,\"918\":6,\"925\":1}}],[\"1个参数构造方法\",{\"1\":{\"98\":1}}],[\"16gb发布时间\",{\"1\":{\"1035\":2}}],[\"166\",{\"1\":{\"918\":2}}],[\"16694\",{\"1\":{\"779\":1}}],[\"16612094236\",{\"1\":{\"746\":1}}],[\"160bit\",{\"1\":{\"779\":1}}],[\"163\",{\"1\":{\"217\":1,\"219\":1,\"863\":2}}],[\"16384\",{\"1\":{\"209\":3,\"400\":1}}],[\"168\",{\"1\":{\"217\":2,\"843\":4,\"902\":1,\"1107\":3,\"1110\":12,\"1112\":2,\"1113\":2}}],[\"16\",{\"1\":{\"76\":1,\"203\":1,\"209\":1,\"400\":1,\"585\":1,\"710\":1,\"739\":1,\"843\":2,\"870\":4,\"918\":4,\"956\":1,\"968\":1,\"974\":1}}],[\"16位无符号整数\",{\"1\":{\"75\":1}}],[\"16位有符号整数\",{\"1\":{\"75\":1}}],[\"150m\",{\"1\":{\"872\":1}}],[\"15672\",{\"1\":{\"853\":1}}],[\"15585714\",{\"1\":{\"804\":1}}],[\"15812340003\",{\"1\":{\"746\":1}}],[\"15379648\",{\"1\":{\"536\":1}}],[\"15378130\",{\"1\":{\"445\":1}}],[\"1591\",{\"1\":{\"483\":1}}],[\"15t14\",{\"1\":{\"475\":1}}],[\"1515825249296e0b6eefd8453a9ff5296975cb78\",{\"1\":{\"1034\":1}}],[\"151\",{\"1\":{\"333\":14,\"867\":1,\"868\":2,\"870\":2}}],[\"15105287\",{\"1\":{\"121\":1}}],[\"15468491\",{\"1\":{\"168\":1}}],[\"15\",{\"1\":{\"76\":1,\"179\":1,\"203\":1,\"204\":1,\"209\":1,\"210\":1,\"243\":3,\"1041\":4}}],[\"1字节\",{\"1\":{\"74\":1}}],[\"124955610\",{\"1\":{\"1116\":1}}],[\"126\",{\"1\":{\"1012\":1}}],[\"126052265\",{\"1\":{\"953\":1}}],[\"1265e16d0c28\",{\"1\":{\"866\":1}}],[\"125\",{\"1\":{\"918\":2}}],[\"1252163151781167104\",{\"1\":{\"746\":1}}],[\"122\",{\"1\":{\"866\":2}}],[\"127\",{\"1\":{\"564\":1,\"926\":1,\"1112\":2}}],[\"123\",{\"1\":{\"527\":1,\"591\":2,\"1048\":1,\"1081\":1}}],[\"123456\",{\"1\":{\"129\":4,\"380\":2,\"385\":2,\"401\":2,\"424\":1,\"472\":1,\"501\":3,\"511\":3,\"512\":1,\"513\":1,\"591\":4,\"603\":2,\"604\":1,\"608\":1,\"609\":2,\"612\":1,\"613\":1,\"616\":1,\"617\":1,\"621\":1,\"622\":1,\"626\":1,\"627\":1,\"631\":1,\"632\":1,\"734\":1,\"856\":2,\"1050\":1}}],[\"123456789\",{\"1\":{\"40\":3,\"391\":1,\"395\":1}}],[\"12\",{\"0\":{\"831\":1,\"986\":1},\"1\":{\"203\":1,\"205\":1,\"206\":1,\"209\":1,\"210\":1,\"217\":1,\"333\":3,\"343\":1,\"447\":1,\"710\":1,\"779\":1,\"873\":1,\"874\":1,\"1126\":1}}],[\"12074309\",{\"1\":{\"137\":1}}],[\"128bit\",{\"1\":{\"779\":1}}],[\"128\",{\"1\":{\"400\":1}}],[\"128位\",{\"1\":{\"76\":1}}],[\"12864342\",{\"1\":{\"68\":1}}],[\"19gb发布时间\",{\"1\":{\"1035\":1}}],[\"192z\",{\"1\":{\"475\":1}}],[\"192\",{\"1\":{\"217\":1,\"333\":2,\"843\":4,\"902\":1,\"1110\":8,\"1112\":2,\"1113\":2}}],[\"19\",{\"1\":{\"46\":1,\"203\":1,\"421\":1,\"670\":1,\"673\":1,\"873\":1,\"874\":1,\"918\":2,\"1012\":1,\"1110\":1}}],[\"10441944\",{\"1\":{\"1109\":1}}],[\"104\",{\"1\":{\"1036\":1}}],[\"103095514\",{\"1\":{\"968\":1}}],[\"10以上\",{\"1\":{\"862\":1}}],[\"10b\",{\"1\":{\"779\":1}}],[\"1071552\",{\"1\":{\"870\":1}}],[\"1071632760222810112\",{\"1\":{\"746\":1}}],[\"1075383133106425856\",{\"1\":{\"746\":1}}],[\"10613212\",{\"1\":{\"902\":1}}],[\"1066370498633486336\",{\"1\":{\"746\":1}}],[\"106\",{\"1\":{\"710\":1,\"863\":2}}],[\"106237\",{\"1\":{\"593\":1}}],[\"1024\",{\"1\":{\"400\":1,\"669\":4,\"670\":4,\"672\":4}}],[\"10519681\",{\"1\":{\"382\":1}}],[\"10194187\",{\"1\":{\"1035\":2}}],[\"10194191\",{\"1\":{\"1035\":2}}],[\"10194190\",{\"1\":{\"1035\":2}}],[\"10189568\",{\"1\":{\"1035\":2}}],[\"10189569\",{\"1\":{\"1035\":2}}],[\"10189572\",{\"1\":{\"1035\":2}}],[\"101120101\",{\"1\":{\"739\":1}}],[\"101010100\",{\"1\":{\"724\":1}}],[\"101\",{\"1\":{\"333\":14,\"710\":1}}],[\"10操作系统上安装使用\",{\"1\":{\"311\":1}}],[\"1080p\",{\"1\":{\"243\":1}}],[\"10080\",{\"1\":{\"796\":2}}],[\"10022\",{\"1\":{\"791\":2,\"796\":1,\"855\":2}}],[\"100644\",{\"1\":{\"769\":1}}],[\"100\",{\"1\":{\"81\":1,\"125\":4,\"187\":1,\"192\":1,\"208\":1,\"600\":1,\"710\":1,\"739\":2,\"863\":1,\"925\":1}}],[\"10000\",{\"1\":{\"1037\":1}}],[\"1000\",{\"1\":{\"81\":1,\"208\":2,\"696\":1,\"882\":1}}],[\"10\",{\"0\":{\"193\":1,\"310\":1,\"311\":1,\"746\":1,\"829\":1,\"984\":1},\"1\":{\"46\":1,\"56\":2,\"125\":1,\"153\":1,\"179\":1,\"203\":1,\"204\":3,\"205\":1,\"206\":1,\"207\":2,\"208\":8,\"209\":1,\"210\":1,\"243\":3,\"369\":1,\"378\":1,\"421\":1,\"427\":1,\"442\":1,\"474\":2,\"475\":2,\"564\":4,\"585\":1,\"684\":1,\"739\":1,\"778\":2,\"779\":2,\"873\":1,\"874\":1,\"925\":2,\"943\":3,\"972\":1,\"1007\":1,\"1034\":12,\"1035\":12,\"1041\":4,\"1081\":1,\"1102\":1}}],[\"10943759\",{\"1\":{\"43\":1,\"46\":1}}],[\"10分钟入门\",{\"1\":{\"20\":1}}],[\"1de43\",{\"1\":{\"31\":1}}],[\"11上能够运行原生linux二进制可执行文件\",{\"1\":{\"1007\":1}}],[\"11576797\",{\"1\":{\"862\":1}}],[\"11593681\",{\"1\":{\"666\":1}}],[\"113\",{\"1\":{\"739\":1}}],[\"11601873\",{\"1\":{\"477\":1}}],[\"116177389\",{\"1\":{\"345\":1,\"346\":1,\"347\":1}}],[\"111\",{\"1\":{\"472\":1,\"525\":1,\"617\":1}}],[\"11111\",{\"1\":{\"373\":2,\"617\":1}}],[\"11000\",{\"1\":{\"209\":1}}],[\"11\",{\"0\":{\"194\":1,\"830\":1,\"985\":1},\"1\":{\"203\":1,\"205\":1,\"206\":1,\"208\":1,\"209\":1,\"210\":1,\"333\":1,\"364\":2,\"503\":2,\"600\":1,\"677\":1,\"681\":1,\"683\":1,\"710\":1,\"863\":1,\"873\":1,\"874\":1,\"944\":1,\"1041\":2}}],[\"11897704\",{\"1\":{\"666\":1}}],[\"118\",{\"1\":{\"333\":1}}],[\"11803623\",{\"1\":{\"141\":1}}],[\"118179856\",{\"1\":{\"8\":1}}],[\"11947343\",{\"1\":{\"801\":1}}],[\"119816809\",{\"1\":{\"40\":1}}],[\"11914045\",{\"1\":{\"16\":1}}],[\"1122\",{\"1\":{\"616\":1}}],[\"112233445566\",{\"1\":{\"364\":1}}],[\"112\",{\"1\":{\"36\":1,\"38\":4,\"40\":1,\"333\":6}}],[\"1804\",{\"1\":{\"1110\":2}}],[\"183\",{\"1\":{\"914\":1}}],[\"188\",{\"1\":{\"866\":1}}],[\"18854d59f6b6fc48b5c4c6a6dbe3802c\",{\"1\":{\"475\":1}}],[\"1840928\",{\"1\":{\"870\":1}}],[\"184\",{\"1\":{\"333\":6}}],[\"18\",{\"1\":{\"3\":1,\"6\":1,\"8\":1,\"200\":3,\"203\":1,\"209\":1,\"501\":1,\"683\":1,\"870\":1,\"1041\":2}}],[\"1\",{\"0\":{\"85\":1,\"86\":2,\"87\":1,\"88\":1,\"90\":1,\"97\":1,\"104\":1,\"108\":1,\"111\":1,\"114\":1,\"117\":1,\"150\":1,\"152\":1,\"177\":2,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"195\":1,\"212\":1,\"261\":2,\"262\":3,\"263\":1,\"264\":1,\"265\":1,\"266\":1,\"267\":2,\"268\":1,\"269\":1,\"270\":2,\"271\":1,\"272\":2,\"273\":1,\"277\":1,\"278\":2,\"280\":1,\"283\":1,\"284\":1,\"289\":1,\"292\":1,\"295\":1,\"298\":1,\"305\":1,\"309\":1,\"310\":1,\"338\":1,\"358\":2,\"359\":1,\"360\":1,\"361\":1,\"362\":1,\"366\":1,\"371\":2,\"372\":1,\"373\":1,\"374\":1,\"375\":2,\"376\":1,\"377\":1,\"378\":1,\"379\":1,\"380\":2,\"381\":1,\"382\":1,\"385\":1,\"387\":1,\"389\":1,\"391\":1,\"392\":2,\"393\":1,\"394\":1,\"396\":1,\"452\":1,\"458\":1,\"461\":1,\"465\":1,\"480\":2,\"481\":1,\"482\":1,\"483\":1,\"484\":1,\"486\":1,\"488\":1,\"492\":1,\"493\":2,\"494\":1,\"497\":1,\"503\":1,\"506\":1,\"509\":1,\"511\":1,\"516\":1,\"517\":2,\"520\":1,\"522\":1,\"526\":1,\"538\":1,\"545\":1,\"582\":2,\"583\":1,\"635\":1,\"636\":2,\"638\":1,\"644\":1,\"650\":1,\"722\":1,\"726\":1,\"727\":2,\"731\":1,\"734\":1,\"804\":2,\"805\":1,\"806\":1,\"807\":1,\"809\":1,\"812\":1,\"814\":1,\"818\":1,\"820\":1,\"834\":1,\"839\":1,\"842\":1,\"844\":1,\"846\":1,\"850\":1,\"865\":1,\"882\":2,\"883\":1,\"884\":2,\"885\":1,\"886\":1,\"887\":2,\"888\":1,\"893\":1,\"895\":1,\"904\":1,\"907\":1,\"975\":1,\"1016\":1,\"1018\":1,\"1039\":1,\"1118\":1,\"1134\":1},\"1\":{\"3\":1,\"21\":1,\"22\":9,\"23\":1,\"26\":1,\"27\":1,\"36\":1,\"38\":4,\"40\":2,\"43\":1,\"46\":4,\"56\":2,\"58\":1,\"63\":1,\"65\":1,\"72\":2,\"99\":1,\"105\":1,\"106\":2,\"112\":1,\"125\":6,\"134\":24,\"152\":1,\"153\":3,\"157\":3,\"164\":2,\"171\":1,\"172\":1,\"183\":1,\"194\":1,\"199\":4,\"202\":1,\"203\":1,\"204\":9,\"205\":1,\"206\":3,\"207\":2,\"208\":3,\"209\":5,\"210\":1,\"213\":3,\"217\":2,\"243\":2,\"288\":1,\"322\":1,\"323\":1,\"326\":1,\"327\":1,\"342\":2,\"343\":2,\"364\":2,\"368\":1,\"372\":1,\"373\":1,\"377\":2,\"378\":2,\"381\":2,\"382\":2,\"386\":2,\"387\":2,\"391\":1,\"394\":1,\"400\":2,\"403\":1,\"405\":1,\"413\":1,\"416\":1,\"421\":1,\"424\":1,\"427\":1,\"443\":1,\"446\":2,\"447\":4,\"453\":1,\"456\":1,\"466\":1,\"472\":1,\"474\":3,\"475\":3,\"488\":4,\"489\":2,\"494\":1,\"498\":1,\"500\":1,\"501\":1,\"511\":6,\"522\":1,\"543\":2,\"564\":6,\"577\":1,\"580\":1,\"585\":1,\"591\":4,\"598\":4,\"600\":3,\"636\":5,\"638\":2,\"639\":4,\"640\":2,\"642\":1,\"644\":2,\"645\":4,\"646\":2,\"648\":1,\"650\":2,\"651\":3,\"652\":2,\"654\":2,\"655\":1,\"656\":1,\"661\":2,\"670\":1,\"673\":1,\"675\":2,\"676\":2,\"677\":2,\"681\":2,\"684\":1,\"692\":4,\"693\":4,\"698\":1,\"710\":1,\"722\":1,\"724\":1,\"730\":1,\"734\":2,\"736\":1,\"737\":1,\"742\":1,\"746\":3,\"754\":1,\"764\":1,\"765\":1,\"769\":1,\"774\":1,\"777\":1,\"778\":2,\"779\":2,\"780\":4,\"781\":2,\"782\":2,\"798\":1,\"799\":2,\"806\":2,\"821\":1,\"834\":1,\"837\":1,\"843\":2,\"846\":2,\"850\":1,\"862\":1,\"863\":2,\"865\":2,\"870\":1,\"871\":1,\"874\":1,\"876\":1,\"893\":1,\"902\":1,\"914\":3,\"916\":1,\"919\":1,\"925\":7,\"926\":1,\"928\":2,\"931\":1,\"944\":1,\"956\":1,\"970\":2,\"985\":2,\"1008\":1,\"1012\":7,\"1019\":1,\"1036\":2,\"1037\":1,\"1041\":11,\"1043\":1,\"1044\":1,\"1047\":3,\"1055\":1,\"1058\":1,\"1060\":1,\"1081\":2,\"1084\":3,\"1107\":5,\"1110\":5,\"1119\":3,\"1121\":8,\"1126\":5,\"1127\":7,\"1129\":2,\"1130\":12,\"1131\":17,\"1135\":1}}],[\"ijftmkqah\",{\"1\":{\"1066\":1}}],[\"i<\",{\"1\":{\"985\":1}}],[\"i=0\",{\"1\":{\"985\":1}}],[\"i的值实际上变成了7\",{\"1\":{\"979\":1}}],[\"i6913538714060800515\",{\"1\":{\"746\":1}}],[\"iunitofwork\",{\"1\":{\"591\":2}}],[\"iuserentityservice\",{\"1\":{\"363\":1}}],[\"iuserservice以及userservice\",{\"1\":{\"658\":1}}],[\"iuserservice\",{\"1\":{\"82\":1,\"347\":2,\"348\":2,\"349\":1,\"350\":2,\"351\":2,\"501\":3,\"587\":1,\"658\":3,\"660\":2}}],[\"ibqre0eeg8wf\",{\"1\":{\"1037\":1}}],[\"ibaserepository<user>\",{\"1\":{\"591\":2}}],[\"ibmmq\",{\"1\":{\"152\":2}}],[\"iis\",{\"0\":{\"562\":1},\"1\":{\"559\":1,\"561\":1,\"562\":3,\"563\":3}}],[\"iis部署dotnet5\",{\"0\":{\"559\":1}}],[\"iinlineconstraintresolver服务会负责创建irouteconstraint实例\",{\"1\":{\"162\":1}}],[\"ivh\",{\"1\":{\"541\":1}}],[\"ignore\",{\"1\":{\"799\":1}}],[\"ignore要在创建git的时候创建\",{\"1\":{\"799\":1}}],[\"ignore配置文件是从上到下进行规则匹配的\",{\"1\":{\"799\":1}}],[\"ignoreapi\",{\"1\":{\"484\":1}}],[\"ignoreactivityid=true\",{\"1\":{\"453\":1}}],[\"ignorecase\",{\"1\":{\"119\":1,\"163\":1,\"777\":1,\"788\":1}}],[\"iex\",{\"1\":{\"1008\":1}}],[\"iexceptionfilter\",{\"1\":{\"404\":1,\"413\":1}}],[\"ie\",{\"1\":{\"690\":1}}],[\"ietf\",{\"1\":{\"474\":1,\"475\":1}}],[\"iendpointroutebuilder\",{\"1\":{\"167\":1}}],[\"ienumerable<t>\",{\"1\":{\"1047\":2}}],[\"ienumerable<string>>\",{\"1\":{\"484\":1}}],[\"ienumerable<string>\",{\"1\":{\"483\":1,\"489\":1,\"552\":1,\"640\":1,\"646\":1,\"652\":1,\"678\":1}}],[\"ienumerable<validationresult>\",{\"1\":{\"475\":1}}],[\"ienumerable<weatherforecast>\",{\"1\":{\"400\":1,\"401\":1,\"427\":1}}],[\"ienumerable<imessagewriter>\",{\"1\":{\"348\":1}}],[\"ienumerable\",{\"1\":{\"93\":2}}],[\"iamge\",{\"1\":{\"865\":1}}],[\"iapplicationmodelconvention\",{\"1\":{\"656\":1}}],[\"iapplicationbuilder\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"166\":3,\"167\":8,\"482\":1,\"495\":1,\"499\":1,\"580\":1}}],[\"iapiversiondescriptionprovider\",{\"1\":{\"493\":1,\"497\":2,\"499\":1}}],[\"iactionfilter\",{\"1\":{\"403\":2,\"424\":1}}],[\"iactionresult\",{\"1\":{\"350\":1,\"402\":2,\"406\":1,\"407\":1,\"474\":2}}],[\"iauthorizationfilter\",{\"1\":{\"401\":1}}],[\"iasyncstreamreader<adduserlistrequest>\",{\"1\":{\"680\":1}}],[\"iasyncstreamreader<getuserlistrequest>\",{\"1\":{\"677\":1}}],[\"iasyncexceptionfilter\",{\"1\":{\"404\":1}}],[\"iasyncactionfilter\",{\"1\":{\"403\":1}}],[\"iasyncauthorizationfilter\",{\"1\":{\"401\":1}}],[\"iasyncresourcefilter\",{\"1\":{\"402\":1}}],[\"iasyncresultfilter\",{\"1\":{\"400\":1,\"405\":1}}],[\"iaservice<>\",{\"1\":{\"344\":1}}],[\"ip为\",{\"1\":{\"1110\":1}}],[\"ipconfig\",{\"1\":{\"1107\":1,\"1111\":1,\"1112\":1}}],[\"ipaddr=192\",{\"1\":{\"1107\":1,\"1110\":1}}],[\"ipaddress\",{\"1\":{\"427\":2,\"870\":2}}],[\"ipam\",{\"1\":{\"928\":1,\"936\":1}}],[\"ip中的port概念\",{\"1\":{\"921\":1}}],[\"ipvlan\",{\"1\":{\"928\":1}}],[\"ipvs\",{\"1\":{\"919\":1,\"944\":5,\"945\":1}}],[\"ipv4\",{\"0\":{\"893\":1},\"1\":{\"893\":2}}],[\"ip仅作用于\",{\"1\":{\"919\":1}}],[\"ip所在进行通信\",{\"1\":{\"919\":1}}],[\"ip的概念\",{\"1\":{\"919\":1}}],[\"ip的service\",{\"1\":{\"914\":1}}],[\"ip和pod\",{\"1\":{\"919\":1}}],[\"iptables文件就有了\",{\"1\":{\"1109\":1}}],[\"iptables模式是在用户模式下运行的进程\",{\"1\":{\"916\":1}}],[\"iptables\",{\"1\":{\"916\":1,\"919\":1,\"944\":6,\"945\":1,\"1109\":6}}],[\"ip再怎么变\",{\"1\":{\"841\":1}}],[\"ip可能会不一样\",{\"1\":{\"841\":1}}],[\"ip内部分配如下\",{\"1\":{\"840\":1}}],[\"iputils\",{\"1\":{\"840\":1,\"842\":1}}],[\"iproductsalebydayrepository\",{\"1\":{\"1040\":2}}],[\"iproute2\",{\"1\":{\"840\":1}}],[\"iproviderbase\",{\"1\":{\"573\":2,\"574\":2,\"575\":1}}],[\"iphone\",{\"1\":{\"708\":2}}],[\"ip\",{\"0\":{\"919\":1,\"1097\":1},\"1\":{\"322\":4,\"421\":2,\"796\":1,\"839\":1,\"887\":1,\"893\":1,\"918\":3,\"919\":8,\"925\":1,\"930\":1,\"935\":3,\"936\":6,\"937\":1,\"938\":2,\"939\":2,\"941\":1,\"942\":2,\"943\":2,\"944\":4,\"945\":3,\"1036\":1,\"1070\":1,\"1105\":1,\"1110\":20,\"1112\":1,\"1113\":1}}],[\"irepository<productsalebydayentity>\",{\"1\":{\"1040\":1}}],[\"irequestmessagebase\",{\"1\":{\"711\":1}}],[\"iresponsemessagebase\",{\"1\":{\"711\":1}}],[\"irestresponse\",{\"1\":{\"472\":1}}],[\"iresultfilter\",{\"1\":{\"405\":1,\"416\":1}}],[\"iresourcefilter\",{\"1\":{\"402\":1}}],[\"ir\",{\"1\":{\"203\":1}}],[\"irouter\",{\"1\":{\"164\":1}}],[\"irouteconstraint\",{\"1\":{\"164\":1,\"165\":1}}],[\"ichangetoken\",{\"0\":{\"374\":1},\"1\":{\"374\":1}}],[\"iconfigclient\",{\"1\":{\"661\":1}}],[\"iconfigurationroot\",{\"1\":{\"582\":1}}],[\"iconfiguration\",{\"1\":{\"573\":1,\"575\":1,\"582\":1,\"583\":2,\"661\":2}}],[\"iconfigurationsection\",{\"1\":{\"393\":1}}],[\"iconfigureoptions<swaggergenoptions>\",{\"1\":{\"497\":1}}],[\"icon\",{\"1\":{\"321\":1}}],[\"icomparer<string>\",{\"1\":{\"125\":1}}],[\"icsharpcode\",{\"1\":{\"171\":2,\"986\":1}}],[\"ihttpclienthelper\",{\"1\":{\"694\":2}}],[\"ihttpclientfactory\",{\"1\":{\"600\":1}}],[\"ihttpcontextaccessor\",{\"1\":{\"363\":2}}],[\"ihttphelper\",{\"1\":{\"600\":1}}],[\"ihostenvironment\",{\"1\":{\"582\":1}}],[\"ihostbuilder\",{\"1\":{\"215\":1,\"447\":1,\"454\":1,\"462\":1,\"463\":1,\"583\":2,\"661\":1}}],[\"ihostingenvironment\",{\"1\":{\"155\":1}}],[\"ihealthcheck\",{\"1\":{\"151\":2}}],[\"iwebhostenvironment\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"156\":1,\"157\":1,\"158\":1,\"413\":2,\"482\":1,\"495\":1,\"499\":1,\"580\":1,\"582\":1}}],[\"ilv4jj6u7sf\",{\"1\":{\"263\":1}}],[\"illegalaccessexception\",{\"1\":{\"442\":1}}],[\"illegalkeywords\",{\"1\":{\"215\":2}}],[\"illegalwordssearch\",{\"1\":{\"215\":5}}],[\"ilesystem\",{\"1\":{\"204\":1}}],[\"ilspy\",{\"0\":{\"171\":1},\"1\":{\"171\":2,\"986\":2}}],[\"iloggerfactory\",{\"1\":{\"501\":1}}],[\"ilogger<testcontroller>\",{\"1\":{\"576\":2}}],[\"ilogger<smsservice>\",{\"1\":{\"575\":2}}],[\"ilogger<defaultmsgservice>\",{\"1\":{\"575\":2}}],[\"ilogger<weatherforecastcontroller>\",{\"1\":{\"447\":2,\"465\":1}}],[\"ilogger<homecontroller>\",{\"1\":{\"446\":2,\"456\":2,\"458\":1}}],[\"ilogger<modelvalidationfilter>\",{\"1\":{\"418\":2,\"421\":2}}],[\"ilogger<customexceptionfilter>\",{\"1\":{\"413\":2}}],[\"ilogger<firstcontroller>\",{\"1\":{\"407\":2}}],[\"ilogger<exception\",{\"1\":{\"404\":4}}],[\"ilogger<endpointmiddleware>\",{\"1\":{\"168\":1}}],[\"ilogger<endpointroutingmiddleware>\",{\"1\":{\"167\":1}}],[\"ilogger<action\",{\"1\":{\"403\":6}}],[\"ilogger<authorization\",{\"1\":{\"401\":4}}],[\"ilogger<result\",{\"1\":{\"402\":2}}],[\"ilogger\",{\"1\":{\"167\":1,\"168\":1,\"446\":1}}],[\"il\",{\"1\":{\"139\":1}}],[\"i++\",{\"1\":{\"125\":2,\"459\":1,\"675\":1,\"684\":1,\"687\":1,\"688\":1,\"693\":1,\"985\":1}}],[\"isbool\",{\"1\":{\"850\":2}}],[\"ismatch\",{\"1\":{\"656\":1}}],[\"isos\",{\"1\":{\"1103\":1}}],[\"iso|3401973760|5dd08371af9b6e953f879e574d593607|\",{\"1\":{\"1035\":1}}],[\"iso|3456649216|945c69abee0efe9b07cf5b4c6e141262|\",{\"1\":{\"1035\":1}}],[\"iso|3394940928|2e72355cda5373b9f778d36cf03b86fd|\",{\"1\":{\"1035\":1}}],[\"iso|4470315008|ba9d2ab8865b80c2227e6e08bb2dd2ae|\",{\"1\":{\"1035\":1}}],[\"iso|4498978816|98f0ead4122b9b9d72fd08d22657ab45|\",{\"1\":{\"1035\":1}}],[\"iso|4587292672|373b263d307f6aa2486a74e557dd22c9|\",{\"1\":{\"1035\":1}}],[\"iso\",{\"1\":{\"537\":1,\"1034\":8,\"1035\":6,\"1110\":10}}],[\"isrequired\",{\"1\":{\"497\":1,\"502\":1}}],[\"isreusable\",{\"1\":{\"409\":1}}],[\"istrue\",{\"1\":{\"598\":1}}],[\"istringlocalizer<homecontroller>\",{\"1\":{\"145\":2}}],[\"istypematch\",{\"1\":{\"443\":2}}],[\"isfailed\",{\"1\":{\"364\":1}}],[\"islide\",{\"0\":{\"300\":1},\"1\":{\"300\":1}}],[\"isvalid\",{\"0\":{\"476\":1},\"1\":{\"215\":7,\"418\":1,\"475\":1,\"476\":1,\"477\":1,\"503\":1,\"511\":3,\"512\":1,\"513\":1,\"591\":6}}],[\"isvirtual\",{\"1\":{\"104\":1}}],[\"isdebug\",{\"1\":{\"710\":2}}],[\"isdefault\",{\"1\":{\"518\":2}}],[\"isdefined\",{\"1\":{\"97\":1,\"102\":1,\"104\":1,\"108\":1,\"111\":1,\"114\":1}}],[\"isdeprecated\",{\"1\":{\"497\":2}}],[\"isdevelopment\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"413\":1,\"482\":1,\"495\":1,\"499\":1}}],[\"isempty\",{\"1\":{\"597\":1}}],[\"iserverstreamwriter<adduserlistresponse>\",{\"1\":{\"680\":1}}],[\"iserverstreamwriter<customerresponse>\",{\"1\":{\"675\":1}}],[\"iservice\",{\"1\":{\"575\":3,\"577\":2}}],[\"iservicescopefactory\",{\"1\":{\"355\":2}}],[\"iserviceprovider获取\",{\"0\":{\"351\":1}}],[\"iserviceprovider负责提供实例\",{\"1\":{\"349\":1}}],[\"iserviceprovider\",{\"1\":{\"349\":1,\"351\":2,\"367\":1,\"660\":1,\"711\":1}}],[\"iservicecollection负责注册\",{\"1\":{\"349\":1}}],[\"iservicecollection和\",{\"1\":{\"349\":1}}],[\"iservicecollection\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"155\":1,\"156\":1,\"164\":1,\"165\":4,\"166\":1,\"349\":1,\"371\":1,\"373\":1,\"377\":1,\"382\":1,\"387\":1,\"481\":1,\"502\":1,\"573\":1,\"575\":1,\"600\":1,\"660\":1}}],[\"iserializable\",{\"1\":{\"203\":1}}],[\"isenabled=5\",{\"1\":{\"671\":1}}],[\"isenabled\",{\"1\":{\"167\":2,\"672\":1}}],[\"isenum\",{\"1\":{\"97\":1}}],[\"is\",{\"0\":{\"131\":1,\"893\":1},\"1\":{\"114\":1,\"131\":5,\"141\":1,\"211\":1,\"215\":2,\"416\":2,\"427\":1,\"458\":1,\"549\":1,\"564\":1,\"609\":1,\"611\":1,\"615\":2,\"620\":2,\"622\":1,\"625\":1,\"630\":1,\"632\":1,\"660\":2,\"739\":7,\"769\":3,\"810\":1,\"829\":1,\"876\":1,\"949\":3,\"1070\":1,\"1117\":1,\"1132\":1}}],[\"isgenericmethod\",{\"1\":{\"104\":1}}],[\"ispackable\",{\"1\":{\"585\":1}}],[\"ispackable>\",{\"1\":{\"585\":1}}],[\"isprototype\",{\"1\":{\"443\":1}}],[\"isprivate\",{\"1\":{\"104\":1}}],[\"ispublic\",{\"1\":{\"104\":1}}],[\"iscancellationrequested\",{\"1\":{\"675\":1}}],[\"iscompletedsuccessfully\",{\"1\":{\"167\":2,\"168\":1}}],[\"isconstructor\",{\"1\":{\"104\":1}}],[\"isclass\",{\"1\":{\"97\":1,\"98\":1}}],[\"isany<user>\",{\"1\":{\"591\":2}}],[\"isassignablefrom\",{\"1\":{\"574\":1,\"600\":1}}],[\"isarray\",{\"1\":{\"97\":1}}],[\"isabstract\",{\"1\":{\"97\":1,\"104\":1,\"574\":1}}],[\"issingleton\",{\"1\":{\"443\":1}}],[\"issuersigningkey\",{\"1\":{\"364\":1}}],[\"issuer\",{\"1\":{\"364\":4}}],[\"issuccessstatuscode\",{\"1\":{\"691\":1}}],[\"issuccess\",{\"1\":{\"129\":1,\"404\":2,\"413\":1,\"416\":4,\"577\":1}}],[\"issubclassof\",{\"1\":{\"97\":1}}],[\"isstatic\",{\"1\":{\"104\":1}}],[\"issealed\",{\"1\":{\"97\":1}}],[\"isnull\",{\"1\":{\"598\":1}}],[\"isnullorempty\",{\"1\":{\"64\":2,\"215\":2,\"477\":1,\"522\":1,\"656\":1}}],[\"isnullorwhitespace\",{\"1\":{\"46\":2,\"506\":2,\"507\":1,\"522\":1,\"552\":2,\"600\":2}}],[\"isnotempty\",{\"1\":{\"597\":1}}],[\"isnotpublic\",{\"1\":{\"97\":1}}],[\"isnan\",{\"1\":{\"597\":1}}],[\"isinterface\",{\"1\":{\"97\":1}}],[\"isinstanceoftype\",{\"1\":{\"97\":1}}],[\"ifcfg\",{\"1\":{\"1107\":1,\"1110\":2}}],[\"iface\",{\"1\":{\"925\":1}}],[\"ifnotpresent\",{\"1\":{\"914\":1}}],[\"if=\",{\"1\":{\"863\":1}}],[\"ifxxx这样类似的名字命名\",{\"1\":{\"840\":1}}],[\"ifxxx\",{\"1\":{\"840\":1}}],[\"iformfile\",{\"1\":{\"615\":1}}],[\"iformattable接口帮助类型实现了多样式的格式化输出\",{\"1\":{\"203\":1}}],[\"iformattable\",{\"1\":{\"203\":3}}],[\"if\",{\"1\":{\"43\":6,\"46\":1,\"64\":1,\"102\":1,\"120\":2,\"125\":6,\"131\":1,\"150\":1,\"151\":1,\"153\":1,\"164\":1,\"166\":1,\"167\":8,\"168\":2,\"201\":1,\"215\":8,\"243\":1,\"363\":1,\"364\":1,\"394\":1,\"401\":4,\"402\":8,\"403\":2,\"404\":2,\"405\":1,\"413\":2,\"416\":2,\"418\":7,\"424\":2,\"427\":1,\"441\":4,\"442\":1,\"471\":1,\"472\":3,\"474\":1,\"475\":4,\"476\":2,\"477\":2,\"478\":3,\"482\":1,\"495\":1,\"497\":4,\"499\":1,\"501\":3,\"506\":2,\"507\":1,\"552\":2,\"564\":3,\"574\":3,\"577\":2,\"583\":1,\"597\":1,\"600\":4,\"602\":1,\"603\":2,\"607\":1,\"608\":1,\"611\":1,\"612\":1,\"615\":2,\"620\":2,\"621\":1,\"625\":1,\"626\":1,\"630\":1,\"656\":2,\"660\":1,\"675\":1,\"691\":17,\"692\":2,\"693\":1,\"774\":1,\"777\":1,\"899\":1,\"949\":1,\"985\":1,\"1047\":3,\"1061\":5,\"1070\":1,\"1127\":2}}],[\"ittranslator\",{\"1\":{\"956\":1}}],[\"itd\",{\"1\":{\"853\":1}}],[\"itestoutputhelper\",{\"1\":{\"585\":4,\"586\":1,\"587\":1,\"591\":1}}],[\"itemname=ozytis\",{\"1\":{\"968\":1}}],[\"itemname=aprotobuf\",{\"1\":{\"968\":1}}],[\"itemname=austinstanding\",{\"1\":{\"968\":1}}],[\"itemname=andreidzimchuk\",{\"1\":{\"968\":1}}],[\"itemname=ewoodruff\",{\"1\":{\"968\":1}}],[\"itemname=visualstudioplatformteam\",{\"1\":{\"968\":6}}],[\"itemname=ms\",{\"1\":{\"968\":1}}],[\"itemname=mikeward\",{\"1\":{\"968\":1}}],[\"itemname=madskristensen\",{\"1\":{\"968\":3}}],[\"itemname=tomasrestrepo\",{\"1\":{\"968\":1}}],[\"itemname=cpmcgrath\",{\"1\":{\"968\":1}}],[\"items\",{\"1\":{\"691\":3,\"968\":18,\"1041\":2}}],[\"item2\",{\"1\":{\"373\":3}}],[\"item1\",{\"1\":{\"373\":3}}],[\"itemgroup>\",{\"1\":{\"364\":1,\"480\":1,\"573\":1,\"577\":2,\"585\":2,\"600\":1,\"661\":1,\"670\":1,\"672\":3,\"673\":3,\"1126\":2}}],[\"item\",{\"1\":{\"98\":3,\"118\":2,\"124\":6,\"125\":8,\"128\":3,\"477\":3,\"494\":3,\"495\":3,\"499\":3,\"677\":5,\"678\":2,\"680\":2,\"681\":4,\"691\":4}}],[\"its\",{\"1\":{\"442\":3}}],[\"it天空论坛是一个专门研究系统封装技术的论坛\",{\"1\":{\"268\":1}}],[\"itch\",{\"1\":{\"243\":1}}],[\"it\",{\"1\":{\"38\":1,\"564\":1,\"591\":2,\"812\":1,\"815\":2,\"816\":2,\"842\":1,\"888\":1,\"949\":3}}],[\"i\",{\"0\":{\"1149\":1},\"1\":{\"27\":2,\"98\":1,\"125\":12,\"209\":1,\"459\":3,\"675\":4,\"684\":4,\"687\":5,\"688\":2,\"693\":10,\"810\":1,\"811\":2,\"949\":2,\"985\":1,\"1036\":1,\"1074\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1110\":1}}],[\"ids\",{\"1\":{\"1056\":3}}],[\"idbtransaction\",{\"1\":{\"1047\":3}}],[\"idbconnection\",{\"1\":{\"1047\":1}}],[\"id和\",{\"1\":{\"954\":2}}],[\"id下选择输出控制台查看详细信息\",{\"1\":{\"901\":1}}],[\"id的值\",{\"1\":{\"746\":3}}],[\"id=sa\",{\"1\":{\"1048\":1,\"1050\":1}}],[\"id=48145\",{\"1\":{\"1012\":2}}],[\"id=42153\",{\"1\":{\"1012\":1}}],[\"id=42162\",{\"1\":{\"1012\":1}}],[\"id=42334\",{\"1\":{\"1012\":1}}],[\"id=1841538022157172741\",{\"1\":{\"712\":1}}],[\"id=1\",{\"1\":{\"671\":1,\"676\":1,\"679\":1}}],[\"id=\",{\"1\":{\"511\":2,\"512\":3,\"513\":2,\"616\":1,\"700\":1,\"702\":1,\"1047\":1}}],[\"id==\",{\"1\":{\"503\":1}}],[\"idictionary\",{\"1\":{\"692\":5}}],[\"idictionary<string\",{\"1\":{\"600\":1,\"604\":1,\"609\":1,\"613\":1,\"617\":1,\"622\":1,\"627\":1,\"632\":1,\"1047\":1}}],[\"ididid\",{\"1\":{\"511\":3}}],[\"idistributedcache\",{\"1\":{\"378\":1,\"382\":2,\"387\":2}}],[\"idistributedcache骨架代码\",{\"1\":{\"378\":1}}],[\"idisposable\",{\"1\":{\"374\":1,\"598\":1}}],[\"id作为key\",{\"1\":{\"402\":1}}],[\"idletimeout\",{\"1\":{\"369\":1}}],[\"idm\",{\"0\":{\"305\":1,\"1000\":1}}],[\"ide\",{\"1\":{\"955\":2,\"965\":1}}],[\"identifier\",{\"1\":{\"564\":1}}],[\"identifier=supervisor\",{\"1\":{\"564\":1}}],[\"identitymodel\",{\"1\":{\"364\":2}}],[\"identity\",{\"1\":{\"152\":1,\"361\":1,\"403\":2,\"453\":1,\"527\":1,\"1070\":1}}],[\"idempotencykey\",{\"1\":{\"424\":1}}],[\"idempotence\",{\"1\":{\"210\":1}}],[\"idempotentattributefilter\",{\"1\":{\"424\":3}}],[\"idefaultmongodatabaseprovider\",{\"1\":{\"363\":1}}],[\"idea\",{\"1\":{\"210\":1}}],[\"id\",{\"1\":{\"19\":3,\"33\":1,\"40\":1,\"47\":1,\"48\":2,\"98\":5,\"99\":1,\"120\":7,\"159\":1,\"160\":4,\"164\":3,\"165\":1,\"204\":3,\"208\":4,\"322\":1,\"402\":4,\"453\":2,\"468\":7,\"474\":3,\"483\":6,\"484\":1,\"501\":3,\"503\":11,\"511\":3,\"512\":3,\"513\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":5,\"523\":1,\"527\":2,\"528\":7,\"552\":4,\"661\":1,\"676\":1,\"694\":1,\"746\":8,\"863\":1,\"866\":1,\"871\":1,\"981\":1,\"985\":2,\"1047\":3,\"1055\":1,\"1056\":1,\"1061\":5,\"1070\":4}}],[\"im2\",{\"1\":{\"688\":4}}],[\"im\",{\"1\":{\"688\":4}}],[\"imsgservice\",{\"1\":{\"575\":6,\"576\":2}}],[\"imslkh63lcj\",{\"1\":{\"330\":1}}],[\"implicitusings>\",{\"1\":{\"577\":1,\"1122\":1,\"1123\":1}}],[\"implements\",{\"1\":{\"440\":3}}],[\"importgroupid\",{\"1\":{\"1042\":1}}],[\"import\",{\"1\":{\"243\":2,\"671\":2,\"674\":2,\"676\":2,\"679\":2,\"779\":1,\"811\":2,\"868\":2,\"871\":2,\"905\":1}}],[\"imodelbinderprovider\",{\"1\":{\"472\":1}}],[\"imodelbinder\",{\"1\":{\"472\":2}}],[\"imodelmetadataprovider\",{\"1\":{\"404\":2,\"405\":2}}],[\"imongocollection<userprofile>\",{\"1\":{\"363\":1}}],[\"imemorycachimg\",{\"1\":{\"377\":2}}],[\"imemorycache\",{\"1\":{\"371\":2,\"424\":2}}],[\"immutable\",{\"1\":{\"243\":2}}],[\"iminganreplacevalidator\",{\"1\":{\"215\":2}}],[\"imingancheckvalidator\",{\"1\":{\"215\":2}}],[\"imapper\",{\"1\":{\"591\":2,\"630\":1}}],[\"imap\",{\"1\":{\"152\":1}}],[\"imageassistant\",{\"1\":{\"1002\":1}}],[\"image=10\",{\"1\":{\"914\":1}}],[\"imagepullpolicy\",{\"1\":{\"914\":1}}],[\"images文件夹来用于做为我文章的配图的图床\",{\"1\":{\"954\":1}}],[\"imagesandcontainers\",{\"1\":{\"874\":1}}],[\"images查看镜像是否生成\",{\"1\":{\"806\":1}}],[\"images\",{\"1\":{\"734\":2,\"745\":1,\"805\":7,\"810\":3,\"859\":1,\"863\":2,\"871\":1,\"872\":1,\"873\":4,\"874\":9,\"875\":1,\"899\":1,\"968\":1,\"1070\":4}}],[\"imageup\",{\"1\":{\"734\":2}}],[\"image\",{\"0\":{\"869\":1},\"1\":{\"3\":1,\"36\":1,\"550\":2,\"551\":2,\"552\":1,\"553\":2,\"554\":6,\"556\":1,\"557\":1,\"558\":1,\"561\":5,\"562\":1,\"563\":6,\"687\":3,\"796\":1,\"810\":1,\"811\":1,\"815\":1,\"852\":3,\"863\":1,\"866\":3,\"867\":1,\"868\":1,\"871\":1,\"886\":1,\"899\":1,\"1024\":2,\"1070\":12}}],[\"imgur\",{\"1\":{\"951\":1}}],[\"img\",{\"1\":{\"4\":2,\"6\":2,\"7\":3,\"8\":7,\"21\":2,\"22\":4,\"38\":2,\"39\":1,\"40\":5,\"41\":1,\"91\":1,\"145\":3,\"146\":1,\"148\":1,\"151\":1,\"182\":1,\"194\":1,\"212\":2,\"213\":3,\"214\":2,\"215\":3,\"219\":1,\"221\":1,\"222\":1,\"224\":1,\"225\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":1,\"231\":1,\"232\":2,\"233\":1,\"234\":1,\"236\":1,\"237\":1,\"312\":11,\"313\":2,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":2,\"320\":1,\"322\":1,\"345\":1,\"346\":1,\"347\":1,\"364\":6,\"372\":1,\"373\":1,\"376\":1,\"399\":1,\"400\":1,\"431\":1,\"435\":2,\"436\":3,\"438\":1,\"443\":3,\"446\":1,\"447\":1,\"456\":1,\"471\":2,\"479\":1,\"483\":4,\"484\":2,\"501\":3,\"515\":2,\"518\":1,\"519\":1,\"520\":1,\"522\":2,\"532\":1,\"533\":1,\"536\":1,\"538\":3,\"539\":2,\"540\":3,\"541\":1,\"542\":3,\"543\":3,\"545\":1,\"548\":2,\"549\":1,\"573\":1,\"574\":1,\"575\":3,\"576\":2,\"577\":1,\"585\":4,\"586\":1,\"587\":1,\"588\":2,\"591\":2,\"605\":1,\"610\":1,\"614\":1,\"615\":3,\"616\":1,\"617\":1,\"618\":1,\"623\":1,\"628\":1,\"633\":1,\"661\":9,\"662\":1,\"672\":1,\"673\":1,\"676\":1,\"678\":1,\"681\":1,\"684\":1,\"690\":1,\"693\":1,\"694\":6,\"698\":4,\"706\":1,\"710\":2,\"711\":2,\"712\":1,\"739\":1,\"752\":3,\"753\":1,\"754\":1,\"769\":2,\"770\":1,\"771\":1,\"774\":1,\"775\":2,\"777\":1,\"791\":4,\"792\":1,\"793\":4,\"794\":1,\"798\":2,\"802\":32,\"862\":1,\"876\":9,\"887\":1,\"888\":1,\"890\":1,\"894\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":3,\"901\":1,\"902\":3,\"905\":2,\"909\":2,\"910\":1,\"948\":1,\"949\":1,\"950\":2,\"951\":1,\"952\":7,\"954\":16,\"956\":2,\"957\":1,\"958\":2,\"959\":1,\"960\":1,\"961\":1,\"966\":2,\"973\":3,\"1002\":1,\"1003\":1,\"1007\":6,\"1010\":3,\"1011\":2,\"1012\":8,\"1013\":3,\"1016\":1,\"1018\":1,\"1019\":1,\"1037\":3,\"1070\":9,\"1073\":1,\"1074\":1,\"1078\":1,\"1080\":1,\"1103\":1,\"1104\":33,\"1105\":1,\"1106\":4,\"1107\":8,\"1110\":8,\"1118\":2,\"1119\":3,\"1120\":2,\"1134\":1,\"1136\":1}}],[\"in相当于any\",{\"1\":{\"1055\":1}}],[\"in运算符不支持数组\",{\"1\":{\"1055\":1}}],[\"ingress则是提供了七层负载均衡\",{\"1\":{\"929\":1}}],[\"ingress可以给service提供集群外部访问的url\",{\"1\":{\"914\":1}}],[\"ingress\",{\"0\":{\"931\":1},\"1\":{\"914\":2,\"929\":1,\"931\":10}}],[\"incorporated\",{\"1\":{\"821\":1}}],[\"includeoptional\",{\"1\":{\"964\":3}}],[\"includeassets>\",{\"1\":{\"585\":1,\"670\":1,\"673\":1}}],[\"included\",{\"1\":{\"564\":1}}],[\"include\",{\"1\":{\"503\":2,\"514\":1,\"546\":2,\"564\":3,\"739\":2}}],[\"includexmlcomments\",{\"1\":{\"483\":2,\"484\":1,\"494\":1}}],[\"include=\",{\"1\":{\"153\":3,\"364\":3,\"371\":1,\"377\":1,\"378\":2,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"400\":1,\"413\":1,\"416\":1,\"447\":2,\"452\":2,\"480\":1,\"486\":3,\"501\":4,\"573\":1,\"577\":3,\"585\":6,\"600\":4,\"635\":2,\"660\":1,\"661\":1,\"669\":1,\"670\":4,\"672\":3,\"673\":6,\"683\":2,\"710\":4,\"1048\":1,\"1126\":7,\"1131\":1}}],[\"indented\",{\"1\":{\"585\":1}}],[\"index2\",{\"1\":{\"265\":1,\"292\":1,\"293\":1}}],[\"indexing\",{\"1\":{\"204\":1}}],[\"index\",{\"1\":{\"6\":1,\"8\":1,\"204\":1,\"213\":1,\"232\":1,\"350\":1,\"406\":1,\"407\":1,\"558\":1,\"712\":1,\"733\":1,\"734\":2,\"744\":1,\"769\":1,\"778\":1,\"780\":5,\"782\":1,\"902\":1,\"970\":2,\"1061\":6,\"1070\":1,\"1119\":1,\"1125\":2}}],[\"india\",{\"1\":{\"583\":2}}],[\"inet\",{\"1\":{\"564\":2}}],[\"ini移到conf\",{\"1\":{\"547\":1}}],[\"ini\",{\"1\":{\"546\":2,\"547\":1,\"564\":1}}],[\"initdb\",{\"1\":{\"858\":2}}],[\"initserviceprovider\",{\"1\":{\"660\":2}}],[\"initialadminpassword\",{\"1\":{\"888\":2,\"910\":1}}],[\"initializecomponent\",{\"1\":{\"660\":1,\"691\":2,\"692\":1}}],[\"initialize\",{\"1\":{\"660\":1}}],[\"initializeasync\",{\"1\":{\"167\":2,\"501\":3}}],[\"initializationtask一次\",{\"1\":{\"167\":1}}],[\"initializationtask在之前就已经初始化完成了\",{\"1\":{\"167\":1}}],[\"initializationtask\",{\"1\":{\"167\":7}}],[\"initial\",{\"1\":{\"39\":1,\"1048\":1,\"1050\":1}}],[\"init\",{\"1\":{\"21\":1,\"22\":1,\"454\":1,\"501\":1,\"750\":1,\"752\":1,\"777\":2,\"788\":1,\"914\":1,\"1061\":1}}],[\"inner\",{\"1\":{\"518\":1,\"520\":2}}],[\"innodb是支持事务的存储引擎\",{\"1\":{\"206\":1}}],[\"influxdb\",{\"1\":{\"930\":3}}],[\"inference\",{\"1\":{\"477\":1}}],[\"informcontroller\",{\"1\":{\"694\":1}}],[\"information\",{\"1\":{\"153\":2,\"391\":2,\"446\":10,\"447\":1,\"454\":1,\"455\":2,\"458\":1,\"459\":1,\"462\":2,\"463\":3,\"559\":1,\"774\":1}}],[\"info3\",{\"1\":{\"396\":1}}],[\"info2\",{\"1\":{\"396\":2}}],[\"info\",{\"1\":{\"8\":1,\"350\":1,\"396\":2,\"421\":3,\"442\":1,\"447\":3,\"453\":1,\"456\":1,\"481\":1,\"497\":3,\"524\":2,\"564\":1,\"583\":1,\"738\":1,\"777\":7,\"809\":1,\"1050\":1,\"1053\":2,\"1055\":2,\"1058\":2,\"1060\":2,\"1110\":1}}],[\"injected\",{\"1\":{\"456\":1}}],[\"injection\",{\"1\":{\"355\":1}}],[\"inputstream\",{\"1\":{\"711\":2}}],[\"input\",{\"1\":{\"311\":1,\"810\":1}}],[\"inspect\",{\"1\":{\"811\":1,\"815\":2,\"816\":1,\"817\":1,\"837\":3,\"839\":2,\"843\":1,\"852\":1,\"870\":2}}],[\"insertions\",{\"1\":{\"754\":1}}],[\"insert\",{\"1\":{\"206\":1,\"209\":1,\"472\":1,\"527\":2,\"528\":1,\"1063\":1,\"1064\":1,\"1065\":1}}],[\"inside\",{\"1\":{\"167\":1,\"440\":3,\"442\":3}}],[\"instantiationexception\",{\"1\":{\"442\":1}}],[\"instancename\",{\"1\":{\"381\":1,\"382\":1,\"386\":1,\"387\":1}}],[\"instance\",{\"1\":{\"119\":1,\"167\":1,\"215\":5,\"368\":5,\"442\":3,\"453\":1,\"574\":6}}],[\"installing\",{\"1\":{\"893\":1}}],[\"installation\",{\"1\":{\"868\":1,\"964\":1}}],[\"installer\",{\"1\":{\"692\":2,\"1018\":1}}],[\"install\",{\"1\":{\"3\":5,\"4\":2,\"152\":34,\"538\":1,\"541\":1,\"545\":3,\"549\":1,\"564\":1,\"692\":4,\"797\":1,\"840\":2,\"842\":1,\"845\":1,\"862\":4,\"865\":4,\"867\":4,\"905\":1,\"949\":1,\"964\":1,\"1008\":2,\"1016\":1,\"1018\":1,\"1019\":1,\"1109\":5,\"1110\":1}}],[\"inlinedata\",{\"1\":{\"599\":7}}],[\"inline\",{\"1\":{\"163\":1}}],[\"inmemory\",{\"1\":{\"153\":1}}],[\"invoices\",{\"1\":{\"1060\":1}}],[\"invoice\",{\"1\":{\"1060\":1}}],[\"invoke\",{\"1\":{\"83\":1,\"104\":1,\"105\":5,\"106\":4,\"108\":1,\"109\":2,\"167\":1,\"168\":1}}],[\"inversion\",{\"1\":{\"434\":1,\"436\":1}}],[\"invalidoperationexception\",{\"1\":{\"166\":1,\"167\":2,\"575\":1}}],[\"invalidcastexception\",{\"1\":{\"128\":1}}],[\"invariantculture\",{\"1\":{\"164\":1}}],[\"invariant\",{\"1\":{\"125\":2}}],[\"intptr\",{\"1\":{\"577\":2}}],[\"intro\",{\"1\":{\"850\":1}}],[\"introspectionextensions\",{\"1\":{\"501\":1}}],[\"intranet\",{\"1\":{\"242\":1}}],[\"into\",{\"1\":{\"456\":1,\"522\":2,\"524\":1,\"528\":1,\"1063\":1,\"1064\":1,\"1065\":1}}],[\"integral\",{\"1\":{\"1061\":2}}],[\"integer\",{\"1\":{\"202\":1}}],[\"intellisense\",{\"1\":{\"321\":3}}],[\"intellij\",{\"1\":{\"210\":1}}],[\"interview\",{\"0\":{\"1143\":1}}],[\"interval\",{\"1\":{\"204\":1}}],[\"interpreted\",{\"1\":{\"564\":1}}],[\"internet\",{\"1\":{\"322\":1,\"559\":1,\"962\":1,\"964\":2,\"1110\":1}}],[\"internal\",{\"1\":{\"49\":1,\"51\":1,\"56\":1,\"59\":1,\"68\":1,\"69\":1,\"83\":1,\"167\":1,\"168\":3,\"375\":1,\"446\":1,\"497\":2,\"660\":1}}],[\"interfaces\",{\"1\":{\"99\":2,\"564\":1}}],[\"interface\",{\"0\":{\"1174\":1},\"1\":{\"82\":1,\"98\":2,\"218\":1,\"347\":1,\"374\":1,\"378\":1,\"400\":1,\"439\":1,\"443\":1,\"501\":1,\"564\":1,\"573\":1,\"575\":1,\"658\":2,\"1040\":1}}],[\"interopservices\",{\"1\":{\"44\":1}}],[\"int>\",{\"1\":{\"125\":2,\"1047\":2}}],[\"intb\",{\"1\":{\"98\":2}}],[\"inta\",{\"1\":{\"98\":2}}],[\"int64\",{\"1\":{\"75\":2}}],[\"int32value\",{\"1\":{\"671\":1}}],[\"int32\",{\"1\":{\"75\":2,\"674\":1,\"676\":1,\"679\":1}}],[\"int16\",{\"1\":{\"75\":2}}],[\"int\",{\"1\":{\"48\":1,\"52\":4,\"54\":4,\"55\":3,\"56\":3,\"57\":1,\"58\":1,\"59\":1,\"63\":1,\"66\":1,\"72\":1,\"74\":1,\"75\":1,\"81\":2,\"82\":2,\"98\":4,\"99\":2,\"101\":1,\"105\":1,\"106\":4,\"112\":1,\"120\":4,\"123\":2,\"125\":1,\"129\":5,\"159\":1,\"395\":1,\"418\":4,\"427\":5,\"459\":1,\"468\":1,\"469\":1,\"472\":1,\"483\":2,\"501\":2,\"527\":1,\"528\":1,\"564\":2,\"580\":1,\"675\":1,\"677\":1,\"688\":1,\"691\":1,\"693\":2,\"711\":1,\"985\":3,\"1047\":2,\"1055\":1,\"1058\":1,\"1061\":1}}],[\"inherited\",{\"1\":{\"42\":2,\"400\":1}}],[\"in\",{\"0\":{\"518\":1,\"1054\":1,\"1057\":1},\"1\":{\"4\":1,\"98\":1,\"118\":1,\"120\":2,\"123\":2,\"124\":3,\"125\":3,\"128\":1,\"167\":2,\"215\":1,\"321\":3,\"331\":5,\"394\":1,\"427\":1,\"442\":1,\"474\":1,\"477\":2,\"484\":1,\"494\":1,\"495\":1,\"497\":2,\"499\":1,\"503\":1,\"518\":5,\"519\":2,\"522\":6,\"524\":1,\"525\":2,\"564\":3,\"574\":2,\"576\":1,\"588\":1,\"600\":1,\"656\":1,\"677\":1,\"678\":1,\"680\":1,\"681\":1,\"683\":1,\"691\":1,\"768\":1,\"777\":1,\"799\":1,\"873\":1,\"874\":1,\"985\":1,\"1036\":2,\"1056\":1,\"1061\":1}}],[\"iorderservice\",{\"1\":{\"658\":3,\"660\":2}}],[\"iorderservice以及orderservice\",{\"1\":{\"658\":1}}],[\"ioperationfilter\",{\"1\":{\"497\":1}}],[\"ioptions模式读取配置\",{\"1\":{\"661\":1}}],[\"ioptions<sample1options>\",{\"1\":{\"575\":1}}],[\"ioptions<rabbitmqconfig>\",{\"1\":{\"398\":1}}],[\"ioptions<routeoptions>\",{\"1\":{\"168\":1}}],[\"ioptionssnapshot\",{\"1\":{\"398\":1}}],[\"iobjectmodelvalidator\",{\"1\":{\"477\":3}}],[\"ios\",{\"1\":{\"467\":1,\"697\":1,\"708\":1}}],[\"ioc知识点总结\",{\"1\":{\"445\":1}}],[\"ioc和spring\",{\"1\":{\"445\":1}}],[\"ioc不是什么技术\",{\"1\":{\"444\":1}}],[\"ioc的一点看法和思考\",{\"1\":{\"444\":1}}],[\"ioc的实现过程比较复杂\",{\"1\":{\"443\":1}}],[\"ioc的实现主要用到了3种技术\",{\"1\":{\"438\":1,\"442\":1}}],[\"ioc的定义\",{\"0\":{\"436\":1}}],[\"ioc可以认为是一种全新的设计模式\",{\"1\":{\"436\":1}}],[\"ioc容器是怎么实现对象的创建和依赖的\",{\"1\":{\"443\":1}}],[\"ioc容器其实就是一个大工厂\",{\"1\":{\"443\":1}}],[\"ioc容器成了整个系统的关键核心\",{\"1\":{\"436\":1}}],[\"ioc容器\",{\"1\":{\"436\":1}}],[\"ioc容器的技术剖析\",{\"1\":{\"430\":1}}],[\"ioc借助于\",{\"1\":{\"436\":1}}],[\"ioc与工厂模式\",{\"0\":{\"438\":1},\"1\":{\"430\":1}}],[\"ioc定义\",{\"1\":{\"430\":1}}],[\"ioc思想\",{\"0\":{\"434\":1},\"1\":{\"430\":1}}],[\"ioc\",{\"0\":{\"443\":1,\"1154\":1},\"1\":{\"344\":2,\"434\":1,\"443\":6,\"444\":1,\"445\":1}}],[\"ioiox\",{\"1\":{\"336\":1}}],[\"io类中\",{\"1\":{\"202\":1}}],[\"iot物联网\",{\"1\":{\"240\":1}}],[\"iothub\",{\"1\":{\"152\":1}}],[\"iot\",{\"1\":{\"135\":1,\"152\":1}}],[\"io\",{\"0\":{\"295\":1},\"1\":{\"3\":1,\"133\":1,\"202\":1,\"211\":1,\"239\":1,\"243\":4,\"295\":1,\"338\":1,\"340\":1,\"471\":2,\"617\":1,\"662\":1,\"666\":1,\"691\":1,\"692\":4,\"716\":1,\"846\":1,\"862\":3,\"865\":1,\"867\":1,\"893\":1,\"905\":3,\"914\":6,\"923\":1,\"931\":2,\"965\":1,\"968\":1,\"1038\":1,\"1110\":1,\"1117\":1}}],[\"g=rx\",{\"1\":{\"1085\":1}}],[\"gnome\",{\"1\":{\"1110\":1}}],[\"gn2qh\",{\"1\":{\"973\":2}}],[\"gnu宽通用公共许可证\",{\"1\":{\"253\":1}}],[\"gnu通用公共许可证\",{\"1\":{\"253\":1}}],[\"gnu\",{\"1\":{\"248\":2,\"249\":1,\"870\":7}}],[\"g3cdh\",{\"1\":{\"973\":1}}],[\"g77mm\",{\"1\":{\"973\":1}}],[\"gz\",{\"1\":{\"865\":1,\"867\":1,\"870\":3,\"1134\":1,\"1135\":1}}],[\"ggx\",{\"1\":{\"693\":1}}],[\"gbe\",{\"1\":{\"1013\":1}}],[\"gb2312\",{\"1\":{\"971\":1}}],[\"gb\",{\"1\":{\"564\":8,\"964\":1}}],[\"glusterd\",{\"1\":{\"914\":1}}],[\"glusterfs\",{\"1\":{\"914\":1}}],[\"glo\",{\"1\":{\"784\":1,\"785\":2,\"786\":2}}],[\"globdal参数\",{\"1\":{\"748\":1}}],[\"globalpackagesfolder\",{\"1\":{\"970\":1}}],[\"global意思是指只对这个仓库生效\",{\"1\":{\"775\":1}}],[\"globals\",{\"1\":{\"743\":1}}],[\"globals为off\",{\"1\":{\"206\":1}}],[\"global\",{\"1\":{\"17\":3,\"333\":1,\"748\":2,\"775\":1,\"797\":1,\"802\":3}}],[\"glist\",{\"1\":{\"522\":2}}],[\"gh\",{\"1\":{\"336\":2,\"953\":1}}],[\"gui\",{\"1\":{\"853\":1}}],[\"guid\",{\"1\":{\"469\":1,\"501\":1,\"577\":1,\"680\":1,\"687\":1,\"1036\":4,\"1042\":5,\"1043\":1,\"1044\":1}}],[\"guide\",{\"1\":{\"46\":1}}],[\"guanjia\",{\"1\":{\"273\":1}}],[\"g4560\",{\"1\":{\"272\":1}}],[\"gid\",{\"1\":{\"522\":1}}],[\"gist\",{\"1\":{\"333\":2}}],[\"gif\",{\"1\":{\"322\":1}}],[\"gin\",{\"1\":{\"253\":1}}],[\"git飞行指南\",{\"1\":{\"801\":1}}],[\"git上的忽视文件\",{\"1\":{\"799\":1}}],[\"git对于\",{\"1\":{\"799\":1}}],[\"gitignore一个道理\",{\"1\":{\"838\":1}}],[\"gitignore\",{\"1\":{\"799\":3,\"801\":1}}],[\"gitignore文件\",{\"1\":{\"798\":1,\"799\":1}}],[\"gitignore的选项\",{\"1\":{\"798\":1}}],[\"gitea\",{\"0\":{\"791\":1,\"855\":1},\"1\":{\"791\":7,\"794\":1,\"855\":6}}],[\"gitee图床\",{\"0\":{\"952\":1}}],[\"gitee就可以知道这个操作是你操作的\",{\"1\":{\"802\":1}}],[\"gitee\",{\"1\":{\"8\":1,\"239\":2,\"537\":1,\"561\":1,\"583\":1,\"694\":1,\"751\":1,\"802\":2,\"852\":1,\"1009\":2,\"1070\":3}}],[\"gitconfig\",{\"1\":{\"777\":1}}],[\"gitconfig中以如下形式输出文件\",{\"1\":{\"17\":1}}],[\"git基本原理\",{\"0\":{\"776\":1}}],[\"git基本操作\",{\"0\":{\"747\":1}}],[\"git文件夹的\",{\"1\":{\"775\":2}}],[\"git文档一并提交\",{\"1\":{\"22\":1}}],[\"git中使用head表示当前版本\",{\"1\":{\"771\":1}}],[\"git版本回退\",{\"0\":{\"771\":1},\"1\":{\"771\":1}}],[\"git查看当前分支\",{\"0\":{\"758\":1}}],[\"git切换分支\",{\"0\":{\"757\":1}}],[\"git提交\",{\"0\":{\"754\":1}}],[\"git添加文件\",{\"0\":{\"753\":1}}],[\"git创建版本库\",{\"0\":{\"752\":1}}],[\"gitforwindows\",{\"1\":{\"748\":1}}],[\"git安装\",{\"0\":{\"748\":1}}],[\"gitlens\",{\"1\":{\"321\":1}}],[\"gitlab+jenkins持续集成+自动化部署\",{\"1\":{\"902\":1}}],[\"gitlab默认用户是root\",{\"1\":{\"39\":1}}],[\"gitlab容器\",{\"1\":{\"36\":1}}],[\"gitlabnetsample\",{\"1\":{\"8\":4}}],[\"gitlab\",{\"0\":{\"854\":1},\"1\":{\"3\":22,\"4\":3,\"6\":2,\"8\":5,\"36\":27,\"37\":17,\"38\":14,\"39\":1,\"40\":1,\"558\":1,\"789\":1,\"854\":12}}],[\"gitlab简单使用ci\",{\"0\":{\"3\":1}}],[\"git允许我们在版本的历史之间穿梭\",{\"1\":{\"33\":1}}],[\"git入门\",{\"1\":{\"32\":1}}],[\"git的添加文件和提交文件区分开来的目的是\",{\"1\":{\"754\":1}}],[\"git的目录\",{\"1\":{\"752\":1}}],[\"git的其他命令中\",{\"1\":{\"22\":1}}],[\"git的文件\",{\"1\":{\"22\":1}}],[\"git使用\",{\"1\":{\"20\":1}}],[\"git仓库\",{\"1\":{\"14\":1}}],[\"git是分散型的版本管理系统\",{\"1\":{\"13\":1}}],[\"git\",{\"0\":{\"13\":1,\"28\":1,\"777\":1,\"788\":1},\"1\":{\"17\":3,\"19\":1,\"21\":10,\"22\":26,\"23\":23,\"26\":14,\"27\":7,\"29\":3,\"30\":2,\"31\":3,\"32\":5,\"183\":1,\"186\":3,\"334\":2,\"748\":4,\"750\":1,\"751\":3,\"752\":1,\"753\":1,\"754\":3,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"761\":1,\"763\":1,\"764\":3,\"765\":2,\"766\":2,\"768\":5,\"769\":5,\"770\":1,\"771\":1,\"772\":1,\"773\":1,\"774\":10,\"775\":2,\"776\":4,\"777\":43,\"778\":22,\"779\":15,\"780\":27,\"781\":18,\"782\":17,\"783\":2,\"784\":7,\"785\":20,\"786\":13,\"787\":6,\"788\":16,\"789\":2,\"791\":1,\"795\":2,\"797\":6,\"799\":3,\"801\":5,\"802\":7,\"863\":8,\"1014\":1}}],[\"git出现之前\",{\"1\":{\"11\":1}}],[\"github图床\",{\"0\":{\"953\":1}}],[\"github中文文档\",{\"1\":{\"661\":1}}],[\"github地址\",{\"1\":{\"661\":1,\"689\":1}}],[\"github加速\",{\"1\":{\"334\":1}}],[\"github打不开\",{\"1\":{\"334\":1}}],[\"githubusercontent\",{\"1\":{\"333\":13}}],[\"github的另一个特征便是可以灵活地操作不同的历史版本\",{\"1\":{\"27\":1}}],[\"github\",{\"0\":{\"338\":1,\"339\":1,\"341\":1,\"1068\":1,\"1147\":1,\"1185\":1},\"1\":{\"18\":1,\"19\":1,\"21\":1,\"22\":2,\"23\":2,\"133\":1,\"152\":2,\"171\":2,\"172\":1,\"178\":1,\"211\":3,\"216\":3,\"239\":2,\"242\":1,\"243\":30,\"253\":2,\"270\":2,\"274\":1,\"278\":1,\"309\":1,\"332\":1,\"333\":6,\"334\":1,\"335\":3,\"336\":2,\"337\":2,\"338\":3,\"339\":2,\"340\":1,\"341\":1,\"399\":1,\"448\":2,\"456\":1,\"457\":2,\"466\":1,\"467\":2,\"591\":1,\"656\":1,\"661\":2,\"689\":1,\"696\":1,\"708\":2,\"712\":2,\"788\":4,\"796\":1,\"801\":1,\"846\":1,\"868\":1,\"871\":1,\"874\":4,\"875\":1,\"951\":4,\"965\":1,\"968\":5,\"986\":1,\"1038\":2,\"1067\":2,\"1070\":12,\"1117\":3}}],[\"github上连接现有仓库的认证\",{\"1\":{\"19\":1}}],[\"github上公开仓库的时候\",{\"1\":{\"17\":1}}],[\"github上公开的源代码都是通过git进行管理的\",{\"1\":{\"14\":1}}],[\"github上有很多国内外大神开源的数据挖掘\",{\"1\":{\"10\":1}}],[\"github是一个基于git的代码托管平台\",{\"1\":{\"14\":1}}],[\"github将仓库fork给每个用户\",{\"1\":{\"13\":1}}],[\"github在程序开发领域家喻户晓\",{\"1\":{\"10\":1}}],[\"gms\",{\"1\":{\"247\":6}}],[\"gd4ark\",{\"1\":{\"243\":1}}],[\"going\",{\"1\":{\"949\":1}}],[\"golang\",{\"1\":{\"871\":3,\"873\":1,\"874\":2}}],[\"golang的实现\",{\"1\":{\"535\":1}}],[\"gogs\",{\"0\":{\"795\":1},\"1\":{\"791\":1,\"794\":1,\"795\":2,\"796\":5}}],[\"good\",{\"1\":{\"777\":1}}],[\"goodsync\",{\"0\":{\"298\":1},\"1\":{\"298\":1}}],[\"google\",{\"1\":{\"152\":1,\"247\":6,\"668\":1,\"670\":1,\"671\":4,\"673\":1,\"674\":2,\"676\":2,\"679\":2}}],[\"go\",{\"0\":{\"871\":1},\"1\":{\"253\":2,\"869\":1,\"871\":4,\"873\":2,\"874\":3}}],[\"gofrp\",{\"1\":{\"242\":1}}],[\"gpl\",{\"0\":{\"248\":1},\"1\":{\"247\":2,\"248\":3,\"249\":2,\"253\":4}}],[\"gpc\",{\"1\":{\"206\":1}}],[\"gpasswd\",{\"1\":{\"8\":1}}],[\"g\",{\"1\":{\"206\":1,\"336\":1,\"522\":7,\"524\":3,\"1085\":1}}],[\"games\",{\"1\":{\"243\":2}}],[\"gaget\",{\"1\":{\"214\":1,\"1120\":1}}],[\"gateway=192\",{\"1\":{\"1107\":1,\"1110\":1}}],[\"gateway\",{\"1\":{\"204\":2,\"843\":2,\"925\":1}}],[\"gallery\",{\"1\":{\"138\":1}}],[\"gcc\",{\"1\":{\"865\":2,\"867\":2}}],[\"gc\",{\"1\":{\"203\":1}}],[\"gcp\",{\"1\":{\"152\":1}}],[\"genkey\",{\"1\":{\"1037\":1}}],[\"genmask\",{\"1\":{\"925\":1}}],[\"generatepackageonbuild>\",{\"1\":{\"1122\":1,\"1123\":1}}],[\"generate\",{\"1\":{\"986\":1}}],[\"general\",{\"1\":{\"248\":1,\"249\":1}}],[\"generic\",{\"1\":{\"691\":1,\"692\":1,\"870\":1}}],[\"genericparameter\",{\"1\":{\"400\":1}}],[\"genericmethod\",{\"1\":{\"106\":2}}],[\"generictype\",{\"1\":{\"101\":2,\"106\":6}}],[\"genericsmethodinfo\",{\"1\":{\"106\":2}}],[\"genericsmethod\",{\"1\":{\"106\":2}}],[\"genericsa\",{\"1\":{\"106\":2}}],[\"genericsa<t>\",{\"1\":{\"98\":1}}],[\"generics\",{\"1\":{\"106\":1}}],[\"generics<t>\",{\"1\":{\"98\":1}}],[\"genericc\",{\"1\":{\"98\":1,\"106\":1}}],[\"getformservice\",{\"1\":{\"660\":2}}],[\"getfilenamewithoutextension\",{\"1\":{\"577\":1}}],[\"getfilename\",{\"1\":{\"574\":1}}],[\"getfiles\",{\"1\":{\"483\":1}}],[\"getfield\",{\"1\":{\"97\":1,\"99\":1,\"115\":2}}],[\"getfields\",{\"1\":{\"97\":1,\"99\":1,\"115\":1}}],[\"getdescriptionfromattribute\",{\"1\":{\"1061\":2}}],[\"getdetailsasync\",{\"1\":{\"501\":5}}],[\"getdirectories\",{\"1\":{\"574\":1}}],[\"getgradelist\",{\"1\":{\"540\":1}}],[\"getrandomfilename\",{\"1\":{\"471\":1}}],[\"getrequiredservice\",{\"1\":{\"660\":1}}],[\"getrequiredservice<form1>\",{\"1\":{\"660\":1}}],[\"getrequiredservice<t>\",{\"1\":{\"660\":1}}],[\"getrequiredservice<opendbcontext>\",{\"1\":{\"501\":1}}],[\"getrequiredservice<objectpool<uribuildingcontext>>\",{\"1\":{\"165\":1}}],[\"getrequiredservice<objectpoolprovider>\",{\"1\":{\"165\":1}}],[\"getrequiredservice<iapiversiondescriptionprovider>\",{\"1\":{\"494\":2}}],[\"getrequiredservice<iuserservice>\",{\"1\":{\"352\":1,\"353\":1,\"355\":1,\"587\":1}}],[\"getrequiredservice<ioptions<routeoptions>>\",{\"1\":{\"167\":1}}],[\"getrequiredservice<iinlineconstraintresolver>\",{\"1\":{\"165\":1}}],[\"getrequiredservice<iloggerfactory>\",{\"1\":{\"165\":1,\"501\":1}}],[\"getrequestedapiversion\",{\"1\":{\"636\":1}}],[\"getresult\",{\"1\":{\"402\":2,\"418\":1,\"421\":1}}],[\"getreloadtoken\",{\"1\":{\"215\":1}}],[\"gettoken\",{\"1\":{\"472\":2}}],[\"getting\",{\"1\":{\"456\":1,\"588\":1,\"712\":1}}],[\"gettypedheaders\",{\"1\":{\"580\":1}}],[\"gettypeinfo\",{\"1\":{\"501\":1,\"600\":1}}],[\"gettype\",{\"1\":{\"93\":1,\"95\":2,\"98\":1,\"101\":1,\"106\":2,\"109\":1,\"112\":1,\"115\":2,\"117\":1,\"215\":1,\"364\":1,\"403\":2,\"443\":2}}],[\"gettypes\",{\"1\":{\"93\":1,\"574\":1}}],[\"getbinder\",{\"1\":{\"472\":1}}],[\"getbyid\",{\"1\":{\"468\":3}}],[\"getbytes\",{\"1\":{\"364\":2,\"366\":1,\"382\":1,\"387\":1,\"617\":1}}],[\"getbeanprovider\",{\"1\":{\"443\":2}}],[\"getbean\",{\"1\":{\"443\":5}}],[\"getaccesstokenasync\",{\"1\":{\"710\":1,\"712\":1}}],[\"getalluserinfoasync\",{\"1\":{\"676\":1}}],[\"getallrequest\",{\"1\":{\"674\":2,\"675\":1,\"676\":1}}],[\"getall\",{\"1\":{\"674\":1,\"675\":1,\"676\":1}}],[\"getaliases\",{\"1\":{\"443\":1}}],[\"getawaiter\",{\"1\":{\"402\":2,\"418\":1,\"421\":1}}],[\"getasync<t>\",{\"1\":{\"604\":1}}],[\"getasync<resultmodel<userdto>>\",{\"1\":{\"604\":1}}],[\"getasync<ienumerable<weatherforecast>>\",{\"1\":{\"378\":1}}],[\"getasync\",{\"1\":{\"468\":3,\"586\":1,\"604\":1,\"691\":1,\"712\":1}}],[\"getassemblies\",{\"1\":{\"117\":1}}],[\"getlistasync\",{\"1\":{\"587\":1,\"591\":3}}],[\"getlist\",{\"1\":{\"401\":1,\"586\":1,\"1041\":2}}],[\"get01\",{\"1\":{\"400\":1,\"401\":1}}],[\"get<int>\",{\"1\":{\"427\":1}}],[\"get<rabbitmqconfig>\",{\"1\":{\"396\":1}}],[\"get<string>\",{\"1\":{\"424\":1}}],[\"get<string\",{\"1\":{\"393\":1}}],[\"get<list<string>>\",{\"1\":{\"215\":1}}],[\"getshape\",{\"1\":{\"441\":2,\"442\":3}}],[\"getstringasync\",{\"1\":{\"382\":2,\"387\":2}}],[\"getstring\",{\"1\":{\"366\":3,\"367\":1,\"381\":1,\"386\":1}}],[\"getsection\",{\"0\":{\"393\":1},\"1\":{\"215\":1,\"393\":3,\"394\":1,\"396\":2,\"397\":1}}],[\"getservice<t>\",{\"1\":{\"660\":1}}],[\"getservice<ihttpcontextaccessor>\",{\"1\":{\"367\":1}}],[\"getservice<isingletonservice>\",{\"1\":{\"354\":1}}],[\"getservice<iuserservice>\",{\"1\":{\"352\":1}}],[\"getservice<iminganreplacevalidator>\",{\"1\":{\"215\":1}}],[\"getservice<imingancheckvalidator>\",{\"1\":{\"215\":1}}],[\"getservice\",{\"1\":{\"166\":1,\"351\":1}}],[\"getuserlistresponse\",{\"1\":{\"676\":2,\"677\":1}}],[\"getuserlistrequest\",{\"1\":{\"676\":2,\"678\":1}}],[\"getuserlistbyuseridasync\",{\"1\":{\"678\":1}}],[\"getuserlistbyuserid\",{\"1\":{\"676\":1,\"677\":1,\"678\":1}}],[\"getuserdetails\",{\"1\":{\"602\":1}}],[\"getuser\",{\"1\":{\"587\":1,\"591\":1}}],[\"getusername\",{\"1\":{\"364\":1}}],[\"getuserinfoasync\",{\"1\":{\"673\":1}}],[\"getuserinforesponse\",{\"1\":{\"671\":2,\"672\":1}}],[\"getuserinforequest\",{\"1\":{\"671\":2,\"672\":1,\"673\":1}}],[\"getuserinfo\",{\"1\":{\"43\":3,\"671\":1,\"672\":1}}],[\"getinstance\",{\"1\":{\"442\":4}}],[\"getinfo\",{\"1\":{\"350\":1}}],[\"getinterface\",{\"1\":{\"97\":1}}],[\"getinterfaces\",{\"1\":{\"97\":1,\"99\":1}}],[\"getobjectdata\",{\"1\":{\"203\":1}}],[\"getenforce\",{\"1\":{\"948\":1}}],[\"getendpoint\",{\"1\":{\"157\":5,\"167\":2,\"168\":1}}],[\"getexecutingassembly\",{\"1\":{\"483\":1,\"484\":1,\"502\":1,\"600\":1}}],[\"getexportedtypes\",{\"1\":{\"93\":1}}],[\"getvalue<string>\",{\"1\":{\"392\":1}}],[\"getvalue<int>\",{\"1\":{\"392\":1}}],[\"getvalue\",{\"0\":{\"392\":1},\"1\":{\"111\":1,\"112\":1,\"115\":1,\"128\":1,\"583\":2}}],[\"getpaging\",{\"1\":{\"1041\":2}}],[\"getparameters\",{\"1\":{\"104\":1,\"109\":1}}],[\"getpostman\",{\"1\":{\"722\":1}}],[\"getpluginloaders\",{\"1\":{\"574\":2,\"576\":1}}],[\"getpinyin\",{\"1\":{\"215\":2}}],[\"getproperties\",{\"1\":{\"97\":1,\"99\":1,\"120\":2,\"128\":1,\"1061\":2}}],[\"getproperty\",{\"1\":{\"64\":2,\"97\":1,\"99\":1,\"112\":3,\"215\":1,\"1061\":1}}],[\"getpropertyname\",{\"1\":{\"64\":2}}],[\"getmostpopularblogs\",{\"1\":{\"509\":1}}],[\"getmodule\",{\"1\":{\"118\":1}}],[\"getm\",{\"1\":{\"98\":2}}],[\"getmethod\",{\"1\":{\"97\":1,\"98\":1,\"99\":3,\"105\":3,\"106\":4}}],[\"getmethods\",{\"1\":{\"97\":1,\"99\":1}}],[\"getmember\",{\"1\":{\"97\":1,\"99\":2}}],[\"getmembers\",{\"1\":{\"97\":1,\"98\":1,\"99\":1}}],[\"getclassloader\",{\"1\":{\"442\":1}}],[\"getcallerclass\",{\"1\":{\"442\":1}}],[\"getchildren\",{\"0\":{\"394\":1},\"1\":{\"394\":1}}],[\"getcurrentdirectory\",{\"1\":{\"661\":1}}],[\"getcurrentclasslogger\",{\"1\":{\"454\":1}}],[\"getcurrentuserasync\",{\"1\":{\"363\":1}}],[\"getcustomattribute\",{\"1\":{\"97\":1,\"102\":1,\"104\":1,\"108\":1,\"111\":1,\"114\":1,\"1061\":1}}],[\"getcustomattribute<displayattribute>\",{\"1\":{\"64\":1}}],[\"getcustomattribute<displaynameattribute>\",{\"1\":{\"64\":1}}],[\"getcustomattributes\",{\"1\":{\"46\":3,\"97\":1,\"102\":1,\"104\":1,\"108\":1,\"111\":1,\"114\":1,\"1061\":1}}],[\"getconnection\",{\"1\":{\"1047\":5}}],[\"getconnectionstringsqlserverw3schools\",{\"1\":{\"1063\":1,\"1065\":1}}],[\"getconnectionstring\",{\"1\":{\"1047\":3}}],[\"getconstructor\",{\"1\":{\"97\":1,\"99\":2,\"109\":2}}],[\"getconstructors\",{\"1\":{\"97\":1,\"99\":1}}],[\"getcollection<userprofile>\",{\"1\":{\"363\":1}}],[\"get和set是属性的访问器\",{\"1\":{\"59\":1}}],[\"getname\",{\"1\":{\"46\":1,\"53\":1,\"347\":2,\"348\":2,\"349\":2,\"351\":2,\"483\":1,\"484\":1,\"501\":3,\"574\":2,\"658\":4}}],[\"get\",{\"0\":{\"601\":1,\"1162\":1},\"1\":{\"3\":1,\"46\":4,\"47\":3,\"48\":3,\"59\":3,\"60\":1,\"61\":3,\"62\":1,\"63\":2,\"66\":1,\"69\":1,\"70\":1,\"72\":2,\"73\":2,\"98\":1,\"112\":1,\"120\":6,\"127\":2,\"128\":2,\"130\":2,\"131\":2,\"145\":1,\"155\":1,\"156\":3,\"158\":1,\"164\":1,\"204\":1,\"215\":2,\"323\":1,\"367\":1,\"368\":8,\"371\":2,\"372\":6,\"373\":4,\"374\":2,\"375\":1,\"376\":2,\"378\":1,\"395\":5,\"402\":2,\"427\":5,\"441\":1,\"442\":6,\"446\":1,\"447\":1,\"456\":1,\"472\":3,\"474\":5,\"475\":5,\"477\":2,\"483\":2,\"489\":1,\"500\":1,\"501\":10,\"502\":2,\"552\":1,\"573\":14,\"575\":1,\"583\":1,\"586\":2,\"600\":3,\"601\":1,\"603\":2,\"607\":3,\"640\":1,\"642\":1,\"646\":1,\"648\":1,\"652\":1,\"654\":1,\"660\":1,\"661\":1,\"673\":1,\"677\":4,\"691\":4,\"730\":1,\"743\":4,\"846\":1,\"865\":4,\"867\":4,\"918\":1,\"985\":2,\"1008\":1,\"1036\":1,\"1041\":1,\"1061\":5,\"1109\":4}}],[\"grl3zju1\",{\"1\":{\"968\":1}}],[\"green\",{\"1\":{\"1036\":1}}],[\"greaterorequal\",{\"1\":{\"597\":1}}],[\"greater\",{\"1\":{\"597\":1}}],[\"grep\",{\"0\":{\"1096\":1},\"1\":{\"548\":1,\"863\":2,\"899\":1,\"909\":1,\"949\":2,\"1096\":5,\"1101\":1}}],[\"gremlin\",{\"1\":{\"152\":2}}],[\"grouby\",{\"0\":{\"524\":1}}],[\"groupworker\",{\"1\":{\"564\":1}}],[\"groupby\",{\"1\":{\"524\":1}}],[\"groupjoin操作符常应用于返回\",{\"1\":{\"523\":1}}],[\"groupjoin\",{\"0\":{\"523\":1},\"1\":{\"523\":1}}],[\"groupdefrep\",{\"1\":{\"522\":1}}],[\"groupname\",{\"1\":{\"494\":1,\"495\":2,\"497\":1,\"499\":2,\"522\":2}}],[\"groupnameformat\",{\"1\":{\"494\":1,\"498\":1}}],[\"groups\",{\"1\":{\"152\":1,\"564\":1}}],[\"group\",{\"1\":{\"8\":1,\"524\":3,\"564\":4,\"1082\":4,\"1084\":2,\"1085\":2}}],[\"grabber\",{\"1\":{\"949\":2}}],[\"grace\",{\"1\":{\"914\":1}}],[\"grafana\",{\"0\":{\"861\":1},\"1\":{\"861\":2}}],[\"grade\",{\"1\":{\"518\":1,\"519\":1,\"520\":1,\"540\":1}}],[\"grantjenks\",{\"1\":{\"243\":1}}],[\"graph\",{\"1\":{\"26\":2}}],[\"grpcservices=\",{\"1\":{\"672\":2,\"673\":2}}],[\"grpc和asp\",{\"1\":{\"668\":1}}],[\"grpc四种模式\",{\"0\":{\"667\":1}}],[\"grpc在netcore官网文档\",{\"1\":{\"666\":1}}],[\"grpc基于http2\",{\"1\":{\"666\":1}}],[\"grpc支持通过流进行实时通信\",{\"1\":{\"665\":1}}],[\"grpc服务\",{\"1\":{\"672\":1}}],[\"grpc服务可以实时推送消息而无需轮询\",{\"1\":{\"664\":1}}],[\"grpc服务的定义和信息交换的格式是protocol\",{\"1\":{\"536\":1}}],[\"grpc对双向流调用提供出色的支持\",{\"1\":{\"664\":1}}],[\"grpc工具支持所有流行的开发语言\",{\"1\":{\"664\":1}}],[\"grpc设计为低延迟和高吞吐量通信\",{\"1\":{\"664\":1}}],[\"grpc官网\",{\"1\":{\"662\":1}}],[\"grpc是一个由google开发的\",{\"1\":{\"662\":1}}],[\"grpc是由google开发的基于http\",{\"1\":{\"536\":1}}],[\"grpc自动为各种语言和平台生成跨平台客户端和服务器绑定代码\",{\"1\":{\"536\":1}}],[\"grpc\",{\"0\":{\"536\":1,\"1169\":1},\"1\":{\"210\":2,\"662\":1,\"666\":3,\"668\":4,\"669\":1,\"670\":3,\"672\":1,\"673\":3}}],[\"gridfs是一种将大型文件存储在mongodb中的文件规范\",{\"1\":{\"205\":1}}],[\"ln\",{\"1\":{\"1136\":1}}],[\"lnskydb\",{\"1\":{\"1038\":3}}],[\"lnskydb是基于dapper的lambda扩展\",{\"1\":{\"1038\":1}}],[\"lvm\",{\"1\":{\"1110\":2}}],[\"lvsktrkw8k7oo8j3xfimjq\",{\"1\":{\"969\":1}}],[\"lt\",{\"1\":{\"1099\":1}}],[\"lts\",{\"1\":{\"870\":1}}],[\"lrwxrwxrwx\",{\"1\":{\"1081\":1}}],[\"lru\",{\"1\":{\"209\":4}}],[\"lbq8556u\",{\"1\":{\"988\":1}}],[\"ld\",{\"1\":{\"870\":2}}],[\"ldd\",{\"1\":{\"870\":3}}],[\"ldap\",{\"1\":{\"217\":1}}],[\"lht\",{\"1\":{\"1134\":1}}],[\"lh\",{\"1\":{\"779\":2}}],[\"lltbr3bihvofvjv5vbj0aq\",{\"1\":{\"1109\":1}}],[\"ll\",{\"1\":{\"777\":6,\"785\":1,\"1081\":1}}],[\"llx\",{\"1\":{\"746\":1}}],[\"lj\",{\"1\":{\"462\":1}}],[\"lgpl\",{\"0\":{\"249\":1},\"1\":{\"247\":1,\"249\":4,\"253\":3}}],[\"lucky\",{\"1\":{\"445\":1}}],[\"lucene使用了大量的文件\",{\"1\":{\"204\":1}}],[\"lucene\",{\"1\":{\"204\":4}}],[\"luyouxia\",{\"1\":{\"242\":1}}],[\"lpop\",{\"1\":{\"209\":2}}],[\"lc\",{\"1\":{\"125\":2}}],[\"lcid\",{\"1\":{\"124\":2}}],[\"laptop\",{\"1\":{\"988\":1}}],[\"lambda\",{\"1\":{\"985\":1}}],[\"large\",{\"1\":{\"863\":3}}],[\"lab\",{\"0\":{\"865\":1,\"866\":1,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"871\":1},\"1\":{\"865\":2,\"866\":2,\"867\":2,\"868\":5,\"870\":1}}],[\"lable\",{\"1\":{\"821\":1}}],[\"labels\",{\"1\":{\"918\":1}}],[\"label\",{\"0\":{\"821\":1},\"1\":{\"821\":3,\"837\":1,\"914\":1,\"918\":1,\"942\":1}}],[\"labs\",{\"1\":{\"138\":2,\"804\":1,\"853\":1}}],[\"launchurl\",{\"1\":{\"552\":1}}],[\"launchbrowser\",{\"1\":{\"552\":1}}],[\"layout=\",{\"1\":{\"453\":8}}],[\"layout>\",{\"1\":{\"447\":1}}],[\"layout\",{\"1\":{\"447\":1,\"964\":2}}],[\"layers\",{\"1\":{\"863\":1}}],[\"layer\",{\"1\":{\"325\":1,\"866\":1}}],[\"lazycache\",{\"1\":{\"378\":2}}],[\"lazy的意思是lazycache永远不会再缓存未命中的时候触发一次以上的缓存委托函数\",{\"1\":{\"378\":1}}],[\"laozhangisphi\",{\"1\":{\"583\":1}}],[\"laozhang\",{\"1\":{\"364\":1}}],[\"lanzouv\",{\"1\":{\"1037\":1}}],[\"lanzoux\",{\"1\":{\"311\":1,\"330\":1}}],[\"lanzoui\",{\"1\":{\"263\":1}}],[\"landiannews\",{\"1\":{\"1035\":1}}],[\"landian\",{\"1\":{\"245\":1}}],[\"lang\",{\"1\":{\"865\":1,\"866\":1,\"867\":1,\"964\":2,\"1130\":1}}],[\"lang=zh\",{\"1\":{\"125\":1}}],[\"languagepack\",{\"1\":{\"802\":1}}],[\"language请求头即可\",{\"1\":{\"146\":1}}],[\"language\",{\"1\":{\"125\":1,\"143\":1,\"146\":1,\"321\":1,\"328\":1,\"468\":2}}],[\"latest\",{\"1\":{\"211\":2,\"217\":1,\"661\":1,\"796\":1,\"853\":1,\"859\":3,\"862\":3,\"863\":2,\"871\":1,\"1070\":3,\"1117\":2}}],[\"lastname\",{\"1\":{\"17\":2,\"583\":2}}],[\"legit\",{\"1\":{\"949\":1}}],[\"less\",{\"1\":{\"739\":2}}],[\"lesser\",{\"1\":{\"249\":1}}],[\"leo\",{\"1\":{\"666\":1}}],[\"left\",{\"1\":{\"522\":1,\"691\":1}}],[\"len\",{\"1\":{\"204\":1}}],[\"length\",{\"1\":{\"46\":1,\"99\":8,\"102\":1,\"109\":1,\"125\":7,\"691\":1,\"692\":1,\"693\":2,\"1047\":2}}],[\"leader\",{\"1\":{\"134\":2}}],[\"learning\",{\"1\":{\"946\":2}}],[\"learngitbranching\",{\"1\":{\"801\":1}}],[\"learngit\",{\"1\":{\"752\":2}}],[\"learn\",{\"1\":{\"125\":1,\"135\":1,\"138\":1,\"141\":1,\"467\":2,\"574\":1,\"576\":1,\"577\":1,\"1036\":3,\"1037\":1}}],[\"levels\",{\"1\":{\"447\":1}}],[\"levelmax\",{\"1\":{\"447\":1}}],[\"levelmin\",{\"1\":{\"447\":1}}],[\"levelrangefilter\",{\"1\":{\"447\":1}}],[\"level\",{\"1\":{\"58\":1,\"453\":2,\"462\":1,\"564\":1}}],[\"like\",{\"0\":{\"1052\":1},\"1\":{\"1044\":4,\"1053\":1}}],[\"lights\",{\"1\":{\"968\":1}}],[\"lightcycle\",{\"1\":{\"243\":1}}],[\"liuxiaoji\",{\"1\":{\"949\":1}}],[\"liudecai\",{\"1\":{\"912\":1}}],[\"lived>cronjob即定时任务\",{\"1\":{\"914\":1}}],[\"liveserver\",{\"1\":{\"321\":1}}],[\"liaoxuefeng\",{\"1\":{\"801\":1}}],[\"liai\",{\"1\":{\"109\":1}}],[\"lib64\",{\"1\":{\"870\":2}}],[\"libc\",{\"1\":{\"870\":3}}],[\"libpthread\",{\"1\":{\"870\":3}}],[\"libm\",{\"1\":{\"870\":3}}],[\"libexec\",{\"1\":{\"797\":1}}],[\"librarypath\",{\"1\":{\"577\":3}}],[\"lib\",{\"1\":{\"549\":2,\"791\":2,\"852\":2,\"855\":2,\"862\":2,\"865\":1,\"867\":1,\"870\":6,\"908\":1,\"910\":1,\"949\":2,\"1136\":2}}],[\"libai\",{\"1\":{\"115\":1}}],[\"limits\",{\"1\":{\"914\":2}}],[\"limit\",{\"1\":{\"427\":1}}],[\"limitrequestnum\",{\"1\":{\"427\":6}}],[\"lisi\",{\"1\":{\"366\":1}}],[\"lists\",{\"1\":{\"865\":1,\"867\":1}}],[\"listen\",{\"1\":{\"543\":1}}],[\"list时\",{\"1\":{\"165\":1}}],[\"list和\",{\"1\":{\"165\":1}}],[\"list<singlebutton>\",{\"1\":{\"712\":1}}],[\"list<sbentity>\",{\"1\":{\"693\":2}}],[\"list<string>\",{\"1\":{\"215\":1,\"394\":1,\"552\":3,\"677\":1,\"681\":1}}],[\"list<userinfo>\",{\"1\":{\"677\":1,\"680\":1,\"681\":1}}],[\"list<userdto>\",{\"1\":{\"600\":1}}],[\"list<user>\",{\"1\":{\"591\":2}}],[\"list<t>\",{\"1\":{\"583\":3}}],[\"list<plugin>\",{\"1\":{\"574\":2}}],[\"list<errorresultdto>\",{\"1\":{\"477\":1}}],[\"list<configs>\",{\"1\":{\"691\":3}}],[\"list<customerresponse>\",{\"1\":{\"676\":1}}],[\"list<cultureinfo>\",{\"1\":{\"144\":1}}],[\"list<claimsidentity>\",{\"1\":{\"401\":2}}],[\"list<claim>\",{\"1\":{\"358\":1,\"364\":1}}],[\"list<datasource>\",{\"1\":{\"43\":1}}],[\"list2\",{\"1\":{\"125\":2,\"524\":2}}],[\"list\",{\"1\":{\"125\":2,\"163\":1,\"165\":1,\"209\":1,\"378\":2,\"518\":2,\"519\":2,\"520\":2,\"522\":3,\"523\":2,\"524\":2,\"538\":2,\"564\":1,\"583\":3,\"676\":1,\"691\":9,\"693\":3,\"802\":1,\"1008\":1,\"1036\":1,\"1051\":1,\"1053\":2,\"1055\":1,\"1058\":2,\"1060\":1,\"1074\":1,\"1108\":1,\"1109\":1}}],[\"lizhanglong\",{\"1\":{\"364\":1}}],[\"licence\",{\"0\":{\"251\":1},\"1\":{\"253\":1}}],[\"license\",{\"1\":{\"248\":1,\"249\":1,\"250\":1,\"252\":1,\"253\":1}}],[\"little\",{\"1\":{\"243\":1}}],[\"liningit\",{\"1\":{\"1038\":2,\"1046\":1}}],[\"lines\",{\"1\":{\"777\":1,\"968\":1,\"1036\":1}}],[\"line\",{\"1\":{\"564\":1,\"946\":1}}],[\"linqconnect\",{\"1\":{\"968\":1}}],[\"linq实现\",{\"0\":{\"522\":1}}],[\"linq标准查询运算符\",{\"0\":{\"520\":1}}],[\"linq查询表达式\",{\"0\":{\"517\":1}}],[\"linq\",{\"1\":{\"508\":1,\"518\":1,\"691\":1,\"692\":1}}],[\"link和mynginx3关联起来\",{\"1\":{\"842\":1}}],[\"link关联\",{\"1\":{\"842\":1}}],[\"link方式\",{\"0\":{\"842\":1}}],[\"link\",{\"1\":{\"839\":1,\"842\":1,\"843\":1,\"1081\":1}}],[\"link=\",{\"1\":{\"672\":1,\"673\":1}}],[\"linksys\",{\"1\":{\"247\":1,\"253\":1}}],[\"linkgenerator相关服务\",{\"1\":{\"165\":1}}],[\"linux子系统\",{\"0\":{\"1007\":1}}],[\"linuxprobe\",{\"1\":{\"946\":2}}],[\"linux就该这么学\",{\"1\":{\"946\":1}}],[\"linuxcommand\",{\"1\":{\"946\":1}}],[\"linux安装\",{\"0\":{\"903\":1}}],[\"linux安装docker\",{\"0\":{\"862\":1}}],[\"linux安装git\",{\"0\":{\"797\":1}}],[\"linux支持的相关命令\",{\"1\":{\"822\":1}}],[\"linux系统按文件所有者\",{\"1\":{\"1081\":1}}],[\"linux系统\",{\"1\":{\"812\":1}}],[\"linux宕机\",{\"1\":{\"541\":1}}],[\"linux服务器下记住密码\",{\"1\":{\"797\":1}}],[\"linux服务器\",{\"1\":{\"537\":1}}],[\"linux和android的关系\",{\"1\":{\"253\":1}}],[\"linux和mac\",{\"1\":{\"203\":1}}],[\"linux\",{\"0\":{\"1179\":1},\"1\":{\"3\":1,\"211\":1,\"243\":1,\"247\":8,\"253\":1,\"544\":1,\"549\":1,\"862\":2,\"866\":1,\"868\":1,\"870\":11,\"916\":4,\"946\":3,\"1007\":2,\"1071\":6,\"1076\":1,\"1079\":1,\"1080\":2,\"1081\":1,\"1082\":1,\"1085\":1,\"1096\":3,\"1110\":5,\"1117\":1,\"1134\":1,\"1135\":1}}],[\"lifetime>\",{\"1\":{\"165\":1}}],[\"lifetime\",{\"1\":{\"153\":1,\"391\":1,\"446\":3,\"447\":1,\"455\":1}}],[\"lsi\",{\"1\":{\"1110\":3}}],[\"lst=\",{\"1\":{\"1041\":1}}],[\"lst\",{\"1\":{\"1041\":3,\"1070\":2}}],[\"lsb\",{\"1\":{\"1007\":1,\"1109\":1,\"1115\":1}}],[\"ls看到\",{\"1\":{\"852\":1}}],[\"ls查看主机挂载的数据卷信息\",{\"1\":{\"815\":1}}],[\"ls\",{\"0\":{\"1088\":1},\"1\":{\"22\":1,\"777\":1,\"779\":2,\"780\":7,\"782\":2,\"843\":1,\"1074\":6,\"1077\":1,\"1081\":2,\"1088\":2,\"1096\":1,\"1107\":1,\"1134\":1}}],[\"loop\",{\"1\":{\"985\":1}}],[\"loopback\",{\"1\":{\"928\":1}}],[\"lower\",{\"1\":{\"857\":1}}],[\"lowercase=true\",{\"1\":{\"453\":1}}],[\"lowestimplementedapiversionselector是最小版本号\",{\"1\":{\"650\":1}}],[\"low\",{\"1\":{\"373\":2}}],[\"loicsharma\",{\"1\":{\"211\":2,\"1117\":2}}],[\"loic\",{\"1\":{\"211\":2,\"1117\":2}}],[\"location\",{\"1\":{\"93\":1,\"543\":1,\"693\":1}}],[\"localvslayoutt\",{\"1\":{\"964\":2}}],[\"localvslayout\",{\"1\":{\"964\":1}}],[\"localmachine\",{\"1\":{\"692\":1}}],[\"localconfig\",{\"1\":{\"661\":4}}],[\"localcache\",{\"1\":{\"43\":1}}],[\"localhost\",{\"1\":{\"151\":2,\"212\":1,\"213\":1,\"219\":1,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"421\":1,\"468\":1,\"472\":1,\"500\":4,\"540\":1,\"543\":1,\"552\":1,\"554\":1,\"567\":1,\"568\":1,\"569\":1,\"580\":1,\"603\":2,\"604\":1,\"605\":1,\"608\":1,\"609\":1,\"612\":1,\"613\":1,\"616\":1,\"617\":1,\"621\":1,\"622\":1,\"623\":1,\"626\":1,\"627\":1,\"628\":1,\"631\":1,\"632\":1,\"642\":4,\"648\":4,\"654\":2,\"661\":2,\"666\":2,\"670\":1,\"673\":1,\"733\":1,\"734\":2,\"744\":1,\"745\":1,\"870\":1,\"1118\":1,\"1119\":1}}],[\"localization\",{\"1\":{\"148\":1}}],[\"localizer\",{\"1\":{\"145\":5}}],[\"local\",{\"1\":{\"3\":2,\"43\":2,\"564\":3,\"817\":2,\"824\":1,\"846\":2,\"847\":1,\"848\":1,\"870\":1,\"885\":4,\"886\":2,\"928\":1,\"968\":1,\"1079\":1,\"1135\":2,\"1136\":2}}],[\"loaded对话框中给出\",{\"1\":{\"986\":1}}],[\"loader\",{\"1\":{\"576\":3,\"577\":1}}],[\"loaders\",{\"1\":{\"574\":5,\"576\":2}}],[\"loadbalancers\",{\"1\":{\"914\":1}}],[\"loadbalancer\",{\"1\":{\"914\":1,\"918\":1}}],[\"load这对命令用法很相似\",{\"1\":{\"811\":1}}],[\"loadsettings\",{\"1\":{\"582\":2}}],[\"loadcontext\",{\"1\":{\"577\":2}}],[\"loadplugin\",{\"1\":{\"577\":2}}],[\"loadunmanageddllfrompath\",{\"1\":{\"577\":1}}],[\"loadunmanageddll\",{\"1\":{\"577\":1}}],[\"loadfromassemblyname\",{\"1\":{\"577\":1}}],[\"loadfromassemblypath\",{\"1\":{\"577\":1}}],[\"loadfromstream\",{\"1\":{\"574\":1,\"577\":1}}],[\"loadfrom的差别\",{\"1\":{\"117\":1}}],[\"loadfrom\",{\"1\":{\"92\":1,\"94\":3,\"98\":1,\"117\":1}}],[\"loadfile\",{\"1\":{\"92\":1,\"94\":2,\"117\":2}}],[\"load\",{\"1\":{\"92\":1,\"94\":2,\"118\":1,\"577\":1,\"683\":1,\"691\":2,\"810\":1,\"868\":1}}],[\"long类型json序列化重写\",{\"1\":{\"478\":1}}],[\"long精度丢失处理\",{\"0\":{\"478\":1}}],[\"longdate\",{\"1\":{\"453\":1}}],[\"long\",{\"1\":{\"74\":1,\"75\":1,\"202\":1,\"478\":4,\"600\":1,\"602\":1,\"607\":1,\"611\":1,\"615\":1,\"625\":1,\"630\":1}}],[\"long2006sky\",{\"1\":{\"46\":1}}],[\"logo\",{\"1\":{\"863\":3,\"869\":1,\"965\":1}}],[\"logoimg\",{\"1\":{\"616\":2}}],[\"logoimg是<input\",{\"1\":{\"616\":1}}],[\"logrotate\",{\"1\":{\"862\":2}}],[\"logic\",{\"1\":{\"807\":1,\"1110\":3}}],[\"loginresponse\",{\"1\":{\"669\":2}}],[\"loginrequest\",{\"1\":{\"669\":2}}],[\"loginformation\",{\"1\":{\"401\":3,\"402\":3,\"403\":14,\"421\":3,\"446\":1,\"447\":1,\"456\":1,\"466\":1,\"575\":2,\"576\":1}}],[\"loginuser\",{\"1\":{\"368\":1}}],[\"loginid2\",{\"1\":{\"366\":1}}],[\"loginid=\",{\"1\":{\"366\":1}}],[\"loginid\",{\"1\":{\"366\":4}}],[\"loginpath\",{\"1\":{\"359\":1}}],[\"login\",{\"1\":{\"3\":1,\"36\":1,\"217\":1,\"309\":1,\"359\":1,\"364\":1,\"368\":3,\"371\":2,\"669\":1,\"694\":1,\"698\":1,\"733\":1,\"734\":1,\"744\":1,\"1070\":5}}],[\"logallrefupdates\",{\"1\":{\"777\":1,\"788\":1}}],[\"logpath\",{\"1\":{\"692\":4}}],[\"logwrite\",{\"1\":{\"692\":9}}],[\"logwarning\",{\"1\":{\"418\":2,\"446\":1,\"447\":1,\"456\":1,\"466\":1}}],[\"logform\",{\"1\":{\"691\":1}}],[\"logfile没有设置或者设置为auto\",{\"1\":{\"564\":2}}],[\"logfile\",{\"1\":{\"564\":20}}],[\"logfile=\",{\"1\":{\"547\":2,\"564\":5}}],[\"loghelper\",{\"1\":{\"691\":7}}],[\"logeventlevel\",{\"1\":{\"463\":1}}],[\"logerror\",{\"1\":{\"364\":1,\"404\":2,\"413\":1,\"446\":1,\"447\":1,\"456\":1,\"466\":1,\"501\":2}}],[\"logconfig\",{\"1\":{\"458\":2}}],[\"logcritical\",{\"1\":{\"446\":2,\"447\":1,\"456\":1,\"466\":2}}],[\"logmanager\",{\"1\":{\"454\":1}}],[\"logdashboard是在github上开源的aspnetcore项目\",{\"1\":{\"448\":1}}],[\"logdashboard\",{\"0\":{\"448\":1},\"1\":{\"448\":2}}],[\"logdebug\",{\"1\":{\"446\":1,\"447\":1,\"456\":2,\"466\":1}}],[\"log4net>\",{\"1\":{\"447\":1}}],[\"log4net记录日志的功能非常强大\",{\"1\":{\"447\":1}}],[\"log4net是\",{\"1\":{\"447\":1}}],[\"log4net\",{\"0\":{\"447\":1},\"1\":{\"447\":6,\"448\":1}}],[\"logtrace\",{\"1\":{\"446\":1,\"447\":1,\"456\":1,\"466\":1}}],[\"loggers\",{\"0\":{\"1155\":1}}],[\"loggerconfiguration\",{\"1\":{\"458\":1,\"459\":1,\"462\":2,\"463\":1}}],[\"loggerbuilder\",{\"1\":{\"454\":3}}],[\"logger\",{\"0\":{\"446\":1},\"1\":{\"167\":8,\"168\":5,\"364\":1,\"401\":11,\"402\":7,\"403\":26,\"404\":10,\"407\":4,\"413\":5,\"418\":6,\"421\":7,\"446\":10,\"447\":10,\"453\":2,\"454\":3,\"456\":11,\"458\":3,\"459\":2,\"463\":1,\"465\":1,\"466\":6,\"501\":2,\"575\":10,\"576\":5}}],[\"loggerfactory\",{\"1\":{\"165\":2,\"501\":7}}],[\"logging配置节\",{\"1\":{\"446\":1}}],[\"loggingmessagewriter>\",{\"1\":{\"344\":1}}],[\"logging\",{\"1\":{\"153\":1,\"391\":1,\"446\":4,\"447\":6,\"454\":1,\"455\":1,\"457\":1,\"461\":1,\"583\":1}}],[\"loglevel=info\",{\"1\":{\"564\":1}}],[\"loglevel\",{\"1\":{\"153\":1,\"391\":1,\"446\":5,\"447\":3,\"454\":1,\"455\":1,\"583\":1}}],[\"logs看看容器日志\",{\"1\":{\"837\":1}}],[\"logs可以查看容器内部的日志\",{\"1\":{\"836\":1}}],[\"logstash等\",{\"1\":{\"914\":1}}],[\"logstash\",{\"1\":{\"564\":1}}],[\"logs\",{\"1\":{\"36\":1,\"37\":1,\"453\":1,\"564\":1,\"781\":2,\"788\":1,\"811\":1,\"837\":1,\"852\":1,\"854\":1,\"899\":1,\"902\":1}}],[\"log可以查看提交历史\",{\"1\":{\"33\":1}}],[\"log\",{\"1\":{\"22\":4,\"23\":5,\"26\":2,\"27\":1,\"36\":1,\"37\":1,\"167\":3,\"447\":2,\"453\":1,\"459\":2,\"463\":5,\"501\":2,\"547\":4,\"564\":9,\"603\":2,\"608\":1,\"612\":1,\"616\":2,\"621\":1,\"626\":1,\"631\":1,\"692\":1,\"738\":2,\"770\":1,\"784\":1,\"785\":2,\"786\":5,\"854\":1,\"876\":1,\"908\":1,\"949\":2,\"1096\":2}}],[\"l4jkqfcs\",{\"1\":{\"3\":1,\"36\":1}}],[\"l\",{\"1\":{\"3\":1,\"4\":1,\"447\":1,\"529\":1,\"846\":2,\"865\":1,\"867\":1,\"1036\":1,\"1074\":1,\"1081\":3}}],[\"dsn\",{\"1\":{\"1111\":1}}],[\"d盘\",{\"1\":{\"1110\":1}}],[\"dn=cn\",{\"1\":{\"1034\":4}}],[\"dns2=192\",{\"1\":{\"1110\":1}}],[\"dns1=192\",{\"1\":{\"1107\":1,\"1110\":1}}],[\"dns服务器中记录了容器启动时通过\",{\"1\":{\"843\":1}}],[\"dnspy将向你显示反编译的代码\",{\"1\":{\"173\":1}}],[\"dnspy允许你调试任何\",{\"1\":{\"173\":1}}],[\"dnspy是一款开源的基于ilspy发展而来的\",{\"1\":{\"172\":1}}],[\"dnspy\",{\"0\":{\"172\":1,\"173\":1},\"1\":{\"172\":2,\"173\":1}}],[\"dns\",{\"1\":{\"152\":1,\"322\":3,\"914\":1,\"938\":1,\"941\":11,\"942\":1,\"943\":6,\"945\":2,\"1110\":1,\"1111\":3}}],[\"d4088008828f2b7d95b3546d32c641b736001af5\",{\"1\":{\"1034\":1}}],[\"dvd版本较大\",{\"1\":{\"1103\":1}}],[\"dvd\",{\"1\":{\"1034\":12,\"1035\":12,\"1110\":6}}],[\"dy\",{\"1\":{\"968\":1}}],[\"dyn\",{\"1\":{\"865\":1,\"866\":2,\"867\":3,\"868\":4,\"870\":5}}],[\"dynamodb\",{\"1\":{\"152\":2}}],[\"dynamicparameters\",{\"1\":{\"1051\":1,\"1053\":1,\"1055\":1,\"1058\":1,\"1060\":1}}],[\"dynamic\",{\"1\":{\"94\":2,\"873\":1,\"874\":1}}],[\"dhcp\",{\"1\":{\"928\":1,\"1110\":3}}],[\"d0955f21bf24\",{\"1\":{\"866\":1}}],[\"d选项代表后台运行\",{\"1\":{\"852\":1}}],[\"d6a96ae3b442218a91512b9e1c57b9578b487a0b\",{\"1\":{\"779\":1}}],[\"d8036c1\",{\"1\":{\"769\":1}}],[\"d+\",{\"1\":{\"656\":1}}],[\"d713063522ab4e13fdf47533\",{\"1\":{\"594\":1}}],[\"d文件夹下\",{\"1\":{\"547\":1}}],[\"d16b945b3e172a42bfe5b53d08f7487b\",{\"1\":{\"474\":1}}],[\"dto\",{\"1\":{\"468\":1,\"472\":2,\"476\":3,\"506\":2,\"507\":2,\"525\":2,\"630\":3}}],[\"dtd\",{\"1\":{\"120\":1}}],[\"d这4个对象之间已经没有了耦合关系\",{\"1\":{\"436\":1}}],[\"d这4个对象没有了耦合关系\",{\"1\":{\"436\":1}}],[\"driver\",{\"1\":{\"843\":2,\"1070\":1}}],[\"drivers\",{\"1\":{\"333\":1}}],[\"drwxr\",{\"1\":{\"777\":4}}],[\"dr\",{\"1\":{\"691\":4}}],[\"drawimage\",{\"1\":{\"688\":2}}],[\"drawing\",{\"1\":{\"683\":1}}],[\"draw\",{\"0\":{\"295\":1},\"1\":{\"295\":1,\"439\":1,\"440\":6,\"442\":15}}],[\"dl\",{\"0\":{\"307\":1}}],[\"dll是一样的\",{\"1\":{\"836\":1}}],[\"dll文件\",{\"1\":{\"90\":1,\"575\":1}}],[\"dll\",{\"1\":{\"44\":1,\"88\":1,\"90\":1,\"94\":3,\"98\":1,\"540\":1,\"547\":1,\"548\":1,\"574\":1,\"799\":1,\"806\":1,\"834\":2,\"836\":1,\"837\":2,\"838\":3,\"1070\":1}}],[\"dllimport特性\",{\"1\":{\"44\":1}}],[\"dllimport\",{\"0\":{\"44\":1},\"1\":{\"44\":1}}],[\"dd\",{\"1\":{\"331\":2,\"421\":1,\"447\":1,\"453\":2,\"462\":1,\"478\":1,\"692\":1,\"694\":1,\"800\":3,\"863\":1}}],[\"ddwrt\",{\"1\":{\"253\":1}}],[\"ddd\",{\"1\":{\"210\":3,\"342\":3}}],[\"duplicate\",{\"1\":{\"1036\":2}}],[\"dubbo\",{\"1\":{\"253\":1}}],[\"durable\",{\"1\":{\"208\":2}}],[\"dfa\",{\"1\":{\"167\":1}}],[\"dfamatcher\",{\"1\":{\"165\":1}}],[\"dfamatcherbuilder\",{\"1\":{\"165\":1}}],[\"dfamatcherfactory>\",{\"1\":{\"165\":1}}],[\"dmo\",{\"1\":{\"98\":3}}],[\"d=1\",{\"1\":{\"76\":1}}],[\"d=1d\",{\"1\":{\"76\":1}}],[\"dcz2015\",{\"1\":{\"43\":1,\"46\":1}}],[\"dbtool\",{\"1\":{\"1045\":2}}],[\"dbmodel\",{\"1\":{\"1041\":5,\"1043\":2,\"1044\":3}}],[\"db2\",{\"1\":{\"1009\":1}}],[\"dbhcm\",{\"1\":{\"1009\":1}}],[\"dbchm\",{\"0\":{\"1009\":1},\"1\":{\"1009\":1}}],[\"dbcommand\",{\"1\":{\"524\":2}}],[\"dbconfig\",{\"1\":{\"501\":1,\"502\":1}}],[\"dbcontextoptionsbuilder\",{\"1\":{\"502\":1}}],[\"dbcontextoptions\",{\"1\":{\"502\":1}}],[\"dbcontextoptions<opendbcontext>参数的公共构造函数\",{\"1\":{\"502\":1}}],[\"dbcontextoptions<opendbcontext>\",{\"1\":{\"501\":1}}],[\"dbcontext\",{\"1\":{\"501\":13,\"502\":3,\"506\":1,\"507\":1,\"528\":1}}],[\"dbo\",{\"1\":{\"509\":1,\"1056\":1}}],[\"dbset<>\",{\"1\":{\"508\":1}}],[\"dbset<score>\",{\"1\":{\"502\":1}}],[\"dbset<user>\",{\"1\":{\"501\":1,\"502\":1,\"518\":1}}],[\"dbsofts\",{\"1\":{\"283\":1}}],[\"dba\",{\"1\":{\"192\":1}}],[\"db\",{\"0\":{\"1141\":1},\"1\":{\"43\":4,\"211\":1,\"217\":3,\"503\":2,\"527\":5,\"528\":2,\"661\":6,\"1047\":2,\"1056\":1,\"1061\":2,\"1117\":1}}],[\"dingliqc\",{\"1\":{\"700\":1}}],[\"dingtalk\",{\"1\":{\"242\":1}}],[\"diagram\",{\"1\":{\"805\":1}}],[\"diagnosticlistener\",{\"1\":{\"167\":10}}],[\"diagnosticsendpointmatchedkey\",{\"1\":{\"167\":3}}],[\"diagnostics\",{\"1\":{\"152\":1,\"446\":1}}],[\"dialog\",{\"1\":{\"691\":2}}],[\"dialogresult\",{\"1\":{\"691\":8}}],[\"dic\",{\"1\":{\"613\":2}}],[\"dictionarycache\",{\"1\":{\"402\":7}}],[\"dictionary<string\",{\"1\":{\"402\":2,\"484\":1,\"583\":2,\"613\":2,\"617\":1,\"1047\":1,\"1061\":4}}],[\"direction\",{\"1\":{\"1036\":1}}],[\"directional\",{\"1\":{\"667\":1}}],[\"directprint\",{\"1\":{\"691\":3}}],[\"directory=\",{\"1\":{\"547\":1,\"564\":4}}],[\"directory\",{\"1\":{\"483\":1,\"546\":1,\"564\":2,\"574\":2,\"661\":1,\"692\":2,\"768\":1,\"799\":1,\"1019\":1,\"1073\":1,\"1074\":1,\"1075\":1,\"1076\":1,\"1079\":1,\"1080\":3}}],[\"dirname\",{\"1\":{\"574\":2}}],[\"dir\",{\"1\":{\"564\":1,\"574\":6,\"734\":2}}],[\"di\",{\"1\":{\"344\":3}}],[\"dism\",{\"1\":{\"1024\":2}}],[\"discard\",{\"1\":{\"768\":1}}],[\"discovery\",{\"1\":{\"204\":2,\"945\":1}}],[\"dispose\",{\"1\":{\"598\":1,\"691\":1}}],[\"display\",{\"1\":{\"64\":3,\"157\":3,\"368\":2,\"474\":3,\"475\":3}}],[\"displayname\",{\"1\":{\"64\":5,\"156\":2,\"157\":4,\"573\":3,\"574\":2,\"575\":1}}],[\"disabled\",{\"0\":{\"893\":1},\"1\":{\"947\":1}}],[\"disable\",{\"1\":{\"477\":3,\"911\":1,\"1109\":1}}],[\"disablecors\",{\"1\":{\"155\":1}}],[\"disk\",{\"1\":{\"152\":1}}],[\"distributedcacheentryoptions\",{\"1\":{\"378\":1,\"381\":1,\"382\":1,\"386\":1,\"387\":1}}],[\"distributed\",{\"1\":{\"378\":1,\"769\":1}}],[\"distributecache\",{\"1\":{\"43\":1}}],[\"distribution\",{\"1\":{\"43\":3,\"252\":1}}],[\"different\",{\"1\":{\"683\":1}}],[\"diff\",{\"0\":{\"787\":1},\"1\":{\"23\":4,\"769\":3,\"787\":5}}],[\"deep\",{\"1\":{\"968\":1}}],[\"demystifying\",{\"1\":{\"945\":1}}],[\"demo\",{\"1\":{\"208\":1,\"342\":2,\"467\":1,\"494\":1,\"497\":1,\"777\":8,\"788\":2,\"852\":1,\"1046\":1}}],[\"dehamer\",{\"1\":{\"873\":1}}],[\"debian等映像能下载和解压到用户的本地计算机\",{\"1\":{\"1007\":1}}],[\"debian\",{\"1\":{\"866\":8,\"867\":4,\"868\":4,\"869\":1,\"870\":4}}],[\"debugging\",{\"1\":{\"985\":2,\"986\":1}}],[\"debugger\",{\"1\":{\"321\":1,\"985\":1,\"986\":1}}],[\"debug中1\",{\"1\":{\"446\":1}}],[\"debug\",{\"1\":{\"94\":3,\"98\":1,\"446\":5,\"447\":3,\"453\":1,\"454\":1,\"456\":1,\"457\":1,\"459\":1,\"462\":1,\"564\":1,\"692\":1}}],[\"deamon通过容器的\",{\"1\":{\"839\":1}}],[\"denied\",{\"1\":{\"359\":1,\"949\":1}}],[\"denglj的回答\",{\"1\":{\"253\":1}}],[\"deprecated\",{\"1\":{\"497\":1,\"636\":1}}],[\"dependencyinjection\",{\"1\":{\"410\":1,\"600\":1,\"660\":1,\"1126\":2}}],[\"dependency\",{\"1\":{\"355\":1}}],[\"deployment和replica\",{\"1\":{\"914\":1}}],[\"deployment和replicaset两者之间的关系\",{\"1\":{\"914\":1}}],[\"deployments和replicasets是为无状态服务设计的\",{\"1\":{\"914\":1}}],[\"deployment会按照控制的速率将pod从旧的replicaset移\",{\"1\":{\"914\":1}}],[\"deployment\",{\"1\":{\"914\":14,\"918\":1,\"1037\":1}}],[\"deploy\",{\"1\":{\"8\":3,\"563\":1,\"914\":1}}],[\"devices\",{\"1\":{\"684\":1}}],[\"device\",{\"1\":{\"684\":2}}],[\"devappsettings\",{\"1\":{\"583\":1}}],[\"develope\",{\"1\":{\"968\":1}}],[\"developer是ado\",{\"1\":{\"968\":1}}],[\"developer是一个用于linq\",{\"1\":{\"968\":1}}],[\"developers\",{\"1\":{\"712\":1}}],[\"developer\",{\"1\":{\"138\":2}}],[\"develop\",{\"1\":{\"774\":1}}],[\"development\",{\"1\":{\"389\":1,\"552\":1,\"585\":1,\"852\":1}}],[\"dev\",{\"0\":{\"334\":1},\"1\":{\"334\":1,\"756\":1,\"757\":1,\"759\":1,\"760\":1,\"774\":3,\"784\":3,\"785\":9,\"786\":3,\"788\":2,\"863\":1,\"1121\":2}}],[\"delay\",{\"1\":{\"675\":1}}],[\"delivery\",{\"1\":{\"208\":1}}],[\"del\",{\"1\":{\"204\":4,\"988\":1}}],[\"deleteentity\",{\"1\":{\"1044\":2}}],[\"deleteasync\",{\"1\":{\"627\":1}}],[\"deleteasync<t>\",{\"1\":{\"627\":1}}],[\"deleteasync<resultmodel<bool>>\",{\"1\":{\"627\":1}}],[\"delete几种类型的接口\",{\"1\":{\"600\":1}}],[\"deleted\",{\"1\":{\"501\":3}}],[\"delete\",{\"0\":{\"624\":1},\"1\":{\"155\":1,\"158\":1,\"206\":1,\"483\":1,\"552\":1,\"625\":1,\"626\":1,\"684\":1,\"746\":2,\"914\":1,\"1044\":2}}],[\"delegate\",{\"1\":{\"68\":1,\"83\":1,\"203\":1,\"400\":1,\"985\":1,\"1045\":1}}],[\"detached\",{\"1\":{\"786\":1}}],[\"details\",{\"1\":{\"8\":1,\"40\":1,\"345\":1,\"346\":1,\"347\":1,\"602\":1,\"603\":2,\"604\":1,\"605\":1,\"694\":5,\"774\":1,\"953\":1,\"968\":1,\"1012\":5,\"1116\":1}}],[\"deterministic\",{\"1\":{\"167\":1,\"205\":1}}],[\"describe\",{\"1\":{\"914\":1,\"918\":1}}],[\"descriptionattribute\",{\"1\":{\"597\":1,\"1061\":2}}],[\"description=supervisor\",{\"1\":{\"549\":1}}],[\"description\",{\"1\":{\"43\":3,\"151\":2,\"331\":1,\"368\":2,\"484\":1,\"494\":1,\"497\":16,\"573\":3,\"574\":2,\"575\":1,\"777\":4,\"1061\":3}}],[\"desktop\",{\"1\":{\"876\":2,\"1014\":1,\"1110\":1}}],[\"destination\",{\"1\":{\"925\":1,\"1079\":1}}],[\"dest\",{\"1\":{\"812\":1}}],[\"deserialize<list<configs>>\",{\"1\":{\"691\":1}}],[\"deserializeobject<printdata>\",{\"1\":{\"691\":1}}],[\"deserializeobject<t>\",{\"1\":{\"600\":1}}],[\"deserializeobject<dog>\",{\"1\":{\"128\":1}}],[\"deserializejwttoken\",{\"1\":{\"364\":1}}],[\"design\",{\"1\":{\"202\":2,\"501\":1}}],[\"decompilation\",{\"1\":{\"986\":1}}],[\"decompiler\",{\"1\":{\"170\":1}}],[\"decompress\",{\"1\":{\"779\":1}}],[\"decorator\",{\"1\":{\"202\":2}}],[\"declaredonly\",{\"1\":{\"119\":1}}],[\"decimal\",{\"1\":{\"61\":4,\"76\":3,\"501\":2}}],[\"defining\",{\"1\":{\"564\":1}}],[\"definedtypes\",{\"1\":{\"93\":1,\"600\":1}}],[\"def\",{\"1\":{\"160\":2,\"564\":4}}],[\"def等\",{\"1\":{\"160\":1}}],[\"default这个网络\",{\"1\":{\"852\":1}}],[\"defaultcache\",{\"1\":{\"710\":1}}],[\"defaultcachenamespace\",{\"1\":{\"710\":1}}],[\"defaultcontractresolver\",{\"1\":{\"478\":1}}],[\"defaultprofile\",{\"1\":{\"1036\":1}}],[\"defaultprinter\",{\"1\":{\"691\":2}}],[\"defaultpluginsexternalprovider\",{\"1\":{\"575\":1,\"577\":3}}],[\"defaultparameterpolicyfactory>\",{\"1\":{\"165\":1}}],[\"defaultmsgservice>\",{\"1\":{\"575\":1,\"576\":1}}],[\"defaultmsgservice\",{\"1\":{\"575\":2}}],[\"defaulticon\",{\"1\":{\"692\":3}}],[\"defaultifempty\",{\"1\":{\"521\":2,\"522\":2}}],[\"defaultinlineconstraintresolver>\",{\"1\":{\"165\":1}}],[\"defaultvalue\",{\"1\":{\"497\":2}}],[\"defaultapiversion\",{\"1\":{\"494\":1,\"498\":1,\"638\":1,\"644\":1,\"650\":1,\"655\":1}}],[\"defaultdatabase=1\",{\"1\":{\"382\":1,\"387\":1}}],[\"defaultendpointroutebuilder\",{\"1\":{\"166\":1,\"167\":2}}],[\"defaultendpointselector>\",{\"1\":{\"165\":1}}],[\"defaultresponsemessage\",{\"1\":{\"711\":1}}],[\"defaultrequestheaders\",{\"1\":{\"586\":1,\"600\":3}}],[\"defaultrequestculture\",{\"1\":{\"144\":1}}],[\"defaultroutepatterntransformer>\",{\"1\":{\"165\":1}}],[\"defaulttemplatebinderfactory>\",{\"1\":{\"165\":1}}],[\"defaultlinkparser>\",{\"1\":{\"165\":1}}],[\"defaultlinkgenerator>\",{\"1\":{\"165\":1}}],[\"defaultobjectpoolprovider>\",{\"1\":{\"165\":1}}],[\"defaultsample\",{\"1\":{\"575\":2,\"577\":2}}],[\"defaults\",{\"1\":{\"163\":1,\"1036\":3}}],[\"default\",{\"1\":{\"46\":1,\"151\":2,\"153\":1,\"366\":2,\"391\":1,\"446\":4,\"447\":1,\"455\":1,\"456\":1,\"462\":1,\"497\":2,\"543\":1,\"564\":28,\"661\":1,\"853\":3,\"914\":1,\"918\":1}}],[\"de\",{\"1\":{\"83\":2}}],[\"d\",{\"0\":{\"1149\":1},\"1\":{\"8\":1,\"36\":1,\"37\":5,\"161\":4,\"163\":6,\"206\":2,\"211\":2,\"217\":2,\"218\":2,\"243\":3,\"380\":2,\"385\":2,\"447\":1,\"474\":3,\"543\":1,\"546\":1,\"547\":2,\"554\":2,\"564\":2,\"567\":1,\"569\":2,\"617\":1,\"661\":1,\"684\":2,\"760\":1,\"764\":2,\"773\":1,\"777\":1,\"778\":2,\"780\":4,\"781\":2,\"782\":2,\"785\":2,\"791\":2,\"806\":2,\"811\":1,\"817\":1,\"839\":1,\"842\":1,\"853\":3,\"854\":3,\"855\":2,\"856\":2,\"857\":1,\"858\":1,\"859\":2,\"860\":1,\"861\":1,\"862\":1,\"868\":1,\"870\":1,\"885\":2,\"887\":1,\"899\":2,\"905\":1,\"964\":3,\"970\":1,\"988\":1,\"1036\":1,\"1070\":2,\"1074\":1,\"1077\":1,\"1079\":1,\"1081\":1,\"1117\":2}}],[\"do\",{\"1\":{\"774\":1}}],[\"dong\",{\"1\":{\"1123\":1}}],[\"don\",{\"1\":{\"564\":1}}],[\"donet易生君\",{\"1\":{\"137\":1}}],[\"dos\",{\"1\":{\"529\":1}}],[\"dosome\",{\"1\":{\"528\":1}}],[\"does\",{\"1\":{\"394\":1}}],[\"dom\",{\"1\":{\"330\":1}}],[\"domain\",{\"1\":{\"3\":1,\"36\":1}}],[\"do等等\",{\"1\":{\"207\":1}}],[\"dot\",{\"1\":{\"203\":4}}],[\"dottrance允许你\",{\"1\":{\"174\":1}}],[\"dottrace是jetbrains的另一个出色工具\",{\"1\":{\"174\":1}}],[\"dottrace\",{\"0\":{\"174\":1}}],[\"dotpeek\",{\"0\":{\"170\":1},\"1\":{\"170\":1}}],[\"dotnetchina\",{\"1\":{\"1009\":1}}],[\"dotnetcore\",{\"0\":{\"1142\":1},\"1\":{\"136\":1}}],[\"dotnet学习站\",{\"1\":{\"987\":1}}],[\"dotnetrunmessages\",{\"1\":{\"552\":1}}],[\"dotnet6程序\",{\"1\":{\"537\":1}}],[\"dotnet界面大白博客园\",{\"1\":{\"467\":1}}],[\"dotnet内置有对依赖注入\",{\"1\":{\"344\":1}}],[\"dotnet面试题\",{\"0\":{\"203\":1}}],[\"dotnet大王\",{\"1\":{\"137\":1}}],[\"dotnet源计划\",{\"1\":{\"137\":1}}],[\"dotnet\",{\"1\":{\"46\":1,\"135\":2,\"141\":3,\"213\":1,\"355\":1,\"399\":1,\"467\":2,\"501\":1,\"538\":3,\"540\":1,\"543\":1,\"549\":1,\"577\":3,\"585\":1,\"599\":2,\"806\":2,\"834\":3,\"836\":2,\"837\":3,\"838\":4,\"956\":1,\"1019\":2,\"1024\":2,\"1037\":3,\"1070\":8,\"1119\":1,\"1122\":1,\"1123\":1}}],[\"dobfmxr4vhjzog8vdufujw\",{\"1\":{\"125\":1}}],[\"dogsonly=true\",{\"1\":{\"468\":2}}],[\"dogsonly\",{\"1\":{\"468\":2}}],[\"dog3\",{\"1\":{\"128\":3}}],[\"dog2\",{\"1\":{\"128\":4}}],[\"dog==animal\",{\"1\":{\"127\":1}}],[\"dog继承了animal\",{\"1\":{\"73\":1}}],[\"dog\",{\"1\":{\"73\":4,\"127\":4,\"128\":14,\"130\":4,\"131\":6}}],[\"double\",{\"1\":{\"46\":1,\"54\":2,\"76\":3,\"129\":2}}],[\"doc\",{\"1\":{\"448\":1,\"683\":2,\"687\":3,\"688\":5,\"704\":1,\"712\":1,\"893\":1}}],[\"docmirror\",{\"1\":{\"334\":1}}],[\"docx\",{\"1\":{\"304\":1}}],[\"documents\",{\"1\":{\"988\":1}}],[\"documentation\",{\"1\":{\"321\":2}}],[\"document\",{\"1\":{\"242\":1,\"321\":1,\"683\":1,\"684\":6}}],[\"documentdb\",{\"1\":{\"152\":2}}],[\"docs\",{\"1\":{\"6\":1,\"46\":1,\"136\":1,\"138\":1,\"148\":1,\"242\":1,\"288\":1,\"343\":1,\"355\":1,\"382\":1,\"410\":1,\"468\":1,\"470\":1,\"474\":2,\"477\":4,\"484\":1,\"501\":2,\"514\":1,\"523\":1,\"528\":1,\"549\":1,\"558\":1,\"563\":1,\"588\":2,\"599\":1,\"629\":1,\"666\":2,\"700\":1,\"702\":1,\"712\":1,\"811\":1,\"845\":1,\"852\":1,\"862\":1,\"874\":1,\"956\":1,\"964\":1,\"968\":1,\"985\":1,\"986\":1,\"1036\":2,\"1055\":1,\"1108\":1,\"1132\":1}}],[\"docker原生的overlay网络就是基于vxlan隧道实现的\",{\"1\":{\"928\":1}}],[\"docker2与docker0的veth\",{\"1\":{\"926\":1}}],[\"docker2\",{\"1\":{\"926\":2}}],[\"docker1\",{\"1\":{\"926\":2}}],[\"docker0将报文丢给flannel\",{\"1\":{\"928\":1}}],[\"docker0\",{\"1\":{\"925\":2,\"926\":4,\"927\":3}}],[\"docker0网桥的ip地址段进行分配的\",{\"1\":{\"919\":1}}],[\"docker0查看\",{\"1\":{\"839\":1}}],[\"docker安装\",{\"0\":{\"881\":1}}],[\"docker安装gitlab\",{\"1\":{\"40\":1}}],[\"docker运行环境\",{\"1\":{\"880\":1}}],[\"dockerconfigjson\",{\"1\":{\"914\":1}}],[\"dockercomposedemo\",{\"1\":{\"852\":1}}],[\"dockercli\",{\"1\":{\"876\":1}}],[\"docker下载地址为\",{\"1\":{\"876\":1}}],[\"docker就说明成功了\",{\"1\":{\"862\":1}}],[\"docker就好比是下面的小鲸鱼\",{\"1\":{\"804\":1}}],[\"docker组\",{\"1\":{\"862\":1}}],[\"docker官方仓库\",{\"1\":{\"862\":1}}],[\"docker可视化\",{\"0\":{\"853\":1}}],[\"docker可以将应用程序及环境很方便的以容器的形式启动\",{\"1\":{\"843\":1}}],[\"docker默认安装环境下是不包含docker\",{\"1\":{\"845\":1}}],[\"docker默认自动指定主机路径\",{\"1\":{\"815\":1}}],[\"docker提供了一个叫docker\",{\"1\":{\"843\":1}}],[\"docker主机就会创建一对虚拟网卡vethpair设备接口\",{\"1\":{\"840\":1}}],[\"docker将veth\",{\"1\":{\"840\":1}}],[\"docker会分配一个ip给容器\",{\"1\":{\"840\":1}}],[\"docker的网络模式有如下几种\",{\"1\":{\"839\":1}}],[\"docker在启动容器的时候可以通过\",{\"1\":{\"839\":1}}],[\"docker在启动容器时可以指定网络模式\",{\"1\":{\"839\":1}}],[\"docker在线版\",{\"1\":{\"804\":1,\"853\":1}}],[\"docker网络模式简介\",{\"0\":{\"839\":1}}],[\"dockerignore文件中进行配置\",{\"1\":{\"838\":1}}],[\"docker都会将挂载的主机目录指定到如上图的目录中\",{\"1\":{\"815\":1}}],[\"docker和我们熟悉的git很类似\",{\"1\":{\"807\":1}}],[\"dockerdemo\",{\"1\":{\"806\":1}}],[\"docker容器拥有自己的network\",{\"1\":{\"839\":1}}],[\"docker容器之间相互隔离\",{\"1\":{\"806\":1}}],[\"docker容器可以运行在各种设备环境中\",{\"1\":{\"806\":1}}],[\"docker轻量级\",{\"1\":{\"806\":1}}],[\"docker带来的好处\",{\"0\":{\"806\":1}}],[\"docker是客户端\",{\"1\":{\"805\":1}}],[\"docker架构\",{\"0\":{\"805\":1}}],[\"docker简介\",{\"0\":{\"804\":1}}],[\"docker方式\",{\"0\":{\"796\":1},\"1\":{\"791\":1}}],[\"docker部署详细流程\",{\"0\":{\"550\":1}}],[\"docker部署\",{\"1\":{\"216\":1}}],[\"dockerfile中expose\",{\"1\":{\"923\":1}}],[\"dockerfile路径根据不同项目地址不同\",{\"1\":{\"899\":1}}],[\"dockerfiledemo\",{\"1\":{\"834\":2,\"836\":2,\"837\":2,\"838\":3}}],[\"dockerfile内容如下\",{\"1\":{\"834\":1}}],[\"dockerfile关键字\",{\"0\":{\"819\":1}}],[\"dockerfile就是一个文本文件\",{\"1\":{\"818\":1}}],[\"dockerfile简介\",{\"0\":{\"818\":1}}],[\"dockerfile\",{\"0\":{\"867\":1},\"1\":{\"8\":1,\"125\":2,\"554\":1,\"818\":1,\"863\":3,\"865\":2,\"866\":1,\"867\":3,\"870\":1,\"871\":1,\"872\":2,\"873\":1,\"874\":2,\"899\":1,\"1070\":2}}],[\"docker\",{\"0\":{\"36\":1,\"37\":1,\"803\":1,\"1176\":1},\"1\":{\"3\":17,\"4\":2,\"8\":10,\"37\":3,\"38\":1,\"125\":2,\"210\":1,\"211\":2,\"216\":1,\"217\":2,\"218\":3,\"380\":1,\"385\":1,\"550\":1,\"554\":2,\"661\":1,\"779\":1,\"791\":2,\"796\":3,\"804\":3,\"805\":7,\"806\":1,\"809\":3,\"810\":10,\"811\":23,\"812\":3,\"815\":6,\"816\":2,\"817\":1,\"835\":1,\"837\":1,\"838\":2,\"839\":4,\"842\":2,\"843\":3,\"844\":2,\"845\":2,\"846\":6,\"847\":1,\"848\":1,\"849\":1,\"852\":11,\"853\":6,\"854\":2,\"855\":2,\"856\":1,\"857\":1,\"858\":1,\"859\":4,\"860\":1,\"861\":1,\"862\":32,\"863\":6,\"864\":1,\"865\":1,\"866\":1,\"867\":1,\"868\":10,\"870\":5,\"871\":5,\"872\":1,\"873\":5,\"874\":16,\"875\":2,\"876\":8,\"884\":1,\"885\":14,\"886\":6,\"887\":2,\"888\":2,\"893\":3,\"899\":8,\"902\":1,\"914\":1,\"916\":1,\"919\":1,\"923\":1,\"926\":1,\"1070\":21,\"1117\":2}}],[\"downloadstring\",{\"1\":{\"1008\":1}}],[\"downloads\",{\"1\":{\"617\":1,\"748\":1,\"802\":1,\"973\":1,\"1134\":1}}],[\"download\",{\"0\":{\"308\":1},\"1\":{\"3\":1,\"135\":1,\"283\":1,\"308\":1,\"683\":1,\"802\":1,\"846\":2,\"862\":1,\"865\":2,\"867\":2,\"964\":3,\"988\":2,\"1012\":5,\"1024\":1,\"1031\":3,\"1110\":1,\"1134\":1}}],[\"dapper映射配置\",{\"1\":{\"1061\":1}}],[\"dappermapperconfigs\",{\"1\":{\"1061\":1}}],[\"dapper是一个简单的对象关系映射框架\",{\"1\":{\"1048\":1}}],[\"dapperhelper\",{\"1\":{\"1047\":2}}],[\"dapper读写分离\",{\"0\":{\"1047\":1}}],[\"dapper\",{\"0\":{\"1065\":1,\"1067\":1,\"1184\":1},\"1\":{\"1038\":2,\"1048\":1,\"1053\":1,\"1055\":1,\"1058\":1,\"1060\":1,\"1061\":1,\"1065\":1,\"1066\":1,\"1067\":2}}],[\"dapper扩展lnskydb\",{\"0\":{\"1038\":1}}],[\"da89563c\",{\"1\":{\"790\":1}}],[\"dacb3c4a7c9a\",{\"1\":{\"709\":1}}],[\"days\",{\"1\":{\"863\":1}}],[\"daydayup\",{\"1\":{\"804\":1}}],[\"day\",{\"1\":{\"462\":1,\"463\":1,\"739\":1}}],[\"dark\",{\"1\":{\"321\":2,\"968\":1}}],[\"date=\",{\"1\":{\"1077\":1}}],[\"dateformatstring\",{\"1\":{\"478\":1}}],[\"date\",{\"1\":{\"447\":1,\"453\":2,\"462\":1,\"475\":2,\"1041\":4,\"1122\":1}}],[\"datepattern\",{\"1\":{\"447\":1}}],[\"datetimeoffset\",{\"1\":{\"358\":1,\"372\":1,\"373\":1,\"378\":1,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"469\":1}}],[\"datetime\",{\"1\":{\"120\":2,\"358\":1,\"364\":2,\"372\":1,\"373\":1,\"421\":1,\"469\":1,\"475\":5,\"501\":4,\"607\":1,\"620\":1,\"625\":1,\"672\":1,\"692\":1,\"693\":2,\"694\":1,\"1041\":11,\"1042\":1,\"1043\":4,\"1044\":2,\"1122\":4,\"1123\":1}}],[\"date栏显示的是执行日期和时间\",{\"1\":{\"22\":1}}],[\"datagrip\",{\"1\":{\"1014\":1}}],[\"dataget\",{\"1\":{\"427\":1}}],[\"data目录挂载到这个主机上\",{\"1\":{\"817\":1}}],[\"datavolumetest\",{\"1\":{\"815\":1}}],[\"datatable\",{\"1\":{\"691\":1}}],[\"datatype\",{\"1\":{\"608\":1,\"621\":1}}],[\"data格式\",{\"0\":{\"615\":1}}],[\"dataattribute\",{\"1\":{\"599\":1}}],[\"data=\",{\"1\":{\"402\":1}}],[\"datapermission\",{\"1\":{\"368\":1}}],[\"datapermissionenum\",{\"1\":{\"368\":3}}],[\"database=gxgtest\",{\"1\":{\"1048\":1}}],[\"database=crm\",{\"1\":{\"1047\":2}}],[\"database=test\",{\"1\":{\"661\":1}}],[\"database=yapi\",{\"1\":{\"217\":1}}],[\"databaseprovider\",{\"1\":{\"363\":2}}],[\"database\",{\"1\":{\"211\":2,\"283\":1,\"446\":1,\"501\":3,\"502\":3,\"524\":2,\"527\":3,\"528\":2,\"1117\":2}}],[\"datasource\",{\"1\":{\"43\":10,\"167\":2,\"1042\":1,\"1043\":2,\"1044\":5}}],[\"datasources\",{\"1\":{\"43\":8,\"165\":3,\"167\":2}}],[\"data\",{\"0\":{\"568\":1},\"1\":{\"36\":1,\"37\":1,\"151\":2,\"204\":2,\"205\":1,\"211\":2,\"402\":7,\"416\":2,\"421\":2,\"458\":1,\"506\":2,\"507\":2,\"564\":1,\"568\":1,\"577\":1,\"599\":1,\"603\":5,\"608\":3,\"609\":4,\"612\":3,\"613\":2,\"616\":4,\"617\":4,\"618\":1,\"621\":3,\"622\":4,\"626\":2,\"631\":1,\"632\":4,\"661\":1,\"691\":6,\"693\":1,\"694\":3,\"724\":1,\"734\":4,\"746\":6,\"791\":2,\"796\":2,\"827\":1,\"852\":1,\"853\":1,\"854\":1,\"855\":2,\"1048\":1,\"1050\":1,\"1077\":2,\"1117\":2}}],[\"daocloud\",{\"1\":{\"3\":1,\"846\":1}}],[\"daemonset会忽略node的unschedulable状态\",{\"1\":{\"914\":1}}],[\"daemonset保证在特定或所有node节点上都运行一个pod实例\",{\"1\":{\"914\":1}}],[\"daemon主机上的两个独立容器进行通信\",{\"1\":{\"839\":1}}],[\"daemon主机上运行的容器\",{\"1\":{\"839\":1}}],[\"daemon主机连接在一起\",{\"1\":{\"839\":1}}],[\"daemon进行构建\",{\"1\":{\"835\":1}}],[\"daemon进行\",{\"1\":{\"818\":1}}],[\"daemon\",{\"1\":{\"3\":3,\"544\":1,\"549\":2,\"805\":5,\"862\":2,\"907\":1,\"926\":1}}],[\"tgz\",{\"1\":{\"1079\":1}}],[\"t2\",{\"1\":{\"1061\":4}}],[\"t1\",{\"1\":{\"1061\":4}}],[\"ttinclude文件\",{\"1\":{\"1046\":1}}],[\"ttinclude中的config是配置数据库的\",{\"1\":{\"1046\":1}}],[\"tt是生成实体的t4模版\",{\"1\":{\"1046\":1}}],[\"ttl\",{\"1\":{\"208\":1,\"209\":2}}],[\"t4中有可以自动生成实体类的t4模版\",{\"1\":{\"1046\":1}}],[\"t83gx\",{\"1\":{\"1035\":1}}],[\"t84xb\",{\"1\":{\"973\":2}}],[\"td244\",{\"1\":{\"973\":1}}],[\"tlcl\",{\"1\":{\"946\":1}}],[\"tls\",{\"1\":{\"3\":1,\"36\":1,\"325\":1,\"666\":3}}],[\"tsinghua\",{\"1\":{\"892\":1,\"1114\":1}}],[\"t恤\",{\"1\":{\"863\":1}}],[\"tz\",{\"1\":{\"857\":1}}],[\"tz=asia\",{\"1\":{\"217\":1,\"858\":1,\"886\":1}}],[\"t=udswo86qwqgw\",{\"1\":{\"970\":1}}],[\"t=0\",{\"1\":{\"733\":1,\"744\":1}}],[\"t=>t\",{\"1\":{\"503\":2}}],[\"tmp\",{\"1\":{\"564\":4,\"778\":2,\"786\":1,\"788\":2,\"826\":1,\"863\":4,\"1088\":1,\"1090\":2}}],[\"ty2y\",{\"1\":{\"660\":1}}],[\"ty\",{\"1\":{\"503\":2}}],[\"typewithmapping\",{\"1\":{\"1061\":3}}],[\"typeparam>\",{\"1\":{\"583\":1}}],[\"typename\",{\"1\":{\"501\":2}}],[\"typetomatch\",{\"1\":{\"443\":2}}],[\"typefilterattribute\",{\"0\":{\"410\":1}}],[\"typefilter\",{\"1\":{\"407\":1,\"410\":2}}],[\"type加以标记\",{\"1\":{\"323\":1}}],[\"type=forking\",{\"1\":{\"549\":1}}],[\"type=filesystem\",{\"1\":{\"211\":1,\"1117\":1}}],[\"type=\",{\"1\":{\"447\":3,\"453\":2,\"616\":1,\"693\":1}}],[\"type==5\",{\"1\":{\"343\":2}}],[\"type==2\",{\"1\":{\"342\":2}}],[\"type=database\",{\"1\":{\"211\":1,\"1117\":1}}],[\"type=sqlite\",{\"1\":{\"211\":1,\"1117\":1}}],[\"typescript\",{\"1\":{\"253\":1}}],[\"types\",{\"1\":{\"118\":2,\"470\":1,\"501\":1,\"564\":1}}],[\"type是否是parent的子类\",{\"1\":{\"97\":1}}],[\"typeof\",{\"1\":{\"46\":3,\"47\":1,\"64\":1,\"95\":2,\"98\":2,\"99\":3,\"101\":2,\"102\":4,\"105\":4,\"106\":8,\"109\":2,\"112\":1,\"115\":2,\"120\":2,\"128\":1,\"164\":1,\"165\":1,\"166\":1,\"344\":2,\"351\":1,\"364\":1,\"400\":2,\"401\":1,\"403\":2,\"407\":1,\"408\":2,\"409\":3,\"410\":2,\"413\":1,\"416\":1,\"418\":1,\"421\":1,\"424\":1,\"472\":1,\"478\":2,\"501\":1,\"574\":1,\"600\":4,\"660\":3,\"1061\":7}}],[\"type\",{\"0\":{\"96\":1},\"1\":{\"45\":1,\"46\":7,\"64\":4,\"86\":1,\"91\":1,\"93\":3,\"95\":4,\"97\":35,\"98\":15,\"99\":22,\"101\":5,\"102\":5,\"104\":1,\"105\":14,\"106\":15,\"109\":7,\"111\":1,\"112\":6,\"114\":1,\"115\":9,\"117\":1,\"118\":1,\"119\":1,\"120\":8,\"203\":2,\"215\":2,\"342\":7,\"343\":2,\"361\":1,\"364\":3,\"441\":1,\"474\":1,\"475\":1,\"478\":3,\"484\":2,\"564\":1,\"569\":2,\"575\":1,\"603\":2,\"608\":1,\"610\":1,\"612\":1,\"616\":1,\"621\":1,\"626\":1,\"631\":1,\"660\":6,\"732\":1,\"733\":1,\"734\":1,\"739\":4,\"918\":3,\"923\":1,\"930\":1,\"1061\":6}}],[\"tulpn\",{\"1\":{\"1099\":1}}],[\"tuning\",{\"1\":{\"928\":1}}],[\"tuna\",{\"1\":{\"892\":1,\"1114\":1}}],[\"turbo版\",{\"1\":{\"696\":2}}],[\"turn\",{\"1\":{\"3\":1}}],[\"tutorials\",{\"1\":{\"484\":1,\"577\":1}}],[\"tutorial\",{\"1\":{\"329\":1}}],[\"two\",{\"1\":{\"670\":1,\"949\":1,\"1036\":1}}],[\"twitter\",{\"1\":{\"307\":1}}],[\"twemproxy\",{\"1\":{\"209\":1}}],[\"tbtool\",{\"1\":{\"272\":1}}],[\"tim\",{\"1\":{\"1014\":1}}],[\"time想映射到createtime上\",{\"1\":{\"1061\":1}}],[\"time包含2020\",{\"1\":{\"739\":1}}],[\"timeout\",{\"1\":{\"472\":1}}],[\"timestamp\",{\"1\":{\"462\":1,\"671\":2,\"672\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"timespan\",{\"1\":{\"364\":1,\"369\":1,\"372\":2,\"373\":2,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"424\":1,\"427\":1,\"469\":1,\"580\":1,\"675\":1}}],[\"time可以在集群重启的时候避免过多的分片交换\",{\"1\":{\"204\":1}}],[\"time\",{\"0\":{\"1160\":1},\"1\":{\"3\":1,\"36\":1,\"421\":2,\"453\":1,\"735\":1,\"739\":3,\"968\":1,\"1061\":2,\"1074\":2,\"1077\":3}}],[\"tip\",{\"1\":{\"908\":1}}],[\"tijiao\",{\"1\":{\"616\":1}}],[\"tinyint\",{\"1\":{\"501\":1}}],[\"tiger\",{\"1\":{\"500\":1}}],[\"title\",{\"1\":{\"474\":1,\"475\":1,\"481\":2,\"483\":1,\"484\":1,\"494\":1,\"497\":1,\"600\":1,\"745\":1,\"1061\":1}}],[\"tidb\",{\"1\":{\"253\":1}}],[\"txt已经被吸怪了\",{\"1\":{\"768\":1}}],[\"txt$\",{\"1\":{\"754\":2}}],[\"txt文件\",{\"1\":{\"580\":1,\"768\":1}}],[\"txt\",{\"1\":{\"448\":1,\"453\":1,\"459\":1,\"462\":1,\"463\":1,\"580\":1,\"692\":1,\"753\":1,\"754\":1,\"768\":1,\"769\":4,\"778\":4,\"779\":2,\"780\":8,\"782\":5,\"785\":2,\"787\":1,\"799\":2,\"826\":1,\"1090\":1,\"1096\":1}}],[\"txcommit\",{\"1\":{\"208\":1}}],[\"txrollback\",{\"1\":{\"208\":1}}],[\"txselect\",{\"1\":{\"208\":1}}],[\"tcp提供了一种可靠的\",{\"1\":{\"327\":1}}],[\"tcp是一种面向连接的单播协议\",{\"1\":{\"327\":1}}],[\"tcp被称为面向连接的\",{\"1\":{\"324\":1}}],[\"tcp和http的关系\",{\"0\":{\"324\":1}}],[\"tcp协议\",{\"1\":{\"242\":1}}],[\"tcp\",{\"1\":{\"152\":1,\"208\":3,\"322\":2,\"325\":1,\"542\":1,\"828\":1,\"911\":1,\"918\":3,\"923\":1,\"1108\":3,\"1109\":2}}],[\"trusty\",{\"1\":{\"865\":2,\"866\":1,\"870\":1}}],[\"trustedfilename\",{\"1\":{\"471\":2}}],[\"true\",{\"1\":{\"3\":3,\"36\":3,\"46\":3,\"79\":1,\"102\":3,\"127\":1,\"128\":2,\"131\":3,\"155\":1,\"204\":1,\"215\":2,\"364\":6,\"369\":1,\"400\":3,\"404\":2,\"409\":1,\"413\":1,\"416\":4,\"442\":1,\"447\":1,\"453\":2,\"463\":1,\"468\":2,\"474\":1,\"477\":1,\"478\":1,\"483\":1,\"484\":1,\"494\":3,\"498\":3,\"502\":1,\"506\":1,\"507\":1,\"552\":2,\"564\":4,\"575\":2,\"577\":2,\"579\":1,\"582\":3,\"583\":1,\"591\":9,\"598\":1,\"607\":1,\"611\":1,\"620\":1,\"625\":1,\"636\":1,\"638\":2,\"644\":2,\"650\":2,\"655\":2,\"669\":1,\"670\":1,\"672\":2,\"691\":4,\"692\":2,\"710\":3,\"777\":4,\"788\":4,\"850\":2,\"852\":1,\"1036\":5,\"1037\":1}}],[\"traefik\",{\"1\":{\"914\":1}}],[\"tracking\",{\"1\":{\"774\":1}}],[\"traceid\",{\"1\":{\"474\":1,\"475\":1}}],[\"traceidentifier\",{\"1\":{\"453\":1}}],[\"trace日志\",{\"1\":{\"446\":1,\"466\":1}}],[\"trace\",{\"1\":{\"446\":2,\"447\":1,\"453\":1,\"456\":1,\"564\":1}}],[\"training\",{\"1\":{\"467\":1}}],[\"transactionscope\",{\"0\":{\"1064\":1},\"1\":{\"1064\":2}}],[\"transaction\",{\"0\":{\"1065\":1},\"1\":{\"1063\":9,\"1064\":2,\"1065\":7}}],[\"transaction机制就是说\",{\"1\":{\"208\":1}}],[\"trans\",{\"1\":{\"1047\":2}}],[\"transient\",{\"0\":{\"347\":1}}],[\"transient<iemailvalidcodequery\",{\"1\":{\"344\":1}}],[\"transient<iconfigureoptions<routeoptions>\",{\"1\":{\"165\":1}}],[\"transient<treeroutebuilder>\",{\"1\":{\"165\":1}}],[\"translator\",{\"1\":{\"968\":1}}],[\"translucenttb\",{\"0\":{\"275\":1}}],[\"translog\",{\"1\":{\"204\":6}}],[\"transducer\",{\"1\":{\"204\":1}}],[\"triangle\",{\"1\":{\"442\":1}}],[\"tree\",{\"1\":{\"399\":1,\"769\":1,\"777\":2,\"780\":4,\"781\":7,\"782\":8,\"788\":1,\"796\":1,\"852\":1,\"874\":1}}],[\"treeroutebuilder\",{\"1\":{\"165\":1}}],[\"tryvalidatemodel\",{\"1\":{\"476\":1}}],[\"tryzth\",{\"1\":{\"242\":1}}],[\"tryaddenumerable\",{\"1\":{\"165\":3}}],[\"tryaddsingleton<imessagewriter\",{\"1\":{\"344\":1}}],[\"tryaddsingleton<iendpointaddressscheme<routevaluesaddress>\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<iendpointaddressscheme<string>\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<routepatterntransformer\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<templatebinderfactory\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<linkparser\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<linkgenerator\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<endpointselector\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<endpointmetadatacomparer>\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<endpointdatasource>\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<dfagraphwriter>\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<matcherfactory\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<parameterpolicyfactory\",{\"1\":{\"165\":1}}],[\"tryaddsingleton<objectpool<uribuildingcontext>>\",{\"1\":{\"165\":1}}],[\"tryaddsingleton\",{\"1\":{\"165\":1}}],[\"tryadd\",{\"1\":{\"165\":1}}],[\"tryaddtransient<datasourcedependentmatcher\",{\"1\":{\"165\":1}}],[\"tryaddtransient<dfamatcherbuilder>\",{\"1\":{\"165\":1}}],[\"tryaddtransient<objectpoolprovider\",{\"1\":{\"165\":1}}],[\"tryaddtransient<iinlineconstraintresolver\",{\"1\":{\"165\":1}}],[\"trygetvalue\",{\"1\":{\"164\":1,\"167\":1,\"366\":1,\"418\":1}}],[\"try\",{\"1\":{\"151\":1,\"364\":1,\"427\":1,\"442\":1,\"454\":1,\"463\":1,\"501\":2,\"574\":1,\"583\":1,\"684\":1,\"693\":1,\"1045\":1,\"1109\":2}}],[\"tryparse方法则不会引发异常\",{\"1\":{\"129\":1}}],[\"tryparse\",{\"0\":{\"129\":1},\"1\":{\"129\":2,\"418\":2,\"478\":1}}],[\"t成员\",{\"1\":{\"98\":1}}],[\"taint命令可以给某个node节点设置污点\",{\"1\":{\"914\":1}}],[\"taint\",{\"1\":{\"914\":5}}],[\"tail\",{\"1\":{\"564\":1,\"811\":1}}],[\"tahr\",{\"1\":{\"870\":1}}],[\"tarball\",{\"1\":{\"865\":2,\"867\":1}}],[\"tar\",{\"1\":{\"811\":2,\"825\":1,\"865\":2,\"867\":2,\"870\":5,\"1134\":1,\"1135\":2}}],[\"target=vs\",{\"1\":{\"967\":1}}],[\"targetport是容器的端口\",{\"1\":{\"923\":1}}],[\"targetport\",{\"0\":{\"923\":1},\"1\":{\"918\":1,\"923\":1}}],[\"targetdir=\",{\"1\":{\"692\":1}}],[\"targetdir\",{\"1\":{\"692\":2}}],[\"targetframeworks>\",{\"1\":{\"1126\":1}}],[\"targetframework\",{\"1\":{\"585\":1,\"1037\":1,\"1126\":2}}],[\"targetframework>\",{\"1\":{\"577\":1,\"585\":1,\"1122\":1,\"1123\":1,\"1126\":1}}],[\"targets>\",{\"1\":{\"453\":1}}],[\"target>\",{\"1\":{\"453\":1}}],[\"target\",{\"1\":{\"343\":1,\"931\":2,\"1127\":3}}],[\"take\",{\"1\":{\"564\":1,\"873\":1,\"874\":2}}],[\"tabs\",{\"1\":{\"968\":1}}],[\"tabs=data\",{\"1\":{\"501\":2}}],[\"tabs及tabs分组\",{\"1\":{\"172\":1}}],[\"tabel\",{\"1\":{\"206\":1}}],[\"tablename\",{\"1\":{\"342\":8}}],[\"table\",{\"1\":{\"152\":1,\"206\":1,\"501\":1,\"857\":1,\"925\":1}}],[\"tag=`date\",{\"1\":{\"899\":1}}],[\"tag值\",{\"1\":{\"766\":1}}],[\"tag标签管理\",{\"1\":{\"766\":1}}],[\"tag\",{\"1\":{\"171\":1,\"321\":2,\"763\":1,\"764\":2,\"766\":1,\"810\":1,\"835\":1,\"863\":1,\"866\":1,\"871\":1,\"899\":3,\"1070\":7}}],[\"tags\",{\"1\":{\"8\":1,\"764\":1,\"765\":1,\"777\":3,\"788\":1,\"1070\":3}}],[\"tasks\",{\"1\":{\"692\":1}}],[\"tasktestone\",{\"1\":{\"564\":1}}],[\"taskapp\",{\"1\":{\"564\":1}}],[\"task<iresponsemessagebase>\",{\"1\":{\"711\":1}}],[\"task<getuserlistresponse>\",{\"1\":{\"677\":1}}],[\"task<getuserinforesponse>\",{\"1\":{\"672\":1,\"673\":1}}],[\"task<t>\",{\"1\":{\"600\":1,\"604\":1,\"609\":1,\"613\":1,\"617\":1,\"622\":1,\"627\":1,\"632\":1}}],[\"task<actionresult<repeatedfield<customerinfo>>>\",{\"1\":{\"678\":1,\"681\":1}}],[\"task<actionresult<ienumerable<customerresponse>>>\",{\"1\":{\"676\":1}}],[\"task<actionresult<user>>\",{\"1\":{\"501\":1}}],[\"task<actionresult<string>>\",{\"1\":{\"468\":1}}],[\"task<user>\",{\"1\":{\"468\":3,\"501\":2}}],[\"task<userprofile>\",{\"1\":{\"363\":1}}],[\"task<string>\",{\"1\":{\"382\":1,\"387\":1,\"712\":1}}],[\"task<matcher>\",{\"1\":{\"167\":3}}],[\"task<healthcheckresult>\",{\"1\":{\"151\":2}}],[\"task\",{\"1\":{\"151\":4,\"157\":1,\"167\":6,\"168\":2,\"355\":2,\"364\":1,\"401\":2,\"403\":3,\"404\":1,\"405\":1,\"472\":3,\"501\":3,\"586\":1,\"587\":1,\"591\":2,\"672\":1,\"675\":2,\"680\":1}}],[\"task1\",{\"1\":{\"94\":2}}],[\"task1dao\",{\"1\":{\"94\":2}}],[\"taskdao\",{\"1\":{\"94\":6}}],[\"technologies\",{\"1\":{\"1134\":1}}],[\"ter\",{\"1\":{\"1036\":1}}],[\"terminal\",{\"0\":{\"1036\":1},\"1\":{\"1014\":1,\"1036\":6}}],[\"terminated\",{\"1\":{\"463\":1}}],[\"term\",{\"1\":{\"446\":1,\"564\":1}}],[\"tem\",{\"1\":{\"739\":3}}],[\"tempfiles\",{\"1\":{\"564\":1}}],[\"template更新时\",{\"1\":{\"914\":1}}],[\"templatefieldmappingrep\",{\"1\":{\"518\":1,\"525\":2}}],[\"templatefield\",{\"1\":{\"518\":5,\"525\":2}}],[\"templatefieldlist\",{\"1\":{\"518\":1}}],[\"template\",{\"1\":{\"518\":2,\"656\":3,\"694\":1,\"914\":1,\"956\":2}}],[\"teardownattribute\",{\"1\":{\"597\":1}}],[\"tenantid\",{\"1\":{\"518\":2}}],[\"tensorflow\",{\"1\":{\"253\":1}}],[\"tencent\",{\"1\":{\"138\":1,\"1098\":2}}],[\"telerik数据访问和linq\",{\"1\":{\"968\":1}}],[\"telerik的免费工具\",{\"1\":{\"175\":1}}],[\"telegram\",{\"1\":{\"253\":1}}],[\"tetris\",{\"1\":{\"243\":5}}],[\"text\",{\"1\":{\"206\":1,\"215\":2,\"366\":2,\"524\":2,\"600\":1,\"739\":2}}],[\"testnewfile\",{\"1\":{\"1093\":1}}],[\"testnet\",{\"1\":{\"839\":2}}],[\"testfolder\",{\"1\":{\"1089\":1,\"1090\":1,\"1094\":1}}],[\"testfile\",{\"1\":{\"683\":1,\"1092\":2,\"1093\":1,\"1094\":1}}],[\"testfixturesetupattribute\",{\"1\":{\"597\":1}}],[\"testfixtureteardownattribute\",{\"1\":{\"597\":1}}],[\"testfixtureattribute\",{\"1\":{\"597\":1}}],[\"test被分发到后端服务s1\",{\"1\":{\"931\":1}}],[\"test和deploy就是stage\",{\"1\":{\"879\":1}}],[\"testvalue2\",{\"1\":{\"850\":2}}],[\"testvalue1\",{\"1\":{\"850\":2}}],[\"testvalue\",{\"1\":{\"850\":2}}],[\"testvolumesfrom\",{\"1\":{\"816\":1}}],[\"testvolumesfromcentos2\",{\"1\":{\"816\":1}}],[\"testvolumesfromcentos\",{\"1\":{\"816\":2}}],[\"testvolumedata\",{\"1\":{\"815\":1,\"816\":1}}],[\"testvolumecentos\",{\"1\":{\"815\":1}}],[\"testkey2\",{\"1\":{\"850\":2}}],[\"testkey1\",{\"1\":{\"850\":2}}],[\"testkey\",{\"1\":{\"850\":8}}],[\"testmynetnginx1\",{\"1\":{\"843\":1}}],[\"testmethod\",{\"1\":{\"596\":1,\"597\":1}}],[\"testmethodattribute\",{\"1\":{\"596\":1}}],[\"testdir\",{\"1\":{\"837\":1}}],[\"testdatahost\",{\"1\":{\"815\":1,\"817\":2}}],[\"testdatahost对应的就是dest\",{\"1\":{\"812\":1}}],[\"testdatahost命令解析\",{\"1\":{\"812\":1}}],[\"testdata对应的就是src\",{\"1\":{\"812\":1}}],[\"testdata\",{\"1\":{\"812\":1}}],[\"testexportimagename\",{\"1\":{\"811\":2}}],[\"testexport\",{\"1\":{\"811\":2}}],[\"test001\",{\"1\":{\"746\":1}}],[\"test框架\",{\"1\":{\"599\":1}}],[\"test框架中是没有的\",{\"1\":{\"597\":1}}],[\"test与nunit\",{\"1\":{\"599\":1}}],[\"testattribute\",{\"1\":{\"597\":1}}],[\"testasync\",{\"1\":{\"382\":1,\"387\":1}}],[\"testtools\",{\"1\":{\"597\":2,\"599\":1}}],[\"testcontext\",{\"1\":{\"597\":1}}],[\"testcontroller\",{\"1\":{\"488\":2,\"576\":2,\"639\":2,\"645\":2,\"651\":2}}],[\"testcleanup\",{\"1\":{\"597\":1}}],[\"testclass\",{\"1\":{\"596\":1,\"597\":1,\"598\":1}}],[\"testinitialize\",{\"1\":{\"597\":1}}],[\"testinitializeattribute\",{\"1\":{\"596\":2}}],[\"testing\",{\"1\":{\"593\":2,\"599\":2}}],[\"test2\",{\"1\":{\"588\":2}}],[\"test1\",{\"1\":{\"588\":2,\"1085\":2}}],[\"tests标签\",{\"1\":{\"739\":1}}],[\"tests\",{\"1\":{\"588\":2,\"743\":1}}],[\"testserver\",{\"1\":{\"585\":4}}],[\"testsize\",{\"1\":{\"373\":1}}],[\"testhost\",{\"1\":{\"585\":1}}],[\"testreflectfactory\",{\"1\":{\"442\":1}}],[\"testoptions\",{\"1\":{\"373\":1}}],[\"test\",{\"0\":{\"596\":1,\"1165\":1},\"1\":{\"68\":3,\"83\":2,\"321\":1,\"405\":1,\"442\":1,\"458\":1,\"500\":3,\"564\":1,\"585\":3,\"594\":1,\"595\":2,\"596\":1,\"597\":3,\"598\":3,\"599\":3,\"642\":3,\"648\":3,\"654\":1,\"687\":1,\"735\":1,\"739\":9,\"799\":2,\"829\":1,\"863\":2,\"931\":6,\"1084\":1,\"1096\":1,\"1121\":2}}],[\"tee\",{\"1\":{\"3\":1,\"862\":1}}],[\"toleration\",{\"1\":{\"914\":1}}],[\"tolerations\",{\"1\":{\"914\":1}}],[\"tolistasync\",{\"1\":{\"504\":2,\"507\":1,\"511\":1,\"512\":2,\"513\":1}}],[\"tolist\",{\"1\":{\"483\":1,\"503\":4,\"509\":2,\"518\":1,\"519\":1,\"520\":1,\"522\":2,\"523\":1,\"524\":2,\"552\":2,\"600\":1,\"1041\":2,\"1055\":1,\"1056\":1,\"1058\":1,\"1060\":1}}],[\"top\",{\"1\":{\"811\":1,\"830\":1}}],[\"topic\",{\"1\":{\"208\":1}}],[\"topics\",{\"1\":{\"152\":1}}],[\"tortoisegit\",{\"1\":{\"802\":2}}],[\"to=origin\",{\"1\":{\"774\":2}}],[\"touch\",{\"0\":{\"1077\":1,\"1092\":1},\"1\":{\"1077\":3,\"1092\":2,\"1116\":1}}],[\"toutiao\",{\"1\":{\"746\":1}}],[\"toutou\",{\"1\":{\"549\":1,\"564\":1}}],[\"toupperinvariant\",{\"1\":{\"495\":1,\"499\":1}}],[\"toomanyrequests\",{\"1\":{\"427\":1}}],[\"toolwa\",{\"1\":{\"337\":1}}],[\"tools是微软官方推出的\",{\"1\":{\"968\":1}}],[\"toolstripcombobox1\",{\"1\":{\"691\":7}}],[\"tools\",{\"1\":{\"290\":1,\"341\":1,\"364\":1,\"474\":1,\"475\":1,\"501\":1,\"668\":1,\"670\":1,\"673\":1,\"865\":1,\"867\":1,\"968\":2,\"1019\":1,\"1109\":1}}],[\"toolkit\",{\"1\":{\"283\":1}}],[\"tool\",{\"1\":{\"245\":1}}],[\"toolgood\",{\"1\":{\"215\":4}}],[\"tojson\",{\"1\":{\"364\":1,\"693\":3}}],[\"todesk\",{\"0\":{\"287\":1,\"309\":1},\"1\":{\"287\":1}}],[\"todo\",{\"1\":{\"215\":1,\"472\":1}}],[\"tomato这些路由器固件是怎么开发出来的\",{\"1\":{\"253\":1}}],[\"token等操作\",{\"1\":{\"710\":1}}],[\"token为伪值\",{\"1\":{\"600\":1}}],[\"token传递方式就是在headers增加\",{\"1\":{\"484\":1}}],[\"tokenmodelbinderprovider\",{\"1\":{\"472\":2}}],[\"tokenmodelbinder\",{\"1\":{\"472\":2}}],[\"tokenmodel\",{\"1\":{\"472\":4}}],[\"token是否会调用回调函数\",{\"1\":{\"374\":1}}],[\"tokenvalidationparameters\",{\"1\":{\"364\":2}}],[\"token进行判断认证\",{\"1\":{\"364\":1}}],[\"tokensource\",{\"1\":{\"376\":4}}],[\"tokens\",{\"1\":{\"364\":2}}],[\"token\",{\"1\":{\"218\":1,\"364\":4,\"376\":1,\"401\":4,\"472\":4,\"484\":3,\"586\":2,\"604\":2,\"609\":2,\"613\":2,\"622\":2,\"627\":2,\"632\":2,\"710\":2,\"914\":1,\"952\":1,\"1070\":1}}],[\"totaldays\",{\"1\":{\"1122\":1}}],[\"totalcount\",{\"1\":{\"1041\":2}}],[\"total\",{\"1\":{\"746\":1,\"777\":2}}],[\"totalprice3\",{\"1\":{\"61\":1}}],[\"totalprice2\",{\"1\":{\"61\":1}}],[\"totalprice\",{\"1\":{\"61\":1}}],[\"totraditionalchinese\",{\"1\":{\"215\":1}}],[\"to\",{\"1\":{\"167\":5,\"211\":3,\"441\":1,\"564\":20,\"574\":1,\"575\":2,\"666\":1,\"683\":1,\"687\":1,\"739\":12,\"768\":3,\"769\":1,\"774\":1,\"777\":2,\"949\":1,\"968\":3,\"1036\":12,\"1070\":2,\"1109\":1,\"1117\":3}}],[\"toint32\",{\"1\":{\"129\":1}}],[\"toarrayasync\",{\"1\":{\"518\":1}}],[\"toarray\",{\"1\":{\"123\":1,\"600\":1,\"691\":3,\"1056\":1}}],[\"tostring方法接受一个iformatprovider类型的参数\",{\"1\":{\"203\":1}}],[\"tostring\",{\"1\":{\"98\":5,\"151\":3,\"156\":1,\"164\":1,\"402\":8,\"418\":1,\"424\":1,\"478\":2,\"494\":1,\"497\":2,\"501\":1,\"574\":1,\"577\":1,\"609\":1,\"622\":1,\"632\":1,\"636\":1,\"680\":1,\"688\":1,\"691\":1,\"692\":1,\"693\":3,\"1042\":1,\"1051\":1,\"1122\":2,\"1123\":1}}],[\"togetcustomrabbitmqattribute\",{\"1\":{\"46\":1,\"47\":1}}],[\"thinkphp\",{\"1\":{\"946\":1}}],[\"thin\",{\"1\":{\"852\":1}}],[\"things\",{\"1\":{\"825\":1}}],[\"this\",{\"1\":{\"45\":1,\"46\":3,\"66\":1,\"70\":1,\"72\":1,\"117\":1,\"155\":1,\"165\":2,\"166\":1,\"167\":3,\"211\":1,\"321\":1,\"361\":1,\"363\":1,\"458\":1,\"501\":1,\"564\":3,\"582\":1,\"656\":1,\"660\":1,\"691\":8,\"692\":1,\"774\":1,\"777\":1,\"829\":1,\"949\":2,\"1036\":2,\"1061\":2,\"1070\":1,\"1117\":1}}],[\"that\",{\"1\":{\"777\":1,\"1036\":1}}],[\"than\",{\"1\":{\"739\":2}}],[\"threshold\",{\"1\":{\"204\":1}}],[\"threaddo\",{\"1\":{\"1045\":1}}],[\"threadtool\",{\"1\":{\"1045\":2}}],[\"threadpool\",{\"1\":{\"985\":1,\"1045\":1}}],[\"threading\",{\"1\":{\"591\":2,\"692\":1,\"985\":1}}],[\"thread\",{\"1\":{\"124\":3,\"372\":2,\"373\":1,\"588\":4,\"985\":7}}],[\"throwifnull\",{\"1\":{\"660\":1}}],[\"throws\",{\"1\":{\"442\":1,\"443\":11}}],[\"throw\",{\"1\":{\"125\":1,\"166\":1,\"167\":6,\"168\":3,\"215\":1,\"394\":1,\"424\":1,\"454\":1,\"472\":1,\"574\":1,\"600\":1,\"602\":1,\"607\":1,\"611\":1,\"615\":2,\"620\":2,\"625\":1,\"630\":1,\"660\":1,\"1047\":1}}],[\"they\",{\"1\":{\"1061\":1}}],[\"these\",{\"1\":{\"1036\":1}}],[\"there\",{\"1\":{\"949\":1}}],[\"thevolume\",{\"1\":{\"914\":1}}],[\"theory\",{\"1\":{\"598\":1,\"599\":2}}],[\"thegroupname\",{\"1\":{\"564\":1}}],[\"theeventlistenername\",{\"1\":{\"564\":1}}],[\"themselves\",{\"1\":{\"564\":1}}],[\"them\",{\"1\":{\"564\":2,\"777\":2,\"1036\":1}}],[\"theme\",{\"1\":{\"321\":1}}],[\"theprogramname\",{\"1\":{\"564\":2}}],[\"theninclude\",{\"1\":{\"503\":1}}],[\"then\",{\"1\":{\"204\":1,\"899\":1,\"1061\":1}}],[\"the\",{\"1\":{\"3\":1,\"66\":1,\"167\":6,\"211\":2,\"564\":12,\"574\":1,\"660\":2,\"683\":1,\"693\":1,\"777\":2,\"949\":1,\"985\":1,\"1036\":8,\"1061\":1,\"1070\":2,\"1109\":1,\"1117\":2}}],[\"t\",{\"1\":{\"8\":1,\"19\":2,\"94\":4,\"98\":4,\"120\":4,\"123\":2,\"143\":2,\"342\":4,\"364\":6,\"401\":8,\"402\":4,\"403\":4,\"443\":3,\"447\":1,\"501\":2,\"502\":2,\"503\":25,\"518\":5,\"520\":2,\"523\":2,\"524\":3,\"525\":6,\"527\":3,\"554\":1,\"564\":1,\"574\":3,\"583\":1,\"591\":16,\"600\":9,\"602\":4,\"607\":2,\"611\":2,\"615\":2,\"620\":2,\"625\":2,\"630\":4,\"660\":2,\"677\":2,\"778\":1,\"781\":2,\"784\":1,\"785\":1,\"802\":1,\"811\":3,\"835\":2,\"837\":1,\"863\":1,\"865\":1,\"866\":1,\"867\":1,\"868\":1,\"870\":1,\"899\":1,\"1074\":1,\"1077\":1}}],[\"u=rwx\",{\"1\":{\"1085\":1}}],[\"ug\",{\"1\":{\"925\":1}}],[\"ubuntu\",{\"0\":{\"1188\":1},\"1\":{\"865\":4,\"866\":5,\"867\":2,\"868\":2,\"870\":4,\"1070\":1,\"1114\":3}}],[\"umask\",{\"1\":{\"564\":4}}],[\"umask=022\",{\"1\":{\"564\":3}}],[\"uml\",{\"1\":{\"296\":1}}],[\"uvh\",{\"1\":{\"537\":1,\"1109\":1}}],[\"ultimately\",{\"1\":{\"949\":1}}],[\"ulist\",{\"1\":{\"522\":2}}],[\"ulong\",{\"1\":{\"75\":1}}],[\"u3\",{\"1\":{\"462\":1}}],[\"udp\",{\"1\":{\"322\":1,\"828\":1}}],[\"u盘装机助理\",{\"1\":{\"268\":1}}],[\"utc\",{\"1\":{\"870\":1}}],[\"utcnow\",{\"1\":{\"672\":1,\"1122\":1}}],[\"utf\",{\"1\":{\"447\":1,\"453\":2,\"970\":2,\"971\":1}}],[\"utf8\",{\"1\":{\"364\":1,\"382\":1,\"387\":1,\"609\":1,\"617\":1,\"622\":1,\"632\":1}}],[\"utools\",{\"0\":{\"290\":1},\"1\":{\"232\":1,\"290\":1}}],[\"utils\",{\"1\":{\"3\":1,\"862\":2,\"1109\":1}}],[\"unbound\",{\"1\":{\"1036\":1}}],[\"unbind\",{\"1\":{\"1036\":1}}],[\"unserspace\",{\"1\":{\"944\":1}}],[\"unset\",{\"1\":{\"775\":1}}],[\"undo\",{\"1\":{\"914\":1}}],[\"under\",{\"1\":{\"564\":1}}],[\"uncordon\",{\"1\":{\"914\":1}}],[\"uncomment\",{\"1\":{\"777\":1}}],[\"until\",{\"1\":{\"809\":1}}],[\"unnamed\",{\"1\":{\"777\":1}}],[\"unlencoded格式\",{\"0\":{\"611\":1},\"1\":{\"614\":1}}],[\"unmanageddllname\",{\"1\":{\"577\":3}}],[\"uname\",{\"1\":{\"846\":4,\"862\":1,\"870\":1}}],[\"unary\",{\"1\":{\"667\":1}}],[\"unable\",{\"1\":{\"575\":1}}],[\"unauthorized\",{\"1\":{\"364\":1,\"599\":1}}],[\"unexpected\",{\"1\":{\"564\":5}}],[\"unexpectedly\",{\"1\":{\"463\":1}}],[\"union\",{\"1\":{\"863\":1}}],[\"uninstall\",{\"1\":{\"692\":3,\"1008\":1}}],[\"unittesting\",{\"1\":{\"597\":2,\"599\":1}}],[\"unitofwork\",{\"1\":{\"591\":4}}],[\"unit\",{\"0\":{\"1165\":1},\"1\":{\"549\":1,\"588\":1,\"593\":2,\"599\":2}}],[\"unix\",{\"1\":{\"544\":1,\"564\":4,\"869\":1,\"956\":1}}],[\"unicast\",{\"1\":{\"204\":1}}],[\"unhealthy\",{\"1\":{\"151\":1}}],[\"uri作为其标识\",{\"1\":{\"323\":1}}],[\"uri所标识的资源的响应消息头\",{\"1\":{\"323\":1}}],[\"uri所标识的资源后附加新的数据\",{\"1\":{\"323\":1}}],[\"uri所标识的资源\",{\"1\":{\"323\":1}}],[\"uribuildercontextpooledobjectpolicy\",{\"1\":{\"165\":1}}],[\"urischeme\",{\"1\":{\"692\":2}}],[\"uris\",{\"1\":{\"152\":1}}],[\"uri\",{\"1\":{\"152\":3,\"153\":3,\"322\":3,\"323\":1,\"670\":1,\"673\":1}}],[\"urlgrabber\",{\"1\":{\"949\":2}}],[\"urls=\",{\"1\":{\"838\":2}}],[\"urls=http\",{\"1\":{\"837\":1}}],[\"urlencode\",{\"1\":{\"733\":1}}],[\"urlencoded\",{\"0\":{\"567\":1},\"1\":{\"569\":1,\"732\":1,\"733\":1}}],[\"url<400\",{\"1\":{\"700\":1}}],[\"urltemplate\",{\"1\":{\"656\":2}}],[\"url不能为null\",{\"1\":{\"600\":1}}],[\"url中右侧的值b与路由参数\",{\"1\":{\"161\":2}}],[\"url中右侧的所有内容d均与路由参数\",{\"1\":{\"161\":2}}],[\"url参数\",{\"0\":{\"148\":1}}],[\"url\",{\"0\":{\"643\":1},\"1\":{\"3\":1,\"36\":1,\"37\":1,\"38\":1,\"40\":1,\"156\":1,\"469\":1,\"564\":2,\"600\":2,\"603\":2,\"604\":3,\"605\":1,\"608\":1,\"609\":5,\"612\":1,\"613\":5,\"616\":1,\"617\":5,\"621\":1,\"622\":5,\"623\":1,\"626\":1,\"627\":5,\"628\":1,\"631\":1,\"632\":5,\"666\":1,\"692\":3,\"712\":2,\"743\":1,\"745\":1,\"788\":1,\"931\":1,\"952\":1}}],[\"u作用\",{\"1\":{\"23\":1}}],[\"uid=gxg\",{\"1\":{\"1048\":1}}],[\"uid=root\",{\"1\":{\"661\":1,\"1047\":2}}],[\"ui中间件\",{\"1\":{\"482\":1}}],[\"uiresponsewriter\",{\"1\":{\"153\":2}}],[\"uic是uiculture\",{\"1\":{\"147\":1}}],[\"uic=zh\",{\"1\":{\"147\":1}}],[\"uint\",{\"1\":{\"75\":1}}],[\"ui\",{\"1\":{\"17\":2,\"148\":2,\"153\":4}}],[\"u\",{\"1\":{\"8\":1,\"21\":1,\"22\":2,\"23\":2,\"40\":2,\"290\":1,\"361\":2,\"503\":3,\"518\":4,\"519\":4,\"520\":5,\"522\":5,\"523\":5,\"761\":1,\"774\":2,\"788\":1,\"885\":2,\"925\":2,\"1079\":1,\"1080\":1,\"1085\":1}}],[\"us版本中进行了验证\",{\"1\":{\"974\":1}}],[\"uselnskydb\",{\"1\":{\"1039\":1}}],[\"useacrylic\",{\"1\":{\"1036\":1}}],[\"useapibehavior\",{\"1\":{\"650\":1}}],[\"useauthentication\",{\"1\":{\"360\":1,\"364\":1}}],[\"useauthorization\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"157\":1,\"158\":1,\"360\":1,\"482\":1,\"495\":1,\"499\":1}}],[\"useenvironment\",{\"1\":{\"585\":1}}],[\"useendpoints\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"156\":2,\"157\":1,\"158\":1,\"163\":2,\"167\":4,\"482\":1,\"495\":1,\"499\":1,\"669\":1,\"672\":1}}],[\"usewebroot方法更改访问目录\",{\"1\":{\"578\":1}}],[\"usenewtonsoftjson\",{\"1\":{\"501\":1}}],[\"usenlog\",{\"1\":{\"454\":1}}],[\"usefulness\",{\"1\":{\"446\":1}}],[\"usestaticfiles\",{\"1\":{\"579\":2,\"580\":1}}],[\"usestartup<startup>\",{\"1\":{\"215\":1,\"447\":1,\"454\":1,\"462\":1,\"463\":1,\"583\":2,\"585\":2,\"661\":1}}],[\"uses\",{\"1\":{\"564\":1,\"1070\":5}}],[\"usesenparcweixin\",{\"1\":{\"710\":1}}],[\"usesenparcglobal\",{\"1\":{\"710\":1}}],[\"useserilog\",{\"1\":{\"462\":1,\"463\":1}}],[\"usesession\",{\"1\":{\"366\":1,\"367\":1,\"368\":1}}],[\"useswaggerui\",{\"1\":{\"151\":1,\"482\":1,\"495\":1,\"499\":1}}],[\"useswagger\",{\"1\":{\"151\":1,\"482\":1,\"495\":1,\"499\":1}}],[\"usedto\",{\"1\":{\"609\":2,\"622\":2}}],[\"used\",{\"1\":{\"211\":1,\"564\":1,\"1070\":1,\"1117\":1}}],[\"usedeveloperexceptionpage\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"482\":1,\"495\":1,\"499\":1}}],[\"use方法可以调用下一个中间件的添加\",{\"1\":{\"203\":1}}],[\"usemaster=false\",{\"1\":{\"1047\":1}}],[\"usemaster\",{\"1\":{\"1047\":8}}],[\"usemessagehandlerformp\",{\"1\":{\"711\":1}}],[\"usemysql\",{\"1\":{\"501\":1,\"502\":2}}],[\"usemiddleware<endpointmiddleware>\",{\"1\":{\"167\":1}}],[\"usemiddleware<endpointroutingmiddleware>\",{\"1\":{\"166\":1}}],[\"usemvc\",{\"1\":{\"155\":1}}],[\"use\",{\"1\":{\"157\":3,\"167\":1,\"418\":1,\"421\":1,\"441\":1,\"564\":3,\"768\":3,\"777\":1,\"925\":1,\"1036\":1,\"1109\":1}}],[\"usepathbase等\",{\"1\":{\"157\":1}}],[\"usehttpmethodoverride\",{\"1\":{\"157\":1}}],[\"usehttpsredirection\",{\"1\":{\"155\":1}}],[\"usecors等\",{\"1\":{\"157\":1}}],[\"usecors\",{\"1\":{\"155\":1}}],[\"usermame\",{\"1\":{\"1070\":3}}],[\"usercolmap\",{\"1\":{\"1061\":13}}],[\"usercontrollertests\",{\"1\":{\"586\":1}}],[\"usercontroller\",{\"1\":{\"348\":1,\"351\":1,\"483\":1,\"552\":1}}],[\"user属性项将jenkins改为root\",{\"1\":{\"905\":1}}],[\"userguide\",{\"1\":{\"874\":1}}],[\"user1=someuser\",{\"1\":{\"831\":1}}],[\"user的文件\",{\"1\":{\"799\":1}}],[\"userlist\",{\"1\":{\"677\":3,\"678\":1,\"681\":2}}],[\"userlib\",{\"1\":{\"213\":1,\"1119\":1}}],[\"userdtolist\",{\"1\":{\"600\":1,\"602\":2,\"607\":2,\"611\":1,\"615\":1,\"620\":1,\"625\":2,\"630\":2}}],[\"userdto\",{\"1\":{\"600\":2,\"602\":1,\"607\":2,\"609\":1,\"620\":6,\"622\":1,\"630\":1}}],[\"userrep\",{\"1\":{\"591\":4}}],[\"user=admin\",{\"1\":{\"853\":1}}],[\"user=elk\",{\"1\":{\"564\":1}}],[\"user=chrism\",{\"1\":{\"564\":3}}],[\"user=root\",{\"1\":{\"547\":1}}],[\"username=$\",{\"1\":{\"1070\":1}}],[\"username=root\",{\"1\":{\"858\":1}}],[\"username=13088888888\",{\"1\":{\"733\":1}}],[\"username=chris\",{\"1\":{\"564\":1}}],[\"username=user\",{\"1\":{\"564\":2}}],[\"username\",{\"1\":{\"364\":2,\"391\":1,\"392\":2,\"395\":2,\"472\":2,\"474\":2,\"475\":6,\"476\":1,\"477\":1,\"564\":1,\"746\":3,\"970\":1,\"1070\":4}}],[\"userids\",{\"1\":{\"677\":3,\"678\":3,\"681\":4}}],[\"userid=6974150586715897859\",{\"1\":{\"628\":1}}],[\"userid=6974150586715897857\",{\"1\":{\"603\":1,\"604\":1,\"605\":1}}],[\"userid=6974150586715897862\",{\"1\":{\"627\":1}}],[\"userid=6974150586715897861\",{\"1\":{\"626\":1}}],[\"userid\",{\"1\":{\"363\":2,\"364\":5,\"368\":1,\"424\":2,\"472\":2,\"506\":4,\"518\":1,\"519\":1,\"520\":1,\"522\":2,\"523\":1,\"524\":2,\"600\":2,\"602\":5,\"603\":1,\"607\":3,\"608\":1,\"609\":1,\"611\":3,\"612\":1,\"613\":1,\"615\":3,\"616\":1,\"617\":1,\"620\":2,\"621\":1,\"622\":1,\"625\":3,\"630\":6,\"672\":3,\"673\":3,\"677\":9,\"678\":1,\"680\":3,\"681\":5}}],[\"userinfos\",{\"1\":{\"680\":3}}],[\"userinfoserviceclient\",{\"1\":{\"673\":7,\"676\":1,\"678\":1,\"681\":1}}],[\"userinfoserviceclient>\",{\"1\":{\"673\":1}}],[\"userinfoservicebase\",{\"1\":{\"672\":1,\"675\":1,\"677\":1,\"680\":1}}],[\"userinfoservice\",{\"1\":{\"669\":1,\"671\":1,\"672\":1,\"673\":3,\"674\":1,\"676\":1,\"679\":1}}],[\"userinfogrpcservice\",{\"1\":{\"672\":1,\"675\":1,\"677\":1,\"680\":1}}],[\"userinfoetc\",{\"1\":{\"502\":1}}],[\"userinfo<a>\",{\"1\":{\"98\":1}}],[\"userinfo`1\",{\"1\":{\"95\":2,\"101\":1,\"106\":2}}],[\"userinfo\",{\"1\":{\"43\":1,\"64\":1,\"95\":1,\"98\":6,\"99\":1,\"105\":3,\"552\":6,\"677\":5,\"680\":1,\"681\":4,\"1053\":1,\"1055\":1,\"1058\":1,\"1060\":1,\"1061\":12}}],[\"userprofiles\",{\"1\":{\"363\":1}}],[\"users\",{\"1\":{\"363\":3,\"474\":1,\"501\":1,\"502\":1,\"503\":7,\"518\":1,\"519\":1,\"520\":1,\"522\":1,\"523\":1,\"591\":4,\"968\":1,\"970\":1,\"988\":1,\"1050\":1,\"1056\":1}}],[\"userserivce\",{\"1\":{\"352\":1}}],[\"userservicetest\",{\"1\":{\"587\":2,\"591\":2}}],[\"userservice2\",{\"1\":{\"352\":1}}],[\"userservice>\",{\"1\":{\"349\":1,\"660\":1}}],[\"userservice\",{\"1\":{\"347\":1,\"348\":5,\"349\":2,\"350\":5,\"351\":2,\"355\":1,\"474\":1,\"501\":3,\"587\":3,\"591\":7,\"658\":1,\"660\":4,\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"userouting与useendpoints必须同时使用\",{\"1\":{\"156\":1}}],[\"userouting\",{\"0\":{\"166\":1},\"1\":{\"150\":1,\"151\":1,\"153\":1,\"156\":2,\"157\":2,\"158\":1,\"166\":1,\"167\":4,\"482\":1,\"495\":1,\"499\":1}}],[\"userequestlocalization\",{\"1\":{\"144\":1}}],[\"userentityservice\",{\"1\":{\"363\":2}}],[\"userentity\",{\"1\":{\"43\":4}}],[\"userbase\",{\"1\":{\"52\":2,\"56\":2,\"69\":2,\"70\":3}}],[\"user32\",{\"1\":{\"44\":1}}],[\"user\",{\"1\":{\"3\":1,\"17\":3,\"36\":1,\"47\":2,\"48\":2,\"52\":1,\"56\":3,\"57\":2,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"66\":2,\"67\":1,\"72\":5,\"109\":4,\"361\":2,\"363\":1,\"364\":7,\"366\":3,\"368\":3,\"401\":2,\"403\":2,\"453\":2,\"475\":4,\"501\":6,\"502\":1,\"503\":2,\"509\":1,\"511\":2,\"512\":3,\"513\":2,\"515\":1,\"564\":1,\"586\":2,\"591\":6,\"602\":1,\"603\":2,\"604\":1,\"605\":1,\"607\":1,\"608\":1,\"609\":1,\"611\":1,\"612\":1,\"613\":1,\"615\":1,\"616\":1,\"617\":1,\"620\":1,\"621\":1,\"622\":1,\"623\":1,\"625\":1,\"626\":1,\"627\":1,\"628\":1,\"630\":4,\"631\":1,\"632\":1,\"671\":1,\"676\":3,\"679\":1,\"745\":2,\"746\":8,\"748\":2,\"777\":3,\"799\":1,\"802\":2,\"886\":1,\"949\":1,\"988\":1,\"1048\":1,\"1050\":1,\"1053\":1,\"1055\":1,\"1058\":1,\"1060\":1,\"1085\":1,\"1110\":1}}],[\"using\",{\"1\":{\"86\":1,\"94\":9,\"120\":2,\"167\":1,\"354\":1,\"355\":1,\"454\":5,\"458\":1,\"484\":1,\"501\":1,\"574\":2,\"577\":1,\"597\":10,\"609\":1,\"622\":1,\"632\":1,\"678\":1,\"681\":1,\"687\":1,\"691\":10,\"692\":12,\"693\":1,\"985\":2,\"1047\":4,\"1063\":2,\"1064\":2,\"1065\":2,\"1070\":2}}],[\"ushort\",{\"1\":{\"75\":1}}],[\"us\",{\"1\":{\"56\":2,\"57\":2,\"66\":2,\"144\":2,\"599\":1,\"964\":1,\"985\":1,\"986\":1,\"1012\":2}}],[\"usr2\",{\"1\":{\"564\":2}}],[\"usr1\",{\"1\":{\"564\":2}}],[\"usr\",{\"1\":{\"3\":2,\"549\":5,\"564\":3,\"797\":1,\"812\":4,\"815\":2,\"816\":1,\"817\":4,\"824\":1,\"825\":1,\"829\":1,\"846\":2,\"847\":1,\"848\":1,\"870\":1,\"885\":8,\"886\":4,\"949\":2,\"1079\":1,\"1135\":2,\"1136\":3}}],[\"ustc\",{\"1\":{\"3\":1}}],[\"up内部执行的步骤\",{\"1\":{\"852\":1}}],[\"uploadify\",{\"1\":{\"734\":2}}],[\"uploadimg\",{\"1\":{\"615\":1,\"616\":1,\"617\":1}}],[\"uploadfilestreamasync\",{\"1\":{\"687\":1}}],[\"upload\",{\"1\":{\"580\":1,\"615\":1,\"745\":2}}],[\"upgrade\",{\"1\":{\"543\":3,\"946\":1,\"949\":1,\"1109\":1}}],[\"upe\",{\"1\":{\"268\":1}}],[\"upstream\",{\"1\":{\"207\":1,\"774\":2}}],[\"up来注册服务\",{\"1\":{\"203\":1}}],[\"up\",{\"1\":{\"3\":1,\"203\":1,\"564\":1,\"852\":2,\"865\":1,\"867\":1,\"887\":1,\"1070\":1}}],[\"updateentity\",{\"1\":{\"1043\":4}}],[\"updated\",{\"1\":{\"1034\":12,\"1035\":12}}],[\"updates\",{\"1\":{\"892\":1}}],[\"updatewhat\",{\"1\":{\"768\":1}}],[\"update2\",{\"1\":{\"630\":2,\"631\":1,\"632\":1}}],[\"updatename\",{\"1\":{\"611\":2,\"612\":1,\"613\":1}}],[\"update\",{\"1\":{\"3\":2,\"206\":1,\"467\":1,\"501\":1,\"537\":1,\"564\":2,\"620\":2,\"621\":1,\"622\":1,\"623\":1,\"661\":1,\"739\":1,\"746\":1,\"777\":2,\"801\":1,\"840\":2,\"842\":1,\"862\":1,\"865\":1,\"867\":1,\"892\":1,\"946\":1,\"1012\":1,\"1043\":2,\"1080\":1,\"1109\":2,\"1115\":1}}],[\"a457\",{\"1\":{\"1043\":1,\"1044\":1}}],[\"a8ff\",{\"1\":{\"1036\":1}}],[\"aq\",{\"1\":{\"810\":2}}],[\"aq就是显示所有镜像的id\",{\"1\":{\"810\":1}}],[\"a修改了一些数据\",{\"1\":{\"798\":1}}],[\"avoid\",{\"1\":{\"985\":1}}],[\"av\",{\"1\":{\"774\":1}}],[\"available\",{\"1\":{\"564\":1}}],[\"avail\",{\"1\":{\"564\":1}}],[\"avatar\",{\"1\":{\"368\":1}}],[\"avatars8\",{\"1\":{\"333\":1}}],[\"avatars7\",{\"1\":{\"333\":1}}],[\"avatars6\",{\"1\":{\"333\":1}}],[\"avatars5\",{\"1\":{\"333\":1}}],[\"avatars4\",{\"1\":{\"333\":1}}],[\"avatars3\",{\"1\":{\"333\":1}}],[\"avatars2\",{\"1\":{\"333\":1}}],[\"avatars1\",{\"1\":{\"333\":1}}],[\"avatars0\",{\"1\":{\"333\":1}}],[\"ah命令就可以看见\",{\"1\":{\"752\":1}}],[\"air\",{\"1\":{\"739\":1}}],[\"a=do\",{\"1\":{\"733\":1,\"744\":1}}],[\"ajax\",{\"1\":{\"603\":2,\"608\":1,\"612\":1,\"616\":1,\"621\":1,\"626\":1,\"631\":1}}],[\"aka\",{\"1\":{\"574\":1,\"576\":1,\"1036\":4}}],[\"atime\",{\"1\":{\"1077\":4}}],[\"atheros\",{\"1\":{\"1013\":1}}],[\"attach\",{\"1\":{\"811\":2}}],[\"attempting\",{\"1\":{\"575\":1}}],[\"attrib\",{\"1\":{\"1061\":3}}],[\"attributeroutemodel\",{\"1\":{\"656\":3}}],[\"attributes\",{\"1\":{\"46\":4,\"474\":1}}],[\"attribute\",{\"1\":{\"42\":1,\"46\":5,\"97\":1,\"102\":3,\"104\":1,\"108\":1,\"111\":1,\"114\":1,\"400\":2,\"401\":2,\"402\":2,\"403\":2,\"404\":2,\"405\":2,\"416\":1,\"424\":1,\"1061\":1}}],[\"attributetargets就是目标对象\",{\"1\":{\"400\":1}}],[\"attributetargets\",{\"1\":{\"42\":3,\"46\":3,\"215\":2,\"400\":3,\"401\":2,\"402\":2,\"403\":3,\"405\":2,\"416\":2,\"427\":1,\"475\":1}}],[\"attributeusage特性用于控制如何应用自定义特性到目标元素\",{\"1\":{\"42\":1}}],[\"attributeusage\",{\"0\":{\"42\":1},\"1\":{\"42\":1,\"46\":3,\"215\":2,\"400\":1,\"401\":2,\"402\":2,\"403\":3,\"405\":2,\"416\":2,\"427\":1,\"475\":1}}],[\"attr\",{\"1\":{\"46\":1,\"1061\":2}}],[\"at\",{\"1\":{\"564\":3,\"574\":1,\"576\":1,\"769\":1}}],[\"a3\",{\"1\":{\"392\":1}}],[\"a0cd\",{\"1\":{\"712\":1}}],[\"a0\",{\"1\":{\"392\":1,\"393\":1}}],[\"ago\",{\"1\":{\"863\":3,\"871\":1}}],[\"agile\",{\"1\":{\"661\":3}}],[\"agileconfig支持asp\",{\"1\":{\"661\":1}}],[\"agileconfig支持多应用程序接入\",{\"1\":{\"661\":1}}],[\"agileconfig支持多节点部署\",{\"1\":{\"661\":1}}],[\"agileconfig并没有单独的控制台程序\",{\"1\":{\"661\":1}}],[\"agileconfig\",{\"0\":{\"661\":1},\"1\":{\"661\":7}}],[\"against\",{\"1\":{\"1070\":1}}],[\"again\",{\"1\":{\"427\":1}}],[\"age\",{\"1\":{\"381\":1,\"386\":1,\"918\":1}}],[\"aggressiveinlining\",{\"1\":{\"167\":1}}],[\"aux\",{\"1\":{\"1101\":2}}],[\"audit2allow\",{\"1\":{\"949\":1}}],[\"audit\",{\"1\":{\"949\":2}}],[\"audience\",{\"1\":{\"364\":4}}],[\"auth\",{\"0\":{\"1150\":1}}],[\"authparam=1531155951\",{\"1\":{\"1134\":1}}],[\"authcache\",{\"1\":{\"746\":1}}],[\"authonizationfilter\",{\"1\":{\"406\":1,\"407\":1}}],[\"authorprofile\",{\"1\":{\"583\":6}}],[\"authorizationfiltercontext\",{\"1\":{\"401\":2}}],[\"authorization是五种filter中优先级最高的\",{\"1\":{\"401\":1}}],[\"authorization\",{\"0\":{\"401\":1},\"1\":{\"364\":1,\"400\":3,\"401\":10,\"484\":3,\"586\":1,\"600\":1,\"603\":2,\"605\":1,\"607\":1,\"608\":1,\"612\":1,\"615\":1,\"616\":1,\"617\":1,\"620\":1,\"621\":1,\"625\":1,\"626\":1,\"631\":1,\"742\":1,\"743\":1}}],[\"authorizationmiddlewarewithendpointinvoked\",{\"1\":{\"168\":1}}],[\"authorizationmiddlewareinvokedkey\",{\"1\":{\"168\":1}}],[\"authorizefilter\",{\"1\":{\"408\":2}}],[\"authorize\",{\"1\":{\"364\":2}}],[\"author\",{\"1\":{\"46\":5,\"503\":1}}],[\"authorname\",{\"1\":{\"46\":4}}],[\"authorattribute\",{\"1\":{\"46\":4}}],[\"author栏旁边是git设置的用户名和邮箱地址\",{\"1\":{\"22\":1}}],[\"authenticationheadervalue\",{\"1\":{\"586\":1}}],[\"authenticationproperties\",{\"1\":{\"358\":1}}],[\"authenticationscheme\",{\"1\":{\"358\":2,\"364\":2}}],[\"authentication\",{\"1\":{\"3\":1,\"36\":1,\"364\":1}}],[\"autoscaling可以根据cpu\",{\"1\":{\"914\":1}}],[\"autoscaling\",{\"1\":{\"914\":1}}],[\"autoscaler\",{\"1\":{\"914\":1}}],[\"autoscale\",{\"1\":{\"914\":2}}],[\"autostart\",{\"1\":{\"564\":1}}],[\"autostart=true\",{\"1\":{\"547\":1,\"564\":4}}],[\"automapper\",{\"1\":{\"600\":1}}],[\"automatic\",{\"1\":{\"477\":1}}],[\"automaton\",{\"1\":{\"167\":1}}],[\"autorestart\",{\"1\":{\"564\":1}}],[\"autorestart=unexpected\",{\"1\":{\"564\":1}}],[\"autorestart=true\",{\"1\":{\"547\":1,\"564\":3}}],[\"autodetect\",{\"1\":{\"501\":1,\"502\":1}}],[\"auto\",{\"1\":{\"3\":1,\"17\":1,\"36\":1,\"321\":2,\"564\":3,\"865\":1,\"867\":1,\"1036\":2,\"1074\":2}}],[\"axios\",{\"1\":{\"253\":1}}],[\"aosp\",{\"1\":{\"247\":5}}],[\"aop\",{\"1\":{\"215\":3}}],[\"a2dfb7a0\",{\"1\":{\"1036\":1}}],[\"a2\",{\"1\":{\"209\":3,\"392\":1}}],[\"a1\",{\"1\":{\"209\":3,\"392\":1}}],[\"a|a|b|c|d\",{\"1\":{\"161\":1}}],[\"a|b|c|d\",{\"1\":{\"161\":1}}],[\"aadlffrst\",{\"1\":{\"1074\":1}}],[\"aa\",{\"1\":{\"185\":1,\"367\":3,\"410\":1,\"1060\":1,\"1090\":1}}],[\"aaa\",{\"1\":{\"180\":1,\"342\":1}}],[\"aaaa\",{\"1\":{\"47\":1}}],[\"aab\",{\"1\":{\"1037\":1}}],[\"aabbcc\",{\"1\":{\"484\":1}}],[\"aab|c|d\",{\"1\":{\"161\":2}}],[\"aabcd\",{\"1\":{\"161\":1}}],[\"aabcd时\",{\"1\":{\"161\":1}}],[\"ab\",{\"1\":{\"1053\":1}}],[\"aborted\",{\"1\":{\"949\":2}}],[\"aboutme\",{\"0\":{\"1137\":1}}],[\"about\",{\"1\":{\"574\":1,\"576\":1,\"1036\":3,\"1108\":1}}],[\"able\",{\"1\":{\"564\":2}}],[\"absoluteexpirationrelativetonow=timespan\",{\"1\":{\"373\":1}}],[\"absoluteexpiration\",{\"1\":{\"373\":1,\"381\":1,\"382\":1,\"386\":1,\"387\":1}}],[\"abstractions\",{\"1\":{\"1126\":2}}],[\"abstract\",{\"1\":{\"49\":1,\"51\":1,\"59\":1}}],[\"ab|c|d\",{\"1\":{\"161\":2}}],[\"abcdocker\",{\"1\":{\"923\":1}}],[\"abcd\",{\"1\":{\"161\":1}}],[\"abcd时\",{\"1\":{\"161\":1}}],[\"abc\",{\"1\":{\"160\":5}}],[\"awk\",{\"1\":{\"899\":1}}],[\"aws\",{\"1\":{\"152\":1}}],[\"awaitmatch\",{\"1\":{\"167\":2}}],[\"awaitmatcher\",{\"1\":{\"167\":2}}],[\"await\",{\"1\":{\"151\":2,\"156\":1,\"158\":4,\"167\":5,\"358\":1,\"362\":1,\"364\":2,\"378\":1,\"382\":4,\"387\":4,\"403\":4,\"404\":1,\"405\":1,\"501\":10,\"503\":1,\"507\":1,\"511\":1,\"512\":2,\"513\":1,\"518\":1,\"525\":2,\"526\":2,\"528\":4,\"586\":2,\"587\":1,\"591\":2,\"600\":1,\"604\":3,\"609\":3,\"613\":3,\"617\":3,\"622\":3,\"627\":3,\"632\":3,\"673\":1,\"675\":2,\"676\":1,\"677\":1,\"678\":3,\"680\":2,\"681\":3,\"687\":1,\"694\":1,\"710\":1,\"711\":1,\"712\":1,\"1051\":1,\"1053\":1,\"1055\":1,\"1058\":1}}],[\"azuretools\",{\"1\":{\"968\":1}}],[\"azurekeyvault\",{\"1\":{\"152\":1}}],[\"azureservicebus\",{\"1\":{\"152\":1}}],[\"azurestorage\",{\"1\":{\"152\":1}}],[\"azure\",{\"1\":{\"152\":6,\"1036\":2,\"1125\":1}}],[\"azrngcommon\",{\"1\":{\"400\":1,\"413\":1,\"416\":1,\"577\":1}}],[\"azrng\",{\"1\":{\"8\":1,\"232\":1,\"263\":1,\"347\":1,\"399\":1,\"472\":1,\"476\":1,\"501\":7,\"537\":1,\"561\":1,\"694\":1,\"751\":1,\"802\":1,\"968\":1,\"1037\":1,\"1070\":3}}],[\"afceeeaa6101\",{\"1\":{\"1036\":1}}],[\"affinity\",{\"1\":{\"918\":1}}],[\"after\",{\"1\":{\"204\":2}}],[\"af\",{\"1\":{\"106\":1,\"700\":1}}],[\"acdmt\",{\"1\":{\"1077\":1}}],[\"ac9327eae2b366085ac7f6a2d02df8aa8ead720a\",{\"1\":{\"1070\":1}}],[\"acrylicopacity\",{\"1\":{\"1036\":1}}],[\"acrobat\",{\"1\":{\"682\":1}}],[\"acme\",{\"1\":{\"821\":1}}],[\"acount\",{\"1\":{\"677\":6,\"680\":1,\"681\":5}}],[\"act\",{\"1\":{\"586\":3,\"587\":1,\"591\":1}}],[\"activate\",{\"1\":{\"575\":1,\"691\":1}}],[\"activator\",{\"1\":{\"101\":1,\"105\":3,\"106\":2,\"109\":1,\"112\":1,\"115\":2,\"117\":1,\"120\":2,\"574\":1}}],[\"activechangecallbacks\",{\"1\":{\"374\":1}}],[\"activemq等\",{\"1\":{\"210\":1}}],[\"activem\",{\"1\":{\"210\":1}}],[\"actions做ci\",{\"1\":{\"1070\":1}}],[\"actions构建镜像并部署服务\",{\"0\":{\"1068\":1}}],[\"actions\",{\"1\":{\"1036\":3,\"1070\":1,\"1109\":2}}],[\"action=getalbum\",{\"1\":{\"712\":1}}],[\"actionconst\",{\"1\":{\"661\":3}}],[\"actioncontext\",{\"1\":{\"472\":2,\"477\":2}}],[\"action注册方式\",{\"0\":{\"406\":1}}],[\"actionfilterattribute\",{\"1\":{\"403\":1,\"416\":2,\"418\":1,\"421\":1,\"427\":1,\"477\":1}}],[\"actionexecutiondelegate\",{\"1\":{\"403\":2}}],[\"actionexecutingcontext\",{\"1\":{\"403\":4,\"418\":1,\"421\":1,\"424\":1,\"427\":1,\"477\":1}}],[\"actionexecutedcontext\",{\"1\":{\"403\":2,\"416\":1,\"424\":1,\"477\":1}}],[\"action信息\",{\"1\":{\"403\":2}}],[\"actiondescriptor\",{\"1\":{\"403\":2}}],[\"actionresult<pet>\",{\"1\":{\"468\":1}}],[\"actionresult<string>\",{\"1\":{\"364\":2}}],[\"actionresult\",{\"1\":{\"348\":1,\"349\":1,\"351\":1,\"472\":1,\"476\":1}}],[\"action<object>\",{\"1\":{\"374\":1}}],[\"action<iendpointroutebuilder>\",{\"1\":{\"167\":1}}],[\"action<routeoptions>\",{\"1\":{\"165\":1}}],[\"action\",{\"0\":{\"403\":1},\"1\":{\"163\":1,\"403\":14,\"405\":1,\"474\":1,\"488\":1,\"490\":1,\"552\":1,\"641\":1,\"647\":1,\"653\":1,\"661\":3,\"1036\":2,\"1045\":3,\"1070\":7}}],[\"accesskey\",{\"1\":{\"954\":4}}],[\"access\",{\"1\":{\"914\":1,\"1077\":1}}],[\"accessmodes\",{\"1\":{\"914\":1}}],[\"accesstokencontainer\",{\"1\":{\"710\":1,\"712\":1}}],[\"accesstoken\",{\"1\":{\"710\":1,\"712\":2}}],[\"accessor\",{\"1\":{\"363\":5}}],[\"accessdeniedpath\",{\"1\":{\"359\":1}}],[\"acceptverbs\",{\"1\":{\"474\":1}}],[\"accept\",{\"1\":{\"146\":1,\"468\":1,\"859\":2}}],[\"account鉴权\",{\"1\":{\"914\":1}}],[\"account为服务提供了一种方便的认证机制\",{\"1\":{\"914\":1}}],[\"account是为了方便pod里面的进程调用kubernetes\",{\"1\":{\"914\":1}}],[\"accountsettingfunc\",{\"1\":{\"711\":1}}],[\"account=2\",{\"1\":{\"676\":1}}],[\"account=1\",{\"1\":{\"669\":1,\"674\":1,\"679\":1}}],[\"account=\",{\"1\":{\"502\":1}}],[\"account=itzhangyunpeng\",{\"1\":{\"217\":1,\"219\":1}}],[\"account\",{\"1\":{\"48\":1,\"59\":1,\"358\":1,\"359\":2,\"368\":4,\"501\":13,\"502\":1,\"503\":7,\"511\":3,\"512\":1,\"513\":1,\"518\":1,\"519\":1,\"520\":2,\"522\":3,\"523\":2,\"528\":2,\"564\":1,\"591\":8,\"675\":1,\"677\":1,\"680\":1,\"681\":1,\"734\":1,\"914\":1,\"1061\":4}}],[\"accout`即可\",{\"1\":{\"18\":1}}],[\"acger8gps9dydsblpspaya\",{\"1\":{\"134\":1}}],[\"aprotobuf\",{\"1\":{\"968\":1}}],[\"apt\",{\"1\":{\"840\":3,\"842\":2,\"865\":5,\"867\":5,\"1109\":3,\"1115\":1}}],[\"apache2\",{\"1\":{\"253\":1}}],[\"apache\",{\"0\":{\"251\":1},\"1\":{\"247\":3,\"251\":1,\"253\":2,\"914\":1}}],[\"apache和nginx就可以单独运行\",{\"1\":{\"203\":1}}],[\"apollo\",{\"1\":{\"210\":1}}],[\"apc等\",{\"1\":{\"206\":1}}],[\"api或其他外部服务而设计的\",{\"1\":{\"914\":1}}],[\"apis\",{\"1\":{\"720\":1}}],[\"apipost\",{\"0\":{\"715\":1},\"1\":{\"715\":1}}],[\"apiprefix\",{\"1\":{\"656\":5}}],[\"apifox\",{\"0\":{\"714\":1},\"1\":{\"714\":1,\"1014\":1}}],[\"api版本已经被弃用\",{\"1\":{\"636\":1}}],[\"api版本控制扩展定义了简单的元数据属性和约定\",{\"1\":{\"635\":1}}],[\"api版本控制\",{\"0\":{\"634\":1}}],[\"api版本信息\",{\"1\":{\"493\":1}}],[\"api等\",{\"1\":{\"584\":1}}],[\"api类库如何内嵌运行\",{\"1\":{\"577\":1}}],[\"apidescription\",{\"1\":{\"497\":4}}],[\"api将返回响应标头中支持的版本信息\",{\"1\":{\"494\":1,\"498\":1,\"638\":1,\"644\":1,\"650\":1}}],[\"apiversionselector\",{\"1\":{\"650\":1}}],[\"apiversionreader\",{\"1\":{\"638\":1,\"650\":1,\"655\":3}}],[\"apiversiondescription\",{\"1\":{\"497\":1}}],[\"apiversiondescriptions\",{\"1\":{\"494\":1,\"495\":1,\"497\":1,\"499\":1}}],[\"apiversionneutral\",{\"1\":{\"488\":1,\"490\":1,\"636\":1,\"641\":1,\"647\":1,\"653\":1}}],[\"apiversion\",{\"1\":{\"488\":5,\"494\":2,\"497\":1,\"498\":1,\"636\":2,\"638\":1,\"639\":3,\"644\":1,\"645\":5,\"650\":1,\"651\":2,\"655\":1,\"923\":1,\"930\":1,\"931\":2}}],[\"apiexplorer用来实现元数据的发现工作\",{\"1\":{\"494\":1,\"498\":1}}],[\"apiexplorer\",{\"1\":{\"486\":1,\"635\":1}}],[\"apiexplorersettings\",{\"1\":{\"484\":1}}],[\"apikey\",{\"1\":{\"484\":1}}],[\"apikey=63edf12c\",{\"1\":{\"211\":1,\"1117\":1}}],[\"api项目\",{\"1\":{\"479\":1,\"501\":1,\"550\":1}}],[\"api程序框架\",{\"1\":{\"449\":1}}],[\"apiresultfilterattribute\",{\"1\":{\"400\":1}}],[\"api应用程序添加nuget包\",{\"1\":{\"382\":1,\"387\":1}}],[\"api网关\",{\"1\":{\"210\":1}}],[\"api来实现\",{\"1\":{\"204\":2}}],[\"api\",{\"0\":{\"382\":1,\"387\":1},\"1\":{\"153\":2,\"211\":1,\"213\":1,\"216\":2,\"336\":1,\"421\":1,\"468\":1,\"472\":1,\"477\":2,\"483\":1,\"484\":1,\"488\":3,\"490\":1,\"497\":1,\"500\":4,\"540\":1,\"552\":1,\"567\":1,\"568\":1,\"569\":1,\"586\":1,\"603\":2,\"604\":1,\"605\":1,\"608\":1,\"609\":1,\"612\":1,\"613\":1,\"616\":1,\"617\":1,\"621\":1,\"622\":1,\"623\":1,\"626\":1,\"627\":1,\"628\":1,\"629\":1,\"631\":1,\"632\":1,\"635\":1,\"638\":1,\"639\":2,\"641\":1,\"642\":7,\"645\":2,\"647\":1,\"648\":4,\"651\":2,\"653\":1,\"654\":2,\"655\":3,\"656\":2,\"663\":1,\"694\":1,\"696\":2,\"734\":1,\"746\":2,\"914\":2,\"931\":1,\"941\":2,\"944\":1,\"970\":2,\"1117\":1,\"1119\":1,\"1125\":1}}],[\"apicontroller\",{\"1\":{\"145\":1,\"472\":2,\"476\":1,\"477\":1,\"483\":1,\"488\":3,\"490\":1,\"552\":1,\"575\":1,\"576\":1,\"639\":2,\"641\":1,\"645\":2,\"647\":1,\"651\":2,\"653\":1,\"673\":1}}],[\"api函数的调用\",{\"1\":{\"44\":1}}],[\"appdata\",{\"1\":{\"968\":1,\"970\":1,\"988\":1}}],[\"appdomain\",{\"1\":{\"91\":1,\"117\":1,\"483\":1,\"494\":1,\"582\":1}}],[\"app=nginx\",{\"1\":{\"918\":3}}],[\"apps\",{\"1\":{\"873\":1,\"874\":2,\"985\":1}}],[\"appsettings添加\",{\"1\":{\"661\":1}}],[\"appsettings\",{\"1\":{\"395\":1,\"446\":2,\"582\":2,\"583\":4,\"661\":1,\"666\":1}}],[\"appmsgalbum\",{\"1\":{\"712\":1}}],[\"appid\",{\"1\":{\"661\":4,\"710\":1}}],[\"app<t>\",{\"1\":{\"583\":1}}],[\"appleboy\",{\"1\":{\"1070\":2}}],[\"applypatch\",{\"1\":{\"777\":2}}],[\"applyto\",{\"1\":{\"630\":1}}],[\"applyconfigurationsfromassembly\",{\"1\":{\"502\":1}}],[\"applyconfiguration\",{\"1\":{\"502\":1}}],[\"apply\",{\"1\":{\"497\":1,\"656\":1}}],[\"applicationversion>\",{\"1\":{\"1037\":1}}],[\"applicationdisplayversion>\",{\"1\":{\"1037\":1}}],[\"applicationidguid>\",{\"1\":{\"1037\":1}}],[\"applicationid>\",{\"1\":{\"1037\":1}}],[\"applicationtitle>\",{\"1\":{\"1037\":1}}],[\"applications\",{\"1\":{\"985\":1}}],[\"applicationservice>\",{\"1\":{\"345\":1,\"346\":1,\"347\":1}}],[\"applicationservices\",{\"1\":{\"166\":1,\"167\":1,\"353\":1,\"367\":1,\"368\":1}}],[\"applicationlocation\",{\"1\":{\"692\":4}}],[\"applicationconfiguration\",{\"1\":{\"660\":1}}],[\"applicationmodel\",{\"1\":{\"656\":1}}],[\"applicationurl\",{\"1\":{\"552\":1}}],[\"applicationbuilder\",{\"1\":{\"167\":1}}],[\"application\",{\"0\":{\"567\":1,\"569\":1},\"1\":{\"151\":1,\"167\":1,\"203\":1,\"364\":1,\"569\":3,\"603\":1,\"608\":1,\"609\":1,\"610\":1,\"621\":1,\"622\":1,\"631\":1,\"632\":1,\"656\":2,\"660\":2,\"732\":1,\"733\":1,\"1019\":1}}],[\"appcontext\",{\"1\":{\"483\":1,\"484\":1,\"494\":1}}],[\"appcache\",{\"1\":{\"378\":2}}],[\"append\",{\"1\":{\"616\":2}}],[\"appender>\",{\"1\":{\"447\":1}}],[\"appender\",{\"1\":{\"447\":1}}],[\"appendonly\",{\"1\":{\"380\":2,\"385\":2,\"856\":2}}],[\"app\",{\"1\":{\"144\":1,\"150\":5,\"151\":7,\"153\":5,\"155\":4,\"156\":3,\"157\":6,\"158\":4,\"163\":2,\"166\":2,\"167\":3,\"247\":1,\"353\":1,\"354\":2,\"360\":2,\"364\":1,\"366\":1,\"367\":2,\"368\":2,\"418\":1,\"421\":1,\"482\":7,\"495\":7,\"499\":7,\"573\":1,\"574\":1,\"576\":2,\"577\":1,\"579\":2,\"580\":4,\"669\":1,\"672\":1,\"694\":1,\"710\":1,\"711\":1,\"806\":1,\"837\":1,\"923\":1,\"943\":14,\"1037\":1,\"1070\":7}}],[\"astype\",{\"1\":{\"600\":2}}],[\"asnotracking\",{\"1\":{\"503\":1,\"504\":1}}],[\"ascii\",{\"1\":{\"364\":1}}],[\"aservice<>\",{\"1\":{\"344\":1}}],[\"aspx\",{\"1\":{\"1012\":5}}],[\"aspose\",{\"0\":{\"682\":1},\"1\":{\"682\":2,\"683\":1,\"684\":1}}],[\"asp0000\",{\"1\":{\"494\":1}}],[\"aspnet\",{\"1\":{\"148\":1,\"382\":1,\"410\":1,\"453\":2,\"468\":1,\"470\":1,\"474\":2,\"477\":4,\"484\":1,\"563\":1,\"629\":1,\"656\":1,\"666\":1,\"806\":1,\"834\":1,\"837\":1,\"838\":1,\"1070\":1}}],[\"aspnetcorehostingmodel>\",{\"1\":{\"562\":1,\"563\":1}}],[\"aspnetcore\",{\"0\":{\"1067\":1},\"1\":{\"147\":1,\"152\":35,\"153\":3,\"167\":1,\"210\":1,\"364\":1,\"366\":1,\"378\":1,\"404\":1,\"405\":1,\"446\":4,\"447\":1,\"452\":1,\"454\":1,\"457\":1,\"461\":1,\"478\":1,\"480\":1,\"486\":3,\"552\":1,\"573\":1,\"574\":1,\"576\":2,\"585\":1,\"588\":1,\"600\":4,\"629\":1,\"635\":2,\"668\":1,\"669\":1,\"672\":1,\"710\":1,\"837\":1,\"1067\":1,\"1070\":1}}],[\"asp\",{\"1\":{\"142\":1,\"167\":1,\"203\":2,\"399\":1,\"410\":1,\"456\":1,\"477\":1,\"543\":1,\"559\":1,\"561\":3,\"562\":3,\"563\":2,\"588\":1,\"635\":1,\"657\":1,\"1067\":1}}],[\"as操作符永远不会抛出异常\",{\"1\":{\"130\":1}}],[\"as\",{\"0\":{\"130\":1},\"1\":{\"130\":2,\"243\":1,\"402\":2,\"518\":2,\"519\":2,\"520\":5,\"522\":3,\"524\":6,\"564\":3,\"574\":1,\"820\":1,\"968\":1,\"1070\":5}}],[\"assignments\",{\"1\":{\"968\":1}}],[\"assumedefaultversionwhenunspecified\",{\"1\":{\"494\":1,\"498\":1,\"638\":1,\"644\":1,\"650\":1,\"655\":1}}],[\"assert\",{\"1\":{\"585\":1,\"586\":4,\"587\":2,\"591\":3,\"596\":1,\"597\":5,\"598\":5,\"599\":4}}],[\"assets\",{\"1\":{\"333\":1}}],[\"assemblies\",{\"1\":{\"986\":1}}],[\"assemblyinitializeattribute\",{\"1\":{\"596\":1}}],[\"assemblypath\",{\"1\":{\"577\":3}}],[\"assemblydependencyresolver\",{\"1\":{\"577\":3}}],[\"assemblyloadcontext\",{\"1\":{\"570\":1,\"571\":2,\"574\":1,\"577\":2}}],[\"assembly\",{\"0\":{\"89\":1},\"1\":{\"46\":1,\"88\":1,\"90\":1,\"91\":1,\"92\":6,\"93\":8,\"94\":14,\"95\":8,\"97\":1,\"98\":4,\"101\":4,\"106\":8,\"109\":4,\"112\":4,\"115\":8,\"117\":6,\"118\":5,\"400\":1,\"483\":1,\"484\":1,\"501\":1,\"502\":1,\"571\":1,\"573\":2,\"574\":6,\"576\":1,\"577\":3,\"600\":1}}],[\"assemblyname\",{\"1\":{\"46\":2,\"573\":1,\"574\":3,\"576\":1,\"577\":4}}],[\"assem\",{\"1\":{\"98\":2}}],[\"ass\",{\"1\":{\"117\":1}}],[\"async=\",{\"1\":{\"453\":1}}],[\"async\",{\"1\":{\"51\":1,\"151\":1,\"156\":1,\"158\":4,\"167\":2,\"364\":1,\"382\":1,\"387\":1,\"403\":3,\"404\":1,\"405\":1,\"457\":1,\"468\":4,\"501\":5,\"586\":1,\"587\":1,\"591\":2,\"600\":1,\"604\":1,\"609\":1,\"613\":1,\"617\":1,\"622\":1,\"627\":1,\"632\":1,\"673\":1,\"675\":1,\"676\":1,\"677\":1,\"678\":1,\"680\":1,\"681\":1,\"711\":1,\"712\":1}}],[\"asia\",{\"1\":{\"3\":1,\"36\":1,\"857\":1}}],[\"architecture\",{\"1\":{\"805\":1}}],[\"archives\",{\"1\":{\"336\":1,\"685\":1,\"1035\":1}}],[\"archive\",{\"1\":{\"46\":1,\"336\":1}}],[\"arrary\",{\"1\":{\"691\":4}}],[\"arrange\",{\"1\":{\"586\":3,\"587\":1,\"591\":1}}],[\"array\",{\"1\":{\"124\":3,\"125\":1,\"391\":1,\"393\":1,\"394\":1,\"484\":1,\"1036\":1}}],[\"area\",{\"1\":{\"1036\":1}}],[\"are\",{\"1\":{\"564\":1,\"777\":1,\"985\":1,\"1036\":1}}],[\"arangodb\",{\"1\":{\"152\":2}}],[\"arg\",{\"0\":{\"831\":1},\"1\":{\"811\":1,\"820\":1,\"831\":3,\"837\":1}}],[\"argumentexception\",{\"1\":{\"574\":2,\"660\":3}}],[\"arguments类型为object数组\",{\"1\":{\"410\":1}}],[\"arguments参数是typefilterattribute跟servicefilterattribute的一个重要区别\",{\"1\":{\"410\":1}}],[\"arguments\",{\"1\":{\"410\":1,\"1019\":1}}],[\"argumentnullexception\",{\"1\":{\"167\":4,\"168\":3,\"472\":1,\"600\":1,\"660\":2}}],[\"argozhang\",{\"1\":{\"137\":1}}],[\"args参数就是通过自定义协议传入的\",{\"1\":{\"691\":1}}],[\"args\",{\"1\":{\"68\":1,\"83\":1,\"94\":4,\"99\":1,\"102\":1,\"106\":2,\"109\":1,\"112\":1,\"115\":2,\"215\":2,\"375\":1,\"376\":1,\"381\":1,\"386\":1,\"442\":1,\"443\":2,\"447\":2,\"454\":4,\"462\":6,\"463\":4,\"501\":2,\"564\":1,\"574\":1,\"583\":4,\"661\":4,\"691\":13}}],[\"articles\",{\"1\":{\"243\":1,\"472\":1}}],[\"article\",{\"0\":{\"1138\":1},\"1\":{\"8\":1,\"40\":1,\"345\":1,\"346\":1,\"347\":1,\"594\":1,\"953\":1,\"968\":1,\"1116\":1}}],[\"amk\",{\"1\":{\"968\":1}}],[\"amazon\",{\"1\":{\"152\":2}}],[\"amend\",{\"1\":{\"27\":1}}],[\"amend命令\",{\"1\":{\"27\":1}}],[\"am\",{\"1\":{\"22\":1,\"27\":1}}],[\"another\",{\"1\":{\"1014\":1}}],[\"annarbor\",{\"1\":{\"968\":1}}],[\"annotations\",{\"1\":{\"501\":2,\"918\":1,\"931\":2}}],[\"analyzer\",{\"1\":{\"965\":1}}],[\"analyzers\",{\"1\":{\"585\":2,\"670\":1,\"673\":1}}],[\"analysis\",{\"1\":{\"956\":1}}],[\"ansi\",{\"1\":{\"564\":1}}],[\"ansi=false\",{\"1\":{\"564\":1}}],[\"ansible\",{\"1\":{\"253\":1}}],[\"angular\",{\"1\":{\"253\":1}}],[\"anuken\",{\"1\":{\"243\":1}}],[\"andorid有官方测试版\",{\"1\":{\"697\":1}}],[\"androidsdkdirectory=d\",{\"1\":{\"1037\":1}}],[\"androidsdkdirectory\",{\"1\":{\"1037\":1}}],[\"androidsigningstorepass\",{\"1\":{\"1037\":1}}],[\"androidsigningstorepass=1234567\",{\"1\":{\"1037\":2}}],[\"androidsigningstorepass>\",{\"1\":{\"1037\":1}}],[\"androidsigningkeypass\",{\"1\":{\"1037\":1}}],[\"androidsigningkeypass=123456\",{\"1\":{\"1037\":2}}],[\"androidsigningkeypass>\",{\"1\":{\"1037\":1}}],[\"androidsigningkeyalias>\",{\"1\":{\"1037\":1}}],[\"androidsigningkeystore>\",{\"1\":{\"1037\":1}}],[\"androidkeystore>\",{\"1\":{\"1037\":1}}],[\"android\",{\"1\":{\"243\":1,\"247\":7,\"253\":4,\"467\":1,\"1037\":11}}],[\"and\",{\"1\":{\"152\":3,\"167\":2,\"442\":3,\"519\":1,\"563\":1,\"768\":1,\"865\":2,\"867\":2,\"876\":1,\"949\":1,\"968\":1,\"1036\":5,\"1037\":1,\"1041\":8,\"1044\":3,\"1070\":3}}],[\"animal1\",{\"1\":{\"131\":4}}],[\"animal3\",{\"1\":{\"128\":6}}],[\"animal\",{\"1\":{\"73\":2,\"127\":4,\"128\":9,\"130\":7,\"131\":7}}],[\"anyasync\",{\"1\":{\"525\":2}}],[\"any\",{\"1\":{\"43\":3,\"215\":1,\"401\":2,\"402\":2,\"403\":2,\"501\":1,\"583\":1,\"591\":1,\"602\":1,\"607\":1,\"656\":1,\"1055\":2,\"1061\":1}}],[\"an\",{\"1\":{\"18\":1,\"442\":3,\"564\":2,\"964\":1}}],[\"a+rw\",{\"1\":{\"8\":1}}],[\"a\",{\"1\":{\"8\":2,\"23\":1,\"26\":2,\"65\":1,\"78\":1,\"79\":2,\"81\":2,\"98\":6,\"123\":6,\"125\":6,\"134\":17,\"159\":3,\"161\":2,\"206\":2,\"208\":1,\"209\":1,\"211\":1,\"243\":3,\"322\":2,\"343\":8,\"436\":1,\"458\":1,\"522\":1,\"564\":6,\"660\":1,\"739\":1,\"758\":1,\"768\":1,\"769\":4,\"777\":2,\"798\":1,\"810\":1,\"811\":3,\"829\":1,\"863\":3,\"870\":1,\"873\":1,\"874\":1,\"899\":1,\"941\":1,\"949\":4,\"985\":1,\"1007\":1,\"1031\":1,\"1036\":2,\"1061\":3,\"1070\":1,\"1074\":2,\"1077\":1,\"1079\":1,\"1082\":2,\"1085\":2,\"1115\":1,\"1117\":1}}],[\"adfiprus\",{\"1\":{\"1079\":1}}],[\"adblock\",{\"0\":{\"990\":1}}],[\"adventureworks\",{\"1\":{\"369\":1}}],[\"advancedapis\",{\"1\":{\"711\":1}}],[\"advanced\",{\"1\":{\"253\":1}}],[\"adm1n\",{\"1\":{\"218\":1}}],[\"admin4\",{\"1\":{\"677\":1,\"681\":1}}],[\"admin3\",{\"1\":{\"677\":1,\"681\":1}}],[\"admin2\",{\"1\":{\"677\":1,\"681\":1}}],[\"admin1\",{\"1\":{\"677\":1,\"681\":1}}],[\"adminconsole\",{\"1\":{\"661\":1}}],[\"adminconsole=true\",{\"1\":{\"661\":1}}],[\"admin\",{\"1\":{\"6\":1,\"217\":2,\"218\":1,\"219\":2,\"368\":1,\"391\":1,\"395\":1,\"401\":2,\"672\":1,\"675\":1}}],[\"adobe\",{\"1\":{\"682\":1}}],[\"adonet\",{\"1\":{\"529\":1}}],[\"ado\",{\"1\":{\"203\":1}}],[\"adapter\",{\"1\":{\"202\":1,\"1110\":4}}],[\"adc\",{\"1\":{\"138\":1}}],[\"add告诉git\",{\"1\":{\"753\":1}}],[\"addyears\",{\"1\":{\"693\":1}}],[\"addgrpcclient<userinfoservice\",{\"1\":{\"673\":1}}],[\"addgrpcclient<rpc\",{\"1\":{\"670\":1}}],[\"addgrpc\",{\"1\":{\"669\":2,\"670\":2,\"672\":1}}],[\"addoptions\",{\"1\":{\"575\":1}}],[\"addversionedapiexplorer用来添加api的版本管理\",{\"1\":{\"494\":1,\"498\":1}}],[\"addversionedapiexplorer\",{\"1\":{\"494\":1,\"498\":1}}],[\"addnewtonsoftjson\",{\"1\":{\"477\":1,\"478\":1,\"600\":1}}],[\"addagileconfig\",{\"1\":{\"661\":1}}],[\"addautomapper\",{\"1\":{\"600\":1}}],[\"addauthentication\",{\"1\":{\"359\":1,\"364\":1}}],[\"addapplicationpart\",{\"1\":{\"576\":2}}],[\"addapiversioning\",{\"1\":{\"494\":2,\"498\":2,\"638\":1,\"644\":1,\"650\":1,\"655\":1}}],[\"addasync\",{\"1\":{\"468\":1,\"501\":2,\"591\":3}}],[\"addfilter\",{\"1\":{\"447\":2}}],[\"addpc\",{\"1\":{\"1031\":1}}],[\"addpatienteat\",{\"1\":{\"421\":1}}],[\"addpolicy就是加个巡逻官\",{\"1\":{\"155\":1}}],[\"addpolicy\",{\"1\":{\"155\":2}}],[\"add<modelactionfiter>\",{\"1\":{\"477\":1}}],[\"add<customerexceptionfilter>\",{\"1\":{\"408\":1}}],[\"add<ienumerable<weatherforecast>>\",{\"1\":{\"378\":1}}],[\"addmodelerror\",{\"1\":{\"476\":1}}],[\"addmodelverify\",{\"1\":{\"474\":1,\"476\":1}}],[\"addmvc\",{\"1\":{\"408\":1}}],[\"addmemorycacheextension\",{\"1\":{\"377\":1}}],[\"addmemorycache\",{\"1\":{\"371\":1,\"373\":1,\"424\":1,\"710\":1}}],[\"addinmemorycollection\",{\"1\":{\"583\":2}}],[\"addinmemorystorage\",{\"1\":{\"153\":1}}],[\"additions\",{\"1\":{\"564\":1}}],[\"additionally\",{\"1\":{\"1036\":1}}],[\"additional\",{\"1\":{\"468\":1,\"474\":1,\"564\":1}}],[\"addidentities\",{\"1\":{\"401\":2}}],[\"adddbcontext\",{\"1\":{\"502\":1}}],[\"adddbcontext<opendbcontext>\",{\"1\":{\"501\":1,\"502\":1}}],[\"adddays\",{\"1\":{\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"693\":1,\"1041\":4}}],[\"adddistributedmemorycache\",{\"1\":{\"366\":1,\"367\":1,\"368\":1,\"369\":1}}],[\"addlnskydb\",{\"1\":{\"1039\":1}}],[\"addlog4net\",{\"1\":{\"447\":1}}],[\"addlocalization\",{\"1\":{\"143\":1}}],[\"addlazycache\",{\"1\":{\"378\":1}}],[\"addentity\",{\"1\":{\"1042\":2}}],[\"addenvironmentvariables\",{\"1\":{\"582\":1}}],[\"addendpointsapiexplorer\",{\"1\":{\"574\":1,\"576\":1,\"600\":1}}],[\"addexpirationtoken\",{\"1\":{\"375\":1,\"376\":1}}],[\"added\",{\"1\":{\"167\":2,\"564\":1,\"768\":1}}],[\"addjwtbearer\",{\"1\":{\"364\":1}}],[\"addjsonfile\",{\"1\":{\"215\":1,\"574\":1,\"576\":1,\"582\":3,\"583\":1,\"661\":1}}],[\"addhttpclientservice\",{\"1\":{\"694\":1}}],[\"addheader\",{\"1\":{\"472\":1}}],[\"addhealthchecksui\",{\"1\":{\"153\":1}}],[\"addhealthchecks\",{\"1\":{\"150\":1,\"151\":1,\"153\":1}}],[\"addhours\",{\"1\":{\"358\":1,\"364\":1}}],[\"addtransient\",{\"1\":{\"660\":1}}],[\"addtransient<iconfigureoptions<swaggergenoptions>\",{\"1\":{\"498\":1}}],[\"addtransient<iuserservice\",{\"1\":{\"349\":1}}],[\"addtransient<iapplicationservice\",{\"1\":{\"347\":1}}],[\"addtransient<iemailvalidcodequery\",{\"1\":{\"344\":1}}],[\"addtransient瞬时模式\",{\"1\":{\"203\":2}}],[\"addswaggergen\",{\"1\":{\"481\":1,\"483\":1,\"484\":1,\"494\":1,\"498\":1,\"574\":1,\"576\":1,\"600\":1}}],[\"addstackexchangerediscache\",{\"1\":{\"382\":1,\"387\":1}}],[\"addsenparcweixinservices\",{\"1\":{\"710\":1}}],[\"addsecurityrequirement\",{\"1\":{\"484\":1}}],[\"addsecuritydefinition\",{\"1\":{\"484\":1}}],[\"addseconds\",{\"1\":{\"372\":1,\"373\":1,\"378\":1}}],[\"addsession\",{\"1\":{\"366\":1,\"367\":1,\"368\":1,\"369\":1}}],[\"addsingleton→addtransient→addscoped\",{\"1\":{\"344\":1}}],[\"addsingleton\",{\"1\":{\"344\":1,\"583\":1,\"660\":1}}],[\"addsingleton<iobjectmodelvalidator\",{\"1\":{\"477\":1}}],[\"addsingleton<ihttpcontextaccessor\",{\"1\":{\"359\":1,\"367\":1,\"368\":1,\"369\":1}}],[\"addsingleton<isingletonservice\",{\"1\":{\"354\":1}}],[\"addsingleton<iapplicationservice\",{\"1\":{\"345\":1}}],[\"addsingleton<imydep>\",{\"1\":{\"344\":2}}],[\"addsingleton<mydep>\",{\"1\":{\"344\":1}}],[\"addsingleton单例模式\",{\"1\":{\"203\":2}}],[\"addscoped<iorderservice\",{\"1\":{\"660\":1}}],[\"addscoped<iuserservice\",{\"1\":{\"660\":1}}],[\"addscoped<imsgservice\",{\"1\":{\"575\":2,\"576\":1}}],[\"addscoped<iapplicationservice\",{\"1\":{\"346\":1}}],[\"addscoped\",{\"1\":{\"203\":1,\"400\":1,\"409\":1}}],[\"addr\",{\"1\":{\"1105\":1}}],[\"addr命令在容器内找不到\",{\"1\":{\"840\":1}}],[\"addrange\",{\"1\":{\"691\":1}}],[\"addrangeasync\",{\"1\":{\"526\":1}}],[\"addrouting\",{\"1\":{\"156\":1,\"164\":1,\"165\":3,\"166\":2}}],[\"address\",{\"1\":{\"3\":1,\"36\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"72\":3,\"381\":1,\"382\":3,\"386\":1,\"387\":3,\"583\":2,\"670\":1,\"673\":1}}],[\"addconfiguration\",{\"1\":{\"583\":1}}],[\"addcontrollers\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"371\":1,\"373\":1,\"377\":1,\"382\":1,\"387\":1,\"413\":1,\"416\":1,\"418\":1,\"421\":1,\"424\":1,\"472\":1,\"477\":1,\"478\":1,\"481\":1,\"494\":1,\"498\":1,\"502\":1,\"574\":1,\"576\":1,\"600\":1}}],[\"addcookie\",{\"1\":{\"359\":1}}],[\"addcors来添加一个跨域处理方式\",{\"1\":{\"155\":1}}],[\"addcors\",{\"1\":{\"155\":2}}],[\"addcommon\",{\"1\":{\"155\":1}}],[\"addcheck<redishealthcheck>\",{\"1\":{\"151\":1,\"153\":1}}],[\"addcheck<mysqlhealthcheck>\",{\"1\":{\"151\":1,\"153\":1}}],[\"add之后\",{\"1\":{\"32\":1}}],[\"add和commit同时完成\",{\"1\":{\"27\":1}}],[\"adduserlistresponse\",{\"1\":{\"679\":2,\"680\":1}}],[\"adduserlistrequest\",{\"1\":{\"679\":2,\"681\":1}}],[\"adduserlist\",{\"1\":{\"679\":1,\"680\":1,\"681\":2}}],[\"adduserverify\",{\"1\":{\"475\":1}}],[\"adduserverifyattribute\",{\"1\":{\"475\":1}}],[\"adduservm\",{\"1\":{\"468\":1,\"591\":2}}],[\"adduserinfovm\",{\"1\":{\"475\":3}}],[\"adduser\",{\"1\":{\"8\":1,\"591\":1}}],[\"add\",{\"0\":{\"778\":1,\"825\":1},\"1\":{\"3\":1,\"21\":2,\"22\":6,\"23\":2,\"167\":2,\"215\":3,\"364\":1,\"382\":3,\"387\":3,\"394\":1,\"405\":1,\"408\":3,\"413\":1,\"416\":1,\"418\":1,\"421\":1,\"424\":1,\"476\":1,\"477\":1,\"478\":1,\"501\":1,\"526\":1,\"527\":1,\"542\":1,\"552\":1,\"564\":2,\"574\":2,\"600\":2,\"607\":3,\"608\":1,\"609\":1,\"617\":3,\"629\":1,\"661\":1,\"676\":1,\"677\":2,\"680\":1,\"681\":1,\"688\":2,\"691\":1,\"693\":1,\"712\":2,\"746\":1,\"754\":3,\"768\":2,\"769\":1,\"774\":1,\"778\":5,\"780\":6,\"781\":1,\"782\":2,\"785\":2,\"788\":2,\"801\":1,\"825\":3,\"862\":2,\"863\":1,\"870\":1,\"911\":2,\"956\":1,\"964\":6,\"1036\":1,\"1042\":1,\"1047\":1,\"1051\":2,\"1053\":1,\"1055\":1,\"1058\":1,\"1060\":1,\"1061\":13,\"1108\":3,\"1109\":2}}],[\"alpha<\",{\"1\":{\"1129\":1}}],[\"alpha\",{\"1\":{\"1121\":2,\"1129\":3}}],[\"alpine\",{\"1\":{\"853\":1}}],[\"alt\",{\"1\":{\"1110\":1}}],[\"alt+shift+d\",{\"1\":{\"1036\":2}}],[\"alt+f12\",{\"1\":{\"965\":1}}],[\"alt+滚轮\",{\"1\":{\"254\":1}}],[\"almost\",{\"1\":{\"949\":1}}],[\"album\",{\"1\":{\"712\":1}}],[\"also\",{\"1\":{\"564\":1}}],[\"alittleaprotobuf\",{\"1\":{\"968\":1}}],[\"alignassignments\",{\"1\":{\"968\":1}}],[\"align\",{\"1\":{\"968\":1}}],[\"aliases\",{\"1\":{\"1061\":1}}],[\"alias参数指定的名称与容器之间的关系\",{\"1\":{\"843\":1}}],[\"alias\",{\"1\":{\"784\":1,\"1037\":1}}],[\"alive\",{\"1\":{\"543\":1}}],[\"aliyuncs\",{\"1\":{\"3\":1,\"859\":1,\"1069\":1,\"1070\":7}}],[\"aliyun\",{\"1\":{\"3\":1,\"138\":1,\"862\":1,\"1036\":1,\"1103\":1,\"1109\":1,\"1114\":1}}],[\"allsigned\",{\"1\":{\"1008\":1}}],[\"allkeys\",{\"1\":{\"209\":2,\"215\":5}}],[\"all参数段是最不具体的\",{\"1\":{\"165\":1}}],[\"all参数\",{\"0\":{\"160\":1},\"1\":{\"160\":1}}],[\"allowfactorybeaninit\",{\"1\":{\"443\":1}}],[\"allowsome\",{\"1\":{\"155\":3}}],[\"allowcredentials\",{\"1\":{\"155\":2}}],[\"allowanonymousattribute\",{\"1\":{\"403\":2}}],[\"allowanyheader\",{\"1\":{\"155\":2}}],[\"allowanymethod\",{\"1\":{\"155\":2}}],[\"allowanyorigin\",{\"1\":{\"155\":2}}],[\"allowall\",{\"1\":{\"155\":2}}],[\"allowedhosts\",{\"1\":{\"153\":1,\"391\":1,\"462\":1}}],[\"allowmultiple\",{\"1\":{\"42\":2,\"46\":2,\"400\":1,\"475\":1}}],[\"all=zh\",{\"1\":{\"125\":1}}],[\"all\",{\"1\":{\"42\":1,\"125\":1,\"204\":1,\"278\":1,\"368\":1,\"400\":1,\"402\":2,\"403\":3,\"405\":2,\"416\":2,\"447\":3,\"475\":1,\"564\":4,\"668\":1,\"914\":1,\"949\":1,\"1060\":1,\"1085\":1,\"1111\":1,\"1112\":1}}],[\"always\",{\"1\":{\"3\":1,\"36\":1,\"37\":1,\"796\":1,\"853\":1,\"854\":1,\"886\":1,\"914\":2,\"949\":1,\"1070\":1,\"1074\":2}}],[\"m81az\",{\"1\":{\"1110\":1}}],[\"mtime\",{\"1\":{\"1077\":5}}],[\"mcr\",{\"1\":{\"806\":1,\"834\":1,\"837\":1,\"859\":2,\"1070\":2}}],[\"m后面是本次提交的说明\",{\"1\":{\"754\":1}}],[\"m=home\",{\"1\":{\"733\":1,\"744\":1}}],[\"m就是映射关系\",{\"1\":{\"529\":1}}],[\"mv\",{\"0\":{\"1080\":1,\"1090\":1},\"1\":{\"1080\":4,\"1090\":2}}],[\"mvu\",{\"1\":{\"467\":1}}],[\"mvvm\",{\"1\":{\"467\":1}}],[\"mvcbuilder\",{\"1\":{\"576\":3}}],[\"mvc中使用根据不同的参数等返回不同的页面\",{\"1\":{\"405\":1}}],[\"mvc\",{\"1\":{\"404\":1,\"405\":1,\"410\":1,\"446\":3,\"468\":1,\"470\":1,\"474\":2,\"477\":3,\"486\":2,\"600\":2,\"629\":1,\"635\":2}}],[\"mvcfilter\",{\"1\":{\"399\":1}}],[\"mm\",{\"1\":{\"331\":2,\"421\":2,\"447\":1,\"453\":3,\"462\":2,\"478\":2,\"692\":2,\"694\":2}}],[\"multithreaded\",{\"1\":{\"985\":2}}],[\"multipartformdatacontent\",{\"1\":{\"617\":2}}],[\"multipart\",{\"0\":{\"568\":1},\"1\":{\"568\":1,\"616\":1,\"734\":3}}],[\"multiple\",{\"1\":{\"564\":1,\"1035\":4}}],[\"mumuy\",{\"1\":{\"243\":1}}],[\"must\",{\"1\":{\"167\":2,\"522\":1,\"564\":2}}],[\"mqxs\",{\"1\":{\"798\":1}}],[\"mq消息队列块满了\",{\"1\":{\"208\":1}}],[\"mq中消息失效\",{\"1\":{\"208\":1}}],[\"mq\",{\"1\":{\"208\":7}}],[\"mbunit\",{\"1\":{\"599\":1}}],[\"mb\",{\"1\":{\"204\":1,\"205\":1,\"564\":8,\"863\":3,\"865\":1,\"866\":9,\"867\":1,\"868\":1,\"870\":1,\"871\":3,\"1012\":5}}],[\"most\",{\"1\":{\"1036\":1}}],[\"mostly\",{\"1\":{\"777\":1}}],[\"molunerfinn\",{\"1\":{\"951\":1}}],[\"mounts\",{\"1\":{\"863\":1}}],[\"mousebuttons\",{\"1\":{\"691\":1}}],[\"mouseeventargs\",{\"1\":{\"691\":1}}],[\"mouseclick\",{\"1\":{\"691\":1}}],[\"moq4\",{\"1\":{\"591\":1}}],[\"moq\",{\"1\":{\"591\":1}}],[\"moq以及dotnet相关知识\",{\"1\":{\"589\":1}}],[\"mock服务\",{\"1\":{\"720\":1}}],[\"mockimapper\",{\"1\":{\"591\":5}}],[\"mock<imapper>\",{\"1\":{\"591\":2}}],[\"mock<iunitofwork>\",{\"1\":{\"591\":2}}],[\"mock<ibaserepository<user>>\",{\"1\":{\"591\":4}}],[\"mockunitwork\",{\"1\":{\"591\":5}}],[\"mockrepository\",{\"1\":{\"591\":10}}],[\"mock\",{\"1\":{\"591\":2,\"714\":1,\"736\":1}}],[\"movaxterm基本使用\",{\"0\":{\"1106\":1}}],[\"movaxterm\",{\"1\":{\"1105\":1}}],[\"move\",{\"1\":{\"1080\":1}}],[\"movenext\",{\"1\":{\"674\":2,\"676\":1,\"677\":1,\"680\":1,\"681\":1}}],[\"movechunk\",{\"1\":{\"205\":1}}],[\"movies\",{\"1\":{\"526\":1}}],[\"movie\",{\"1\":{\"503\":2,\"526\":3,\"528\":7}}],[\"mon\",{\"1\":{\"870\":1}}],[\"money\",{\"1\":{\"501\":2}}],[\"mongo\",{\"1\":{\"217\":2,\"858\":4}}],[\"mongodb支持存储过程\",{\"1\":{\"205\":1}}],[\"mongodb支持存储过程吗\",{\"1\":{\"205\":1}}],[\"mongodb为何使用gridfs来存储文件\",{\"1\":{\"205\":1}}],[\"mongodb会等待它的响应\",{\"1\":{\"205\":1}}],[\"mongodb中包括了一个可以显示数据库中每个操作性能特点的数据库分析器\",{\"1\":{\"205\":1}}],[\"mongodb成为最好nosql数据库的原因是什么\",{\"1\":{\"205\":1}}],[\"mongodb面试题\",{\"0\":{\"205\":1}}],[\"mongodb\",{\"0\":{\"858\":1},\"1\":{\"152\":2,\"205\":1,\"843\":2,\"1079\":1}}],[\"more\",{\"1\":{\"474\":1,\"475\":1,\"564\":3,\"574\":1,\"576\":1,\"1036\":3}}],[\"moreexcel是一个支持多人同时编辑同一个文件的excel多功能插件\",{\"1\":{\"246\":1}}],[\"moreexcel\",{\"1\":{\"246\":1}}],[\"modification\",{\"1\":{\"1077\":1}}],[\"modified\",{\"1\":{\"768\":1}}],[\"modifytime\",{\"1\":{\"501\":3}}],[\"modifyer\",{\"1\":{\"501\":3}}],[\"mode模式的时候\",{\"1\":{\"564\":4}}],[\"model类有点长就不粘贴了\",{\"1\":{\"694\":1}}],[\"modelbuilder\",{\"1\":{\"502\":7}}],[\"modelbinderproviders\",{\"1\":{\"472\":1}}],[\"modelbinderprovidercontext\",{\"1\":{\"472\":1}}],[\"modelbindingresult\",{\"1\":{\"472\":1}}],[\"modelbindingcontext\",{\"1\":{\"472\":1}}],[\"modeling\",{\"1\":{\"501\":2}}],[\"model创建\",{\"1\":{\"501\":1}}],[\"modelmetadata\",{\"1\":{\"497\":1}}],[\"modelmetadataprovider\",{\"1\":{\"404\":5,\"405\":5}}],[\"modelactionfiter\",{\"1\":{\"477\":1}}],[\"modelverify\",{\"1\":{\"472\":1}}],[\"modelvalidationfilter\",{\"1\":{\"418\":3,\"421\":3}}],[\"modeltype\",{\"1\":{\"472\":1}}],[\"models\",{\"1\":{\"468\":1,\"470\":1,\"474\":2,\"477\":2}}],[\"modelstateinvalidfilter\",{\"1\":{\"477\":1}}],[\"modelstate\",{\"0\":{\"476\":1},\"1\":{\"404\":1,\"405\":1,\"418\":2,\"476\":2,\"477\":2,\"630\":1}}],[\"model\",{\"0\":{\"1157\":1},\"1\":{\"402\":1,\"468\":1,\"470\":1,\"477\":2,\"501\":2,\"591\":2}}],[\"module的作用是什么\",{\"1\":{\"207\":1}}],[\"modules\",{\"1\":{\"93\":1,\"309\":1}}],[\"module\",{\"0\":{\"118\":1},\"1\":{\"88\":1,\"91\":1,\"98\":1,\"118\":5,\"210\":1,\"400\":1}}],[\"mobatek\",{\"1\":{\"1106\":1}}],[\"moba\",{\"1\":{\"281\":1}}],[\"mobaxterm\",{\"0\":{\"281\":1},\"1\":{\"1014\":1,\"1106\":1}}],[\"mobile\",{\"1\":{\"247\":1,\"506\":1,\"507\":1,\"746\":3}}],[\"mozilla公共许可证\",{\"1\":{\"253\":1}}],[\"mozilla\",{\"1\":{\"250\":2}}],[\"momery\",{\"1\":{\"204\":1}}],[\"mr\",{\"1\":{\"121\":1}}],[\"msbuild\",{\"1\":{\"1037\":1}}],[\"msu\",{\"1\":{\"1012\":7}}],[\"mssql\",{\"0\":{\"859\":1},\"1\":{\"859\":3}}],[\"mstest\",{\"1\":{\"599\":1}}],[\"msdn\",{\"1\":{\"599\":1}}],[\"msdn介绍\",{\"1\":{\"596\":1}}],[\"ms\",{\"0\":{\"596\":1},\"1\":{\"574\":1,\"576\":1,\"595\":1,\"597\":1,\"598\":2,\"655\":1,\"951\":1,\"1036\":4}}],[\"mscorlib\",{\"1\":{\"118\":1}}],[\"msgservice\",{\"1\":{\"575\":5,\"576\":5}}],[\"msgcontroller\",{\"1\":{\"575\":3}}],[\"msg\",{\"1\":{\"98\":1,\"777\":3}}],[\"mediacreationtool1809\",{\"1\":{\"1031\":1}}],[\"medium\",{\"1\":{\"874\":1}}],[\"means\",{\"1\":{\"949\":1}}],[\"mesos\",{\"1\":{\"928\":1}}],[\"mess\",{\"1\":{\"691\":4}}],[\"messagehandler\",{\"1\":{\"711\":1}}],[\"messagehandler<defaultmpmessagecontext>\",{\"1\":{\"711\":1}}],[\"messageboxicon\",{\"1\":{\"691\":3}}],[\"messageboxbuttons\",{\"1\":{\"691\":5}}],[\"messagebox\",{\"1\":{\"691\":3}}],[\"message\",{\"1\":{\"163\":1,\"167\":4,\"208\":9,\"364\":1,\"401\":4,\"404\":6,\"413\":5,\"416\":2,\"447\":1,\"453\":3,\"462\":1,\"477\":6,\"501\":2,\"574\":2,\"577\":1,\"669\":2,\"671\":2,\"674\":3,\"676\":3,\"679\":2,\"693\":1,\"694\":1,\"746\":3,\"952\":1}}],[\"meger\",{\"1\":{\"798\":1}}],[\"me\",{\"1\":{\"243\":1}}],[\"metrices\",{\"1\":{\"968\":1}}],[\"metric\",{\"1\":{\"925\":1}}],[\"metrics\",{\"1\":{\"914\":2}}],[\"meter\",{\"1\":{\"739\":1}}],[\"metadata\",{\"1\":{\"156\":2,\"472\":1,\"923\":1,\"930\":1,\"931\":2,\"941\":1,\"949\":1}}],[\"methodrequest\",{\"1\":{\"323\":1}}],[\"methodimploptions\",{\"1\":{\"167\":1}}],[\"methodimpl\",{\"1\":{\"167\":1}}],[\"methodinfo3\",{\"1\":{\"99\":2}}],[\"methodinfo2\",{\"1\":{\"99\":1}}],[\"methodinfo1\",{\"1\":{\"99\":2}}],[\"methodinfo\",{\"0\":{\"103\":1},\"1\":{\"88\":2,\"91\":1,\"97\":2,\"98\":1,\"99\":4,\"103\":1,\"104\":14,\"105\":14,\"106\":15,\"203\":1}}],[\"methods\",{\"1\":{\"99\":2}}],[\"method\",{\"1\":{\"98\":1,\"203\":1,\"400\":2,\"402\":2,\"418\":2,\"421\":3,\"424\":4,\"427\":1,\"440\":3,\"441\":1,\"442\":9,\"472\":1,\"601\":1,\"985\":2}}],[\"memo\",{\"1\":{\"865\":1,\"866\":1,\"867\":1,\"868\":1,\"870\":1}}],[\"memorystream\",{\"1\":{\"691\":1}}],[\"memorycacheoptions\",{\"1\":{\"375\":1,\"376\":1,\"427\":1}}],[\"memorycacheentryoptions\",{\"1\":{\"372\":1,\"373\":4,\"375\":2,\"376\":2}}],[\"memorycache\",{\"0\":{\"370\":1},\"1\":{\"375\":2,\"376\":6,\"377\":1,\"427\":2}}],[\"memory增长趋势\",{\"1\":{\"204\":1}}],[\"memory\",{\"1\":{\"152\":2,\"204\":1,\"371\":1,\"382\":1,\"914\":3}}],[\"memery\",{\"1\":{\"204\":1}}],[\"member\",{\"1\":{\"1061\":3}}],[\"memberdata\",{\"1\":{\"599\":1}}],[\"membername\",{\"1\":{\"215\":3}}],[\"members\",{\"1\":{\"99\":2}}],[\"membertype\",{\"1\":{\"98\":1}}],[\"memberinfo2\",{\"1\":{\"99\":2}}],[\"memberinfo1\",{\"1\":{\"99\":2}}],[\"memberinfos\",{\"1\":{\"98\":2}}],[\"memberinfo\",{\"1\":{\"88\":1,\"97\":2,\"98\":1,\"99\":3,\"1061\":1}}],[\"merge加shrink压缩操作\",{\"1\":{\"204\":1}}],[\"merge\",{\"1\":{\"26\":2,\"207\":2,\"759\":1,\"777\":1}}],[\"midnigth\",{\"1\":{\"968\":2}}],[\"middleclickscroll\",{\"1\":{\"968\":1}}],[\"middle\",{\"1\":{\"968\":1}}],[\"middleware\",{\"0\":{\"1144\":1},\"1\":{\"157\":1,\"167\":5,\"710\":1}}],[\"michael\",{\"1\":{\"873\":1}}],[\"microservies\",{\"1\":{\"852\":1}}],[\"microsoft\",{\"1\":{\"46\":1,\"125\":1,\"135\":2,\"136\":1,\"138\":1,\"141\":1,\"148\":1,\"153\":2,\"167\":1,\"304\":1,\"355\":1,\"364\":2,\"366\":1,\"371\":2,\"375\":2,\"378\":1,\"381\":1,\"382\":2,\"386\":1,\"387\":1,\"391\":2,\"404\":1,\"405\":1,\"410\":1,\"446\":13,\"447\":4,\"454\":3,\"455\":2,\"462\":1,\"463\":1,\"467\":2,\"468\":1,\"470\":1,\"474\":2,\"477\":4,\"484\":1,\"486\":2,\"501\":4,\"514\":1,\"523\":1,\"524\":2,\"528\":1,\"537\":4,\"549\":1,\"563\":1,\"573\":1,\"577\":1,\"583\":2,\"585\":3,\"597\":2,\"599\":2,\"600\":3,\"629\":1,\"635\":2,\"656\":1,\"660\":1,\"666\":1,\"692\":1,\"806\":1,\"834\":1,\"837\":1,\"838\":1,\"859\":2,\"862\":3,\"956\":1,\"957\":1,\"964\":7,\"968\":1,\"970\":1,\"973\":1,\"985\":1,\"986\":1,\"1012\":6,\"1024\":1,\"1031\":2,\"1036\":1,\"1037\":1,\"1070\":2,\"1108\":1,\"1109\":2,\"1122\":1,\"1123\":1,\"1126\":5,\"1131\":1,\"1132\":1}}],[\"mimetype\",{\"1\":{\"616\":1}}],[\"migrate\",{\"1\":{\"501\":1,\"502\":1}}],[\"migrationsassembly\",{\"1\":{\"501\":3}}],[\"migration\",{\"1\":{\"283\":1,\"501\":1}}],[\"mit\",{\"0\":{\"253\":1},\"1\":{\"247\":1,\"253\":4}}],[\"min=1\",{\"1\":{\"914\":1}}],[\"min=10\",{\"1\":{\"914\":1}}],[\"minprocs=200\",{\"1\":{\"564\":1}}],[\"minfds=1024\",{\"1\":{\"564\":1}}],[\"minimized\",{\"1\":{\"691\":1}}],[\"minimal\",{\"1\":{\"537\":1,\"1110\":1}}],[\"minimumlength\",{\"1\":{\"474\":1,\"475\":1}}],[\"minimumlevel\",{\"1\":{\"459\":1,\"462\":1,\"463\":2}}],[\"minimum\",{\"1\":{\"204\":2}}],[\"minimumsecondsbetweenfailurenotifications\",{\"1\":{\"153\":1}}],[\"minskiter\",{\"1\":{\"477\":1}}],[\"minlength\",{\"1\":{\"474\":2,\"475\":2}}],[\"minlevel=\",{\"1\":{\"453\":2}}],[\"mindustry\",{\"1\":{\"243\":1}}],[\"minganprovider\",{\"1\":{\"215\":4}}],[\"minganreplacevalidator\",{\"1\":{\"215\":1}}],[\"minganreplace\",{\"1\":{\"215\":3}}],[\"minganreplaceinput\",{\"1\":{\"215\":1}}],[\"mingancheckvalidator\",{\"1\":{\"215\":1}}],[\"mingancheck\",{\"1\":{\"215\":3}}],[\"mingancheckinput\",{\"1\":{\"215\":1}}],[\"min\",{\"1\":{\"125\":1,\"204\":1,\"343\":1}}],[\"mixed是默认参数\",{\"1\":{\"29\":1}}],[\"mixed\",{\"1\":{\"29\":1,\"968\":1}}],[\"mirror\",{\"1\":{\"3\":1}}],[\"mirrors\",{\"1\":{\"3\":3,\"862\":2,\"892\":1,\"1103\":1,\"1109\":1,\"1114\":2}}],[\"m参数后面跟上提交信息\",{\"1\":{\"23\":1}}],[\"mkdir\",{\"0\":{\"1075\":1,\"1089\":1},\"1\":{\"22\":1,\"546\":1,\"547\":1,\"752\":1,\"777\":1,\"782\":1,\"837\":1,\"862\":1,\"863\":1,\"882\":1,\"1075\":5,\"1080\":1,\"1089\":1,\"1135\":1}}],[\"magnet\",{\"1\":{\"1034\":4}}],[\"magic\",{\"1\":{\"206\":1}}],[\"mallh5web\",{\"1\":{\"923\":1}}],[\"mallh5\",{\"1\":{\"923\":1}}],[\"mac下测试\",{\"1\":{\"871\":1}}],[\"mac\",{\"1\":{\"839\":2,\"868\":1}}],[\"macvlan\",{\"1\":{\"839\":1,\"928\":1}}],[\"macvlan模式\",{\"1\":{\"839\":1}}],[\"macos\",{\"1\":{\"243\":1,\"467\":1}}],[\"major\",{\"1\":{\"824\":1}}],[\"may\",{\"1\":{\"564\":1}}],[\"maya是一款体积小巧\",{\"1\":{\"274\":1}}],[\"maya\",{\"0\":{\"274\":1},\"1\":{\"274\":1}}],[\"mauiappblazor<\",{\"1\":{\"1037\":1}}],[\"mauidemo\",{\"1\":{\"467\":1}}],[\"mauideveloperorg\",{\"1\":{\"467\":1}}],[\"maui\",{\"0\":{\"1156\":1},\"1\":{\"467\":6,\"1037\":1}}],[\"manageddesktop\",{\"1\":{\"964\":3}}],[\"management\",{\"1\":{\"853\":1}}],[\"manager命令\",{\"1\":{\"1109\":1}}],[\"manager是一款非常好用的多线程下载管理器\",{\"1\":{\"308\":1}}],[\"manager\",{\"0\":{\"308\":1},\"1\":{\"3\":1,\"321\":2,\"862\":2,\"1109\":1}}],[\"man\",{\"1\":{\"591\":2,\"1074\":1,\"1075\":1,\"1076\":1}}],[\"manualscope\",{\"1\":{\"353\":2}}],[\"manual\",{\"1\":{\"288\":1}}],[\"mazebattles\",{\"1\":{\"243\":2}}],[\"march\",{\"1\":{\"1035\":12}}],[\"margin\",{\"1\":{\"968\":2}}],[\"mar\",{\"1\":{\"870\":1}}],[\"mark\",{\"1\":{\"1063\":1,\"1064\":1,\"1065\":1}}],[\"marketplace\",{\"1\":{\"967\":2,\"968\":18}}],[\"markup\",{\"1\":{\"328\":1}}],[\"markdown等文档格式的导出\",{\"1\":{\"1009\":1}}],[\"markdown\",{\"0\":{\"303\":1},\"1\":{\"304\":4,\"968\":1}}],[\"marblexu\",{\"1\":{\"243\":1}}],[\"martin\",{\"1\":{\"210\":1,\"436\":1}}],[\"mail\",{\"1\":{\"217\":1}}],[\"maintainer\",{\"0\":{\"821\":1},\"1\":{\"821\":1,\"837\":1}}],[\"maintail\",{\"1\":{\"564\":1}}],[\"mainform\",{\"1\":{\"691\":5}}],[\"main函数里面进行配置的\",{\"1\":{\"203\":1}}],[\"main\",{\"1\":{\"21\":2,\"68\":1,\"83\":1,\"94\":4,\"99\":1,\"102\":1,\"106\":2,\"109\":1,\"112\":1,\"115\":2,\"243\":6,\"375\":1,\"376\":1,\"381\":1,\"386\":1,\"399\":1,\"442\":2,\"454\":2,\"462\":1,\"463\":1,\"501\":1,\"564\":1,\"660\":4,\"661\":1,\"784\":1,\"796\":1,\"852\":1,\"871\":2,\"985\":1,\"1070\":2}}],[\"maven\",{\"1\":{\"183\":1}}],[\"makes\",{\"1\":{\"1036\":2}}],[\"make\",{\"1\":{\"167\":1,\"564\":1,\"865\":4,\"867\":4,\"873\":1,\"874\":1,\"981\":1,\"1036\":2,\"1075\":1}}],[\"makegenericmethod\",{\"1\":{\"106\":3}}],[\"makegenerictype\",{\"1\":{\"97\":1,\"101\":1,\"106\":2}}],[\"matadata\",{\"1\":{\"573\":1,\"574\":2,\"576\":1}}],[\"matchmargin\",{\"1\":{\"968\":1}}],[\"matching\",{\"1\":{\"574\":1}}],[\"matches\",{\"1\":{\"167\":1,\"739\":1}}],[\"matchertask\",{\"1\":{\"167\":6}}],[\"matcher\",{\"1\":{\"165\":1,\"167\":5,\"168\":1}}],[\"matcherfactory\",{\"1\":{\"165\":1,\"167\":9}}],[\"matchsuccess\",{\"1\":{\"167\":1}}],[\"matchskipped\",{\"1\":{\"167\":1}}],[\"matchfailure\",{\"1\":{\"167\":1}}],[\"matchasync\",{\"1\":{\"167\":3}}],[\"matchtask\",{\"1\":{\"167\":5}}],[\"match\",{\"1\":{\"163\":1,\"164\":1,\"968\":1,\"1061\":1}}],[\"math\",{\"1\":{\"125\":1}}],[\"mapgrpcservice<userinfogrpcservice>\",{\"1\":{\"672\":1}}],[\"mapgrpcservice<payservice>\",{\"1\":{\"669\":1}}],[\"mapget\",{\"1\":{\"156\":1,\"157\":1,\"158\":2,\"163\":1}}],[\"map<userdto>\",{\"1\":{\"630\":1}}],[\"map<user>\",{\"1\":{\"591\":2}}],[\"maptoapiversion\",{\"1\":{\"489\":1,\"636\":1,\"640\":1,\"646\":1,\"652\":1}}],[\"map\",{\"1\":{\"167\":1,\"630\":1,\"1061\":3}}],[\"mapcontrollerroute\",{\"1\":{\"163\":1}}],[\"mapcontrollers\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"158\":1,\"482\":1,\"495\":1,\"499\":1,\"669\":1,\"672\":1}}],[\"mapxxx\",{\"1\":{\"158\":1}}],[\"mapdelete\",{\"1\":{\"158\":2}}],[\"mapping\",{\"1\":{\"1048\":1,\"1061\":2}}],[\"mapper\",{\"1\":{\"591\":4,\"630\":3,\"1047\":4}}],[\"mapput\",{\"1\":{\"158\":2}}],[\"mappost\",{\"1\":{\"158\":2}}],[\"maphealthchecksui\",{\"1\":{\"153\":1}}],[\"maphealthchecks\",{\"1\":{\"150\":1,\"151\":2,\"153\":2,\"158\":2}}],[\"masuit\",{\"1\":{\"135\":1,\"970\":1}}],[\"master进入某一个目录\",{\"1\":{\"1070\":1}}],[\"master进程\",{\"1\":{\"207\":1}}],[\"masterconnectionstr\",{\"1\":{\"1047\":5}}],[\"masterconnectionstring\",{\"1\":{\"1047\":5}}],[\"masterchanges\",{\"1\":{\"768\":1}}],[\"master节点设置尽量不可调度污点\",{\"1\":{\"914\":1}}],[\"master节点设置不可调度污点\",{\"1\":{\"914\":1}}],[\"master=prefernoschedule\",{\"1\":{\"914\":1}}],[\"master=\",{\"1\":{\"914\":1}}],[\"masternothing\",{\"1\":{\"769\":1}}],[\"master分支是git默认创建的分支\",{\"1\":{\"25\":1}}],[\"master分支\",{\"0\":{\"25\":1},\"1\":{\"537\":1}}],[\"master\",{\"1\":{\"22\":2,\"23\":1,\"26\":2,\"31\":1,\"204\":10,\"661\":1,\"761\":1,\"774\":1,\"777\":1,\"781\":3,\"784\":5,\"785\":2,\"786\":2,\"788\":10,\"801\":1,\"874\":1,\"1047\":1,\"1070\":3,\"1121\":1}}],[\"max=10\",{\"1\":{\"914\":1}}],[\"max=15\",{\"1\":{\"914\":1}}],[\"maxrecordcount\",{\"1\":{\"711\":4}}],[\"maxreceivemessagesize\",{\"1\":{\"669\":1,\"670\":1,\"672\":1}}],[\"maximized\",{\"1\":{\"691\":1}}],[\"maxsendmessagesize\",{\"1\":{\"669\":1,\"670\":1,\"672\":1}}],[\"maxage\",{\"1\":{\"580\":1}}],[\"maxbytes\",{\"1\":{\"564\":4}}],[\"maxbytes=1mb\",{\"1\":{\"564\":6}}],[\"maxbytes=50mb\",{\"1\":{\"564\":1}}],[\"maxlength\",{\"1\":{\"474\":1,\"475\":1}}],[\"maxvalue\",{\"1\":{\"459\":1}}],[\"maxmemory\",{\"1\":{\"209\":1}}],[\"max\",{\"1\":{\"65\":1,\"343\":1,\"564\":4}}],[\"m\",{\"1\":{\"21\":2,\"22\":4,\"23\":2,\"204\":1,\"243\":1,\"447\":1,\"503\":2,\"528\":4,\"754\":1,\"781\":1,\"782\":2,\"785\":1,\"788\":1,\"801\":1,\"811\":1,\"846\":2,\"863\":1,\"865\":1,\"871\":1,\"899\":2,\"949\":2,\"965\":1,\"981\":1,\"1041\":32,\"1043\":3,\"1044\":4,\"1075\":2,\"1077\":1,\"1080\":1,\"1110\":1}}],[\"md5\",{\"1\":{\"779\":1,\"1034\":4}}],[\"md的内容\",{\"1\":{\"339\":1}}],[\"md的内容即可\",{\"1\":{\"339\":1}}],[\"md文档和生成的\",{\"1\":{\"22\":1}}],[\"md文档\",{\"1\":{\"22\":1}}],[\"md文件的版本的上一个版本\",{\"1\":{\"32\":1}}],[\"md文件\",{\"1\":{\"21\":1,\"22\":1}}],[\"md中写入内容\",{\"1\":{\"21\":1}}],[\"md\",{\"1\":{\"21\":2,\"22\":5,\"23\":2,\"32\":1,\"304\":1,\"661\":1,\"788\":1,\"801\":1}}],[\"mpsetting\",{\"1\":{\"711\":1}}],[\"mpl\",{\"0\":{\"250\":1},\"1\":{\"250\":4,\"253\":1}}],[\"mp\",{\"1\":{\"8\":1,\"125\":1,\"134\":1,\"214\":1,\"241\":1,\"242\":1,\"529\":1,\"549\":1,\"577\":1,\"666\":2,\"681\":1,\"685\":1,\"710\":2,\"711\":1,\"712\":2,\"969\":1,\"1066\":1,\"1075\":1,\"1109\":1,\"1120\":1}}],[\"myexample\",{\"1\":{\"1069\":1,\"1070\":6}}],[\"myexceptionfilter\",{\"1\":{\"410\":2}}],[\"mynginx\",{\"1\":{\"842\":1,\"949\":2}}],[\"mynginx3\",{\"1\":{\"842\":2}}],[\"mynginx容器\",{\"1\":{\"842\":1}}],[\"mynginx容器内能ping通mynginx2\",{\"1\":{\"840\":1}}],[\"myport=8080\",{\"1\":{\"837\":1}}],[\"myimage就是镜像名字\",{\"1\":{\"835\":1}}],[\"myimage\",{\"1\":{\"835\":1}}],[\"myisam\",{\"1\":{\"206\":1}}],[\"myisam和innodb的区别\",{\"1\":{\"206\":1}}],[\"myapp\",{\"1\":{\"834\":2,\"837\":1,\"1037\":3}}],[\"myvol\",{\"1\":{\"827\":1}}],[\"myvalue\",{\"1\":{\"372\":1,\"373\":1,\"376\":1}}],[\"myrabbit\",{\"1\":{\"853\":1}}],[\"myredis\",{\"1\":{\"852\":1}}],[\"myredisconfigtest\",{\"1\":{\"817\":1}}],[\"myrouteconstraint\",{\"1\":{\"164\":2}}],[\"mycentos\",{\"1\":{\"812\":1}}],[\"mycache\",{\"1\":{\"375\":3}}],[\"mygogs\",{\"1\":{\"796\":2}}],[\"myblog\",{\"1\":{\"693\":1}}],[\"mybatis\",{\"1\":{\"253\":1}}],[\"myfirstpdf\",{\"1\":{\"688\":1}}],[\"mywebapi\",{\"1\":{\"600\":1}}],[\"mylog\",{\"1\":{\"447\":2}}],[\"myqueue\",{\"1\":{\"391\":1,\"395\":1}}],[\"mydockerdemo\",{\"1\":{\"806\":2}}],[\"mydata\",{\"1\":{\"381\":1,\"382\":1,\"386\":1,\"387\":1}}],[\"mydep\",{\"1\":{\"344\":2}}],[\"mydelgate\",{\"1\":{\"68\":3}}],[\"mydelegate\",{\"1\":{\"68\":2,\"83\":2}}],[\"mykey缓存被清除了\",{\"1\":{\"373\":2}}],[\"mykey的值\",{\"1\":{\"373\":2}}],[\"mykey\",{\"1\":{\"372\":1,\"373\":3,\"376\":3}}],[\"myhttpcontext\",{\"1\":{\"367\":4,\"368\":2}}],[\"mysqlconnection\",{\"1\":{\"1047\":1}}],[\"mysqlparameter\",{\"1\":{\"512\":2,\"528\":4}}],[\"mysql数据库和windows日志中\",{\"1\":{\"447\":1}}],[\"mysql数据库作发布系统的存储\",{\"1\":{\"206\":1}}],[\"mysql库主从读写分离\",{\"1\":{\"206\":1}}],[\"mysql面试题\",{\"0\":{\"206\":1}}],[\"mysql和mongodb有许多基本差别包括数据的表示\",{\"1\":{\"205\":1}}],[\"mysql和mongodb两者都是免费开源的数据库\",{\"1\":{\"205\":1}}],[\"mysql与mongodb之间最基本的差别是什么\",{\"1\":{\"205\":1}}],[\"mysqlhealth\",{\"1\":{\"151\":2,\"153\":3}}],[\"mysqlhealthcheck\",{\"1\":{\"151\":1}}],[\"mysql健康检查\",{\"1\":{\"151\":1}}],[\"mysql\",{\"0\":{\"857\":1},\"1\":{\"132\":1,\"134\":4,\"151\":3,\"152\":2,\"153\":2,\"206\":1,\"209\":1,\"501\":4,\"502\":1,\"559\":1,\"661\":2,\"852\":2,\"857\":3,\"1009\":1,\"1048\":1}}],[\"my\",{\"1\":{\"8\":1,\"164\":3,\"368\":2,\"537\":1,\"561\":1,\"694\":1,\"843\":2,\"943\":7,\"1064\":1,\"1070\":5,\"1110\":1}}],[\"m`\",{\"1\":{\"3\":1}}],[\"rc\",{\"1\":{\"1121\":2,\"1129\":2}}],[\"rc4df\",{\"1\":{\"973\":2}}],[\"r的参数\",{\"1\":{\"1082\":1,\"1083\":1}}],[\"rd\",{\"1\":{\"988\":3}}],[\"rider\",{\"1\":{\"955\":1,\"1014\":1}}],[\"rkt\",{\"1\":{\"928\":1}}],[\"r代表进行递归\",{\"1\":{\"908\":1}}],[\"r代表的是关系\",{\"1\":{\"529\":1}}],[\"rhel\",{\"1\":{\"862\":1}}],[\"rr\",{\"1\":{\"800\":2}}],[\"rwz\",{\"1\":{\"1084\":2}}],[\"rwxr\",{\"1\":{\"1085\":1}}],[\"rwxrwx\",{\"1\":{\"1084\":1}}],[\"rwx\",{\"1\":{\"914\":1,\"1081\":2,\"1084\":4}}],[\"rwo\",{\"1\":{\"914\":1}}],[\"rw\",{\"1\":{\"779\":1,\"816\":1,\"1081\":1}}],[\"rf\",{\"1\":{\"777\":1,\"862\":2,\"865\":1,\"867\":1,\"914\":1,\"1078\":1}}],[\"rfc7231\",{\"1\":{\"474\":1,\"475\":1}}],[\"r2wyw\",{\"1\":{\"973\":1}}],[\"r2\",{\"1\":{\"527\":2,\"559\":1,\"560\":2,\"1012\":5}}],[\"ruby\",{\"1\":{\"871\":1}}],[\"rules\",{\"1\":{\"477\":1,\"801\":1,\"931\":2,\"956\":1}}],[\"rules>\",{\"1\":{\"453\":1}}],[\"rulename=\",{\"1\":{\"453\":1}}],[\"rustdesk远程控制软件内置文件传输和tcp隧道功能\",{\"1\":{\"288\":1}}],[\"rustdesk是一款优秀的免费开源的远程控制软件\",{\"1\":{\"288\":1}}],[\"rustdesk\",{\"0\":{\"288\":1},\"1\":{\"288\":1}}],[\"runs\",{\"1\":{\"1070\":1}}],[\"run2948\",{\"1\":{\"1067\":1}}],[\"run启动容器时指定了参数\",{\"1\":{\"838\":1}}],[\"run之后的参数替换掉\",{\"1\":{\"838\":1}}],[\"run命令中\",{\"1\":{\"815\":1}}],[\"run指令根据镜像启动容器了\",{\"1\":{\"806\":1}}],[\"run指令\",{\"1\":{\"805\":1}}],[\"runinstaller\",{\"1\":{\"692\":1}}],[\"runasync\",{\"1\":{\"501\":1}}],[\"runningsmallguo\",{\"1\":{\"656\":1}}],[\"running\",{\"1\":{\"442\":1,\"564\":1,\"588\":1,\"876\":1,\"1070\":1}}],[\"runner的界面\",{\"1\":{\"737\":1}}],[\"runnertimetest2\",{\"1\":{\"588\":1}}],[\"runnertimetest\",{\"1\":{\"588\":2}}],[\"runner访问docker\",{\"1\":{\"8\":1}}],[\"runner用户\",{\"1\":{\"8\":1}}],[\"runner用来部署服务\",{\"1\":{\"3\":1}}],[\"runners\",{\"1\":{\"6\":1}}],[\"runner\",{\"0\":{\"4\":1},\"1\":{\"4\":5,\"6\":2,\"8\":3,\"585\":2}}],[\"runoob\",{\"1\":{\"329\":1,\"850\":1}}],[\"runtimes\",{\"1\":{\"538\":1}}],[\"runtime设置\",{\"1\":{\"206\":1}}],[\"runtimefieldhandle\",{\"1\":{\"203\":1}}],[\"runtimemethodhandle\",{\"1\":{\"203\":1}}],[\"runtimetypehandle\",{\"1\":{\"203\":1}}],[\"runtime\",{\"1\":{\"44\":1,\"370\":1,\"373\":1,\"577\":1,\"914\":1}}],[\"run的时候设置了\",{\"1\":{\"40\":1}}],[\"run\",{\"0\":{\"822\":1},\"1\":{\"8\":2,\"37\":3,\"125\":2,\"211\":2,\"217\":2,\"218\":2,\"380\":1,\"385\":1,\"454\":1,\"462\":1,\"463\":1,\"554\":1,\"564\":4,\"660\":1,\"661\":2,\"737\":1,\"791\":2,\"806\":1,\"811\":2,\"812\":1,\"815\":5,\"816\":2,\"817\":1,\"822\":4,\"837\":1,\"839\":1,\"842\":1,\"852\":1,\"853\":5,\"854\":2,\"855\":2,\"856\":1,\"857\":1,\"858\":1,\"859\":2,\"860\":1,\"861\":1,\"862\":1,\"863\":3,\"865\":10,\"867\":3,\"868\":1,\"870\":1,\"871\":3,\"876\":1,\"885\":6,\"886\":2,\"899\":1,\"914\":2,\"1070\":13,\"1117\":2}}],[\"rgb颜色的8位\",{\"1\":{\"255\":1}}],[\"r\",{\"1\":{\"243\":1,\"691\":4,\"711\":2,\"779\":5,\"799\":2,\"801\":1,\"862\":1,\"882\":1,\"908\":3,\"965\":1,\"1031\":1,\"1074\":1,\"1078\":1,\"1079\":2,\"1081\":3,\"1082\":2,\"1083\":3,\"1084\":3,\"1096\":1,\"1109\":2,\"1111\":2,\"1113\":1}}],[\"rpcinterface\",{\"1\":{\"564\":5}}],[\"rpc\",{\"1\":{\"210\":2,\"535\":1,\"564\":1,\"663\":1,\"667\":12,\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"rpush\",{\"1\":{\"209\":1}}],[\"rpms\",{\"1\":{\"541\":1}}],[\"rpm\",{\"1\":{\"4\":1,\"537\":2,\"541\":4,\"905\":1,\"1109\":2}}],[\"rainbowbraces\",{\"1\":{\"968\":1}}],[\"rainbow\",{\"1\":{\"968\":1}}],[\"raise\",{\"1\":{\"949\":1}}],[\"raises\",{\"1\":{\"949\":1}}],[\"rails\",{\"1\":{\"3\":12,\"36\":12,\"38\":3,\"40\":1}}],[\"rack\",{\"1\":{\"852\":1}}],[\"razor\",{\"1\":{\"446\":4,\"689\":1,\"693\":1}}],[\"raw=\",{\"1\":{\"568\":1}}],[\"rawuser\",{\"1\":{\"363\":3}}],[\"raw\",{\"1\":{\"333\":1,\"514\":1,\"568\":1,\"734\":1,\"735\":2,\"738\":1,\"914\":1}}],[\"random\",{\"1\":{\"209\":2,\"1047\":4}}],[\"range\",{\"1\":{\"205\":1,\"600\":1}}],[\"rabbit\",{\"1\":{\"210\":1}}],[\"rabbitmqconfig\",{\"1\":{\"395\":1,\"396\":5,\"397\":1,\"398\":3}}],[\"rabbitmq有什么优缺点\",{\"1\":{\"208\":1}}],[\"rabbitmq阵亡了\",{\"1\":{\"208\":1}}],[\"rabbitmq就会发送一个ack给生产者\",{\"1\":{\"208\":1}}],[\"rabbitmq提供transaction和confirm模式来确保生产者不丢消息\",{\"1\":{\"208\":1}}],[\"rabbitmq面试题\",{\"0\":{\"208\":1}}],[\"rabbitmq\",{\"1\":{\"152\":2,\"208\":23,\"209\":1,\"210\":2,\"391\":1,\"392\":4,\"393\":1,\"395\":3,\"396\":3,\"397\":1,\"853\":4}}],[\"rabbtimq\",{\"1\":{\"208\":1}}],[\"ram\",{\"1\":{\"208\":1}}],[\"ravendb\",{\"1\":{\"152\":2}}],[\"raft\",{\"1\":{\"134\":1}}],[\"roaming\",{\"1\":{\"970\":1,\"988\":1}}],[\"rox\",{\"1\":{\"914\":1}}],[\"ro\",{\"1\":{\"816\":1}}],[\"rows\",{\"1\":{\"746\":2,\"1041\":4}}],[\"robotzero\",{\"1\":{\"682\":1}}],[\"robin\",{\"1\":{\"208\":1}}],[\"roslynator\",{\"1\":{\"968\":1}}],[\"roslyn\",{\"1\":{\"585\":1}}],[\"rotation\",{\"1\":{\"564\":2}}],[\"rollout\",{\"1\":{\"914\":4}}],[\"rollonfilesizelimit\",{\"1\":{\"463\":1}}],[\"rollback\",{\"1\":{\"692\":3}}],[\"rollingupdate\",{\"1\":{\"914\":3}}],[\"rollinginterval\",{\"1\":{\"462\":1,\"463\":2}}],[\"rollingfile\",{\"1\":{\"457\":1,\"459\":1,\"462\":1}}],[\"rollingfileappender\",{\"1\":{\"447\":1}}],[\"rolebinding\",{\"1\":{\"914\":1}}],[\"roledescription\",{\"1\":{\"527\":1}}],[\"rolename\",{\"1\":{\"527\":1}}],[\"roleinfor\",{\"1\":{\"527\":3}}],[\"roleid\",{\"1\":{\"364\":5}}],[\"roles\",{\"1\":{\"364\":1,\"746\":2}}],[\"role\",{\"1\":{\"358\":1,\"364\":2,\"401\":2,\"914\":3}}],[\"round\",{\"1\":{\"208\":1}}],[\"routingmarkerservice\",{\"1\":{\"165\":1,\"166\":1}}],[\"routingservicecollectionextensions\",{\"1\":{\"165\":1,\"166\":1}}],[\"routing\",{\"1\":{\"156\":2,\"167\":2,\"204\":1,\"925\":1}}],[\"routingkey\",{\"1\":{\"46\":6}}],[\"routepattern\",{\"1\":{\"168\":1}}],[\"routeoptions\",{\"1\":{\"167\":2,\"168\":6}}],[\"routevaluesaddressscheme>\",{\"1\":{\"165\":1}}],[\"routevaluedictionary\",{\"1\":{\"164\":1}}],[\"routedirection\",{\"1\":{\"164\":2}}],[\"routekey\",{\"1\":{\"164\":2}}],[\"route\",{\"1\":{\"145\":1,\"161\":2,\"164\":1,\"472\":1,\"483\":1,\"488\":3,\"490\":1,\"552\":1,\"575\":1,\"576\":1,\"639\":2,\"641\":1,\"645\":2,\"647\":1,\"651\":2,\"653\":1,\"673\":1,\"925\":1}}],[\"rootfs\",{\"1\":{\"870\":5}}],[\"root是指web项目的所有文件夹\",{\"1\":{\"578\":1}}],[\"rootpath\",{\"1\":{\"574\":4}}],[\"root>\",{\"1\":{\"447\":1,\"578\":1}}],[\"root\",{\"1\":{\"39\":1,\"547\":2,\"564\":1,\"734\":1,\"853\":1,\"857\":1,\"858\":2,\"885\":2,\"886\":1,\"908\":6,\"925\":1,\"1036\":2,\"1070\":2,\"1096\":3,\"1110\":6}}],[\"rb内配置会覆盖这个\",{\"1\":{\"38\":1}}],[\"rb\",{\"1\":{\"38\":1,\"779\":1}}],[\"rsa和id\",{\"1\":{\"802\":1}}],[\"rsa\",{\"1\":{\"19\":5,\"802\":3,\"1037\":1}}],[\"rmdir\",{\"0\":{\"1076\":1},\"1\":{\"1076\":5}}],[\"rmi\",{\"1\":{\"810\":2}}],[\"rm\",{\"0\":{\"1078\":1,\"1094\":1},\"1\":{\"8\":1,\"125\":2,\"218\":2,\"774\":1,\"777\":1,\"799\":2,\"801\":1,\"811\":2,\"848\":1,\"862\":2,\"863\":2,\"865\":1,\"867\":1,\"871\":1,\"899\":1,\"914\":1,\"1078\":5,\"1094\":2}}],[\"reverse\",{\"1\":{\"1061\":4}}],[\"reboot\",{\"1\":{\"948\":1}}],[\"rebase\",{\"1\":{\"27\":2,\"777\":1}}],[\"rewrite\",{\"1\":{\"931\":2}}],[\"req\",{\"1\":{\"564\":1}}],[\"requirements\",{\"1\":{\"826\":1}}],[\"requirepass\",{\"1\":{\"380\":2,\"385\":2,\"856\":2}}],[\"requireexpirationtime\",{\"1\":{\"364\":1}}],[\"requirehttpsmetadata\",{\"1\":{\"364\":1}}],[\"requiredtype\",{\"1\":{\"443\":5}}],[\"required\",{\"1\":{\"215\":1,\"474\":3,\"475\":3,\"497\":1,\"501\":9}}],[\"requests\",{\"1\":{\"742\":1,\"743\":1,\"744\":1,\"914\":4}}],[\"requeststream\",{\"1\":{\"677\":4,\"678\":1,\"680\":6,\"681\":1}}],[\"requestmessage\",{\"1\":{\"711\":4}}],[\"requestmessagetext\",{\"1\":{\"711\":1}}],[\"requesttimeout\",{\"1\":{\"599\":1}}],[\"requesttask\",{\"1\":{\"168\":3}}],[\"requesterror\",{\"1\":{\"599\":1}}],[\"requestpath\",{\"1\":{\"580\":1}}],[\"requestparamrecordfilter\",{\"1\":{\"421\":3}}],[\"requestlimit\",{\"1\":{\"427\":1}}],[\"requestlimitfilter\",{\"1\":{\"427\":2}}],[\"requestlocalizationoptions\",{\"1\":{\"144\":1}}],[\"requestbodydata\",{\"1\":{\"421\":2}}],[\"requesturl\",{\"1\":{\"421\":2}}],[\"request\",{\"1\":{\"167\":1,\"401\":4,\"402\":13,\"403\":4,\"405\":2,\"418\":9,\"421\":7,\"424\":2,\"427\":2,\"472\":5,\"484\":1,\"601\":3,\"607\":4,\"615\":1,\"620\":1,\"625\":1,\"672\":3,\"675\":2,\"676\":2,\"693\":2,\"736\":1,\"738\":1,\"744\":1,\"1051\":2,\"1070\":3}}],[\"requestdelegate\",{\"1\":{\"156\":4,\"157\":1,\"167\":2,\"168\":4}}],[\"requestculture\",{\"1\":{\"144\":1}}],[\"reread\",{\"1\":{\"564\":2}}],[\"retain\",{\"1\":{\"914\":1}}],[\"retainedfilecountlimit\",{\"1\":{\"459\":1}}],[\"retryforavailability++\",{\"1\":{\"501\":1}}],[\"retryforavailability\",{\"1\":{\"501\":3}}],[\"retry\",{\"1\":{\"501\":3,\"737\":1}}],[\"returns\",{\"1\":{\"591\":2,\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"returnsasync\",{\"1\":{\"591\":6}}],[\"returns>\",{\"1\":{\"46\":1,\"125\":1,\"151\":1,\"401\":1,\"472\":1,\"475\":1,\"478\":3,\"483\":2,\"501\":4,\"574\":1,\"575\":2,\"576\":1,\"577\":2,\"580\":1,\"583\":2,\"660\":2,\"672\":1,\"675\":1,\"676\":1,\"677\":1,\"678\":1,\"680\":1,\"681\":1,\"693\":1,\"1047\":7}}],[\"returnok\",{\"1\":{\"586\":1,\"587\":1,\"591\":2}}],[\"returndatafilterattribute\",{\"1\":{\"416\":1}}],[\"returnvalue\",{\"1\":{\"400\":1}}],[\"returntype\",{\"1\":{\"104\":1}}],[\"return\",{\"1\":{\"43\":6,\"46\":2,\"59\":1,\"61\":1,\"64\":2,\"66\":1,\"83\":1,\"120\":2,\"125\":6,\"145\":1,\"151\":4,\"157\":4,\"163\":1,\"164\":3,\"165\":6,\"166\":1,\"167\":7,\"168\":3,\"215\":8,\"347\":1,\"348\":1,\"349\":1,\"350\":1,\"351\":1,\"355\":1,\"363\":2,\"364\":4,\"367\":1,\"368\":1,\"371\":2,\"373\":2,\"382\":1,\"387\":1,\"401\":2,\"402\":2,\"403\":2,\"404\":2,\"406\":1,\"407\":1,\"413\":1,\"416\":2,\"418\":1,\"421\":1,\"441\":5,\"442\":2,\"446\":1,\"447\":1,\"456\":1,\"471\":1,\"472\":5,\"474\":2,\"475\":5,\"476\":3,\"478\":5,\"483\":2,\"497\":2,\"501\":3,\"552\":3,\"574\":1,\"575\":3,\"576\":1,\"577\":6,\"582\":1,\"583\":3,\"585\":1,\"600\":2,\"602\":1,\"604\":1,\"607\":1,\"609\":1,\"611\":1,\"613\":1,\"615\":1,\"617\":1,\"620\":1,\"622\":2,\"625\":1,\"627\":1,\"630\":1,\"632\":1,\"658\":2,\"660\":2,\"661\":1,\"672\":1,\"673\":1,\"676\":1,\"677\":1,\"678\":1,\"681\":1,\"691\":4,\"693\":3,\"711\":2,\"712\":1,\"1043\":2,\"1044\":2,\"1047\":10,\"1061\":6}}],[\"recreate\",{\"1\":{\"914\":1}}],[\"recycle\",{\"1\":{\"914\":1}}],[\"recursive\",{\"1\":{\"908\":1}}],[\"recursivedir\",{\"1\":{\"672\":1,\"673\":1}}],[\"receive\",{\"1\":{\"777\":1}}],[\"rectangle\",{\"1\":{\"440\":3,\"441\":2,\"442\":6}}],[\"recover\",{\"1\":{\"204\":2}}],[\"reconfigure\",{\"1\":{\"38\":1}}],[\"remain\",{\"1\":{\"564\":1}}],[\"remark\",{\"1\":{\"342\":7,\"694\":1}}],[\"remotes\",{\"1\":{\"788\":3}}],[\"remote其他用法\",{\"1\":{\"474\":1}}],[\"remoteipaddress\",{\"1\":{\"421\":1,\"427\":1}}],[\"remote\",{\"1\":{\"21\":1,\"22\":2,\"23\":1,\"474\":2,\"774\":3,\"788\":3,\"1070\":2}}],[\"removeall<iemailvalidcodequery>\",{\"1\":{\"344\":1}}],[\"remove\",{\"1\":{\"8\":1,\"368\":4,\"378\":1,\"528\":1,\"552\":1,\"564\":1,\"625\":1,\"629\":1,\"661\":1,\"862\":2,\"865\":2,\"867\":2,\"1021\":2,\"1076\":1,\"1078\":1,\"1109\":1}}],[\"rename\",{\"1\":{\"321\":1}}],[\"redhat\",{\"1\":{\"905\":2}}],[\"red\",{\"1\":{\"865\":1,\"866\":1,\"867\":1,\"868\":1,\"870\":1,\"1036\":1}}],[\"redux\",{\"1\":{\"243\":4}}],[\"redirect\",{\"1\":{\"564\":5,\"712\":1}}],[\"redirectedfrom=msdn\",{\"1\":{\"125\":1}}],[\"redi\",{\"1\":{\"209\":1}}],[\"redistributable\",{\"1\":{\"1012\":2}}],[\"redis中也有值了\",{\"1\":{\"851\":1}}],[\"redisconf\",{\"1\":{\"817\":1}}],[\"redisconf目录中\",{\"1\":{\"817\":1}}],[\"rediscacheoptions\",{\"1\":{\"381\":1,\"386\":1}}],[\"rediscache\",{\"1\":{\"381\":7,\"386\":7}}],[\"redis的镜像将容器内的\",{\"1\":{\"817\":1}}],[\"redis安装实战\",{\"0\":{\"817\":1}}],[\"redis运行时开启持久化\",{\"1\":{\"380\":1,\"385\":1,\"856\":1}}],[\"redis分布式缓存\",{\"0\":{\"379\":1}}],[\"redis面试题\",{\"0\":{\"209\":1}}],[\"redishealth\",{\"1\":{\"151\":2,\"153\":3}}],[\"redishealthcheck\",{\"1\":{\"151\":1}}],[\"redis健康检查\",{\"1\":{\"151\":1}}],[\"redis\",{\"0\":{\"856\":1,\"865\":1},\"1\":{\"134\":2,\"151\":3,\"152\":2,\"153\":2,\"180\":1,\"209\":29,\"253\":1,\"380\":3,\"385\":3,\"817\":5,\"843\":2,\"852\":1,\"856\":3,\"864\":1,\"865\":9,\"866\":3,\"867\":9,\"868\":8,\"869\":1,\"870\":19,\"1014\":1}}],[\"realtek\",{\"1\":{\"1013\":1}}],[\"real\",{\"0\":{\"1160\":1},\"1\":{\"564\":3}}],[\"realliangshiwei\",{\"1\":{\"448\":1}}],[\"realname\",{\"1\":{\"368\":1}}],[\"reason\",{\"1\":{\"373\":2,\"375\":1}}],[\"react\",{\"1\":{\"243\":7,\"253\":1}}],[\"readwritemany\",{\"1\":{\"914\":1}}],[\"readwriteonce\",{\"1\":{\"914\":1}}],[\"readallbytes\",{\"1\":{\"617\":1}}],[\"readalltext\",{\"1\":{\"375\":1}}],[\"readasstringasync\",{\"1\":{\"586\":1,\"600\":1,\"691\":1}}],[\"readtoend\",{\"1\":{\"574\":1}}],[\"readtoendasync\",{\"1\":{\"402\":2,\"418\":1,\"421\":1}}],[\"readline\",{\"1\":{\"564\":1,\"1050\":1}}],[\"readjson\",{\"1\":{\"478\":1}}],[\"readfrom\",{\"1\":{\"462\":1}}],[\"reader\",{\"1\":{\"120\":4,\"478\":7}}],[\"read\",{\"1\":{\"118\":1,\"120\":2,\"693\":2,\"779\":1,\"1070\":1,\"1081\":1}}],[\"readkey\",{\"1\":{\"68\":1}}],[\"readonlymany\",{\"1\":{\"914\":1}}],[\"readonly\",{\"1\":{\"56\":1,\"145\":1,\"167\":5,\"168\":3,\"348\":1,\"350\":1,\"351\":1,\"355\":1,\"363\":1,\"368\":1,\"371\":1,\"377\":1,\"382\":1,\"387\":1,\"398\":1,\"401\":2,\"402\":2,\"403\":3,\"404\":3,\"405\":1,\"413\":2,\"418\":1,\"421\":1,\"424\":1,\"446\":1,\"447\":1,\"456\":1,\"465\":1,\"497\":1,\"501\":1,\"575\":4,\"576\":2,\"577\":1,\"582\":1,\"585\":3,\"587\":1,\"591\":3,\"600\":2,\"656\":1,\"660\":2,\"661\":1,\"673\":1,\"694\":1,\"1047\":4,\"1061\":2}}],[\"readme\",{\"1\":{\"21\":2,\"22\":4,\"23\":2,\"331\":1,\"661\":1,\"768\":1,\"769\":4,\"788\":1,\"801\":1}}],[\"re\",{\"1\":{\"205\":1}}],[\"repeated\",{\"1\":{\"676\":1}}],[\"representation\",{\"1\":{\"205\":1}}],[\"replace\",{\"1\":{\"215\":2,\"344\":1,\"629\":2,\"631\":1,\"632\":1,\"691\":2,\"711\":3}}],[\"replay\",{\"1\":{\"175\":1}}],[\"replicationcontrollers\",{\"1\":{\"914\":1}}],[\"replication\",{\"1\":{\"205\":1}}],[\"replica\",{\"1\":{\"205\":1}}],[\"replicaset在后台创建pod\",{\"1\":{\"914\":1}}],[\"replicaset和deployment等都是属于某一个namespace的\",{\"1\":{\"914\":1}}],[\"replicas=2\",{\"1\":{\"914\":1}}],[\"replicas\",{\"1\":{\"204\":1}}],[\"repos\",{\"1\":{\"862\":1,\"905\":1}}],[\"repositoryfactory\",{\"1\":{\"1041\":5,\"1042\":1,\"1043\":2,\"1044\":2}}],[\"repositoryformatversion\",{\"1\":{\"777\":1,\"788\":1}}],[\"repository=new\",{\"1\":{\"1040\":1}}],[\"repository<productsalebydayentity>\",{\"1\":{\"1040\":1}}],[\"repository\",{\"1\":{\"777\":2,\"863\":1,\"866\":1,\"871\":1,\"1041\":10,\"1042\":2,\"1043\":4,\"1044\":4,\"1070\":1}}],[\"repositories\",{\"1\":{\"4\":1}}],[\"reportclassid\",{\"1\":{\"1051\":2}}],[\"reportid\",{\"1\":{\"1051\":2}}],[\"report1\",{\"1\":{\"691\":8}}],[\"reportapiversions\",{\"1\":{\"494\":1,\"498\":1,\"638\":1,\"644\":1,\"650\":1,\"655\":1}}],[\"repo\",{\"1\":{\"3\":2,\"862\":7,\"905\":2,\"952\":1,\"1109\":3}}],[\"regularexpression\",{\"1\":{\"474\":1}}],[\"regex\",{\"1\":{\"163\":2,\"656\":1}}],[\"regexoptions\",{\"1\":{\"163\":3}}],[\"region\",{\"1\":{\"98\":9}}],[\"registermpaccount\",{\"1\":{\"710\":1}}],[\"registerdata\",{\"1\":{\"691\":1}}],[\"registerchangecallback\",{\"1\":{\"374\":1}}],[\"registerpostevictioncallback\",{\"1\":{\"373\":1,\"375\":1}}],[\"register=true\",{\"1\":{\"217\":1}}],[\"register\",{\"1\":{\"6\":1,\"278\":1}}],[\"registry的认证信息\",{\"1\":{\"914\":1}}],[\"registry\",{\"1\":{\"3\":1,\"692\":1,\"805\":3,\"859\":1,\"862\":1,\"874\":1,\"876\":1,\"1070\":16}}],[\"refs\",{\"1\":{\"764\":1,\"777\":6,\"781\":4,\"784\":1,\"785\":3,\"788\":3}}],[\"ref=\",{\"1\":{\"447\":1}}],[\"referencetype\",{\"1\":{\"484\":1}}],[\"reference\",{\"1\":{\"484\":1,\"811\":1}}],[\"referenceequals\",{\"1\":{\"167\":1}}],[\"referer\",{\"1\":{\"322\":1}}],[\"refresh\",{\"1\":{\"204\":2,\"378\":1}}],[\"reflection\",{\"1\":{\"86\":1,\"90\":1,\"94\":4,\"203\":2,\"442\":2}}],[\"reflog查看命令历史\",{\"1\":{\"33\":1}}],[\"reflog命令先查看我们要回退的版本号的哈希值\",{\"1\":{\"32\":1}}],[\"reflog来查看哈希值\",{\"1\":{\"27\":1}}],[\"reflog\",{\"1\":{\"27\":1,\"786\":2}}],[\"ref\",{\"1\":{\"55\":1,\"447\":1,\"777\":1,\"925\":1}}],[\"resharper\",{\"1\":{\"968\":1}}],[\"res\",{\"1\":{\"678\":2}}],[\"resstr\",{\"1\":{\"600\":3}}],[\"resolv\",{\"1\":{\"943\":1}}],[\"resolveunmanageddlltopath\",{\"1\":{\"577\":1}}],[\"resolveassemblytopath\",{\"1\":{\"577\":1}}],[\"resolver\",{\"1\":{\"577\":4}}],[\"resolve\",{\"1\":{\"575\":1}}],[\"resolvecontractconverter\",{\"1\":{\"478\":2}}],[\"resolvabletype\",{\"1\":{\"443\":2}}],[\"resourcequota\",{\"1\":{\"914\":1}}],[\"resourcequotas\",{\"1\":{\"914\":1}}],[\"resourcenotfound\",{\"1\":{\"599\":1}}],[\"resourceexecutedcontext\",{\"1\":{\"402\":1}}],[\"resourceexecutingcontext\",{\"1\":{\"402\":1}}],[\"resource是第二优先\",{\"1\":{\"402\":1}}],[\"resource\",{\"0\":{\"402\":1},\"1\":{\"402\":3,\"914\":1}}],[\"resourcedownload\",{\"1\":{\"242\":1}}],[\"resources\",{\"1\":{\"166\":1}}],[\"resourcespath\",{\"1\":{\"143\":1}}],[\"resume\",{\"1\":{\"338\":1,\"914\":1}}],[\"resultlist\",{\"1\":{\"677\":2}}],[\"result方法也是只读的\",{\"1\":{\"405\":1}}],[\"resultexecutiondelegate\",{\"1\":{\"403\":1,\"405\":1}}],[\"resultexecutingcontext\",{\"1\":{\"403\":2,\"405\":2,\"416\":1}}],[\"resultexecutedcontext\",{\"1\":{\"403\":1,\"405\":1,\"416\":1}}],[\"resultmodeltest\",{\"1\":{\"599\":1}}],[\"resultmodel<object>\",{\"1\":{\"405\":2,\"416\":2}}],[\"resultmodel<string>\",{\"1\":{\"404\":2}}],[\"resultmodel\",{\"1\":{\"401\":4,\"413\":1,\"416\":2,\"599\":2}}],[\"resultstatus\",{\"1\":{\"599\":11}}],[\"results\",{\"1\":{\"151\":1,\"735\":1,\"739\":1}}],[\"result\",{\"0\":{\"405\":1},\"1\":{\"83\":2,\"129\":1,\"151\":4,\"167\":1,\"364\":3,\"401\":4,\"402\":6,\"403\":5,\"404\":6,\"405\":11,\"413\":5,\"416\":8,\"418\":3,\"427\":1,\"472\":3,\"477\":6,\"591\":6,\"599\":5,\"604\":1,\"609\":1,\"613\":1,\"617\":3,\"622\":2,\"627\":1,\"631\":2,\"632\":1,\"673\":2,\"676\":3,\"677\":3,\"691\":4,\"694\":1,\"712\":2,\"737\":1}}],[\"responsibility\",{\"1\":{\"202\":1}}],[\"responsetime\",{\"1\":{\"739\":1}}],[\"responsemessage\",{\"1\":{\"711\":7}}],[\"responseasync\",{\"1\":{\"678\":1}}],[\"responsestream\",{\"1\":{\"674\":2,\"675\":3,\"676\":2,\"680\":3,\"681\":2}}],[\"response\",{\"1\":{\"151\":2,\"156\":1,\"158\":4,\"163\":1,\"175\":1,\"364\":5,\"404\":6,\"405\":1,\"427\":1,\"472\":2,\"477\":1,\"580\":1,\"586\":3,\"587\":3,\"604\":2,\"609\":2,\"613\":2,\"622\":2,\"627\":2,\"632\":2,\"676\":3,\"691\":3,\"739\":18,\"746\":3}}],[\"responsewriter\",{\"1\":{\"151\":2,\"153\":2}}],[\"restore\",{\"1\":{\"1070\":1}}],[\"restorehealth\",{\"1\":{\"1024\":1}}],[\"restoredpayload\",{\"1\":{\"153\":1}}],[\"restsharp\",{\"1\":{\"710\":1}}],[\"restsharpclient\",{\"1\":{\"694\":1}}],[\"restricted\",{\"1\":{\"1008\":1}}],[\"restrictedtominimumlevel\",{\"1\":{\"462\":1}}],[\"restrequest\",{\"1\":{\"472\":1}}],[\"restclient\",{\"1\":{\"472\":1}}],[\"restful\",{\"1\":{\"327\":1,\"479\":1,\"551\":1}}],[\"rest\",{\"1\":{\"210\":2}}],[\"restartpolicy\",{\"1\":{\"914\":1}}],[\"restartd\",{\"1\":{\"852\":1}}],[\"restart重启命令和docker\",{\"1\":{\"811\":1}}],[\"restart同理\",{\"1\":{\"564\":1}}],[\"restartsec=42s\",{\"1\":{\"549\":1}}],[\"restart=on\",{\"1\":{\"549\":1}}],[\"restart=always\",{\"1\":{\"380\":1,\"385\":1,\"791\":1,\"853\":1,\"855\":1,\"856\":1}}],[\"restart\",{\"1\":{\"3\":3,\"8\":1,\"36\":1,\"37\":1,\"38\":1,\"542\":1,\"564\":4,\"796\":1,\"811\":1,\"853\":1,\"854\":1,\"862\":2,\"886\":1,\"893\":2,\"909\":1,\"1020\":1,\"1070\":1,\"1107\":1,\"1109\":3,\"1110\":1}}],[\"resx结尾\",{\"1\":{\"145\":1}}],[\"reset详解\",{\"0\":{\"28\":1}}],[\"reset\",{\"1\":{\"27\":2,\"29\":3,\"30\":2,\"31\":3,\"32\":5,\"33\":1,\"771\":1}}],[\"relational\",{\"1\":{\"1126\":1,\"1131\":1}}],[\"relation\",{\"1\":{\"1048\":1}}],[\"relative\",{\"1\":{\"546\":1,\"564\":4}}],[\"release\",{\"0\":{\"1161\":1,\"1183\":1},\"1\":{\"336\":1,\"541\":1,\"870\":1,\"1007\":1,\"1037\":4,\"1070\":2,\"1115\":1,\"1121\":1,\"1122\":1,\"1123\":1}}],[\"release下载加速\",{\"1\":{\"334\":1}}],[\"releases\",{\"1\":{\"3\":1,\"171\":1,\"274\":1,\"278\":1,\"846\":2,\"865\":1,\"867\":1,\"951\":1,\"1070\":1,\"1114\":2}}],[\"releasing\",{\"1\":{\"210\":1}}],[\"reload使用配置生效\",{\"1\":{\"931\":1}}],[\"reloadconfig\",{\"1\":{\"691\":4}}],[\"reloadonchange\",{\"1\":{\"215\":1,\"582\":3,\"583\":1}}],[\"reload\",{\"1\":{\"3\":1,\"543\":1,\"547\":1,\"549\":2,\"564\":2,\"691\":2,\"862\":1,\"907\":1,\"911\":1,\"1108\":1,\"1109\":3}}],[\"yc592\",{\"1\":{\"1110\":1}}],[\"ycq5y2vd\",{\"1\":{\"685\":1}}],[\"yellow\",{\"1\":{\"1036\":1}}],[\"yes\",{\"1\":{\"380\":2,\"385\":2,\"856\":2,\"1107\":1}}],[\"yvc9b\",{\"1\":{\"1035\":1}}],[\"ywv2j\",{\"1\":{\"973\":1}}],[\"y8mmm\",{\"1\":{\"973\":1}}],[\"yq6xk\",{\"1\":{\"973\":1}}],[\"yuque\",{\"1\":{\"712\":1}}],[\"yum安装的目录\",{\"1\":{\"797\":1}}],[\"yum包更新到最新\",{\"1\":{\"3\":1}}],[\"yum\",{\"1\":{\"3\":6,\"4\":1,\"537\":1,\"538\":1,\"541\":1,\"545\":2,\"564\":1,\"797\":1,\"862\":10,\"905\":2,\"946\":2,\"949\":4,\"1072\":3,\"1109\":7}}],[\"yy\",{\"1\":{\"694\":1}}],[\"yyyymmddhhmm\",{\"1\":{\"1077\":1}}],[\"yyyy\",{\"1\":{\"421\":1,\"447\":1,\"462\":1,\"478\":1,\"692\":1}}],[\"yi念之间\",{\"1\":{\"1047\":1}}],[\"yield\",{\"1\":{\"475\":2}}],[\"yishimei\",{\"1\":{\"262\":1}}],[\"yanjieli\",{\"1\":{\"902\":1}}],[\"yanshi\",{\"1\":{\"378\":2}}],[\"yaml文件可以查看\",{\"1\":{\"1070\":1}}],[\"yaml文件内容是通过空格的缩进来代表层次\",{\"1\":{\"850\":1}}],[\"yaml\",{\"1\":{\"844\":1,\"849\":1,\"850\":8,\"887\":1,\"914\":1,\"931\":1}}],[\"yapi配置\",{\"0\":{\"233\":1}}],[\"yapiweb\",{\"1\":{\"217\":1}}],[\"yapi\",{\"0\":{\"216\":1},\"1\":{\"216\":4,\"217\":11,\"218\":4,\"219\":2}}],[\"ymfe\",{\"1\":{\"216\":1}}],[\"yml中写下面内容\",{\"1\":{\"1070\":1}}],[\"yml所在的目录下执行如下命令\",{\"1\":{\"852\":1}}],[\"yml文件后追加\",{\"1\":{\"1070\":1}}],[\"yml文件内容常用属性\",{\"1\":{\"852\":1}}],[\"yml文件中映射的端口访问了\",{\"1\":{\"852\":1}}],[\"yml文件通过右键\",{\"1\":{\"851\":1}}],[\"yml文件\",{\"1\":{\"851\":1,\"1070\":1}}],[\"yml该文件可以编辑也可以不编辑\",{\"1\":{\"38\":1}}],[\"yml\",{\"1\":{\"8\":1,\"38\":1,\"204\":1,\"849\":1,\"852\":1,\"1070\":2}}],[\"yml的文件\",{\"1\":{\"8\":1}}],[\"youtube\",{\"0\":{\"307\":1}}],[\"you\",{\"1\":{\"211\":1,\"739\":1,\"774\":2,\"777\":1,\"943\":1,\"1061\":1,\"1117\":1}}],[\"your\",{\"1\":{\"17\":2,\"211\":1,\"739\":1,\"748\":1,\"943\":6,\"1036\":2,\"1117\":1}}],[\"y\",{\"1\":{\"3\":3,\"4\":1,\"52\":2,\"54\":2,\"82\":1,\"125\":10,\"538\":2,\"545\":1,\"564\":1,\"797\":1,\"840\":1,\"862\":4,\"865\":2,\"867\":2,\"899\":1,\"905\":1,\"1109\":3}}],[\"snaponinput\",{\"1\":{\"1036\":1}}],[\"snipzste\",{\"1\":{\"1014\":1}}],[\"snippets\",{\"1\":{\"321\":1}}],[\"snipperts\",{\"1\":{\"321\":1}}],[\"sfc\",{\"1\":{\"1024\":1}}],[\"sftp\",{\"1\":{\"152\":1}}],[\"s2\",{\"1\":{\"931\":1}}],[\"s1\",{\"1\":{\"931\":1}}],[\"szw\",{\"1\":{\"712\":2}}],[\"szlblog\",{\"1\":{\"141\":1}}],[\"sbentity\",{\"1\":{\"693\":1}}],[\"sbyte\",{\"1\":{\"75\":2}}],[\"s代码写的少\",{\"1\":{\"657\":1}}],[\"squashing\",{\"1\":{\"873\":1,\"874\":2}}],[\"squash\",{\"1\":{\"868\":4,\"870\":1,\"874\":2}}],[\"square\",{\"1\":{\"440\":3,\"441\":2,\"442\":5}}],[\"sqlmapper\",{\"1\":{\"1061\":3}}],[\"sql的强大orm设计器\",{\"1\":{\"968\":1}}],[\"sql建模和代码产生的强大工具\",{\"1\":{\"968\":1}}],[\"sqlsever\",{\"1\":{\"1009\":1}}],[\"sqlserver\",{\"1\":{\"152\":1,\"661\":1,\"859\":2}}],[\"sqlsugar\",{\"1\":{\"529\":1}}],[\"sql查询不能包含关联数据\",{\"1\":{\"514\":1}}],[\"sql查询必须返回实体类型的所有属性的数据\",{\"1\":{\"514\":1}}],[\"sql语句参数化查询\",{\"1\":{\"512\":1}}],[\"sql语句书写尽量不要省略双引号和单引号\",{\"1\":{\"206\":1}}],[\"sql语句及索引的优化\",{\"1\":{\"206\":1}}],[\"sql注入\",{\"0\":{\"511\":1}}],[\"sql注入产生的原因\",{\"1\":{\"206\":1}}],[\"sql注入漏洞产生的原因\",{\"1\":{\"206\":1}}],[\"sql注入式攻击\",{\"1\":{\"203\":1}}],[\"sqlite数据库\",{\"1\":{\"447\":1}}],[\"sqlite\",{\"1\":{\"152\":2,\"661\":2,\"1009\":1}}],[\"sql格式化\",{\"1\":{\"133\":1}}],[\"sqllite几种常用的数据库\",{\"1\":{\"132\":1}}],[\"sqldatareader\",{\"1\":{\"120\":2}}],[\"sqlcommand\",{\"1\":{\"120\":4}}],[\"sqlconnection\",{\"1\":{\"120\":4,\"1050\":1,\"1063\":1,\"1065\":1}}],[\"sql\",{\"1\":{\"120\":4,\"132\":1,\"133\":1,\"151\":1,\"152\":1,\"203\":2,\"508\":1,\"514\":1,\"968\":1,\"1047\":12,\"1048\":1,\"1050\":2,\"1060\":2,\"1063\":4,\"1064\":4,\"1065\":4}}],[\"sr\",{\"1\":{\"402\":4,\"421\":2,\"574\":2}}],[\"src\",{\"1\":{\"399\":1,\"812\":1,\"825\":1,\"870\":1,\"871\":1,\"1070\":2}}],[\"symbols\",{\"1\":{\"986\":1}}],[\"symmetricsecuritykey\",{\"1\":{\"364\":2}}],[\"sync\",{\"1\":{\"914\":1}}],[\"syncfusion\",{\"1\":{\"467\":1}}],[\"syntax\",{\"1\":{\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"sysno\",{\"1\":{\"1041\":2,\"1042\":1,\"1043\":1,\"1044\":1}}],[\"syscofig\",{\"1\":{\"1109\":1}}],[\"sysconfig\",{\"1\":{\"905\":1,\"1107\":1,\"1110\":2}}],[\"sysctl\",{\"1\":{\"893\":2}}],[\"sys\",{\"1\":{\"734\":1}}],[\"syslog\",{\"1\":{\"447\":1}}],[\"systemd\",{\"1\":{\"549\":2}}],[\"system32\",{\"1\":{\"333\":1}}],[\"system\",{\"1\":{\"44\":1,\"46\":1,\"66\":1,\"75\":8,\"76\":3,\"77\":1,\"78\":1,\"86\":1,\"90\":1,\"94\":8,\"152\":2,\"203\":5,\"205\":1,\"364\":1,\"366\":2,\"369\":1,\"373\":1,\"440\":3,\"446\":1,\"447\":1,\"454\":1,\"462\":1,\"471\":2,\"518\":1,\"549\":2,\"575\":1,\"577\":1,\"586\":1,\"591\":2,\"597\":1,\"600\":1,\"617\":3,\"675\":1,\"683\":1,\"691\":7,\"692\":11,\"769\":2,\"775\":1,\"914\":2,\"941\":1,\"985\":2,\"1008\":3,\"1122\":4,\"1123\":1}}],[\"systemctl\",{\"1\":{\"3\":4,\"8\":1,\"541\":2,\"542\":1,\"549\":4,\"862\":6,\"893\":2,\"907\":3,\"909\":2,\"911\":4,\"1108\":2,\"1109\":8,\"1110\":1}}],[\"sdk文档地址\",{\"1\":{\"712\":1}}],[\"sdk=\",{\"1\":{\"585\":1,\"1122\":1,\"1123\":1}}],[\"sdk\",{\"1\":{\"538\":2,\"585\":3,\"710\":3,\"1037\":6,\"1070\":1,\"1122\":1,\"1123\":1}}],[\"sdks\",{\"1\":{\"538\":1}}],[\"sdk下载\",{\"1\":{\"135\":1}}],[\"sdfsdfsrty45634kkhllghtdgdfss345t678fs\",{\"1\":{\"364\":1}}],[\"sglfree\",{\"1\":{\"309\":1}}],[\"smop\",{\"1\":{\"1110\":1}}],[\"sm\",{\"1\":{\"951\":1}}],[\"smp\",{\"1\":{\"870\":1}}],[\"smsservice\",{\"1\":{\"575\":2}}],[\"smsservice>\",{\"1\":{\"575\":1}}],[\"smsurl\",{\"1\":{\"575\":3}}],[\"small\",{\"0\":{\"1163\":1,\"1180\":1},\"1\":{\"873\":1,\"874\":2}}],[\"smallvideo\",{\"1\":{\"564\":1}}],[\"smallpdf\",{\"0\":{\"285\":1},\"1\":{\"285\":1}}],[\"smtp\",{\"1\":{\"3\":10,\"36\":10,\"152\":1}}],[\"swtich\",{\"1\":{\"786\":1}}],[\"sw\",{\"1\":{\"692\":2}}],[\"swap\",{\"1\":{\"1110\":5}}],[\"swarm\",{\"1\":{\"839\":1}}],[\"swashbuckle\",{\"1\":{\"480\":1,\"486\":1,\"574\":1,\"576\":1,\"600\":2,\"710\":1}}],[\"swagger会提示\",{\"1\":{\"601\":1}}],[\"swaggerdefaultvalues\",{\"1\":{\"497\":1}}],[\"swaggerdoc\",{\"1\":{\"481\":2,\"483\":1,\"484\":1,\"494\":1,\"497\":1,\"600\":1}}],[\"swaggergenoptions\",{\"1\":{\"497\":1}}],[\"swagger扩展\",{\"1\":{\"497\":1}}],[\"swaggerversion\",{\"1\":{\"488\":3,\"639\":2,\"645\":2,\"651\":2}}],[\"swagger还读取不到我们的注释\",{\"1\":{\"483\":1}}],[\"swagger已经集成到vs2019编译器中\",{\"1\":{\"479\":1}}],[\"swagger显示枚举\",{\"1\":{\"478\":1}}],[\"swagger地址为\",{\"1\":{\"232\":1}}],[\"swaggerendpoint\",{\"1\":{\"151\":1,\"482\":1,\"495\":1,\"499\":1}}],[\"swagger\",{\"0\":{\"478\":1,\"479\":1,\"485\":1},\"1\":{\"8\":1,\"151\":2,\"232\":1,\"479\":1,\"482\":2,\"484\":1,\"495\":2,\"499\":2,\"551\":1,\"552\":1,\"554\":1,\"574\":1,\"576\":1,\"902\":1,\"1070\":1}}],[\"switchdaemon\",{\"1\":{\"876\":1}}],[\"switch\",{\"1\":{\"442\":1,\"661\":1,\"798\":1,\"985\":1}}],[\"sweeper\",{\"1\":{\"243\":2}}],[\"svc的信息中包含了cluster\",{\"1\":{\"919\":1}}],[\"svc\",{\"1\":{\"918\":3,\"943\":6}}],[\"svg\",{\"1\":{\"243\":1}}],[\"svn代码仓库\",{\"1\":{\"240\":1}}],[\"svn是属于集中型的版本管理系统\",{\"1\":{\"12\":1}}],[\"svn\",{\"0\":{\"12\":1},\"1\":{\"186\":3}}],[\"sk\",{\"1\":{\"724\":1}}],[\"skywalking等\",{\"1\":{\"210\":2}}],[\"skoo所说的webserver刚好属于网络io密集型应用\",{\"1\":{\"207\":1}}],[\"slug\",{\"1\":{\"1110\":1}}],[\"slavestrs\",{\"1\":{\"1047\":5}}],[\"slave\",{\"1\":{\"1047\":1}}],[\"slaveconnectionstring\",{\"1\":{\"1047\":2}}],[\"slashes\",{\"1\":{\"207\":3}}],[\"slim\",{\"1\":{\"806\":1}}],[\"slice\",{\"1\":{\"746\":1}}],[\"slidingexpiration\",{\"1\":{\"372\":1,\"373\":1,\"381\":1,\"382\":1,\"386\":1,\"387\":1}}],[\"sleep\",{\"1\":{\"372\":2,\"373\":1,\"588\":4,\"985\":6}}],[\"sleep一会再重试\",{\"1\":{\"209\":1}}],[\"scsi\",{\"1\":{\"1110\":2}}],[\"schemes\",{\"1\":{\"1036\":1}}],[\"schema\",{\"1\":{\"497\":2,\"1036\":1}}],[\"schemas\",{\"1\":{\"453\":1}}],[\"schema的设计和定义\",{\"1\":{\"205\":1}}],[\"scannow\",{\"1\":{\"1024\":1}}],[\"scanhealth\",{\"1\":{\"1024\":1}}],[\"scan\",{\"1\":{\"965\":2,\"968\":2}}],[\"scale\",{\"1\":{\"914\":1}}],[\"scm\",{\"1\":{\"748\":1,\"802\":1}}],[\"sct\",{\"1\":{\"696\":1,\"698\":1}}],[\"sc\",{\"1\":{\"518\":5,\"519\":5,\"520\":7,\"522\":2,\"523\":4,\"524\":5,\"564\":1}}],[\"scooter\",{\"1\":{\"988\":1}}],[\"sco\",{\"1\":{\"522\":2}}],[\"score\",{\"1\":{\"515\":1}}],[\"scores\",{\"1\":{\"502\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":1,\"523\":2,\"524\":2}}],[\"scope\",{\"1\":{\"355\":2,\"501\":2,\"1008\":2,\"1064\":2}}],[\"scoped\",{\"0\":{\"346\":1}}],[\"scratch\",{\"1\":{\"869\":3,\"870\":3,\"871\":2,\"873\":2,\"874\":3}}],[\"scroll\",{\"1\":{\"204\":2,\"968\":1}}],[\"scripts\",{\"1\":{\"1107\":1,\"1110\":2}}],[\"script中编写的javascript脚本\",{\"1\":{\"744\":1}}],[\"script\",{\"1\":{\"4\":1,\"8\":1,\"738\":1,\"742\":1,\"743\":1,\"744\":1,\"1070\":2}}],[\"scf\",{\"1\":{\"181\":1}}],[\"side\",{\"0\":{\"984\":1},\"1\":{\"984\":2,\"1061\":1}}],[\"sidecar\",{\"0\":{\"334\":1},\"1\":{\"334\":1}}],[\"site\",{\"1\":{\"790\":1,\"949\":2}}],[\"sigstore\",{\"1\":{\"1070\":1}}],[\"sigkill\",{\"1\":{\"564\":1}}],[\"signed\",{\"1\":{\"1037\":1}}],[\"signal\",{\"1\":{\"564\":2}}],[\"signalr使用服务器端集线器的概念来帮助已连接客户端的实时通信和管理\",{\"1\":{\"535\":1}}],[\"signalr提供了统一的api画布用于连接和客户端管理\",{\"1\":{\"535\":1}}],[\"signalr为服务器和客户端之间的双向远程过程调用\",{\"1\":{\"535\":1}}],[\"signalr是微软推出的标准框架\",{\"1\":{\"535\":1}}],[\"signalr是\",{\"0\":{\"535\":1}}],[\"signalr\",{\"1\":{\"152\":2}}],[\"signingcredentials\",{\"1\":{\"364\":2}}],[\"signinasync\",{\"1\":{\"358\":1}}],[\"signoutasync\",{\"1\":{\"362\":1}}],[\"since\",{\"1\":{\"809\":1,\"811\":1,\"949\":1}}],[\"sinks\",{\"1\":{\"457\":5}}],[\"singleline\",{\"1\":{\"1036\":1}}],[\"singleviewbutton\",{\"1\":{\"712\":2}}],[\"singleordefaultasync\",{\"1\":{\"503\":2}}],[\"singletonservice>\",{\"1\":{\"354\":1}}],[\"singleton\",{\"0\":{\"345\":1},\"1\":{\"202\":1}}],[\"singleton<matcherpolicy\",{\"1\":{\"165\":2}}],[\"single\",{\"1\":{\"76\":1,\"152\":1}}],[\"silent\",{\"1\":{\"343\":1}}],[\"simplified\",{\"1\":{\"321\":1,\"1034\":4}}],[\"sizef\",{\"1\":{\"688\":2}}],[\"size=10\",{\"1\":{\"564\":1}}],[\"size=32g环境变量\",{\"1\":{\"204\":1}}],[\"sizelimit配置3\",{\"1\":{\"373\":1}}],[\"sizelimit\",{\"1\":{\"373\":1}}],[\"size一个大范围\",{\"1\":{\"204\":1}}],[\"size\",{\"1\":{\"204\":2,\"373\":3,\"447\":1,\"564\":1,\"863\":1,\"865\":1,\"866\":2,\"867\":1,\"868\":1,\"870\":1,\"871\":1}}],[\"ssr=false\",{\"1\":{\"968\":3}}],[\"sse很大程度上是从服务器到客户端的定向推送\",{\"1\":{\"533\":1}}],[\"sse最大的特点就是不需要客户端发送请求\",{\"1\":{\"533\":1}}],[\"sse是html5\",{\"1\":{\"533\":1}}],[\"sse\",{\"0\":{\"533\":1}}],[\"ss\",{\"1\":{\"421\":1,\"453\":1,\"462\":1,\"478\":1,\"692\":1,\"694\":1}}],[\"ssd\",{\"1\":{\"208\":1}}],[\"ssn\",{\"1\":{\"163\":2}}],[\"sslinux\",{\"0\":{\"947\":1}}],[\"ssl\",{\"1\":{\"152\":1,\"322\":3,\"323\":1,\"325\":6,\"333\":1}}],[\"ssh服务默认会安装\",{\"1\":{\"880\":1}}],[\"sshtron\",{\"1\":{\"243\":3}}],[\"ssh连接端口\",{\"1\":{\"38\":1}}],[\"ssh主机ip\",{\"1\":{\"38\":1}}],[\"ssh\",{\"1\":{\"3\":1,\"19\":3,\"36\":1,\"38\":4,\"243\":2,\"802\":2,\"1036\":2,\"1070\":5,\"1096\":2,\"1101\":2}}],[\"s3\",{\"1\":{\"152\":2}}],[\"spire\",{\"0\":{\"686\":1}}],[\"spec中\",{\"1\":{\"914\":1}}],[\"special\",{\"1\":{\"873\":1,\"874\":1}}],[\"specify\",{\"1\":{\"564\":1}}],[\"spec\",{\"1\":{\"850\":1,\"873\":1,\"874\":1,\"914\":3,\"923\":1,\"930\":1,\"931\":2}}],[\"speed\",{\"1\":{\"739\":1}}],[\"spell\",{\"1\":{\"321\":1}}],[\"sp\",{\"1\":{\"344\":1}}],[\"spring5源码分析\",{\"1\":{\"445\":1}}],[\"spring中ioc的理解\",{\"1\":{\"445\":1}}],[\"spring中的ioc\",{\"0\":{\"437\":1},\"1\":{\"430\":1}}],[\"springioc\",{\"1\":{\"443\":1}}],[\"spring\",{\"0\":{\"443\":1},\"1\":{\"253\":2,\"430\":1,\"443\":5,\"445\":2}}],[\"springhgui\",{\"1\":{\"239\":1}}],[\"springcloud\",{\"1\":{\"210\":1}}],[\"spacesniffer\",{\"0\":{\"264\":1}}],[\"space\",{\"1\":{\"137\":9,\"243\":1}}],[\"splitpane\",{\"1\":{\"1036\":1}}],[\"splitmode\",{\"1\":{\"1036\":2}}],[\"split\",{\"1\":{\"66\":1,\"656\":1,\"691\":1,\"1036\":2}}],[\"sttime\",{\"1\":{\"1041\":10}}],[\"stylus\",{\"0\":{\"999\":1}}],[\"style\",{\"1\":{\"956\":1}}],[\"steps\",{\"1\":{\"1070\":1}}],[\"step是最基本的操作单元\",{\"1\":{\"879\":1}}],[\"step\",{\"1\":{\"879\":1}}],[\"stdout\",{\"1\":{\"547\":1,\"564\":18}}],[\"stderr事件会被触发\",{\"1\":{\"564\":3}}],[\"stderr参数被设置为true\",{\"1\":{\"564\":2}}],[\"stderr=true\",{\"1\":{\"564\":3}}],[\"stderr\",{\"1\":{\"547\":1,\"564\":19}}],[\"store\",{\"1\":{\"775\":1,\"797\":1}}],[\"storageclass\",{\"1\":{\"914\":2}}],[\"storagedriver\",{\"1\":{\"874\":1}}],[\"storage\",{\"1\":{\"152\":2,\"153\":1,\"211\":2,\"914\":4,\"1117\":2}}],[\"stopasgroup\",{\"1\":{\"564\":1}}],[\"stopwaitsecs\",{\"1\":{\"564\":1}}],[\"stopwaitsecs=10\",{\"1\":{\"564\":3}}],[\"stopsignal\",{\"1\":{\"564\":1}}],[\"stopsignal=kill\",{\"1\":{\"564\":1}}],[\"stopsignal=quit\",{\"1\":{\"564\":2}}],[\"stopsignal=int\",{\"1\":{\"547\":1}}],[\"stop都不会载入最新的配置文\",{\"1\":{\"564\":1}}],[\"stop\",{\"1\":{\"564\":4,\"811\":2,\"852\":1,\"899\":1,\"911\":1,\"1020\":1,\"1109\":4}}],[\"stopped\",{\"1\":{\"454\":1}}],[\"stusio\",{\"1\":{\"962\":1}}],[\"stulzq\",{\"1\":{\"666\":1}}],[\"stub\",{\"1\":{\"207\":1}}],[\"study\",{\"1\":{\"660\":1}}],[\"studio非常出色\",{\"1\":{\"987\":1}}],[\"studio会尝试使用上述相同的启发式方法来查找它附加到的所有进程\",{\"1\":{\"983\":1}}],[\"studio会记住它\",{\"1\":{\"983\":1}}],[\"studio将尝试查找和前一个进程名具有相同名称的单进程\",{\"1\":{\"983\":1}}],[\"studio没有安装扩展\",{\"1\":{\"974\":1}}],[\"studio调试器附加到进程并且程序被调试器暂停时可用\",{\"1\":{\"982\":1}}],[\"studio调试效率技巧\",{\"1\":{\"974\":1}}],[\"studio调试工具提供了更多的功能\",{\"1\":{\"974\":1}}],[\"studio开发过程中\",{\"1\":{\"965\":1}}],[\"studio进行开发\",{\"1\":{\"961\":1}}],[\"studio是最流行的windows平台应用程序集成开发环境\",{\"1\":{\"957\":1}}],[\"studio\",{\"1\":{\"173\":1,\"321\":2,\"585\":1,\"955\":1,\"956\":1,\"962\":2,\"963\":4,\"964\":7,\"965\":1,\"968\":9,\"970\":1,\"973\":2,\"974\":1,\"983\":1,\"986\":1,\"1037\":1}}],[\"studen\",{\"1\":{\"102\":2}}],[\"strategy\",{\"1\":{\"914\":1}}],[\"strarr\",{\"1\":{\"124\":7,\"125\":3}}],[\"stripped\",{\"1\":{\"779\":1}}],[\"strip\",{\"1\":{\"564\":2}}],[\"stringcontent\",{\"1\":{\"609\":1,\"617\":1,\"622\":1,\"632\":1}}],[\"stringify\",{\"1\":{\"603\":2,\"608\":2,\"612\":1,\"621\":2,\"626\":1,\"631\":1}}],[\"stringassert\",{\"1\":{\"596\":1}}],[\"string>\",{\"1\":{\"583\":2,\"600\":1,\"604\":1,\"609\":1,\"613\":3,\"617\":2,\"622\":1,\"627\":1,\"632\":1,\"1061\":4}}],[\"stringenumconverter\",{\"1\":{\"478\":1}}],[\"stringlength\",{\"1\":{\"474\":1,\"475\":1,\"501\":5}}],[\"string222\",{\"1\":{\"421\":1}}],[\"stringvalues\",{\"1\":{\"418\":1}}],[\"string类型的相等运算法遵守值类型的语义\",{\"1\":{\"79\":1}}],[\"string\",{\"0\":{\"79\":1},\"1\":{\"46\":15,\"47\":3,\"48\":3,\"53\":1,\"59\":4,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":5,\"66\":2,\"67\":1,\"68\":1,\"69\":2,\"70\":2,\"72\":3,\"73\":2,\"79\":3,\"81\":6,\"83\":3,\"93\":2,\"94\":4,\"97\":4,\"98\":3,\"99\":1,\"102\":1,\"104\":1,\"106\":4,\"109\":3,\"111\":1,\"112\":1,\"114\":1,\"115\":4,\"120\":4,\"124\":1,\"125\":3,\"127\":2,\"128\":2,\"129\":3,\"130\":2,\"131\":2,\"145\":1,\"156\":3,\"164\":3,\"166\":1,\"167\":1,\"168\":2,\"202\":1,\"204\":1,\"215\":8,\"347\":2,\"359\":1,\"364\":4,\"368\":6,\"371\":2,\"373\":2,\"375\":2,\"376\":1,\"378\":4,\"381\":1,\"386\":1,\"395\":5,\"401\":1,\"402\":6,\"403\":4,\"405\":1,\"418\":1,\"427\":2,\"441\":1,\"442\":3,\"443\":13,\"446\":1,\"447\":2,\"454\":2,\"456\":1,\"462\":2,\"463\":2,\"468\":4,\"471\":1,\"472\":1,\"474\":6,\"475\":6,\"476\":1,\"477\":4,\"483\":2,\"484\":1,\"501\":17,\"506\":3,\"507\":1,\"511\":1,\"522\":2,\"552\":4,\"573\":11,\"574\":1,\"575\":4,\"577\":5,\"583\":7,\"585\":1,\"600\":8,\"604\":2,\"607\":2,\"609\":4,\"611\":1,\"613\":2,\"615\":1,\"617\":1,\"622\":4,\"627\":2,\"632\":4,\"656\":6,\"658\":4,\"661\":3,\"669\":3,\"671\":3,\"673\":1,\"674\":2,\"676\":4,\"677\":3,\"679\":3,\"684\":1,\"691\":5,\"692\":6,\"693\":1,\"739\":10,\"1047\":17,\"1061\":8,\"1063\":1,\"1065\":1}}],[\"strsql2\",{\"1\":{\"528\":2}}],[\"strsql\",{\"1\":{\"511\":2,\"512\":4}}],[\"strlist\",{\"1\":{\"394\":3}}],[\"streamwriter\",{\"1\":{\"692\":2}}],[\"streaming\",{\"1\":{\"667\":3}}],[\"streamreader\",{\"1\":{\"402\":2,\"418\":1,\"421\":1,\"574\":1}}],[\"stream\",{\"1\":{\"202\":1,\"210\":1,\"418\":2,\"574\":2,\"577\":2,\"674\":1,\"676\":1,\"679\":2,\"711\":3}}],[\"str3\",{\"1\":{\"129\":2}}],[\"str2\",{\"1\":{\"129\":1}}],[\"str\",{\"1\":{\"65\":1,\"129\":3,\"204\":1,\"394\":1,\"401\":2,\"692\":2,\"1051\":1,\"1053\":2,\"1055\":2,\"1058\":2,\"1060\":2}}],[\"struct\",{\"1\":{\"46\":2,\"75\":1,\"76\":1,\"400\":1}}],[\"staging\",{\"1\":{\"1121\":1}}],[\"staging和master\",{\"1\":{\"1121\":1}}],[\"stage是一个逻辑分组的概念\",{\"1\":{\"879\":1}}],[\"staged\",{\"1\":{\"768\":1}}],[\"stage或者index\",{\"1\":{\"23\":1}}],[\"stage\",{\"1\":{\"8\":1,\"874\":1,\"879\":1}}],[\"stages\",{\"1\":{\"8\":1}}],[\"stamp\",{\"1\":{\"968\":1}}],[\"stable\",{\"1\":{\"905\":2}}],[\"staff\",{\"1\":{\"777\":4,\"779\":2}}],[\"stay\",{\"1\":{\"564\":1}}],[\"stackoverflow\",{\"1\":{\"599\":1}}],[\"stackoverflow加速\",{\"1\":{\"334\":1}}],[\"stacktrace\",{\"1\":{\"413\":2}}],[\"stackexchangeredis\",{\"1\":{\"381\":1,\"382\":1,\"386\":1,\"387\":1}}],[\"starsize\",{\"1\":{\"1041\":4}}],[\"stars表示要找多少星星以上的\",{\"1\":{\"810\":1}}],[\"stars\",{\"1\":{\"331\":4}}],[\"star\",{\"1\":{\"243\":3}}],[\"startposition\",{\"1\":{\"691\":1}}],[\"startretries\",{\"1\":{\"564\":1}}],[\"startretries=10\",{\"1\":{\"564\":1}}],[\"startretries=3\",{\"1\":{\"564\":3}}],[\"startsecs\",{\"1\":{\"564\":1}}],[\"startsecs=10\",{\"1\":{\"564\":2}}],[\"startingdirectory\",{\"1\":{\"1036\":1}}],[\"starting\",{\"1\":{\"463\":1}}],[\"started\",{\"1\":{\"442\":1,\"456\":1,\"588\":1,\"712\":1,\"985\":2,\"1036\":1}}],[\"startup注入连接数据库操作\",{\"1\":{\"501\":1}}],[\"startup配置\",{\"1\":{\"397\":1}}],[\"startup\",{\"1\":{\"156\":1,\"167\":1,\"203\":1,\"215\":1,\"477\":1,\"501\":1,\"582\":1,\"1019\":1}}],[\"start的仓库\",{\"1\":{\"21\":1}}],[\"starttls\",{\"1\":{\"3\":1,\"36\":1}}],[\"start\",{\"1\":{\"3\":2,\"21\":2,\"22\":5,\"23\":1,\"333\":1,\"541\":1,\"549\":1,\"564\":12,\"777\":1,\"811\":2,\"852\":1,\"862\":1,\"907\":1,\"909\":1,\"911\":1,\"1020\":1,\"1108\":1,\"1109\":3}}],[\"standard区别\",{\"1\":{\"141\":1}}],[\"standard规范的\",{\"1\":{\"141\":1}}],[\"standard\",{\"0\":{\"141\":1},\"1\":{\"141\":1,\"1127\":2}}],[\"statisticaldate也会被更新成所赋的值\",{\"1\":{\"1043\":1}}],[\"statisticaldate\",{\"1\":{\"1041\":12,\"1042\":1,\"1043\":4}}],[\"staticfile\",{\"0\":{\"1164\":1}}],[\"staticfiles方法\",{\"1\":{\"580\":1}}],[\"staticfiles\",{\"1\":{\"580\":2}}],[\"staticfileoptions\",{\"1\":{\"579\":1,\"580\":1}}],[\"static\",{\"1\":{\"44\":1,\"46\":2,\"49\":1,\"51\":1,\"56\":1,\"59\":1,\"64\":1,\"68\":2,\"69\":1,\"83\":2,\"94\":4,\"98\":1,\"99\":1,\"102\":1,\"106\":2,\"109\":1,\"112\":1,\"115\":2,\"119\":1,\"129\":2,\"151\":1,\"155\":1,\"165\":3,\"166\":3,\"167\":5,\"215\":2,\"367\":2,\"368\":4,\"375\":1,\"376\":1,\"381\":1,\"386\":1,\"402\":1,\"442\":3,\"447\":1,\"454\":3,\"462\":2,\"463\":3,\"501\":3,\"552\":1,\"574\":2,\"577\":1,\"582\":1,\"583\":5,\"600\":2,\"660\":8,\"661\":4,\"873\":1,\"874\":2,\"965\":1,\"985\":2,\"1045\":1,\"1047\":15,\"1061\":3,\"1107\":1}}],[\"stathread\",{\"1\":{\"660\":1}}],[\"stats驻留内存并无法水平扩展\",{\"1\":{\"204\":1}}],[\"statesaver\",{\"1\":{\"692\":2}}],[\"state\",{\"1\":{\"204\":1,\"243\":1,\"373\":1,\"374\":1,\"375\":1,\"745\":1,\"911\":1,\"1109\":1}}],[\"statc\",{\"1\":{\"98\":1}}],[\"statuslist\",{\"1\":{\"1055\":2,\"1058\":2}}],[\"status=any\",{\"1\":{\"1055\":1}}],[\"statuson\",{\"1\":{\"769\":1}}],[\"status命令查看结果\",{\"1\":{\"768\":1}}],[\"status400badrequest\",{\"1\":{\"477\":1}}],[\"status401unauthorized\",{\"1\":{\"364\":1}}],[\"statuscodes\",{\"1\":{\"364\":1,\"477\":1}}],[\"statuscode\",{\"1\":{\"364\":1,\"427\":1,\"586\":1}}],[\"status指令\",{\"1\":{\"207\":1}}],[\"status和sub\",{\"1\":{\"207\":1}}],[\"status等所有的内容\",{\"1\":{\"175\":1}}],[\"status\",{\"1\":{\"22\":2,\"23\":1,\"151\":4,\"474\":1,\"475\":1,\"564\":2,\"599\":2,\"603\":4,\"608\":1,\"612\":2,\"621\":2,\"626\":2,\"735\":1,\"739\":6,\"768\":1,\"778\":2,\"780\":6,\"782\":1,\"862\":1,\"909\":1,\"914\":1,\"1020\":1,\"1055\":2,\"1058\":3,\"1060\":3,\"1077\":1,\"1108\":1,\"1109\":2}}],[\"safe\",{\"1\":{\"1109\":1}}],[\"sa\",{\"1\":{\"859\":2}}],[\"sayhello\",{\"1\":{\"353\":1}}],[\"saga\",{\"1\":{\"243\":2}}],[\"sam\",{\"1\":{\"1063\":1,\"1064\":1,\"1065\":1,\"1110\":2}}],[\"same\",{\"1\":{\"167\":1,\"564\":2}}],[\"sample2\",{\"1\":{\"577\":1}}],[\"sample1文件夹\",{\"1\":{\"575\":1}}],[\"sample1\",{\"1\":{\"575\":2}}],[\"sample1options\",{\"1\":{\"575\":5}}],[\"sample1来实现短信消息通知的功能\",{\"1\":{\"575\":1}}],[\"sample\",{\"1\":{\"215\":1,\"399\":1,\"564\":4,\"777\":13,\"928\":1}}],[\"sampleclass\",{\"1\":{\"45\":1,\"46\":2}}],[\"samplemethod\",{\"1\":{\"44\":1}}],[\"save保存的是完整的镜像文件\",{\"1\":{\"811\":1}}],[\"savepath\",{\"1\":{\"734\":2}}],[\"savedstate\",{\"1\":{\"692\":8}}],[\"savetofile\",{\"1\":{\"688\":1}}],[\"saveasimage\",{\"1\":{\"687\":1}}],[\"saveformat\",{\"1\":{\"683\":2}}],[\"savechanges\",{\"1\":{\"527\":1}}],[\"savechangesasync\",{\"1\":{\"501\":1,\"526\":1,\"528\":2,\"591\":2}}],[\"save\",{\"1\":{\"40\":1,\"205\":1,\"683\":3,\"688\":1,\"810\":1,\"811\":1,\"868\":1,\"1109\":2}}],[\"surface\",{\"1\":{\"1036\":1}}],[\"sure\",{\"1\":{\"167\":1}}],[\"suo\",{\"1\":{\"799\":2}}],[\"supervisor配置文件详解\",{\"1\":{\"564\":1}}],[\"supervisor会自动的构造一个url\",{\"1\":{\"564\":2}}],[\"supervisor启动这个程序的多个实例\",{\"1\":{\"564\":3}}],[\"supervisor就是用python开发的一套通用的进程管理程序\",{\"1\":{\"564\":1}}],[\"supervisor是一个进程管理工具\",{\"1\":{\"564\":1}}],[\"supervisorctl\",{\"1\":{\"547\":1,\"549\":2,\"564\":4}}],[\"supervisord尝试启动一个程序时尝试的次数\",{\"1\":{\"564\":2}}],[\"supervisord在生成子进程的时候会切换到该目录\",{\"1\":{\"564\":2}}],[\"supervisord\",{\"1\":{\"546\":4,\"548\":2,\"549\":7,\"564\":12}}],[\"supervisor\",{\"0\":{\"548\":1},\"1\":{\"543\":1,\"544\":1,\"545\":2,\"546\":6,\"547\":2,\"548\":1,\"549\":3,\"564\":16}}],[\"suppressmodelstateinvalidfilter\",{\"1\":{\"477\":1}}],[\"suppressflow\",{\"1\":{\"167\":1}}],[\"supports\",{\"1\":{\"1109\":1}}],[\"support\",{\"1\":{\"321\":1,\"577\":1}}],[\"supporteduicultures\",{\"1\":{\"144\":1}}],[\"supportedcultures\",{\"1\":{\"144\":4}}],[\"suidao\",{\"1\":{\"239\":1}}],[\"successtest\",{\"1\":{\"599\":1}}],[\"success\",{\"1\":{\"215\":3,\"405\":2,\"472\":1,\"475\":1,\"577\":1,\"599\":2,\"603\":4,\"608\":2,\"612\":2,\"616\":1,\"621\":2,\"626\":2,\"631\":1,\"693\":2,\"745\":1}}],[\"succeed\",{\"1\":{\"145\":2}}],[\"subtract\",{\"1\":{\"1122\":1}}],[\"subquery\",{\"1\":{\"1055\":2}}],[\"subcategory=all\",{\"1\":{\"967\":1}}],[\"subpath\",{\"1\":{\"914\":1}}],[\"subnet\",{\"1\":{\"843\":2}}],[\"subversion\",{\"1\":{\"776\":1}}],[\"subbutton\",{\"1\":{\"712\":1}}],[\"subsystem\",{\"1\":{\"1007\":2}}],[\"substring\",{\"1\":{\"692\":1}}],[\"substituteapiversioninurl\",{\"1\":{\"494\":1,\"498\":1}}],[\"subscribe\",{\"1\":{\"564\":1}}],[\"subsection\",{\"1\":{\"394\":2,\"564\":2}}],[\"sub\",{\"1\":{\"207\":1,\"209\":1,\"712\":1}}],[\"summary\",{\"1\":{\"737\":1}}],[\"summary<100\",{\"1\":{\"700\":1}}],[\"summary>\",{\"1\":{\"43\":4,\"46\":7,\"48\":3,\"56\":3,\"57\":1,\"58\":1,\"125\":2,\"151\":3,\"215\":2,\"347\":2,\"367\":2,\"368\":12,\"401\":1,\"402\":3,\"405\":2,\"413\":1,\"416\":2,\"418\":1,\"421\":1,\"424\":1,\"427\":2,\"472\":1,\"474\":1,\"475\":3,\"477\":3,\"478\":5,\"483\":4,\"488\":2,\"493\":1,\"497\":1,\"501\":6,\"573\":18,\"574\":2,\"575\":5,\"576\":1,\"577\":3,\"580\":1,\"583\":2,\"585\":2,\"600\":1,\"639\":2,\"645\":2,\"651\":2,\"660\":6,\"661\":1,\"672\":1,\"675\":1,\"676\":1,\"677\":5,\"678\":1,\"680\":1,\"681\":1,\"691\":8,\"693\":1,\"711\":3,\"1047\":9,\"1061\":5}}],[\"sum\",{\"1\":{\"52\":2,\"54\":4,\"55\":3,\"82\":1}}],[\"sudo\",{\"1\":{\"3\":11,\"4\":1,\"8\":5,\"538\":1,\"846\":2,\"847\":1,\"848\":1,\"862\":19,\"868\":1,\"905\":2,\"911\":8,\"949\":2,\"1109\":1,\"1115\":1}}],[\"s\",{\"1\":{\"8\":1,\"125\":1,\"129\":2,\"134\":1,\"151\":4,\"153\":4,\"165\":7,\"204\":2,\"213\":1,\"214\":1,\"241\":1,\"242\":1,\"243\":3,\"529\":1,\"543\":1,\"549\":1,\"564\":8,\"577\":1,\"666\":2,\"681\":1,\"685\":1,\"778\":1,\"780\":6,\"782\":2,\"805\":1,\"846\":2,\"918\":1,\"949\":1,\"965\":1,\"969\":1,\"988\":4,\"1036\":1,\"1056\":2,\"1066\":1,\"1074\":1,\"1079\":1,\"1109\":1,\"1110\":1,\"1119\":1,\"1120\":1,\"1136\":1}}],[\"sonarlint\",{\"1\":{\"968\":1}}],[\"some\",{\"1\":{\"1055\":1}}],[\"something\",{\"1\":{\"949\":1}}],[\"somecachedata\",{\"1\":{\"375\":1}}],[\"soa是一组相互通信的服务\",{\"1\":{\"210\":1}}],[\"soa\",{\"1\":{\"210\":1}}],[\"so\",{\"0\":{\"870\":1},\"1\":{\"167\":1,\"774\":1,\"870\":15,\"985\":1}}],[\"solr\",{\"1\":{\"152\":2}}],[\"solutionerrorvisualizer\",{\"1\":{\"968\":2}}],[\"solutioncolors\",{\"1\":{\"968\":2}}],[\"solution\",{\"1\":{\"321\":1}}],[\"solutionrp\",{\"1\":{\"98\":1}}],[\"solutionzx\",{\"1\":{\"94\":3}}],[\"sortby=installs\",{\"1\":{\"967\":1}}],[\"sorttest\",{\"1\":{\"125\":2}}],[\"sortedlist<string\",{\"1\":{\"125\":2}}],[\"sort\",{\"1\":{\"124\":3,\"125\":1,\"518\":1}}],[\"softonic\",{\"1\":{\"281\":1}}],[\"software\",{\"1\":{\"252\":1,\"692\":1,\"769\":1,\"988\":1,\"1031\":2}}],[\"soft参数用于回退到某个版本\",{\"1\":{\"30\":1}}],[\"soft\",{\"0\":{\"30\":1,\"1145\":1},\"1\":{\"29\":1,\"30\":2,\"36\":1,\"37\":1,\"1079\":1}}],[\"socks\",{\"1\":{\"322\":4}}],[\"socksv5\",{\"1\":{\"322\":2}}],[\"socks协议等\",{\"1\":{\"308\":1}}],[\"sockets\",{\"1\":{\"325\":1,\"1074\":1}}],[\"socket\",{\"1\":{\"243\":1,\"322\":1,\"564\":5}}],[\"socket和signal\",{\"1\":{\"203\":1}}],[\"sock\",{\"1\":{\"8\":1,\"564\":2,\"853\":2,\"871\":2,\"885\":4,\"886\":2}}],[\"sock设置权限\",{\"1\":{\"8\":1}}],[\"source3\",{\"1\":{\"1079\":1,\"1080\":1}}],[\"source2\",{\"1\":{\"1079\":1,\"1080\":1}}],[\"source1\",{\"1\":{\"1079\":1,\"1080\":1}}],[\"sourcegraph\",{\"0\":{\"1004\":1}}],[\"sourcetree\",{\"1\":{\"802\":1,\"1014\":1}}],[\"sources\",{\"1\":{\"468\":1,\"583\":1}}],[\"source=agile\",{\"1\":{\"661\":1}}],[\"source=\",{\"1\":{\"211\":1,\"1048\":1,\"1050\":1,\"1117\":1}}],[\"source\",{\"1\":{\"3\":1,\"243\":1,\"822\":1,\"986\":1,\"1036\":1,\"1079\":1,\"1080\":1,\"1136\":1}}],[\"s`\",{\"1\":{\"3\":1,\"899\":1}}],[\"semver\",{\"1\":{\"1070\":1,\"1130\":1}}],[\"semodule\",{\"1\":{\"949\":1}}],[\"segment来实现版本控制\",{\"0\":{\"643\":1}}],[\"segement\",{\"1\":{\"204\":1}}],[\"senparcweixinsetting\",{\"1\":{\"710\":4,\"711\":2,\"712\":1}}],[\"senparcsetting\",{\"1\":{\"710\":2}}],[\"senparc\",{\"1\":{\"710\":7,\"711\":1}}],[\"sendtextasync\",{\"1\":{\"711\":1}}],[\"send\",{\"1\":{\"694\":1}}],[\"sendmessdatavm\",{\"1\":{\"694\":1}}],[\"sendmessagevm\",{\"1\":{\"694\":1}}],[\"sendmsg\",{\"1\":{\"575\":6,\"576\":3}}],[\"sender\",{\"1\":{\"660\":1,\"691\":8}}],[\"sendgrid\",{\"1\":{\"152\":2}}],[\"sent\",{\"1\":{\"564\":1}}],[\"separated\",{\"1\":{\"564\":1}}],[\"separate\",{\"1\":{\"564\":1}}],[\"see\",{\"1\":{\"774\":1}}],[\"seedasync\",{\"1\":{\"501\":3}}],[\"seekorigin\",{\"1\":{\"402\":2,\"418\":2,\"421\":2}}],[\"seek\",{\"1\":{\"402\":2,\"418\":2,\"421\":2}}],[\"seo\",{\"1\":{\"322\":1}}],[\"search\",{\"1\":{\"211\":1,\"253\":1,\"739\":1,\"810\":1,\"967\":1,\"1008\":1,\"1036\":1,\"1117\":1}}],[\"sealed\",{\"1\":{\"49\":1,\"167\":1,\"168\":1}}],[\"secs\",{\"1\":{\"564\":2}}],[\"sections\",{\"1\":{\"564\":4,\"583\":7}}],[\"section\",{\"1\":{\"474\":1,\"475\":1,\"564\":5,\"1061\":3}}],[\"section2\",{\"1\":{\"394\":1}}],[\"seconds\",{\"1\":{\"427\":8,\"442\":1,\"863\":1,\"871\":1}}],[\"securityprotocol\",{\"1\":{\"1008\":2}}],[\"securityscheme\",{\"1\":{\"484\":1}}],[\"securityschemetype\",{\"1\":{\"484\":1}}],[\"security\",{\"1\":{\"484\":1,\"965\":1,\"968\":2}}],[\"securitytokenexpiredexception\",{\"1\":{\"364\":1}}],[\"securityalgorithms\",{\"1\":{\"364\":1}}],[\"secure\",{\"1\":{\"211\":1,\"325\":1,\"1117\":1}}],[\"secret分别填入此处\",{\"1\":{\"954\":1}}],[\"secret可以以volume或者环境变量的方式使用\",{\"1\":{\"914\":1}}],[\"secrets\",{\"1\":{\"888\":2,\"910\":1,\"914\":2,\"1070\":14}}],[\"secret\",{\"1\":{\"211\":1,\"364\":3,\"661\":4,\"694\":1,\"710\":1,\"914\":1,\"954\":1,\"1117\":1}}],[\"session设置\",{\"0\":{\"369\":1}}],[\"session键\",{\"1\":{\"368\":1}}],[\"session\",{\"0\":{\"365\":1},\"1\":{\"209\":1,\"366\":5,\"367\":2,\"368\":2,\"369\":1,\"503\":1,\"918\":1}}],[\"selinux一共有三种状态\",{\"1\":{\"947\":1}}],[\"selinux\",{\"1\":{\"543\":2,\"948\":2,\"949\":1}}],[\"selector\",{\"1\":{\"914\":1,\"918\":3,\"923\":1,\"930\":1,\"942\":1}}],[\"selectors\",{\"1\":{\"656\":2}}],[\"selecteditem\",{\"1\":{\"691\":2}}],[\"selectedindexchanged\",{\"1\":{\"691\":1}}],[\"selectedindex\",{\"1\":{\"691\":1}}],[\"selected\",{\"1\":{\"691\":8}}],[\"selection\",{\"1\":{\"394\":3,\"1036\":2}}],[\"select\",{\"1\":{\"120\":2,\"151\":2,\"206\":3,\"342\":2,\"343\":4,\"503\":7,\"509\":1,\"511\":2,\"512\":3,\"513\":2,\"518\":3,\"519\":2,\"520\":3,\"522\":3,\"524\":4,\"525\":1,\"574\":1,\"600\":2,\"691\":3,\"1047\":1,\"1050\":1,\"1053\":1,\"1055\":1,\"1056\":1,\"1058\":1,\"1060\":2}}],[\"self\",{\"1\":{\"3\":1}}],[\"sex=4\",{\"1\":{\"674\":1,\"676\":1}}],[\"sex=3\",{\"1\":{\"671\":1,\"679\":1}}],[\"sexenum\",{\"1\":{\"591\":2}}],[\"sex\",{\"1\":{\"48\":1,\"56\":5,\"57\":3,\"58\":1,\"59\":2,\"72\":3,\"73\":2,\"127\":2,\"128\":5,\"130\":1,\"131\":4,\"591\":2,\"600\":2,\"607\":1,\"608\":1,\"609\":1,\"620\":2,\"621\":1,\"622\":1,\"672\":1,\"675\":1,\"677\":7,\"680\":2,\"681\":6}}],[\"sercert\",{\"1\":{\"914\":1}}],[\"serial\",{\"1\":{\"564\":1}}],[\"serializetoxmlfile\",{\"1\":{\"691\":1}}],[\"serializersettings\",{\"1\":{\"478\":3}}],[\"serializer\",{\"1\":{\"478\":4}}],[\"serializeobject\",{\"1\":{\"128\":1,\"394\":1,\"404\":1,\"511\":1,\"512\":1,\"513\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":1,\"523\":1,\"524\":2,\"585\":2,\"587\":1,\"591\":1,\"609\":1,\"622\":2,\"632\":1,\"1053\":1,\"1058\":1}}],[\"serialized\",{\"1\":{\"45\":1}}],[\"serialization\",{\"1\":{\"404\":1}}],[\"serializated\",{\"1\":{\"45\":1}}],[\"serializable特性表明了应用的元素可以被序列化\",{\"1\":{\"45\":1}}],[\"serializable\",{\"0\":{\"45\":1},\"1\":{\"45\":1}}],[\"serilogs\",{\"1\":{\"462\":1}}],[\"serilog也提供对文件\",{\"1\":{\"457\":1}}],[\"serilog\",{\"0\":{\"457\":1},\"1\":{\"448\":1,\"457\":12,\"461\":2,\"462\":1,\"466\":2}}],[\"serveunknownfiletypes\",{\"1\":{\"579\":1}}],[\"serve\",{\"1\":{\"151\":1}}],[\"serverport\",{\"1\":{\"1070\":2}}],[\"serverpassword\",{\"1\":{\"1070\":2}}],[\"serverusername\",{\"1\":{\"1070\":2}}],[\"serverurl\",{\"1\":{\"564\":2}}],[\"serverurl=auto\",{\"1\":{\"564\":2}}],[\"serverurl=http\",{\"1\":{\"564\":1}}],[\"serverurl=unix\",{\"1\":{\"564\":1}}],[\"serverhost\",{\"1\":{\"1070\":2}}],[\"server=47\",{\"1\":{\"1048\":1}}],[\"server=db\",{\"1\":{\"1047\":2}}],[\"server=localhost\",{\"1\":{\"661\":1}}],[\"server下\",{\"1\":{\"880\":1}}],[\"servercallcontext\",{\"1\":{\"672\":1,\"675\":1,\"677\":1,\"680\":1}}],[\"serverversion\",{\"1\":{\"501\":1,\"502\":1}}],[\"servername=192\",{\"1\":{\"217\":1}}],[\"server的工作性质决定了每个request的大部份生命都是在网络传输中\",{\"1\":{\"207\":1}}],[\"server\",{\"1\":{\"132\":1,\"152\":2,\"207\":1,\"211\":1,\"380\":1,\"385\":1,\"543\":1,\"559\":1,\"560\":2,\"563\":1,\"564\":2,\"585\":4,\"586\":1,\"587\":1,\"667\":1,\"672\":4,\"817\":1,\"853\":1,\"856\":1,\"859\":2,\"865\":2,\"867\":1,\"870\":3,\"880\":1,\"941\":2,\"944\":1,\"1008\":1,\"1012\":6,\"1048\":1,\"1117\":1}}],[\"servicepointmanager\",{\"1\":{\"1008\":2}}],[\"serviceport\",{\"1\":{\"931\":4}}],[\"serviceproviderhelper\",{\"1\":{\"660\":4}}],[\"serviceprovider\",{\"1\":{\"165\":1,\"353\":1,\"354\":2,\"355\":1,\"367\":3,\"368\":1,\"501\":1,\"660\":11,\"711\":3}}],[\"servicename\",{\"1\":{\"931\":4}}],[\"service一样由\",{\"1\":{\"919\":1}}],[\"service有三种类型\",{\"1\":{\"918\":1}}],[\"service的类型\",{\"1\":{\"918\":1}}],[\"serviceaccount\",{\"1\":{\"914\":1}}],[\"service和pod的ip仅可在集群内部访问\",{\"1\":{\"914\":1}}],[\"service通过标签\",{\"1\":{\"914\":1}}],[\"service是对一组提供相同功能的pods的抽象\",{\"1\":{\"914\":1}}],[\"service=http\",{\"1\":{\"911\":1}}],[\"servicetwo\",{\"1\":{\"672\":1,\"673\":1}}],[\"service文件\",{\"1\":{\"549\":1}}],[\"servicefilter有一个属性叫isreusable\",{\"1\":{\"409\":1}}],[\"servicefilterattribute并没有这属性\",{\"1\":{\"410\":1}}],[\"servicefilterattribute\",{\"0\":{\"409\":1}}],[\"servicefilter\",{\"1\":{\"400\":1,\"401\":1,\"409\":2}}],[\"serviceresult\",{\"1\":{\"364\":1}}],[\"servicecollection\",{\"1\":{\"354\":1,\"660\":1}}],[\"service方法里面添加session\",{\"1\":{\"203\":1}}],[\"servicedescriptor\",{\"1\":{\"165\":4,\"344\":1}}],[\"service\",{\"0\":{\"918\":1,\"937\":1,\"938\":1,\"1162\":1,\"1172\":1},\"1\":{\"38\":1,\"152\":2,\"247\":1,\"351\":5,\"353\":2,\"549\":4,\"575\":1,\"585\":2,\"658\":1,\"660\":2,\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1,\"909\":1,\"911\":4,\"914\":9,\"918\":4,\"919\":2,\"920\":1,\"923\":3,\"930\":2,\"931\":3,\"932\":1,\"936\":2,\"937\":8,\"938\":2,\"939\":3,\"941\":9,\"942\":9,\"943\":3,\"944\":10,\"945\":7,\"1018\":1,\"1019\":2,\"1107\":1,\"1109\":5}}],[\"servicescopefactory\",{\"1\":{\"355\":5}}],[\"services\",{\"1\":{\"3\":1,\"36\":1,\"125\":1,\"143\":1,\"150\":3,\"151\":3,\"153\":4,\"155\":3,\"156\":2,\"164\":2,\"165\":30,\"344\":8,\"345\":1,\"346\":1,\"347\":1,\"349\":2,\"352\":1,\"359\":2,\"364\":1,\"366\":2,\"367\":3,\"368\":3,\"369\":3,\"371\":3,\"373\":3,\"377\":3,\"378\":1,\"382\":3,\"387\":3,\"397\":1,\"400\":1,\"408\":1,\"409\":1,\"413\":1,\"416\":1,\"418\":1,\"421\":1,\"424\":2,\"472\":1,\"477\":2,\"478\":1,\"481\":3,\"483\":1,\"484\":1,\"494\":6,\"498\":5,\"501\":5,\"502\":3,\"559\":1,\"573\":2,\"574\":5,\"575\":5,\"576\":5,\"583\":1,\"585\":1,\"587\":1,\"600\":5,\"638\":1,\"644\":1,\"650\":1,\"655\":1,\"660\":9,\"669\":2,\"670\":3,\"672\":1,\"673\":1,\"694\":1,\"710\":1,\"796\":1,\"852\":1,\"886\":1,\"914\":3,\"1070\":1,\"1109\":1}}],[\"settypemap\",{\"1\":{\"1061\":3}}],[\"settings\",{\"1\":{\"203\":1,\"457\":1,\"585\":2,\"876\":1}}],[\"setting=\",{\"1\":{\"38\":1}}],[\"setting\",{\"1\":{\"3\":1,\"38\":1,\"404\":2,\"564\":2}}],[\"setbasepath\",{\"1\":{\"574\":1,\"576\":1,\"582\":1,\"583\":1,\"661\":1}}],[\"setuid\",{\"1\":{\"564\":1}}],[\"setuplog\",{\"1\":{\"692\":1}}],[\"setupattribute\",{\"1\":{\"597\":1}}],[\"setuptoolseasy\",{\"1\":{\"545\":1}}],[\"setup\",{\"1\":{\"167\":1,\"454\":1,\"591\":8}}],[\"set<userinfor>\",{\"1\":{\"503\":1}}],[\"set<user>\",{\"1\":{\"501\":4,\"503\":2,\"504\":2,\"506\":1,\"507\":1,\"511\":1,\"512\":2,\"513\":1}}],[\"setmenuitem\",{\"1\":{\"691\":2}}],[\"setmodifyer\",{\"1\":{\"501\":2}}],[\"setminimumlevel\",{\"1\":{\"454\":1}}],[\"setcreater\",{\"1\":{\"501\":2}}],[\"setasync\",{\"1\":{\"382\":1,\"387\":1}}],[\"setstringasync\",{\"1\":{\"382\":1,\"387\":1}}],[\"setstring\",{\"1\":{\"366\":1,\"367\":1,\"381\":3,\"386\":3}}],[\"setkeywords\",{\"1\":{\"215\":1}}],[\"setpropertybyname\",{\"1\":{\"215\":2}}],[\"setnx\",{\"1\":{\"209\":3}}],[\"setroutingandcontinue\",{\"1\":{\"167\":4}}],[\"setendpoint\",{\"1\":{\"157\":1}}],[\"setisoriginallowed\",{\"1\":{\"155\":1}}],[\"setvalue\",{\"1\":{\"111\":1,\"112\":1,\"115\":1,\"120\":2,\"128\":1,\"215\":1,\"692\":4}}],[\"set访问器\",{\"1\":{\"59\":1}}],[\"set\",{\"1\":{\"3\":2,\"46\":3,\"47\":3,\"48\":3,\"59\":3,\"62\":1,\"63\":1,\"66\":1,\"69\":1,\"70\":1,\"72\":2,\"73\":2,\"98\":1,\"112\":1,\"120\":6,\"127\":2,\"128\":2,\"130\":2,\"131\":2,\"205\":1,\"209\":1,\"215\":2,\"366\":1,\"368\":7,\"371\":2,\"372\":4,\"373\":3,\"375\":1,\"376\":1,\"378\":1,\"395\":5,\"424\":1,\"427\":3,\"472\":2,\"474\":4,\"475\":5,\"477\":2,\"501\":10,\"502\":2,\"527\":2,\"543\":3,\"564\":2,\"573\":11,\"575\":1,\"583\":1,\"600\":3,\"607\":3,\"660\":1,\"677\":4,\"691\":7,\"742\":3,\"774\":3,\"777\":1,\"914\":1,\"1008\":3,\"1036\":1,\"1061\":4}}],[\"shuffledtempdate是必须的用来确认是那个库表\",{\"1\":{\"1044\":1}}],[\"shuffledtempdate=new\",{\"1\":{\"1043\":1}}],[\"shuffledtempdate\",{\"1\":{\"1041\":3,\"1043\":2,\"1044\":3}}],[\"shutdown\",{\"1\":{\"454\":1,\"549\":1,\"564\":1}}],[\"shrink\",{\"1\":{\"968\":1}}],[\"sheng\",{\"1\":{\"1123\":1}}],[\"sheet\",{\"1\":{\"341\":1}}],[\"shell\",{\"1\":{\"3\":1,\"36\":1,\"38\":2,\"692\":1,\"908\":1,\"1036\":2,\"1105\":1}}],[\"shi\",{\"1\":{\"1123\":1}}],[\"shift\",{\"1\":{\"1110\":1}}],[\"shift+f11\",{\"1\":{\"974\":1}}],[\"shift+方向键\",{\"1\":{\"965\":1}}],[\"shift+home\",{\"1\":{\"965\":1}}],[\"shift+alt+f10\",{\"1\":{\"965\":1}}],[\"shift+alt+f\",{\"1\":{\"321\":1}}],[\"shift+喷漆桶\",{\"1\":{\"254\":1}}],[\"shields\",{\"1\":{\"340\":1}}],[\"shinima\",{\"1\":{\"243\":2}}],[\"sha\",{\"1\":{\"1035\":6}}],[\"shasum\",{\"1\":{\"779\":2}}],[\"sha512\",{\"1\":{\"779\":1}}],[\"sha256\",{\"1\":{\"779\":1}}],[\"sha1\",{\"0\":{\"779\":1},\"1\":{\"778\":4,\"779\":3,\"1034\":4}}],[\"shanfeng1000\",{\"1\":{\"484\":1}}],[\"shanghai\",{\"1\":{\"3\":1,\"36\":1,\"217\":1,\"857\":1,\"858\":1,\"886\":1}}],[\"shapesquare\",{\"1\":{\"442\":2}}],[\"shaperectangle\",{\"1\":{\"442\":2}}],[\"shapecircle\",{\"1\":{\"442\":2}}],[\"shape3\",{\"1\":{\"442\":2}}],[\"shape2\",{\"1\":{\"442\":2}}],[\"shape1\",{\"1\":{\"442\":2}}],[\"shapetype\",{\"1\":{\"441\":5}}],[\"shapefactory\",{\"1\":{\"441\":2,\"442\":11}}],[\"shape\",{\"1\":{\"439\":2,\"440\":3,\"441\":2,\"442\":15}}],[\"shareproto\",{\"1\":{\"672\":1,\"673\":1}}],[\"share\",{\"1\":{\"577\":2,\"712\":1}}],[\"shared\",{\"1\":{\"404\":1,\"873\":1,\"874\":1}}],[\"sharma\",{\"1\":{\"211\":2,\"1117\":2}}],[\"sharding\",{\"1\":{\"205\":1}}],[\"shard\",{\"1\":{\"205\":5}}],[\"shopid\",{\"1\":{\"1042\":1}}],[\"shopname\",{\"1\":{\"1041\":4,\"1042\":1,\"1043\":3,\"1044\":1}}],[\"shouji\",{\"1\":{\"728\":1}}],[\"should\",{\"1\":{\"211\":1,\"564\":2,\"1117\":1}}],[\"showintaskbar\",{\"1\":{\"691\":1}}],[\"showprepared\",{\"1\":{\"691\":1}}],[\"showdialog\",{\"1\":{\"691\":4}}],[\"shows\",{\"1\":{\"564\":3}}],[\"show\",{\"1\":{\"94\":2,\"98\":3,\"99\":3,\"102\":1,\"105\":2,\"660\":1,\"691\":3,\"738\":2,\"839\":1,\"852\":1}}],[\"short\",{\"1\":{\"74\":1,\"75\":1,\"446\":1,\"914\":1}}],[\"sh\",{\"1\":{\"3\":1,\"4\":1}}],[\"0a998ec441b8\",{\"1\":{\"1036\":1}}],[\"0ac9638\",{\"1\":{\"782\":1}}],[\"0caa0dad\",{\"1\":{\"1036\":1}}],[\"0cmmi81xyjc\",{\"1\":{\"666\":1}}],[\"0d24bc94b84c51438f820405dda8ff61f6f891e7\",{\"1\":{\"1034\":1}}],[\"08d8f230e516523ad80b9a8f69adea6f77f2836a文件大小\",{\"1\":{\"1035\":1}}],[\"08\",{\"1\":{\"873\":1,\"874\":1,\"1123\":1}}],[\"0就是tag\",{\"1\":{\"835\":1}}],[\"0hello\",{\"1\":{\"778\":1,\"779\":2}}],[\"0e41234f24b6da002d962a26c2495ea16a425f\",{\"1\":{\"779\":6}}],[\"0e41\",{\"1\":{\"778\":1}}],[\"0学习版下载地址\",{\"1\":{\"693\":1}}],[\"0学习版较为古老\",{\"1\":{\"693\":1}}],[\"0以后\",{\"1\":{\"600\":1}}],[\"0以后的通用pe工具箱不是原作者的作品\",{\"1\":{\"267\":1}}],[\"0<\",{\"1\":{\"577\":1,\"585\":1,\"1037\":1,\"1122\":2,\"1123\":2,\"1126\":1}}],[\"09\",{\"1\":{\"873\":1}}],[\"093\",{\"1\":{\"863\":1}}],[\"09t15\",{\"1\":{\"501\":2}}],[\"09f243768cf6\",{\"1\":{\"20\":1}}],[\"054c741ded8989f4d0d419946eb37182f20e4482文件大小\",{\"1\":{\"1035\":1}}],[\"05\",{\"1\":{\"501\":2,\"511\":3,\"512\":1,\"513\":1,\"870\":6,\"1035\":6,\"1043\":3,\"1044\":1}}],[\"0的接口\",{\"1\":{\"494\":1,\"498\":1}}],[\"0之前版本用法\",{\"1\":{\"481\":1}}],[\"0之后不允许origin和credentials都不做限制\",{\"1\":{\"155\":1}}],[\"0之后支持了c\",{\"1\":{\"140\":1}}],[\"06\",{\"1\":{\"475\":1}}],[\"04\",{\"1\":{\"421\":1,\"442\":1,\"739\":2,\"868\":1,\"870\":3,\"1035\":6}}],[\"07\",{\"1\":{\"421\":1,\"564\":1,\"873\":1}}],[\"00ff00\",{\"1\":{\"1036\":1}}],[\"00e5e5\",{\"1\":{\"1036\":1}}],[\"00d900\",{\"1\":{\"1036\":1}}],[\"00a6b2\",{\"1\":{\"1036\":1}}],[\"00a600\",{\"1\":{\"1036\":1}}],[\"009a87ff44bf\",{\"1\":{\"1036\":2}}],[\"0080元\",{\"1\":{\"694\":1}}],[\"001\",{\"1\":{\"661\":1}}],[\"00\",{\"1\":{\"421\":1,\"474\":2,\"475\":2,\"564\":1,\"688\":1,\"946\":2}}],[\"0000ff\",{\"1\":{\"1036\":1}}],[\"000000\",{\"1\":{\"1036\":1}}],[\"000\",{\"1\":{\"207\":1,\"208\":1}}],[\"021\",{\"1\":{\"688\":1}}],[\"022\",{\"1\":{\"564\":1}}],[\"02\",{\"1\":{\"421\":1,\"866\":1,\"867\":1,\"868\":1,\"870\":5}}],[\"02filter>\",{\"1\":{\"404\":2}}],[\"02filter\",{\"1\":{\"402\":1,\"403\":2,\"404\":2,\"405\":1}}],[\"03eab28e9f22a41cf9cff59dbbf8855c\",{\"1\":{\"1034\":1}}],[\"030aa6fcd7f3\",{\"1\":{\"811\":2}}],[\"03\",{\"1\":{\"804\":1,\"867\":1,\"868\":1,\"870\":1,\"873\":1,\"1043\":1}}],[\"03filter\",{\"1\":{\"403\":2}}],[\"033\",{\"1\":{\"3\":16}}],[\"013b5bc\",{\"1\":{\"769\":1}}],[\"011\",{\"1\":{\"564\":1}}],[\"01asyncfilter\",{\"1\":{\"401\":2}}],[\"01filter>\",{\"1\":{\"401\":4,\"402\":2,\"403\":6,\"404\":2}}],[\"01filter\",{\"1\":{\"400\":3,\"401\":4,\"402\":2,\"403\":2,\"404\":2,\"405\":2}}],[\"01\",{\"1\":{\"331\":4,\"866\":1,\"867\":1,\"868\":1,\"870\":1,\"874\":1,\"1041\":6,\"1043\":4,\"1044\":3,\"1122\":2}}],[\"01b42\",{\"1\":{\"32\":1}}],[\"0同一个位置\",{\"1\":{\"125\":1}}],[\"0x00007f307cfc6000\",{\"1\":{\"870\":1}}],[\"0x00007f307d8b9000\",{\"1\":{\"870\":1}}],[\"0x00007f307d38c000\",{\"1\":{\"870\":1}}],[\"0x00007f307d5aa000\",{\"1\":{\"870\":1}}],[\"0x00007fffde365000\",{\"1\":{\"870\":1}}],[\"0x00000804\",{\"1\":{\"124\":1}}],[\"0x00020804\",{\"1\":{\"124\":1}}],[\"0f\",{\"1\":{\"76\":1}}],[\"0\",{\"0\":{\"251\":1},\"1\":{\"46\":2,\"57\":1,\"81\":2,\"99\":2,\"105\":3,\"109\":1,\"125\":3,\"148\":1,\"152\":2,\"153\":3,\"204\":1,\"209\":2,\"213\":1,\"243\":1,\"247\":3,\"253\":1,\"267\":1,\"364\":1,\"368\":1,\"371\":2,\"373\":1,\"377\":1,\"381\":1,\"382\":2,\"386\":1,\"387\":1,\"391\":1,\"392\":1,\"393\":1,\"394\":1,\"402\":4,\"410\":1,\"418\":4,\"421\":5,\"442\":1,\"446\":2,\"447\":3,\"453\":1,\"459\":1,\"466\":1,\"468\":1,\"470\":1,\"472\":1,\"474\":6,\"475\":4,\"477\":4,\"484\":1,\"486\":2,\"488\":2,\"494\":2,\"498\":2,\"500\":1,\"501\":8,\"511\":1,\"512\":1,\"522\":1,\"538\":1,\"541\":1,\"562\":1,\"563\":1,\"564\":5,\"577\":1,\"585\":3,\"599\":1,\"600\":5,\"616\":1,\"629\":1,\"635\":2,\"636\":1,\"638\":1,\"639\":1,\"644\":1,\"645\":2,\"648\":1,\"650\":1,\"651\":1,\"655\":1,\"656\":2,\"660\":2,\"666\":1,\"669\":1,\"670\":3,\"672\":1,\"673\":3,\"675\":1,\"677\":2,\"681\":2,\"683\":3,\"684\":1,\"687\":1,\"688\":13,\"690\":1,\"691\":5,\"692\":1,\"693\":2,\"710\":1,\"711\":1,\"746\":4,\"763\":1,\"777\":3,\"779\":1,\"788\":1,\"802\":4,\"821\":2,\"835\":1,\"843\":6,\"865\":2,\"867\":2,\"870\":6,\"914\":4,\"918\":2,\"925\":31,\"926\":2,\"943\":4,\"968\":1,\"970\":2,\"985\":3,\"1008\":1,\"1012\":2,\"1036\":1,\"1037\":4,\"1047\":2,\"1048\":1,\"1070\":3,\"1079\":1,\"1081\":4,\"1084\":5,\"1085\":1,\"1107\":1,\"1110\":7,\"1112\":2,\"1119\":1,\"1121\":4,\"1122\":1,\"1123\":1,\"1126\":11,\"1127\":8,\"1129\":1,\"1130\":10,\"1131\":26,\"1136\":2}}],[\"0ms\",{\"1\":{\"524\":1}}],[\"0m\",{\"1\":{\"3\":8,\"76\":1}}],[\"eula=y\",{\"1\":{\"859\":2}}],[\"eurka\",{\"1\":{\"210\":1}}],[\"ebugpublic\",{\"1\":{\"800\":1}}],[\"ebug\",{\"1\":{\"800\":1}}],[\"e7\",{\"1\":{\"702\":1}}],[\"e4\",{\"1\":{\"702\":1}}],[\"e6005be37a8a<\",{\"1\":{\"1037\":1}}],[\"e6\",{\"1\":{\"700\":1}}],[\"e8\",{\"1\":{\"700\":1}}],[\"e8976d0a\",{\"1\":{\"501\":1}}],[\"e5e5e5\",{\"1\":{\"1036\":1}}],[\"e5e500\",{\"1\":{\"1036\":1}}],[\"e500e5\",{\"1\":{\"1036\":1}}],[\"e50000\",{\"1\":{\"1036\":1}}],[\"e5\",{\"1\":{\"700\":1}}],[\"e9\",{\"1\":{\"700\":1}}],[\"ed2k\",{\"1\":{\"1035\":6}}],[\"editor\",{\"1\":{\"968\":1}}],[\"editorconfig\",{\"0\":{\"955\":1},\"1\":{\"955\":8,\"956\":6}}],[\"editions\",{\"1\":{\"1034\":8,\"1035\":4}}],[\"edition\",{\"1\":{\"804\":2,\"1034\":4}}],[\"edit\",{\"1\":{\"777\":1,\"914\":1}}],[\"edge全都支持\",{\"1\":{\"690\":1}}],[\"education\",{\"1\":{\"1035\":4}}],[\"edu\",{\"1\":{\"3\":1,\"892\":1,\"1114\":1}}],[\"ee\",{\"1\":{\"558\":1,\"804\":1}}],[\"eee\",{\"1\":{\"342\":1}}],[\"effect评估\",{\"1\":{\"984\":1}}],[\"effect支持如下三个选项\",{\"1\":{\"914\":1}}],[\"effect\",{\"0\":{\"984\":1},\"1\":{\"914\":1,\"984\":1}}],[\"ef只是实现orm框架中的一种\",{\"1\":{\"529\":1}}],[\"ef是以adonet为基础所发展出来的对象关系\",{\"1\":{\"529\":1}}],[\"ef\",{\"1\":{\"501\":2,\"514\":1,\"523\":1,\"528\":1,\"529\":1,\"548\":1,\"909\":1}}],[\"efcore\",{\"0\":{\"501\":1,\"502\":1}}],[\"eat\",{\"1\":{\"421\":1}}],[\"each\",{\"1\":{\"167\":1}}],[\"errcode\",{\"1\":{\"949\":1}}],[\"err\",{\"1\":{\"547\":1}}],[\"error级别的日志\",{\"1\":{\"738\":1}}],[\"errormsg\",{\"1\":{\"599\":1,\"693\":2}}],[\"errormessage\",{\"1\":{\"474\":7,\"475\":7,\"477\":1}}],[\"errorresultdto\",{\"1\":{\"477\":2}}],[\"errorresults\",{\"1\":{\"477\":3}}],[\"errors\",{\"1\":{\"454\":1,\"474\":2,\"475\":2,\"477\":3,\"577\":1}}],[\"error\",{\"1\":{\"404\":1,\"446\":3,\"447\":5,\"454\":1,\"456\":1,\"477\":2,\"573\":1,\"574\":2,\"599\":1,\"691\":1,\"1037\":1}}],[\"erpit\",{\"1\":{\"694\":2}}],[\"erp互通\",{\"1\":{\"240\":1}}],[\"erp\",{\"1\":{\"181\":1}}],[\"eql\",{\"1\":{\"739\":2}}],[\"equal\",{\"1\":{\"586\":1,\"599\":2,\"739\":1}}],[\"equalsignorecase\",{\"1\":{\"441\":3}}],[\"equals\",{\"1\":{\"81\":1,\"151\":2,\"153\":2,\"518\":3,\"522\":2,\"693\":2}}],[\"eq\",{\"1\":{\"363\":1}}],[\"eth0文件\",{\"1\":{\"1107\":1}}],[\"eth0\",{\"1\":{\"925\":1,\"1107\":1}}],[\"ethereum\",{\"1\":{\"253\":1}}],[\"etcconfig\",{\"1\":{\"36\":1,\"37\":1}}],[\"etc\",{\"1\":{\"3\":3,\"8\":1,\"36\":2,\"37\":2,\"38\":1,\"39\":1,\"333\":1,\"543\":1,\"546\":4,\"547\":2,\"548\":1,\"549\":1,\"564\":1,\"817\":2,\"854\":1,\"862\":3,\"870\":2,\"893\":1,\"905\":2,\"931\":1,\"943\":1,\"948\":2,\"1072\":2,\"1082\":3,\"1096\":5,\"1107\":1,\"1109\":1,\"1110\":2,\"1136\":2}}],[\"esc\",{\"1\":{\"1110\":1}}],[\"escapelife\",{\"1\":{\"788\":2,\"790\":1}}],[\"escape\",{\"1\":{\"564\":1,\"777\":4,\"779\":2}}],[\"esxi和citrix\",{\"1\":{\"1013\":1}}],[\"es7语法加亮检查插件\",{\"1\":{\"321\":1}}],[\"es7\",{\"1\":{\"321\":1}}],[\"esf\",{\"1\":{\"283\":1}}],[\"es6新语法\",{\"1\":{\"330\":1}}],[\"es6\",{\"1\":{\"243\":1,\"321\":2}}],[\"es对于大数据量\",{\"1\":{\"204\":1}}],[\"es如果保证读写一致\",{\"1\":{\"204\":1}}],[\"es\",{\"1\":{\"204\":3}}],[\"es是如何实现master选举的\",{\"1\":{\"204\":1}}],[\"es中的倒排索引是什么\",{\"1\":{\"204\":1}}],[\"elif\",{\"1\":{\"949\":1,\"1127\":1}}],[\"elf格式\",{\"1\":{\"1007\":1}}],[\"elf\",{\"1\":{\"869\":1}}],[\"eleases\",{\"1\":{\"800\":1}}],[\"elease\",{\"1\":{\"800\":1}}],[\"electron\",{\"1\":{\"253\":1}}],[\"elapsedmilliseconds\",{\"1\":{\"687\":2}}],[\"elasticsearch默认值是20mb\",{\"1\":{\"204\":1}}],[\"elasticsearch在节点和http客户端之间进行通信也使用了大量的套接字\",{\"1\":{\"204\":1}}],[\"elasticsearch面试题\",{\"0\":{\"204\":1}}],[\"elasticsearch\",{\"1\":{\"134\":1,\"152\":2,\"204\":7,\"564\":6}}],[\"el7\",{\"1\":{\"541\":1}}],[\"else\",{\"1\":{\"167\":1,\"201\":1,\"402\":2,\"427\":1,\"441\":2,\"442\":1,\"476\":1,\"478\":2,\"597\":1,\"660\":1,\"691\":5,\"1127\":1}}],[\"everything\",{\"1\":{\"1110\":1}}],[\"eventargs\",{\"1\":{\"660\":1,\"691\":5}}],[\"eventlistener\",{\"1\":{\"564\":5}}],[\"events是否属于namespace取决于产生events的对象\",{\"1\":{\"914\":1}}],[\"events=event\",{\"1\":{\"564\":1}}],[\"events\",{\"1\":{\"364\":1,\"564\":8,\"809\":1,\"918\":1}}],[\"eventstore\",{\"1\":{\"152\":2}}],[\"eventhub\",{\"1\":{\"152\":1}}],[\"eventinfo\",{\"1\":{\"91\":1}}],[\"eventtype\",{\"1\":{\"46\":3}}],[\"event\",{\"1\":{\"46\":2,\"68\":3,\"400\":1,\"564\":3,\"751\":1,\"1070\":2}}],[\"eval\",{\"1\":{\"523\":1}}],[\"evaluationtimeinseconds\",{\"1\":{\"153\":1}}],[\"ezhar\",{\"1\":{\"68\":1}}],[\"emit\",{\"1\":{\"564\":2}}],[\"employeeno\",{\"1\":{\"474\":2,\"475\":6}}],[\"emptydir也会被删除\",{\"1\":{\"914\":1}}],[\"emptydir就会存在\",{\"1\":{\"914\":1}}],[\"emptydir\",{\"1\":{\"914\":1}}],[\"empty<string>\",{\"1\":{\"484\":1}}],[\"emptyresult\",{\"1\":{\"416\":2}}],[\"empty\",{\"1\":{\"46\":1,\"64\":1,\"364\":4,\"476\":1,\"609\":1,\"622\":1,\"632\":1,\"968\":1}}],[\"emr\",{\"1\":{\"342\":9}}],[\"emoji\",{\"1\":{\"341\":1}}],[\"embedded\",{\"1\":{\"38\":1}}],[\"email=\",{\"1\":{\"1050\":1}}],[\"emailvalidcodequery2>\",{\"1\":{\"344\":1}}],[\"emailvalidcodequery>\",{\"1\":{\"344\":1}}],[\"email\",{\"1\":{\"3\":1,\"17\":4,\"36\":1,\"748\":2,\"777\":2,\"802\":1,\"1050\":2}}],[\"email>\",{\"1\":{\"3\":2,\"36\":2}}],[\"exitsystem\",{\"1\":{\"691\":5}}],[\"exitcodes\",{\"1\":{\"564\":1}}],[\"exitcodes=0\",{\"1\":{\"564\":3}}],[\"exit\",{\"1\":{\"442\":1,\"564\":2,\"691\":1}}],[\"existtitle\",{\"1\":{\"525\":1}}],[\"existingvalue\",{\"1\":{\"478\":2}}],[\"exist\",{\"1\":{\"394\":1,\"525\":1}}],[\"exists\",{\"0\":{\"394\":1},\"1\":{\"394\":1,\"471\":1,\"574\":2,\"692\":1,\"1061\":1}}],[\"ex\",{\"1\":{\"364\":3,\"454\":2,\"463\":2,\"501\":5,\"574\":3,\"684\":1,\"693\":2}}],[\"extension\",{\"0\":{\"1067\":1},\"1\":{\"672\":1,\"673\":1,\"1067\":1}}],[\"extensions\",{\"1\":{\"321\":1,\"355\":1,\"370\":1,\"371\":2,\"375\":2,\"378\":1,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"410\":1,\"446\":1,\"447\":1,\"454\":2,\"457\":1,\"461\":1,\"583\":2,\"600\":1,\"660\":1,\"691\":1,\"931\":2,\"968\":1,\"1126\":4}}],[\"extern\",{\"1\":{\"44\":1}}],[\"externalname\",{\"1\":{\"914\":1}}],[\"external\",{\"1\":{\"3\":1,\"36\":1,\"38\":1,\"918\":1}}],[\"experimentaltools64bit\",{\"1\":{\"968\":1}}],[\"experimental\",{\"1\":{\"968\":1}}],[\"expect\",{\"1\":{\"739\":5}}],[\"expected\",{\"1\":{\"204\":1,\"564\":1}}],[\"expose\",{\"0\":{\"828\":1},\"1\":{\"806\":1,\"828\":3,\"834\":1,\"837\":1,\"852\":2,\"870\":1,\"1070\":1}}],[\"exporter\",{\"1\":{\"914\":1}}],[\"export和docker\",{\"1\":{\"811\":1}}],[\"export\",{\"1\":{\"737\":1,\"811\":1,\"868\":2,\"1136\":4}}],[\"expr\",{\"1\":{\"564\":1}}],[\"express\",{\"1\":{\"506\":4,\"507\":3}}],[\"expression<func<user\",{\"1\":{\"507\":1}}],[\"expression\",{\"1\":{\"163\":1}}],[\"expanded=dotnet\",{\"1\":{\"467\":1}}],[\"expirationscanfrequency\",{\"1\":{\"373\":1}}],[\"expired\",{\"1\":{\"364\":1}}],[\"expires\",{\"1\":{\"364\":1}}],[\"expiresutc\",{\"1\":{\"358\":1}}],[\"expire\",{\"1\":{\"209\":3}}],[\"explorer\",{\"1\":{\"321\":2}}],[\"exclude\",{\"1\":{\"777\":5}}],[\"excludeassets>\",{\"1\":{\"577\":2}}],[\"except\",{\"1\":{\"1070\":1}}],[\"exception>\",{\"1\":{\"574\":1,\"660\":3}}],[\"exceptionhandled\",{\"1\":{\"404\":4,\"413\":2}}],[\"exceptioncontext\",{\"1\":{\"404\":2,\"413\":1}}],[\"exception\",{\"0\":{\"404\":1},\"1\":{\"125\":1,\"364\":2,\"394\":1,\"404\":10,\"413\":3,\"453\":3,\"454\":2,\"462\":1,\"463\":1,\"501\":2,\"574\":1,\"583\":1,\"684\":1,\"693\":1}}],[\"excel\",{\"1\":{\"1009\":1}}],[\"exceeded\",{\"1\":{\"427\":1}}],[\"exchange\",{\"1\":{\"46\":7}}],[\"exe全路径\",{\"1\":{\"1019\":1}}],[\"exe文件\",{\"1\":{\"90\":1}}],[\"exe和类库文件\",{\"1\":{\"90\":1}}],[\"exe\",{\"1\":{\"88\":1,\"278\":1,\"692\":1,\"876\":1,\"963\":4,\"964\":4,\"1012\":3,\"1019\":3,\"1024\":2,\"1029\":1,\"1031\":1,\"1036\":4}}],[\"exec和docker\",{\"1\":{\"811\":1}}],[\"execreload=\",{\"1\":{\"549\":1}}],[\"execstop=\",{\"1\":{\"549\":1}}],[\"execstart=\",{\"1\":{\"549\":1}}],[\"executing\",{\"1\":{\"1070\":2}}],[\"executionpolicy\",{\"1\":{\"1008\":4}}],[\"executionpolicy不受限制\",{\"1\":{\"1008\":1}}],[\"execution\",{\"1\":{\"167\":1}}],[\"executioncontext\",{\"1\":{\"167\":1}}],[\"executable\",{\"1\":{\"779\":1,\"822\":1,\"830\":1}}],[\"executetransaction\",{\"1\":{\"1047\":3}}],[\"executesqlraw\",{\"1\":{\"528\":1}}],[\"executesqlcommand\",{\"1\":{\"527\":2,\"528\":1}}],[\"executed\",{\"1\":{\"524\":2}}],[\"execute\",{\"1\":{\"354\":1,\"472\":1,\"509\":1,\"1047\":4,\"1063\":4,\"1064\":3,\"1065\":3,\"1081\":1}}],[\"executereader\",{\"1\":{\"120\":2}}],[\"executors\",{\"1\":{\"6\":1}}],[\"exec\",{\"1\":{\"38\":1,\"564\":2,\"811\":1,\"842\":1,\"852\":1,\"888\":2}}],[\"examples\",{\"1\":{\"242\":1}}],[\"example\",{\"1\":{\"8\":1,\"17\":2,\"537\":1,\"561\":1,\"694\":1,\"748\":1,\"821\":1,\"825\":1,\"1070\":4}}],[\"exmail\",{\"1\":{\"3\":2,\"36\":2}}],[\"enforcing\",{\"1\":{\"947\":1}}],[\"engine和容器\",{\"1\":{\"862\":1}}],[\"engine\",{\"1\":{\"811\":1,\"862\":3,\"874\":1,\"919\":1}}],[\"enetit3\",{\"1\":{\"503\":1}}],[\"ens33\",{\"1\":{\"1110\":2}}],[\"ensuresuccessstatuscode\",{\"1\":{\"600\":1}}],[\"ensuredeleted\",{\"1\":{\"502\":1}}],[\"ensurecreated\",{\"1\":{\"501\":1,\"502\":1}}],[\"ensearch=1\",{\"1\":{\"258\":1}}],[\"enrich\",{\"1\":{\"462\":1,\"463\":1}}],[\"enter\",{\"1\":{\"1110\":2}}],[\"enterprise\",{\"1\":{\"804\":1,\"963\":2,\"964\":4,\"973\":3,\"1035\":4}}],[\"entrypoint\",{\"0\":{\"830\":1},\"1\":{\"806\":1,\"830\":3,\"834\":1,\"836\":1,\"837\":1,\"838\":1,\"871\":1,\"1070\":1}}],[\"entry\",{\"1\":{\"574\":1,\"660\":1}}],[\"entries\",{\"1\":{\"151\":1,\"391\":1,\"393\":1,\"394\":1}}],[\"entitiesasnotracking\",{\"1\":{\"518\":3,\"522\":2,\"525\":3}}],[\"entity5\",{\"1\":{\"503\":1}}],[\"entity4\",{\"1\":{\"503\":1}}],[\"entity2\",{\"1\":{\"503\":1}}],[\"entity<user>\",{\"1\":{\"502\":2}}],[\"entity\",{\"1\":{\"501\":2,\"503\":1,\"527\":1,\"611\":3,\"615\":2,\"625\":3,\"630\":3,\"691\":1,\"968\":3,\"1041\":1,\"1046\":1}}],[\"entityframeworkcore\",{\"1\":{\"446\":1,\"501\":4,\"524\":2,\"1126\":1,\"1131\":1}}],[\"encodingaeskey\",{\"1\":{\"710\":2}}],[\"encoding=\",{\"1\":{\"447\":1,\"453\":2,\"970\":2}}],[\"encoding\",{\"1\":{\"364\":2,\"366\":2,\"382\":1,\"387\":1,\"609\":1,\"617\":1,\"622\":1,\"632\":1}}],[\"endtime会自动根据时间查询符合条件的库和表\",{\"1\":{\"1041\":2}}],[\"endtime\",{\"1\":{\"1041\":10}}],[\"endif\",{\"1\":{\"597\":1,\"692\":1,\"1127\":2}}],[\"end\",{\"1\":{\"333\":1,\"769\":1,\"1110\":1}}],[\"endpointroutebuilder\",{\"1\":{\"166\":8,\"167\":10}}],[\"endpointroutingapplicationbuilderextensions\",{\"1\":{\"166\":1,\"167\":1}}],[\"endpointroutingmiddleware\",{\"0\":{\"167\":1},\"1\":{\"156\":1,\"157\":1,\"166\":1,\"167\":7}}],[\"endpointnameaddressscheme>\",{\"1\":{\"165\":1}}],[\"endpointdatasources\",{\"1\":{\"167\":1}}],[\"endpointdatasource传递给\",{\"1\":{\"167\":1}}],[\"endpointdatasource\",{\"1\":{\"165\":2,\"167\":4}}],[\"endpointmetadata\",{\"1\":{\"403\":2}}],[\"endpointmetadatacomparer\",{\"1\":{\"165\":1}}],[\"endpointmetadatacollection\",{\"1\":{\"156\":2}}],[\"endpointmatched\",{\"1\":{\"167\":1}}],[\"endpointmiddleware中间件中包含了很多异常处理和日志记录代码\",{\"1\":{\"168\":1}}],[\"endpointmiddleware则是该路由的终端中间件\",{\"1\":{\"157\":1}}],[\"endpointmiddleware\",{\"0\":{\"168\":1},\"1\":{\"156\":1,\"157\":1,\"167\":3,\"168\":2}}],[\"endpoint\",{\"0\":{\"942\":1},\"1\":{\"156\":3,\"157\":10,\"167\":7,\"168\":4}}],[\"endpoints\",{\"1\":{\"150\":3,\"151\":5,\"153\":5,\"156\":2,\"157\":2,\"158\":7,\"163\":4,\"167\":1,\"482\":2,\"495\":2,\"499\":2,\"666\":1,\"669\":3,\"672\":3,\"918\":1,\"942\":4,\"944\":4,\"945\":1}}],[\"endregion\",{\"1\":{\"98\":9}}],[\"env关键字就是根据需求可以设置对应的环境变量\",{\"1\":{\"824\":1}}],[\"env文件里面的api\",{\"1\":{\"213\":1,\"1119\":1}}],[\"envoy等\",{\"1\":{\"210\":1}}],[\"env\",{\"0\":{\"824\":1},\"1\":{\"150\":2,\"151\":2,\"153\":2,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"211\":5,\"482\":2,\"495\":2,\"499\":2,\"580\":4,\"582\":4,\"583\":2,\"710\":1,\"824\":2,\"837\":1,\"852\":1,\"865\":3,\"867\":2,\"1070\":13,\"1117\":5}}],[\"environmentname\",{\"1\":{\"582\":1}}],[\"environments\",{\"1\":{\"558\":1}}],[\"environmentvariables\",{\"1\":{\"552\":1}}],[\"environment=es\",{\"1\":{\"564\":1}}],[\"environment=a=1\",{\"1\":{\"564\":2}}],[\"environment=aspnetcore\",{\"1\":{\"547\":1}}],[\"environment=key=value\",{\"1\":{\"564\":1}}],[\"environment=production\",{\"1\":{\"547\":1,\"1070\":1}}],[\"environment\",{\"0\":{\"1190\":1},\"1\":{\"3\":1,\"36\":1,\"125\":1,\"375\":1,\"446\":2,\"552\":1,\"564\":3,\"574\":1,\"576\":1,\"691\":1,\"693\":1,\"742\":1,\"743\":1,\"852\":2,\"886\":1,\"1070\":1}}],[\"en\",{\"1\":{\"144\":2,\"281\":1,\"288\":1,\"599\":1,\"874\":1,\"951\":1,\"964\":1,\"974\":1,\"985\":1,\"986\":1,\"1012\":2}}],[\"enumerable\",{\"1\":{\"600\":1}}],[\"enum\",{\"1\":{\"43\":1,\"368\":1,\"400\":2,\"469\":1,\"591\":2}}],[\"enabledetailederrors\",{\"1\":{\"669\":1,\"670\":1,\"672\":1}}],[\"enabledynamicloading>\",{\"1\":{\"577\":1}}],[\"enabled=false\",{\"1\":{\"564\":4}}],[\"enabled\",{\"1\":{\"522\":1,\"549\":1,\"564\":2}}],[\"enablesensitivedatalogging\",{\"1\":{\"502\":1}}],[\"enablebuffering\",{\"1\":{\"402\":1,\"418\":1,\"421\":1}}],[\"enable=false\",{\"1\":{\"217\":2}}],[\"enablecors\",{\"1\":{\"155\":2}}],[\"enable\",{\"1\":{\"3\":3,\"36\":2,\"541\":1,\"549\":1,\"862\":1,\"907\":1,\"911\":1,\"1109\":1}}],[\"eof\",{\"1\":{\"3\":2,\"862\":2}}],[\"e\",{\"1\":{\"3\":8,\"94\":3,\"98\":1,\"125\":2,\"206\":2,\"211\":1,\"217\":9,\"218\":1,\"442\":6,\"459\":1,\"471\":1,\"660\":1,\"661\":3,\"683\":3,\"691\":10,\"853\":5,\"857\":2,\"858\":3,\"859\":4,\"860\":1,\"1036\":1,\"1117\":1}}],[\"echo\",{\"1\":{\"3\":8,\"21\":1,\"22\":1,\"546\":2,\"549\":1,\"564\":1,\"778\":2,\"779\":2,\"780\":3,\"782\":2,\"785\":1,\"787\":1,\"822\":2,\"829\":1,\"867\":3,\"899\":2,\"1096\":1}}],[\"bjmb6rbnj8s0hvmza\",{\"1\":{\"1110\":1}}],[\"b8bc\",{\"1\":{\"1037\":1}}],[\"b8d8\",{\"1\":{\"501\":1}}],[\"b200b2\",{\"1\":{\"1036\":1}}],[\"b2cc39ea67fd\",{\"1\":{\"1036\":1}}],[\"b989\",{\"1\":{\"1036\":1}}],[\"b5cc14fa8c65fe176d148b855ed486a513e8616f\",{\"1\":{\"1034\":1}}],[\"b5696e26eb07\",{\"1\":{\"874\":1}}],[\"btih\",{\"1\":{\"1034\":4}}],[\"bt下载工具\",{\"1\":{\"306\":1}}],[\"bfbfbf\",{\"1\":{\"1036\":1}}],[\"bfb96a6afdbc这是容器id\",{\"1\":{\"812\":1}}],[\"bfb96a6afdbc\",{\"1\":{\"812\":2}}],[\"bf8y8\",{\"1\":{\"973\":2}}],[\"bmhx2\",{\"1\":{\"973\":1}}],[\"bs=1048576\",{\"1\":{\"863\":1}}],[\"bsd\",{\"0\":{\"252\":1},\"1\":{\"247\":1,\"252\":3,\"253\":3}}],[\"b操作了也先拉取\",{\"1\":{\"798\":1}}],[\"b也切换到主分支\",{\"1\":{\"798\":1}}],[\"b在分支b1上面修改并提交推送了一些东西到分支b1\",{\"1\":{\"798\":1}}],[\"b11\",{\"1\":{\"1134\":1}}],[\"b1\",{\"1\":{\"798\":1}}],[\"b两人拉取主分支\",{\"1\":{\"798\":1}}],[\"bg\",{\"1\":{\"712\":4}}],[\"b6\",{\"1\":{\"700\":1}}],[\"bh20190302002\",{\"1\":{\"693\":1}}],[\"b453ae62\",{\"1\":{\"1036\":1}}],[\"b4\",{\"1\":{\"564\":3,\"700\":1}}],[\"b=2\",{\"1\":{\"564\":2}}],[\"bv1sy4y1c7ha\",{\"1\":{\"330\":1}}],[\"bv14j4114768\",{\"1\":{\"330\":1}}],[\"box\",{\"1\":{\"1036\":1}}],[\"bound\",{\"1\":{\"1036\":1}}],[\"bor\",{\"1\":{\"1008\":1}}],[\"body中定义\",{\"1\":{\"742\":1}}],[\"body中不能传递\",{\"1\":{\"601\":1}}],[\"body和status是我们做接口测试的重点\",{\"1\":{\"735\":1}}],[\"body=>json\",{\"1\":{\"623\":1,\"633\":1}}],[\"body取不到数据直接跳过\",{\"1\":{\"402\":1}}],[\"body\",{\"1\":{\"402\":6,\"418\":5,\"421\":3,\"601\":1,\"735\":1,\"739\":10,\"743\":1,\"1031\":1}}],[\"bom\",{\"1\":{\"330\":1}}],[\"bootproto=static\",{\"1\":{\"1110\":1}}],[\"bootproto=\",{\"1\":{\"1107\":1}}],[\"boot\",{\"1\":{\"253\":1,\"430\":1,\"853\":1,\"1081\":1,\"1110\":3}}],[\"book开头的任意url\",{\"1\":{\"160\":1}}],[\"book\",{\"1\":{\"159\":2,\"160\":10,\"165\":4,\"893\":1}}],[\"bool>>\",{\"1\":{\"507\":1}}],[\"bool>\",{\"1\":{\"506\":1}}],[\"boolean\",{\"1\":{\"77\":1,\"443\":6}}],[\"bool\",{\"0\":{\"77\":1},\"1\":{\"97\":10,\"104\":8,\"108\":1,\"111\":3,\"114\":2,\"129\":2,\"164\":1,\"215\":1,\"343\":1,\"366\":1,\"374\":2,\"468\":1,\"469\":1,\"478\":1,\"501\":1,\"575\":4,\"576\":1,\"607\":1,\"611\":1,\"620\":1,\"625\":1,\"671\":1,\"691\":2,\"1047\":5}}],[\"b03yv7rra\",{\"1\":{\"311\":1}}],[\"b站\",{\"1\":{\"307\":1}}],[\"bkkf87ggidowihzdoya4g\",{\"1\":{\"241\":1}}],[\"b3ed\",{\"1\":{\"211\":1,\"213\":1,\"1117\":1,\"1119\":1}}],[\"b70c\",{\"1\":{\"211\":1,\"213\":1,\"1117\":1,\"1119\":1}}],[\"bd\",{\"1\":{\"208\":1}}],[\"bc12\",{\"1\":{\"1036\":1}}],[\"bcd\",{\"1\":{\"208\":1}}],[\"bcl\",{\"1\":{\"139\":1}}],[\"blazor教程的\",{\"1\":{\"1037\":1}}],[\"black\",{\"1\":{\"1036\":1}}],[\"blackholed\",{\"1\":{\"208\":2}}],[\"blue\",{\"1\":{\"1036\":1}}],[\"blueocean\",{\"1\":{\"884\":1,\"885\":2,\"886\":1}}],[\"blocked\",{\"1\":{\"985\":1}}],[\"blob\",{\"0\":{\"779\":1},\"1\":{\"152\":1,\"661\":1,\"777\":1,\"778\":5,\"779\":3,\"780\":2,\"781\":1,\"782\":2,\"801\":1,\"1070\":1}}],[\"blogs\",{\"1\":{\"503\":4,\"509\":4}}],[\"blogwebapiapplicationtests\",{\"1\":{\"442\":2}}],[\"blogwebapi\",{\"1\":{\"442\":1}}],[\"blogmanager\",{\"1\":{\"442\":3}}],[\"blogcore\",{\"1\":{\"364\":1}}],[\"blog\",{\"1\":{\"8\":1,\"40\":1,\"345\":1,\"346\":1,\"347\":1,\"503\":4,\"583\":1,\"794\":1,\"874\":1,\"945\":1,\"953\":1,\"968\":1,\"1116\":1,\"1123\":1}}],[\"b+树\",{\"1\":{\"206\":1}}],[\"bypass\",{\"1\":{\"543\":1,\"1008\":2}}],[\"by\",{\"1\":{\"167\":2,\"243\":1,\"524\":3,\"564\":3,\"873\":3}}],[\"bytearraycontent\",{\"1\":{\"617\":2}}],[\"bytecontent2\",{\"1\":{\"617\":3}}],[\"bytecontent\",{\"1\":{\"617\":3}}],[\"bytes\",{\"1\":{\"564\":2,\"617\":2}}],[\"byteloginid\",{\"1\":{\"366\":2}}],[\"byte\",{\"1\":{\"74\":1,\"75\":2,\"366\":1,\"378\":2,\"459\":1,\"469\":1,\"471\":1,\"691\":2,\"693\":2}}],[\"bao\",{\"1\":{\"1123\":1}}],[\"baoshu\",{\"1\":{\"591\":1}}],[\"bat命令\",{\"0\":{\"988\":1}}],[\"battle\",{\"1\":{\"243\":5}}],[\"ban\",{\"1\":{\"1123\":1}}],[\"banking\",{\"1\":{\"949\":1}}],[\"banner\",{\"1\":{\"734\":2,\"745\":1}}],[\"background\",{\"1\":{\"1036\":1}}],[\"backgroundimage\",{\"1\":{\"1036\":1}}],[\"back\",{\"1\":{\"949\":1}}],[\"backend\",{\"1\":{\"931\":4}}],[\"backups\",{\"1\":{\"564\":5}}],[\"backups=10\",{\"1\":{\"564\":4}}],[\"bab53ff\",{\"1\":{\"782\":1}}],[\"babel\",{\"1\":{\"321\":1}}],[\"bar\",{\"1\":{\"863\":3,\"931\":3}}],[\"bare\",{\"1\":{\"777\":1,\"788\":1}}],[\"bark\",{\"1\":{\"697\":1,\"708\":2,\"709\":1}}],[\"ba51d1c2f7f7b98dfb5cad90846e2d79\",{\"1\":{\"745\":2}}],[\"baike\",{\"1\":{\"593\":1}}],[\"baidu\",{\"1\":{\"155\":1,\"259\":3,\"575\":2,\"593\":1,\"594\":1,\"1104\":1,\"1110\":1,\"1111\":1}}],[\"bak\",{\"1\":{\"564\":1}}],[\"ba23f594f351a64d\",{\"1\":{\"475\":1}}],[\"badrequestobjectresult\",{\"1\":{\"418\":3,\"477\":1}}],[\"baacloud34\",{\"1\":{\"309\":1}}],[\"baacloud\",{\"1\":{\"309\":1}}],[\"baget\",{\"1\":{\"211\":14,\"1117\":14}}],[\"baget是一个轻量级的包管理服务\",{\"1\":{\"211\":1,\"1117\":1}}],[\"balabalabala\",{\"1\":{\"179\":1}}],[\"basic\",{\"1\":{\"567\":1,\"946\":3,\"956\":1,\"985\":1,\"1109\":1}}],[\"base64编码格式的secret\",{\"1\":{\"914\":1}}],[\"based\",{\"1\":{\"914\":1}}],[\"basedirectory\",{\"1\":{\"483\":2,\"484\":1,\"494\":1,\"582\":1}}],[\"basedir\",{\"1\":{\"453\":1}}],[\"basehosttest\",{\"1\":{\"585\":2}}],[\"basewebhosttest\",{\"1\":{\"585\":2,\"587\":1,\"591\":1}}],[\"basetest\",{\"1\":{\"585\":4}}],[\"basetype\",{\"1\":{\"97\":1,\"98\":1}}],[\"baseentity\",{\"1\":{\"120\":3}}],[\"base\",{\"0\":{\"869\":1},\"1\":{\"98\":2,\"403\":5,\"478\":1,\"501\":1,\"502\":2,\"585\":2,\"586\":1,\"587\":1,\"591\":1,\"692\":5,\"711\":3,\"820\":1,\"865\":2,\"866\":3,\"867\":3,\"868\":3,\"870\":3,\"873\":1,\"874\":1,\"1070\":2}}],[\"bashrc\",{\"1\":{\"822\":1}}],[\"bash命令进入到终端\",{\"1\":{\"812\":1}}],[\"bash\",{\"1\":{\"3\":1,\"4\":1,\"38\":1,\"748\":1,\"752\":1,\"774\":1,\"775\":2,\"802\":1,\"812\":1,\"822\":2,\"842\":1,\"888\":1,\"1095\":1}}],[\"bug\",{\"1\":{\"1129\":2}}],[\"but\",{\"1\":{\"949\":1}}],[\"buttongroup\",{\"1\":{\"712\":1}}],[\"button\",{\"1\":{\"691\":1,\"693\":1,\"712\":3}}],[\"button1\",{\"1\":{\"660\":1}}],[\"bundle\",{\"1\":{\"852\":1}}],[\"buffur\",{\"1\":{\"693\":3}}],[\"buffers二进制序列化消息\",{\"1\":{\"664\":1}}],[\"buffers二进制序列化减少网络使用\",{\"1\":{\"663\":1}}],[\"buffers作为序列化协议\",{\"1\":{\"662\":1}}],[\"buffers\",{\"1\":{\"536\":1,\"663\":1}}],[\"buffer\",{\"1\":{\"202\":1,\"204\":4,\"564\":2}}],[\"bufferedstream\",{\"1\":{\"202\":1}}],[\"buffered\",{\"1\":{\"202\":1}}],[\"built\",{\"1\":{\"474\":1}}],[\"buildtools\",{\"1\":{\"963\":1}}],[\"buildtransitive<\",{\"1\":{\"585\":1,\"670\":1,\"673\":1}}],[\"build镜像并且打上tag\",{\"1\":{\"899\":1}}],[\"building\",{\"1\":{\"873\":1,\"874\":1}}],[\"build一样功效\",{\"1\":{\"852\":1}}],[\"buildno=1\",{\"1\":{\"831\":1}}],[\"build命令就可以将对应的程序\",{\"1\":{\"818\":1}}],[\"build命令\",{\"1\":{\"806\":1}}],[\"build指令\",{\"1\":{\"805\":1}}],[\"buildserviceprovider\",{\"1\":{\"352\":1,\"354\":1,\"494\":3,\"660\":1}}],[\"builders<userprofile>\",{\"1\":{\"363\":1}}],[\"buildercontext\",{\"1\":{\"215\":1}}],[\"builder的use和run方法有什么区别\",{\"1\":{\"203\":1}}],[\"builder\",{\"1\":{\"166\":5,\"167\":5,\"400\":1,\"413\":1,\"418\":1,\"421\":1,\"424\":2,\"574\":7,\"575\":1,\"576\":7,\"583\":6,\"871\":3,\"873\":1,\"874\":2}}],[\"build\",{\"1\":{\"8\":1,\"125\":1,\"454\":1,\"462\":1,\"463\":1,\"501\":1,\"554\":1,\"574\":2,\"576\":2,\"577\":1,\"582\":1,\"583\":2,\"585\":2,\"661\":2,\"670\":1,\"673\":1,\"835\":1,\"837\":1,\"852\":2,\"863\":1,\"865\":1,\"866\":1,\"867\":1,\"870\":1,\"879\":1,\"887\":1,\"899\":1,\"1070\":12,\"1122\":1,\"1123\":6}}],[\"bulk\",{\"1\":{\"204\":1}}],[\"business\",{\"1\":{\"1034\":6}}],[\"busybox\",{\"1\":{\"863\":7,\"869\":3}}],[\"buster\",{\"1\":{\"806\":1}}],[\"bus\",{\"1\":{\"152\":1,\"751\":1}}],[\"bicep\",{\"1\":{\"968\":1}}],[\"big\",{\"1\":{\"825\":1}}],[\"biz=mzu4mju4njgyoq==\",{\"1\":{\"712\":1}}],[\"bi\",{\"1\":{\"667\":1}}],[\"birthday=4\",{\"1\":{\"671\":1}}],[\"birthday\",{\"1\":{\"475\":6,\"672\":1}}],[\"bitmap\",{\"1\":{\"209\":2}}],[\"bits\",{\"1\":{\"204\":1}}],[\"bilibili\",{\"1\":{\"137\":9,\"330\":2}}],[\"binaries\",{\"1\":{\"873\":1,\"874\":2}}],[\"binder\",{\"1\":{\"583\":1}}],[\"bindmodelasync\",{\"1\":{\"472\":1}}],[\"bindingcontext\",{\"1\":{\"472\":5}}],[\"binding\",{\"1\":{\"403\":2,\"468\":1,\"470\":1,\"477\":1}}],[\"binding之前执行\",{\"1\":{\"402\":1}}],[\"bindingflags\",{\"1\":{\"119\":8,\"215\":2}}],[\"bindingflags说明\",{\"0\":{\"119\":1}}],[\"bind方法的参数可以增加配置绑定到私有类上\",{\"1\":{\"396\":1}}],[\"bind\",{\"1\":{\"396\":2,\"575\":1,\"583\":1,\"1036\":1}}],[\"bingohuang\",{\"1\":{\"874\":1,\"875\":1}}],[\"bing\",{\"1\":{\"258\":1}}],[\"binlog\",{\"1\":{\"134\":2}}],[\"bin\",{\"1\":{\"3\":3,\"40\":1,\"94\":3,\"98\":1,\"549\":3,\"564\":3,\"799\":2,\"812\":2,\"822\":2,\"824\":1,\"829\":1,\"842\":1,\"846\":2,\"847\":1,\"848\":1,\"870\":1,\"885\":8,\"886\":4,\"925\":1,\"1037\":1,\"1136\":3}}],[\"brightwhite\",{\"1\":{\"1036\":1}}],[\"brightcyan\",{\"1\":{\"1036\":1}}],[\"brightpurple\",{\"1\":{\"1036\":1}}],[\"brightblue\",{\"1\":{\"1036\":1}}],[\"brightblack\",{\"1\":{\"1036\":1}}],[\"brightyellow\",{\"1\":{\"1036\":1}}],[\"brightgreen\",{\"1\":{\"1036\":1}}],[\"brightred\",{\"1\":{\"1036\":1}}],[\"brian\",{\"1\":{\"873\":1}}],[\"bridged\",{\"1\":{\"1110\":1}}],[\"bridge默认模式了解一下\",{\"0\":{\"840\":1}}],[\"bridge\",{\"1\":{\"839\":1,\"843\":1,\"926\":1,\"928\":1,\"1070\":3}}],[\"break\",{\"1\":{\"661\":4,\"985\":5}}],[\"braces\",{\"1\":{\"968\":1}}],[\"bracket\",{\"1\":{\"321\":1}}],[\"brave\",{\"1\":{\"210\":1}}],[\"branches\",{\"1\":{\"1070\":2}}],[\"branch\",{\"0\":{\"784\":1},\"1\":{\"21\":1,\"26\":4,\"167\":1,\"756\":1,\"758\":1,\"760\":1,\"768\":1,\"769\":1,\"773\":1,\"774\":4,\"784\":1,\"785\":6}}],[\"browers\",{\"1\":{\"321\":2}}],[\"browse\",{\"1\":{\"138\":1,\"467\":1}}],[\"brown\",{\"1\":{\"66\":1}}],[\"bbc\",{\"1\":{\"307\":1}}],[\"bb688122\",{\"1\":{\"125\":1}}],[\"bb\",{\"1\":{\"64\":1,\"185\":1,\"367\":1,\"410\":1,\"702\":2,\"799\":1,\"1060\":1}}],[\"bbb\",{\"1\":{\"47\":1,\"180\":1,\"342\":1,\"506\":1,\"507\":1}}],[\"bbbbb\",{\"1\":{\"47\":1}}],[\"ben\",{\"1\":{\"1123\":1}}],[\"benchmark\",{\"1\":{\"870\":1}}],[\"be28e70d\",{\"1\":{\"1034\":2}}],[\"beyond\",{\"1\":{\"988\":1}}],[\"being\",{\"1\":{\"949\":1}}],[\"beta\",{\"1\":{\"821\":1,\"1121\":2,\"1129\":3}}],[\"beta9\",{\"1\":{\"577\":1}}],[\"best\",{\"1\":{\"693\":1,\"873\":1,\"874\":2}}],[\"below\",{\"1\":{\"564\":4,\"739\":1,\"985\":1}}],[\"because\",{\"1\":{\"454\":1}}],[\"beandefinition来描述的\",{\"1\":{\"443\":1}}],[\"beandefinition\",{\"1\":{\"443\":1}}],[\"beansexception\",{\"1\":{\"443\":5}}],[\"bean\",{\"1\":{\"443\":18}}],[\"beanfactory\",{\"1\":{\"443\":4}}],[\"bearer\",{\"1\":{\"364\":1,\"484\":5,\"586\":1,\"600\":1,\"603\":2,\"608\":1,\"612\":1,\"616\":1,\"617\":1,\"621\":1,\"626\":1,\"631\":1}}],[\"begintransaction\",{\"1\":{\"1047\":1,\"1063\":1,\"1065\":1}}],[\"beginthread\",{\"1\":{\"1045\":2}}],[\"begin\",{\"1\":{\"402\":2,\"418\":2,\"421\":2}}],[\"berkeley\",{\"1\":{\"252\":1}}],[\"before\",{\"1\":{\"167\":2,\"564\":1}}],[\"be\",{\"1\":{\"45\":1,\"167\":2,\"564\":5,\"683\":1,\"739\":1,\"768\":1,\"777\":1}}],[\"b\",{\"1\":{\"26\":1,\"79\":2,\"134\":14,\"159\":3,\"161\":4,\"206\":2,\"209\":2,\"322\":1,\"343\":1,\"436\":2,\"751\":1,\"769\":2,\"786\":2,\"811\":1,\"830\":1,\"863\":1,\"1061\":2,\"1081\":1}}],[\"在末尾添加\",{\"1\":{\"1136\":1}}],[\"在库或者应用中\",{\"1\":{\"1127\":1}}],[\"在编辑模式点击按键\",{\"1\":{\"1110\":1}}],[\"在编辑=\",{\"1\":{\"256\":2}}],[\"在命令模式点击按键\",{\"1\":{\"1110\":1}}],[\"在命令行输入\",{\"1\":{\"748\":1,\"1112\":1}}],[\"在重启结束后可以在电脑上搜索到hyper\",{\"1\":{\"1104\":1}}],[\"在电脑左下角搜索控制面板\",{\"1\":{\"1104\":1}}],[\"在更改某个目录文件的属组时\",{\"1\":{\"1082\":1,\"1083\":1}}],[\"在更新时这些pod是按逆序的方式进行\",{\"1\":{\"914\":1}}],[\"在更新数据库\",{\"1\":{\"134\":1}}],[\"在覆盖时会先提示询问\",{\"1\":{\"1079\":1}}],[\"在删除前会询问\",{\"1\":{\"1078\":1}}],[\"在每个输出项后面追加文件的类型标识符\",{\"1\":{\"1074\":1}}],[\"在发布模式下发布项目\",{\"1\":{\"1070\":1}}],[\"在发布模式下生成项目\",{\"1\":{\"1070\":1}}],[\"在发送前需要做加密处理\",{\"1\":{\"744\":1}}],[\"在发送请求前需要对接口的数据做进一步处理\",{\"1\":{\"744\":1}}],[\"在发送http请求的时候\",{\"1\":{\"732\":1}}],[\"在发送数据之前\",{\"1\":{\"327\":1}}],[\"在dotnet\",{\"1\":{\"1070\":1}}],[\"在docker集群上实现跨主机网络\",{\"1\":{\"928\":1}}],[\"在docker中\",{\"1\":{\"928\":1}}],[\"在docker\",{\"1\":{\"852\":1}}],[\"在dockerfile注释和图表中已经详细描述\",{\"1\":{\"837\":1}}],[\"在dockerfile中使用volume指定挂载路径即可\",{\"1\":{\"827\":1}}],[\"在docker执行启动命令时\",{\"1\":{\"812\":1}}],[\"在阿里云的容器镜像服务中\",{\"1\":{\"1069\":1}}],[\"在lnskydb\",{\"1\":{\"1046\":1}}],[\"在linux下\",{\"1\":{\"880\":1}}],[\"在出现的工具条里点击画笔可以在白板上写字\",{\"1\":{\"1031\":1}}],[\"在安装完成后虚拟机直接就可以连接网络\",{\"1\":{\"1013\":1}}],[\"在尝试安装\",{\"1\":{\"1012\":1}}],[\"在弹框的windows功能中勾选适用于linux的windows子系统和虚拟机平台\",{\"1\":{\"1007\":1}}],[\"在弹出来的窗口可以选择四种截图方式\",{\"1\":{\"1025\":1}}],[\"在弹出的窗口输入\",{\"1\":{\"1029\":1}}],[\"在弹出的窗口中输入\",{\"1\":{\"1028\":1}}],[\"在弹出的界面点击run\",{\"1\":{\"737\":1}}],[\"在弹出的对话框中输入请求名称\",{\"1\":{\"736\":1}}],[\"在弹出的输入框中输入collection名称\",{\"1\":{\"736\":1}}],[\"在弹出对话框中输入文件夹名称\",{\"1\":{\"736\":1}}],[\"在源码中显示线程\",{\"0\":{\"985\":1}}],[\"在即时窗口或监视窗口中评估表达式时\",{\"1\":{\"984\":1}}],[\"在即时窗口和在观察窗口的no\",{\"1\":{\"984\":1}}],[\"在即时窗口和在观察窗口的\",{\"0\":{\"984\":1}}],[\"在许多情况下\",{\"1\":{\"981\":1}}],[\"在许多情况下你可以在查询后面紧跟着使用\",{\"1\":{\"514\":1}}],[\"在监视窗口中监视state的值是否有变化\",{\"1\":{\"984\":1}}],[\"在监视窗口中\",{\"1\":{\"981\":1}}],[\"在遇到断点时\",{\"1\":{\"980\":1}}],[\"在以后的调试过程中不能重用它\",{\"1\":{\"978\":1}}],[\"在以上的dockerfile中\",{\"1\":{\"838\":1}}],[\"在以上的位置把想要的值选中右击\",{\"1\":{\"742\":1}}],[\"在当前行设置断点\",{\"1\":{\"974\":1}}],[\"在当前目录下执行\",{\"1\":{\"211\":1,\"1117\":1}}],[\"在本地布局中打开\",{\"1\":{\"964\":1}}],[\"在本例中\",{\"1\":{\"46\":1}}],[\"在oss的控制台上也可以看到我们图片的具体信息\",{\"1\":{\"954\":1}}],[\"在如下位置也可以获取到这个id\",{\"1\":{\"954\":1}}],[\"在创建目录时直接设置文件权限\",{\"1\":{\"1075\":1}}],[\"在创建bucket的时候选区域是有显示的\",{\"1\":{\"954\":1}}],[\"在创建出新的pod之前会先杀掉所有已存在的pod\",{\"1\":{\"914\":1}}],[\"在转入目标\",{\"1\":{\"943\":1}}],[\"在后面我们将解释网络如何把\",{\"1\":{\"942\":1}}],[\"在后台运行容器\",{\"1\":{\"380\":1,\"385\":1,\"856\":1}}],[\"在集群范围内传播\",{\"1\":{\"941\":1}}],[\"在认证服务\",{\"1\":{\"937\":1}}],[\"在对应用进行横向扩容时\",{\"1\":{\"936\":1}}],[\"在虚拟主机http\",{\"1\":{\"931\":1}}],[\"在平时的使用中\",{\"1\":{\"929\":1}}],[\"在另一端以相反的流程\",{\"1\":{\"928\":1}}],[\"在测试环境查看\",{\"1\":{\"918\":1}}],[\"在网络栈中引入网络命名空间\",{\"1\":{\"916\":1}}],[\"在网络插件中大量应用\",{\"1\":{\"914\":1}}],[\"在指定的仓库中\",{\"1\":{\"1070\":1}}],[\"在指定的时间周期运行指定的任务\",{\"1\":{\"914\":1}}],[\"在指向\",{\"1\":{\"782\":1}}],[\"在指向提交时会用到这个哈希值\",{\"1\":{\"22\":1}}],[\"在部署或者扩展的时候要依据定义的顺序依次进行操作\",{\"1\":{\"914\":1}}],[\"在nodeport的基础上\",{\"1\":{\"914\":1}}],[\"在net\",{\"1\":{\"374\":2,\"600\":1}}],[\"在控制台输入下面命令\",{\"1\":{\"876\":1}}],[\"在控制台输入docker\",{\"1\":{\"876\":1}}],[\"在控制器中使用\",{\"1\":{\"145\":1}}],[\"在桌面找到docker\",{\"1\":{\"876\":1}}],[\"在构建一些基础镜像\",{\"1\":{\"869\":1}}],[\"在的\",{\"1\":{\"863\":1}}],[\"在开始制作镜像之前\",{\"1\":{\"863\":1}}],[\"在开发环境中\",{\"1\":{\"666\":1}}],[\"在开发中\",{\"1\":{\"210\":1}}],[\"在开发aspnet\",{\"1\":{\"149\":1}}],[\"在bridge模式下\",{\"1\":{\"840\":1}}],[\"在主机上可以执行命令ip\",{\"1\":{\"839\":1}}],[\"在主从库中是\",{\"1\":{\"134\":1}}],[\"在第一篇文章最后就简单使用了dockerfile构建了一个镜像\",{\"1\":{\"818\":1}}],[\"在日常开发过程中\",{\"1\":{\"818\":1}}],[\"在启动另一个容器testvolumesfromcentos2\",{\"1\":{\"816\":1}}],[\"在挂载时指定一个名称\",{\"1\":{\"815\":1}}],[\"在挂载时不指定名称\",{\"1\":{\"815\":1}}],[\"在容器删除之前可以先进行数据拷贝\",{\"1\":{\"812\":1}}],[\"在容器里面只能执行一些核心的命令\",{\"1\":{\"811\":1}}],[\"在容器内部执行\",{\"1\":{\"812\":1}}],[\"在容器内进入gitlab的bin目录\",{\"1\":{\"40\":1}}],[\"在容器内查找初始密码\",{\"1\":{\"39\":1}}],[\"在容器内执行更新配置\",{\"1\":{\"38\":1}}],[\"在忽视将不起作用\",{\"1\":{\"799\":1}}],[\"在学习\",{\"1\":{\"776\":1}}],[\"在github创建仓库my\",{\"1\":{\"1070\":1}}],[\"在git项目的文件夹\",{\"1\":{\"775\":1}}],[\"在git每次推送的和拉取的时候需要输入账号和密码\",{\"1\":{\"775\":1}}],[\"在git中\",{\"1\":{\"14\":1}}],[\"在仓库的根目录新建工作流文件\",{\"1\":{\"1070\":1}}],[\"在仓库目录下运行git\",{\"1\":{\"775\":1}}],[\"在仓库目录下右键git\",{\"1\":{\"774\":1}}],[\"在仓库下创建一个文件为readme\",{\"1\":{\"753\":1}}],[\"在查看隐藏项目的条件下\",{\"1\":{\"752\":1}}],[\"在图像预览中使用全局变量\",{\"1\":{\"745\":1}}],[\"在前置脚本中编写生成随机数\",{\"1\":{\"744\":1}}],[\"在不同的位置获取变量\",{\"1\":{\"743\":1}}],[\"在不同的目录下命令有些许差异\",{\"1\":{\"554\":1}}],[\"在tests\",{\"1\":{\"742\":1}}],[\"在title中输入适当的密钥名称\",{\"1\":{\"19\":1}}],[\"在url\",{\"1\":{\"742\":1}}],[\"在url中追加版本或者作为查询字符串参数\",{\"1\":{\"634\":1}}],[\"在响应体数据返回后执行\",{\"1\":{\"739\":1}}],[\"在做接口测试时\",{\"1\":{\"734\":1,\"738\":1,\"746\":1}}],[\"在pvc绑定pv时通常根据两个条件来绑定\",{\"1\":{\"914\":1}}],[\"在postman常用的三种变量分别是全局变量\",{\"1\":{\"740\":1}}],[\"在postman也可以对这两个进行断言\",{\"1\":{\"739\":1}}],[\"在postman也提供了这样一个功能\",{\"1\":{\"736\":1}}],[\"在postman中有俩个入口\",{\"1\":{\"738\":1}}],[\"在postman中编写日志打印语句使用的是javascript\",{\"1\":{\"738\":1}}],[\"在postman中是如何操作呢\",{\"1\":{\"737\":1}}],[\"在postman中的响应数据展示\",{\"1\":{\"735\":1}}],[\"在postman中设置请求体类型\",{\"1\":{\"734\":2}}],[\"在postman中设置请求体类型为\",{\"1\":{\"733\":1}}],[\"在postman中该如何请求呢\",{\"1\":{\"734\":1}}],[\"在postman中实现对这类接口请求非常简单\",{\"1\":{\"729\":1}}],[\"在program中进行配置\",{\"1\":{\"661\":1}}],[\"在progrom全局自定义配置\",{\"0\":{\"583\":1}}],[\"在请求中设置以上四个参数\",{\"1\":{\"733\":1,\"734\":2}}],[\"在请求方法中选择请求方法\",{\"1\":{\"730\":1}}],[\"在请求的url中输入请求地址\",{\"1\":{\"724\":1}}],[\"在请求头添加\",{\"1\":{\"364\":1}}],[\"在6月5号\",{\"1\":{\"710\":1}}],[\"在软件保持后台运行的情况下\",{\"1\":{\"698\":1}}],[\"在演示网站中\",{\"1\":{\"693\":1}}],[\"在win11下使用linux系统进行日常学习使用\",{\"1\":{\"1007\":1}}],[\"在winform下很好实现\",{\"1\":{\"689\":1}}],[\"在web服务上创建新的数据项\",{\"1\":{\"606\":1}}],[\"在生产环境中\",{\"1\":{\"666\":1}}],[\"在生成token的时候将用户的角色设置为超级管理员\",{\"1\":{\"364\":1}}],[\"在客户端\",{\"1\":{\"662\":1}}],[\"在服务器端\",{\"1\":{\"662\":1}}],[\"在服务器直接调用示例\",{\"1\":{\"540\":1}}],[\"在程序不关闭情况下修改配置\",{\"1\":{\"661\":1}}],[\"在form1通过构造函数注入iuserservice\",{\"1\":{\"659\":1}}],[\"在原来的文章基础上完善一下常用的几种webapi编写方式以及请求方式\",{\"1\":{\"600\":1}}],[\"在内存中运行\",{\"1\":{\"595\":1}}],[\"在内存越来越便宜的今天\",{\"1\":{\"209\":1}}],[\"在面向对象编程中\",{\"1\":{\"593\":1}}],[\"在面向对象方法设计的软件系统中\",{\"1\":{\"435\":1}}],[\"在xunit的2\",{\"1\":{\"588\":1}}],[\"在startop注册grpc服务\",{\"1\":{\"672\":1}}],[\"在startup\",{\"1\":{\"1039\":1}}],[\"在startup中获取配置\",{\"1\":{\"661\":1}}],[\"在startup构造函数的时候进行赋值替换iconfiguration\",{\"1\":{\"582\":1}}],[\"在spring\",{\"1\":{\"444\":1}}],[\"在合适的使用插件确实会很方便\",{\"1\":{\"577\":1}}],[\"在合并特性分支之前\",{\"1\":{\"27\":1}}],[\"在宿主项目新建文件pluginloadcontext\",{\"1\":{\"577\":1}}],[\"在宿主程序中引用该类库并且创建消息通知的实现类defaultmsgservice\",{\"1\":{\"575\":1}}],[\"在之前学习到如何将一个类库中的webapi加载\",{\"1\":{\"570\":1}}],[\"在操作系统给supervisord发送sigchild信号时等待的时间\",{\"1\":{\"564\":2}}],[\"在上一部分中创建的密钥存储文件\",{\"1\":{\"1037\":1}}],[\"在上图中\",{\"1\":{\"937\":1}}],[\"在上例中\",{\"1\":{\"919\":1}}],[\"在上篇文章的基础上进行如下代码\",{\"1\":{\"590\":1}}],[\"在上面创建一些文件进行测试\",{\"1\":{\"812\":1}}],[\"在上面我们介绍到\",{\"1\":{\"739\":1}}],[\"在上面代码中的print\",{\"1\":{\"691\":1}}],[\"在上面的\",{\"1\":{\"575\":1}}],[\"在上面编写结束之后我们还需要进行配置也就是设置serializersettings\",{\"1\":{\"478\":1}}],[\"在上层目录下运行cmd输入命令\",{\"1\":{\"554\":1}}],[\"在文件资源管理器打开文件\",{\"1\":{\"554\":1}}],[\"在里面添加默认一些方法操作\",{\"1\":{\"552\":1}}],[\"在应用程序停止运行的时候立即重新启动\",{\"1\":{\"544\":1}}],[\"在3\",{\"1\":{\"509\":1}}],[\"在大部分基架代码中\",{\"1\":{\"503\":1}}],[\"在大多数情况下\",{\"1\":{\"368\":1}}],[\"在efcore中不论是先where还是先order\",{\"1\":{\"503\":1}}],[\"在输入框输出\",{\"1\":{\"484\":1}}],[\"在下面的动图中\",{\"1\":{\"977\":1,\"979\":1}}],[\"在下面示例中account和password就是属性\",{\"1\":{\"59\":1}}],[\"在下一个pod运行之前所有之前的pod必须都是running和ready状态\",{\"1\":{\"914\":1}}],[\"在下一个接口获取环境变量或全局变量\",{\"1\":{\"745\":1}}],[\"在下方输入bearer\",{\"1\":{\"484\":1}}],[\"在js中传输会导致精度丢失\",{\"1\":{\"478\":1}}],[\"在类库中使用需要先引用指定组件using\",{\"1\":{\"446\":1}}],[\"在ioc容器中获取bean的实例\",{\"1\":{\"443\":2}}],[\"在工厂模式中\",{\"1\":{\"438\":1}}],[\"在饭店吃饭时\",{\"1\":{\"433\":1}}],[\"在二楼候车室\",{\"1\":{\"432\":1}}],[\"在最后追加内容\",{\"1\":{\"1070\":1}}],[\"在最新的版本默认仓库已经变更为\",{\"1\":{\"784\":1}}],[\"在最外层包一层公共返回类\",{\"1\":{\"415\":1}}],[\"在最频繁使用的\",{\"1\":{\"206\":1}}],[\"在action中获取我们传输的数据\",{\"1\":{\"484\":1}}],[\"在action上使用servicefilter\",{\"1\":{\"409\":1}}],[\"在appsettings中配置文章jwt信息\",{\"1\":{\"364\":1}}],[\"在结果执行之后调用的操作\",{\"1\":{\"405\":1}}],[\"在结果执行之前调用的一系列操作\",{\"1\":{\"405\":1}}],[\"在view\",{\"1\":{\"405\":1}}],[\"在vs开发环境中\",{\"1\":{\"90\":1}}],[\"在接口调用结束时候触发\",{\"1\":{\"402\":1}}],[\"在接口被调用前触发\",{\"1\":{\"402\":1}}],[\"在接下来的页面中输入密码和yes即可完成验证\",{\"1\":{\"19\":1}}],[\"在result执行前发生\",{\"1\":{\"405\":1}}],[\"在redis中是以hash表的模式存放的\",{\"1\":{\"381\":1,\"386\":1}}],[\"在request\",{\"1\":{\"323\":1}}],[\"在需要使用的地方进行注入\",{\"1\":{\"377\":1}}],[\"在需要的时候恢复数据\",{\"1\":{\"298\":1}}],[\"在例子中key1\",{\"1\":{\"372\":1}}],[\"在登录成功的时候我们会颁发token给前端\",{\"1\":{\"364\":1}}],[\"在登录认证通过后访问时候可以通过\",{\"1\":{\"361\":1}}],[\"在范围服务中不建议使用构造函数注入\",{\"1\":{\"355\":1}}],[\"在表中有一个字段存储了一个json格式的文本\",{\"1\":{\"342\":1}}],[\"在浏览器的地址栏中输入网址的方式访问网页时\",{\"1\":{\"323\":1}}],[\"在浏览器中运行\",{\"1\":{\"321\":1}}],[\"在代理层次结构中\",{\"1\":{\"322\":1}}],[\"在代理的层次结构中\",{\"1\":{\"322\":1}}],[\"在代码层\",{\"1\":{\"209\":1}}],[\"在访问服务器\",{\"1\":{\"322\":1}}],[\"在各个点之间传递\",{\"1\":{\"322\":1}}],[\"在线绘图工具\",{\"1\":{\"295\":1}}],[\"在线程\",{\"1\":{\"134\":1}}],[\"在录制的同时还可以将摄像头也录制到画面中\",{\"1\":{\"292\":1}}],[\"在自由软件许可证中增加\",{\"1\":{\"248\":1}}],[\"在自己本地的仓库\",{\"1\":{\"20\":1}}],[\"在实际的应用场景中能满足大部分的需求\",{\"1\":{\"215\":1}}],[\"在远程服务或数据源中使用幂等性\",{\"1\":{\"210\":1}}],[\"在微服务的世界中\",{\"1\":{\"210\":1}}],[\"在使用git的时候\",{\"1\":{\"799\":1}}],[\"在使用微服务架构时\",{\"1\":{\"210\":1}}],[\"在使用es时要注意什么\",{\"1\":{\"204\":1}}],[\"在医院里\",{\"1\":{\"210\":1}}],[\"在其内部暂时舍弃对一些非核心的接口和数据的请求\",{\"1\":{\"210\":1}}],[\"在消费者下线的情况下\",{\"1\":{\"209\":1}}],[\"在缓存失效后\",{\"1\":{\"209\":1}}],[\"在没有复制模型的情况下\",{\"1\":{\"209\":1}}],[\"在业务代码层实现\",{\"1\":{\"209\":1}}],[\"在镜像集群模式下\",{\"1\":{\"208\":1}}],[\"在未重建该\",{\"1\":{\"208\":1}}],[\"在确认之前断开了连接或取消订阅\",{\"1\":{\"208\":1}}],[\"在写入消息队列的数据做唯一标示\",{\"1\":{\"208\":1}}],[\"在写了公众号名称之后\",{\"1\":{\"178\":1}}],[\"在我们的阿里云服务器上拉取镜像并启动\",{\"1\":{\"1070\":1}}],[\"在我们的软件开发中\",{\"1\":{\"207\":1}}],[\"在我们提交代码并推送中可以去github的actions选项卡中查看\",{\"1\":{\"1070\":1}}],[\"在我们测试的接口中\",{\"1\":{\"745\":1}}],[\"在我们想引用包的项目里面打开包管理器\",{\"1\":{\"214\":1,\"1120\":1}}],[\"在我们对资源的响应速度有要求的时候\",{\"1\":{\"207\":1}}],[\"在我们要部署的仓库里面找到runner配置信息\",{\"1\":{\"7\":1}}],[\"在该配置中\",{\"1\":{\"577\":1}}],[\"在该项目中\",{\"1\":{\"575\":1}}],[\"在该类库中新建服务imsgservice\",{\"1\":{\"575\":1}}],[\"在该实例中读取到缓冲区并进行处理\",{\"1\":{\"207\":1}}],[\"在该示例类中sex叫做字段\",{\"1\":{\"56\":1}}],[\"在频繁使用的\",{\"1\":{\"206\":1}}],[\"在一个备份集群中\",{\"1\":{\"205\":1}}],[\"在一般使用上没有什么区别\",{\"1\":{\"160\":1}}],[\"在并发情况下\",{\"1\":{\"204\":1}}],[\"在搜索的时候是会查询filesystem\",{\"1\":{\"204\":1}}],[\"在新的文档被创建时\",{\"1\":{\"204\":1}}],[\"在数据管理我们可以导入数据\",{\"1\":{\"236\":1}}],[\"在数据库中是\",{\"1\":{\"134\":4}}],[\"在数组中\",{\"1\":{\"203\":1}}],[\"在这篇文章中\",{\"1\":{\"974\":1}}],[\"在这里就可以看到剪贴板的文字图片等\",{\"1\":{\"1030\":1}}],[\"在这里\",{\"1\":{\"987\":1}}],[\"在这里可能出现问题\",{\"1\":{\"876\":1}}],[\"在这里我也分享\",{\"1\":{\"134\":1}}],[\"在这个官方文档的最后会解释\",{\"1\":{\"986\":1}}],[\"在这个接口中\",{\"1\":{\"728\":1}}],[\"在这个窗体程序上需要拖动一个\",{\"1\":{\"691\":1}}],[\"在这样的齿轮组中\",{\"1\":{\"435\":1}}],[\"在这种情况下\",{\"1\":{\"983\":1}}],[\"在这种配置中\",{\"1\":{\"322\":1}}],[\"在这种模式中\",{\"1\":{\"202\":1}}],[\"在整个系统运行过程中\",{\"1\":{\"202\":1}}],[\"在你一脸懵逼的情况下\",{\"1\":{\"194\":1}}],[\"在你决定要自定义路由约束之前\",{\"1\":{\"164\":1}}],[\"在项目启动的时候就执行该静态方法\",{\"1\":{\"1061\":1}}],[\"在项目启动的时候加载插件\",{\"1\":{\"574\":1}}],[\"在项目根目录下创建docker\",{\"1\":{\"851\":1}}],[\"在项目根目录下增加一个dockerfile文件\",{\"1\":{\"806\":1}}],[\"在项目根目录创建一个dockerfile文件\",{\"1\":{\"851\":1}}],[\"在项目文件\",{\"1\":{\"563\":1}}],[\"在项目目录中新建一个xml文件的nlog\",{\"1\":{\"453\":1}}],[\"在项目中我主要负责\",{\"1\":{\"185\":1}}],[\"在项目的根目录下创建文件名为\",{\"1\":{\"8\":1}}],[\"在执行终结点前进行授权\",{\"1\":{\"158\":1}}],[\"在执行的过程中\",{\"1\":{\"139\":1}}],[\"在调试方面尤其出色\",{\"1\":{\"987\":1}}],[\"在调试复杂行为时\",{\"1\":{\"986\":1}}],[\"在调试运行的程序时\",{\"1\":{\"976\":1,\"977\":1}}],[\"在调试模式下将时间戳信息添加到输出窗口\",{\"1\":{\"968\":1}}],[\"在调试服务器端问题时非常有用\",{\"1\":{\"175\":1}}],[\"在调试时使用\",{\"1\":{\"46\":1}}],[\"在调用userouting和useendpoints之间\",{\"1\":{\"157\":1}}],[\"在调用userouting之前\",{\"1\":{\"157\":1}}],[\"在中间件管道中\",{\"1\":{\"157\":1}}],[\"在此处作为下一条要执行的语句\",{\"0\":{\"977\":1}}],[\"在此基础上构建自己的项目镜像\",{\"1\":{\"834\":1,\"837\":1}}],[\"在此用于更新数据\",{\"1\":{\"630\":1}}],[\"在此类库上我们可以使用c\",{\"1\":{\"139\":1}}],[\"在此示例中\",{\"1\":{\"46\":1}}],[\"在\",{\"0\":{\"494\":1,\"498\":1},\"1\":{\"134\":5,\"157\":1,\"204\":2,\"210\":1,\"349\":1,\"443\":3,\"547\":1,\"570\":2,\"575\":1,\"598\":3,\"660\":1,\"721\":1,\"782\":1,\"783\":1,\"784\":1,\"786\":3,\"863\":1,\"908\":1,\"919\":1,\"920\":1,\"939\":1,\"956\":1,\"1110\":1}}],[\"在叫\",{\"1\":{\"73\":2}}],[\"在clusterip基础上为service在每台机器上绑定一个端口\",{\"1\":{\"914\":1}}],[\"在centos\",{\"1\":{\"862\":1}}],[\"在centos一键安装docker以及docker\",{\"1\":{\"3\":1}}],[\"在configure中添加app\",{\"1\":{\"1039\":1}}],[\"在configure中声明全局跨域\",{\"1\":{\"155\":1}}],[\"在configure方法中设置\",{\"1\":{\"579\":1,\"580\":1}}],[\"在configureservices中\",{\"1\":{\"481\":1}}],[\"在configureservices中对于传输过来的jwt\",{\"1\":{\"364\":1}}],[\"在c\",{\"1\":{\"41\":1,\"90\":1,\"96\":1}}],[\"在要部署服务的服务器上安装docker以及gitlab\",{\"1\":{\"4\":1}}],[\"在进行简单的gtlab的ci\",{\"1\":{\"3\":1}}],[\"本项目力求做最简单\",{\"1\":{\"1009\":1}}],[\"本身并不会被删除\",{\"1\":{\"786\":1}}],[\"本身就不包括文件名称\",{\"1\":{\"778\":1}}],[\"本身是一项免费的服务\",{\"1\":{\"704\":1}}],[\"本身不是跨平台的也就是话说仅限于运行在windows\",{\"1\":{\"139\":1}}],[\"本作品采用\",{\"1\":{\"599\":1}}],[\"本节是摘自\",{\"1\":{\"430\":1}}],[\"本来在推送镜像的时候我们可以直接build\",{\"1\":{\"1070\":1}}],[\"本来就是代码的分发平台\",{\"1\":{\"789\":1}}],[\"本来还想画一张图来说明一下的\",{\"1\":{\"693\":1}}],[\"本来暂且将proto文件拷贝到客户端服务\",{\"1\":{\"673\":1}}],[\"本来内容基本上来源于作者艾三元\",{\"1\":{\"537\":1}}],[\"本来是以为sqlite数据库不支持long类型导致我存进去的数据出了问题\",{\"1\":{\"478\":1}}],[\"本来系统运行好好的\",{\"1\":{\"208\":1}}],[\"本来面试篇是打算写技术面试题的\",{\"1\":{\"183\":1}}],[\"本书左右\",{\"1\":{\"179\":1}}],[\"本次文章还在原来项目的基础上进行操作\",{\"1\":{\"585\":1}}],[\"本次代码将安装在windows\",{\"1\":{\"560\":1}}],[\"本次部署在windows平台\",{\"1\":{\"553\":1}}],[\"本次事例代码是用过vs2019创建的asp\",{\"1\":{\"501\":1,\"550\":1}}],[\"本次事例使用的是asp\",{\"1\":{\"449\":1}}],[\"本次事例来演示一个带ui界面的健康监控的基本使用\",{\"1\":{\"153\":1}}],[\"本次示例到此结束\",{\"1\":{\"694\":1}}],[\"本次示例为了方便起见\",{\"1\":{\"694\":1}}],[\"本次示例使用轻量级的sqlite作为数据存储\",{\"1\":{\"661\":1}}],[\"本次示例是获取到请求的boyd里面的id\",{\"1\":{\"402\":1}}],[\"本次示例环境\",{\"1\":{\"142\":1,\"501\":1,\"550\":1,\"559\":1}}],[\"本次使用的是完全覆盖\",{\"1\":{\"233\":1}}],[\"本次安装直接安装在服务器中\",{\"1\":{\"4\":1}}],[\"本以为这个老生常谈的话题\",{\"1\":{\"134\":1}}],[\"本质就是把exe打包成服务\",{\"1\":{\"1019\":1}}],[\"本质上\",{\"1\":{\"203\":1}}],[\"本质上是一个类\",{\"1\":{\"41\":1}}],[\"本质是把权威数据源\",{\"1\":{\"134\":1}}],[\"本质是通过\",{\"1\":{\"134\":1}}],[\"本地保存\",{\"1\":{\"799\":1}}],[\"本地的\",{\"1\":{\"788\":1}}],[\"本地\",{\"1\":{\"781\":1}}],[\"本地配置文件\",{\"1\":{\"777\":1}}],[\"本地输出结果\",{\"1\":{\"125\":1}}],[\"本地缓存\",{\"1\":{\"43\":2}}],[\"本地状态回退到和远程相同\",{\"1\":{\"31\":1}}],[\"本地仓库就可以直接从origin的master分支中获取内容\",{\"1\":{\"23\":1}}],[\"本地仓库要和远程仓库保持一致\",{\"1\":{\"22\":1}}],[\"本地仓库\",{\"0\":{\"22\":1},\"1\":{\"20\":1}}],[\"本文章著作权归作者所有\",{\"1\":{\"1123\":1}}],[\"本文转载自微信公众号\",{\"1\":{\"1085\":1,\"1113\":1}}],[\"本文完整代码可以查看仓库\",{\"1\":{\"1070\":1}}],[\"本文完整介绍了如何使用github\",{\"1\":{\"1070\":1}}],[\"本文主要讨论github的action功能\",{\"1\":{\"1070\":1}}],[\"本文主要是回顾下从项目创建到生成数据到数据库\",{\"1\":{\"501\":1}}],[\"本文apk下载地址\",{\"1\":{\"1037\":1}}],[\"本文略长\",{\"1\":{\"934\":1}}],[\"本文分为两个部分\",{\"1\":{\"934\":1}}],[\"本文针对\",{\"1\":{\"932\":1}}],[\"本文并没有讲解如何使用fastreport\",{\"1\":{\"693\":1}}],[\"本文写得比较简单\",{\"1\":{\"693\":1}}],[\"本文中所涉及到的fastreport\",{\"1\":{\"690\":1}}],[\"本文会略过vs2022怎样打包安装程序\",{\"1\":{\"689\":1}}],[\"本文将会给出详细的代码以实现浏览器上并结合fastreport\",{\"1\":{\"689\":1}}],[\"本文摘抄自博客园\",{\"1\":{\"688\":1}}],[\"本文的主角就是它\",{\"1\":{\"682\":1}}],[\"本文直接注入iconfiguration来获取刚才我们配置的数据库连接信息\",{\"1\":{\"661\":1}}],[\"本文示例目前没有用到以下配置\",{\"1\":{\"1108\":1}}],[\"本文示例的版本为vs2019版本\",{\"1\":{\"957\":1}}],[\"本文示例代码环境\",{\"1\":{\"600\":1}}],[\"本文示例环境\",{\"1\":{\"479\":1,\"537\":1,\"571\":1,\"657\":1}}],[\"本文内容基于上一篇\",{\"1\":{\"589\":1}}],[\"本文使用组件\",{\"1\":{\"589\":1}}],[\"本文来演示一下同事教导后的写法\",{\"1\":{\"589\":1}}],[\"本文通过terminal软件执行命令\",{\"1\":{\"554\":1}}],[\"本文仅仅提到了路由的基本使用方式和原理\",{\"1\":{\"168\":1}}],[\"本文链接\",{\"1\":{\"121\":1}}],[\"本文作者\",{\"1\":{\"121\":1}}],[\"本文是一个在centos系统部署\",{\"1\":{\"537\":1}}],[\"本文是读书笔记\",{\"1\":{\"48\":1,\"74\":1}}],[\"本文是以macos系统为例\",{\"1\":{\"20\":1}}],[\"本文开始之前\",{\"1\":{\"41\":1}}],[\"本文已经经过授权转载\",{\"1\":{\"9\":1}}],[\"本文环境\",{\"1\":{\"3\":1}}],[\"本站内容来源自公众号\",{\"1\":{\"0\":1}}],[\"这三种方式总结的特别好\",{\"1\":{\"1065\":1}}],[\"这儿表示查19年1月的库和表\",{\"1\":{\"1041\":2}}],[\"这儿表示差19年1月的库和表\",{\"1\":{\"1041\":1}}],[\"这部分内容相对浅显\",{\"1\":{\"934\":1}}],[\"这部分正常写就好了\",{\"1\":{\"178\":1}}],[\"这行代码就等同于的项目目录下直接执行\",{\"1\":{\"836\":1}}],[\"这下就可以通过主机的9999端口访问到容器内部的80端口\",{\"1\":{\"811\":1}}],[\"这层称为容器层\",{\"1\":{\"811\":1}}],[\"这告诉我们readme\",{\"1\":{\"768\":1}}],[\"这目录里面所有的问题都可以被git管理起来\",{\"1\":{\"752\":1}}],[\"这tmd的网盘要连点几次广告才能下载\",{\"1\":{\"693\":1}}],[\"这都没有什么问题\",{\"1\":{\"690\":1}}],[\"这份文档是可编译\",{\"1\":{\"594\":1}}],[\"这份工作也没了\",{\"1\":{\"201\":1}}],[\"这点我是使用hyper\",{\"1\":{\"1107\":1}}],[\"这点常见的错误就是连接数据库的地址配置有问题\",{\"1\":{\"902\":1}}],[\"这点和\",{\"1\":{\"863\":1}}],[\"这点需要注意\",{\"1\":{\"802\":1}}],[\"这点需要和客户方面沟通并合理说服对方\",{\"1\":{\"204\":1}}],[\"这点新建了一个userinfo的类\",{\"1\":{\"677\":1}}],[\"这点非常感谢我的朋友王老师\",{\"1\":{\"554\":1}}],[\"这边只描述使用存储库进行安装\",{\"1\":{\"862\":1}}],[\"这边只是做一些授权操作\",{\"1\":{\"401\":1}}],[\"这边我们用到了supervisor这个工具\",{\"1\":{\"544\":1}}],[\"这给实时通信带来了根本性挑战\",{\"1\":{\"530\":1}}],[\"这一行为导致流量被转发给\",{\"1\":{\"945\":1}}],[\"这一切的答案\",{\"1\":{\"780\":1}}],[\"这一系列的\",{\"1\":{\"443\":1}}],[\"这一点和软件架构的ioc思想不谋而合\",{\"1\":{\"433\":1}}],[\"这东西有点类似于action过滤器和result的合并使用\",{\"1\":{\"403\":1}}],[\"这次咱们一步一步的来\",{\"1\":{\"833\":1}}],[\"这次请求中获取的对象都是同一个\",{\"1\":{\"346\":1}}],[\"这次也是满足了我的好奇心\",{\"1\":{\"320\":1}}],[\"这次我是在虚拟机里面跑的\",{\"1\":{\"320\":1}}],[\"这次是把那篇文章的精华浓缩了一下\",{\"1\":{\"176\":1}}],[\"这也是为什么大多数提交记录的上面都有父节点的原因\",{\"1\":{\"781\":1}}],[\"这也是本文要解决的问题\",{\"1\":{\"689\":1}}],[\"这也就实现了对象控制权的反转\",{\"1\":{\"444\":1}}],[\"这也就是说\",{\"1\":{\"322\":1}}],[\"这也就是说客户端直接访问代理服务器就能够直接获得目标服务器的资源\",{\"1\":{\"322\":1}}],[\"这也就意味着net\",{\"1\":{\"140\":1}}],[\"这也使得所有\",{\"1\":{\"247\":1}}],[\"这款路由器采用了基于\",{\"1\":{\"247\":1}}],[\"这显然会累垮\",{\"1\":{\"215\":1}}],[\"这意味着所有的\",{\"1\":{\"939\":1}}],[\"这意味着你可以随意白嫖\",{\"1\":{\"322\":1}}],[\"这意味着在实际中集群在特定的条件下可能会丢失写操作\",{\"1\":{\"209\":1}}],[\"这意味着段的数量越多\",{\"1\":{\"204\":1}}],[\"这方案主要是提高吞吐量的\",{\"1\":{\"208\":1}}],[\"这数据不就错了\",{\"1\":{\"208\":1}}],[\"这些提示和快捷方式已经在的visual\",{\"1\":{\"974\":1}}],[\"这些汇总在https\",{\"1\":{\"965\":1}}],[\"这些警告来自微软的ide的security\",{\"1\":{\"965\":1}}],[\"这些规则告知节点\",{\"1\":{\"944\":1}}],[\"这些流量会被转发给\",{\"1\":{\"944\":1}}],[\"这些\",{\"1\":{\"942\":1,\"1012\":1}}],[\"这些技术\",{\"1\":{\"874\":1}}],[\"这些超小的基础镜像\",{\"1\":{\"869\":1}}],[\"这些对象其实就是我们俗称的垃圾对象\",{\"1\":{\"785\":1}}],[\"这些内容\",{\"1\":{\"693\":1}}],[\"这些消息应该指明当前活动或操作\",{\"1\":{\"446\":1}}],[\"这些信息中可能包含错误消息或者错误产生的条件\",{\"1\":{\"446\":1}}],[\"这些齿轮相互啮合在一起\",{\"1\":{\"435\":1}}],[\"这些不需要经过后台处理的文件称为静态文件\",{\"1\":{\"207\":1}}],[\"这些方案还是不够完美\",{\"1\":{\"134\":1}}],[\"这对命令是不是和镜像的docker\",{\"1\":{\"811\":1}}],[\"这对我们在众多日志中查找某一条日志是非常方便的\",{\"1\":{\"738\":1}}],[\"这对我来说也是一个挑战\",{\"1\":{\"185\":1}}],[\"这对于安全方面来说是很好的\",{\"1\":{\"207\":1}}],[\"这可是包含同样功能的\",{\"1\":{\"871\":1}}],[\"这可以在一次清空触发的时候在事务日志里积累出更大的段\",{\"1\":{\"204\":1}}],[\"这可能会让数据恢复从数个小时缩短为几秒钟\",{\"1\":{\"204\":1}}],[\"这使得每个对象都需要获取与其合作的对象\",{\"1\":{\"436\":1}}],[\"这使得爱好者们知道了路由器固件的实现方式\",{\"1\":{\"247\":1}}],[\"这使得操作在主分片和副本分片都完成后才会返回\",{\"1\":{\"204\":1}}],[\"这使dnspy成为调试第三方代码和调试生产环境的首选工具\",{\"1\":{\"173\":1}}],[\"这两个目录\",{\"1\":{\"1074\":1}}],[\"这两个\",{\"1\":{\"943\":1}}],[\"这两个方法都在start\",{\"1\":{\"203\":1}}],[\"这两个方案的目的\",{\"1\":{\"134\":1}}],[\"这两天看见有大佬分享使用钉钉和企业微信的机器人来做通知报警\",{\"1\":{\"694\":1}}],[\"这两部分\",{\"1\":{\"204\":1}}],[\"这不需要在调用层做任何修改\",{\"1\":{\"202\":1}}],[\"这不是得寸进尺吗\",{\"1\":{\"201\":1}}],[\"这不是我们想要的结果\",{\"1\":{\"125\":1}}],[\"这句话的意思就是\",{\"1\":{\"200\":1}}],[\"这么省力\",{\"1\":{\"871\":1}}],[\"这么说没意义\",{\"1\":{\"200\":1}}],[\"这么一算跳槽之后\",{\"1\":{\"198\":1}}],[\"这么来看\",{\"1\":{\"134\":1}}],[\"这张图来自于民间\",{\"1\":{\"196\":1}}],[\"这类可以问\",{\"1\":{\"191\":1}}],[\"这类一致性协议\",{\"1\":{\"134\":1}}],[\"这家也有加班文化\",{\"1\":{\"188\":1}}],[\"这还没结束\",{\"1\":{\"186\":1}}],[\"这将再次发送完全相同的请求\",{\"1\":{\"175\":1}}],[\"这会使得执行速度更快\",{\"1\":{\"163\":1}}],[\"这就要用到虚拟网卡\",{\"1\":{\"1110\":1}}],[\"这就会导致\",{\"1\":{\"780\":1}}],[\"这就会导致缓存中可能存放了很多不常访问的数据\",{\"1\":{\"134\":1}}],[\"这就可以证明\",{\"1\":{\"778\":1}}],[\"这就表示你的这台机器上所有的git仓库都使用这个地址\",{\"1\":{\"748\":1}}],[\"这就需要用到\",{\"1\":{\"734\":1}}],[\"这就叫做缓存穿透\",{\"1\":{\"209\":1}}],[\"这就不是说数据会大量积压在\",{\"1\":{\"208\":1}}],[\"这就使得生产者知道消息已经正确到达目的队列了\",{\"1\":{\"208\":1}}],[\"这就是为什么从16\",{\"1\":{\"986\":1}}],[\"这就是我们想要的\",{\"1\":{\"815\":1}}],[\"这就是有人把ioc容器比喻成\",{\"1\":{\"436\":1}}],[\"这就是职场大忌\",{\"1\":{\"201\":1}}],[\"这就是著名的同源策略\",{\"1\":{\"154\":1}}],[\"这就是业界给出的方案\",{\"1\":{\"134\":1}}],[\"这就是近几年比较流行的解决方案\",{\"1\":{\"134\":1}}],[\"这就和数据库的\",{\"1\":{\"134\":1}}],[\"这又增加了更多的维护成本\",{\"1\":{\"134\":1}}],[\"这是设置虚拟机访问网络的方式\",{\"1\":{\"1110\":1}}],[\"这是常用的操作\",{\"1\":{\"1077\":1}}],[\"这是使用\",{\"1\":{\"1065\":1}}],[\"这是软件的主界面\",{\"1\":{\"1011\":1}}],[\"这是yum的一个bug导致的问题\",{\"1\":{\"949\":1}}],[\"这是默认的更新策略\",{\"1\":{\"914\":1}}],[\"这是最常用的一个精简手段了\",{\"1\":{\"867\":1}}],[\"这是为何\",{\"1\":{\"863\":1}}],[\"这是为什么呢\",{\"1\":{\"779\":1}}],[\"这是会弹出一个叫collection\",{\"1\":{\"737\":1}}],[\"这是将\",{\"1\":{\"502\":1}}],[\"这是asp\",{\"1\":{\"446\":1}}],[\"这是协同工作的基础\",{\"1\":{\"435\":1}}],[\"这是当用户试图访问资源但未经过身份验证时\",{\"1\":{\"359\":1}}],[\"这是一件非常痛苦的事情\",{\"1\":{\"775\":1}}],[\"这是一种在类和依赖项之间实现控制反转\",{\"1\":{\"344\":1}}],[\"这是一种静态的代理层次结构\",{\"1\":{\"322\":1}}],[\"这是一个基于\",{\"1\":{\"944\":1}}],[\"这是一个老生常谈的话题了\",{\"1\":{\"134\":1}}],[\"这是一个知识库网站\",{\"1\":{\"0\":1}}],[\"这是我们上面一直在讲的\",{\"1\":{\"322\":1}}],[\"这是我最喜欢的网络请求调试工具之一\",{\"1\":{\"175\":1}}],[\"这是我最喜欢的性能分析工具\",{\"1\":{\"174\":1}}],[\"这是几个进程就解决高并发的秘密所在\",{\"1\":{\"207\":1}}],[\"这是对你自己的一个全方位的说明\",{\"1\":{\"179\":1}}],[\"这是可重用的代码库\",{\"1\":{\"139\":1}}],[\"这是因为其进行了压缩\",{\"1\":{\"779\":1}}],[\"这是因为git是分布式版本控制系统\",{\"1\":{\"748\":1}}],[\"这是因为\",{\"1\":{\"248\":1,\"778\":1}}],[\"这是因为消息队列的特性\",{\"1\":{\"134\":1}}],[\"这是因为它必须满足\",{\"1\":{\"134\":1}}],[\"这是因为每次数据发生变更\",{\"1\":{\"134\":1}}],[\"这\",{\"1\":{\"134\":3}}],[\"这种事务方式很原始\",{\"1\":{\"1063\":1}}],[\"这种行为通常时不希望发生的\",{\"1\":{\"984\":1}}],[\"这种存储可以以读写的方式被多个pod共享\",{\"1\":{\"914\":1}}],[\"这种关联在做接口测试时非常常见\",{\"1\":{\"745\":1}}],[\"这种关键信息肯定不能说啊\",{\"1\":{\"193\":1}}],[\"这种类型的接口\",{\"1\":{\"734\":1}}],[\"这种类型的设计模式属于行为型模式\",{\"1\":{\"202\":1}}],[\"这种类型的设计模式属于结构型模式\",{\"1\":{\"202\":1}}],[\"这种一般设计到文件上传\",{\"1\":{\"569\":1}}],[\"这种交互方法是强类型的\",{\"1\":{\"535\":1}}],[\"这种只是增加实体类类型的一种方式\",{\"1\":{\"501\":1}}],[\"这种动态获取程序信息以及动态调用对象的功能称为java语言的反射机制\",{\"1\":{\"442\":1}}],[\"这种对数据格式进行修改的方式就被称为转码\",{\"1\":{\"322\":1}}],[\"这种网络实体叫服务器\",{\"1\":{\"322\":1}}],[\"这种终于可以进入系统了\",{\"1\":{\"312\":1}}],[\"这种做法相当于是临时将\",{\"1\":{\"208\":1}}],[\"这种模式称为attached默认\",{\"1\":{\"811\":1}}],[\"这种模式\",{\"1\":{\"208\":1}}],[\"这种模式给予请求的类型\",{\"1\":{\"202\":1}}],[\"这种方式只能勉强说是一种备份\",{\"1\":{\"812\":1}}],[\"这种方式不用修改appsettings\",{\"1\":{\"463\":1}}],[\"这种方式不够灵活\",{\"1\":{\"442\":1}}],[\"这种方式被称为反向代理\",{\"1\":{\"322\":1}}],[\"这种方式对\",{\"1\":{\"209\":1}}],[\"这种方式有个缺点\",{\"1\":{\"208\":1}}],[\"这种方案一般更适合业务\",{\"1\":{\"134\":1}}],[\"这种词典\",{\"1\":{\"204\":1}}],[\"这种因小失大\",{\"1\":{\"201\":1}}],[\"这种坑的普遍套路是\",{\"1\":{\"194\":1}}],[\"这种回答\",{\"1\":{\"191\":1}}],[\"这种简历刚打开就想赶紧关上\",{\"1\":{\"182\":1}}],[\"这种情况被称为heisenbug\",{\"1\":{\"984\":1}}],[\"这种情况下\",{\"1\":{\"926\":1}}],[\"这种情况对于线上项目很不灵活\",{\"1\":{\"841\":1}}],[\"这种情况对于很多场景是不允许的\",{\"1\":{\"811\":1}}],[\"这种情况当然是我们不想遇到的\",{\"1\":{\"543\":1}}],[\"这种情况\",{\"1\":{\"134\":1,\"183\":1}}],[\"这种\",{\"1\":{\"134\":1}}],[\"这种间接调用方式可以将调用者和目标方法解耦\",{\"1\":{\"83\":1}}],[\"这篇文章干货很多\",{\"1\":{\"134\":1}}],[\"这篇文章\",{\"1\":{\"134\":1}}],[\"这样即表示安装成功了\",{\"1\":{\"876\":1}}],[\"这样docker\",{\"1\":{\"847\":1}}],[\"这样只能在容器mynginx3内部通过mynginx容器名ping通\",{\"1\":{\"842\":1}}],[\"这样主机网络和容器之间肯定能通\",{\"1\":{\"840\":1}}],[\"这样所有容器通过这个虚拟网桥就打通了\",{\"1\":{\"839\":1}}],[\"这样后续更新变动\",{\"1\":{\"834\":1}}],[\"这样能帮助你使用工具时避免发生混淆\",{\"1\":{\"776\":1}}],[\"这样就达到redis的持久化\",{\"1\":{\"817\":1}}],[\"这样就可以通过\",{\"1\":{\"914\":1}}],[\"这样就可以无限的往复下去形成一个完整的版本\",{\"1\":{\"782\":1}}],[\"这样就可以使用这个环境下的变量了\",{\"1\":{\"740\":1}}],[\"这样就降低了数据的维护速度\",{\"1\":{\"206\":1}}],[\"这样确保客户端\",{\"1\":{\"532\":1}}],[\"这样子把分支a1也弄成了最新数据\",{\"1\":{\"798\":1}}],[\"这样子相比如之前可以更好利用服务器性能\",{\"1\":{\"588\":1}}],[\"这样子加了注释还不行\",{\"1\":{\"483\":1}}],[\"这样子就可以直接从appsettings\",{\"1\":{\"457\":1}}],[\"这样子就可以和allowcredentials进行搭配\",{\"1\":{\"155\":1}}],[\"这样子就可以实现ascii排序排序了\",{\"1\":{\"125\":1}}],[\"这样代理服务器就会把带宽省下来的同时提高访问速度\",{\"1\":{\"322\":1}}],[\"这样在没有密码的情况下\",{\"1\":{\"265\":1}}],[\"这样在失效的时候\",{\"1\":{\"209\":1}}],[\"这样上层的代码可以绕过gpl协议\",{\"1\":{\"247\":1}}],[\"这样的源代码是可以调试的\",{\"1\":{\"986\":1}}],[\"这样的返回值可以显示在调试\",{\"1\":{\"982\":1}}],[\"这样的基础镜像\",{\"1\":{\"871\":1}}],[\"这样的数据层级在postman怎么获取呢\",{\"1\":{\"746\":1}}],[\"这样的话可以统一处理数据库相关的操作\",{\"1\":{\"1047\":1}}],[\"这样的话\",{\"1\":{\"436\":1}}],[\"这样的内网穿透工具\",{\"1\":{\"242\":1}}],[\"这样的好处在于\",{\"1\":{\"208\":1}}],[\"这样我们就知道了这次提交的变动了\",{\"1\":{\"781\":1}}],[\"这样我们就理解了\",{\"1\":{\"781\":1}}],[\"这样我们就有一个大概能用的敏感词检测组件了\",{\"1\":{\"215\":1}}],[\"这样我们能够有效的保存大文档\",{\"1\":{\"205\":1}}],[\"这样会带来很大的耦合\",{\"1\":{\"215\":1}}],[\"这样设置以后\",{\"1\":{\"208\":1}}],[\"这样\",{\"1\":{\"208\":1,\"210\":1,\"789\":1,\"941\":1}}],[\"这样不就保留了一条数据\",{\"1\":{\"208\":1}}],[\"这样数据就可以从套接字读取\",{\"1\":{\"207\":1}}],[\"这样该副本被认为故障\",{\"1\":{\"204\":1}}],[\"这样你才能安全的共享\",{\"1\":{\"202\":1}}],[\"这样你可以报给\",{\"1\":{\"197\":1}}],[\"这样回答不会被扣分\",{\"1\":{\"189\":1}}],[\"这样也能达到最终一致\",{\"1\":{\"134\":1}}],[\"这样可以进一步简化流程\",{\"1\":{\"134\":1}}],[\"这样做值得吗\",{\"1\":{\"134\":1}}],[\"这样一来\",{\"1\":{\"134\":2}}],[\"这样便完成了整个手中的私人密钥和github的认证和通信问题\",{\"1\":{\"19\":1}}],[\"这项技术查询特性\",{\"1\":{\"41\":1}}],[\"这时需要查询一下家里或公司网络\",{\"1\":{\"1111\":1}}],[\"这时可以发现\",{\"1\":{\"780\":1}}],[\"这时通过查看日志就显得非常重要了\",{\"1\":{\"738\":1}}],[\"这时就可以在下部的窗格中看到来自服务器的json响应数据\",{\"1\":{\"724\":1}}],[\"这时会进入到postman主界面\",{\"1\":{\"722\":1}}],[\"这时多么希望自己带了充电线或者充电宝啊\",{\"1\":{\"432\":1}}],[\"这时候我们想要将nuget的默认的包存放位置放在其他的目录下面\",{\"1\":{\"970\":1}}],[\"这时候生成项目\",{\"1\":{\"577\":1}}],[\"这时候\",{\"1\":{\"436\":1,\"1110\":1}}],[\"这时候可能有读者会说了\",{\"1\":{\"322\":1}}],[\"这时候就不会直接在校验的方法中直接引入\",{\"1\":{\"215\":1}}],[\"这时候你就问她\",{\"1\":{\"200\":1}}],[\"这时我们换个角度思考一下\",{\"1\":{\"134\":1}}],[\"这时架构模型就变成了这样\",{\"1\":{\"134\":1}}],[\"这时用户会发现\",{\"1\":{\"134\":1}}],[\"这时用户会发现自己之前修改的数据又\",{\"1\":{\"134\":1}}],[\"这时如果每次都从数据库中读数据\",{\"1\":{\"134\":1}}],[\"这时你的架构模型是这样的\",{\"1\":{\"134\":1}}],[\"这时\",{\"1\":{\"40\":1}}],[\"这里选择\",{\"1\":{\"1110\":1}}],[\"这里根据个人情况设置简单或者复杂的密码\",{\"1\":{\"1104\":1}}],[\"这里使用的chocolatey安装\",{\"1\":{\"1016\":1}}],[\"这里使用serilog做日志组件\",{\"1\":{\"448\":1}}],[\"这里提供一个可用的注册码给大家\",{\"1\":{\"1110\":1}}],[\"这里提供了一个国外网盘下载地址\",{\"1\":{\"693\":1}}],[\"这里提前创建好\",{\"1\":{\"1013\":1}}],[\"这里安装可能会报错exiting\",{\"1\":{\"949\":1}}],[\"这里给出一个\",{\"1\":{\"930\":1}}],[\"这里配置了nodeport\",{\"1\":{\"923\":1}}],[\"这里举出了一个service的yaml\",{\"1\":{\"923\":1}}],[\"这里对port进行了抽象\",{\"1\":{\"920\":1}}],[\"这里未列出\",{\"1\":{\"919\":1}}],[\"这里再给大家介绍一个非常好用开源的\",{\"1\":{\"871\":1}}],[\"这里调用了\",{\"1\":{\"865\":1}}],[\"这里设置了\",{\"1\":{\"865\":1}}],[\"这里开始\",{\"1\":{\"864\":1}}],[\"这里用的是我的阿里云服务器\",{\"1\":{\"852\":1}}],[\"这里记得将docker\",{\"1\":{\"851\":1}}],[\"这里记得将dockerfile文件通过右键\",{\"1\":{\"851\":1}}],[\"这里还需要在startup文件中注入相关服务\",{\"1\":{\"851\":1}}],[\"这里还是用我的云服务器\",{\"1\":{\"835\":1}}],[\"这里还是以一个webapi为例\",{\"1\":{\"851\":1}}],[\"这里还是以\",{\"1\":{\"833\":1}}],[\"这里还是给个简单demo\",{\"1\":{\"438\":1}}],[\"这里只是引入了一个redis的缓存包\",{\"1\":{\"851\":1}}],[\"这里只是演示创建文件而已\",{\"1\":{\"811\":1}}],[\"这里为bridge桥接模式\",{\"1\":{\"843\":1}}],[\"这里新启动一个容器mynginx2\",{\"1\":{\"840\":1}}],[\"这里有了变化\",{\"1\":{\"944\":1}}],[\"这里有个前提就是\",{\"1\":{\"943\":1}}],[\"这里有个魔术\",{\"1\":{\"173\":1}}],[\"这里有没有发现容器内的ip是和主机多出来的虚拟网卡是成对出现\",{\"1\":{\"840\":1}}],[\"这里主要介绍nodeport和ingress方式\",{\"1\":{\"929\":1}}],[\"这里主要介绍了三种精简方法\",{\"1\":{\"872\":1}}],[\"这里主要看看主机和容器之间的网络\",{\"1\":{\"840\":1}}],[\"这里主要演示dockerfile关键字\",{\"1\":{\"833\":1}}],[\"这里指定为host模式\",{\"1\":{\"839\":1}}],[\"这里指定默认语言包\",{\"1\":{\"144\":1}}],[\"这里模拟挂载日志目录\",{\"1\":{\"837\":1}}],[\"这里由于dockerfile在当前路径\",{\"1\":{\"835\":1}}],[\"这里默认是以80端口启动的\",{\"1\":{\"834\":1,\"837\":1}}],[\"这里重新认识下这个dockerfile文件\",{\"1\":{\"818\":1}}],[\"这里除了挂载的时候是指定名称挂载\",{\"1\":{\"815\":1}}],[\"这里简单回顾一下根据镜像启动容器流程\",{\"1\":{\"812\":1}}],[\"这里启动了两个nginx容器\",{\"1\":{\"811\":1}}],[\"这里另开一个终端执行docker\",{\"1\":{\"811\":1}}],[\"这里演示就将原来拉取的镜像删除\",{\"1\":{\"810\":1}}],[\"这里先用命令的方式进行演示\",{\"1\":{\"815\":1}}],[\"这里先了解\",{\"1\":{\"810\":1}}],[\"这里先不贴代码\",{\"1\":{\"600\":1}}],[\"这里借用一下\",{\"1\":{\"807\":1}}],[\"这里面有需要c\",{\"1\":{\"798\":1}}],[\"这里面有几个比较实用的功能\",{\"1\":{\"738\":1}}],[\"这里需要一个ingress\",{\"1\":{\"931\":1}}],[\"这里需要借助cni网络插件来实现\",{\"1\":{\"928\":1}}],[\"这里需要稍微改一下我们原来的代码\",{\"1\":{\"851\":1}}],[\"这里需要注意\",{\"1\":{\"851\":1}}],[\"这里需要注意的是\",{\"1\":{\"785\":1,\"820\":1}}],[\"这里需要满足一定的磁盘大小才能下一步\",{\"1\":{\"312\":1}}],[\"这里\",{\"1\":{\"779\":1}}],[\"这里因为是在testdockerimage目录下执行命令\",{\"1\":{\"810\":1}}],[\"这里因为内容里面有换行符的存在导致的\",{\"1\":{\"779\":1}}],[\"这里因为\",{\"1\":{\"778\":1,\"779\":1}}],[\"这里怎么做到的呢\",{\"1\":{\"778\":1}}],[\"这里没有显示指定tag\",{\"1\":{\"837\":1}}],[\"这里没有\",{\"1\":{\"775\":1}}],[\"这里填写的200是预期结果\",{\"1\":{\"739\":1}}],[\"这里就以默认的bridge\",{\"1\":{\"840\":1}}],[\"这里就需要用到run关键字\",{\"1\":{\"822\":1}}],[\"这里就需要使用代理了\",{\"1\":{\"322\":1}}],[\"这里就不另外创建用户\",{\"1\":{\"1104\":1}}],[\"这里就不再赘述技术细节\",{\"1\":{\"863\":1}}],[\"这里就不演示了\",{\"1\":{\"838\":1}}],[\"这里就不重复截图了\",{\"1\":{\"815\":1}}],[\"这里就不重复截图啦\",{\"1\":{\"812\":1}}],[\"这里就不做过多介绍了\",{\"1\":{\"693\":1}}],[\"这里就直接创建一个默认的api项目\",{\"1\":{\"806\":1}}],[\"这里可以做成nuget包\",{\"1\":{\"575\":1}}],[\"这里替换查询redis操作\",{\"1\":{\"401\":2}}],[\"这里要和token类中claim类型的发行人保持一致\",{\"1\":{\"364\":1}}],[\"这里例举一些使用对应开源许可的项目\",{\"1\":{\"253\":1}}],[\"这里不急着往下说\",{\"1\":{\"806\":1}}],[\"这里不管\",{\"1\":{\"786\":1}}],[\"这里不详细展开\",{\"1\":{\"215\":1}}],[\"这里不过多介绍aop\",{\"1\":{\"215\":1}}],[\"这里不再详述\",{\"1\":{\"134\":1}}],[\"这里顺便说一下吧\",{\"1\":{\"208\":1}}],[\"这里并没有用到超时机制\",{\"1\":{\"208\":1}}],[\"这里将静态资源放到nginx中\",{\"1\":{\"207\":1}}],[\"这里的userinfo是查询时候映射的模型\",{\"1\":{\"1061\":1}}],[\"这里的负载均衡是一个简单的\",{\"1\":{\"938\":1}}],[\"这里的dockerfile目的就是将我们的webapi项目构建为镜像\",{\"1\":{\"851\":1}}],[\"这里的dockerfile文件就好比平时我们编写的程序文件\",{\"1\":{\"818\":1}}],[\"这里的docker0就好比是交换机\",{\"1\":{\"840\":1}}],[\"这里的pluginsconfigureservice用来注册插件的服务\",{\"1\":{\"573\":1}}],[\"这里的目录指的是服务的工作目录\",{\"1\":{\"564\":1}}],[\"这里的作法是为每一个请求带一个编号\",{\"1\":{\"326\":1}}],[\"这里的代理是现实生活中的实体\",{\"1\":{\"322\":1}}],[\"这里的索引文档应该理解为文档写入\",{\"1\":{\"204\":1}}],[\"这里的\",{\"1\":{\"204\":1,\"604\":1}}],[\"这里我保存了一下镜像仓库的账号密码等信息\",{\"1\":{\"1070\":1}}],[\"这里我提前创建仓库为myexample\",{\"1\":{\"1069\":1}}],[\"这里我直接安装ubuntu系统\",{\"1\":{\"1007\":1}}],[\"这里我直接使用docker安装了redis\",{\"1\":{\"380\":1,\"385\":1}}],[\"这里我只修改了安装的地址\",{\"1\":{\"802\":1}}],[\"这里我选择安装到d盘\",{\"1\":{\"802\":1}}],[\"这里我使用的是允许所有\",{\"1\":{\"155\":1}}],[\"这里我使用shell\",{\"1\":{\"6\":1}}],[\"这里我再把例子拿过来让你复习一下\",{\"1\":{\"134\":1}}],[\"这里我们选择ssh\",{\"1\":{\"1106\":1}}],[\"这里我们定义了一个ingress模板\",{\"1\":{\"931\":1}}],[\"这里我们直接选择安装推荐的插件然后进入系统\",{\"1\":{\"889\":1}}],[\"这里我们就演示如何配置ssh方式拉取代码\",{\"1\":{\"802\":1}}],[\"这里我们可以看到分支切换之后\",{\"1\":{\"785\":1}}],[\"这里我们模拟ibaserepository传入任何的user到添加方法都返回\",{\"1\":{\"591\":1}}],[\"这里我们并不使用mstest进行测试\",{\"1\":{\"585\":1}}],[\"这里我们将类名作为参数传递给工厂\",{\"1\":{\"442\":1}}],[\"这里我们简单看一下官方提供的redis缓存用法\",{\"1\":{\"379\":1,\"384\":1}}],[\"这里我们熟悉\",{\"1\":{\"322\":1}}],[\"这里我们必须把重试或第二步操作放到另一个\",{\"1\":{\"134\":1}}],[\"这里我们重点来看\",{\"1\":{\"134\":1}}],[\"这里我们还需要重点关注\",{\"1\":{\"134\":1}}],[\"这里我不再详述具体场景\",{\"1\":{\"134\":1}}],[\"这里密码已经修改成功\",{\"1\":{\"40\":1}}],[\"这里是9006\",{\"1\":{\"37\":1}}],[\"这个目录是系统的起点\",{\"1\":{\"1110\":1}}],[\"这个目录以及下面的文件\",{\"1\":{\"778\":1}}],[\"这个里面放的是网络配置\",{\"1\":{\"1107\":1}}],[\"这个安卓sdk的地址只能你自己在你电脑上找了\",{\"1\":{\"1037\":1}}],[\"这个安装过程根据你的硬件配置和网络决定安装速度\",{\"1\":{\"1012\":1}}],[\"这个特性有一些限制\",{\"1\":{\"986\":1}}],[\"这个特性是基于开源软件\",{\"1\":{\"986\":1}}],[\"这个标记可以用来显示线程id\",{\"1\":{\"985\":1}}],[\"这个操作中\",{\"1\":{\"945\":1}}],[\"这个命名的原因是它过去使用\",{\"1\":{\"944\":1}}],[\"这个对象里包含了两个符合\",{\"1\":{\"942\":1}}],[\"这个对象处于一组相似的\",{\"1\":{\"939\":1}}],[\"这个字段是一个标签列表\",{\"1\":{\"942\":1}}],[\"这个请求需要经过认证\",{\"1\":{\"941\":1}}],[\"这个服务器\",{\"1\":{\"931\":1}}],[\"这个服务用\",{\"1\":{\"134\":1}}],[\"这个网络有点特别\",{\"1\":{\"944\":1}}],[\"这个网络是一个桥接模式\",{\"1\":{\"852\":1}}],[\"这个网站生成的\",{\"1\":{\"340\":1}}],[\"这个网站你可以一键生成一个在线的\",{\"1\":{\"338\":1}}],[\"这个地址快点\",{\"1\":{\"846\":1}}],[\"这个地址下载比较慢\",{\"1\":{\"846\":1}}],[\"这个地方是自定义一个守护进程\",{\"1\":{\"564\":1}}],[\"这个和git中的\",{\"1\":{\"838\":1}}],[\"这个和上面那个套路差不多\",{\"1\":{\"193\":1}}],[\"这个参数就会把cmd命令替换掉\",{\"1\":{\"838\":1}}],[\"这个指针\",{\"1\":{\"784\":1}}],[\"这个文件是可以修改的\",{\"1\":{\"798\":1}}],[\"这个文件的内容时\",{\"1\":{\"788\":1}}],[\"这个文件的指向也会随机改变的\",{\"1\":{\"781\":1}}],[\"这个文件下存储着管理当前目录内容所需要的仓库数据\",{\"1\":{\"22\":1}}],[\"这个是容器id\",{\"1\":{\"811\":1}}],[\"这个是git用来跟踪管理版本文件的\",{\"1\":{\"752\":1}}],[\"这个是我理解的单元测试样子\",{\"1\":{\"588\":1}}],[\"这个前置脚本对我们做接口测试也非常有用\",{\"1\":{\"744\":1}}],[\"这个环境\",{\"1\":{\"740\":1}}],[\"这个断言功能必不可少\",{\"1\":{\"739\":1}}],[\"这个功能可能更方便些\",{\"1\":{\"738\":1}}],[\"这个功能主要是用于对一个collection中的所有用例或部分用例进行批量运行\",{\"1\":{\"737\":1}}],[\"这个就是我们所测试的接口\",{\"1\":{\"736\":1}}],[\"这个就可以理解为系统中的模块\",{\"1\":{\"736\":1}}],[\"这个就可以理解为所测试的系统\",{\"1\":{\"736\":1}}],[\"这个选项一般对返回html的页面效果特别明显\",{\"1\":{\"735\":1}}],[\"这个userinfoserviceclient文件就是我们刚才引入的proto文件生成的代码\",{\"1\":{\"673\":1}}],[\"这个阶段是用准备好的数据去调用要测试的方法\",{\"1\":{\"586\":1}}],[\"这个阶段是准备工作\",{\"1\":{\"586\":1}}],[\"这个阶段通常的做法是\",{\"1\":{\"134\":1}}],[\"这个supervisord牵涉到的知识还挺多\",{\"1\":{\"549\":1}}],[\"这个条件只是展示如何添加条件\",{\"1\":{\"522\":1}}],[\"这个这两天才发现\",{\"1\":{\"478\":1}}],[\"这个基本的接口不关心\",{\"1\":{\"443\":1}}],[\"这个过程如下图所示\",{\"1\":{\"945\":1}}],[\"这个过程会非常痛苦\",{\"1\":{\"936\":1}}],[\"这个过程看起来很是混乱\",{\"1\":{\"936\":1}}],[\"这个过程是自动进行的\",{\"1\":{\"468\":1}}],[\"这个过程中\",{\"1\":{\"438\":1}}],[\"这个过程叫做\",{\"1\":{\"204\":1}}],[\"这个需要自行判断\",{\"1\":{\"428\":1}}],[\"这个可以参考自己电脑的空间进行配置\",{\"1\":{\"961\":1}}],[\"这个可以从上下文中获取\",{\"1\":{\"424\":1}}],[\"这个可以看之前的文章\",{\"1\":{\"3\":1}}],[\"这个方法里面包含了一个exceptioncontext异常上下文\",{\"1\":{\"404\":1}}],[\"这个方法会触发缓存过期\",{\"1\":{\"376\":1}}],[\"这个方案的优点是\",{\"1\":{\"134\":1}}],[\"这个思路的其中一种实现方式就是依赖注入\",{\"1\":{\"344\":1}}],[\"这个协议会自动检测出浏览器可以从哪个配置服务器下载到一个自动配置文件\",{\"1\":{\"322\":1}}],[\"这个项目是用\",{\"1\":{\"243\":1}}],[\"这个项目是通过\",{\"1\":{\"243\":1}}],[\"这个开源项目是通过\",{\"1\":{\"243\":1}}],[\"这个医院\",{\"1\":{\"210\":1}}],[\"这个应该是可以同时把\",{\"1\":{\"209\":1}}],[\"这个范围的槽而不可用\",{\"1\":{\"209\":1}}],[\"这个还有别的办法吗\",{\"1\":{\"208\":1}}],[\"这个我们之前线上也有类似的场景干过\",{\"1\":{\"208\":1}}],[\"这个数据就没了\",{\"1\":{\"208\":1}}],[\"这个程序部署上去消费积压的数据\",{\"1\":{\"208\":1}}],[\"这个性能开销也太大了吧\",{\"1\":{\"208\":1}}],[\"这个策略是镜像集群模式的策略\",{\"1\":{\"208\":1}}],[\"这个持久化配置可以和confirm机制配合使用\",{\"1\":{\"208\":1}}],[\"这个request才会接着往下走\",{\"1\":{\"207\":1}}],[\"这个处理的worker继续处理其他请求\",{\"1\":{\"207\":1}}],[\"这个从\",{\"1\":{\"204\":1}}],[\"这个类是通过连接字符串建立主库和从库的关系\",{\"1\":{\"1047\":1}}],[\"这个类的调用是在program\",{\"1\":{\"203\":1}}],[\"这个类用来配置应用\",{\"1\":{\"203\":1}}],[\"这个问题是由于\",{\"1\":{\"543\":1}}],[\"这个问题\",{\"1\":{\"436\":1}}],[\"这个问题与前面的类似\",{\"1\":{\"202\":1}}],[\"这个问题我经常问\",{\"1\":{\"190\":1}}],[\"这个问题我是不会问的\",{\"1\":{\"189\":1}}],[\"这个问题很好\",{\"1\":{\"134\":1}}],[\"这个时间随着数据量的增加而增加\",{\"1\":{\"206\":1}}],[\"这个时间在分布式和高并发场景下\",{\"1\":{\"134\":1}}],[\"这个时候的ip是动态分配的ip地址\",{\"1\":{\"1105\":1}}],[\"这个时候会在主机上创建一对虚拟网卡veth\",{\"1\":{\"840\":1}}],[\"这个时候可能出错\",{\"1\":{\"798\":1}}],[\"这个时候就可以关注微信测试号\",{\"1\":{\"711\":1}}],[\"这个时候启动宿主项目并调用接口我们可以看到输出信息为\",{\"1\":{\"575\":1}}],[\"这个时候不是应该出来swagger文档的界面吗\",{\"1\":{\"554\":1}}],[\"这个时候\",{\"1\":{\"548\":1,\"575\":1}}],[\"这个时候你的其他同事去看\",{\"1\":{\"483\":1}}],[\"这个时候你的请求为\",{\"1\":{\"468\":1}}],[\"这个时候你要说那么我们可以使用swagger\",{\"1\":{\"216\":1}}],[\"这个时候我们一般会编写别名转换来实现\",{\"1\":{\"1061\":1}}],[\"这个时候我们重启一次电脑\",{\"1\":{\"876\":1}}],[\"这个时候我们已经实现了用户消息的接收和回复代码\",{\"1\":{\"711\":1}}],[\"这个时候我们已经看到项目的接口已经都被同步过来了\",{\"1\":{\"234\":1}}],[\"这个时候我们启动项目\",{\"1\":{\"580\":1}}],[\"这个时候我们可以使用json操作符\",{\"1\":{\"342\":1}}],[\"这个时候我们可以编写自定义排序规则来实现\",{\"1\":{\"125\":1}}],[\"这个时候我们就开始写程序\",{\"1\":{\"208\":1}}],[\"这个时候是隐式转换\",{\"1\":{\"127\":1}}],[\"这个\",{\"1\":{\"134\":1,\"243\":1,\"781\":2,\"931\":1,\"935\":1,\"942\":1}}],[\"这个线程资源\",{\"1\":{\"134\":1}}],[\"c盘\",{\"1\":{\"1110\":1}}],[\"cfg\",{\"1\":{\"1077\":2}}],[\"cyan\",{\"1\":{\"1036\":1}}],[\"cym1102\",{\"1\":{\"853\":1}}],[\"c7b477e404c714854734312a210f764dcf08c56a文件大小\",{\"1\":{\"1035\":1}}],[\"cbr0\",{\"1\":{\"944\":1}}],[\"cbs\",{\"1\":{\"307\":1}}],[\"c语言\",{\"1\":{\"869\":1}}],[\"c语言开发\",{\"1\":{\"869\":1}}],[\"c++\",{\"1\":{\"869\":1,\"965\":1,\"985\":1,\"1012\":1}}],[\"cvs\",{\"1\":{\"776\":1}}],[\"cvl4ulcegr5w\",{\"1\":{\"685\":1}}],[\"cx\",{\"1\":{\"728\":1}}],[\"cxuan\",{\"1\":{\"322\":1}}],[\"cwd\",{\"1\":{\"564\":2}}],[\"c和d了\",{\"1\":{\"436\":1}}],[\"ctime\",{\"1\":{\"1077\":2}}],[\"ctx\",{\"1\":{\"580\":2}}],[\"ctrl+\",{\"1\":{\"965\":1}}],[\"ctrl+t搜索打开\",{\"1\":{\"965\":1}}],[\"ctrl+i\",{\"1\":{\"965\":1}}],[\"ctrl+m+p\",{\"1\":{\"965\":1}}],[\"ctrl+m+m\",{\"1\":{\"965\":2}}],[\"ctrl+m\",{\"1\":{\"965\":1}}],[\"ctrl+e+s\",{\"1\":{\"965\":1}}],[\"ctrl+e\",{\"1\":{\"965\":1}}],[\"ctrl+r+w\",{\"1\":{\"965\":1}}],[\"ctrl+r\",{\"1\":{\"965\":3}}],[\"ctrl+shift+f\",{\"1\":{\"1036\":2}}],[\"ctrl+shift+c\",{\"1\":{\"1036\":1}}],[\"ctrl+shift+v\",{\"1\":{\"965\":1,\"1036\":1}}],[\"ctrl+shift+w\",{\"1\":{\"965\":1}}],[\"ctrl+shift+a\",{\"1\":{\"956\":1}}],[\"ctrl+s\",{\"1\":{\"965\":1}}],[\"ctrl+n\",{\"1\":{\"965\":1}}],[\"ctrl+k\",{\"1\":{\"965\":6}}],[\"ctrl+a\",{\"1\":{\"965\":1}}],[\"ctrl+v\",{\"1\":{\"965\":1,\"1036\":2}}],[\"ctrl+x\",{\"1\":{\"965\":2}}],[\"ctrl+c\",{\"1\":{\"965\":1,\"1036\":2,\"1111\":1}}],[\"ctrl+z\",{\"1\":{\"965\":1}}],[\"ctrl+h\",{\"1\":{\"965\":1}}],[\"ctrl+g\",{\"1\":{\"965\":1}}],[\"ctrl+f10运行到光标位置\",{\"1\":{\"975\":1}}],[\"ctrl+f10\",{\"1\":{\"975\":1}}],[\"ctrl+f\",{\"1\":{\"965\":2}}],[\"ctrl+f5\",{\"1\":{\"965\":1}}],[\"ctrl+0\",{\"1\":{\"254\":1}}],[\"ctrl\",{\"1\":{\"243\":1,\"949\":1,\"965\":2,\"1110\":2}}],[\"ctl\",{\"1\":{\"38\":2}}],[\"cp\",{\"0\":{\"1079\":1,\"1093\":1},\"1\":{\"812\":2,\"862\":1,\"1079\":5,\"1093\":1}}],[\"cpolar\",{\"1\":{\"242\":1}}],[\"cpu\",{\"1\":{\"204\":1,\"809\":1,\"876\":1,\"914\":5,\"1110\":6}}],[\"c10k问题是指无法同时处理大量客户端\",{\"1\":{\"207\":1}}],[\"cmyk颜色的8位\",{\"1\":{\"255\":1}}],[\"cms\",{\"1\":{\"204\":1}}],[\"cmd和entrypoint的区别\",{\"0\":{\"838\":1}}],[\"cmdline\",{\"1\":{\"588\":1}}],[\"cmderdev\",{\"1\":{\"278\":1}}],[\"cmder\",{\"0\":{\"278\":1},\"1\":{\"278\":2}}],[\"cmd\",{\"0\":{\"829\":1},\"1\":{\"120\":4,\"542\":1,\"564\":1,\"807\":1,\"829\":4,\"838\":2,\"865\":2,\"867\":2,\"868\":1,\"870\":2,\"911\":4,\"1036\":2,\"1108\":5,\"1109\":5,\"1111\":2,\"1112\":1,\"1113\":1}}],[\"ccc\",{\"1\":{\"180\":1,\"342\":3}}],[\"c是culture\",{\"1\":{\"147\":1}}],[\"c2c6\",{\"1\":{\"1036\":2}}],[\"c2与taskdao无引用关系\",{\"1\":{\"94\":3}}],[\"c2\",{\"1\":{\"94\":5,\"95\":2,\"101\":1,\"106\":2,\"109\":1,\"112\":1,\"115\":2}}],[\"c=user\",{\"1\":{\"733\":1,\"744\":1}}],[\"c=zh\",{\"1\":{\"147\":2}}],[\"c=\",{\"1\":{\"78\":1}}],[\"crmqb\",{\"1\":{\"973\":1}}],[\"crosbymichael\",{\"1\":{\"874\":1}}],[\"crosby\",{\"1\":{\"873\":1}}],[\"cross\",{\"1\":{\"519\":1}}],[\"credit\",{\"1\":{\"1061\":2}}],[\"credentials\",{\"1\":{\"797\":1}}],[\"credential\",{\"1\":{\"775\":2,\"797\":1}}],[\"creating\",{\"1\":{\"577\":1}}],[\"creation\",{\"1\":{\"564\":1}}],[\"create<productsalebydayentity>\",{\"1\":{\"1040\":1,\"1041\":9,\"1042\":1,\"1043\":3,\"1044\":3}}],[\"create<uribuildingcontext>\",{\"1\":{\"165\":1}}],[\"createnamespacens\",{\"1\":{\"914\":1}}],[\"createname=\",{\"1\":{\"837\":1}}],[\"createmenu\",{\"1\":{\"712\":1}}],[\"creatematcher\",{\"1\":{\"167\":1}}],[\"createsubkey\",{\"1\":{\"692\":3}}],[\"createscope\",{\"1\":{\"353\":1,\"355\":1,\"501\":1}}],[\"createclient\",{\"1\":{\"586\":1,\"600\":1}}],[\"createbuilder\",{\"1\":{\"574\":1}}],[\"createresponsemessage<responsemessagetext>\",{\"1\":{\"711\":2}}],[\"creater\",{\"1\":{\"501\":5}}],[\"createinfoforapiversion\",{\"1\":{\"497\":2}}],[\"createinstance\",{\"1\":{\"93\":1,\"94\":2,\"101\":1,\"105\":3,\"106\":2,\"109\":1,\"112\":1,\"115\":2,\"117\":1,\"119\":1,\"120\":2,\"574\":1}}],[\"createlogger<program>\",{\"1\":{\"501\":1}}],[\"createlogger<opendbsend>\",{\"1\":{\"501\":1}}],[\"createlogger\",{\"1\":{\"458\":1,\"459\":1,\"463\":1}}],[\"createdirectory\",{\"1\":{\"574\":1,\"692\":1}}],[\"created\",{\"1\":{\"331\":2,\"863\":1,\"871\":1}}],[\"createdefaultbuilder\",{\"1\":{\"215\":1,\"447\":1,\"454\":1,\"462\":1,\"463\":1,\"583\":2,\"585\":2,\"661\":1}}],[\"createhostbuilder\",{\"1\":{\"215\":1,\"447\":1,\"454\":2,\"462\":2,\"463\":2,\"501\":1,\"583\":2,\"661\":2}}],[\"createfromfiles\",{\"1\":{\"203\":1}}],[\"createtime\",{\"1\":{\"120\":4,\"501\":3,\"511\":3,\"512\":1,\"513\":1,\"1061\":2}}],[\"create\",{\"1\":{\"8\":1,\"564\":4,\"843\":1,\"914\":2,\"964\":1,\"1061\":3}}],[\"cref=\",{\"1\":{\"501\":1,\"574\":1,\"660\":3}}],[\"critical\",{\"1\":{\"446\":2,\"447\":1,\"456\":1}}],[\"crlf\",{\"1\":{\"323\":1}}],[\"crash\",{\"1\":{\"209\":1}}],[\"crc16\",{\"1\":{\"209\":1}}],[\"cry\",{\"1\":{\"73\":2}}],[\"cultureinvariant\",{\"1\":{\"163\":1}}],[\"cultureinfo\",{\"1\":{\"124\":5,\"125\":1,\"144\":2,\"164\":1}}],[\"culture=zh\",{\"1\":{\"148\":4}}],[\"culture\",{\"1\":{\"147\":1}}],[\"curruser\",{\"1\":{\"620\":4}}],[\"currentimplementationapiversionselector\",{\"1\":{\"650\":1}}],[\"currentuser\",{\"1\":{\"518\":1}}],[\"currentdirectory\",{\"1\":{\"375\":1,\"693\":1}}],[\"currentdomain\",{\"1\":{\"117\":1,\"483\":1,\"494\":1,\"582\":1}}],[\"current\",{\"1\":{\"367\":3,\"368\":4,\"676\":1,\"677\":1,\"680\":3,\"681\":1,\"1055\":1}}],[\"currentthread\",{\"1\":{\"124\":3}}],[\"currentculture\",{\"1\":{\"124\":5,\"125\":1}}],[\"curl\",{\"0\":{\"565\":1},\"1\":{\"3\":1,\"4\":1,\"540\":1,\"541\":1,\"567\":1,\"568\":1,\"569\":1,\"846\":2,\"862\":1,\"865\":4,\"867\":4}}],[\"custompropertytypemap\",{\"1\":{\"1061\":3}}],[\"custommessagehandler\",{\"1\":{\"711\":1}}],[\"customapi\",{\"1\":{\"711\":1}}],[\"customattribute\",{\"1\":{\"102\":5}}],[\"customcontractresolver\",{\"1\":{\"478\":2}}],[\"customfilter\",{\"1\":{\"421\":3}}],[\"customexceptionfilter\",{\"1\":{\"413\":3}}],[\"customername\",{\"1\":{\"1063\":5,\"1064\":5,\"1065\":5}}],[\"customers\",{\"1\":{\"1063\":1,\"1064\":1,\"1065\":1}}],[\"customeridlist\",{\"1\":{\"1055\":1}}],[\"customerinfo\",{\"1\":{\"674\":2,\"675\":1,\"676\":2,\"677\":1}}],[\"customermessagehandler\",{\"1\":{\"711\":3}}],[\"customer\",{\"1\":{\"675\":1}}],[\"customer=1\",{\"1\":{\"674\":1}}],[\"customerresponse\",{\"1\":{\"674\":2,\"675\":1}}],[\"customerexceptionfilter\",{\"1\":{\"408\":1}}],[\"customerattribute\",{\"1\":{\"407\":1}}],[\"customercomparer\",{\"1\":{\"125\":2}}],[\"customresultpack2filter\",{\"1\":{\"416\":1}}],[\"customresultpackfilter\",{\"1\":{\"416\":2}}],[\"customresourcefilterattribute\",{\"1\":{\"409\":1}}],[\"customrabbitmq\",{\"1\":{\"47\":1}}],[\"customrabbitmqattributeextension\",{\"1\":{\"46\":1}}],[\"customrabbitmqattribute扩展方法\",{\"1\":{\"46\":1}}],[\"customrabbitmqattribute\",{\"1\":{\"46\":7}}],[\"custom\",{\"1\":{\"155\":1,\"157\":3,\"1036\":1,\"1061\":3}}],[\"cs的configureservices中添加services\",{\"1\":{\"1039\":1}}],[\"csproj文件中\",{\"1\":{\"1037\":1}}],[\"csproj\",{\"1\":{\"562\":1,\"563\":1,\"577\":2,\"585\":1,\"1070\":4}}],[\"cshtml\",{\"1\":{\"404\":1,\"405\":1}}],[\"csharp\",{\"0\":{\"1140\":1},\"1\":{\"46\":1,\"666\":1,\"669\":1,\"671\":1,\"674\":1,\"676\":1,\"679\":1}}],[\"cs\",{\"1\":{\"215\":2}}],[\"css名提示\",{\"1\":{\"321\":1}}],[\"css等\",{\"1\":{\"207\":1}}],[\"css\",{\"1\":{\"207\":1,\"210\":1,\"243\":3,\"321\":2}}],[\"csdn\",{\"1\":{\"8\":1,\"40\":1,\"345\":1,\"346\":1,\"347\":1,\"953\":1,\"968\":1,\"1116\":1}}],[\"capturing\",{\"1\":{\"985\":1}}],[\"capture\",{\"1\":{\"564\":8}}],[\"cascadia\",{\"1\":{\"972\":1}}],[\"cased\",{\"1\":{\"873\":1,\"874\":1}}],[\"case\",{\"1\":{\"661\":3,\"857\":1,\"985\":6}}],[\"camelcasepropertynamescontractresolver\",{\"1\":{\"404\":1,\"585\":1}}],[\"camo\",{\"1\":{\"333\":1}}],[\"caching清除缓存的回调只能是一个\",{\"1\":{\"373\":1}}],[\"caching\",{\"1\":{\"371\":2,\"378\":1,\"381\":1,\"382\":2,\"386\":1,\"387\":1}}],[\"caching里面的idistributedcache接口实现缓存集成到aspnetcore中\",{\"1\":{\"370\":1}}],[\"caching很相似\",{\"1\":{\"370\":1}}],[\"cached\",{\"1\":{\"787\":1,\"799\":2,\"801\":1}}],[\"cachedata\",{\"1\":{\"424\":2}}],[\"cachecontrolheadervalue\",{\"1\":{\"580\":1}}],[\"cachecontrol\",{\"1\":{\"580\":3}}],[\"cacheitempriority\",{\"1\":{\"373\":1}}],[\"cacheentityops\",{\"1\":{\"373\":3,\"375\":4,\"376\":3}}],[\"cache等\",{\"1\":{\"204\":1}}],[\"cache的\",{\"1\":{\"204\":1}}],[\"cache\",{\"0\":{\"1151\":1},\"1\":{\"204\":7,\"209\":1,\"371\":6,\"372\":10,\"373\":7,\"377\":5,\"382\":8,\"387\":8,\"424\":6,\"427\":3,\"543\":1,\"908\":1}}],[\"calico还提供了基于ipip封装的跨主机网络实现\",{\"1\":{\"928\":1}}],[\"calico\",{\"1\":{\"928\":3}}],[\"calendar和其他的一些类中\",{\"1\":{\"202\":1}}],[\"caller\",{\"1\":{\"442\":3}}],[\"callersensitive\",{\"1\":{\"442\":1}}],[\"callback\",{\"1\":{\"374\":1}}],[\"call\",{\"0\":{\"1174\":1},\"1\":{\"167\":2,\"442\":6,\"678\":3,\"681\":4}}],[\"calling\",{\"1\":{\"167\":1}}],[\"cannot\",{\"1\":{\"564\":1,\"601\":1,\"949\":1}}],[\"canconvert\",{\"1\":{\"478\":1}}],[\"cancel方法发送取消信号\",{\"1\":{\"376\":1}}],[\"cancel\",{\"1\":{\"376\":1,\"676\":2,\"677\":2,\"680\":2,\"681\":2,\"691\":2,\"949\":1}}],[\"cancellationchangetoken\",{\"1\":{\"376\":1}}],[\"cancellationtokensource\",{\"1\":{\"376\":2}}],[\"cancellationtoken\",{\"1\":{\"151\":4,\"591\":2,\"675\":1,\"676\":1,\"677\":1,\"680\":1,\"681\":1}}],[\"canvas\",{\"1\":{\"243\":1,\"688\":2}}],[\"canary\",{\"1\":{\"210\":1}}],[\"canal\",{\"1\":{\"134\":3}}],[\"canwrite\",{\"1\":{\"111\":1,\"215\":1}}],[\"canread\",{\"1\":{\"111\":1}}],[\"can\",{\"1\":{\"45\":1,\"564\":4,\"774\":1,\"804\":1}}],[\"caty\",{\"1\":{\"1123\":1}}],[\"catalog=test\",{\"1\":{\"1048\":1,\"1050\":1}}],[\"catch\",{\"0\":{\"160\":1},\"1\":{\"151\":1,\"165\":1,\"364\":1,\"442\":3,\"454\":2,\"463\":1,\"501\":2,\"574\":1,\"583\":1,\"684\":1,\"693\":1}}],[\"category=tools\",{\"1\":{\"967\":1}}],[\"category\",{\"1\":{\"453\":1,\"597\":1}}],[\"cate\",{\"1\":{\"136\":1}}],[\"cat\",{\"0\":{\"1095\":1},\"1\":{\"8\":1,\"19\":1,\"39\":1,\"564\":2,\"777\":4,\"778\":3,\"779\":3,\"780\":1,\"781\":6,\"782\":5,\"784\":3,\"785\":8,\"787\":2,\"788\":1,\"797\":1,\"870\":1,\"888\":2,\"910\":1,\"949\":1,\"1095\":1,\"1096\":2}}],[\"cleanup\",{\"1\":{\"1024\":2}}],[\"clean\",{\"1\":{\"564\":1,\"769\":1,\"865\":2,\"867\":2,\"949\":2}}],[\"clearcompressionflag\",{\"1\":{\"1012\":3}}],[\"clear\",{\"1\":{\"564\":1,\"583\":1,\"600\":1,\"691\":1}}],[\"clearproviders\",{\"1\":{\"454\":1}}],[\"cl\",{\"1\":{\"522\":2}}],[\"claudiaide\",{\"1\":{\"968\":1}}],[\"claimidentities\",{\"1\":{\"401\":4}}],[\"claimtypes\",{\"1\":{\"358\":3,\"361\":1,\"364\":6,\"401\":4}}],[\"claim\",{\"1\":{\"358\":3,\"364\":3,\"401\":4}}],[\"claimsprincipal\",{\"1\":{\"358\":3}}],[\"claimsidentity\",{\"1\":{\"358\":1,\"401\":2}}],[\"claims\",{\"1\":{\"358\":2,\"364\":6,\"401\":4}}],[\"clash\",{\"1\":{\"253\":1}}],[\"classpath=\",{\"1\":{\"1136\":1}}],[\"classpathxmlapplicationcontext等\",{\"1\":{\"443\":1}}],[\"class的总量\",{\"1\":{\"914\":1}}],[\"class的configure方法里面调用\",{\"1\":{\"203\":1}}],[\"classes\",{\"1\":{\"692\":1}}],[\"classinitialize\",{\"1\":{\"597\":1}}],[\"classinitializeattribute\",{\"1\":{\"596\":1}}],[\"classcleanup\",{\"1\":{\"597\":1}}],[\"classloader\",{\"1\":{\"442\":1}}],[\"class<t>\",{\"1\":{\"443\":4}}],[\"class<\",{\"1\":{\"442\":2,\"443\":3}}],[\"classnotfoundexception\",{\"1\":{\"442\":2}}],[\"classname\",{\"1\":{\"442\":4}}],[\"class是dot\",{\"1\":{\"203\":1}}],[\"class\",{\"1\":{\"42\":2,\"45\":1,\"46\":6,\"47\":1,\"48\":2,\"52\":2,\"56\":3,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"72\":1,\"73\":2,\"83\":1,\"94\":4,\"98\":2,\"102\":2,\"109\":1,\"112\":2,\"115\":4,\"120\":3,\"125\":1,\"127\":2,\"128\":2,\"130\":2,\"131\":2,\"145\":1,\"151\":2,\"156\":2,\"164\":1,\"165\":1,\"166\":1,\"167\":2,\"168\":1,\"203\":1,\"215\":6,\"321\":2,\"347\":1,\"363\":1,\"367\":1,\"368\":3,\"375\":1,\"376\":1,\"395\":1,\"400\":3,\"401\":4,\"402\":2,\"403\":3,\"404\":2,\"405\":2,\"407\":1,\"413\":1,\"416\":3,\"418\":1,\"421\":1,\"424\":1,\"427\":1,\"440\":3,\"441\":1,\"442\":3,\"443\":2,\"454\":1,\"462\":1,\"463\":1,\"472\":4,\"474\":1,\"475\":2,\"477\":3,\"478\":2,\"483\":1,\"488\":3,\"490\":1,\"497\":2,\"501\":4,\"502\":1,\"552\":1,\"573\":2,\"574\":1,\"575\":5,\"576\":1,\"577\":1,\"583\":1,\"585\":3,\"587\":1,\"588\":3,\"591\":1,\"599\":1,\"600\":2,\"607\":1,\"639\":2,\"641\":1,\"645\":2,\"647\":1,\"651\":2,\"653\":1,\"656\":1,\"658\":2,\"660\":3,\"661\":1,\"672\":1,\"673\":1,\"675\":1,\"677\":2,\"680\":1,\"691\":2,\"692\":1,\"711\":1,\"805\":2,\"810\":1,\"985\":1,\"1040\":1,\"1045\":1,\"1047\":3,\"1061\":4}}],[\"clufieldid\",{\"1\":{\"518\":3,\"525\":4}}],[\"clutemplateid\",{\"1\":{\"518\":2,\"525\":2}}],[\"club\",{\"1\":{\"232\":1}}],[\"cluster中可见\",{\"1\":{\"918\":1}}],[\"clusterrolebinding来对sa进行授权\",{\"1\":{\"914\":1}}],[\"clusterrole\",{\"1\":{\"914\":1}}],[\"clusterip\",{\"1\":{\"914\":1,\"918\":3,\"941\":3,\"942\":1,\"943\":1,\"944\":4,\"945\":5}}],[\"cluster3\",{\"1\":{\"209\":1}}],[\"cluster\",{\"1\":{\"204\":1,\"208\":1,\"918\":1,\"919\":5,\"930\":3}}],[\"click\",{\"1\":{\"616\":1,\"660\":1,\"691\":3,\"968\":1}}],[\"cliamsidentity\",{\"1\":{\"358\":2}}],[\"cli\",{\"1\":{\"213\":1,\"862\":3,\"870\":1,\"1037\":1,\"1119\":1}}],[\"clientstream\",{\"1\":{\"678\":3,\"681\":3}}],[\"clientfactory\",{\"1\":{\"668\":1,\"670\":1,\"673\":1}}],[\"client\",{\"1\":{\"153\":1,\"421\":2,\"438\":3,\"472\":3,\"523\":1,\"586\":4,\"600\":5,\"604\":1,\"609\":1,\"613\":1,\"617\":1,\"622\":1,\"627\":1,\"632\":1,\"661\":1,\"667\":1,\"668\":1,\"670\":1,\"673\":5,\"691\":2,\"805\":5,\"862\":2}}],[\"clr\",{\"1\":{\"139\":1}}],[\"clockskew\",{\"1\":{\"364\":1}}],[\"closeconnections\",{\"1\":{\"1045\":2}}],[\"closeandflush\",{\"1\":{\"463\":1}}],[\"close\",{\"1\":{\"217\":1,\"321\":1,\"684\":2,\"688\":1}}],[\"cloudcomb\",{\"1\":{\"869\":1}}],[\"cloudname\",{\"1\":{\"522\":1}}],[\"cloudid\",{\"1\":{\"522\":4}}],[\"clouduserrep\",{\"1\":{\"522\":1}}],[\"cloudflare\",{\"1\":{\"336\":1}}],[\"cloudfirestore\",{\"1\":{\"152\":1}}],[\"cloud\",{\"0\":{\"1139\":1},\"1\":{\"138\":1,\"152\":1,\"333\":1,\"1036\":1,\"1098\":2}}],[\"clone下来后可以看到其它的\",{\"1\":{\"691\":1}}],[\"clone加速\",{\"1\":{\"334\":1}}],[\"clone\",{\"1\":{\"23\":1,\"751\":2,\"802\":1}}],[\"chcaty\",{\"1\":{\"1123\":1}}],[\"chgrp\",{\"0\":{\"1082\":1},\"1\":{\"1082\":2}}],[\"choco\",{\"1\":{\"1008\":3,\"1016\":1}}],[\"chocolatey\",{\"1\":{\"1008\":1}}],[\"chocolatey是windows上的包管理工具\",{\"1\":{\"1008\":1}}],[\"chown命令是change\",{\"1\":{\"908\":1}}],[\"chown\",{\"0\":{\"1083\":1},\"1\":{\"882\":1,\"908\":3,\"1083\":3}}],[\"chown=<user>\",{\"1\":{\"825\":2,\"826\":2}}],[\"chown=nobody\",{\"1\":{\"564\":1}}],[\"choosealicense\",{\"1\":{\"253\":1}}],[\"childutils\",{\"1\":{\"564\":1}}],[\"child\",{\"1\":{\"564\":1}}],[\"childlogdir=\",{\"1\":{\"564\":1}}],[\"children\",{\"1\":{\"394\":2}}],[\"chinese\",{\"1\":{\"321\":1,\"405\":1,\"1034\":4}}],[\"chrome\",{\"1\":{\"321\":1,\"690\":1}}],[\"chvin\",{\"1\":{\"243\":2}}],[\"cheap\",{\"1\":{\"693\":1}}],[\"cheat\",{\"1\":{\"341\":1}}],[\"chenug\",{\"1\":{\"215\":1}}],[\"chef等\",{\"1\":{\"210\":1}}],[\"checker\",{\"1\":{\"321\":1}}],[\"check\",{\"1\":{\"151\":4,\"153\":4,\"739\":2,\"799\":1,\"1061\":1}}],[\"checkhealthasync\",{\"1\":{\"151\":2}}],[\"checkout\",{\"0\":{\"786\":1},\"1\":{\"26\":6,\"757\":1,\"766\":1,\"768\":1,\"785\":2,\"786\":7,\"1070\":2}}],[\"chunk\",{\"1\":{\"205\":3}}],[\"challenge\",{\"1\":{\"364\":1,\"1070\":1}}],[\"changes\",{\"1\":{\"768\":2,\"1036\":2}}],[\"changed\",{\"1\":{\"754\":1}}],[\"changetype\",{\"1\":{\"600\":1}}],[\"changetoken\",{\"1\":{\"215\":1}}],[\"change\",{\"1\":{\"211\":1,\"1073\":1,\"1082\":1,\"1083\":1,\"1117\":1}}],[\"channel\",{\"1\":{\"208\":3}}],[\"chaining\",{\"1\":{\"867\":1,\"868\":1,\"870\":1}}],[\"chain\",{\"1\":{\"202\":1}}],[\"charset=utf8\",{\"1\":{\"661\":1,\"1048\":1}}],[\"charset=utf\",{\"1\":{\"364\":1}}],[\"chars\",{\"1\":{\"123\":5}}],[\"char的赋值通常是用单括号括起来\",{\"1\":{\"78\":1}}],[\"char\",{\"0\":{\"78\":1},\"1\":{\"78\":2,\"469\":1}}],[\"chatconclusiontemplatefieldmapping\",{\"1\":{\"518\":1}}],[\"chat\",{\"1\":{\"46\":2}}],[\"chmod=0700\",{\"1\":{\"564\":1}}],[\"chmod\",{\"0\":{\"1084\":1,\"1085\":1},\"1\":{\"3\":1,\"8\":1,\"847\":1,\"1084\":2,\"1085\":2,\"1109\":1}}],[\"c\",{\"0\":{\"41\":1,\"48\":1},\"1\":{\"19\":1,\"75\":1,\"77\":1,\"78\":1,\"79\":1,\"123\":6,\"151\":2,\"161\":2,\"206\":2,\"208\":1,\"209\":1,\"215\":1,\"243\":1,\"321\":5,\"322\":2,\"333\":1,\"436\":2,\"438\":1,\"447\":1,\"481\":3,\"482\":2,\"483\":4,\"484\":5,\"494\":3,\"495\":2,\"499\":2,\"522\":4,\"548\":1,\"549\":1,\"600\":2,\"657\":1,\"668\":3,\"685\":2,\"692\":1,\"710\":1,\"777\":1,\"798\":1,\"802\":1,\"805\":1,\"822\":2,\"863\":2,\"865\":1,\"866\":2,\"867\":3,\"868\":4,\"870\":5,\"876\":1,\"949\":1,\"956\":2,\"968\":3,\"970\":1,\"985\":1,\"988\":3,\"1019\":3,\"1037\":3,\"1070\":2,\"1077\":1,\"1081\":1,\"1098\":1,\"1111\":3,\"1112\":1,\"1135\":1}}],[\"cnsharp\",{\"1\":{\"968\":1}}],[\"cni\",{\"1\":{\"928\":2}}],[\"cname记录方式转发到指定的域名\",{\"1\":{\"914\":1}}],[\"cnpmjs\",{\"1\":{\"335\":1,\"466\":1}}],[\"cn1\",{\"1\":{\"232\":1}}],[\"cnosumer\",{\"1\":{\"208\":1}}],[\"cn|uic=zh\",{\"1\":{\"147\":1}}],[\"cnblogs\",{\"1\":{\"16\":1,\"40\":1,\"43\":1,\"46\":2,\"68\":1,\"121\":1,\"136\":1,\"141\":1,\"168\":1,\"215\":1,\"341\":1,\"362\":1,\"382\":1,\"445\":1,\"467\":2,\"472\":1,\"477\":1,\"484\":1,\"500\":1,\"536\":1,\"549\":1,\"564\":1,\"588\":1,\"591\":1,\"599\":1,\"656\":1,\"661\":1,\"666\":2,\"682\":1,\"712\":2,\"798\":1,\"801\":2,\"804\":1,\"862\":1,\"893\":1,\"899\":1,\"902\":2,\"912\":1,\"949\":1,\"954\":1,\"1046\":1,\"1047\":1,\"1109\":1}}],[\"cn\",{\"1\":{\"3\":1,\"46\":1,\"124\":3,\"125\":4,\"135\":2,\"136\":1,\"138\":1,\"144\":1,\"146\":1,\"147\":3,\"148\":5,\"242\":1,\"245\":1,\"258\":1,\"262\":1,\"267\":1,\"272\":2,\"276\":1,\"298\":1,\"311\":1,\"343\":1,\"355\":1,\"382\":1,\"410\":1,\"467\":2,\"468\":1,\"470\":1,\"474\":2,\"477\":4,\"484\":1,\"501\":2,\"514\":1,\"523\":1,\"528\":1,\"549\":1,\"563\":1,\"577\":1,\"629\":1,\"661\":1,\"666\":1,\"694\":2,\"714\":1,\"715\":1,\"716\":1,\"724\":1,\"728\":1,\"801\":1,\"802\":1,\"859\":1,\"876\":1,\"892\":1,\"913\":1,\"946\":1,\"956\":2,\"964\":2,\"1012\":3,\"1031\":1,\"1034\":4,\"1035\":6,\"1036\":1,\"1037\":1,\"1069\":1,\"1070\":7,\"1108\":1,\"1109\":1,\"1110\":1,\"1114\":1,\"1123\":1,\"1125\":1,\"1130\":1,\"1132\":1}}],[\"ceph\",{\"1\":{\"914\":1}}],[\"cephfs\",{\"1\":{\"914\":1}}],[\"ce01362\",{\"1\":{\"787\":1}}],[\"centre\",{\"0\":{\"1168\":1}}],[\"center\",{\"1\":{\"892\":1}}],[\"centerscreen\",{\"1\":{\"691\":1}}],[\"centurylink\",{\"1\":{\"871\":1}}],[\"centurylinklabs\",{\"1\":{\"871\":1,\"874\":3}}],[\"centossafe\",{\"1\":{\"1109\":1}}],[\"centoschina\",{\"1\":{\"1109\":1}}],[\"centos安装\",{\"1\":{\"549\":1}}],[\"centos7安装java环境\",{\"0\":{\"1133\":1}}],[\"centos7\",{\"1\":{\"537\":1,\"946\":1,\"1104\":1}}],[\"centos7部署和守护进程\",{\"0\":{\"537\":1}}],[\"centos\",{\"0\":{\"1187\":1},\"1\":{\"3\":1,\"537\":1,\"541\":2,\"549\":1,\"564\":1,\"812\":1,\"815\":1,\"816\":2,\"862\":3,\"866\":3,\"1036\":1,\"1103\":1,\"1109\":3,\"1110\":23}}],[\"certificate\",{\"1\":{\"666\":1}}],[\"ceshi\",{\"1\":{\"79\":2}}],[\"ce\",{\"1\":{\"3\":5,\"36\":1,\"37\":3,\"804\":1,\"854\":2,\"862\":10}}],[\"coff\",{\"1\":{\"779\":1}}],[\"co2net\",{\"1\":{\"710\":1}}],[\"coverlet\",{\"1\":{\"585\":2}}],[\"copilot\",{\"1\":{\"968\":2}}],[\"copies\",{\"1\":{\"564\":1}}],[\"copyformatting\",{\"1\":{\"1036\":1}}],[\"copyonselect\",{\"1\":{\"1036\":1}}],[\"copyashtml\",{\"1\":{\"968\":1}}],[\"copyright\",{\"1\":{\"956\":1}}],[\"copy等就是关键字\",{\"1\":{\"818\":1}}],[\"copy\",{\"0\":{\"826\":1},\"1\":{\"806\":1,\"826\":3,\"834\":1,\"837\":1,\"863\":1,\"870\":1,\"871\":1,\"968\":1,\"1036\":2,\"1070\":3,\"1079\":1}}],[\"copyleft\",{\"1\":{\"248\":3,\"249\":1,\"253\":1}}],[\"course\",{\"1\":{\"712\":1}}],[\"coursename\",{\"1\":{\"518\":2,\"519\":2,\"520\":2,\"522\":1}}],[\"count=100\",{\"1\":{\"863\":1}}],[\"count2\",{\"1\":{\"527\":1}}],[\"count\",{\"1\":{\"524\":10,\"600\":1,\"684\":2,\"687\":1,\"1041\":2}}],[\"country\",{\"1\":{\"125\":1}}],[\"co\",{\"1\":{\"284\":1}}],[\"codist\",{\"1\":{\"968\":3}}],[\"codis\",{\"1\":{\"209\":1}}],[\"codealignment\",{\"1\":{\"968\":1}}],[\"codemaid\",{\"1\":{\"968\":1}}],[\"codezoe\",{\"1\":{\"852\":1}}],[\"codezyq\",{\"1\":{\"837\":1}}],[\"codezyq<1137533407\",{\"1\":{\"837\":1}}],[\"code=8888\",{\"1\":{\"733\":1}}],[\"code综艺圈\",{\"1\":{\"666\":1,\"681\":1,\"852\":1}}],[\"codes\",{\"1\":{\"564\":2}}],[\"codeincomplete\",{\"1\":{\"243\":2}}],[\"coderbusy\",{\"1\":{\"133\":1,\"685\":1}}],[\"code\",{\"0\":{\"1175\":1},\"1\":{\"98\":1,\"99\":2,\"167\":1,\"321\":3,\"401\":4,\"404\":2,\"413\":1,\"416\":4,\"442\":1,\"477\":2,\"577\":1,\"739\":6,\"746\":3,\"820\":2,\"949\":2,\"956\":1,\"965\":3,\"968\":3,\"972\":1,\"986\":1}}],[\"columnname\",{\"1\":{\"1061\":6}}],[\"columnmap\",{\"1\":{\"1061\":3}}],[\"column\",{\"1\":{\"501\":2,\"1061\":5}}],[\"collectd等\",{\"1\":{\"914\":1}}],[\"collector包允许收集代码覆盖率\",{\"1\":{\"585\":1}}],[\"collector\",{\"1\":{\"585\":2}}],[\"collectionvariables\",{\"1\":{\"742\":1,\"743\":1}}],[\"collections\",{\"1\":{\"691\":1,\"692\":2}}],[\"collectionassert\",{\"1\":{\"596\":1}}],[\"collectionnames\",{\"1\":{\"363\":1}}],[\"collection\",{\"0\":{\"736\":1},\"1\":{\"205\":1,\"718\":1,\"736\":1,\"737\":1}}],[\"collect\",{\"1\":{\"203\":1}}],[\"color=never\",{\"1\":{\"1074\":1}}],[\"color=\",{\"1\":{\"1074\":1}}],[\"colorscheme\",{\"1\":{\"1036\":1}}],[\"colorizer\",{\"1\":{\"321\":1}}],[\"color\",{\"1\":{\"17\":1}}],[\"cordon\",{\"1\":{\"914\":1}}],[\"correct\",{\"1\":{\"739\":1}}],[\"corsmiddlewarewithendpointinvoked\",{\"1\":{\"168\":1}}],[\"corsmiddlewareinvokedkey\",{\"1\":{\"168\":1}}],[\"coredns\",{\"1\":{\"941\":3}}],[\"core承载grpc服务的框架\",{\"1\":{\"668\":1}}],[\"core集成库\",{\"1\":{\"666\":1}}],[\"core单元测试\",{\"1\":{\"588\":1}}],[\"core测试框架本身\",{\"1\":{\"585\":1}}],[\"core托管捆绑包\",{\"0\":{\"561\":1},\"1\":{\"561\":1}}],[\"core程序了\",{\"1\":{\"548\":1}}],[\"core添加进程配置文件\",{\"0\":{\"547\":1}}],[\"core进程意外终止那么需要人为连进shell进行再次启动\",{\"1\":{\"543\":1}}],[\"core中内置的一个通用日志接口组件\",{\"1\":{\"446\":1}}],[\"core中我们可以使用ichangetoken接口轻松实现缓存的过期策略\",{\"1\":{\"374\":1}}],[\"core中怎么控制呢\",{\"1\":{\"374\":1}}],[\"core中di的核心分为两个组件\",{\"1\":{\"349\":1}}],[\"core中激活session功能\",{\"1\":{\"203\":1}}],[\"core开发的一款跨平台内网穿透工具\",{\"1\":{\"239\":1}}],[\"core有哪些好的功能\",{\"1\":{\"203\":1}}],[\"core有更多的安装配置方法\",{\"1\":{\"203\":1}}],[\"core处理请求的效率更高\",{\"1\":{\"203\":1}}],[\"core跟dot\",{\"1\":{\"203\":1}}],[\"core主要提供了三种依赖注入的方式\",{\"1\":{\"203\":1}}],[\"core里面的路径是如何处理的\",{\"1\":{\"203\":1}}],[\"core应用被关闭\",{\"1\":{\"543\":1}}],[\"core应用程序\",{\"1\":{\"543\":1}}],[\"core应用必须有这个class\",{\"1\":{\"203\":1}}],[\"core应用的入口\",{\"1\":{\"203\":1}}],[\"core应用的时候\",{\"1\":{\"149\":1}}],[\"core默认使用的\",{\"1\":{\"167\":1}}],[\"core类库\",{\"1\":{\"141\":1}}],[\"core必须实现的api\",{\"1\":{\"141\":1}}],[\"core3高性能rpc框架\",{\"1\":{\"666\":1}}],[\"core3\",{\"1\":{\"140\":1,\"155\":1,\"600\":1}}],[\"core的缓存distributedmemorycache\",{\"1\":{\"366\":1}}],[\"core的startup\",{\"1\":{\"203\":1}}],[\"core的所有方面都是开源的\",{\"1\":{\"140\":1}}],[\"core的出现用于满足当前以及未来软件开发的需求\",{\"1\":{\"140\":1}}],[\"core\",{\"0\":{\"140\":1},\"1\":{\"140\":2,\"142\":1,\"148\":1,\"168\":1,\"203\":1,\"321\":1,\"355\":1,\"382\":1,\"399\":1,\"410\":2,\"449\":1,\"456\":1,\"468\":1,\"470\":1,\"474\":2,\"477\":5,\"484\":1,\"501\":3,\"514\":1,\"523\":1,\"528\":1,\"543\":2,\"549\":1,\"550\":1,\"559\":1,\"561\":5,\"562\":3,\"563\":4,\"570\":1,\"577\":2,\"583\":1,\"599\":1,\"629\":1,\"661\":1,\"666\":2,\"668\":2,\"685\":1,\"689\":1,\"693\":1,\"777\":1,\"788\":1,\"797\":1,\"806\":1,\"834\":1,\"837\":1,\"959\":1,\"1019\":2,\"1067\":1,\"1070\":1,\"1123\":1,\"1127\":1}}],[\"cosmosdb\",{\"1\":{\"152\":2}}],[\"cookie删除用户操作模型\",{\"1\":{\"368\":1}}],[\"cookie认证\",{\"1\":{\"362\":1}}],[\"cookies\",{\"1\":{\"359\":1,\"735\":1}}],[\"cookiescheme\",{\"1\":{\"359\":3}}],[\"cookieauthenticationdefaults\",{\"1\":{\"358\":2}}],[\"cookie\",{\"0\":{\"147\":1,\"356\":1},\"1\":{\"322\":1,\"369\":2,\"938\":1}}],[\"condition=\",{\"1\":{\"1037\":1,\"1122\":3,\"1123\":3,\"1126\":2}}],[\"conditional不可应用于数据成员和属性\",{\"1\":{\"46\":1}}],[\"conditional特性\",{\"1\":{\"46\":1}}],[\"conditional\",{\"0\":{\"46\":1}}],[\"conifg命令中的\",{\"1\":{\"748\":1}}],[\"conf详解\",{\"1\":{\"564\":1}}],[\"conf配置详解\",{\"1\":{\"549\":1}}],[\"conf配置信息\",{\"1\":{\"546\":1}}],[\"conf\",{\"1\":{\"543\":2,\"546\":5,\"547\":1,\"548\":1,\"549\":1,\"564\":3,\"817\":1,\"870\":2,\"893\":2,\"931\":1,\"943\":1,\"1072\":3}}],[\"conf文件\",{\"1\":{\"543\":1}}],[\"confirm模式用的居多\",{\"1\":{\"208\":1}}],[\"confirm\",{\"1\":{\"208\":1,\"1021\":1}}],[\"confirmation=\",{\"1\":{\"40\":1}}],[\"config>\",{\"1\":{\"970\":1}}],[\"configmaps\",{\"1\":{\"914\":1}}],[\"configmap\",{\"1\":{\"914\":1}}],[\"configmap从文件\",{\"1\":{\"914\":1}}],[\"configmap可以通过三种方式在pod中使用\",{\"1\":{\"914\":1}}],[\"configmap跟secret很类似\",{\"1\":{\"914\":1}}],[\"configmap用于保存配置数据的键值对\",{\"1\":{\"914\":1}}],[\"configsavepath\",{\"1\":{\"691\":1}}],[\"configname\",{\"1\":{\"691\":5}}],[\"configlist\",{\"1\":{\"691\":7}}],[\"configchangedarg\",{\"1\":{\"661\":1}}],[\"configchanged\",{\"1\":{\"661\":3}}],[\"configclient\",{\"1\":{\"661\":9}}],[\"config文件\",{\"1\":{\"447\":1,\"775\":1}}],[\"configuring\",{\"1\":{\"574\":1,\"576\":1}}],[\"configuration>\",{\"1\":{\"970\":2}}],[\"configurationbuilder\",{\"1\":{\"574\":1,\"576\":1,\"582\":1,\"583\":2,\"661\":1}}],[\"configurationroot\",{\"1\":{\"574\":2,\"576\":2}}],[\"configurationraw\",{\"1\":{\"574\":3}}],[\"configurations\",{\"1\":{\"574\":3,\"575\":1,\"576\":1}}],[\"configuration\",{\"1\":{\"215\":2,\"364\":6,\"381\":1,\"382\":1,\"386\":1,\"387\":1,\"392\":4,\"393\":2,\"394\":1,\"396\":3,\"397\":1,\"457\":1,\"462\":2,\"501\":1,\"502\":1,\"528\":1,\"573\":3,\"574\":1,\"575\":2,\"582\":2,\"583\":10,\"661\":5,\"692\":1,\"710\":2,\"712\":1,\"1037\":1}}],[\"configure<sample1options>\",{\"1\":{\"575\":1}}],[\"configure<rabbitmqconfig>\",{\"1\":{\"397\":1}}],[\"configureswaggeroptions>\",{\"1\":{\"498\":1}}],[\"configureswaggeroptions\",{\"1\":{\"497\":2}}],[\"configureservices注入服务\",{\"1\":{\"694\":1}}],[\"configureservices添加该grpc服务\",{\"1\":{\"673\":1}}],[\"configureservices配置newtonsoftjson以及automapper和操作数据库代码\",{\"1\":{\"600\":1}}],[\"configureservices中配置\",{\"0\":{\"638\":1,\"644\":1,\"650\":1},\"1\":{\"583\":1,\"669\":1,\"670\":1}}],[\"configureservices中注册服务\",{\"1\":{\"710\":1}}],[\"configureservices中注册过滤器并禁用默认的自动模型验证\",{\"1\":{\"477\":1}}],[\"configureservices中注入\",{\"1\":{\"477\":1}}],[\"configureservices中注入服务\",{\"1\":{\"378\":1}}],[\"configureservices中使用\",{\"1\":{\"366\":1,\"367\":1,\"368\":1}}],[\"configureservices中获取服务\",{\"0\":{\"352\":1}}],[\"configureservices引用中间件\",{\"0\":{\"359\":1}}],[\"configureservices\",{\"0\":{\"494\":1,\"498\":1},\"1\":{\"150\":1,\"151\":1,\"153\":1,\"156\":1,\"164\":1,\"166\":1,\"349\":1,\"371\":1,\"373\":1,\"377\":1,\"382\":1,\"387\":1,\"481\":1,\"502\":1,\"600\":1,\"660\":2}}],[\"configure使用服务\",{\"0\":{\"495\":1,\"499\":1}}],[\"configurenlog\",{\"1\":{\"454\":1}}],[\"configurelogging\",{\"1\":{\"447\":1,\"454\":1}}],[\"configure中启用服务\",{\"1\":{\"710\":1}}],[\"configure中配置\",{\"1\":{\"669\":1}}],[\"configure中使用\",{\"1\":{\"366\":1,\"367\":1,\"368\":1}}],[\"configure中获取服务\",{\"0\":{\"353\":1}}],[\"configure里面启用认证\",{\"0\":{\"360\":1}}],[\"configurewebhostdefaults\",{\"1\":{\"215\":1,\"447\":1,\"454\":1,\"462\":1,\"463\":1,\"583\":2,\"585\":1,\"661\":1}}],[\"configurewebdefaults\",{\"1\":{\"156\":1}}],[\"configureapibehavioroptions\",{\"1\":{\"477\":1}}],[\"configureappconfiguration\",{\"1\":{\"215\":1,\"389\":1,\"583\":2,\"661\":1}}],[\"configureawait\",{\"1\":{\"151\":2,\"501\":10,\"503\":1,\"518\":1,\"525\":1,\"604\":2,\"609\":2,\"613\":2,\"617\":1,\"622\":2,\"627\":2,\"632\":2,\"675\":1,\"680\":1,\"694\":1,\"710\":1,\"712\":1}}],[\"configureoptions\",{\"1\":{\"165\":2}}],[\"configurerouteoptions\",{\"1\":{\"165\":1}}],[\"configurerouteoptions>\",{\"1\":{\"165\":1}}],[\"configure方法不需要操作\",{\"1\":{\"151\":1}}],[\"configure\",{\"1\":{\"150\":1,\"151\":1,\"153\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"165\":1,\"167\":3,\"482\":1,\"494\":1,\"495\":1,\"497\":1,\"499\":1}}],[\"config\",{\"0\":{\"1152\":1,\"1168\":1},\"1\":{\"3\":3,\"17\":3,\"36\":2,\"37\":1,\"38\":1,\"211\":1,\"215\":2,\"453\":1,\"454\":1,\"537\":1,\"561\":1,\"564\":2,\"583\":6,\"661\":6,\"711\":1,\"748\":2,\"775\":2,\"777\":6,\"788\":2,\"797\":1,\"802\":3,\"854\":1,\"862\":3,\"948\":2,\"1109\":3,\"1117\":1}}],[\"conclusiontemplatefieldrep\",{\"1\":{\"518\":1,\"525\":1}}],[\"conclusiontemplatereq\",{\"1\":{\"518\":1}}],[\"concepts\",{\"1\":{\"46\":1}}],[\"conversionpattern\",{\"1\":{\"447\":1}}],[\"converted\",{\"1\":{\"683\":1}}],[\"converters\",{\"1\":{\"478\":1}}],[\"convertresponseresult<t>\",{\"1\":{\"600\":1,\"604\":1,\"609\":1,\"613\":1,\"617\":1,\"622\":1,\"627\":1,\"632\":1}}],[\"convertio\",{\"0\":{\"284\":1},\"1\":{\"284\":1}}],[\"convert\",{\"0\":{\"129\":1},\"1\":{\"129\":1,\"164\":1,\"600\":1,\"687\":1}}],[\"conn=\",{\"1\":{\"661\":1}}],[\"conn\",{\"1\":{\"133\":1,\"661\":1,\"1047\":3}}],[\"connectionfactory\",{\"1\":{\"1064\":1}}],[\"connectionstr\",{\"1\":{\"1047\":15}}],[\"connectionstringmapper\",{\"1\":{\"1047\":4}}],[\"connectionstringconsts\",{\"1\":{\"1047\":6}}],[\"connectionstring\",{\"1\":{\"501\":1,\"502\":1,\"661\":1}}],[\"connectionstring=data\",{\"1\":{\"211\":1,\"1117\":1}}],[\"connection\",{\"1\":{\"120\":6,\"421\":1,\"427\":1,\"501\":3,\"543\":1,\"1047\":6,\"1050\":2,\"1060\":1,\"1063\":7,\"1064\":6,\"1065\":4}}],[\"continue\",{\"1\":{\"574\":1,\"656\":2,\"1020\":1}}],[\"contronler\",{\"1\":{\"931\":2}}],[\"control的\",{\"1\":{\"931\":1}}],[\"controls\",{\"1\":{\"467\":1}}],[\"control\",{\"1\":{\"434\":1,\"436\":1,\"564\":1,\"769\":2,\"914\":1}}],[\"controller来管理集群中的ingress规则\",{\"1\":{\"931\":1}}],[\"controller等\",{\"1\":{\"914\":1}}],[\"controllername\",{\"1\":{\"656\":1}}],[\"controllertype\",{\"1\":{\"656\":1}}],[\"controllers\",{\"1\":{\"410\":1,\"488\":3,\"575\":1,\"639\":2,\"645\":2,\"651\":2,\"656\":1}}],[\"controller注册方式\",{\"0\":{\"407\":1}}],[\"controllerbase\",{\"1\":{\"145\":1,\"472\":1,\"483\":1,\"488\":3,\"490\":1,\"552\":1,\"575\":1,\"576\":1,\"639\":2,\"641\":1,\"645\":2,\"647\":1,\"651\":2,\"653\":1,\"673\":1}}],[\"controller\",{\"1\":{\"145\":1,\"163\":1,\"405\":1,\"407\":1,\"472\":1,\"474\":1,\"483\":1,\"488\":3,\"490\":1,\"552\":1,\"575\":1,\"576\":1,\"639\":2,\"641\":1,\"645\":2,\"647\":1,\"651\":2,\"653\":1,\"656\":5,\"673\":1,\"914\":4,\"931\":1,\"1013\":1}}],[\"contractresolver\",{\"1\":{\"404\":1,\"478\":1,\"585\":1}}],[\"contain\",{\"1\":{\"564\":2}}],[\"containskey\",{\"1\":{\"472\":1,\"1061\":2}}],[\"containsbean\",{\"1\":{\"443\":1}}],[\"containsany\",{\"1\":{\"215\":2}}],[\"contains\",{\"1\":{\"164\":1,\"677\":1,\"739\":1,\"1037\":1,\"1041\":4,\"1047\":1}}],[\"container在所有容器运行之前执行\",{\"1\":{\"914\":1}}],[\"containerd\",{\"1\":{\"862\":4}}],[\"containers来实现\",{\"1\":{\"914\":1}}],[\"containers\",{\"1\":{\"805\":5}}],[\"container\",{\"1\":{\"3\":1,\"36\":1,\"125\":1,\"574\":1,\"796\":1,\"886\":1,\"1070\":1}}],[\"contents\",{\"1\":{\"779\":2,\"1070\":1}}],[\"content<40000\",{\"1\":{\"700\":1}}],[\"contentdispositionheadervalue\",{\"1\":{\"617\":2}}],[\"contentdisposition\",{\"1\":{\"617\":2}}],[\"contentfiles\",{\"1\":{\"585\":1,\"670\":1,\"673\":1}}],[\"contentrootpath\",{\"1\":{\"574\":1,\"576\":1,\"580\":1,\"583\":1}}],[\"contentresult\",{\"1\":{\"427\":1,\"693\":1}}],[\"content\",{\"1\":{\"342\":2,\"364\":3,\"427\":1,\"472\":1,\"569\":2,\"586\":1,\"600\":1,\"609\":2,\"610\":1,\"622\":2,\"632\":4,\"691\":1,\"693\":3,\"711\":5,\"733\":1,\"734\":1,\"739\":4}}],[\"contenttype\",{\"1\":{\"151\":1,\"155\":1,\"364\":1,\"603\":1,\"608\":1,\"616\":1,\"621\":1,\"631\":1}}],[\"context\",{\"1\":{\"125\":1,\"151\":6,\"156\":2,\"157\":11,\"158\":8,\"163\":2,\"364\":6,\"368\":2,\"401\":12,\"402\":21,\"403\":23,\"404\":17,\"405\":14,\"413\":8,\"416\":11,\"418\":17,\"421\":11,\"424\":4,\"427\":4,\"472\":4,\"477\":5,\"497\":2,\"501\":6,\"502\":3,\"503\":13,\"504\":2,\"509\":2,\"511\":1,\"512\":2,\"513\":1,\"518\":2,\"519\":2,\"520\":2,\"522\":2,\"523\":2,\"524\":2,\"526\":3,\"528\":5,\"574\":2,\"577\":2,\"580\":1,\"661\":1,\"672\":2,\"675\":3,\"677\":3,\"680\":3,\"692\":1,\"711\":1,\"1070\":1}}],[\"consolas\",{\"1\":{\"972\":1,\"1036\":1}}],[\"console中\",{\"1\":{\"446\":1}}],[\"consoleapp1\",{\"1\":{\"125\":1}}],[\"consoleapp\",{\"1\":{\"125\":1}}],[\"console\",{\"1\":{\"66\":1,\"68\":2,\"73\":1,\"79\":1,\"81\":3,\"83\":1,\"98\":19,\"99\":18,\"102\":1,\"109\":3,\"112\":1,\"115\":1,\"118\":3,\"123\":6,\"124\":7,\"125\":6,\"127\":1,\"128\":3,\"131\":1,\"157\":4,\"372\":8,\"373\":4,\"375\":2,\"376\":2,\"381\":1,\"386\":1,\"405\":4,\"446\":1,\"453\":4,\"457\":1,\"458\":1,\"462\":1,\"463\":1,\"472\":1,\"511\":1,\"512\":1,\"513\":1,\"518\":1,\"519\":1,\"520\":1,\"522\":1,\"523\":1,\"524\":2,\"574\":2,\"576\":1,\"603\":2,\"607\":1,\"608\":1,\"612\":1,\"615\":1,\"616\":2,\"620\":1,\"621\":1,\"625\":1,\"626\":1,\"631\":1,\"661\":1,\"672\":1,\"684\":2,\"687\":2,\"738\":2,\"1050\":1,\"1053\":1,\"1058\":1,\"1127\":3}}],[\"console命令\",{\"1\":{\"40\":1}}],[\"consumer\",{\"1\":{\"208\":12,\"1034\":6}}],[\"consul\",{\"1\":{\"152\":2,\"210\":1,\"253\":1}}],[\"consultationsid\",{\"1\":{\"47\":1}}],[\"consistent\",{\"1\":{\"205\":1}}],[\"constants\",{\"1\":{\"691\":1}}],[\"constraintresolver\",{\"1\":{\"165\":2}}],[\"constraintmap\",{\"1\":{\"164\":1}}],[\"constraints\",{\"1\":{\"163\":1}}],[\"constraint\",{\"1\":{\"163\":1}}],[\"constr\",{\"1\":{\"120\":2}}],[\"constructor\",{\"1\":{\"108\":4,\"109\":2,\"400\":1}}],[\"constructor2\",{\"1\":{\"99\":1}}],[\"constructor1\",{\"1\":{\"99\":1,\"109\":3}}],[\"constructors\",{\"1\":{\"99\":2}}],[\"constructorinfo\",{\"0\":{\"107\":1},\"1\":{\"97\":2,\"99\":3,\"109\":2}}],[\"const\",{\"1\":{\"67\":1,\"166\":1,\"167\":1,\"168\":2,\"368\":1,\"395\":1,\"401\":1,\"580\":1,\"656\":1,\"692\":2}}],[\"combination\",{\"1\":{\"1036\":1}}],[\"combine\",{\"1\":{\"375\":1,\"471\":1,\"483\":1,\"484\":1,\"494\":1,\"574\":3,\"580\":1,\"655\":1,\"693\":1}}],[\"com下面定义了两个path\",{\"1\":{\"931\":1}}],[\"com>\",{\"1\":{\"837\":1}}],[\"com的fastreport\",{\"1\":{\"689\":1}}],[\"comvisible\",{\"1\":{\"400\":1}}],[\"computing\",{\"1\":{\"1110\":1}}],[\"computation\",{\"1\":{\"564\":1}}],[\"compile\",{\"1\":{\"865\":1,\"867\":1}}],[\"compiled\",{\"1\":{\"163\":1}}],[\"componentmodel\",{\"1\":{\"692\":1}}],[\"composite\",{\"1\":{\"447\":2}}],[\"compositeendpointdatasource\",{\"1\":{\"165\":1,\"167\":1}}],[\"compose去处理了\",{\"1\":{\"1070\":1}}],[\"compose部署\",{\"0\":{\"886\":1}}],[\"compose常用命令\",{\"1\":{\"852\":1}}],[\"composetest\",{\"1\":{\"852\":1}}],[\"compose用到的文件基本上够用了\",{\"1\":{\"850\":1}}],[\"compose需要搭配yaml文件使用\",{\"1\":{\"849\":1}}],[\"compose就安装完啦\",{\"1\":{\"847\":1}}],[\"compose就是来干这个事的\",{\"1\":{\"843\":1}}],[\"compose文件中定义的服务名\",{\"1\":{\"852\":1}}],[\"compose文件\",{\"1\":{\"846\":1,\"1070\":1}}],[\"compose是一个可执行文件\",{\"1\":{\"846\":1}}],[\"compose之前需要安装docker\",{\"1\":{\"845\":1}}],[\"compose工具搭配docker才有意义\",{\"1\":{\"845\":1}}],[\"compose工具的\",{\"1\":{\"845\":1}}],[\"compose命令和docker的命令基本是一样的\",{\"1\":{\"852\":1}}],[\"compose命令\",{\"1\":{\"844\":1}}],[\"compose的工具\",{\"1\":{\"843\":1}}],[\"compose的脚本\",{\"1\":{\"3\":1}}],[\"compose脚本\",{\"1\":{\"796\":1,\"886\":1}}],[\"compose\",{\"0\":{\"36\":1},\"1\":{\"3\":6,\"125\":1,\"844\":1,\"845\":1,\"846\":6,\"847\":1,\"848\":1,\"851\":2,\"852\":14,\"885\":4,\"886\":2,\"887\":2,\"1070\":2}}],[\"complete\",{\"1\":{\"1064\":2,\"1070\":1}}],[\"completeasync\",{\"1\":{\"678\":1,\"681\":1}}],[\"completedtask\",{\"1\":{\"157\":1,\"168\":1,\"355\":1,\"364\":1,\"401\":1,\"472\":2}}],[\"complex\",{\"1\":{\"470\":1}}],[\"companyname\",{\"1\":{\"1037\":1}}],[\"compactionpercentage\",{\"1\":{\"373\":1}}],[\"compare\",{\"1\":{\"125\":1,\"988\":1}}],[\"compare方法的实现必须int32返回具有以下三个值之一的\",{\"1\":{\"125\":1}}],[\"community\",{\"1\":{\"804\":1,\"963\":2,\"964\":1}}],[\"comment\",{\"1\":{\"501\":9}}],[\"comments\",{\"1\":{\"321\":2,\"777\":1}}],[\"commandline\",{\"1\":{\"811\":1,\"1036\":3}}],[\"commandkey\",{\"1\":{\"692\":2}}],[\"command=java\",{\"1\":{\"564\":1}}],[\"command=\",{\"1\":{\"564\":3}}],[\"command=dotnet\",{\"1\":{\"547\":1}}],[\"commands\",{\"1\":{\"564\":1,\"1070\":2}}],[\"commandname\",{\"1\":{\"552\":1}}],[\"commandtimeout=\",{\"1\":{\"524\":2}}],[\"commandtype=\",{\"1\":{\"524\":2}}],[\"command\",{\"1\":{\"446\":1,\"524\":2,\"564\":1,\"692\":1,\"811\":1,\"829\":1,\"830\":1,\"852\":2,\"946\":1,\"1008\":1,\"1036\":6,\"1109\":1}}],[\"commonapi\",{\"1\":{\"712\":1}}],[\"common\",{\"1\":{\"377\":1,\"582\":1,\"683\":1,\"694\":1,\"862\":1}}],[\"commonlanguageruntimelibrary\",{\"1\":{\"118\":1}}],[\"commmit\",{\"1\":{\"22\":1}}],[\"commit命令上次已经说过\",{\"1\":{\"812\":1}}],[\"commit命令将容器提交为镜像\",{\"1\":{\"812\":1}}],[\"commit和push\",{\"1\":{\"799\":1}}],[\"committed\",{\"1\":{\"768\":1}}],[\"commit告诉git\",{\"1\":{\"754\":1}}],[\"commit之前先执行git\",{\"1\":{\"23\":1}}],[\"commit栏旁边显示的是指向这个提交的哈希值\",{\"1\":{\"22\":1}}],[\"commit的同步操作\",{\"1\":{\"22\":1}}],[\"commit提交\",{\"1\":{\"22\":1}}],[\"commit\",{\"0\":{\"781\":1,\"782\":1,\"786\":1},\"1\":{\"21\":2,\"22\":3,\"23\":2,\"27\":3,\"29\":1,\"33\":1,\"754\":1,\"768\":3,\"769\":1,\"777\":5,\"781\":12,\"782\":11,\"784\":3,\"785\":2,\"786\":11,\"788\":3,\"798\":1,\"801\":1,\"811\":1,\"863\":2,\"1063\":2,\"1065\":1}}],[\"com\",{\"1\":{\"3\":3,\"4\":1,\"6\":1,\"8\":2,\"16\":1,\"17\":2,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":2,\"23\":1,\"36\":2,\"40\":1,\"43\":1,\"46\":3,\"68\":1,\"121\":1,\"125\":2,\"133\":1,\"134\":1,\"135\":3,\"136\":2,\"137\":9,\"138\":3,\"141\":2,\"148\":1,\"152\":1,\"155\":1,\"168\":1,\"170\":1,\"171\":2,\"172\":1,\"211\":1,\"214\":1,\"215\":1,\"216\":2,\"217\":1,\"219\":1,\"238\":1,\"239\":2,\"241\":1,\"242\":7,\"243\":19,\"253\":1,\"258\":1,\"259\":2,\"263\":1,\"265\":1,\"267\":1,\"270\":1,\"273\":1,\"274\":1,\"278\":1,\"281\":1,\"283\":1,\"285\":1,\"286\":1,\"287\":1,\"288\":1,\"292\":1,\"293\":1,\"296\":1,\"298\":1,\"302\":1,\"304\":1,\"309\":2,\"311\":1,\"327\":1,\"329\":1,\"330\":3,\"332\":1,\"333\":16,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"341\":2,\"355\":1,\"362\":1,\"364\":1,\"382\":2,\"399\":1,\"410\":1,\"442\":4,\"445\":1,\"448\":1,\"456\":1,\"457\":1,\"466\":1,\"467\":7,\"468\":1,\"470\":1,\"472\":1,\"474\":2,\"477\":5,\"484\":2,\"500\":1,\"501\":2,\"514\":1,\"523\":1,\"528\":1,\"529\":1,\"536\":1,\"537\":2,\"549\":3,\"558\":1,\"561\":1,\"563\":1,\"564\":1,\"575\":2,\"577\":2,\"583\":1,\"588\":1,\"591\":2,\"593\":1,\"594\":1,\"599\":3,\"629\":1,\"656\":2,\"660\":1,\"661\":3,\"666\":6,\"681\":1,\"682\":1,\"685\":2,\"689\":3,\"693\":4,\"694\":1,\"696\":1,\"698\":1,\"700\":1,\"702\":1,\"703\":1,\"704\":1,\"708\":1,\"709\":1,\"712\":6,\"722\":1,\"724\":1,\"746\":1,\"748\":2,\"751\":1,\"777\":2,\"788\":2,\"791\":1,\"794\":1,\"796\":1,\"798\":1,\"801\":4,\"802\":3,\"804\":2,\"806\":1,\"811\":1,\"821\":1,\"825\":1,\"834\":1,\"837\":1,\"838\":1,\"845\":1,\"846\":1,\"850\":1,\"852\":2,\"853\":1,\"859\":3,\"862\":5,\"863\":2,\"868\":1,\"871\":1,\"874\":11,\"875\":1,\"876\":2,\"893\":1,\"899\":1,\"902\":2,\"912\":1,\"915\":1,\"931\":4,\"945\":1,\"946\":2,\"949\":1,\"951\":2,\"954\":1,\"956\":1,\"957\":1,\"964\":1,\"967\":2,\"968\":22,\"969\":1,\"973\":1,\"985\":1,\"986\":2,\"1009\":1,\"1012\":5,\"1024\":1,\"1031\":2,\"1035\":1,\"1036\":2,\"1037\":2,\"1038\":1,\"1046\":1,\"1047\":3,\"1066\":1,\"1067\":1,\"1069\":1,\"1070\":14,\"1098\":2,\"1103\":1,\"1104\":1,\"1108\":1,\"1109\":4,\"1110\":2,\"1111\":1,\"1114\":2,\"1117\":1,\"1120\":1,\"1132\":1,\"1134\":2}}],[\"cid=$\",{\"1\":{\"899\":1}}],[\"circle\",{\"1\":{\"440\":3,\"441\":2,\"442\":7}}],[\"cityid\",{\"1\":{\"739\":1}}],[\"city\",{\"1\":{\"243\":2,\"739\":1}}],[\"ci\",{\"0\":{\"1186\":1},\"1\":{\"3\":1,\"8\":2,\"40\":1,\"558\":1,\"877\":1}}],[\"cdn\",{\"1\":{\"333\":1,\"953\":1,\"1125\":1}}],[\"cd=>pipeliners查看\",{\"1\":{\"8\":1}}],[\"cd之前\",{\"1\":{\"3\":1}}],[\"cd\",{\"0\":{\"3\":1,\"1073\":1,\"1186\":1},\"1\":{\"3\":1,\"7\":1,\"8\":1,\"22\":1,\"40\":2,\"752\":1,\"777\":1,\"865\":1,\"867\":1,\"876\":1,\"877\":1,\"1070\":2,\"1073\":3,\"1107\":1}}],[\"墨迹了这么久\",{\"1\":{\"3\":1}}],[\"大体分为错误\",{\"1\":{\"965\":1}}],[\"大部分规则都放行\",{\"1\":{\"947\":1}}],[\"大部分公共代理都是免费的\",{\"1\":{\"322\":1}}],[\"大到构建一个docker镜像\",{\"1\":{\"879\":1}}],[\"大多数这些技术都需要开发人员的大量工作\",{\"1\":{\"534\":1}}],[\"大多数人都很纠结\",{\"1\":{\"197\":1}}],[\"大版本\",{\"1\":{\"494\":1,\"498\":1}}],[\"大于等于这个级别的才会被输出\",{\"1\":{\"446\":1}}],[\"大于零\",{\"1\":{\"125\":2}}],[\"大小\",{\"1\":{\"1034\":4}}],[\"大小写等可以自动映射\",{\"1\":{\"1061\":1}}],[\"大小写敏感\",{\"1\":{\"850\":1}}],[\"大小写转换\",{\"1\":{\"405\":1}}],[\"大小和内容\",{\"1\":{\"780\":1}}],[\"大小的镜像压缩到\",{\"1\":{\"872\":1}}],[\"大小的镜像\",{\"1\":{\"871\":1}}],[\"大小的包含静态链接的\",{\"1\":{\"871\":1}}],[\"大小的\",{\"1\":{\"243\":1}}],[\"大约在2012年\",{\"1\":{\"267\":1}}],[\"大型喷绘\",{\"1\":{\"256\":1}}],[\"大并发\",{\"1\":{\"206\":1}}],[\"大是个不错的起始点\",{\"1\":{\"204\":1}}],[\"大厂新入职员工职级对照表\",{\"1\":{\"196\":1}}],[\"大钱得关注一下\",{\"1\":{\"191\":1}}],[\"大面积裁员还好解释\",{\"1\":{\"187\":1}}],[\"大家如果不一样的话可以根据自己的情况修改dbhelper\",{\"1\":{\"1046\":1}}],[\"大家可以根据自己的情况修改\",{\"1\":{\"1046\":1}}],[\"大家集思广益\",{\"1\":{\"1009\":1}}],[\"大家的修改\",{\"1\":{\"798\":1}}],[\"大家要记住\",{\"1\":{\"786\":1}}],[\"大家看着啰嗦\",{\"1\":{\"183\":1}}],[\"大家写的时候注意以下几点\",{\"1\":{\"181\":1}}],[\"大概了解上面这些\",{\"1\":{\"850\":1}}],[\"大概了解一下\",{\"1\":{\"849\":1}}],[\"大概一个网络流程如下\",{\"1\":{\"840\":1}}],[\"大概二十分钟左右便到了车站\",{\"1\":{\"432\":1}}],[\"大概在2011年\",{\"1\":{\"432\":1}}],[\"大概列了长长的十几项精通\",{\"1\":{\"180\":1}}],[\"大概是去年就想做这个事情了\",{\"1\":{\"3\":1}}],[\"大佬文章\",{\"1\":{\"0\":1}}],[\"问的问题都差不多\",{\"1\":{\"201\":1}}],[\"问的特别细\",{\"1\":{\"192\":1}}],[\"问期望收入的时候\",{\"1\":{\"197\":1}}],[\"问我日活用户数\",{\"1\":{\"193\":1}}],[\"问我公司的战略是啥\",{\"1\":{\"191\":1}}],[\"问题在于\",{\"1\":{\"534\":1}}],[\"问题2\",{\"1\":{\"134\":1}}],[\"问题1\",{\"1\":{\"134\":1}}],[\"问题\",{\"1\":{\"4\":1,\"134\":2,\"186\":1,\"208\":1}}],[\"问题发生的背景\",{\"1\":{\"2\":1}}],[\"问题的描述应该包含以下内容\",{\"1\":{\"2\":1}}],[\"问一问\",{\"1\":{\"2\":1}}],[\"鹏祥\",{\"1\":{\"0\":1}}],[\"一定是由根目录\",{\"1\":{\"1072\":1}}],[\"一定要看到最后\",{\"1\":{\"584\":1}}],[\"一定要求写到合同里\",{\"1\":{\"200\":1}}],[\"一定要小心这个\",{\"1\":{\"194\":1}}],[\"一些常用的前端插件\",{\"1\":{\"1006\":1}}],[\"一些恶意的请求会故意查询不存在的\",{\"1\":{\"209\":1}}],[\"一堆质量重构和代码修复将改善您在\",{\"1\":{\"968\":1}}],[\"一行显示\",{\"1\":{\"885\":1}}],[\"一套运行于jenkins上的工作流框架\",{\"1\":{\"879\":1}}],[\"一期\",{\"1\":{\"874\":1}}],[\"一下子减少了\",{\"1\":{\"867\":1}}],[\"一组按次序排列的数据\",{\"1\":{\"850\":1}}],[\"一是通过命令就行拷贝\",{\"1\":{\"812\":1}}],[\"一元调用\",{\"1\":{\"669\":1,\"671\":1}}],[\"一元\",{\"1\":{\"667\":1}}],[\"一起讨论\",{\"1\":{\"662\":1}}],[\"一起补充学习\",{\"1\":{\"0\":1}}],[\"一点一点看\",{\"1\":{\"600\":1}}],[\"一点一点的查出来\",{\"1\":{\"208\":1}}],[\"一方面是用于给我一个前端朋友用来学习调用接口\",{\"1\":{\"600\":1}}],[\"一只想要成为一个优秀程序员的渣逼程序猿\",{\"1\":{\"592\":1}}],[\"一种分布式网络文件系统\",{\"1\":{\"914\":1}}],[\"一种功能强大的二进制序列化\",{\"1\":{\"536\":1}}],[\"一种便\",{\"1\":{\"298\":1}}],[\"一直点击下一步就可安装成功\",{\"1\":{\"1110\":1}}],[\"一直到下一站\",{\"1\":{\"532\":1}}],[\"一直传递到最终的服务器\",{\"1\":{\"322\":1}}],[\"一键启动\",{\"1\":{\"852\":1}}],[\"一键启动所有容器服务\",{\"1\":{\"844\":1}}],[\"一键启动相关服务\",{\"1\":{\"843\":1}}],[\"一键生成\",{\"0\":{\"338\":1}}],[\"一键就可以实现基于tcp隧道的rdp连接\",{\"1\":{\"288\":1}}],[\"一样将各个命令串联起来执行\",{\"1\":{\"1096\":1}}],[\"一样\",{\"1\":{\"322\":1,\"513\":1,\"914\":1}}],[\"一样方便\",{\"1\":{\"215\":1}}],[\"一款极易搭建的自助\",{\"1\":{\"791\":1}}],[\"一款开源脚本fido\",{\"1\":{\"270\":1}}],[\"一款\",{\"1\":{\"243\":1}}],[\"一匹配就抛异常\",{\"1\":{\"215\":1}}],[\"一天五万条以上的增量\",{\"1\":{\"206\":1}}],[\"一次创建多级目录\",{\"1\":{\"1075\":1}}],[\"一次请求开始到请求结束\",{\"1\":{\"346\":1}}],[\"一次只能由一个客户端使用\",{\"1\":{\"322\":1}}],[\"一次失败后\",{\"1\":{\"205\":1}}],[\"一次缓存\",{\"1\":{\"134\":1}}],[\"一半绩效\",{\"1\":{\"199\":1}}],[\"一半基本工资\",{\"1\":{\"199\":1}}],[\"一年9块钱40g\",{\"1\":{\"954\":1}}],[\"一年十几薪\",{\"1\":{\"191\":1}}],[\"一年看\",{\"1\":{\"179\":1}}],[\"一张让人看着舒服\",{\"1\":{\"177\":1}}],[\"一份好的简历能帮你在一堆简历中脱颖而出\",{\"1\":{\"176\":1}}],[\"一旦服务器内存不够\",{\"1\":{\"1110\":1}}],[\"一旦调试过程停止\",{\"1\":{\"978\":1}}],[\"一旦发现有新建的\",{\"1\":{\"941\":1}}],[\"一旦申明了全局变量\",{\"1\":{\"740\":1}}],[\"一旦与对方确认了语言\",{\"1\":{\"534\":1}}],[\"一旦我们新增一个shape类型\",{\"1\":{\"442\":1}}],[\"一旦我们决定使用缓存\",{\"1\":{\"134\":1}}],[\"一旦消息被投递到所有匹配的队列之后\",{\"1\":{\"208\":1}}],[\"一旦消息被投递到目的队列后\",{\"1\":{\"208\":1}}],[\"一旦channel进入confirm模式\",{\"1\":{\"208\":1}}],[\"一旦单个索引很大\",{\"1\":{\"204\":1}}],[\"一旦所有的文档都被取回了\",{\"1\":{\"204\":1}}],[\"一旦被识破\",{\"1\":{\"195\":1}}],[\"一旦被揭穿\",{\"1\":{\"183\":1}}],[\"一旦缓存\",{\"1\":{\"134\":1}}],[\"一段时间过后\",{\"1\":{\"134\":1}}],[\"一致的效果\",{\"1\":{\"209\":1}}],[\"一致性问题\",{\"1\":{\"208\":2}}],[\"一致性级别支持quorum\",{\"1\":{\"204\":1}}],[\"一致性\",{\"1\":{\"134\":1}}],[\"一致\",{\"1\":{\"134\":1}}],[\"一吧啊我鄭饿\",{\"1\":{\"125\":1}}],[\"一吧我饿啊鄭\",{\"1\":{\"124\":1}}],[\"一\",{\"0\":{\"721\":1},\"1\":{\"99\":1,\"124\":1,\"125\":1,\"180\":1,\"190\":1,\"445\":1}}],[\"一个主库+一个从库或者多个从库的结构\",{\"1\":{\"1047\":1}}],[\"一个主进程\",{\"1\":{\"207\":1}}],[\"一个未签名\",{\"1\":{\"1037\":1}}],[\"一个时间轴以及一个点击按钮切换背景图的东西\",{\"1\":{\"1037\":1}}],[\"一个在visual\",{\"1\":{\"968\":1}}],[\"一个node就是一个jenkins节点\",{\"1\":{\"879\":1}}],[\"一个pipeline可以划分为若干个stage\",{\"1\":{\"879\":1}}],[\"一个python字符串表达式\",{\"1\":{\"564\":2}}],[\"一个空镜像\",{\"1\":{\"869\":1}}],[\"一个工具完成连接服务器和上传文件\",{\"1\":{\"806\":1}}],[\"一个文件被改动\",{\"1\":{\"754\":1}}],[\"一个请求在发送之前\",{\"1\":{\"744\":1}}],[\"一个请求中一般包含三个部分\",{\"1\":{\"732\":1}}],[\"一个请求地址\",{\"1\":{\"729\":1}}],[\"一个是存储的大小\",{\"1\":{\"914\":1}}],[\"一个是请求方法\",{\"1\":{\"729\":1}}],[\"一个是只要输入含有敏感词就会把相关的字符串替换为\",{\"1\":{\"215\":1}}],[\"一个是只要输入含有敏感词就会报错\",{\"1\":{\"215\":1}}],[\"一个服务可以是服务端也可以是客户端\",{\"1\":{\"668\":1}}],[\"一个用于在asp\",{\"1\":{\"668\":1}}],[\"一个高质量的开源项目一定是有比较完善的测试项目的\",{\"1\":{\"599\":1}}],[\"一个测试方法只测试一个问题\",{\"1\":{\"595\":1}}],[\"一个单元测试判断某个特定场条件下某个特定方法的行为\",{\"1\":{\"593\":1}}],[\"一个int偏移值\",{\"1\":{\"564\":1}}],[\"一个k\",{\"1\":{\"564\":2}}],[\"一个预期的退出返回码\",{\"1\":{\"564\":2}}],[\"一个将视频加密的播放软件\",{\"1\":{\"302\":1}}],[\"一个只用\",{\"1\":{\"243\":1}}],[\"一个简单的\",{\"1\":{\"243\":1}}],[\"一个项目组一般为一个分组\",{\"1\":{\"227\":1}}],[\"一个大型的微服务架构\",{\"1\":{\"210\":1}}],[\"一个功能就是一个服务\",{\"1\":{\"210\":1}}],[\"一个个的科室\",{\"1\":{\"210\":1}}],[\"一个模块只做一个事情\",{\"1\":{\"210\":1}}],[\"一个新的命令被执行\",{\"1\":{\"209\":1}}],[\"一个客户端运行了新的命令\",{\"1\":{\"209\":1}}],[\"一个字符串类型的值能存储最大容量是多少\",{\"1\":{\"209\":1}}],[\"一个字段定义表\",{\"1\":{\"86\":1}}],[\"一个解决思路是\",{\"1\":{\"208\":1}}],[\"一个解决方案可以包含多个项目\",{\"1\":{\"90\":1}}],[\"一个表可以有多个唯一索引\",{\"1\":{\"206\":1}}],[\"一个表可以有多个外键\",{\"1\":{\"206\":1}}],[\"一个另外的成员会变成primary\",{\"1\":{\"205\":1}}],[\"一个100微秒的操作可能变成10毫秒\",{\"1\":{\"204\":1}}],[\"一个元组可以容纳1到8个元素\",{\"1\":{\"203\":1}}],[\"一个难题就这么被化解了\",{\"1\":{\"186\":1}}],[\"一个成长的机会\",{\"1\":{\"185\":1}}],[\"一个实例对象相同\",{\"1\":{\"117\":1}}],[\"一个\",{\"0\":{\"918\":1},\"1\":{\"103\":1,\"208\":2,\"944\":1,\"945\":1,\"1037\":1}}],[\"一个索引器也可以包含多个参数\",{\"1\":{\"66\":1}}],[\"一个类可以定义多个参数类型不同的索引器\",{\"1\":{\"66\":1}}],[\"一个喜欢编程的小伙子\",{\"1\":{\"0\":1}}],[\"一眼看过去\",{\"1\":{\"59\":1}}],[\"一般为内存的\",{\"1\":{\"1110\":1}}],[\"一般这里我们是不需要再做修改的\",{\"1\":{\"959\":1}}],[\"一般会在一组完成同样工作的\",{\"1\":{\"937\":1}}],[\"一般配合replicaset或者deployment来保证后端容器的正常运行\",{\"1\":{\"914\":1}}],[\"一般可以一个一个的启动容器\",{\"1\":{\"843\":1}}],[\"一般和\",{\"1\":{\"811\":2}}],[\"一般情况下我们不需要手动创建pod实例\",{\"1\":{\"914\":1}}],[\"一般情况下\",{\"1\":{\"744\":1}}],[\"一般情况下不会出现该情况\",{\"1\":{\"402\":1}}],[\"一般用户提示符为\",{\"1\":{\"1110\":1}}],[\"一般用户的话只能建立公用仓库\",{\"1\":{\"14\":1}}],[\"一般用于批量删除\",{\"1\":{\"810\":1}}],[\"一般用于性能测试\",{\"1\":{\"739\":1}}],[\"一般在抓包工具中都有这个选项\",{\"1\":{\"735\":1}}],[\"一般就是增\",{\"1\":{\"810\":1}}],[\"一般就是你本地启动了玩玩儿的\",{\"1\":{\"208\":1}}],[\"一般就需要明确俩个参数即可\",{\"1\":{\"729\":1}}],[\"一般无须打开\",{\"1\":{\"690\":1}}],[\"一般的rpc调用\",{\"1\":{\"667\":1}}],[\"一般的缓存系统\",{\"1\":{\"209\":1}}],[\"一般来说我们都会验证响应体中的数据和响应状态码\",{\"1\":{\"735\":1}}],[\"一般来说\",{\"1\":{\"593\":1}}],[\"一般来说设置export\",{\"1\":{\"204\":1}}],[\"一般更推荐建立指定的返回model类\",{\"1\":{\"501\":1}}],[\"一般是\",{\"1\":{\"867\":1}}],[\"一般是根据当前请求识别的用户信息\",{\"1\":{\"360\":1}}],[\"一般是通过加密的cookies实现\",{\"1\":{\"360\":1}}],[\"一般是开启持久化磁盘的配置\",{\"1\":{\"208\":1}}],[\"一般不需要替换\",{\"1\":{\"344\":1}}],[\"一般不推荐使用这种代理\",{\"1\":{\"322\":1}}],[\"一般一个集群的所有节点位于一个数据中心中\",{\"1\":{\"204\":1}}],[\"一般也是采用单例模式实现\",{\"1\":{\"202\":1}}],[\"一般面试都有这个环节\",{\"1\":{\"185\":1}}],[\"一般人只写项目\",{\"1\":{\"181\":1}}],[\"一般人只在个人信息里写学历\",{\"1\":{\"178\":1}}],[\"一般都是用version\",{\"1\":{\"852\":1}}],[\"一般都是提前一个小时检票\",{\"1\":{\"432\":1}}],[\"一般都是单例模式实现\",{\"1\":{\"202\":1}}],[\"一般都是\",{\"1\":{\"43\":1}}],[\"一名和每天和数据打交道的人也在使用github\",{\"1\":{\"10\":1}}],[\"软件进行补充\",{\"1\":{\"1110\":1}}],[\"软件的独立单元将在与程序的其他部分相隔离的情况下进行测试\",{\"1\":{\"593\":1}}],[\"软件设计的最小单位\",{\"1\":{\"593\":1}}],[\"软件专家提出了ioc理论\",{\"1\":{\"435\":1}}],[\"软件界面为亚力克\",{\"1\":{\"275\":1}}],[\"软件合集\",{\"0\":{\"260\":1}}],[\"软件业开源生态加快构建\",{\"1\":{\"253\":1}}],[\"软件\",{\"1\":{\"0\":1,\"247\":1,\"1110\":1}}],[\"喜欢捣鼓各种开发技术\",{\"1\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
