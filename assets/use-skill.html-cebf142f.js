const e=JSON.parse('{"key":"v-a4eb6c4a","path":"/soft/visualstudio/use-skill.html","title":"调试效率技巧","lang":"zh-CN","frontmatter":{"title":"调试效率技巧","lang":"zh-CN","date":"2021-02-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["soft"],"tag":["VS"],"description":"Visual Studio调试效率技巧 在这篇文章中，我们假定读者了解VS基本的调试知识，如： F5 开始使用调试器运行程序 F9 在当前行设置断点 F10 运行到下一个断点处 F5 从被调试的已停止程序恢复执行 F11 步进到函数内（如果当前程序指针指向一个函数） F10 步过函数（如果当前程序指针指向一个函数） Shift+F11 步出执行的函数 暂停执行 附加到进程 鼠标悬停时快速查看源代码中的元素 调试窗口：局部变量、监视、即时窗口、模块、调用堆栈、异常设置","head":[["meta",{"property":"og:url","content":"https://azrng.github.io/kbms/kbms/soft/visualstudio/use-skill.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"调试效率技巧"}],["meta",{"property":"og:description","content":"Visual Studio调试效率技巧 在这篇文章中，我们假定读者了解VS基本的调试知识，如： F5 开始使用调试器运行程序 F9 在当前行设置断点 F10 运行到下一个断点处 F5 从被调试的已停止程序恢复执行 F11 步进到函数内（如果当前程序指针指向一个函数） F10 步过函数（如果当前程序指针指向一个函数） Shift+F11 步出执行的函数 暂停执行 附加到进程 鼠标悬停时快速查看源代码中的元素 调试窗口：局部变量、监视、即时窗口、模块、调用堆栈、异常设置"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-12T14:37:08.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"VS"}],["meta",{"property":"article:published_time","content":"2021-02-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-12T14:37:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"调试效率技巧\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-02-22T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-12T14:37:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"1、运行到光标位置","slug":"_1、运行到光标位置","link":"#_1、运行到光标位置","children":[]},{"level":2,"title":"2、通过点击鼠标，运行到当前位置","slug":"_2、通过点击鼠标-运行到当前位置","link":"#_2、通过点击鼠标-运行到当前位置","children":[]},{"level":2,"title":"3、在此处作为下一条要执行的语句","slug":"_3、在此处作为下一条要执行的语句","link":"#_3、在此处作为下一条要执行的语句","children":[]},{"level":2,"title":"4、数据断点：当值发生变化时，触发中断（值更改时中断）","slug":"_4、数据断点-当值发生变化时-触发中断-值更改时中断","link":"#_4、数据断点-当值发生变化时-触发中断-值更改时中断","children":[]},{"level":2,"title":"5、条件断点","slug":"_5、条件断点","link":"#_5、条件断点","children":[]},{"level":2,"title":"6、跟踪断点","slug":"_6、跟踪断点","link":"#_6、跟踪断点","children":[]},{"level":2,"title":"7、跟踪超出作用域的对象","slug":"_7、跟踪超出作用域的对象","link":"#_7、跟踪超出作用域的对象","children":[]},{"level":2,"title":"8、查看函数返回的值","slug":"_8、查看函数返回的值","link":"#_8、查看函数返回的值","children":[]},{"level":2,"title":"9、重新附加到进程","slug":"_9、重新附加到进程","link":"#_9、重新附加到进程","children":[]},{"level":2,"title":"10、在即时窗口和在观察窗口的No-Side-Effect评估","slug":"_10、在即时窗口和在观察窗口的no-side-effect评估","link":"#_10、在即时窗口和在观察窗口的no-side-effect评估","children":[]},{"level":2,"title":"11、在源码中显示线程","slug":"_11、在源码中显示线程","link":"#_11、在源码中显示线程","children":[]},{"level":2,"title":"12、从反编译的IL代码中调试源代码","slug":"_12、从反编译的il代码中调试源代码","link":"#_12、从反编译的il代码中调试源代码","children":[]},{"level":2,"title":"结尾","slug":"结尾","link":"#结尾","children":[]}],"git":{"createdTime":1670219403000,"updatedTime":1670855828000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":2},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":2}]},"readingTime":{"minutes":8.44,"words":2532},"filePathRelative":"soft/visualstudio/use-skill.md","localizedDate":"2021年2月22日","excerpt":"<h1> Visual Studio调试效率技巧</h1>\\n<p>在这篇文章中，我们假定读者了解<code>VS</code>基本的调试知识，如：</p>\\n<ul>\\n<li><strong>F5</strong> 开始使用调试器运行程序</li>\\n<li><strong>F9</strong> 在当前行设置断点</li>\\n<li><strong>F10</strong> 运行到下一个断点处</li>\\n<li><strong>F5</strong> 从被调试的已停止程序恢复执行</li>\\n<li><strong>F11</strong> 步进到函数内（如果当前程序指针指向一个函数）</li>\\n<li><strong>F10</strong> 步过函数（如果当前程序指针指向一个函数）</li>\\n<li><strong>Shift+F11</strong> 步出执行的函数</li>\\n<li>暂停执行</li>\\n<li>附加到进程</li>\\n<li>鼠标悬停时快速查看源代码中的元素</li>\\n<li>调试窗口：局部变量、监视、即时窗口、模块、调用堆栈、异常设置</li>\\n</ul>","autoDesc":true}');export{e as data};
