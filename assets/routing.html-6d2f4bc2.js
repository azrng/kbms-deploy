const e=JSON.parse('{"key":"v-96fb1014","path":"/dotnetcore/routing.html","title":"路由","lang":"zh-CN","frontmatter":{"title":"路由","lang":"zh-CN","date":"2022-08-25T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNet"],"tag":["route"],"description":"Routing Routing（路由）：更准确的应该叫做Endpoint Routing，负责将HTTP请求按照匹配规则选择对应的终结点 Endpoint（终结点）：负责当HTTP请求到达时，执行代码 路由是通过UseRouting和UseEndpoints两个中间件配合在一起来完成注册的： public class Startup { public void ConfigureServices(IServiceCollection services) { // 添加Routing相关服务 // 注意，其已在 ConfigureWebDefaults 中添加，无需手动添加，此处仅为演示 services.AddRouting(); } public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { app.UseRouting(); app.UseEndpoints(endpoints =&gt; { endpoints.MapGet(\\"/\\", async context =&gt; { await context.Response.WriteAsync(\\"Hello World!\\"); }); }); } }","head":[["meta",{"property":"og:url","content":"https://azrng.github.io/kbms/kbms/dotnetcore/routing.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"路由"}],["meta",{"property":"og:description","content":"Routing Routing（路由）：更准确的应该叫做Endpoint Routing，负责将HTTP请求按照匹配规则选择对应的终结点 Endpoint（终结点）：负责当HTTP请求到达时，执行代码 路由是通过UseRouting和UseEndpoints两个中间件配合在一起来完成注册的： public class Startup { public void ConfigureServices(IServiceCollection services) { // 添加Routing相关服务 // 注意，其已在 ConfigureWebDefaults 中添加，无需手动添加，此处仅为演示 services.AddRouting(); } public void Configure(IApplicationBuilder app, IWebHostEnvironment env) { app.UseRouting(); app.UseEndpoints(endpoints =&gt; { endpoints.MapGet(\\"/\\", async context =&gt; { await context.Response.WriteAsync(\\"Hello World!\\"); }); }); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-10T10:54:02.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"route"}],["meta",{"property":"article:published_time","content":"2022-08-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-10T10:54:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"路由\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-25T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-10T10:54:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"获取终结点","slug":"获取终结点","link":"#获取终结点","children":[]},{"level":2,"title":"配置终结点委托","slug":"配置终结点委托","link":"#配置终结点委托","children":[]},{"level":2,"title":"路由模板","slug":"路由模板","link":"#路由模板","children":[{"level":3,"title":"catch-all参数","slug":"catch-all参数","link":"#catch-all参数","children":[]},{"level":3,"title":"复杂段","slug":"复杂段","link":"#复杂段","children":[]}]},{"level":2,"title":"路由约束","slug":"路由约束","link":"#路由约束","children":[{"level":3,"title":"自定义路由约束","slug":"自定义路由约束","link":"#自定义路由约束","children":[]}]},{"level":2,"title":"路由模板优先级","slug":"路由模板优先级","link":"#路由模板优先级","children":[]},{"level":2,"title":"UseRouting","slug":"userouting","link":"#userouting","children":[{"level":3,"title":"EndpointRoutingMiddleware","slug":"endpointroutingmiddleware","link":"#endpointroutingmiddleware","children":[]},{"level":3,"title":"EndpointMiddleware","slug":"endpointmiddleware","link":"#endpointmiddleware","children":[]}]}],"git":{"createdTime":1670219403000,"updatedTime":1670669642000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":3},{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":12.93,"words":3880},"filePathRelative":"dotnetcore/routing.md","localizedDate":"2022年8月25日","excerpt":"<h1> Routing</h1>\\n<ul>\\n<li>Routing（路由）：更准确的应该叫做Endpoint Routing，负责将HTTP请求按照匹配规则选择对应的终结点</li>\\n<li>Endpoint（终结点）：负责当HTTP请求到达时，执行代码</li>\\n</ul>\\n<p>路由是通过<code>UseRouting</code>和<code>UseEndpoints</code>两个中间件配合在一起来完成注册的：</p>\\n<div class=\\"language-c# line-numbers-mode\\" data-ext=\\"c#\\"><pre class=\\"language-c#\\"><code>public class Startup\\n{\\n    public void ConfigureServices(IServiceCollection services)\\n    {\\n        // 添加Routing相关服务\\n        // 注意，其已在 ConfigureWebDefaults 中添加，无需手动添加，此处仅为演示\\n        services.AddRouting();\\n    }\\n    \\n    public void Configure(IApplicationBuilder app, IWebHostEnvironment env)\\n    {\\n        app.UseRouting();\\n    \\n        app.UseEndpoints(endpoints =&gt;\\n        {\\n            endpoints.MapGet(\\"/\\", async context =&gt;\\n            {\\n                await context.Response.WriteAsync(\\"Hello World!\\");\\n            });\\n        });\\n    }\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
