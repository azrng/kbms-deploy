import{_ as t,V as l,W as r,X as n,Y as a,Z as s,$ as i,C as c}from"./framework-fde89294.js";const d={},p=i(`<h1 id="gitlab简单使用ci-cd" tabindex="-1"><a class="header-anchor" href="#gitlab简单使用ci-cd" aria-hidden="true">#</a> Gitlab简单使用CI/CD</h1><h1 id="开篇语" tabindex="-1"><a class="header-anchor" href="#开篇语" aria-hidden="true">#</a> 开篇语</h1><p>大概是去年就想做这个事情了，奈何当时卡到一个docker命令找不到的问题上，导致文章难产了，墨迹了这么久，终于又有空来捣鼓它了。</p><h1 id="目的" tabindex="-1"><a class="header-anchor" href="#目的" aria-hidden="true">#</a> 目的</h1><p>我们要实现的目的是我本地不断提交代码(CI),然后服务器不断进行部署(CD)的一个简单流程。</p><h1 id="准备" tabindex="-1"><a class="header-anchor" href="#准备" aria-hidden="true">#</a> 准备</h1><p>在进行简单的gtlab的ci/cd之前，我们需要安装gitlab软件，这个可以看之前的文章。</p><p>本文环境：</p><p>服务器A：使用docker部署了gitlab</p><p>服务器B：已经安装了docker、注册了gitlab-runner用来部署服务</p><p>在centos一键安装docker以及docker-compose的脚本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[33m install docker sh <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>

<span class="token comment"># 设置yum源</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[33m Set the yum source <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token function">sudo</span> yum <span class="token parameter variable">-y</span> <span class="token function">install</span> yum-utils
<span class="token function">sudo</span> yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo

<span class="token comment">#yum包更新到最新</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[33m update version <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token function">sudo</span> yum update <span class="token parameter variable">-y</span>

<span class="token comment">#安装Docker最新版</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[33m install docker-ce <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce <span class="token parameter variable">-y</span>

<span class="token comment">#设置Docker自启动</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[33m setting self-turn-on <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span>  <span class="token function">docker</span>

<span class="token comment">#启动Docker</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[33m start docker <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token function">sudo</span> systemctl start <span class="token function">docker</span>

<span class="token comment">#配置国内镜像 /etc/docker/daemon.json</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[33m Set up aliyuncs mirror <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token function">sudo</span> <span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">&#39;EOF&#39;
{
  &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn&quot;]
}
EOF</span>
<span class="token comment">#加载配置文件,ReStart</span>
<span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>

<span class="token comment">#安装docker-compose,最新版本需要手动查询一下</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[33m install docker-compose <span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
<span class="token function">sudo</span> <span class="token function">curl</span> <span class="token parameter variable">-L</span> https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-<span class="token variable"><span class="token variable">\`</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">\`</span></span>-<span class="token variable"><span class="token variable">\`</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">\`</span></span> <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose
<span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>部署gitlab的yaml脚本</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">gitlab</span><span class="token punctuation">:</span> <span class="token comment">#gitlab</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> gitlab/gitlab<span class="token punctuation">-</span>ce
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> <span class="token string">&#39;gitlab&#39;</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">GITLAB_OMNIBUS_CONFIG</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
        external_url &quot;http://172.18.231.92:9006&quot; # web站点访问地址
        gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] = 9022 # 设置shell 端口
        gitlab_rails[&#39;time_zone&#39;] = &#39;Asia/Shanghai&#39; # 设置时区
        # gitlab_rails[&#39;smtp_enable&#39;] = true
        # gitlab_rails[&#39;smtp_address&#39;] = &quot;smtp.exmail.qq.com&quot;
        # gitlab_rails[&#39;smtp_port&#39;] = 465
        # gitlab_rails[&#39;smtp_user_name&#39;] = &quot;&lt;your qq email&gt;&quot;
        # gitlab_rails[&#39;smtp_password&#39;] = &quot;xCcqh*L4jkqFCS&quot;
        # gitlab_rails[&#39;smtp_authentication&#39;] = &quot;login&quot;
        # gitlab_rails[&#39;smtp_enable_starttls_auto&#39;] = true
        # gitlab_rails[&#39;smtp_tls&#39;] = true
        # gitlab_rails[&#39;gitlab_email_from&#39;] = &#39;&lt;your qq email&gt;&#39;
        # gitlab_rails[&#39;smtp_domain&#39;] = &quot;exmail.qq.com&quot;</span>
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&#39;9006:9006&#39;</span>
      <span class="token punctuation">-</span> <span class="token string">&#39;443:443&#39;</span>
      <span class="token punctuation">-</span> <span class="token string">&#39;9022:22&#39;</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&#39;/gitlab/config:/etc/gitlab&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装gitlab-runner" tabindex="-1"><a class="header-anchor" href="#安装gitlab-runner" aria-hidden="true">#</a> 安装gitlab-runner</h2><p>在要部署服务的服务器上安装docker以及gitlab-runner，本次安装直接安装在服务器中，不使用docker安装gitlab-runner，避免产生Dind(docker in docker)问题。</p><p>首先导入repository</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-L</span> https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cdn.nlark.com/yuque/0/2021/png/272869/1631024347306-6cb8d6a8-0f4e-4422-9fcf-cefc50c57988.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> gitlab-runner <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669534749945-a3c326b9-0c5e-476f-a677-d3ffa2822908.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="注册到gitlab" tabindex="-1"><a class="header-anchor" href="#注册到gitlab" aria-hidden="true">#</a> 注册到gitlab</h2><h3 id="注册群组runner" tabindex="-1"><a class="header-anchor" href="#注册群组runner" aria-hidden="true">#</a> 注册群组Runner</h3>`,24),o={href:"http://172.18.231.92:9006/admin/runners",target:"_blank",rel:"noopener noreferrer"},u=i(`<p>输入命令进行注册</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>gitlab-runner register
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669535423353-d7894316-93ec-4e4b-9976-7edda08ed18e.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>选择执行者，这里我使用shell</p>`,4),m={href:"https://docs.gitlab.com/runner/executors/index.html",target:"_blank",rel:"noopener noreferrer"},g=i(`<p>到这里已经注册成功了，就可以在gitlab中看到注册的runner了</p><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669535468691-944e553e-7c20-4dc9-b9cb-ebed89e335d0.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="为仓库设置单独的runner" tabindex="-1"><a class="header-anchor" href="#为仓库设置单独的runner" aria-hidden="true">#</a> 为仓库设置单独的Runner</h3><p>使用该方案应该先看下一步去创建项目</p><p>在我们要部署的仓库里面找到Runner配置信息(设置=&gt;CI/CD)</p><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669536815772-c8483320-8bf3-4588-8040-87c48660ea6c.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>然后重复上面注册的过程，详细步骤如图</p><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669536977765-bad6b0ab-7649-4f53-9863-ae3cec9bf510.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>然后就可以在仓库的配置下可以看到我们注册的东西</p><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669537643629-61121513-b3c6-440e-bc99-4693dfd430cb.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="配置帐号" tabindex="-1"><a class="header-anchor" href="#配置帐号" aria-hidden="true">#</a> 配置帐号</h2><p>添加gitlab-runner用户</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>sudo adduser gitlab-runner
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将该用户添加到docker组中</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>sudo gpasswd -a gitlab-runner docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看docker组是否已经添加用户成功</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>cat /etc/group |grep docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>验证是否可以通过gitlab-runner访问docker</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>sudo -u gitlab-runner -H docker info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启docker容器服务</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>sudo systemctl restart docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>给docker.sock设置权限</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>sudo chmod a+rw /var/run/docker.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cdn.nlark.com/yuque/0/2021/png/272869/1630853106274-e18c02ab-fb18-485e-8d50-16b05cff1f51.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h1 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h1><p>直接开始创建项目</p><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669531947826-e0a4440d-3a42-4dce-9eea-65b8fa8c8fb6.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>拉取项目并填充内容</p><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669531985693-6770d693-8741-46b7-b3dc-deec556c1745.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>`,29),b={href:"https://gitee.com/AZRNG/my-example",target:"_blank",rel:"noopener noreferrer"},v=i(`<figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669532487711-64968ba4-12f3-43de-95c6-04b9ad2d7dee.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h1 id="配置流水线" tabindex="-1"><a class="header-anchor" href="#配置流水线" aria-hidden="true">#</a> 配置流水线</h1><p>在项目的根目录下创建文件名为.gitlab-ci.yml的文件，用于进行打包部署。</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code># .gitlab-ci.yml

stages:
  - deploy

deploy:
  stage: deploy
  script:
    - docker -v
    - pwd
    - cd NetByDocker
    - docker build -f Dockerfile -t gitlabnetsample ../ 
    - docker rm -f gitlabnetsample &amp;&amp;  docker run --name gitlabnetsample -d -p 8060:80 gitlabnetsample # remove old,create new 
    - docker ps -a
  tags: 
    - net
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提交推送代码，然后在gitlab的CI/CD=&gt;Pipeliners查看</p><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669540222726-716ffdc2-39a2-4f37-8ef9-8a49783e553a.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>查看详细信息</p><figure><img src="https://cdn.nlark.com/yuque/0/2021/png/272869/1630853156788-69b4bfb8-dec8-436d-a9ff-78be35be0724.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>部署成功，进入该服务器查看容器信息</p><figure><img src="https://cdn.nlark.com/yuque/0/2022/png/272869/1669540260122-0be4c35e-a786-4ad2-aa53-4592b3a8a740.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>`,10),k={href:"http://172.18.229.206:8060/swagger/index.html",target:"_blank",rel:"noopener noreferrer"},h=n("h1",{id:"参考文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考文档","aria-hidden":"true"},"#"),a(" 参考文档")],-1),f={href:"https://mp.weixin.qq.com/s/h3W7ltj4xl1tzDEia_xCag",target:"_blank",rel:"noopener noreferrer"},y={href:"https://blog.csdn.net/qq_42799562/article/details/118179856",target:"_blank",rel:"noopener noreferrer"};function _(q,x){const e=c("ExternalLinkIcon");return l(),r("div",null,[p,n("p",null,[a("首先我们要获取注册时候需要的信息，获取地址在 "),n("a",o,[a("http://172.18.231.92:9006/admin/runners"),s(e)])]),u,n("p",null,[a("执行者参考："),n("a",m,[a("https://docs.gitlab.com/runner/executors/index.html"),s(e)])]),g,n("p",null,[a("拷贝一个简单项目("),n("a",b,[a("https://gitee.com/AZRNG/my-example"),s(e)]),a(")提交到gitlab上")]),v,n("p",null,[a("通过外部访问服务："),n("a",k,[a("http://172.18.229.206:8060/swagger/index.html"),s(e)]),a(" 成功显示swagger界面，部署成功。")]),h,n("p",null,[n("a",f,[a("https://mp.weixin.qq.com/s/h3W7ltj4xl1tzDEia_xCag"),s(e)])]),n("p",null,[n("a",y,[a("https://blog.csdn.net/qq_42799562/article/details/118179856"),s(e)])])])}const C=t(d,[["render",_],["__file","build.html.vue"]]);export{C as default};
