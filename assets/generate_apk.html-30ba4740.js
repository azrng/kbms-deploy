import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as t,c as r,a as s,b as a,d as e,e as l}from"./app-77ed49ef.js";const i="/maui/1666449750699-d987ea22-6a0f-4d88-a494-64aaec095c89.png",c="/maui/1666449805533-abf78679-6cd0-4b98-8a21-53cdb7aef38c.png",d="/maui/1666451120428-276a9ea0-f401-4546-bdb4-feceb836eef2.png",k={},u=s("h1",{id:"目的",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#目的","aria-hidden":"true"},"#"),a(" 目的")],-1),g={href:"https://azrng.lanzouv.com/iBQRe0eeg8wf",target:"_blank",rel:"noopener noreferrer"},m=l(`<blockquote><p>切记项目目录不要带中文</p></blockquote><h1 id="程序包设置" tabindex="-1"><a class="header-anchor" href="#程序包设置" aria-hidden="true">#</a> 程序包设置</h1><p>每个应用都应该指定唯一的包标识符和版本，配置在项目的.csproj文件中</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 显示名 <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>ApplicationTitle<span class="token operator">&gt;</span>MauiAppBlazor<span class="token operator">&lt;</span><span class="token operator">/</span>ApplicationTitle<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> App 标识 <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>ApplicationId<span class="token operator">&gt;</span>com<span class="token punctuation">.</span>companyname<span class="token punctuation">.</span>mauiappblazor<span class="token operator">&lt;</span><span class="token operator">/</span>ApplicationId<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>ApplicationIdGuid<span class="token operator">&gt;</span>48CF021D<span class="token operator">-</span>51ED<span class="token operator">-</span>47B9<span class="token operator">-</span>B8BC<span class="token operator">-</span>E6005BE37A8A<span class="token operator">&lt;</span><span class="token operator">/</span>ApplicationIdGuid<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 版本 <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>ApplicationDisplayVersion<span class="token operator">&gt;</span><span class="token number">1.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>ApplicationDisplayVersion<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>ApplicationVersion<span class="token operator">&gt;</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>ApplicationVersion<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="创建密钥存储文件" tabindex="-1"><a class="header-anchor" href="#创建密钥存储文件" aria-hidden="true">#</a> 创建密钥存储文件</h1><p>使用密钥存储文件对包进行签名， Java/Android SDK 包含生成密钥存储所需的工具。 生成密钥存储文件后，将它添加到项目中，并将项目文件配置为引用它。提前安装 Java SDK ，以便你可以运行 <em>keytool</em> 工具。</p><p>执行下面的步骤创建密钥存储文件</p><p>1.打开终端程序并导航到项目文件夹</p><figure><img src="`+i+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>2.运行keytool工具</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>keytool <span class="token operator">-</span>genkey <span class="token operator">-</span>v <span class="token operator">-</span>keystore myapp<span class="token punctuation">.</span>keystore <span class="token operator">-</span><span class="token keyword">alias</span> key <span class="token operator">-</span>keyalg RSA <span class="token operator">-</span>keysize <span class="token number">2048</span> <span class="token operator">-</span>validity <span class="token number">10000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按照提示输入密码等设置</p><figure><img src="`+c+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>该工具生成 一个 myapp.keystore 文件，该文件应与项目位于同一文件夹中。</p><h1 id="添加对密钥存储文件的引用" tabindex="-1"><a class="header-anchor" href="#添加对密钥存储文件的引用" aria-hidden="true">#</a> 添加对密钥存储文件的引用</h1><p>修改项目的csproj文件做以下配置</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PropertyGroup</span> Condition<span class="token operator">=</span><span class="token string">&quot;$(TargetFramework.Contains(&#39;-android&#39;)) and &#39;$(Configuration)&#39; == &#39;Release&#39;&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>AndroidKeyStore<span class="token operator">&gt;</span>True<span class="token operator">&lt;</span><span class="token operator">/</span>AndroidKeyStore<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>设置为 True 对应用进行签名<span class="token operator">--</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>AndroidSigningKeyStore<span class="token operator">&gt;</span>myapp<span class="token punctuation">.</span>keystore<span class="token operator">&lt;</span><span class="token operator">/</span>AndroidSigningKeyStore<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>在上一部分中创建的密钥存储文件： myapp<span class="token punctuation">.</span>keystore<span class="token operator">--</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>AndroidSigningKeyAlias<span class="token operator">&gt;</span>key<span class="token operator">&lt;</span><span class="token operator">/</span>AndroidSigningKeyAlias<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>传递给 keytool 工具的参数值：键<span class="token operator">--</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>AndroidSigningKeyPass<span class="token operator">&gt;</span><span class="token number">1234567</span><span class="token operator">&lt;</span><span class="token operator">/</span>AndroidSigningKeyPass<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>创建密钥存储文件时提供的密码<span class="token operator">--</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>AndroidSigningStorePass<span class="token operator">&gt;</span><span class="token number">1234567</span><span class="token operator">&lt;</span><span class="token operator">/</span>AndroidSigningStorePass<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>创建密钥存储文件时提供的密码<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="发布" tabindex="-1"><a class="header-anchor" href="#发布" aria-hidden="true">#</a> 发布</h1><p>使用.Net命令行来发布</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>dotnet publish <span class="token operator">-</span>f<span class="token punctuation">:</span>net7<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">-</span>android <span class="token operator">-</span>c<span class="token punctuation">:</span>Release <span class="token operator">/</span>p<span class="token punctuation">:</span>AndroidSigningKeyPass<span class="token operator">=</span><span class="token number">123456</span> <span class="token operator">/</span>p<span class="token punctuation">:</span>AndroidSigningStorePass<span class="token operator">=</span><span class="token number">1234567</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数介绍</p><p>-f ：目标框架，例如net7.0-android</p><p>-c：生成配置，例如Release</p><p>/p:AndroidSigningKeyPass：上面AndroidSigningKeyPass项目设置的值，也就是创建密钥文件时候的密码</p><p>/p：AndroidSigningStorePass ：上面AndroidSigningStorePass项目设置的值，也就是创建密钥文件时候的密码</p><p>发布之后会生成到相对路径为：\\bin\\Release\\net7.0-android\\publish</p><figure><img src="`+d+`" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>包含aab文件和apk文件，有两个 aab 文件，一个未签名，另一个已签名。 签名的变体在文件名中具有 -signed 。</p><h1 id="错误处理" tabindex="-1"><a class="header-anchor" href="#错误处理" aria-hidden="true">#</a> 错误处理</h1><p>如果打包的时候遇到“error XA5300: 找不到 Android SDK 目录。请检查 Visual Studio 中的 Android SDK 管理器是否显示有效的安装。若要使用命令行 生成的自定义 SDK 路径，请将 &quot;AndroidSdkDirectory&quot; MSBuild 属性设置为自定义路径。 ”那么可以修改上面的发布命令为</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>dotnet publish <span class="token operator">-</span>f<span class="token punctuation">:</span>net7<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">-</span>android <span class="token operator">-</span>c<span class="token punctuation">:</span>Release <span class="token operator">/</span>p<span class="token punctuation">:</span>AndroidSigningKeyPass<span class="token operator">=</span><span class="token number">123456</span> <span class="token operator">/</span>p<span class="token punctuation">:</span>AndroidSigningStorePass<span class="token operator">=</span><span class="token number">1234567</span> <span class="token operator">/</span>p<span class="token punctuation">:</span>AndroidSdkDirectory<span class="token operator">=</span>D<span class="token punctuation">:</span>\\Android\\android<span class="token operator">-</span>sdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个安卓sdk的地址只能你自己在你电脑上找了。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h1>`,33),h={href:"https://learn.microsoft.com/zh-cn/dotnet/maui/android/deployment/publish-cli",target:"_blank",rel:"noopener noreferrer"};function b(v,f){const n=p("ExternalLinkIcon");return t(),r("div",null,[u,s("p",null,[a("本文apk下载地址："),s("a",g,[a("https://azrng.lanzouv.com/iBQRe0eeg8wf"),e(n)]),a(" ，内容很简单，一个时间轴以及一个点击按钮切换背景图的东西，时间轴是学习Masa Blazor教程的，背景图的接口还是网上白嫖的，重点学习发布了apk，下面来简单介绍一下我的发布步骤吧")]),m,s("p",null,[a("官网资料："),s("a",h,[a("https://learn.microsoft.com/zh-cn/dotnet/maui/android/deployment/publish-cli"),e(n)])])])}const S=o(k,[["render",b],["__file","generate_apk.html.vue"]]);export{S as default};
