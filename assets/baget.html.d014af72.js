import{_ as p,W as o,X as r,Y as a,Z as s,$ as e,a0 as t,y as l}from"./framework.cf23f0c7.js";const c={},i=a("h1",{id:"_1-介绍",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-介绍","aria-hidden":"true"},"#"),s(" 1. 介绍")],-1),d=a("p",null,"BaGet是一个轻量级的包管理服务。有些时候公司或者个人不希望某一些包进行公开，那么就需要使用私有的包管理服务程序，该服务是用.netcore进行编写的(感谢开发者为社区做出的共享)",-1),h={href:"https://github.com/loic-sharma/BaGet",target:"_blank",rel:"noopener noreferrer"},u={href:"https://loic-sharma.github.io/BaGet/",target:"_blank",rel:"noopener noreferrer"},g=t(`<h1 id="_2-docker部署" tabindex="-1"><a class="header-anchor" href="#_2-docker部署" aria-hidden="true">#</a> 2. Docker部署</h1><p>创建配置文件baget.env</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token preprocessor property"># The following config is the API Key used to publish packages.</span>
<span class="token preprocessor property"># You should change this to a secret value to secure your server.</span>
ApiKey<span class="token operator">=</span>63edf12c<span class="token operator">-</span>b70c<span class="token operator">-</span>45c7<span class="token operator">-</span>b3ed<span class="token operator">-</span>f53c9f791e26 # 随机生成，上传包时候使用

Storage__Type<span class="token operator">=</span><span class="token class-name">FileSystem</span>
Storage__Path<span class="token operator">=</span>E<span class="token punctuation">:</span>\\nuget # windows下的写法
Database__Type<span class="token operator">=</span><span class="token class-name">Sqlite</span>
Database__ConnectionString<span class="token operator">=</span><span class="token class-name">Data</span> Source<span class="token operator">=</span><span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>baget<span class="token operator">/</span><span class="token class-name">baget<span class="token punctuation">.</span>db</span>
Search__Type<span class="token operator">=</span>Database
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在当前目录下执行</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token preprocessor property"># linux</span>
docker run <span class="token operator">-</span>d <span class="token operator">--</span>name BaGet<span class="token operator">-</span>nuget <span class="token operator">-</span>p <span class="token number">9002</span><span class="token punctuation">:</span><span class="token number">80</span> <span class="token operator">--</span>env<span class="token operator">-</span>file baget<span class="token punctuation">.</span>env <span class="token operator">-</span>v <span class="token string">&quot;$(pwd)/baget-data:/var/baget&quot;</span> loicsharma<span class="token operator">/</span>baget<span class="token punctuation">:</span>latest

<span class="token preprocessor property"># windows</span>
docker run <span class="token operator">-</span>d <span class="token operator">--</span>name BaGet<span class="token operator">-</span>nuget <span class="token operator">-</span>p <span class="token number">9002</span><span class="token punctuation">:</span><span class="token number">80</span> <span class="token operator">--</span>env<span class="token operator">-</span>file baget<span class="token punctuation">.</span>env <span class="token operator">-</span>v <span class="token string">&quot;E://nuget//baget-data:/var/baget&quot;</span> loicsharma<span class="token operator">/</span>baget<span class="token punctuation">:</span>latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-简单使用" tabindex="-1"><a class="header-anchor" href="#_3-简单使用" aria-hidden="true">#</a> 3. 简单使用</h1><h2 id="_3-1-访问" tabindex="-1"><a class="header-anchor" href="#_3-1-访问" aria-hidden="true">#</a> 3.1 访问</h2><p>通过访问地址： localhost:9002 进入主界面</p><p><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog202212122230490.png" alt="img" loading="lazy"></p>`,9),k={href:"https://www.nuget.org/",target:"_blank",rel:"noopener noreferrer"},b=t(`<p><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog202212122230242.png" alt="img" loading="lazy"></p><p>右键进行打包，可以通过右键属性进行修改包的参数</p><h2 id="_3-2-推送" tabindex="-1"><a class="header-anchor" href="#_3-2-推送" aria-hidden="true">#</a> 3.2 推送</h2><p>官方提供了四种方式</p><p><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog202212122230939.png" alt="img" loading="lazy"></p><p>下面只对其中我个人习惯的方法做示例</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token preprocessor property"># .net cli</span>
dotnet nuget push <span class="token operator">-</span><span class="token class-name">s</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">9002</span><span class="token operator">/</span>v3<span class="token operator">/</span>index<span class="token punctuation">.</span>json UserLib<span class="token punctuation">.</span><span class="token number">1.0</span><span class="token number">.1</span><span class="token punctuation">.</span>nupkg  <span class="token operator">--</span>api<span class="token operator">-</span>key  63edf12c<span class="token operator">-</span>b70c<span class="token operator">-</span>45c7<span class="token operator">-</span>b3ed<span class="token operator">-</span>f53c9f791e26
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用cmd</p><p><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog202212122230804.png" alt="img" loading="lazy"></p><p>注：</p><p>1.包版本要写对</p><p>2.命令需要在包的目录下执行</p><p>3.需要填写baget.env文件里面的api-key</p><p>打开网页端查看</p><p><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog202212122230196.png" alt="img" loading="lazy"></p><h2 id="_3-3-引用包" tabindex="-1"><a class="header-anchor" href="#_3-3-引用包" aria-hidden="true">#</a> 3.3 引用包</h2><p>在我们想引用包的项目里面打开包管理器</p><p>添加程序包源</p><p><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog202212122230817.png" alt="img" loading="lazy"></p><p>然后搜索我们的nuget包</p><p><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog202212122229110.png" alt="img" loading="lazy"></p><p>安装后就可以使用了</p><h1 id="_4-参考文档" tabindex="-1"><a class="header-anchor" href="#_4-参考文档" aria-hidden="true">#</a> 4. 参考文档</h1>`,23),m={href:"https://mp.weixin.qq.com/s/xF5K2U3OhF7I9moGMeOibw",target:"_blank",rel:"noopener noreferrer"};function v(_,f){const n=l("ExternalLinkIcon");return o(),r("div",null,[i,d,a("p",null,[s("Github："),a("a",h,[s("https://github.com/loic-sharma/BaGet"),e(n)])]),a("p",null,[s("官网："),a("a",u,[s("https://loic-sharma.github.io/BaGet/"),e(n)])]),g,a("p",null,[s("界面和 "),a("a",k,[s("https://www.nuget.org/"),e(n)]),s(" 很相似。下面我们就开始随便创建一个类库然后打包推送")]),b,a("p",null,[s("轻量NuGet服务—GaGet："),a("a",m,[s("https://mp.weixin.qq.com/s/xF5K2U3OhF7I9moGMeOibw"),e(n)])])])}const x=p(c,[["render",v],["__file","baget.html.vue"]]);export{x as default};
