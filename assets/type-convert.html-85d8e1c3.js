const e=JSON.parse('{"key":"v-9a2037ec","path":"/csharp/type-convert.html","title":"类型转换","lang":"zh-CN","frontmatter":{"title":"类型转换","date":"2021-02-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["csharp"],"tag":["类型转换","csharp"],"description":"对象引用可以： 隐式向上转换为基类的引用 显式向下转换为子类的引用 隐式转换 子类转换为父类，这个时候是隐式转换 public class Animal { public string Name { get; set; } public string Sex { get; set; } } public class Dog : Animal {} // 向上类型转换创建一个基类指向子类的引用 var dog = new Dog { Name = \\"二哈\\", Sex = \\"公\\" }; Animal animal = dog; // 转换之后，被引用对象本身不会被替换或者改变 Console.WriteLine(dog==animal); // True","head":[["meta",{"property":"og:url","content":"https://azrng.github.io/kbms/kbms/csharp/type-convert.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"类型转换"}],["meta",{"property":"og:description","content":"对象引用可以： 隐式向上转换为基类的引用 显式向下转换为子类的引用 隐式转换 子类转换为父类，这个时候是隐式转换 public class Animal { public string Name { get; set; } public string Sex { get; set; } } public class Dog : Animal {} // 向上类型转换创建一个基类指向子类的引用 var dog = new Dog { Name = \\"二哈\\", Sex = \\"公\\" }; Animal animal = dog; // 转换之后，被引用对象本身不会被替换或者改变 Console.WriteLine(dog==animal); // True"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-09T02:19:17.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"类型转换"}],["meta",{"property":"article:tag","content":"csharp"}],["meta",{"property":"article:published_time","content":"2021-02-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-09T02:19:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类型转换\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-02-22T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-09T02:19:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"隐式转换","slug":"隐式转换","link":"#隐式转换","children":[]},{"level":2,"title":"显示转换","slug":"显示转换","link":"#显示转换","children":[{"level":3,"title":"Parse/TryParse/Convert","slug":"parse-tryparse-convert","link":"#parse-tryparse-convert","children":[]}]},{"level":2,"title":"AS","slug":"as","link":"#as","children":[]},{"level":2,"title":"IS","slug":"is","link":"#is","children":[]}],"git":{"createdTime":1670219403000,"updatedTime":1670552357000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":2},{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":2.51,"words":752},"filePathRelative":"csharp/type-convert.md","localizedDate":"2021年2月22日","excerpt":"<p>对象引用可以：</p>\\n<ul>\\n<li>隐式向上转换为基类的引用</li>\\n<li>显式向下转换为子类的引用</li>\\n</ul>\\n<h2> 隐式转换</h2>\\n<p>子类转换为父类，这个时候是隐式转换</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>public class Animal\\n{\\n    public string Name { get; set; }\\n    public string Sex { get; set; }\\n}\\npublic class Dog : Animal\\n{}\\n\\n// 向上类型转换创建一个基类指向子类的引用\\nvar dog = new Dog { Name = \\"二哈\\", Sex = \\"公\\" };\\nAnimal animal = dog;\\n// 转换之后，被引用对象本身不会被替换或者改变\\nConsole.WriteLine(dog==animal); // True\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
