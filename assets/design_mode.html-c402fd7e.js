const e=JSON.parse('{"key":"v-78450748","path":"/interview/design_mode.html","title":"设计模式面试题","lang":"zh-CN","frontmatter":{"title":"设计模式面试题","date":"2023-03-24T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"order":2,"category":["面试"],"tag":["面试题"],"description":"1、那些地方用到了单例模式 答： 网站的计数器，一般也是采用单例模式实现，否则难以同步。 应用程序的日志应用，一般都是单例模式实现，只有一个实例去操作才好，否则内容不好追加显示。 多线程的线程池的设计一般也是采用单例模式，因为线程池要方便对池中的线程进行控制 Windows的（任务管理器）就是很典型的单例模式，他不能打开俩个 windows的（回收站）也是典型的单例应用。在整个系统运行过程中，回收站只维护一个实例。 2、举一个用 .Net5中实现的装饰模式(decorator design pattern)？它是作用于对象层次还是类 层次？ 答：装饰模式增加强了单个对象的能力。.Net5 IO 到处都使用了装饰模式，典型例子就是 Buffered 系列类如 BufferedStream 它们增强了 Stream 对象， 以实现提升性能的 Buffer 层次的读取和写入。","head":[["meta",{"property":"og:url","content":"https://kbms.vercel.app/interview/design_mode.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"设计模式面试题"}],["meta",{"property":"og:description","content":"1、那些地方用到了单例模式 答： 网站的计数器，一般也是采用单例模式实现，否则难以同步。 应用程序的日志应用，一般都是单例模式实现，只有一个实例去操作才好，否则内容不好追加显示。 多线程的线程池的设计一般也是采用单例模式，因为线程池要方便对池中的线程进行控制 Windows的（任务管理器）就是很典型的单例模式，他不能打开俩个 windows的（回收站）也是典型的单例应用。在整个系统运行过程中，回收站只维护一个实例。 2、举一个用 .Net5中实现的装饰模式(decorator design pattern)？它是作用于对象层次还是类 层次？ 答：装饰模式增加强了单个对象的能力。.Net5 IO 到处都使用了装饰模式，典型例子就是 Buffered 系列类如 BufferedStream 它们增强了 Stream 对象， 以实现提升性能的 Buffer 层次的读取和写入。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-30T11:02:46.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"面试题"}],["meta",{"property":"article:published_time","content":"2023-03-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-30T11:02:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式面试题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-30T11:02:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1688122966000,"updatedTime":1688122966000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":4.43,"words":1329},"filePathRelative":"interview/design_mode.md","localizedDate":"2023年3月24日","excerpt":"<p><strong>1、那些地方用到了单例模式</strong></p>\\n<p>答：</p>\\n<ol>\\n<li>网站的计数器，一般也是采用单例模式实现，否则难以同步。</li>\\n<li>应用程序的日志应用，一般都是单例模式实现，只有一个实例去操作才好，否则内容不好追加显示。</li>\\n<li>多线程的线程池的设计一般也是采用单例模式，因为线程池要方便对池中的线程进行控制</li>\\n<li>Windows的（任务管理器）就是很典型的单例模式，他不能打开俩个</li>\\n<li>windows的（回收站）也是典型的单例应用。在整个系统运行过程中，回收站只维护一个实例。</li>\\n</ol>\\n<p><strong>2、举一个用 .Net5中实现的装饰模式(decorator design pattern)？它是作用于对象层次还是类</strong> <strong>层次？</strong> 答：装饰模式增加强了单个对象的能力。.Net5 IO 到处都使用了装饰模式，典型例子就是 Buffered 系列类如 BufferedStream 它们增强了 Stream 对象， 以实现提升性能的 Buffer 层次的读取和写入。</p>","autoDesc":true}');export{e as data};
