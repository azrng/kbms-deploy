const e=JSON.parse('{"key":"v-b3e43ac0","path":"/dotnetcore/openapi/swaggerbase.html","title":"swagger-基础使用","lang":"zh-CN","frontmatter":{"title":"swagger-基础使用","lang":"zh-CN","date":"2021-08-25T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"category":["dotNet"],"tag":["openapi"],"description":"介绍 Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。日常可以用于后端开发人员测试接口或者前后端联调使用。从.net5开始，swagger已经集成到vs2019编译器中，可以通过勾对选项“启用OpenAPI支持”显示基本的swagger配置。 本文示例环境：vs2019、net5 1 基本使用 新建一个netcore api项目，为了测试效果，我多创建几个控制器 img","head":[["meta",{"property":"og:url","content":"https://azrng.github.io/kbms/kbms/dotnetcore/openapi/swaggerbase.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"swagger-基础使用"}],["meta",{"property":"og:description","content":"介绍 Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。日常可以用于后端开发人员测试接口或者前后端联调使用。从.net5开始，swagger已经集成到vs2019编译器中，可以通过勾对选项“启用OpenAPI支持”显示基本的swagger配置。 本文示例环境：vs2019、net5 1 基本使用 新建一个netcore api项目，为了测试效果，我多创建几个控制器 img"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-12-09T02:19:17.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"openapi"}],["meta",{"property":"article:published_time","content":"2021-08-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-09T02:19:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"swagger-基础使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-08-25T00:00:00.000Z\\",\\"dateModified\\":\\"2022-12-09T02:19:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":2,"title":"1.1 安装组件","slug":"_1-1-安装组件","link":"#_1-1-安装组件","children":[]},{"level":2,"title":"1.2 注册swagger服务","slug":"_1-2-注册swagger服务","link":"#_1-2-注册swagger服务","children":[]},{"level":2,"title":"1.3 使用Swagger","slug":"_1-3-使用swagger","link":"#_1-3-使用swagger","children":[]},{"level":2,"title":"1.4 启动","slug":"_1-4-启动","link":"#_1-4-启动","children":[]},{"level":2,"title":"1.5 不显示某些接口","slug":"_1-5-不显示某些接口","link":"#_1-5-不显示某些接口","children":[]}],"git":{"createdTime":1670219403000,"updatedTime":1670552357000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":2},{"name":"azrng","email":"itzhangyunpeng@163.com","commits":1}]},"readingTime":{"minutes":4.53,"words":1360},"filePathRelative":"dotnetcore/openapi/swaggerbase.md","localizedDate":"2021年8月25日","excerpt":"<h1> 介绍</h1>\\n<p>Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。日常可以用于后端开发人员测试接口或者前后端联调使用。从.net5开始，swagger已经集成到vs2019编译器中，可以通过勾对选项“启用OpenAPI支持”显示基本的swagger配置。</p>\\n<p>本文示例环境：vs2019、net5</p>\\n<h1> 1 基本使用</h1>\\n<p>新建一个netcore api项目，为了测试效果，我多创建几个控制器</p>\\n<figure><img src=\\"https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1620911118372-0d629e1a-bc7a-41ec-9cc2-ea375da45497.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>","autoDesc":true}');export{e as data};
