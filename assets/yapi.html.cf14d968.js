import{_ as n,W as d,X as s,Y as a,Z as e,$ as i,a0 as t,y as c}from"./framework.e8a0537a.js";const h={},o=a("h1",{id:"介绍",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),e(" 介绍")],-1),p=a("p",null,[e("YApi 是"),a("strong",null,"高效"),e("、"),a("strong",null,"易用"),e("、"),a("strong",null,"功能强大"),e("的 api 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API，YApi 还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。")],-1),l=a("p",null,"当下稍微正式一点的公司都会要求前后端联调要求编写接口文档，比如说要求word或者excel等了，这个时候你要说那么我们可以使用swagger，但是领导又会说swagger不能留档，并且显得不太正式，结果就强制要求使用word，奈何太浪费时间，通过yapi，它可以直接导出文件进行存档，并且接口内容也可以通过swagger定时同步。",-1),g={href:"https://github.com/YMFE/yapi",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/fjc0k/docker-YApi",target:"_blank",rel:"noopener noreferrer"},b=t(`<h1 id="安装yapi" tabindex="-1"><a class="header-anchor" href="#安装yapi" aria-hidden="true">#</a> 安装Yapi</h1><h2 id="自己搭建mongo" tabindex="-1"><a class="header-anchor" href="#自己搭建mongo" aria-hidden="true">#</a> 自己搭建mongo</h2><p>前提是需要安装mongdb用于存储数据，当前我已经安装了MongoDB，配置如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -p 27017:27017 --name mongo -e TZ=Asia/Shanghai  -d mongo

服务地址：192.168.1.12
端口：27017
数据库：yapi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为设置带密码的mongodb一直没成功，所以采用了无密码的</p><p>通过docker生成yapi服务</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -p 8009:3000 --name yapiweb -e YAPI_ADMIN_ACCOUNT=itzhangyunpeng@163.com -e YAPI_ADMIN_PASSWORD=123456 -e YAPI_CLOSE_REGISTER=true -e YAPI_DB_SERVERNAME=192.168.1.6 -e YAPI_DB_PORT=27017 -e YAPI_DB_DATABASE=yapi -e YAPI_MAIL_ENABLE=false -e YAPI_LDAP_LOGIN_ENABLE=false  -d jayfong/yapi:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用了大佬提供的镜像：jayfong/yapi</p><p>详细配置还得看GitHub文档介绍，注意数据库的地址信息</p><h2 id="开箱即用版本" tabindex="-1"><a class="header-anchor" href="#开箱即用版本" aria-hidden="true">#</a> 开箱即用版本</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 纯粹的
docker run --rm -p 8009:3000 -d  jayfong/yapi:play

# 带插件的
docker run --rm -p 8009:3000 -e YAPI_PLUGINS=&#39;[{&quot;name&quot;:&quot;interface-oauth2-token&quot;}]&#39; -d jayfong/yapi:play
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认的管理员账号：<code>admin@docker.yapi</code>，管理员密码：<code>adm1n</code>。</p><h1 id="基本使用yapi" tabindex="-1"><a class="header-anchor" href="#基本使用yapi" aria-hidden="true">#</a> 基本使用Yapi</h1><h2 id="登录" tabindex="-1"><a class="header-anchor" href="#登录" aria-hidden="true">#</a> 登录</h2>`,14),u={href:"http://localhost:8009/",target:"_blank",rel:"noopener noreferrer"},f=t('<p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1620135949798-6301cf62-0e49-4c51-b8d8-7c704d875eb1.png" alt="img" loading="lazy"></p><p>帐号密码就是上面配置的管理员密码：YAPI_ADMIN_ACCOUNT=itzhangyunpeng@163.com YAPI_ADMIN_PASSWORD=123456</p><h2 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理" aria-hidden="true">#</a> 用户管理</h2><h3 id="查看用户" tabindex="-1"><a class="header-anchor" href="#查看用户" aria-hidden="true">#</a> 查看用户</h3><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621095951874-191aeaaa-f8f6-4ab0-8658-f4604793bbb1.png" alt="img" loading="lazy"></p><h3 id="添加用户" tabindex="-1"><a class="header-anchor" href="#添加用户" aria-hidden="true">#</a> 添加用户</h3><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621095975910-82a168cd-f4ab-411b-89e4-7365a9684d92.png" alt="img" loading="lazy"></p><h2 id="个人项目" tabindex="-1"><a class="header-anchor" href="#个人项目" aria-hidden="true">#</a> 个人项目</h2><h3 id="创建" tabindex="-1"><a class="header-anchor" href="#创建" aria-hidden="true">#</a> 创建</h3><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621095563934-fb08ca06-b7c9-4bc9-b67d-654ab8133746.png" alt="img" loading="lazy"></p><h3 id="展示个人项目" tabindex="-1"><a class="header-anchor" href="#展示个人项目" aria-hidden="true">#</a> 展示个人项目</h3><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621096008677-afb175df-cd4f-4b73-9247-b285fad63f53.png" alt="img" loading="lazy"></p><p>该个人项目只能自己才看看到</p><h2 id="分组" tabindex="-1"><a class="header-anchor" href="#分组" aria-hidden="true">#</a> 分组</h2><h3 id="创建分组" tabindex="-1"><a class="header-anchor" href="#创建分组" aria-hidden="true">#</a> 创建分组</h3><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621096585525-8671e46e-f051-4a04-8eb7-93e109ef926d.png" alt="img" loading="lazy"></p><p>一个项目组一般为一个分组，然后其他的人都在该分组中编辑本分组的项目</p><h3 id="分组成员" tabindex="-1"><a class="header-anchor" href="#分组成员" aria-hidden="true">#</a> 分组成员</h3><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621096633945-1c143e6a-68a2-4a1e-8ed4-e114e501bf37.png" alt="img" loading="lazy"></p><p>管理本分组人员操作和简单操作权限。</p><h3 id="分组动态" tabindex="-1"><a class="header-anchor" href="#分组动态" aria-hidden="true">#</a> 分组动态</h3><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621096835031-db68bc4f-d350-42af-98f0-87f371d6e772.png" alt="img" loading="lazy"></p><p>展示分组内每个用户的操作记录</p><h2 id="添加接口" tabindex="-1"><a class="header-anchor" href="#添加接口" aria-hidden="true">#</a> 添加接口</h2><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621095730126-3384e893-324e-4971-a6c6-dd561f9584c5.png" alt="img" loading="lazy"></p><h2 id="修改接口" tabindex="-1"><a class="header-anchor" href="#修改接口" aria-hidden="true">#</a> 修改接口</h2><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621095762304-608bc695-597f-480c-b9bd-629010c25824.png" alt="img" loading="lazy"></p><h1 id="搭配swagger" tabindex="-1"><a class="header-anchor" href="#搭配swagger" aria-hidden="true">#</a> 搭配swagger</h1><p>关于swagger基础配置可以查看目录</p><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h2>',30),_={href:"http://azrng.cn1.utools.club/swagger/index.html",target:"_blank",rel:"noopener noreferrer"},A=t('<p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621097722708-69bd76cf-366f-4fe2-9809-a366c16ca8ce-163198041614713.png" alt="img" loading="lazy"></p><p>获取swagger的json地址</p><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1620136320377-d206d608-7a02-422c-83eb-1f93e69b44d7.png" alt="img" loading="lazy"></p><h2 id="yapi配置" tabindex="-1"><a class="header-anchor" href="#yapi配置" aria-hidden="true">#</a> Yapi配置</h2><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621097450042-8abb9d94-4479-4d21-9e34-c12010694bea.png" alt="img" loading="lazy"></p><p>本次使用的是完全覆盖，通过cron表达式配置自动同步时间。</p><h2 id="查看同步数据" tabindex="-1"><a class="header-anchor" href="#查看同步数据" aria-hidden="true">#</a> 查看同步数据</h2><p>然后我们查看接口列表，这个时候我们已经看到项目的接口已经都被同步过来了</p><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621097784255-3e29f9c4-893a-4aae-b1df-6f0ef4665cc4.png" alt="img" loading="lazy"></p><h2 id="数据管理" tabindex="-1"><a class="header-anchor" href="#数据管理" aria-hidden="true">#</a> 数据管理</h2><h3 id="数据导出导入" tabindex="-1"><a class="header-anchor" href="#数据导出导入" aria-hidden="true">#</a> 数据导出导入</h3><p>在数据管理我们可以导入数据，或者导出数据</p><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1620137115051-8c55ba52-01f8-4acc-a981-5ce8a416a00a.png" alt="img" loading="lazy"></p><p>对于我来说我常用的就是数据导出为html给留档使用。</p><h3 id="导出预览" tabindex="-1"><a class="header-anchor" href="#导出预览" aria-hidden="true">#</a> 导出预览</h3><p><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1621097898862-bced3729-6b4f-4f3e-bc50-4813761b4bbc.png" alt="img" loading="lazy"></p><p>更多配置还需要查看官方文档</p>',17);function x(y,v){const r=c("ExternalLinkIcon");return d(),s("div",null,[o,p,l,a("p",null,[e("GitHub："),a("a",g,[e("https://github.com/YMFE/yapi"),i(r)])]),a("p",null,[e("Docker部署："),a("a",m,[e("https://github.com/fjc0k/docker-YApi"),i(r)])]),b,a("p",null,[e("通过浏览器访问地址："),a("a",u,[e("http://localhost:8009/"),i(r)])]),f,a("p",null,[e("使用前文的.net程序，并显示swagger信息，swagger地址为："),a("a",_,[e("http://azrng.cn1.utools.club/swagger/index.html"),i(r)])]),A])}const w=n(h,[["render",x],["__file","yapi.html.vue"]]);export{w as default};
