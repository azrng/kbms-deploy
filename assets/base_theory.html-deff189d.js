const t=JSON.parse('{"key":"v-611f9471","path":"/soft/code-version/base_theory.html","title":"Git基本原理","lang":"zh-CN","frontmatter":{"title":"Git基本原理","lang":"zh-CN","date":"2021-02-22T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":false,"category":["soft"],"tag":["git","版本管理"],"description":"Git基本原理 简单地说，Git 究竟是怎样的一个系统呢？请注意接下来的内容非常重要，若你理解了 Git 的思想和基本工作原理，用起来就会知其所以然，游刃有余。在学习 Git 时，请尽量理清你对其它版本管理系统已有的认识，如 CVS、Subversion 或 Perforce， 这样能帮助你使用工具时避免发生混淆。尽管 Git 用起来与其它的版本控制系统非常相似， 但它在对信息的存储和认知方式上却有很大差异，理解这些差异将有助于避免使用中的困惑。 Git 初始化代码仓库 执行完成了 git init 命令，究竟做了什么呢？ 执行完成如下命令之后，我们可以得到下图所示的内容，右侧的就是 Git 为我们创建的代码仓库，其中包含了用于版本管理所需要的内容。","head":[["meta",{"property":"og:url","content":"https://azrng.github.io/kbms/kbms/soft/code-version/base_theory.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Git基本原理"}],["meta",{"property":"og:description","content":"Git基本原理 简单地说，Git 究竟是怎样的一个系统呢？请注意接下来的内容非常重要，若你理解了 Git 的思想和基本工作原理，用起来就会知其所以然，游刃有余。在学习 Git 时，请尽量理清你对其它版本管理系统已有的认识，如 CVS、Subversion 或 Perforce， 这样能帮助你使用工具时避免发生混淆。尽管 Git 用起来与其它的版本控制系统非常相似， 但它在对信息的存储和认知方式上却有很大差异，理解这些差异将有助于避免使用中的困惑。 Git 初始化代码仓库 执行完成了 git init 命令，究竟做了什么呢？ 执行完成如下命令之后，我们可以得到下图所示的内容，右侧的就是 Git 为我们创建的代码仓库，其中包含了用于版本管理所需要的内容。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-30T14:55:54.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:tag","content":"版本管理"}],["meta",{"property":"article:published_time","content":"2021-02-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-30T14:55:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git基本原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-02-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-30T14:55:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[{"level":3,"title":"Git 初始化代码仓库","slug":"git-初始化代码仓库","link":"#git-初始化代码仓库","children":[]},{"level":3,"title":"Add 之后发生了什么","slug":"add-之后发生了什么","link":"#add-之后发生了什么","children":[]},{"level":3,"title":"理解 blob 对象和 SHA1","slug":"理解-blob-对象和-sha1","link":"#理解-blob-对象和-sha1","children":[]},{"level":3,"title":"聊聊工作区和暂存区","slug":"聊聊工作区和暂存区","link":"#聊聊工作区和暂存区","children":[]},{"level":3,"title":"理解 commit 提交原理","slug":"理解-commit-提交原理","link":"#理解-commit-提交原理","children":[]},{"level":3,"title":"加深理解 commit 提交","slug":"加深理解-commit-提交","link":"#加深理解-commit-提交","children":[]},{"level":3,"title":"文件的生命周期状态","slug":"文件的生命周期状态","link":"#文件的生命周期状态","children":[]},{"level":3,"title":"Branch 和 HEAD 的意义","slug":"branch-和-head-的意义","link":"#branch-和-head-的意义","children":[]},{"level":3,"title":"分支操作的背后逻辑","slug":"分支操作的背后逻辑","link":"#分支操作的背后逻辑","children":[]},{"level":3,"title":"checkout 和 commit 操作","slug":"checkout-和-commit-操作","link":"#checkout-和-commit-操作","children":[]},{"level":3,"title":"聊聊 diff 的执行逻辑","slug":"聊聊-diff-的执行逻辑","link":"#聊聊-diff-的执行逻辑","children":[]},{"level":3,"title":"Git 如何添加远程仓库","slug":"git-如何添加远程仓库","link":"#git-如何添加远程仓库","children":[]},{"level":3,"title":"远程仓库存储代码","slug":"远程仓库存储代码","link":"#远程仓库存储代码","children":[]},{"level":3,"title":"文档地址","slug":"文档地址","link":"#文档地址","children":[]}],"git":{"createdTime":1670219403000,"updatedTime":1688136954000,"contributors":[{"name":"azrng","email":"itzhangyunpeng@163.com","commits":3},{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":3}]},"readingTime":{"minutes":20,"words":6000},"filePathRelative":"soft/code-version/base_theory.md","localizedDate":"2021年2月22日","excerpt":"<h1> Git基本原理</h1>\\n<p>简单地说，Git 究竟是怎样的一个系统呢？请注意接下来的内容非常重要，若你理解了 Git 的思想和基本工作原理，用起来就会知其所以然，游刃有余。在学习 Git 时，请尽量理清你对其它版本管理系统已有的认识，如 CVS、Subversion 或 Perforce， 这样能帮助你使用工具时避免发生混淆。尽管 Git 用起来与其它的版本控制系统非常相似， 但它在对信息的存储和认知方式上却有很大差异，理解这些差异将有助于避免使用中的困惑。</p>\\n<h3> Git 初始化代码仓库</h3>\\n<p>执行完成了 git init 命令，究竟做了什么呢？</p>\\n<p>执行完成如下命令之后，我们可以得到下图所示的内容，右侧的就是 Git 为我们创建的代码仓库，其中包含了用于版本管理所需要的内容。</p>","autoDesc":true}');export{t as data};
