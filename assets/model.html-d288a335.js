import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c as o,a as n,b as s,d as c,e as l}from"./app-77ed49ef.js";const i={},u=l(`<h1 id="grpc四种模式" tabindex="-1"><a class="header-anchor" href="#grpc四种模式" aria-hidden="true">#</a> gRPC四种模式</h1><h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h1><p>简单 RPC（Unary RPC）、服务端流式 RPC （Server streaming RPC）、客户端流式 RPC （Client streaming RPC）、双向流式 RPC（Bi-directional streaming RPC）。它们主要有以下特点：</p><table><thead><tr><th><strong>服务类型</strong></th><th><strong>特点</strong></th></tr></thead><tbody><tr><td>简单 (一元)RPC</td><td>一般的rpc调用，传入一个请求对象，返回一个返回对象</td></tr><tr><td>服务端流式 RPC</td><td>传入一个请求对象，服务端可以返回多个结果对象</td></tr><tr><td>客户端流式 RPC</td><td>客户端传入多个请求对象，服务端返回一个结果对象</td></tr><tr><td>双向流式 RPC</td><td>结合客户端流式RPC和服务端流式RPC，可以传入多个请求对象，返回多个结果对象</td></tr></tbody></table><h1 id="基本配置" tabindex="-1"><a class="header-anchor" href="#基本配置" aria-hidden="true">#</a> 基本配置</h1><h2 id="组件包介绍" tabindex="-1"><a class="header-anchor" href="#组件包介绍" aria-hidden="true">#</a> 组件包介绍</h2><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>-- 服务端
Grpc.AspNetCore 一个用于在ASP.NET Core承载gRPC服务的框架，将 gRPC和ASP.NET Core 功能集成在一起，如：日志、依赖注入、身份认证和授权。

-- 客户端包
Google.Protobuf 包含适用于 C# 的 Protobuf 消息。
Grpc.Tools 包含适用于 Protobuf 文件的 C# 工具支持，将*.proto 文件生成 C# 资产。 运行时不需要工具包，因此依赖项标记为 PrivateAssets=&quot;All&quot;。
Grpc.Net.Client，其中包含 .NET Core 客户端。
Grpc.Net.ClientFactory 与gRPC客户端集成的HttpClientFactory，允许对gRPC客户端进行集中配置，并使用DI注入到应用程序中
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个服务可以是服务端也可以是客户端</p><h2 id="服务端基本配置" tabindex="-1"><a class="header-anchor" href="#服务端基本配置" aria-hidden="true">#</a> 服务端基本配置</h2><p>右键新建proto文件</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span> <span class="token comment">//使用的协议</span>

<span class="token keyword">option</span> csharp_namespace <span class="token operator">=</span> <span class="token string">&quot;UserService.Proto&quot;</span><span class="token punctuation">;</span> <span class="token comment">//命名空间</span>

<span class="token keyword">service</span> <span class="token class-name">UserInfoService</span><span class="token punctuation">{</span> <span class="token comment">//服务名</span>
    <span class="token comment">//登录 一元调用</span>
	<span class="token keyword">rpc</span> <span class="token function">Login</span><span class="token punctuation">(</span><span class="token class-name">LoginRequest</span><span class="token punctuation">)</span> <span class="token keyword">returns</span><span class="token punctuation">(</span><span class="token class-name">LoginResponse</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//登录请求类</span>
<span class="token keyword">message</span> <span class="token class-name">LoginRequest</span><span class="token punctuation">{</span>
  <span class="token builtin">string</span> account<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//帐号</span>
  <span class="token builtin">string</span> password<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//密码</span>
<span class="token punctuation">}</span>

<span class="token comment">//登录返回类</span>
<span class="token keyword">message</span> <span class="token class-name">LoginResponse</span><span class="token punctuation">{</span>
  <span class="token builtin">string</span> name<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//用户名</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Grpc.AspNetCore&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.38.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ConfigureServices中配置</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 默认配置</span>
services<span class="token punctuation">.</span><span class="token function">AddGrpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

或者

<span class="token comment">//自定义配置</span>
services<span class="token punctuation">.</span><span class="token function">AddGrpc</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>EnableDetailedErrors <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//启用想起错误</span>
    options<span class="token punctuation">.</span>MaxReceiveMessageSize <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span><span class="token comment">//最大接受 2m</span>
    options<span class="token punctuation">.</span>MaxSendMessageSize <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span><span class="token comment">//最大请求 5m</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Configure中配置</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">UseEndpoints</span><span class="token punctuation">(</span>endpoints <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    endpoints<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">MapGrpcService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PayService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 配置指定实现</span>
    endpoints<span class="token punctuation">.</span><span class="token function">MapControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="客户端基本配置" tabindex="-1"><a class="header-anchor" href="#客户端基本配置" aria-hidden="true">#</a> 客户端基本配置</h2><p>引用组件</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Google.Protobuf&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.19.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Grpc.Net.ClientFactory&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.40.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Grpc.Tools&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.42.0&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>PrivateAssets<span class="token operator">&gt;</span>all<span class="token operator">&lt;</span><span class="token operator">/</span>PrivateAssets<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>IncludeAssets<span class="token operator">&gt;</span>runtime<span class="token punctuation">;</span> build<span class="token punctuation">;</span> native<span class="token punctuation">;</span> contentfiles<span class="token punctuation">;</span> analyzers<span class="token punctuation">;</span> buildtransitive<span class="token operator">&lt;</span><span class="token operator">/</span>IncludeAssets<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>PackageReference<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Grpc.Net.Client&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.40.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ConfigureServices中配置</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 默认配置</span>
services<span class="token punctuation">.</span><span class="token function">AddGrpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//自定义配置</span>
services<span class="token punctuation">.</span><span class="token function">AddGrpc</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>EnableDetailedErrors <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//启用想起错误</span>
    options<span class="token punctuation">.</span>MaxReceiveMessageSize <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span><span class="token comment">//最大接受 2m</span>
    options<span class="token punctuation">.</span>MaxSendMessageSize <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span><span class="token comment">//最大请求 5m</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 要调用的grpc服务</span>
services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddGrpcClient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>RPC<span class="token punctuation">.</span>Protos<span class="token punctuation">.</span>Two<span class="token punctuation">.</span>Order<span class="token punctuation">.</span>OrderClient<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>o <span class="token operator">=&gt;</span> o<span class="token punctuation">.</span>Address <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span><span class="token string">&quot;https://localhost:6001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h1><p>以下的使用场景仅供参考，因为工作中我也只用过简单rpc模式。</p><h2 id="简单rpc" tabindex="-1"><a class="header-anchor" href="#简单rpc" aria-hidden="true">#</a> 简单RPC</h2><p>实现需求：订单服务根据用户ID获取用户的详细信息数据。</p><p>右键添加proto文件并命名为UserInfoService.proto</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>syntax <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span> <span class="token comment">//使用的协议</span>

import <span class="token string">&quot;google/protobuf/timestamp.proto&quot;</span><span class="token punctuation">;</span>
import <span class="token string">&quot;google/protobuf/wrappers.proto&quot;</span><span class="token punctuation">;</span>

<span class="token class-name">option</span> csharp_namespace <span class="token operator">=</span> <span class="token string">&quot;UserService.Proto&quot;</span><span class="token punctuation">;</span> <span class="token comment">//命名空间</span>

<span class="token return-type class-name">service</span> UserInfoService<span class="token punctuation">{</span> <span class="token comment">//服务名</span>
    <span class="token comment">//获取用户信息 一元调用</span>
	<span class="token return-type class-name">rpc</span> <span class="token function">GetUserInfo</span><span class="token punctuation">(</span>GetUserInfoRequest<span class="token punctuation">)</span> <span class="token function">returns</span><span class="token punctuation">(</span>GetUserInfoResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//获取用户信息请求类</span>
<span class="token return-type class-name">message</span> GetUserInfoRequest<span class="token punctuation">{</span>
  <span class="token class-name"><span class="token keyword">string</span></span> user_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//用户ID</span>
<span class="token punctuation">}</span>

<span class="token comment">//获取用户信息返回类</span>
<span class="token return-type class-name">message</span> GetUserInfoResponse<span class="token punctuation">{</span>
  <span class="token class-name"><span class="token keyword">string</span></span> name<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//用户名</span>
  <span class="token class-name"><span class="token keyword">string</span></span> nick_name<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//昵称</span>
  <span class="token class-name">google<span class="token punctuation">.</span>protobuf<span class="token punctuation">.</span>Int32Value</span> sex<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//可为空性别 1男 2女 空是未知</span>
  <span class="token class-name">google<span class="token punctuation">.</span>protobuf<span class="token punctuation">.</span>Timestamp</span> birthday<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">//生日</span>
  <span class="token class-name"><span class="token keyword">bool</span></span> isenabled<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token comment">//是否启用</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="服务端" tabindex="-1"><a class="header-anchor" href="#服务端" aria-hidden="true">#</a> 服务端</h3><p>安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Grpc.AspNetCore&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.40.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改csproj文件去引用proto文件并且标识为服务端GrpcServices=&quot;Server&quot;</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">Protobuf</span> Include<span class="token operator">=</span><span class="token string">&quot;Proto\\UserInfoService.proto&quot;</span> GrpcServices<span class="token operator">=</span><span class="token string">&quot;Server&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>

也可以将proto都存放在同一个固定位置让不同的程序引用，使用

<span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">Protobuf</span> Include<span class="token operator">=</span><span class="token string">&quot;..\\ShareProto\\ServiceTwo\\*.proto&quot;</span> GrpcServices<span class="token operator">=</span><span class="token string">&quot;Server&quot;</span> Link<span class="token operator">=</span><span class="token string">&quot;Protos\\Server\\%(RecursiveDir)%(Filename)%(Extension)&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>      
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建UserInfoGrpcService继承自我们的UserInfoService grpc服务，并且重写GetUserInfo方法</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoGrpcService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">UserInfoServiceBase</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">///根据用户id获取用户信息(简单rpc)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>GetUserInfoResponse<span class="token punctuation">&gt;</span></span> <span class="token function">GetUserInfo</span><span class="token punctuation">(</span><span class="token class-name">GetUserInfoRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServerCallContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> userId <span class="token operator">=</span> request<span class="token punctuation">.</span>UserId<span class="token punctuation">;</span>

        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;接收到的用户Id是&quot;</span> <span class="token operator">+</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//根据用户ID去查询数据库返回结果</span>

        <span class="token keyword">return</span> Task<span class="token punctuation">.</span><span class="token function">FromResult</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetUserInfoResponse</span>
        <span class="token punctuation">{</span>
            Name <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
            NickName <span class="token operator">=</span> <span class="token string">&quot;好好学习天天向上&quot;</span><span class="token punctuation">,</span>
            Sex <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
            Birthday <span class="token operator">=</span> Timestamp<span class="token punctuation">.</span><span class="token function">FromDateTime</span><span class="token punctuation">(</span>DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">)</span><span class="token punctuation">,</span>
            Isenabled <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在startop注册grpc服务</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//启用grpc</span>
services<span class="token punctuation">.</span><span class="token function">AddGrpc</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>EnableDetailedErrors <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//启用内部错误输出详情</span>
    options<span class="token punctuation">.</span>MaxReceiveMessageSize <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span><span class="token comment">//最大接受 2m</span>
    options<span class="token punctuation">.</span>MaxSendMessageSize <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span><span class="token comment">//最大请求 5m</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置指定grpc并且暴露出grpc服务</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>app<span class="token punctuation">.</span><span class="token function">UseEndpoints</span><span class="token punctuation">(</span>endpoints <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    endpoints<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">MapGrpcService</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UserInfoGrpcService<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    endpoints<span class="token punctuation">.</span><span class="token function">MapControllers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>项目目录下可以看到proto文件生成的类</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/202112042342814.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h3><p>安装nuget包</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Google.Protobuf&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.19.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Grpc.Net.ClientFactory&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.40.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Grpc.Tools&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.42.0&quot;</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>PrivateAssets<span class="token operator">&gt;</span>all<span class="token operator">&lt;</span><span class="token operator">/</span>PrivateAssets<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>IncludeAssets<span class="token operator">&gt;</span>runtime<span class="token punctuation">;</span> build<span class="token punctuation">;</span> native<span class="token punctuation">;</span> contentfiles<span class="token punctuation">;</span> analyzers<span class="token punctuation">;</span> buildtransitive<span class="token operator">&lt;</span><span class="token operator">/</span>IncludeAssets<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>PackageReference<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Grpc.Net.Client&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;2.40.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>引用上面的grpc文件，修改csproj文件并标识为客户端GrpcServices=&quot;Client&quot;</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//本来暂且将proto文件拷贝到客户端服务，然后设置</span>
<span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">Protobuf</span> Include<span class="token operator">=</span><span class="token string">&quot;Proto\\UserInfoService.proto&quot;</span> GrpcServices<span class="token operator">=</span><span class="token string">&quot;Client&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>


<span class="token comment">//或者将proto文件放到一个共享目录，然后采用</span>
<span class="token operator">&lt;</span>ItemGroup<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token class-name">Protobuf</span> Include<span class="token operator">=</span><span class="token string">&quot;..\\ShareProto\\ServiceTwo\\*.proto&quot;</span> GrpcServices<span class="token operator">=</span><span class="token string">&quot;Client&quot;</span> Link<span class="token operator">=</span><span class="token string">&quot;Protos\\Client\\%(RecursiveDir)%(Filename)%(Extension)&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ConfigureServices添加该grpc服务，服务端地址为localhost:5001</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddGrpcClient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>UserInfoService<span class="token punctuation">.</span>UserInfoServiceClient<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>o <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    o<span class="token punctuation">.</span>Address <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span><span class="token string">&quot;https://localhost:5001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//协议必须是https</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个UserInfoServiceClient文件就是我们刚才引入的proto文件生成的代码</p><p>调用测试</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ApiController</span></span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;[controller]&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HomeController</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ControllerBase</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">UserInfoService<span class="token punctuation">.</span>UserInfoServiceClient</span> _userInfoServiceClient<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">HomeController</span><span class="token punctuation">(</span><span class="token class-name">UserInfoService<span class="token punctuation">.</span>UserInfoServiceClient</span> userInfoServiceClient<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        _userInfoServiceClient <span class="token operator">=</span> userInfoServiceClient<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpGet</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>GetUserInfoResponse<span class="token punctuation">&gt;</span></span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> userId<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">await</span> _userInfoServiceClient<span class="token punctuation">.</span><span class="token function">GetUserInfoAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetUserInfoRequest</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> userId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/202112042342801.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>下面的部分代码如上，因此省略。</p><h2 id="服务端流式rpc" tabindex="-1"><a class="header-anchor" href="#服务端流式rpc" aria-hidden="true">#</a> 服务端流式RPC</h2><p>修改之前的UserInfoService.proto文件，增加一个方法参数是一个请求对象，服务器将多个结果流式传回调用方。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>syntax <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span> <span class="token comment">//使用的协议</span>

import <span class="token string">&quot;google/protobuf/timestamp.proto&quot;</span><span class="token punctuation">;</span>
import <span class="token string">&quot;google/protobuf/wrappers.proto&quot;</span><span class="token punctuation">;</span>

<span class="token class-name">option</span> csharp_namespace <span class="token operator">=</span> <span class="token string">&quot;UserService.Proto&quot;</span><span class="token punctuation">;</span> <span class="token comment">//命名空间</span>

<span class="token return-type class-name">service</span> UserInfoService<span class="token punctuation">{</span> <span class="token comment">//服务名</span>
    
	<span class="token comment">//获取所有信息   服务器流式处理：从客户端发送请求消息开始 </span>
	<span class="token comment">//ResponseStream.MoveNext() 读取从服务流式处理的消息。 ResponseStream.MoveNext() 返回 false 时，服务器流式处理调用已完成。</span>
	<span class="token return-type class-name">rpc</span> <span class="token function">GetAll</span><span class="token punctuation">(</span>GetAllRequest<span class="token punctuation">)</span> <span class="token function">returns</span><span class="token punctuation">(</span><span class="token class-name">stream</span> CustomerResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name">message</span> GetAllRequest <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token return-type class-name">message</span> CustomerResponse<span class="token punctuation">{</span>
	<span class="token class-name">CustomerInfo</span> customer<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//用户信息</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name">message</span> CustomerInfo<span class="token punctuation">{</span>
  <span class="token class-name"><span class="token keyword">string</span></span> account<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//帐号</span>
  <span class="token class-name"><span class="token keyword">string</span></span> name<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//姓名</span>
  <span class="token class-name">int32</span> sex<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">//性别</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="服务端-1" tabindex="-1"><a class="header-anchor" href="#服务端-1" aria-hidden="true">#</a> 服务端</h3><p>继承自UserInfoServiceBase并重写GetAll方法</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoGrpcService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">UserInfoServiceBase</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 获取所有用户信息（服务端流式rpc）</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>request<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responseStream<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">GetAll</span><span class="token punctuation">(</span><span class="token class-name">GetAllRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">IServerStreamWriter<span class="token punctuation">&lt;</span>CustomerResponse<span class="token punctuation">&gt;</span></span> responseStream<span class="token punctuation">,</span> <span class="token class-name">ServerCallContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>context<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">.</span>IsCancellationRequested<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">await</span> responseStream<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CustomerResponse</span>
                <span class="token punctuation">{</span>
                    Customer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CustomerInfo</span>
                    <span class="token punctuation">{</span>
                        Account <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">,</span>
                        Name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">,</span>
                        Sex <span class="token operator">=</span> <span class="token number">1</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token function">Delay</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端-1" tabindex="-1"><a class="header-anchor" href="#客户端-1" aria-hidden="true">#</a> 客户端</h3><p>修改之前的订单服务引用的proto文件，新建一个接口用于获取grpc服务</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 获取所有的用户信息(服务端流式处理)</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span>HttpGet<span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>ActionResult<span class="token punctuation">&lt;</span>IEnumerable<span class="token punctuation">&lt;</span>CustomerResponse<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetAllUserInfoAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>CustomerResponse<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> cancel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CancellationToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetAllRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> response <span class="token operator">=</span> _userInfoServiceClient<span class="token punctuation">.</span><span class="token function">GetAll</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">await</span> response<span class="token punctuation">.</span>ResponseStream<span class="token punctuation">.</span><span class="token function">MoveNext</span><span class="token punctuation">(</span>cancel<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>ResponseStream<span class="token punctuation">.</span>Current<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">Ok</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回结果</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/202112042342395.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h1 id="客户端流式rpc" tabindex="-1"><a class="header-anchor" href="#客户端流式rpc" aria-hidden="true">#</a> 客户端流式RPC</h1><p>客户端将连续的数据流发送到服务端，服务端返回一个响应信息，使用场景：根据id返回用户列表信息，分段上传图片</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>syntax <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span> <span class="token comment">//使用的协议</span>

import <span class="token string">&quot;google/protobuf/timestamp.proto&quot;</span><span class="token punctuation">;</span>
import <span class="token string">&quot;google/protobuf/wrappers.proto&quot;</span><span class="token punctuation">;</span>

<span class="token class-name">option</span> csharp_namespace <span class="token operator">=</span> <span class="token string">&quot;UserService.Proto&quot;</span><span class="token punctuation">;</span> <span class="token comment">//命名空间</span>

<span class="token return-type class-name">service</span> UserInfoService<span class="token punctuation">{</span> <span class="token comment">//服务名</span>

	<span class="token comment">//批量获取用户信息  客户端流式处理：多个请求对象，服务器返回一个结果</span>
	<span class="token return-type class-name">rpc</span> <span class="token function">GetUserListByUserId</span><span class="token punctuation">(</span><span class="token class-name">stream</span> GetUserListRequest<span class="token punctuation">)</span> returns <span class="token punctuation">(</span>GetUserListResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name">message</span> CustomerInfo<span class="token punctuation">{</span>
  <span class="token class-name"><span class="token keyword">string</span></span> user_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//用户id</span>
  <span class="token class-name"><span class="token keyword">string</span></span> account<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//帐号</span>
  <span class="token class-name"><span class="token keyword">string</span></span> name<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//姓名</span>
  <span class="token class-name">int32</span> sex<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">//性别</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name">message</span> GetUserListRequest
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span>  user_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name">message</span> GetUserListResponse
<span class="token punctuation">{</span>
	repeated <span class="token class-name">CustomerInfo</span>  user_list <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//用户列表</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="服务端-2" tabindex="-1"><a class="header-anchor" href="#服务端-2" aria-hidden="true">#</a> 服务端</h3><p>为了操作数据，这点新建了一个userInfo的类</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfo</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">///用户ID</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> UserId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 帐号</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Acount <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 姓名</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 性别</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Sex <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>继承自UserInfoServiceBase并重写GetUserListByUserId方法</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoGrpcService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">UserInfoServiceBase</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 根据用户id获取用户列表</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>requestStream<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>GetUserListResponse<span class="token punctuation">&gt;</span></span> <span class="token function">GetUserListByUserId</span><span class="token punctuation">(</span>
        <span class="token class-name">IAsyncStreamReader<span class="token punctuation">&lt;</span>GetUserListRequest<span class="token punctuation">&gt;</span></span> requestStream<span class="token punctuation">,</span> <span class="token class-name">ServerCallContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//模拟数据库查询</span>
        <span class="token class-name"><span class="token keyword">var</span></span> userList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>UserInfo<span class="token punctuation">&gt;</span></span>
        <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> Acount <span class="token operator">=</span> <span class="token string">&quot;admin1&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> Sex <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">,</span> Acount <span class="token operator">=</span> <span class="token string">&quot;admin2&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> Sex <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> <span class="token string">&quot;33&quot;</span><span class="token punctuation">,</span> Acount <span class="token operator">=</span> <span class="token string">&quot;admin3&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span> Sex <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> <span class="token string">&quot;44&quot;</span><span class="token punctuation">,</span> Acount <span class="token operator">=</span> <span class="token string">&quot;admin4&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;赵六&quot;</span><span class="token punctuation">,</span> Sex <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        <span class="token comment">//获取请求的用户ID列表</span>
        <span class="token class-name"><span class="token keyword">var</span></span> userIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> cancel <span class="token operator">=</span> context<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">await</span> requestStream<span class="token punctuation">.</span><span class="token function">MoveNext</span><span class="token punctuation">(</span>cancel<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            userIds<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>requestStream<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>UserId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name"><span class="token keyword">var</span></span> resultList <span class="token operator">=</span> userList<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> userIds<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>UserId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//拼接返回列表</span>
        <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetUserListResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> resultList<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            result<span class="token punctuation">.</span>UserList<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CustomerInfo</span>
            <span class="token punctuation">{</span>
                UserId <span class="token operator">=</span> item<span class="token punctuation">.</span>UserId<span class="token punctuation">,</span>
                Account <span class="token operator">=</span> item<span class="token punctuation">.</span>Acount<span class="token punctuation">,</span>
                Name <span class="token operator">=</span> item<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>
                Sex <span class="token operator">=</span> item<span class="token punctuation">.</span>Sex
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端-2" tabindex="-1"><a class="header-anchor" href="#客户端-2" aria-hidden="true">#</a> 客户端</h3><p>修改之前的订单服务引用的proto文件，新建一个接口GetUserListByUserIdAsync用于获取grpc服务</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 根据用户id获取用户信息（客户端流式处理） </span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userIds<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span>HttpPost<span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>ActionResult<span class="token punctuation">&lt;</span>RepeatedField<span class="token punctuation">&lt;</span>CustomerInfo<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetUserListByUserIdAsync</span><span class="token punctuation">(</span>
    <span class="token class-name">IEnumerable<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> userIds<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> call <span class="token operator">=</span> _userInfoServiceClient<span class="token punctuation">.</span><span class="token function">GetUserListByUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> clientStream <span class="token operator">=</span> call<span class="token punctuation">.</span>RequestStream<span class="token punctuation">;</span>
    <span class="token comment">//循环给服务端发送流</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> userIds<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> clientStream<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetUserListRequest</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> item <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 发送完成之后，告诉服务端发送完成</span>
    <span class="token keyword">await</span> clientStream<span class="token punctuation">.</span><span class="token function">CompleteAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 接收返回结果，并返回</span>
    <span class="token class-name"><span class="token keyword">var</span></span> res <span class="token operator">=</span> <span class="token keyword">await</span> call<span class="token punctuation">.</span>ResponseAsync<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">Ok</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>UserList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回结果</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/202112042342071.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="双向流式rpc" tabindex="-1"><a class="header-anchor" href="#双向流式rpc" aria-hidden="true">#</a> 双向流式RPC</h2><p>请求和响应都通过流的方式进行交互</p><p>示例：通过流的方式添加用户并返回用户ID</p><p>修改之前的UserInfoService.proto文件，增加一个方法入参是连续流，服务器将多个结果流式传回调用方。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>syntax <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span> <span class="token comment">//使用的协议</span>

import <span class="token string">&quot;google/protobuf/timestamp.proto&quot;</span><span class="token punctuation">;</span>
import <span class="token string">&quot;google/protobuf/wrappers.proto&quot;</span><span class="token punctuation">;</span>

<span class="token class-name">option</span> csharp_namespace <span class="token operator">=</span> <span class="token string">&quot;UserService.Proto&quot;</span><span class="token punctuation">;</span> <span class="token comment">//命名空间</span>

<span class="token return-type class-name">service</span> UserInfoService<span class="token punctuation">{</span> <span class="token comment">//服务名</span>

	<span class="token comment">//批量添加用户 并返回用户ID   双向流模式，多个请求，返回多个信息</span>
	<span class="token return-type class-name">rpc</span> <span class="token function">AddUserList</span><span class="token punctuation">(</span><span class="token class-name">stream</span> AddUserListRequest<span class="token punctuation">)</span> returns <span class="token punctuation">(</span><span class="token class-name">stream</span> AddUserListResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name">message</span> AddUserListRequest
<span class="token punctuation">{</span>
  <span class="token class-name"><span class="token keyword">string</span></span> account<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//帐号</span>
  <span class="token class-name"><span class="token keyword">string</span></span> name<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">//姓名</span>
  <span class="token class-name">int32</span> sex<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment">//性别</span>
<span class="token punctuation">}</span>

<span class="token return-type class-name">message</span> AddUserListResponse
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">string</span></span> user_id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//用户id</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="服务端-3" tabindex="-1"><a class="header-anchor" href="#服务端-3" aria-hidden="true">#</a> 服务端</h3><p>继承自UserInfoServiceBase并重写AddUserList方法</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserInfoGrpcService</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">UserInfoServiceBase</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 批量添加用户信息（双向流式处理） </span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>requestStream<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>responseStream<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">AddUserList</span><span class="token punctuation">(</span><span class="token class-name">IAsyncStreamReader<span class="token punctuation">&lt;</span>AddUserListRequest<span class="token punctuation">&gt;</span></span> requestStream<span class="token punctuation">,</span>
        <span class="token class-name">IServerStreamWriter<span class="token punctuation">&lt;</span>AddUserListResponse<span class="token punctuation">&gt;</span></span> responseStream<span class="token punctuation">,</span> <span class="token class-name">ServerCallContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//获取请求的用户ID列表</span>
        <span class="token class-name"><span class="token keyword">var</span></span> userInfos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>UserInfo<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">var</span></span> cancel <span class="token operator">=</span> context<span class="token punctuation">.</span>CancellationToken<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">await</span> requestStream<span class="token punctuation">.</span><span class="token function">MoveNext</span><span class="token punctuation">(</span>cancel<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            userInfos<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span>
            <span class="token punctuation">{</span>
                UserId <span class="token operator">=</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                Acount <span class="token operator">=</span> requestStream<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Account<span class="token punctuation">,</span>
                Name <span class="token operator">=</span> requestStream<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>
                Sex <span class="token operator">=</span> requestStream<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>Sex
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//返回用户Id</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> userInfos<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">await</span> responseStream<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AddUserListResponse</span>
            <span class="token punctuation">{</span>
                UserId <span class="token operator">=</span> item<span class="token punctuation">.</span>UserId
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ConfigureAwait</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端-3" tabindex="-1"><a class="header-anchor" href="#客户端-3" aria-hidden="true">#</a> 客户端</h3><p>修改之前的订单服务引用的proto文件，新建一个接口用于获取grpc服务</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 根据用户id获取用户信息（双向流） </span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userIds<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>returns</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>returns</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span>HttpGet<span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>ActionResult<span class="token punctuation">&lt;</span>RepeatedField<span class="token punctuation">&lt;</span>CustomerInfo<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">AddUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//模拟用户添加的数据</span>
    <span class="token class-name"><span class="token keyword">var</span></span> userList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>UserInfo<span class="token punctuation">&gt;</span></span>
    <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> Acount <span class="token operator">=</span> <span class="token string">&quot;admin1&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> Sex <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">,</span> Acount <span class="token operator">=</span> <span class="token string">&quot;admin2&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> Sex <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> <span class="token string">&quot;33&quot;</span><span class="token punctuation">,</span> Acount <span class="token operator">=</span> <span class="token string">&quot;admin3&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span> Sex <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token constructor-invocation class-name">UserInfo</span> <span class="token punctuation">{</span> UserId <span class="token operator">=</span> <span class="token string">&quot;44&quot;</span><span class="token punctuation">,</span> Acount <span class="token operator">=</span> <span class="token string">&quot;admin4&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;赵六&quot;</span><span class="token punctuation">,</span> Sex <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> call <span class="token operator">=</span> _userInfoServiceClient<span class="token punctuation">.</span><span class="token function">AddUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> clientStream <span class="token operator">=</span> call<span class="token punctuation">.</span>RequestStream<span class="token punctuation">;</span>
    <span class="token comment">//循环给服务端发送流</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> userList<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">await</span> clientStream<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AddUserListRequest</span>
        <span class="token punctuation">{</span>
            Account <span class="token operator">=</span> item<span class="token punctuation">.</span>Acount<span class="token punctuation">,</span>
            Name <span class="token operator">=</span> item<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>
            Sex <span class="token operator">=</span> item<span class="token punctuation">.</span>Sex
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 发送完成之后，告诉服务端发送完成</span>
    <span class="token keyword">await</span> clientStream<span class="token punctuation">.</span><span class="token function">CompleteAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token class-name"><span class="token keyword">var</span></span> userIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">var</span></span> cancel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">CancellationToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 接收返回结果，并返回</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">await</span> call<span class="token punctuation">.</span>ResponseStream<span class="token punctuation">.</span><span class="token function">MoveNext</span><span class="token punctuation">(</span>cancel<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        userIds<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>call<span class="token punctuation">.</span>ResponseStream<span class="token punctuation">.</span>Current<span class="token punctuation">.</span>UserId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">Ok</span><span class="token punctuation">(</span>userIds<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回结果</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/202112042343241.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h1 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h1>`,91),r={href:"https://mp.weixin.qq.com/s/4DGZQTCm0DOxRrM8Nna_1w",target:"_blank",rel:"noopener noreferrer"};function k(d,m){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,n("blockquote",null,[n("p",null,[s("微信公众号【Code综艺圈】: "),n("a",r,[s("https://mp.weixin.qq.com/s/4DGZQTCm0DOxRrM8Nna_1w"),c(a)])])])])}const g=t(i,[["render",k],["__file","model.html.vue"]]);export{g as default};
