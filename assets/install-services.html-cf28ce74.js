import{_ as n,W as r,X as d,Y as e,Z as a,$ as s,a0 as t,C as l}from"./framework-63781bb7.js";const c={},o={href:"https://labs.play-with-docker.com/",target:"_blank",rel:"noopener noreferrer"},u=t(`<h1 id="docker可视化" tabindex="-1"><a class="header-anchor" href="#docker可视化" aria-hidden="true">#</a> Docker可视化</h1><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -d -p 9000:9000  --name portainer --restart always  -v /var/run/docker.sock:/var/run/docker.sock --restart=always --name prtainer portainer/portainer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="rabbitmq" tabindex="-1"><a class="header-anchor" href="#rabbitmq" aria-hidden="true">#</a> RabbitMQ</h1><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -d --name myrabbit -p 9005:15672 -p 5672:5672  -e RABBITMQ_DEFAULT_VHOST=customer -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456  rabbitmq:3-management-alpine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>命令说明：</p><p>-d：后台运行</p><p>--name：设置名称</p><p>-p：设置端口</p><p>-e：配置命令</p></blockquote><h1 id="可视化nginx" tabindex="-1"><a class="header-anchor" href="#可视化nginx" aria-hidden="true">#</a> 可视化Nginx</h1><p>部署nginx-gui</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run --name nginxwebui -itd -v /root/nginxWebUI:/home/nginxWebUI -v /var/net:/home/nginxWebUI/data -e BOOT_OPTIONS=&quot;--server.port=9008&quot; --privileged=true --net=host  cym1102/nginxwebui:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="git服务" tabindex="-1"><a class="header-anchor" href="#git服务" aria-hidden="true">#</a> Git服务</h1><h2 id="gitlab" tabindex="-1"><a class="header-anchor" href="#gitlab" aria-hidden="true">#</a> Gitlab</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 挂载
docker run -d  -p 443:443 -p 9006:80 -p 222:22 --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/var/log/gitlab -v /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce

# 不挂载
docker run -d  -p 443:443 -p 9006:80 -p 222:22 --name gitlab gitlab/gitlab-ce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>-d：后台运行</p><p>-p：将容器内部端口向外映射</p><p>--name：命名容器名称</p><p>-v：将容器内数据文件夹或者日志、配置等文件夹挂载到宿主机指定目录</p></blockquote><h2 id="gitea" tabindex="-1"><a class="header-anchor" href="#gitea" aria-hidden="true">#</a> Gitea</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -d --name=gitea -p 10022:22 -p 9004:3000 -v /var/lib/gitea:/data gitea/gitea

docker run -d --privileged=true --restart=always --name=gitea -p 10022:22 -p 9004:3000 -v /var/lib/gitea:/data gitea/gitea
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库" aria-hidden="true">#</a> 数据库</h1><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -p 6379:6379 --name redis -d redis redis-server --appendonly yes --requirepass &quot;123456&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令说明：</p><blockquote><p>-p：宿主机端口与容器端口映射，前面的端口为主机映射端口（需配置服务器安全组），后面的端口为镜像开放的端口</p><p>--restart=always：无论什么情况挂壁，总是重启</p><p>--name：容器名称</p><p>-d：使用指定的镜像，在后台运行容器</p><p>--appendonly yes：redis运行时开启持久化</p><p>--requirepass “123456”：设置redis登陆密码</p></blockquote><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=123456 -e TZ:Asia/Shanghai -d mysql --lower_case_table_names=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="mongodb" tabindex="-1"><a class="header-anchor" href="#mongodb" aria-hidden="true">#</a> MongoDB</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -p 27017:27017 --name mongo -e TZ=Asia/Shanghai -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=123456 -d mongo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="mssql" tabindex="-1"><a class="header-anchor" href="#mssql" aria-hidden="true">#</a> MSSQL</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 拉取镜像
docker pull mcr.microsoft.com/mssql/server:2017-latest

# 查看镜像
docker images

# 启动镜像生成容器 
docker run -e &quot;ACCEPT_EULA=Y&quot; -e &quot;SA_PASSWORD=Sql987654&quot;  -p 1433:1433 --name sqlserver  -d mcr.microsoft.com/mssql/server:2017-latest
或者使用阿里云镜像源
docker run -e &quot;ACCEPT_EULA=Y&quot; -e &quot;SA_PASSWORD=Sql987654&quot;  -p 1433:1433 --name sqlserver  -d registry.cn-hangzhou.aliyuncs.com/zrng/mssql:2019-latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="postgresql" tabindex="-1"><a class="header-anchor" href="#postgresql" aria-hidden="true">#</a> postgresql</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run  -d -p 5432:5432 -e POSTGRES_PASSWORD=123456  postgres 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="监控" tabindex="-1"><a class="header-anchor" href="#监控" aria-hidden="true">#</a> 监控</h1><h2 id="grafana" tabindex="-1"><a class="header-anchor" href="#grafana" aria-hidden="true">#</a> Grafana</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -d -p 3000:3000 grafana/grafana
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,30);function v(m,h){const i=l("ExternalLinkIcon");return r(),d("div",null,[e("blockquote",null,[e("p",null,[a("Docker在线版："),e("a",o,[a("https://labs.play-with-docker.com/"),s(i)])])]),u])}const b=n(c,[["render",v],["__file","install-services.html.vue"]]);export{b as default};
