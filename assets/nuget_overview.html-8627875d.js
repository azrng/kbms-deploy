import{_ as o,V as r,W as p,X as s,Y as a,Z as e,$ as t,C as l}from"./framework-fde89294.js";const c={},i=s("h2",{id:"包源",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#包源","aria-hidden":"true"},"#"),a(" 包源")],-1),d={href:"https://api.nuget.org/v3/index.json",target:"_blank",rel:"noopener noreferrer"},u={href:"https://nuget.cdn.azure.cn/v3/index.json",target:"_blank",rel:"noopener noreferrer"},k=t(`<h2 id="设置多个目标版本" tabindex="-1"><a class="header-anchor" href="#设置多个目标版本" aria-hidden="true">#</a> 设置多个目标版本</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//单个</span>
<span class="token operator">&lt;</span>TargetFramework<span class="token operator">&gt;</span>netstandard2<span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">&lt;</span><span class="token operator">/</span>TargetFramework<span class="token operator">&gt;</span>

<span class="token comment">//多个</span>
<span class="token operator">&lt;</span>PropertyGroup<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>TargetFrameworks<span class="token operator">&gt;</span>netstandard1<span class="token punctuation">.</span><span class="token number">4</span><span class="token punctuation">;</span>net40<span class="token punctuation">;</span>net45<span class="token operator">&lt;</span><span class="token operator">/</span>TargetFrameworks<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>

<span class="token comment">//使用一个范围内的版本</span>
<span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.EntityFrameworkCore.Relational&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;[5.0.5,6.0.0)&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分别对不同的版本引用不同的其他nuget组件</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 引用自：netstandard2<span class="token punctuation">.</span><span class="token number">1</span>  框架 <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token class-name">ItemGroup</span> Condition<span class="token operator">=</span><span class="token string">&quot;&#39;$(TargetFramework)&#39;==&#39;netstandard2.1&#39;&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.DependencyInjection.Abstractions&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.1.9&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Http&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;3.1.9&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Newtonsoft.Json&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;12.0.3&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 引用自：net5<span class="token punctuation">.</span><span class="token number">0</span>  框架 <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token class-name">ItemGroup</span> Condition<span class="token operator">=</span><span class="token string">&quot;&#39;$(TargetFramework)&#39;==&#39;net5.0&#39;&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.DependencyInjection.Abstractions&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.Extensions.Http&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;5.0.0&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Newtonsoft.Json&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;13.0.1&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ItemGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="针对目标框架编译" tabindex="-1"><a class="header-anchor" href="#针对目标框架编译" aria-hidden="true">#</a> 针对目标框架编译</h2><p>在库或者应用中，使用预处理器指令编写条件代码，针对各个目标框架进行编译：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token preprocessor property">#<span class="token directive keyword">if</span> </span><span class="token return-type class-name">NET40</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Target framework: .NET Framework 4.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">elif</span> </span><span class="token return-type class-name">NET45</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Target framework: .NET Framework 4.5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">else</span></span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Target framework: .NET Standard 1.4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token preprocessor property">#<span class="token directive keyword">endif</span></span>

<span class="token preprocessor property">#<span class="token directive keyword">if</span> !NETSTANDARD2_1 &amp;&amp; !NETSTANDARD2_0</span>
xxx
<span class="token preprocessor property">#<span class="token directive keyword">endif</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>.NET 目标框架的预处理器符号的完整列表如下：</p><table><thead><tr><th><strong>目标框架</strong></th><th><strong>符号</strong></th></tr></thead><tbody><tr><td>.NET Framework</td><td>NETFRAMEWORK, NET48, NET472, NET471, NET47, NET462, NET461, NET46, NET452, NET451, NET45, NET40, NET35, NET20</td></tr><tr><td>.NET Standard</td><td>NETSTANDARD, NETSTANDARD2_1, NETSTANDARD2_0, NETSTANDARD1_6, NETSTANDARD1_5, NETSTANDARD1_4, NETSTANDARD1_3, NETSTANDARD1_2, NETSTANDARD1_1, NETSTANDARD1_0</td></tr><tr><td>.NET 5（和 .NET Core）</td><td>NET5_0, NETCOREAPP, NETCOREAPP3_1, NETCOREAPP3_0, NETCOREAPP2_2, NETCOREAPP2_1, NETCOREAPP2_0, NETCOREAPP1_1, NETCOREAPP1_0</td></tr></tbody></table><h2 id="兼容老方法" tabindex="-1"><a class="header-anchor" href="#兼容老方法" aria-hidden="true">#</a> 兼容老方法</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Obsolete</span></span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="预发行包" tabindex="-1"><a class="header-anchor" href="#预发行包" aria-hidden="true">#</a> 预发行包</h2><p>为了支持软件的版本生命周期，NuGet 1.6 及更高版本允许分配预发行包，其中的版本号包括语义化版本控制后缀，如 -alpha、-beta 或 -rc。</p><ul><li>-alpha：Alpha 版本，通常用于在制品和试验品</li><li>-beta：Beta 版本，通常指可用于下一计划版本的功能完整的版本，但可能包含已知 bug。</li><li>-rc：候选发布，通常可能为最终（稳定）版本，除非出现重大 bug。</li></ul><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span>PropertyGroup<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>PackageVersion<span class="token operator">&gt;</span><span class="token number">1.0</span><span class="token number">.1</span><span class="token operator">-</span>alpha<span class="token operator">&lt;</span><span class="token operator">/</span>PackageVersion<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>PropertyGroup<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="语义化版本控制" tabindex="-1"><a class="header-anchor" href="#语义化版本控制" aria-hidden="true">#</a> 语义化版本控制</h2><p>有一种称为“语义化版本控制”的行业标准。 语义化版本控制是指如何表达你或其他开发人员向库引入的更改类型。 语义化版本控制的工作原理是确保包具有版本号，并且该版本号划分为以下部分：</p><ul><li><strong>主版本</strong>。 最左边的数字。 例如 1.0.0 中的 1。 此数字发生更改意味着代码可能出现中断性变更。 可能需要重写部分代码。</li><li><strong>次要版本</strong>。 中间的数字。 例如 1.2.0 中的 2。 此数字发生更改意味着添加了新功能。 你的代码仍可正常工作。 接受更新通常是安全的。</li><li><strong>修补程序版本</strong>。 最右边的数字。 例如 1.2.3 中的 3。 此数字发生更改意味着应用了一个更改，修复了代码中应正常工作的内容。 接受更新应是安全的。</li></ul><p>下表说明了每个版本类型的版本号如何更改：</p><p>使用语义化版本控制</p><table><thead><tr><th>类型</th><th>发生的更改</th></tr></thead><tbody><tr><td>主版本</td><td>1.0.0 更改为 2.0.0</td></tr><tr><td>次要版本</td><td>1.1.1 更改为 1.2.0</td></tr><tr><td>修补程序版本</td><td>1.0.1 更改为 1.0.2</td></tr></tbody></table>`,21),g={href:"https://semver.org/lang/zh-CN/",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="版本范围" tabindex="-1"><a class="header-anchor" href="#版本范围" aria-hidden="true">#</a> 版本范围</h2><p>引用包依赖项时，NuGet 支持使用间隔表示法来指定版本范围，汇总如下：</p><table><thead><tr><th>Notation</th><th>应用的规则</th><th>描述</th></tr></thead><tbody><tr><td>1.0</td><td>x ≥ 1.0</td><td>最低版本（包含）</td></tr><tr><td>(1.0,)</td><td>x &gt; 1.0</td><td>最低版本（独占）</td></tr><tr><td>[1.0]</td><td>x == 1.0</td><td>精确的版本匹配</td></tr><tr><td>(,1.0]</td><td>x ≤ 1.0</td><td>最高版本（包含）</td></tr><tr><td>(,1.0)</td><td>x &lt; 1.0</td><td>最高版本（独占）</td></tr><tr><td>[1.0,2.0]</td><td>1.0 ≤ x ≤ 2.0</td><td>精确范围（包含）</td></tr><tr><td>(1.0,2.0)</td><td>1.0 &lt; x &lt; 2.0</td><td>精确范围（独占）</td></tr><tr><td>[1.0,2.0)</td><td>1.0 ≤ x &lt; 2.0</td><td>混合了最低版本（包含）和最高版本（独占）</td></tr><tr><td>(1.0)</td><td>无效</td><td>无效</td></tr></tbody></table><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token operator">&lt;</span><span class="token class-name">PackageReference</span> Include<span class="token operator">=</span><span class="token string">&quot;Microsoft.EntityFrameworkCore.Relational&quot;</span> Version<span class="token operator">=</span><span class="token string">&quot;[5.0.5,6.0.0)&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>`,5),h={href:"https://docs.microsoft.com/zh-cn/nuget/what-is-nuget",target:"_blank",rel:"noopener noreferrer"};function m(b,N){const n=l("ExternalLinkIcon");return r(),p("div",null,[i,s("p",null,[a("默认的源地址为："),s("a",d,[a("https://api.nuget.org/v3/index.json"),e(n)])]),s("p",null,[a("国内的源："),s("a",u,[a("https://nuget.cdn.azure.cn/v3/index.json"),e(n)])]),k,s("p",null,[a("语义化版本："),s("a",g,[a("https://semver.org/lang/zh-CN/"),e(n)])]),v,s("p",null,[a("官网地址："),s("a",h,[a("https://docs.microsoft.com/zh-cn/nuget/what-is-nuget"),e(n)])])])}const E=o(c,[["render",m],["__file","nuget_overview.html.vue"]]);export{E as default};
