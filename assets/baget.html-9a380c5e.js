import{_ as r,W as s,X as d,Y as e,Z as a,$ as i,a0 as n,C as c}from"./framework-63781bb7.js";const o={},l=e("h1",{id:"包管理服务baget",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#包管理服务baget","aria-hidden":"true"},"#"),a(" 包管理服务BaGet")],-1),g=e("h1",{id:"_1-介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-介绍","aria-hidden":"true"},"#"),a(" 1. 介绍")],-1),p=e("p",null,"BaGet是一个轻量级的包管理服务。有些时候公司或者个人不希望某一些包进行公开，那么就需要使用私有的包管理服务程序，该服务是用.netcore进行编写的(感谢开发者为社区做出的共享)",-1),h={href:"https://github.com/loic-sharma/BaGet",target:"_blank",rel:"noopener noreferrer"},u={href:"https://loic-sharma.github.io/BaGet/",target:"_blank",rel:"noopener noreferrer"},b=n(`<h1 id="_2-docker部署" tabindex="-1"><a class="header-anchor" href="#_2-docker部署" aria-hidden="true">#</a> 2. Docker部署</h1><p>创建配置文件baget.env</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># The following config is the API Key used to publish packages.
# You should change this to a secret value to secure your server.
ApiKey=63edf12c-b70c-45c7-b3ed-f53c9f791e26 # 随机生成，上传包时候使用

Storage__Type=FileSystem
Storage__Path=E:\\nuget # windows下的写法
Database__Type=Sqlite
Database__ConnectionString=Data Source=/var/baget/baget.db
Search__Type=Database
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在当前目录下执行</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># linux
docker run -d --name BaGet-nuget -p 9002:80 --env-file baget.env -v &quot;$(pwd)/baget-data:/var/baget&quot; loicsharma/baget:latest

# windows
docker run -d --name BaGet-nuget -p 9002:80 --env-file baget.env -v &quot;E://nuget//baget-data:/var/baget&quot; loicsharma/baget:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-简单使用" tabindex="-1"><a class="header-anchor" href="#_3-简单使用" aria-hidden="true">#</a> 3. 简单使用</h1><h2 id="_3-1-访问" tabindex="-1"><a class="header-anchor" href="#_3-1-访问" aria-hidden="true">#</a> 3.1 访问</h2><p>通过访问地址： localhost:9002 进入主界面</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1618583664812-41eee20b-f1fa-4fcb-b47c-2543605cda34.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>`,9),m={href:"https://www.nuget.org/",target:"_blank",rel:"noopener noreferrer"},f=n(`<figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1618583720855-7c7ac08c-5786-4e00-b382-9120ec2d73bd.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>右键进行打包，可以通过右键属性进行修改包的参数</p><h2 id="_3-2-推送" tabindex="-1"><a class="header-anchor" href="#_3-2-推送" aria-hidden="true">#</a> 3.2 推送</h2><p>官方提供了四种方式</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1618582940189-6b28c743-83b6-46a2-a195-218d0bebc4ad.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>下面只对其中我个人习惯的方法做示例</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># .net cli
dotnet nuget push -s http://localhost:9002/v3/index.json UserLib.1.0.1.nupkg  --api-key  63edf12c-b70c-45c7-b3ed-f53c9f791e26
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用cmd</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1618583051937-75725a1f-f677-4968-8a75-86ee8a66fd54.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>注：</p><p>1.包版本要写对</p><p>2.命令需要在包的目录下执行</p><p>3.需要填写baget.env文件里面的api-key</p><p>打开网页端查看</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1618583330262-60b6543c-d67b-45ba-90ec-a64fbf5d1095.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="_3-3-引用包" tabindex="-1"><a class="header-anchor" href="#_3-3-引用包" aria-hidden="true">#</a> 3.3 引用包</h2><p>在我们想引用包的项目里面打开包管理器</p><p>添加程序包源</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1618583401944-fcce6270-3d63-444f-873f-e18b551f3f9f.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>然后搜索我们的nuget包</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/1618583441712-57395fc7-1282-422b-afe8-844d8331e007.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>安装后就可以使用了</p><h1 id="_4-参考文档" tabindex="-1"><a class="header-anchor" href="#_4-参考文档" aria-hidden="true">#</a> 4. 参考文档</h1>`,23),v={href:"https://mp.weixin.qq.com/s/xF5K2U3OhF7I9moGMeOibw",target:"_blank",rel:"noopener noreferrer"};function _(x,k){const t=c("ExternalLinkIcon");return s(),d("div",null,[l,g,p,e("p",null,[a("Github："),e("a",h,[a("https://github.com/loic-sharma/BaGet"),i(t)])]),e("p",null,[a("官网："),e("a",u,[a("https://loic-sharma.github.io/BaGet/"),i(t)])]),b,e("p",null,[a("界面和 "),e("a",m,[a("https://www.nuget.org/"),i(t)]),a(" 很相似。下面我们就开始随便创建一个类库然后打包推送")]),f,e("p",null,[a("轻量NuGet服务—GaGet："),e("a",v,[a("https://mp.weixin.qq.com/s/xF5K2U3OhF7I9moGMeOibw"),i(t)])])])}const G=r(o,[["render",_],["__file","baget.html.vue"]]);export{G as default};
