const e=JSON.parse('{"key":"v-791b0205","path":"/interview/redis.html","title":"Redis面试题","lang":"zh-CN","frontmatter":{"title":"Redis面试题","date":"2023-03-24T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"order":8,"category":["面试"],"tag":["面试题"],"description":"1、Redis 有哪几种数据淘汰策略？ 答： noeviction:返回错误当内存限制达到，并且客户端尝试执行会让更多内存被使用的命令。 allkeys-lru: 尝试回收最少使用的键（LRU），使得新添加的数据有空间存放。 volatile-lru: 尝试回收最少使用的键（LRU），但仅限于在过期集合的键,使得新添加的数据有空间存放。 allkeys-random: 回收随机的键使得新添加的数据有空间存放。 volatile-random: 回收随机的键使得新添加的数据有空间存放，但仅限于在过期集合的键。 volatile-ttl: 回收在过期集合的键，并且优先回收存活时间（TTL）较短的键,使得新添加的数据有空间存放。","head":[["meta",{"property":"og:url","content":"https://kbms.vercel.app/interview/redis.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"Redis面试题"}],["meta",{"property":"og:description","content":"1、Redis 有哪几种数据淘汰策略？ 答： noeviction:返回错误当内存限制达到，并且客户端尝试执行会让更多内存被使用的命令。 allkeys-lru: 尝试回收最少使用的键（LRU），使得新添加的数据有空间存放。 volatile-lru: 尝试回收最少使用的键（LRU），但仅限于在过期集合的键,使得新添加的数据有空间存放。 allkeys-random: 回收随机的键使得新添加的数据有空间存放。 volatile-random: 回收随机的键使得新添加的数据有空间存放，但仅限于在过期集合的键。 volatile-ttl: 回收在过期集合的键，并且优先回收存活时间（TTL）较短的键,使得新添加的数据有空间存放。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-30T11:02:46.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"面试题"}],["meta",{"property":"article:published_time","content":"2023-03-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-30T11:02:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis面试题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-30T11:02:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1688122966000,"updatedTime":1688122966000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":6.53,"words":1958},"filePathRelative":"interview/redis.md","localizedDate":"2023年3月24日","excerpt":"<p><strong>1、Redis 有哪几种数据淘汰策略？</strong></p>\\n<p>答：</p>\\n<ul>\\n<li>noeviction:返回错误当内存限制达到，并且客户端尝试执行会让更多内存被使用的命令。</li>\\n<li>allkeys-lru: 尝试回收最少使用的键（LRU），使得新添加的数据有空间存放。</li>\\n<li>volatile-lru: 尝试回收最少使用的键（LRU），但仅限于在过期集合的键,使得新添加的数据有空间存放。</li>\\n<li>allkeys-random: 回收随机的键使得新添加的数据有空间存放。</li>\\n<li>volatile-random: 回收随机的键使得新添加的数据有空间存放，但仅限于在过期集合的键。</li>\\n<li>volatile-ttl: 回收在过期集合的键，并且优先回收存活时间（TTL）较短的键,使得新添加的数据有空间存放。</li>\\n</ul>","autoDesc":true}');export{e as data};
