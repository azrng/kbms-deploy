const e=JSON.parse('{"key":"v-57a6b598","path":"/interview/rabbitmq.html","title":"RabbitMQ面试题","lang":"zh-CN","frontmatter":{"title":"RabbitMQ面试题","date":"2023-03-24T00:00:00.000Z","publish":true,"author":"azrng","isOriginal":true,"order":10,"category":["面试"],"tag":["面试题"],"description":"1、如何保证RabbitMQ消息的顺序性？ 答： 拆分多个 queue(消息队列)，每个 queue(消息队列) 一个 consumer(消费者)，就是多一些 queue (消息队列)而已，确实是麻烦点； 或者就一个 queue (消息队列)但是对应一个 consumer(消费者)，然后这个 consumer(消费者)内部用内存队列做排队，然后分发给底层不同的 worker 来处理。 2、消息如何分发？ 答： 若该队列至少有一个消费者订阅，消息将以循环（round-robin）的方式发送给消费者。每条消息只会分发给一个订阅的消费者（前提是消费者能够正常处理消息并进行确认）。通过路由可实现多消费的功能","head":[["meta",{"property":"og:url","content":"https://kbms.vercel.app/interview/rabbitmq.html"}],["meta",{"property":"og:site_name","content":"知识库"}],["meta",{"property":"og:title","content":"RabbitMQ面试题"}],["meta",{"property":"og:description","content":"1、如何保证RabbitMQ消息的顺序性？ 答： 拆分多个 queue(消息队列)，每个 queue(消息队列) 一个 consumer(消费者)，就是多一些 queue (消息队列)而已，确实是麻烦点； 或者就一个 queue (消息队列)但是对应一个 consumer(消费者)，然后这个 consumer(消费者)内部用内存队列做排队，然后分发给底层不同的 worker 来处理。 2、消息如何分发？ 答： 若该队列至少有一个消费者订阅，消息将以循环（round-robin）的方式发送给消费者。每条消息只会分发给一个订阅的消费者（前提是消费者能够正常处理消息并进行确认）。通过路由可实现多消费的功能"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-30T11:02:46.000Z"}],["meta",{"property":"article:author","content":"azrng"}],["meta",{"property":"article:tag","content":"面试题"}],["meta",{"property":"article:published_time","content":"2023-03-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-30T11:02:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RabbitMQ面试题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-30T11:02:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"azrng\\"}]}"]]},"headers":[],"git":{"createdTime":1688122966000,"updatedTime":1688122966000,"contributors":[{"name":"zhangyunpeng","email":"zhang.yunpeng@synyi.com","commits":1}]},"readingTime":{"minutes":13.29,"words":3988},"filePathRelative":"interview/rabbitmq.md","localizedDate":"2023年3月24日","excerpt":"<p><strong>1、如何保证RabbitMQ消息的顺序性？</strong></p>\\n<p>答：</p>\\n<ul>\\n<li>拆分多个 queue(消息队列)，每个 queue(消息队列) 一个 consumer(消费者)，就是多一些 queue (消息队列)而已，确实是麻烦点；</li>\\n<li>或者就一个 queue (消息队列)但是对应一个 consumer(消费者)，然后这个 consumer(消费者)内部用内存队列做排队，然后分发给底层不同的 worker 来处理。</li>\\n</ul>\\n<p><strong>2、消息如何分发？</strong></p>\\n<p>答：</p>\\n<ul>\\n<li>若该队列至少有一个消费者订阅，消息将以循环（round-robin）的方式发送给消费者。每条消息只会分发给一个订阅的消费者（前提是消费者能够正常处理消息并进行确认）。通过路由可实现多消费的功能</li>\\n</ul>","autoDesc":true}');export{e as data};
