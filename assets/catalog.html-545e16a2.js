import{_ as i,W as t,X as r,a0 as l}from"./framework-63781bb7.js";const e={},n=l('<h1 id="常见的目录文件命令" tabindex="-1"><a class="header-anchor" href="#常见的目录文件命令" aria-hidden="true">#</a> 常见的目录文件命令</h1><p>Linux 下以一个多级树状结构来组织目录和文件的， 最顶层的就是根目录， 使用 *<em>*</em> 表示， 目录、文件都在根目录下。 对 Linux 的操作归根结底就是对 Linux 文件的操作， 所以我们需要掌握常见的对 Linux 文件目录操作的命令。</p><h1 id="linux-目录管理命令" tabindex="-1"><a class="header-anchor" href="#linux-目录管理命令" aria-hidden="true">#</a> <strong>Linux 目录管理命令</strong></h1><p>目录是 Linux 的基本组成部分， 目录管理包括目录的复制、删除、修改等操作。Linux 最顶层目录就是根目录 /。</p><h2 id="绝对路径和相对路径" tabindex="-1"><a class="header-anchor" href="#绝对路径和相对路径" aria-hidden="true">#</a> <strong>绝对路径和相对路径</strong></h2><p>绝对路径： 一定是由根目录 / 开头， 如 /etc/yum.conf</p><p>相对路径：当前路径的相对位置， 如当前目录 /etc， 目录下 yum.conf 可以表示为 **./**yum.conf</p><ul><li><strong>.</strong> 或 <strong>./</strong> 表示当前路径</li><li><strong>..</strong> 或 <strong>../</strong> 表示上一级目录</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440360.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="切换工作目录-cd" tabindex="-1"><a class="header-anchor" href="#切换工作目录-cd" aria-hidden="true">#</a> <strong>切换工作目录 - cd</strong></h2><p>cd - change directory 的缩写， cd 命令用于切换工作目录。我们操作某个文件之前是需要先切换到对应的目录的。</p><p>格式： <strong>cd [绝对路径或相对路径]</strong></p><ul><li>如果不带参数， 回到用户的主目录</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440216.webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="显示当前工作目录-pwd" tabindex="-1"><a class="header-anchor" href="#显示当前工作目录-pwd" aria-hidden="true">#</a> <strong>显示当前工作目录 - pwd</strong></h2><p>pwd - print working directory 的缩写， pwd 命令用于显示当前工作目录的完整路径。</p><p>格式： <strong>pwd [-P]</strong></p><ul><li>-P： 显示真实路径， 而非链接路径， 链接路径类似 Windows 中的快捷方式</li><li><strong>man pwd</strong>： 查看 pwd 命令的帮助信息</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440200.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p><strong>查看当前工作目录文件 - ls</strong></p><p>ls - list 的缩写， ls 命令是<strong>最常用</strong>的命令， 默认情况下用于查看当前工作目录下的清单。</p><p>格式：</p><p>​ <strong>ls [-aAdlfFrSt] 目录名称</strong></p><p>​ <strong>ls [--color={never,auto,always}] 目录名称</strong></p><p>​ <strong>ls [--full-time] 目录名称</strong></p><ul><li><p>-a： 列出全部文件， 包含隐藏文件（以 <strong>.</strong> 开头的）</p></li><li><p>-A： 列出全部文件， 包含隐藏文件（以 <strong>.</strong> 开头的）， 但不包括 <strong>.</strong> 和 <strong>..</strong> 这两个目录</p></li><li><p>-d： 仅列出目录， 而不列出目录下文件</p></li><li><p>-l： 列出详情： 文件类型、文件权限、所有者、组等信息</p></li><li><p>-f： 直接列出结果， 而不进行排序</p></li><li><p>-F： 在每个输出项后面追加文件的类型标识符</p></li><li><ul><li>当文件为普通文件， 不输出任何标识符</li><li>*： 表示具有可执行权限的普通文件</li><li>/： 表示目录</li><li>@： 表示符号链接</li><li>I： 表示命令管道 FIFO</li><li>=： 表示 sockets 套接字</li></ul></li><li><p>r： 将排序结果方向输出</p></li><li><p>S：以文件大小排序，而不是文件名</p></li><li><p>t： 以时间排序，而不是文件名</p></li><li><p>--color=never | always | auto： 列出时 不 | 总是 | 默认 高亮显示</p></li><li><p>--full-time： 列出完整日期时间模式</p></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440335.webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="创建目录-mkdir" tabindex="-1"><a class="header-anchor" href="#创建目录-mkdir" aria-hidden="true">#</a> <strong>创建目录 - mkdir</strong></h2><p>mkdir - make directory 的缩写， mkdir 命令用于创建指定目录， 创建目录时当前用户对需要操作的目录有读写权限， 如果目录已存在， 会提示报错并退出， 也可以创建多级目录。</p><p>格式： <strong>mkdir [-mp] 目录名称</strong></p><ul><li>-m： 在创建目录时直接设置文件权限， 而不是使用默认权限</li><li>-p： 创建多级目录， 一次创建多级目录</li><li><strong>man mkdir</strong>： 查看 mkdir 命令的帮助信息</li></ul><p>使用 -p 参数创建多级目录：</p><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440696.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>使用 -m 设置文件权限， 文件权限下面会讲到：</p><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440725.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="删除空目录-rmdir" tabindex="-1"><a class="header-anchor" href="#删除空目录-rmdir" aria-hidden="true">#</a> <strong>删除空目录 - rmdir</strong></h2><p>rmdir - remove directory 的缩写， rmdir 命令用于删除指定目录， <strong>删除的目录必须为空目录或多级空目录。</strong></p><p>格式： <strong>rmdir [-p] 目录名称</strong></p><ul><li>如果目录内存在文件， 则无法删除</li><li>-p： 连同删除多级目录</li><li><strong>man rmdir</strong>： 查看 rmdir 命令的帮助信息</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440604.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h1 id="linux-文件管理命令" tabindex="-1"><a class="header-anchor" href="#linux-文件管理命令" aria-hidden="true">#</a> Linux 文件管理命令</h1><p>文件是 Linux 的基本组成部分， 文件管理包括文件的复制、删除、修改、移动、复制等操作。</p><h2 id="创建文件或修改文件时间-touch" tabindex="-1"><a class="header-anchor" href="#创建文件或修改文件时间-touch" aria-hidden="true">#</a> <strong>创建文件或修改文件时间 - touch</strong></h2><p>touch 命令可以创建一个新文件， 这是常用的操作， touch 命令还可以修改目录或文件的时间， 文件主要有 3 个变动时间。 ls 命令显示的是文件的 mtime：</p><ul><li>mtime：modification time， 当文件内容发生变更， mtime 会更新</li><li>ctime：status time， 当文件状态发生改变（如权限或属性被更改），ctime 会更新</li><li>atime：access time， 当文件内容被读取（如使用cat读取），atime 会更新</li></ul><p>格式： <strong>touch 【-acdmt】 文件名</strong></p><ul><li>-a：仅修改 atime</li><li>-c：仅修改 atime</li><li>-m：仅修改 mtime</li><li>-d：后接欲修改的日期，也可以使用 --date=&quot;日期或时间&quot;</li><li>-t：后接欲修改的时间，格式为【YYYYMMDDhhmm】</li></ul><p>先创建一个文件 data.cfg，再修改文件时间：</p><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440206.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>先编辑文件 data.cfg 内容，mtime 会更改，载修改文件时间为 2 天前：</p><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440374.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="删除目录或文件-rm" tabindex="-1"><a class="header-anchor" href="#删除目录或文件-rm" aria-hidden="true">#</a> <strong>删除目录或文件 - rm</strong></h2><p>rm - remove 的缩写， rm 命令可以删除不需要的目录或文件， 并且支持通配符：</p><ul><li>目录中存在其他文件会递归删除</li><li>删除软链接只是删除链接， 真实文件或目录不会被删除</li></ul><p>格式： <strong>rm [-fir] 文件或目录</strong></p><ul><li>如不加任何参数， 则不能删除目录</li><li>-f： force 的意思， 忽略不存在的文件， 不会出现警告信息</li><li>-r： 递归删除，将子目录及子目录中文件删除</li><li>-i： 互动模式，在删除前会询问</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440536.webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>使用 rm 命令一定要小心， 文件一旦被删除就不能恢复了。尤其网上的删除跑路段子： rm -rf /</p><h2 id="复制文件-cp" tabindex="-1"><a class="header-anchor" href="#复制文件-cp" aria-hidden="true">#</a> <strong>复制文件 - cp</strong></h2><p>cp - copy 的缩写， cp 命令用来复制文件或目录。</p><p>格式：</p><ul><li><p><strong>cp [-adfiprus] 来源(source) 目标(destination)</strong></p></li><li><p><strong>cp [options] source1 source2 source3 .... directory</strong></p></li><li><p>当复制多个文件时， 目标参数必须为已经存在的目录， 否则报错</p></li><li><p>cp 命令默认不能复制目录， 必须使用 -R 选项</p></li><li><p>-a：相当于 -pdr 的意思，通常在复制目录时使用， 它保留链接、文件属性，并复制目录下的所有内容</p></li><li><p>-f：强制（force），如果目标文件已存在，不会询问直接覆盖</p></li><li><p>-i：若目标已经存在时，在覆盖时会先提示询问</p></li><li><p>-r：递归持续复制，用於目录的复制行为；(常用)</p></li><li><p>-p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中</p></li><li><p>-d：若来源为软链接文件，则复制软链接而非文件本身</p></li><li><p>-u：若 目标 比 源 旧才更新</p></li><li><p>-s： 并不是复制文件本身， 而是创建当前问阿金的软链接</p></li></ul><p>将 /soft/mongodb-linux-x86_64-4.0.3.tgz 复制到 /usr/local 目录下</p><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440833.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="移动文件-mv" tabindex="-1"><a class="header-anchor" href="#移动文件-mv" aria-hidden="true">#</a> <strong>移动文件 - mv</strong></h2><p>mv - move 的缩写， mv 命令可以移动文件或目录到另一个文件后目录， 还可以将目录或文件重命名</p><p>格式：</p><ul><li><p><strong>mv [-fiu] source *<em>directory*</em></strong></p></li><li><p><strong>mv [options] source1 source2 source3 .... directory</strong></p></li><li><p>-f ：强制，如果目标文件已存在，不会询问直接覆盖</p></li><li><p>-i：如果目标文件已存在，会询问是否覆盖</p></li><li><p>-u：如果目标文件已存在，是否 update</p></li><li><p>最后一个参数 <strong>directory</strong> 是目录并且该目录存在</p></li></ul><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440314.webp" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h1 id="linux-文件权限" tabindex="-1"><a class="header-anchor" href="#linux-文件权限" aria-hidden="true">#</a> Linux 文件权限</h1><p>Linux 是一种多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。</p><p>上面是有 mkdir -m 命令可以直接创建目录时设置文件的权限， 下面姐介绍一下文件权限。</p><h2 id="文件权限" tabindex="-1"><a class="header-anchor" href="#文件权限" aria-hidden="true">#</a> <strong>文件权限</strong></h2><p>Linux 中可以使用 ll 或者 ls –l 命令来显示一个文件的属性以及文件所属的用户和组，如：</p><blockquote><p>ls - l</p></blockquote><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440419.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>从上图可知，文件权限是类似 【lrwxrwxrwx】的 10 个字符表示的，它们每一位都是有含义的， 位数以 0 - 9 表示：</p><table><thead><tr><th><strong>文件类型</strong></th><th><strong>属主权限</strong></th><th><strong>属组权限</strong></th><th><strong>其他用户权限</strong></th></tr></thead><tbody><tr><td>0</td><td>1 ，2，3</td><td>4，5，6，</td><td>7，8，9</td></tr></tbody></table><p>Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限：</p><ul><li>属主：文件的创建者，对文件具有所有权</li><li>属组：跟文件所有者在同一组的用户</li><li>其他：跟文件所有者不在同一组的用户</li></ul><p>0 位表示文件类型， 不同的字符表示不同的文件类型，有下面几种：</p><ul><li>d：表示是一个目录，如上图中的 boot</li><li>-：表示是一个文件</li><li>l：表示是一个链接文件（link file），类似 Windows 中的快捷方式</li><li>b：表示是设备文件里可供储存的接口设备（可随机存取装置）</li><li>c：表示是设备文件里串行端口设备，如键盘、鼠标</li></ul><p>1 - 9 以 3 个为一组， 每一组为 rwx 三个参数的组合，rwx 的位置是不变的：</p><ul><li>r：表示可读 - read</li><li>w：表示可写入 - write</li><li>x：表示可执行 - execute</li><li>-：如果没有权限，就会出现 - 号</li></ul><p>以一个例子说明：</p><figure><img src="https://cdn.jsdelivr.net/gh/azrng/file/blog/202212101440963.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><blockquote><p>-rw-r--r--</p></blockquote><ul><li>0 位：表示这是一个文件</li><li>123 位：表示文件所有者可读、可写</li><li>456 位：表示同组用户只读</li><li>789 位：表示其他用户只读</li></ul><p>文件权限对一个系统的安全是很重要的，那怎么修改文件权限？</p><h2 id="更改文件属组-chgrp" tabindex="-1"><a class="header-anchor" href="#更改文件属组-chgrp" aria-hidden="true">#</a> <strong>更改文件属组 - chgrp</strong></h2><p>chgrp：change group 的缩写，修改文件属于哪一个组，Linux 群组名都记录在 /etc/group 文件中，要改变的群组名必须在 /etc/group 文件中，否则会显示错误</p><p>比如修改文件 f 的属组修改成 群组 A，则群组 A 名称必须记录在 /etc/group 文件中。</p><p>格式：<strong>chgrp [-R] 属组名 文件名</strong></p><ul><li>-R：递归更改文件属组。在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改</li></ul><h2 id="更改文件属主-chown" tabindex="-1"><a class="header-anchor" href="#更改文件属主-chown" aria-hidden="true">#</a> <strong>更改文件属主 - chown</strong></h2><p>chown：change owner的缩写，修改文件的所有者，同时也可以修改文件的属组。</p><p>格式：</p><ul><li><p><strong>chown [–R] 属主名 文件名</strong></p></li><li><p><strong>chown [-R] 属主名：属组名 文件名</strong></p></li><li><p>-R：递归更改文件属主或属组。在更改某个目录文件的属组时，如果加上-R的参数，那么该目录下的所有文件的属组都会更改</p></li></ul><h2 id="以数字形式修改文件权限-chmod" tabindex="-1"><a class="header-anchor" href="#以数字形式修改文件权限-chmod" aria-hidden="true">#</a> <strong>以数字形式修改文件权限 - chmod</strong></h2><p>格式： <strong>chmod [-R] xyz 文件或目录</strong></p><ul><li>xyz : 数字类型的权限属性，为 rwx 属性数值的相加。</li><li>-R : 递归更改</li></ul><p>【rwx】权限数字对照表：</p><table><thead><tr><th style="text-align:center;">r</th><th style="text-align:center;">4</th></tr></thead><tbody><tr><td style="text-align:center;">w</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;">x</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:center;">0</td></tr></tbody></table><p>权限计算：</p><p>每种身份（owner、group、other）均有各自的【rwx】权限，每种身份的权限数字需要【rwx】相加</p><p>如权限【-rwxrwx---】分数则是：</p><ul><li>owner = rwz = 4 + 2 + 1 = 7</li><li>group = rwz = 4 + 2 + 1 = 7</li><li>other = --- = 0 + 0 + 0 = 0</li></ul><p>所以变更权限语句为：<strong>chmod 770 test</strong></p><h2 id="以字符形式修改文件权限-chmod" tabindex="-1"><a class="header-anchor" href="#以字符形式修改文件权限-chmod" aria-hidden="true">#</a> <strong>以字符形式修改文件权限 - chmod</strong></h2><p>三种身份（owner、group、other）字符对照表：</p><table><thead><tr><th style="text-align:center;">owner/user</th><th style="text-align:center;">u</th></tr></thead><tbody><tr><td style="text-align:center;">group</td><td style="text-align:center;">g</td></tr><tr><td style="text-align:center;">other</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;">all</td><td style="text-align:center;">a</td></tr></tbody></table><p>权限计算：</p><figure><img src="https://gitee.com/AZRNG/picture-storage/raw/master/kbms/202112121119547.webp" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><p>如将文件权限设置为：-rwxr-xr--</p><p>语句：<strong>chmod u=rwx,g=rx,o=r test1</strong></p><p>如拿掉全部人的可执行权限：<strong>chmod a-x test1</strong></p><p>Linux 目录和文件基本常见命令介绍到此。</p><h1 id="文章来源" tabindex="-1"><a class="header-anchor" href="#文章来源" aria-hidden="true">#</a> 文章来源</h1><p>本文转载自微信公众号[代码国度]</p>',119),a=[n];function o(p,g){return t(),r("div",null,a)}const s=i(e,[["render",o],["__file","catalog.html.vue"]]);export{s as default};
